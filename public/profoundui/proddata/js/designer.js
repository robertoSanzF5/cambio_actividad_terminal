function ja() {
    return function (b) {
        return b
    }
}

function ra() {
    return function () {
    }
}

function za(b) {
    return function () {
        return b
    }
}

var Q = "dspf", Ca = "dspfDesigner0", Ha = "dspfDesigner", Ja = "OFF";
var Ka = 0, Ma = -20, Na = [], Oa = [], Va = [], Xa = {};
Q == "genie" && window.parent == window && window.history.forward(1);
window.pui = {};
var bb = navigator.userAgent.toLowerCase();
pui.is_ie = false;
pui.is_opera = bb.indexOf("opera") != -1 || bb.indexOf("opr/") != -1;
pui.is_chrome = bb.indexOf("chrome") != -1;
pui.is_safari = !pui.is_chrome && bb.indexOf("safari") != -1;
pui.is_firefox = bb.indexOf("firefox") != -1;
pui.is_android = bb.indexOf("android") != -1;
pui.is_quirksmode = document.compatMode == "BackCompat";
pui.is_ios = bb.indexOf("iphone") != -1 || bb.indexOf("ipad") != -1 || bb.indexOf("ipod") != -1;
var fb, hb, ib, mb;
fb = /trident\/([0-9]{1,}[.0-9]{0,})/;
mb = fb.exec(bb);
if (mb != null) hb = parseFloat(mb[1]);
if (!pui.is_opera) {
    fb = /msie ([0-9]{1,}[.0-9]{0,})/;
    mb = fb.exec(bb);
    if (mb != null) ib = parseFloat(mb[1])
}
if (hb || ib) {
    pui.is_ie = true;
    pui.ie_mode = ib || hb + 4;
    if (pui.ie_mode < 11) pui.is_old_ie = true;
    pui.ie_version = hb ? hb + 4 : ib
}
pui.secLevel = 0;
pui.Se = null;
pui.ac = null;
pui.Ob = null;
pui.defaultDateFormat = "MM/DD/YY";
pui.is_touch = "ontouchstart" in window;
pui.touchDevice = pui.is_touch;
pui.is_mouse_capable = false;
pui.designer = {};
pui.designer["initial keywords"] = [];
pui.designer.currentDisplay = {};
pui.ide = {};
pui.cloud = {};
pui.cloud.views = {};
pui.social = {};
pui.cnv = {};
pui.cnv.r = {};
pui.yi = {};
pui.toolbox = {};
pui.toolbox.add = ra();
pui["field exit key"] = 107;
pui["no connection status"] = false;
pui["client side timeout"] = true;
pui.Aw = {"*ISO": 1, "*USA": 2, "*EUR": 3, "*JIS": 4, "*MDY": 5, "*DMY": 6, "*YMD": 7, "*JUL": 8, "*JOB": 10};
pui.Bw = {"/": 1, "-": 2, ".": 3, ",": 4, " ": 5, "*BLANK": 5, "*JOB": 7};
pui.Cw = {"*ISO": 1, "*USA": 2, "*EUR": 3, "*JIS": 4, "*HMS": 9};
pui.Dw = {".": 3, ",": 4, " ": 5, "*BLANK": 5, ":": 6, "*JOB": 7};
pui.Na = false;
pui.bG = null;
pui["function key pattern"] = "^(F|CA|CF|CK|CMD)([0-9]{1,2})([=:-])(.*)$";
pui["special key pattern"] = "^(Enter|PageUp|PageDown|Rollup|RollDown|RollDn|PgUp|PgDn|Help|Print)([=-])(.*)$";
pui.vv = 0;
pui["session timeout retries"] = 0;
pui.AL = 0;
pui.vn = false;
pui.xu = "application/vnd.openxmlformats";
pui.cl = pui.xu + "-officedocument.spreadsheetml";
pui.Oh = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>';
pui.Wl = "http://schemas.openxmlformats.org";
pui.Qr = pui.Wl + "/spreadsheetml/2006/main";
pui.Pr = pui.Wl + "/package/2006/relationships";
pui.Ig = pui.Wl + "/officeDocument/2006/relationships";
pui.Mo = "http://www.w3.org/2000/svg";
pui.Wu = {};
pui["text file name pattern"] = /.+\.(css|js|json|html|htm|xml|txt|csv|sh|md|sql|scn|lst|xml|conf|php|log|ts|less|scss|cpp|ejs)$/i;
pui["always allow field exit"] = false;
pui.dup = {};
pui.dup["char"] = "\u25cf";
pui.dup.keyCode = 45;
pui.dup.shift = true;
pui.dup.ctrl = false;
pui.dup.alt = false;
window.pui || (window.pui = {});
window.pui.baseVersion = "6";
window.pui.fixPackVersion = "3.3";
window.pui.version = window.pui.baseVersion + "." + window.pui.fixPackVersion;

function vb(b) {
    var a;
    if (!b) b = window.event;
    if (b.touches != null && b.touches.length == 1) return b.touches[0].target;
    if (b.target) a = b.target; else if (b.srcElement) a = b.srcElement;
    if (a.nodeType == 3) a = a.parentNode;
    return a
}

function yb(b) {
    if (!b) b = window.event;
    if (window.event) {
        window.event.cancelBubble = true;
        window.event.returnValue = false
    }
    if (b.preventDefault) {
        b.cancelBubble = true;
        b.preventDefault()
    }
}

function zb(b) {
    if (pui.is_old_ie && pui.ie_mode >= 5) {
        b.cancelBubble = true;
        b.returnValue = false;
        b.preventDefault && b.preventDefault();
        b.stopPropagation && b.stopPropagation()
    } else {
        b.preventDefault();
        b.stopPropagation()
    }
}

function Fb(b) {
    if (!b) b = window.event;
    if ((b.srcElement || b.target).Qe == null) Mb(Array(8, 9, 13, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 123, 144, 145, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123), b)
}

function Pb(b) {
    if (!b) b = window.event;
    if ((b.srcElement || b.target).Qe == null) Mb(Array(8, 9, 13, 16, 17, 18, 19, 20, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 112, 123, 144, 145, 188, 190, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 189, 109), b)
}

function Qb(b) {
    if (!b) b = window.event;
    if ((b.srcElement || b.target).Qe == null) Mb(Array(8, 9, 13, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 112, 123, 144, 145, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 189, pui["field exit key"]), b)
}

function Rb(b) {
    for (var a = Array(256), c = 0; c <= 255; c++) a[c] = c;
    if (!b) b = window.event;
    Mb(a, b)
}

function Sb(b) {
    var a;
    if (typeof b == "string") b = Tb(b);
    if (b == null) return -1;
    if (b.tagName != "INPUT" || !pui.vi(b)) return -1;
    if (document.selection != null) {
        if (b == null) b = document.activeElement;
        a = document.selection.createRange()
    }
    var c = 0;
    if (b != null && a != null && b.createTextRange != null) try {
        var d = b.createTextRange();
        if (d) {
            for (; a.compareEndPoints("StartToStart", d) > 0;) {
                d.moveStart("character", 1);
                c++
            }
            return c
        }
    } catch (e) {
        return -1
    } else if (b != null) try {
        if (b.selectionStart != null) return b.selectionStart
    } catch (f) {
    }
    return -1
}

function Ub() {
    if (R == null) return false;
    if (R.designer == null) return false;
    return true
}

function Vb(b, a) {
    var c, d = "", e = "", f, h = false;
    if (b.Vc() != 200) {
        c = "HTTP " + b.Vc();
        d = b.xj() + "."
    } else {
        h = b.jc().indexOf("<?xml") != -1;
        if (h == false) try {
            f = eval("(" + b.jc() + ")");
            if (f.success != true) {
                c = f.errorId;
                d = f.errorText;
                e = f.errorText2
            }
        } catch (g) {
            c = "CPF9897";
            d = "The server response is missing or invalid."
        }
    }
    if (c != null) {
        Oa.push({wq: a, id: c, text: d, Br: e});
        return false
    } else return h == true ? b.jc() : f.response
}

function Yb(b, a) {
    var c = document.createElement("div");
    c.style.position = "absolute";
    c.style.borderStyle = "none";
    c.style.backgroundColor = "transparent";
    c.innerHTML = '<label for="' + b.id + '">' + a + "</label>";
    c.className = "label-for";
    var d = Zb(b.className.split(" ")[0]);
    d != "" && pui.ya(c, "label-for-" + d);
    c.style.zIndex = b.currentStyle ? b.currentStyle.zIndex : window.getComputedStyle ? document.defaultView.getComputedStyle(b, null).getPropertyValue("z-index") : 20;
    var e, f = b.offsetWidth;
    if (f < 20) f = 20;
    b.Hi = null;
    if (pui.da(b.style.top) ||
        pui.da(b.style.left) || pui.da(b.style.bottom) || pui.da(b.style.right)) {
        d = b.offsetTop;
        e = b.offsetLeft;
        if (b.parentNode.getAttribute("container") == "true") b.Hi = function () {
            c.style.left = b.offsetLeft + f + "px";
            c.style.top = b.offsetTop + "px"
        }
    } else {
        e = parseInt(b.style.left);
        if (isNaN(e)) e = 0;
        d = parseInt(b.style.top);
        if (isNaN(d)) d = 0
    }
    if (b.style.left.indexOf("calc") != -1) {
        e = Zb(b.style.left);
        var h = e.lastIndexOf(")");
        if (h != -1) {
            e = e.substr(0, h);
            e += " + " + f + "px";
            c.style.left = e
        }
    } else c.style.left = e + f + "px";
    c.style.top = b.style.top.indexOf("calc") !=
    -1 ? b.style.top : d + "px";
    c.style.zIndex = b.style.zIndex;
    c.style.visibility = b.style.visibility;
    c.style.color = b.style.color;
    c.style.fontFamily = b.style.fontFamily;
    c.style.fontSize = b.style.fontSize;
    c.style.fontStyle = b.style.fontStyle;
    c.style.fontWeight = b.style.fontWeight;
    c.style.backgroundColor = b.style.backgroundColor;
    c.style.cursor = b.style.cursor ? b.style.cursor : "pointer";
    c.tH = true;
    b.ng != null && b.parentNode.removeChild(b.ng);
    b.ng = c;
    b.cg = [];
    b.cg.push(c);
    b.parentNode != null && b.parentNode.appendChild(c)
}

if (!Array.prototype.forEach) Array.prototype.forEach = function (b, a) {
    for (var c = 0, d = this.length; c < d; c++) c in this && b.call(a, this[c], c, this)
};
if (!Array.prototype.map) Array.prototype.map = function (b, a) {
    for (var c = Array(this.length), d = 0, e = this.length; d < e; d++) if (d in this) c[d] = b.call(a, this[d], d, this);
    return c
};
if (!Array.prototype.filter) Array.prototype.filter = function (b, a) {
    for (var c = [], d, e = 0, f = this.length; e < f; e++) if (e in this && b.call(a, d = this[e], e, this)) c.push(d);
    return c
};
if (!Array.prototype.reduce) Array.prototype.reduce = function (b) {
    if (null === this || "undefined" === typeof this) throw new TypeError("Array.prototype.reduce called on null or undefined");
    if ("function" !== typeof b) throw new TypeError(b + " is not a function");
    var a = Object(this), c = a.length >>> 0, d = 0, e;
    if (arguments.length >= 2) e = arguments[1]; else {
        for (; d < c && !d in a;) d++;
        if (d >= c) throw new TypeError("Reduce of empty array with no initial value");
        e = a[d++]
    }
    for (; d < c; d++) if (d in a) e = b(e, a[d], d, a);
    return e
};
Array.from || (Array.from = function () {
    var b = Object.prototype.toString;

    function a(d) {
        return typeof d === "function" || b.call(d) === "[object Function]"
    }

    var c = Math.pow(2, 53) - 1;
    return function (d) {
        var e = Object(d);
        if (d == null) throw new TypeError("Array.from requires an array-like object - not null or undefined");
        var f = arguments.length > 1 ? arguments[1] : void undefined, h;
        if (typeof f !== "undefined") {
            if (!a(f)) throw new TypeError("Array.from: when provided, the second argument must be a function");
            if (arguments.length > 2) h =
                arguments[2]
        }
        var g;
        g = Number(e.length);
        g = isNaN(g) ? 0 : g === 0 || !isFinite(g) ? g : (g > 0 ? 1 : -1) * Math.floor(Math.abs(g));
        g = Math.min(Math.max(g, 0), c);
        for (var l = a(this) ? Object(new this(g)) : Array(g), n = 0, o; n < g;) {
            o = e[n];
            l[n] = f ? typeof h === "undefined" ? f(o, n) : f.call(h, o, n) : o;
            n += 1
        }
        l.length = g;
        return l
    }
}());
if (!Array.prototype.indexOf) Array.prototype.indexOf = function (b, a, c) {
    return function (d, e) {
        if (this === null || this === undefined) throw TypeError("Array.prototype.indexOf called on null or undefined");
        var f = b(this), h = f.length >>> 0, g = c(e | 0, h);
        if (g < 0) g = a(0, h + g); else if (g >= h) return -1;
        if (d === void 0) for (; g !== h; ++g) {
            if (f[g] === void 0 && g in f) return g
        } else if (d !== d) for (; g !== h; ++g) {
            if (f[g] !== f[g]) return g
        } else for (; g !== h; ++g) if (f[g] === d) return g;
        return -1
    }
}(Object, Math.max, Math.min);
if (typeof Object.create !== "function") Object.create = function (b, a) {
    function c() {
    }

    if (typeof b !== "object" && typeof b !== "function") throw new TypeError("Object prototype may only be an Object: " + b); else if (b === null) throw Error("This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.");
    if (typeof a != "undefined") throw Error("This browser's implementation of Object.create is a shim and doesn't support a second argument.");
    c.prototype = b;
    return new c
};
pui.Ye = function (b, a) {
    var c = b[a];
    if (c == null) {
        var d = a.split(" "), e = Number(d[d.length - 1]);
        if (!isNaN(e) && e > 0) {
            d.pop();
            d = b[d.join(" ")];
            if (d != null) {
                c = {};
                for (var f in d) {
                    e = d[f];
                    if (f == "name") c.name = a; else if (typeof e == "object" && e.length != null) {
                        c[f] = [];
                        for (var h = 0; h < e.length; h++) c[f].push(e[h])
                    } else c[f] = d[f]
                }
            }
        }
    }
    return c
};
pui.ic = function (b, a) {
    for (var c = 0; c < b.length; c++) if (b[c] == a) return c;
    return -1
};
pui.nL = function (b, a) {
    for (var c = 0; c < b.length; c++) a(b[c])
};
pui.Rc = function (b, a) {
    if (a == null) a = 0;
    var c = parseInt(b, 10);
    if (isNaN(c)) c = a;
    return c
};
pui.wi = function () {
    var b = {
        9: "Tab",
        13: "Enter",
        16: "Shift",
        17: "Ctrl",
        18: "Alt",
        19: "Pause",
        20: "Caps Lock",
        27: "Esc",
        33: "Page Up",
        34: "Page Down",
        35: "End",
        36: "Home",
        37: "Left",
        38: "Up",
        39: "Right",
        40: "Down",
        45: "Insert",
        3: "Enter",
        63234: "Left",
        63235: "Right",
        63232: "Up",
        63233: "Down",
        63276: "Page Up",
        63277: "Page Down",
        63272: "Delete",
        63273: "Home",
        63275: "End"
    }, a = {
        8: "Backspace",
        9: "Tab",
        13: "Enter",
        27: "Esc",
        33: "Page Up",
        34: "Page Down",
        35: "End",
        36: "Home",
        37: "Left",
        38: "Up",
        39: "Right",
        40: "Down",
        46: "Delete"
    }, c = !/webkit/.test(navigator.userAgent.toLowerCase()) &&
        /gecko/.test(navigator.userAgent.toLowerCase());
    if (pui.is_ie) c = false;
    return function (d, e) {
        var f = String.fromCharCode(d.charCode || d.keyCode);
        d.ctrlKey || c && a[d.keyCode] || !c && b[d.keyCode] && !f || e.test(f) || yb(d)
    }
}();

function Mb(b, a) {
    if (Q == "genie" && pui.J.ML(a) != "") return true;
    if (Q == "dspf") {
        var c;
        a:{
            c = a.keyCode;
            for (var d = 0; d < b.length; d++) if (b[d] == c) if (!(a.zi && Event.Ko)) {
                c = true;
                break a
            }
            zb(a);
            c = false
        }
        return c
    }
    var e, f;
    c = a.keyCode;
    d = a.target || a.srcElement;
    var h = pui.vi(d);
    if (pui.J.ue) {
        if (pui.J.config.DL) {
            if (a.zi) e = a.zi && Event.Ko;
            if (!a.zi) e = a.shiftKey;
            e ? keyAhead.record("shift" + c) : keyAhead.record(c)
        }
        zb(a);
        return false
    }
    lastActiveElement = d;
    if (c == 9) {
        if (a.zi) e = a.zi && Event.Ko;
        if (!a.zi) e = a.shiftKey;
        if (e = e ? goPrev(d, 0, true) :
            goNext(d, true)) {
            zb(a);
            return false
        }
    } else if (c == 35 && h) {
        if (d.value != $b(d.value)) d.value = $b(d.value)
    } else if (c == 37) if (h) {
        f = Sb(d);
        if (f == 0) {
            goPrev(d);
            zb(a);
            return false
        }
    } else {
        if (d.tagName != "TEXTAREA") {
            goPrev(d);
            zb(a);
            return false
        }
    } else if (c == 38 && d.tagName != "SELECT" && d.tagName != "TEXTAREA") {
        if (d.Qe == null || d.Qe.dn() == false) if (!pui.J.config.zk) {
            goUp(d);
            zb(a);
            return false
        }
    } else if (c == 39) if (h) {
        maxLength = Number(d.getAttribute("maxLength"));
        f = Sb(d);
        e = d.value.length;
        if (f >= e) {
            goNext(d);
            zb(a);
            return false
        }
    } else {
        if (d.tagName !=
            "TEXTAREA") {
            goNext(d);
            zb(a);
            return false
        }
    } else if (c == 40 && d.tagName != "SELECT" && d.tagName != "TEXTAREA") {
        if (d.Qe == null || d.Qe.dn() == false) if (!pui.J.config.zk) {
            goDown(d);
            zb(a);
            return false
        }
    } else if (c == 45 && pui.is_ie && h && Q == "genie" && a.shiftKey != true && a.ctrlKey != true) {
        e = d.selectionEnd;
        f = d.value.substring(0, e);
        f += $b(d.value.substring(e));
        d.value = f;
        d.setSelectionRange(e, e)
    }
    if (h && pui.oH(a)) {
        pui.xr(d);
        ac(d);
        zb(a);
        return false
    }
    if (c == 109 && h) {
        pui.xr(d);
        if (ac(d, true)) {
            zb(a);
            return false
        }
    }
    if (a.ctrlKey == true && (c == 67 ||
        c == 86)) return true;
    for (d = 0; d < b.length; d++) if (b[d] == c) if (!(a.zi && Event.Ko)) return true;
    zb(a);
    return false
}

function ac(b, a) {
    if (b.readOnly == true) return false;
    var c, d = false, e = b.getAttribute("signedNumeric"), f = false;
    if (a && (e == null || e != "Y")) return false;
    c = b.at;
    if (pui.is_touch && !pui.is_mouse_capable) c = Sb(b);
    if (c == null) return false;
    if (c < 0) return false;
    if (c >= 0) {
        f = b.value !== b.value.substr(0, c);
        b.value = b.value.substr(0, c);
        c = b.getAttribute("blankFill");
        if (e != null && e == "Y") c = "Y";
        if (c != null && c == "Y") {
            d = true;
            fill = "                                                                                "
        }
        c = b.getAttribute("zeroFill");
        if (c != null && c == "Y") {
            d = true;
            fill = "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        }
        c = b.getAttribute("maxLength");
        if (d && c != null) {
            d = fill + bc(b.value);
            d = d.substr(d.length - c);
            if (e != null && e == "Y") if (d.substr(d.length - 1) != "-") {
                d += a ? "-" : " ";
                d = d.substr(1)
            }
            b.value = d
        }
    }
    f && typeof b.onchange === "function" && b.onchange();
    goNext(b);
    return true
}

pui.cx = function (b) {
    if (!(pui.is_touch && !pui.is_mouse_capable || pui.pb)) if (pui.xn == null) if (pui.confirmOnClose && !pui.skipConfirm) if (!(Q == "genie" && pui.ZL())) {
        for (var a = window; a != null && a != a.parent;) {
            a = a.parent;
            if (pui.jj(a)) return;
            try {
                if (typeof a.pui != "undefined") return
            } catch (c) {
            }
        }
        if (pui.J != null || !pui.designer.jk || Q == "dspf" && pui.designer.jk && typeof pui.ide.isDirty === "function" && pui.ide.isDirty()) {
            a = pui.ja ? pui.closeMessage : pui.getLanguageText("runtimeMsg", "closeMessage");
            if (Q == "genie" && pui.J.config.closeMessage !=
                null && pui.J.config.closeMessage != "") a = pui.J.config.closeMessage;
            return b.returnValue = a
        }
    }
};
pui.unload = function () {
    if (pui.shutdownOnClose && pui.xn == null) {
        pui.halted = true;
        window.puihalted = true;
        pui.Bz();
        var b;
        b = pui.J == null ? cc("PUI0001200.pgm") : cc("PUI0002110.pgm");
        if (pui.psid != null && pui.psid != "") b += "/" + pui.psid;
        if (pui.overrideSubmitUrl != null && typeof pui.overrideSubmitUrl == "function") try {
            b = pui.overrideSubmitUrl(b)
        } catch (a) {
        }
        if (navigator != null && typeof navigator.sendBeacon == "function" && typeof window.Blob == "function") {
            var c = new Blob(["shutdown=1" + (pui.isCloud ? "&workspace_id=" + pui.cloud.ws.id : "")],
                {type: "application/x-www-form-urlencoded"});
            navigator.sendBeacon(b, c)
        } else {
            c = {shutdown: "1"};
            if (pui.isCloud) c.workspace_id = pui.cloud.ws.id;
            dc({url: b, method: "post", mK: true, params: c})
        }
        pui.shutdownOnClose = false
    }
};
pui.us = function () {
    if (window.addEventListener) {
        window.addEventListener("beforeunload", pui.cx, false);
        if (!pui.designer.jk || pui.J != null) window.addEventListener("unload", pui.unload, false)
    } else if (window.attachEvent) {
        window.attachEvent("onbeforeunload", pui.cx);
        if (!pui.designer.jk || pui.J != null) window.attachEvent("onunload", pui.unload)
    }
};
pui.Jf = function (b, a, c) {
    var d = document.createElement("form");
    d.action = cc("PUI0009106.pgm") + "?contentType=" + b + "&fileName=" + a;
    if (pui.isCloud) d.action += "&workspace_id=" + pui.cloud.ws.id;
    d.method = "post";
    b = ec("input", "data");
    b.type = "hidden";
    b.value = c;
    d.appendChild(b);
    document.body.appendChild(d);
    pui.skipConfirm = true;
    d.submit();
    setTimeout(function () {
        d.parentNode.removeChild(d);
        pui.skipConfirm = false
    }, 0)
};
pui.ya = function (b, a) {
    var c = b.className;
    if (c == null) c = "";
    c = c.split(" ");
    for (var d = [], e = 0; e < c.length; e++) {
        if (c[e] == a) return;
        c[e] != "" && d.push(c[e])
    }
    d.push(a);
    b.className = d.join(" ")
};
pui.La = function (b, a) {
    b.className = pui.gv(b.className, a)
};
pui.gv = function (b, a, c) {
    if (b == null) return "";
    if (b == "") return "";
    if (c == null || c == "") c = " ";
    b = b.split(c);
    c = [];
    for (var d = 0; d < b.length; d++) b[d] != "" && b[d] != a && c.push(b[d]);
    return c.join(" ")
};
pui.HJ = function (b, a) {
    if (!(b.readOnly || b.disabled)) if (!(a == null || a == null)) {
        var c = b;
        if (c.comboBoxWidget != null) c = c.comboBoxWidget.getBox();
        c.emptyText = a;
        pui.Xh(c);
        gc(c, "focus", function (d) {
            d = vb(d);
            if (d.value == d.emptyText) {
                d.value = "";
                pui.La(d, "empty-text")
            }
        });
        gc(c, "blur", function (d) {
            pui.Xh(vb(d))
        })
    }
};
pui.Xh = function (b) {
    if (!(b.readOnly || b.disabled)) if (!(b.emptyText == null || b.emptyText == null)) {
        if (b.value == "") b.value = b.emptyText;
        b.value == b.emptyText ? pui.ya(b, "empty-text") : pui.La(b, "empty-text")
    }
};
pui.EE = function () {
    function b() {
        pui["client side timeout"] == true && pui.Kc.ek.reset();
        pui.onuseractivity != null && pui.onuseractivity()
    }

    if (!pui.gI) if (!(pui.onuseractivity == null && pui["client side timeout"] != true)) {
        gc(document.body, "keydown", b);
        gc(document.body, "mousemove", b);
        gc(document.body, "click", b);
        gc(document.body, "touchstart", b);
        gc(document.body, "touchmove", b);
        pui.gI = true
    }
};
pui.zb = {};
pui.zb.Fz = (new Date).getTime();
pui.zb.so = false;
pui.zb.timeout = 600;
pui.zb.qz = null;
pui.zb.Jv = function () {
    if (pui.zb.so) pui.zb.reset(); else if (pui["keep alive interval"] != null) {
        pui.zb.timeout = pui["keep alive interval"];
        pui.zb.start()
    }
};
pui.zb.start = function () {
    if (!pui.zb.so) {
        var b = pui.zb.timeout * 1E3;
        b /= 4;
        if (b > 3E3) b = 3E3;
        pui.zb.qz = setInterval(pui.zb.check, b);
        pui.zb.reset();
        pui.zb.so = true
    }
};
pui.zb.stop = function () {
    if (pui.zb.so) {
        clearInterval(pui.zb.qz);
        pui.zb.so = false
    }
};
pui.zb.reset = function () {
    pui.zb.Fz = (new Date).getTime()
};
pui.zb.check = function () {
    if ((new Date).getTime() - pui.zb.Fz >= pui.zb.timeout * 1E3) {
        pui.keepAlive();
        pui.zb.reset()
    }
};
pui.Ae = function (b) {
    if (!b) b = window.event;
    if (b.which != null) if (b.which > 1) return true;
    if (b.button != null) if (b.button > 1) return true;
    return false
};
pui.Xe = function (b) {
    for (var a = 0, c = 0; b != null;) {
        a += b.offsetLeft;
        c += b.offsetTop;
        if (b.tagName !== "BODY") {
            a -= b.scrollLeft;
            c -= b.scrollTop
        }
        if (b.className == "scroller") {
            var d = b.style.transform;
            if (d == null) d = b.style.webkitTransform;
            if (d != null && typeof d == "string" && d.substr(0, 10) == "translate(") {
                d = d.substr(10);
                d = d.split(")")[0];
                var e = d.split(",");
                d = e[0];
                e = e[1];
                if (d != null && e != null) {
                    d = parseInt(Zb(d));
                    e = parseInt(Zb(e));
                    if (!isNaN(d) && !isNaN(e)) {
                        a += d;
                        c += e
                    }
                }
            }
        }
        b = b.offsetParent
    }
    return [a, c]
};
pui.$l = function () {
    this.fm = function (a) {
        if (typeof a.length == "undefined") a = Array(a);
        for (var c, d = 0; d < a.length; d++) {
            c = {};
            for (var e in a[d]) c[e.toUpperCase()] = a[d][e];
            b.push(c)
        }
    };
    this.send = function (a, c) {
        var d = "", e, f, h;
        h = false;
        for (var g; !h;) {
            e = "ProfoundUIMIMEBoundary" + Math.ceil(1E9 * Math.random());
            g = false;
            for (var l = 0; l < b.length; l++) {
                f = b[l].VALUE;
                if (f.indexOf(e) != -1) {
                    g = true;
                    break
                }
            }
            g || (h = true)
        }
        h = e;
        for (g = 0; g < b.length; g++) {
            e = b[g];
            if (!(typeof e.NAME != "string" || typeof e.VALUE != "string")) {
                d += "--" + h + "\r\n";
                d += 'Content-Disposition: form-data; name="' +
                    e.NAME + '"';
                if (typeof e.FILENAME == "string") {
                    f = "application/octet-stream";
                    if (typeof e.CONTENTTYPE == "string") f = e.CONTENTTYPE;
                    d += '; filename="' + e.FILENAME + '"\r\n';
                    d += "Content-Type: " + f
                }
                if (e.TRANSFERENCODING != null) d += "\r\nContent-Transfer-Encoding: " + e.TRANSFERENCODING;
                d += "\r\n\r\n";
                d += e.VALUE;
                d += "\r\n"
            }
        }
        d += "--" + h + "--";
        e = new pui.Ajax(a);
        e.suppressAlert = true;
        e.async = true;
        e.method = "POST";
        e.sendAsBinary = false;
        e.setRequestHeader("Content-Type", "multipart/form-data; boundary=" + h);
        e.postData = d;
        e.onready = c;
        e.send()
    };
    var b = []
};
pui.Tv = function (b) {
    pui.xr(vb(b))
};
pui.xr = function (b) {
    b.at = Sb(b)
};
pui.Ok = function (b, a) {
    for (var c = [], d = 0, e = "", f = "", h = 0, g = false, l = 0; l < b.length; l++) {
        if (a === true && d == 6) {
            f = f.substr(0, f.length - 6);
            break
        }
        e = b.charAt(l);
        if (g) {
            if (e == "'") g = false
        } else {
            if (e == "(") {
                h += 1;
                d = 0
            } else if (e == ")") {
                h -= 1;
                d = 0
            } else if (e == "'") {
                g = true;
                d = 0
            } else if (h == 0) if (e.toLowerCase() == " from ".charAt(d)) d++; else d = 0;
            if (h < 1) h = 0
        }
        if (e == "," && h == 0 && !g) {
            c.push(Zb(f));
            f = "";
            d = 0
        } else f += e
    }
    c.push(Zb(f));
    return c
};
pui.iK = {
    "database file": null,
    "database fields": null,
    "selection criteria": null,
    "order by": null,
    "custom sql": null,
    "name field": null,
    "value field": null,
    "summary option": null,
    "choices database file": null,
    "choice options field": null,
    "choice values field": null,
    "choices selection criteria": null,
    "parameter value": null,
    "choices parameter value": null,
    "case sensitive": null
};
pui.CH = function (b) {
    return typeof pui.iK[b] != "undefined"
};
pui.jg = function (b) {
    var a = Q + ".", c = b.id;
    if (Q == "genie" && b.parentNode != pui.runtimeContainer) if (c.lastIndexOf("_W") != -1) c = c.substr(0, c.lastIndexOf("_W") + 2);
    a += typeof b.parentNode.parentNode.grid == "undefined" || b.Vt ? c : c.substr(0, c.lastIndexOf(".") + 1) + "*";
    return a
};
pui.ig = function (b, a) {
    function c() {
        var k = pui.DG(), q = pui.EG();
        h += g + "datfmt=" + encodeURIComponent(k.Bt);
        h += "&datsep=" + encodeURIComponent(k.uv);
        h += "&timfmt=" + encodeURIComponent(q.Bt);
        h += "&timsep=" + encodeURIComponent(q.uv);
        return h
    }

    var d = b["field type"] == "textbox", e = 1, f = "", h = "", g = "";
    f = /^(choices |blob )?(parameter value)( \d+)?/;
    var l = "", n = 1, o;
    for (var i in b) {
        var r = f.exec(i);
        if (r) {
            if (o == null) o = (r[1] ? r[1] : "") + r[2];
            if (r[3] != null) n = Math.max(n, parseInt(r[3], 10))
        }
    }
    if (o == null) return c();
    do {
        f = hc(b[o + l]);
        if (f !=
            "") {
            i = e;
            if (d) i += 1;
            h += g + "p" + i + "=" + encodeURIComponent(f);
            g = "&";
            if (a != null) a["p" + i] = f
        }
        e++;
        l = " " + e
    } while (e <= n);
    return c()
};
pui.da = function (b) {
    if (b == null) return false;
    if (typeof b != "string") return false;
    if (b == "") return false;
    if (b.substr(b.length - 1, 1) == "%") return true;
    return false
};
pui.cn = function (b) {
    if (b == null) return false;
    if (typeof b != "string") return false;
    var a = Number(b);
    if (isNaN(a)) return false;
    if (String(a) === b) return true;
    return false
};
pui.Ky = function (b, a) {
    if (b == "top" || b == "left" || b == "height" || b == "width") if (pui.cn(a)) return a + "px";
    return a
};
pui.Ty = function () {
    var b = 0;
    if (typeof window.pageYOffset == "number") b = window.pageYOffset; else if (document.body && document.body.scrollTop) b = document.body.scrollTop; else if (document.documentElement && document.documentElement.scrollTop) b = document.documentElement.scrollTop;
    return b
};
pui.Um = function (b) {
    var a = pui.getLanguageText("runtimeMsg", "no connection message");
    if (pui["no connection status"] == true) a += "\n" + b.Uk();
    if (pui.isCloud) if (b = b.jc()) a += "\n\nError details:\n" + b;
    return a
};
pui.DG = function () {
    var b = null, a = null;
    if (typeof pui["sql date format"] == "string") b = pui.Aw[pui["sql date format"].toUpperCase()];
    if (b == null) b = pui.Aw["*ISO"];
    if (typeof pui["sql date separator"] == "string") a = pui.Bw[pui["sql date separator"].toUpperCase()];
    if (a == null) a = pui.Bw["/"];
    return {Bt: b, uv: a}
};
pui.EG = function () {
    var b = null, a = null;
    if (typeof pui["sql time format"] == "string") b = pui.Cw[pui["sql time format"].toUpperCase()];
    if (b == null) b = pui.Cw["*ISO"];
    if (typeof pui["sql time separator"] == "string") a = pui.Dw[pui["sql time separator"].toUpperCase()];
    if (a == null) a = pui.Dw[":"];
    return {Bt: b, uv: a}
};
pui.wy = function () {
    var b = location.href.split("://"), a = "", c = "";
    if (b.length > 1) {
        a = b[0] + "://";
        b.splice(0, 1);
        c = b.join("://")
    } else c = location.href;
    return c = a + c.split("/")[0]
};
pui.Ep = function (b) {
    var a = document.getElementsByTagName("head")[0];
    if (a == null) return null;
    var c = pui.wy();
    a = a.getElementsByTagName("link");
    for (var d = 0; d < a.length; d++) {
        var e = a[d];
        if (e.href == b) return e;
        if (e.href == c + b) return e
    }
    return null
};
pui.Py = function (b) {
    var a = document.getElementsByTagName("head")[0];
    if (a == null) return null;
    var c = pui.wy();
    a = a.getElementsByTagName("script");
    for (var d = 0; d < a.length; d++) {
        var e = a[d];
        if (e.src == b) return e;
        if (e.src == c + b) return e
    }
    return null
};
pui.Ta = function (b) {
    if (typeof b != "string") return b instanceof Array ? b : [];
    if (b == "") return [];
    var a;
    if (b.substr(0, 1) == "[" && b.substr(b.length - 1, 1) == "]") try {
        a = eval(b)
    } catch (c) {
    }
    if (a == null) a = b.split(",");
    return a
};
pui.$p = function (b) {
    switch (b) {
        case "number":
        case "date":
        case "datetime":
        case "time":
        case "email":
        case "url":
        case "month":
        case "tel":
        case "url":
        case "color":
        case "datetime-local":
        case "search":
        case "week":
            return true;
        default:
            return false
    }
};
pui.vi = function (b) {
    if (b.tagName == "INPUT") if (b.type == null || b.type == "" || b.type == "text" || pui.$p(b.type) || b.type == "password") return true;
    return false
};
pui.oH = function (b) {
    b = b || window.event;
    var a = pui["field exit key"];
    return b.keyCode == a && (!b.shiftKey || a == 16) && (!b.ctrlKey || a == 17) ? true : false
};
pui.az = function (b) {
    b = b.parentNode;
    return b != null && (!pui.is_old_ie || b.nodeName != "#document-fragment")
};
pui.ej = function (b) {
    if (!Ub() && !pui.vn && typeof b == "string" && b.search("AUTH=") == -1) {
        b += b.search(/\?/) == -1 ? "?" : "&";
        b += "AUTH=" + encodeURIComponent(pui.appJob.auth)
    }
    return b
};
pui.validateEmail = function (b) {
    return /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(b)
};
pui.f = function (b) {
    return b != null && typeof b == "object" && typeof b.fieldName == "string"
};
pui.Ia = function (b) {
    return b != null && typeof b == "object" && typeof b.translations == "object" && b.translations != null && typeof b.translations.length == "number"
};
pui.sK = function (b, a, c) {
    if (!(!pui.is_touch || !b || !b.addEventListener)) if (typeof a == "function") {
        if (typeof c != "number") c = 750;
        var d;
        b.addEventListener("touchstart", function (e) {
            d = setTimeout(function () {
                d = null;
                a(e)
            }, c)
        }, false);
        b.addEventListener("touchend", function () {
            clearTimeout(d);
            d = null
        }, false)
    }
};
pui.zt = function (b) {
    b.checked ? b.setAttribute("checked", "checked") : b.removeAttribute("checked")
};
pui.Go = function (b) {
    b = "" + b;
    b = b.replace(/&/g, "&amp;");
    b = b.replace(/</g, "&lt;");
    b = b.replace(/>/g, "&gt;");
    return b = b.replace(/"/g, "&quot;")
};
pui.jj = function (b) {
    var a = false;
    try {
        a = typeof b.Atrium != "undefined" && typeof b.Atrium.api != "undefined"
    } catch (c) {
    }
    return a
};
pui.Ul = function (b) {
    var a = false;
    try {
        if (b.location.host != null) a = true
    } catch (c) {
    }
    return a
};
pui.nc = function () {
    try {
        return localStorage != null && typeof window.localStorage != "undefined" ? true : false
    } catch (b) {
        return false
    }
};
pui.wn = function (b) {
    if (b.substr(0, 1) == "#") b = b.toUpperCase();
    if (b.substr(0, 4) == "rgb(" && b.substr(b.length - 1, 1) == ")") {
        b = b.substr(4, b.length - 5);
        b = b.replace(/ /g, "");
        var a = b.split(",");
        b = "#";
        for (var c = 0; c < a.length; c++) {
            var d = Number(a[c]).toString(16).toUpperCase();
            if (d.length == 1) d = "0" + d;
            b += d
        }
    }
    return b
};
pui.Kz = function (b, a) {
    var c;
    if (b.stack) {
        c = b.toString();
        var d = b.stack.split("\n");
        if (d.length >= 1) c += c.indexOf(Zb(d[0])) != 0 || d.length < 2 ? " " + Zb(d[0]) : " " + Zb(d[1])
    } else {
        if (typeof a == "string") c = a;
        c += " " + b.toString()
    }
    console.log(c)
};
pui.Eq = function (b) {
    if (pui.is_chrome && pui.vi(b)) {
        var a = b.value;
        b.value = "";
        b.value = a
    }
};
pui.Np = function (b, a) {
    if (!(b === undefined || !b)) if (!(b.tagName == "SPAN" && b.className == "pui-highlight")) {
        if (b.hasChildNodes()) for (var c = 0; c < b.childNodes.length; c++) pui.Np(b.childNodes[c], a);
        if (b.nodeType == 3) {
            var d = b.nodeValue;
            if (d != null && typeof d == "string") {
                for (c = d.toLowerCase(); c.indexOf(String.fromCharCode(160)) != -1;) c = c.replace(String.fromCharCode(160), " ");
                c = c.indexOf(a.toLowerCase());
                if (c >= 0) {
                    var e = d.substr(c, a.length);
                    d = document.createElement("span");
                    d.appendChild(document.createTextNode(e));
                    d.className =
                        "pui-highlight";
                    c = b.splitText(c);
                    c.nodeValue = c.nodeValue.substring(a.length);
                    b.parentNode.insertBefore(d, c)
                }
            }
        }
    }
};
pui.DF = function (b) {
    for (b = b.getElementsByTagName("span"); b.length && (span = b[0]);) {
        var a = span.parentNode;
        a.replaceChild(span.firstChild, span);
        a.normalize()
    }
};
pui.lK = function () {
    if (!pui.is_mouse_capable) if (pui.nc() && localStorage["pui-is-mouse-capable"] == "true") pui.is_android || pui.is_ios || (pui.is_mouse_capable = true); else {
        var b = document.documentElement;
        if (b != null) {
            var a = function () {
                d = false
            }, c = function () {
                if (d) {
                    if (pui.is_android || pui.is_ios) {
                        ic(b, "mousedown", a);
                        ic(b, "mousemove", c);
                        return
                    }
                    pui.is_mouse_capable = true;
                    pui.nc() && localStorage.setItem("pui-is-mouse-capable", "true");
                    ic(b, "mousedown", a);
                    ic(b, "mousemove", c)
                }
                d = true
            }, d = false;
            gc(b, "mousedown", a);
            gc(b, "mousemove",
                c)
        }
    }
};
pui.Bz = function () {
    if (pui.is_chrome) for (var b = document.getElementsByTagName("iframe"), a = 0; a < b.length; a++) {
        var c = b[a], d = null;
        try {
            d = c.contentWindow.pui;
            c.contentWindow.puihalted = true
        } catch (e) {
        }
        if (d != null && typeof d.unload === "function") {
            d.halted = true;
            d.unload()
        } else c.src = ""
    }
};
pui.haltFrames = function () {
    for (var b = document.getElementsByTagName("iframe"), a = 0; a < b.length; a++) {
        var c = b[a];
        if (c != null) {
            var d = null;
            try {
                d = c.contentWindow.pui;
                c.contentWindow.puihalted = true
            } catch (e) {
            }
            if (d != null && typeof d === "object") {
                d.halted = true;
                typeof d.haltFrames === "function" && d.haltFrames()
            }
            c.parentNode != null && c.parentNode.removeChild(c);
            c.src = ""
        }
    }
};
pui.breakMessagesInit = function () {
    if (!(Ub() || pui["brkmsg enable"] !== true)) if (!(!pui.nc() || typeof JSON !== "object")) if (!(typeof pui.appJob !== "object" || pui.appJob.user == null || pui.appJob.user.length <= 0 || pui.appJob.user === "QTMHHTP1")) {
        pui["brkmsg poll interval"] = Number(pui["brkmsg poll interval"]);
        if (isNaN(pui["brkmsg poll interval"])) pui["brkmsg poll interval"] = 30; else if (pui["brkmsg poll interval"] < 1) pui["brkmsg poll interval"] = 1;
        pui["brkmsg max errors"] = Number(pui["brkmsg max errors"]);
        if (isNaN(pui["brkmsg max errors"])) pui["brkmsg max errors"] =
            3;
        pui["brkmsg max messages"] = Number(pui["brkmsg max messages"]);
        if (isNaN(pui["brkmsg max messages"])) pui["brkmsg max messages"] = 10;
        pui["brkmsg user timeout"] = Number(pui["brkmsg user timeout"]);
        if (isNaN(pui["brkmsg user timeout"])) pui["brkmsg user timeout"] = 300; else if (pui["brkmsg user timeout"] <= pui["brkmsg poll interval"]) pui["brkmsg user timeout"] = pui["brkmsg poll interval"] + 10;
        pui.To = 0;
        pui.gx();
        var b;
        try {
            b = JSON.parse(localStorage.getItem("brkmsgMessages_" + pui.appJob.user))
        } catch (a) {
            localStorage.setItem("brkmsgMessages_" +
                pui.appJob.user, "[]")
        }
        if (window.parent == window || !pui.jj(window.parent)) {
            var c = document.createElement("div");
            c.id = "pui-break-messages";
            c.style.zIndex = pui.$i++;
            pui.runtimeContainer.appendChild(c);
            if (pui.nc()) {
                ic(window, "storage", pui.Js);
                gc(window, "storage", pui.Js);
                b && pui.nm(b)
            }
        } else {
            ic(window.parent, "storage", window.parent.Atrium.api.breakMessagesOnStorage);
            gc(window.parent, "storage", window.parent.Atrium.api.breakMessagesOnStorage);
            b && window.parent.Atrium.api.breakMessagesShow(b, pui.appJob.user)
        }
        pui.JE()
    }
};
pui.gx = function () {
    if (!pui || !pui.appJob || pui.appJob.auth.length <= 0 || pui.appJob.user.length <= 0) return false;
    var b = localStorage.getItem("brkmsgActivePoller_" + pui.appJob.user),
        a = Number(localStorage.getItem("brkmsgLastPoll_" + pui.appJob.user));
    if (isNaN(a)) a = 0;
    var c = Date.now();
    a = c - a;
    var d = pui["brkmsg poll interval"] * 1E3 + 1E4;
    if (b === null || a >= d && b !== pui.appJob.auth) {
        b = pui.appJob.auth;
        localStorage.setItem("brkmsgActivePoller_" + pui.appJob.user, b);
        localStorage.setItem("brkmsgLastPoll_" + pui.appJob.user, c)
    }
    var e;
    c = false;
    try {
        e = JSON.parse(localStorage.getItem("brkmsgUserIds"))
    } catch (f) {
        c = true
    }
    if (e == null || typeof e.pop !== "function") {
        e = [];
        c = true
    }
    d = [];
    if (pui.ic(e, pui.appJob.user) < 0) {
        d.push(pui.appJob.user);
        c = true
    }
    for (var h = 0; h < e.length; h++) if (e[h] !== pui.appJob.user) {
        a = Number(localStorage.getItem("brkmsgLastPoll_" + e[h]));
        if (isNaN(a)) a = 0;
        if (Date.now() - a >= pui["brkmsg user timeout"] * 1E3) {
            localStorage.removeItem("brkmsgLastPoll_" + e[h]);
            localStorage.removeItem("brkmsgActivePoller_" + e[h]);
            localStorage.removeItem("brkmsgMessages_" +
                e[h]);
            c = true
        } else d.push(e[h])
    }
    c && localStorage.setItem("brkmsgUserIds", JSON.stringify(d));
    return b === pui.appJob.auth
};
pui.JE = function () {
    if (!(Ub() || pui["brkmsg enable"] !== true)) {
        typeof pui.Is === "number" && clearInterval(pui.Is);
        pui.Is = setInterval(function () {
            if (typeof pui.appJob !== "object" || pui.appJob.user.length <= 0 || pui.appJob.user === "QTMHHTP1" || pui["brkmsg enable"] !== true) pui.Ks(); else {
                if (pui.gx()) {
                    jc({
                        url: cc("PUI0009116.PGM"),
                        method: "post",
                        async: true,
                        suppressAlert: true,
                        params: {AUTH: pui.appJob.auth},
                        onfail: function () {
                            pui.To++;
                            if (pui.To >= pui["brkmsg max errors"]) {
                                pui.Ks();
                                console.log("Stopped break-message polling; too many errors.")
                            }
                        },
                        handler: function (c) {
                            if (c == null || typeof c !== "object" || c.error) {
                                pui.To++;
                                pui.To >= pui["brkmsg max errors"] && pui.Ks()
                            } else if (c.success && c.messages != null && typeof c.messages.pop === "function" && c.messages.length > 0) {
                                var d;
                                try {
                                    d = JSON.parse(localStorage.getItem("brkmsgMessages_" + pui.appJob.user))
                                } catch (e) {
                                    console.log(e)
                                }
                                if (d == null || typeof d.pop !== "function") d = [];
                                d = d.concat(c.messages);
                                if (pui["brkmsg max messages"] > 0 && d.length > pui["brkmsg max messages"]) d = d.slice(d.length - pui["brkmsg max messages"], d.length);
                                if (window != window.parent && pui.jj(window.parent)) typeof window.parent.Atrium["brkmsg handler"] !== "function" && window.parent.Atrium.api.breakMessagesShow(d, pui.appJob.user); else pui.nm(d);
                                localStorage.setItem("brkmsgMessages_" + pui.appJob.user, JSON.stringify(d))
                            }
                        }
                    });
                    localStorage.setItem("brkmsgLastPoll_" + pui.appJob.user, Date.now())
                }
                if (pui.nc() && typeof window.addEventListener === "undefined" && typeof JSON === "object") try {
                    var b = JSON.parse(localStorage.getItem("brkmsgMessages_" + pui.appJob.user));
                    window != window.parent &&
                    pui.jj(window.parent) ? window.parent.Atrium.api.breakMessagesShow(b, pui.appJob.user) : pui.nm(b)
                } catch (a) {
                    console.log(a)
                }
            }
        }, pui["brkmsg poll interval"] * 1E3)
    }
};
pui.Ks = function () {
    clearInterval(pui.Is);
    ic(window, "storage", pui.Js)
};
pui.Hs = function (b) {
    if (!(typeof pui.appJob !== "object" || pui.appJob.user.length <= 0 || pui.appJob.user === "QTMHHTP1")) {
        yb(b);
        if (!(b.keyCode && b.keyCode != 13)) {
            b = vb(b).msgIdx;
            var a;
            try {
                a = JSON.parse(localStorage.getItem("brkmsgMessages_" + pui.appJob.user));
                if (a !== null && typeof a.splice === "function") {
                    if (!b && b != 0) b = a.length - 1;
                    a.splice(b, 1)
                } else a = []
            } catch (c) {
                console.log(c);
                a = []
            }
            localStorage.setItem("brkmsgMessages_" + pui.appJob.user, JSON.stringify(a));
            pui.nm(a)
        }
    }
};
pui.nm = function (b) {
    if (typeof pui["brkmsg handler"] == "function") return pui["brkmsg handler"](b);
    pui.fx = false;
    if (!(b == null || typeof b.pop !== "function")) {
        var a = document.getElementById("pui-break-messages");
        if (a) {
            a.innerHTML = "";
            if (b.length == 0) pui.unmaskScreen(); else {
                pui.maskScreen();
                pui.fx = true;
                pui.$i += 2;
                a.style.zIndex = pui.$i;
                for (var c = 10, d = 10, e = 0; e < b.length; e++) {
                    var f = b[e];
                    f.to = pui.appJob.user;
                    var h = document.createElement("div");
                    h.style.top = c + "px";
                    h.style.left = d + "px";
                    h.className = "msg-wrap";
                    var g = document.createElement("div");
                    g.className = "msg-titlewrap";
                    h.appendChild(g);
                    var l = document.createElement("div");
                    l.className = "title";
                    g.appendChild(l);
                    var n = document.createElement("button");
                    n.className = "closeImg";
                    n.msgIdx = e;
                    g.appendChild(n);
                    gc(n, "click", pui.Hs);
                    gc(n, "keydown", pui.Hs);
                    g = document.createElement("div");
                    g.className = "msg-body";
                    if (typeof pui.breakMessageFormat === "function") {
                        var o = {title: "", body: ""};
                        pui.breakMessageFormat(f, o);
                        l.innerHTML = o.title;
                        g.innerHTML = o.body
                    } else try {
                        l.innerHTML = f.date + " " + f.time + "<br>" + f.jobNum +
                            "/" + f.jobUserName + "/" + f.jobName;
                        g.innerHTML = f.to + ":<br>" + f.msg
                    } catch (i) {
                        console.log(i)
                    }
                    h.appendChild(g);
                    a.appendChild(h);
                    c += 1;
                    d += 10
                }
                n.focus()
            }
        }
    }
};
pui.Js = function (b) {
    if (typeof pui.appJob !== "object" || pui.appJob.user.length <= 0 || pui.appJob.user === "QTMHHTP1") return false;
    if (b.key !== "brkmsgMessages_" + pui.appJob.user) return false;
    try {
        var a = JSON.parse(b.newValue);
        pui.nm(a)
    } catch (c) {
        console.log(c)
    }
    return false
};
pui.Xi = function (b) {
    if (pui["submit log"]) {
        console.log("=".repeat(80));
        console.log((new Date).toString() + ": submit flag = " + b);
        console.log("-".repeat(80));
        try {
            throw Error();
        } catch (a) {
            b = a.stack.split("\n");
            b[0].indexOf("Error") == 0 && b.shift();
            b.shift();
            for (var c = 0; c < b.length; c++) b[c] != "" && console.log(b[c].replace(/^\s*at\s/, ""))
        }
    }
};
if (typeof String.prototype.repeat != "function") String.prototype.repeat = function (b) {
    for (var a = "", c = 0; c < b; c++) a += this;
    return a
};
pui.wait = function (b, a, c, d) {
    var e = 0, f = setInterval(function () {
        e += b;
        if (c() === true) {
            clearInterval(f);
            d(true)
        } else if (e >= a) {
            clearInterval(f);
            d(false)
        }
    }, b)
};
pui.Ow = function (b, a, c, d) {
    if (b != null) {
        var e = b["field type"] || b.field_type;
        if (e != null) {
            if (e == "layout" && b.template == "css panel") e = "css panel";
            if (pui.widgets[e] != null && pui.widgets[e].dependencies != null && pui.widgets[e].dependencies.length > 0) {
                var f = ["/FusionChartsXT/js/pui-fusioncharts.js"], h = document.getElementsByTagName("script"),
                    g = document.getElementsByTagName("link");
                e = pui.widgets[e].dependencies;
                if (Ub() && e.length > 0) e = e.filter(function (q) {
                    if (f.indexOf(q) !== -1) return false;
                    return true
                });
                var l = "", n = document.URL.match(/^(https?:\/\/[^\/]+)\//i);
                if (n != null && n.length == 2) l = n[1];
                for (n = 0; n < e.length; n++) {
                    var o = e[n], i = false;
                    if (typeof e[n] == "object" && e[n] != null && typeof e[n].condition == "function") {
                        if (e[n].condition(b, c, d)) {
                            o = e[n].script;
                            i = true
                        }
                    } else if (typeof e[n] == "string") i = true;
                    if (i) {
                        o = pui.normalizeURL(o);
                        i = pui.normalizeURL(l + o);
                        for (var r = false, k = 0; k < h.length; k++) if (h[k].type.toLowerCase() == "text/javascript" && (h[k].src == i || h[k].src == o)) {
                            r = true;
                            break
                        }
                        if (g && !r) for (k = 0; k < g.length; k++) if (g[k].type.toLowerCase() == "text/css" && (g[k].href == i || g[k].href ==
                            o)) {
                            r = true;
                            break
                        }
                        !r && pui.ic(a, o) < 0 && a.push(o)
                    }
                }
            }
        }
    }
};
pui.mn = function (b, a) {
    function c() {
        if (pui.dt.length <= 0) {
            pui.dt = null;
            a()
        } else {
            var n = pui.dt.shift();
            if (n != null && n.length > 0) {
                var o = document.getElementsByTagName("head")[0], i, r = n.substr(-4, 4).toLowerCase();
                if (r === ".css") {
                    i = document.createElement("link");
                    i.setAttribute("type", "text/css");
                    i.setAttribute("rel", "stylesheet")
                } else {
                    i = document.createElement("script");
                    i.setAttribute("type", "text/javascript")
                }
                if (typeof i.onload == "undefined") i.onreadystatechange = function () {
                    if (i.readyState == "complete" || i.readyState ==
                        "loaded") c()
                }; else {
                    i.onload = c;
                    i.onerror = function (k) {
                        k = k || window.event;
                        if (k != null && k.target != null) console.log("Failed to load widget dependency file ", k.target.src || k.target.href);
                        c()
                    }
                }
                r === ".css" ? i.setAttribute("href", n) : i.setAttribute("src", n);
                o.appendChild(i)
            } else c()
        }
    }

    var d = [];
    if (b != null) if (b.items != null && b.items.length > 0) for (var e = 0; e < b.items.length; e++) pui.Ow(b.items[e], d, null, b.designer); else if (b.layers != null && b.layers.length > 0) for (var f = 0; f < b.layers.length; f++) {
        var h = b.layers[f];
        if (h != null &&
            h.formats != null && h.formats.length > 0) for (var g = 0; g < h.formats.length; g++) {
            var l = h.formats[g];
            if (l != null && l.metaData != null && l.metaData.items != null && l.metaData.items.length > 0) for (e = 0; e < l.metaData.items.length; e++) pui.Ow(l.metaData.items[e], d, l.data, false)
        }
    }
    pui.dt = d;
    c()
};
pui.round = function (b, a) {
    var c = Math.pow(10, a);
    return Math.round(b * c) / c
};
pui.sp = function (b) {
    if (b.indexOf("<%") < 0) return b;
    if (typeof window.ejs !== "object" || typeof window.ejs.render !== "function") {
        console.error("EJS templating library not loaded.");
        return b
    }
    if (pui.qt == null) {
        var a = {}, c = {}, d = pui.layers;
        if (d == null) d = [];
        d = d[d.length - 1];
        if (d == null) d = {formats: []};
        d = d.formats;
        for (var e = 0; e < d.length; e++) {
            var f = d[e];
            for (var h in f.data) {
                var g = f.data[h];
                if (h.substr(0, 3).toUpperCase() === "*IN") {
                    var l = h.substr(3);
                    isNaN(Number(l)) || (l = Number(l));
                    c[l] = g
                } else {
                    a[h.toLowerCase()] = g;
                    a[h.toUpperCase()] =
                        g;
                    a[h] = g
                }
            }
            if (f.subfiles) for (var n in f.subfiles) {
                g = f.subfiles[n].data;
                for (var o = f.subfiles[n]["field names"], i = [], r = 0; r < g.length; r++) {
                    for (var k = g[r], q = {}, s = 0; s < o.length; s++) {
                        l = o[s];
                        if (l.substr(0, 3).toUpperCase() === "*IN") {
                            l = l.substr(3);
                            isNaN(Number(l)) || (l = Number(l));
                            c[l] = k[s]
                        } else {
                            q[l.toLowerCase()] = k[s];
                            q[l.toUpperCase()] = k[s];
                            q[l] = k[s]
                        }
                    }
                    i.push(q)
                }
                a[n.toLowerCase()] = i;
                a[n.toUpperCase()] = i;
                a[n] = i
            }
        }
        h = false;
        for (var t in c) {
            h = true;
            break
        }
        if (h) a.FL = c;
        pui.qt = a
    }
    try {
        b = window.ejs.render(b, pui.qt)
    } catch (u) {
        console.error(u)
    }
    return b
};
pui.kB = function (b, a) {
    if (pui.rt) setTimeout(function () {
        pui.kB(b, a)
    }, 100); else if (pui.LF) b.innerHTML = pui.sp(a); else {
        pui.rt = true;
        b.innerHTML = "";
        pui.loadJS({
            path: pui.normalizeURL("/ejs/ejs.min.js"), callback: function () {
                b.innerHTML = pui.sp(a);
                pui.LF = true;
                pui.rt = false
            }, onerror: function () {
                pui.rt = false
            }
        })
    }
};
pui.nC = function () {
    function b() {
        typeof saveAs == "function" || pui.Py(pui.normalizeURL("/jszip/FileSaver.min.js")) != null ? a() : pui.loadJS({
            path: "/jszip/FileSaver.min.js",
            callback: a,
            onerror: function () {
                console.log("Failed to load /jszip/FileSaver.min.js")
            }
        })
    }

    function a() {
        f ? f.KH(c, g) : c()
    }

    function c() {
        f && l();
        var n = pui.Oh + '<Types xmlns="' + pui.Wl + '/package/2006/content-types"><Default Extension="rels" ContentType="' + pui.xu + '-package.relationships+xml"/><Default Extension="xml" ContentType="application/xml"/>';
        if (f) {
            var o = f.lG();
            for (var i in o) n += '<Default Extension="' + i + '" ContentType="' + o[i] + '"/>'
        }
        n += '<Override PartName="/xl/workbook.xml" ContentType="' + pui.cl + '.sheet.main+xml"/><Override PartName="/xl/worksheets/sheet1.xml" ContentType="' + pui.cl + '.worksheet+xml"/><Override PartName="/xl/styles.xml" ContentType="' + pui.cl + '.styles+xml"/><Override PartName="/xl/sharedStrings.xml" ContentType="' + pui.cl + '.sharedStrings+xml"/>';
        if (f != null) n += '<Override PartName="/xl/drawings/drawing1.xml" ContentType="' + pui.xu +
            '-officedocument.drawing+xml"/>';
        n += "</Types>";
        var r = pui.Oh + '<Relationships xmlns="' + pui.Pr + '"><Relationship Id="rId1" Type="' + pui.Ig + '/officeDocument" Target="xl/workbook.xml"/></Relationships>',
            k = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="' + pui.Qr + '" xmlns:r="' + pui.Ig + '"><sheets><sheet name="Sheet1" sheetId="1" r:id="rId1"/></sheets></workbook>',
            q = pui.Oh + '<Relationships xmlns="' + pui.Pr + '"><Relationship Id="rId3" Type="' + pui.Ig + '/styles" Target="styles.xml"/><Relationship Id="rId1" Type="' +
                pui.Ig + '/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId4" Type="' + pui.Ig + '/sharedStrings" Target="sharedStrings.xml"/></Relationships>',
            s = pui.Oh + '<styleSheet xmlns="' + pui.Qr + '"><fonts count="2"><font><sz val="11"/><color theme="1"/><name val="Calibri"/><family val="2"/><scheme val="minor"/></font><font><u/><sz val="11"/><color rgb="0563C1"/><name val="Calibri"/><family val="2"/><scheme val="minor"/></font></fonts><fills count="1"><fill><patternFill patternType="none"/></fill></fills><borders count="1"><border><left/><right/><top/><bottom/><diagonal/></border></borders><cellStyleXfs count="2"><xf numFmtId="0" fontId="0" fillId="0" borderId="0"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0"/></cellStyleXfs><cellXfs count="3"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" xfId="0"/><xf numFmtId="2" fontId="0" fillId="0" borderId="0" xfId="0" applyNumberFormat="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" xfId="1"/></cellXfs><dxfs count="0"/></styleSheet>',
            t;
        if (f || h) {
            t = pui.Oh + '<Relationships xmlns="' + pui.Pr + '">';
            if (f) t += '<Relationship Id="rId1" Type="' + pui.Ig + '/drawing" Target="../drawings/drawing1.xml"/>';
            if (h != null && h.length > 0) for (o = 0; o < h.length; o++) t += '<Relationship Id="rId' + (o + 2) + '" Type="' + pui.Ig + '/hyperlink" Target="' + h[o].target + '" TargetMode="External"/>';
            t += "</Relationships>"
        }
        i = new JSZip;
        i.file("[Content_Types].xml", n);
        i.file("_rels/.rels", r);
        i.file("xl/workbook.xml", k);
        i.file("xl/styles.xml", s);
        i.file("xl/sharedStrings.xml", e.GG());
        i.file("xl/_rels/workbook.xml.rels",
            q);
        i.file("xl/worksheets/sheet1.xml", e.HG());
        if (f || h) {
            i.file("xl/worksheets/_rels/sheet1.xml.rels", t);
            if (f) {
                i.file("xl/drawings/drawing1.xml", f.kG());
                i.file("xl/drawings/_rels/drawing1.xml.rels", f.jG());
                n = f.sG();
                for (o = 0; o < n.length; o++) n[o].iz && i.file("xl/media/" + n[o].name, n[o].iz, {binary: true})
            }
        }
        if (typeof Blob != "function") {
            n = i.generateAsync({type: "base64", compression: "DEFLATE"});
            n.then(function (u) {
                pui.Jf(pui.cl + ".sheet", d + ".xlsx", u)
            })
        } else {
            n = i.generateAsync({
                type: "blob", compression: "DEFLATE", mimeType: pui.cl +
                    ".sheet"
            });
            n.then(function (u) {
                saveAs(u, d + ".xlsx")
            })
        }
    }

    var d = "sheet", e, f, h, g, l;
    this.iB = function (n) {
        d = n
    };
    this.wB = function (n) {
        e = n
    };
    this.GJ = function (n) {
        f = n
    };
    this.Cv = function (n) {
        h = n
    };
    this.BJ = function (n, o) {
        g = n;
        l = o
    };
    this.mt = function () {
        typeof JSZip == "function" ? b() : pui.loadJS({
            path: "/jszip/jszip.min.js", callback: b, onerror: function () {
                console.log("Failed to load /jszip/jszip.min.js")
            }
        })
    }
};
pui.oC = function (b) {
    var a = this, c = null, d = {}, e = 0, f = 20, h = [], g = 0, l = false, n, o = [];
    this.formats = [];
    for (var i = 0; i < b; i++) a.formats[i] = {dataType: "char"};
    var r = [];
    (function () {
        for (var k = 0, q = "", s = "", t = -1; t < 26 && k < b; t++) {
            var u = -1;
            if (t >= 0) u = 0;
            for (u = u; u < 26 && k < b; u++) {
                for (var w = 0; w < 26 && k < b; w++) {
                    o[k] = q + s + "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[w];
                    k++
                }
                s = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[(u + 1) % 26]
            }
            q = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[t + 1]
        }
    })();
    this.pq = function () {
        if (c == null) c = [];
        c.push([]);
        g = 0
    };
    this.sy = function () {
        if (c == null) return -1;
        return c.length -
            1
    };
    this.EJ = function (k) {
        f = k
    };
    this.Oi = function (k) {
        h = k
    };
    this.fB = function (k, q) {
        if (q.dataType != null) if (q.dataType.length == 1) {
            var s = "char";
            switch (q.dataType) {
                case "L":
                    s = "date";
                    break;
                case "T":
                    s = "time";
                    break;
                case "Z":
                    s = "timestamp";
                    break;
                case "G":
                    s = "graphic";
                    break;
                case "F":
                    s = "floating";
                    break;
                case "P":
                    s = "packed";
                    break;
                case "B":
                case "I":
                case "S":
                case "U":
                case "Y":
                    s = "zoned";
                    break
            }
            a.formats[k].dataType = s
        } else a.formats[k].dataType = q.dataType;
        if (q.decPos != null) a.formats[k].decPos = q.decPos
    };
    this.fs = function (k, q) {
        var s =
            g;
        a.gr(g, k, q);
        g++;
        return s
    };
    this.EK = function () {
        l = true
    };
    this.Cv = function (k) {
        n = k
    };
    this.gr = function (k, q, s) {
        r[k] = c.length == 1 ? q.length : Math.max(r[k], q.length);
        var t = a.formats[k].dataType;
        if (s != null) t = s;
        if (t == "char" || t == "varchar" || t == "graphic" || t == "date" || t == "timestamp" || t == "time") {
            if (d[q] == null) d[q] = e++;
            q = d[q]
        }
        if (s != null && s != a.formats[k].dataType) q = {value: q, format: s};
        c[c.length - 1][k] = q
    };
    this.GG = function () {
        var k = [];
        for (var q in d) k[d[q]] = q;
        q = pui.Oh + '<sst xmlns="' + pui.Qr + '" count="' + String(k.length + 1) + '"  uniqueCount="' +
            String(k.length) + '">';
        for (var s = 0; s < k.length; s++) q += "<si><t>" + pui.Go(k[s]) + "</t></si>";
        q += "</sst>";
        return q
    };
    this.HG = function () {
        var k = pui.Oh + '<worksheet xmlns="' + pui.Qr + '" xmlns:r="' + pui.Ig + '"><dimension ref="A1:' + o[b - 1] + (c == null ? 1 : c.length) + '"/><sheetFormatPr defaultRowHeight="' + f * 0.75 + '" customHeight="1" /><cols>',
            q = {};
        if (n != null && n.length > 0) for (var s = 0; s < n.length; s++) {
            var t = n[s].row, u = n[s].col;
            if (q[t] == null) q[t] = {};
            q[t][u] = true
        }
        for (s = 0; s < b; s++) {
            t = 0;
            if (h[s] != null) t = pui.round((h[s] - 5) / 7, 2); else if (r[s] !=
                null && !isNaN(parseInt(r[s], 10))) t = Math.floor((r[s] * 7 + 5) / 7 * 256) / 256 + 5;
            if (t < 0) t = 0; else if (t > 255) t = 255;
            k += '<col min="' + (s + 1) + '" max="' + (s + 1) + '" width="' + t + '" ' + (a.formats[s].decPos == "2" ? 's="1"' : "") + ' customWidth="1"/>'
        }
        k += "</cols><sheetData>";
        if (c != null) for (u = 0; u < c.length; u++) {
            t = String(u + 1);
            k += '<row r="' + t + '">';
            for (s = 0; s < b; s++) {
                k += '<c r="' + o[s] + t + '"';
                var w = a.formats[s].dataType;
                if (typeof c[u][s] == "object" && c[u][s].format != null) {
                    w = c[u][s].format;
                    c[u][s] = c[u][s].value
                }
                if (w == "char" || w == "varchar" || w == "graphic" ||
                    w == "date" || w == "timestamp" || w == "time") {
                    k += ' t="s"';
                    if (q[u] != null && q[u][s] === true) k += ' s="2"'
                } else if (a.formats[s].decPos == "2") k += ' s="1"';
                if (c[u][s] == null) c[u][s] = "";
                k += "><v>" + c[u][s] + "</v></c>"
            }
            k += "</row>"
        }
        k += "</sheetData>";
        if (l) k += '<drawing r:id="rId1"/>';
        if (n != null && n.length > 0) {
            k += "<hyperlinks>";
            for (s = 0; s < n.length; s++) {
                t = n[s].row + 1;
                k += '<hyperlink ref="' + o[n[s].col] + t + '" r:id="rId' + (s + 2) + '" />'
            }
            k += "</hyperlinks>"
        }
        k += "</worksheet>";
        return k
    }
};
pui.MK = function () {
    var b = 1, a = {}, c = [], d = [];
    this.gE = function (e, f, h, g) {
        var l = h.match(/\.(jpe?g|gif|png|tiff?)(\?.*)?(#.*)?$/i);
        if (l == null) console.log("Unsupported image type in URI:", h); else {
            l = l[1].toLowerCase();
            if (l == "jpeg") l = "jpg"; else if (l == "tif") l = "tiff";
            for (var n = -1, o = 0; o < c.length; o++) if (c[o].uri == h) {
                n = o;
                break
            }
            if (n < 0) {
                n = "image" + b + "." + l;
                b++;
                a[l] = "image/" + l;
                c.push({name: n, uri: h});
                n = c.length - 1
            }
            d.push({row: e, col: f, rel: n, top: g.top, left: g.top, width: g.width, height: g.height})
        }
    };
    this.kG = function () {
        for (var e =
            pui.Oh + '<xdr:wsDr xmlns:xdr="' + pui.Wl + '/drawingml/2006/spreadsheetDrawing" xmlns:a="' + pui.Wl + '/drawingml/2006/main">', f = 0; f < d.length; f++) e += '<xdr:twoCellAnchor editAs="oneCell"><xdr:from><xdr:col>' + d[f].col + "</xdr:col><xdr:colOff>" + Math.round(d[f].left * 9525) + "</xdr:colOff><xdr:row>" + d[f].row + "</xdr:row><xdr:rowOff>" + Math.round(d[f].top * 9525) + "</xdr:rowOff></xdr:from><xdr:to><xdr:col>" + d[f].col + "</xdr:col><xdr:colOff>" + Math.round((d[f].width + d[f].left) * 9525) + "</xdr:colOff><xdr:row>" + d[f].row + "</xdr:row><xdr:rowOff>" +
            Math.round((d[f].height + d[f].top) * 9525) + '</xdr:rowOff></xdr:to><xdr:pic><xdr:nvPicPr><xdr:cNvPr id="' + (f + 1) + '" name="Picture ' + (f + 1) + '"/><xdr:cNvPicPr><a:picLocks noChangeAspect="1" noChangeArrowheads="1"/></xdr:cNvPicPr></xdr:nvPicPr><xdr:blipFill><a:blip xmlns:r="' + pui.Ig + '" r:embed="rId' + (d[f].rel + 1) + '"></a:blip><a:srcRect/><a:stretch><a:fillRect/></a:stretch></xdr:blipFill><xdr:spPr bwMode="auto"><a:xfrm></a:xfrm><a:prstGeom prst="rect"><a:avLst/></a:prstGeom><a:noFill/></xdr:spPr></xdr:pic><xdr:clientData/></xdr:twoCellAnchor>';
        e += "</xdr:wsDr>";
        return e
    };
    this.jG = function () {
        for (var e = pui.Oh + '<Relationships xmlns="' + pui.Pr + '">', f = 0; f < c.length; f++) e += '<Relationship Id="rId' + (f + 1) + '" Type="' + pui.Ig + '/image" Target="../media/' + c[f].name + '"/>';
        e += "</Relationships>";
        return e
    };
    this.KH = function (e, f) {
        function h() {
            g++;
            f(pui.getLanguageText("runtimeMsg", "downloading x", [Math.round(100 * (g / c.length)) + "%"]));
            if (!(g < c.length)) {
                for (var n = 0; n < c.length; n++) {
                    if (c[n].aj.status == 200) c[n].iz = c[n].aj.response;
                    c[n].aj = null;
                    try {
                        delete c[n].aj
                    } catch (o) {
                    }
                }
                e()
            }
        }

        if (c.length < 1) e(); else for (var g = 0, l = 0; l < c.length; l++) {
            c[l].aj = new XMLHttpRequest;
            c[l].aj.open("GET", c[l].uri, true);
            c[l].aj.responseType = "blob";
            c[l].aj.onload = h;
            c[l].aj.send()
        }
    };
    this.sG = function () {
        return c
    };
    this.lG = function () {
        return a
    }
};
pui.mG = function (b, a) {
    var c = b.library || "", d = b.file || "", e = b.customSql || "";
    if (Q == "genie") url = cc("PUI0009101.PGM");
    if (Q == "dspf") url = cc("PUI0009101.PGM", null, true);
    var f = new pui.Ajax(url);
    f.async = true;
    f.method = "post";
    f.postData = "file=" + encodeURIComponent(d);
    f.postData += "&library=" + encodeURIComponent(c);
    f.postData += "&customSql=" + encodeURIComponent(e);
    if (pui.isCloud) f.postData += "&workspace_id=" + pui.cloud.ws.id;
    console.log(f.postData);
    if (Q == "genie") f.postData += "&AUTH=" + GENIE_AUTH;
    f.postData += "&context=" +
        Q;
    f.suppressAlert = true;
    f.onready = function () {
        a(f)
    };
    f.send()
};
pui.di = function (b) {
    var a = null;
    if (Oa.length > 0) {
        a = Oa.length - 1;
        a = {operation: Oa[a].wq, id: Oa[a].id, text: Oa[a].text, text2: Oa[a].Br}
    }
    try {
        pui.temporary_property = a;
        eval("var response = { success: arguments[1], id: arguments[2], error: pui.temporary_property };");
        var c = eval(b);
        typeof c == "function" && c()
    } catch (d) {
        pui.qc(d, "OndbLoad Error:\n");
        return false
    }
    return true
};
pui.qc = function (b, a) {
    if (pui["alert script errors"] === false) {
        if (window.console && window.console.error) {
            if (b.stack) {
                var c = b.stack.split("\n");
                c[0] != b.toString() && c.splice(0, 0, b.toString());
                c = c.join("\n")
            } else c = b.toString();
            if (a != null) c = a + c;
            console.error(c)
        }
    } else {
        c = b.message;
        if (a != null) c = a + c;
        pui.alert(c)
    }
};
pui.sI = function () {
    ["pui-material-icons", "pui-fa-icons", "blueprint-defaults", "office-copy-defaults"].forEach(function (b) {
        var a = document.createElement("div");
        a.innerText = "face";
        a.className = b;
        a.style.visibility = "hidden";
        a.style.left = "-1000px";
        a.style.position = "absolute";
        document.body.appendChild(a)
    })
};
pui.VF = function () {
    pui.useAceEditor || pui.is_ie || pui.ie_mode <= 11 || ["profoundjs.d.ts", "profoundui.d.ts"].forEach(function (b) {
        var a = new pui.Ajax("/profoundui/proddata/typings/" + b);
        a.async = true;
        a.headers = {"Content-Type": "text/plain"};
        a.overrideMimeType = "text/plain";
        a.suppressAlert = true;
        a.onsuccess = function (c) {
            if (c = c.getResponseText()) if (!(!window.monaco || pui.useAceEditor)) {
                window.monaco.languages.typescript.javascriptDefaults.addExtraLib(c, b);
                window.monaco.languages.typescript.typescriptDefaults.addExtraLib(c,
                    b)
            }
        };
        a.onfail = function (c) {
            console.error(c.getStatusMessage())
        };
        a.send()
    })
};
pui.KL = function () {
    return [{type: "material", title: "Material Icons", classList: {"": "pui-material-icons"}}, {
        type: "fontAwesome",
        title: "Font Awesome Icons",
        classList: {
            brands: "pui-fa-brands-icons fa-",
            solid: "pui-fa-solid-icons fa-",
            regular: "pui-fa-regular-icons fa-"
        }
    }, {type: "jQueryIcons", title: "jQuery Mobile Icons", classList: {"": "ui-icon ui-icon-"}}]
};
pui.yg = function () {
    return Math.random().toString(36).replace(/[^a-z]+/g, "")
};
pui.rd = function (b) {
    function a(i) {
        yb(i);
        f = pui.Pk(i);
        h = pui.Sm(i);
        g = b.move.offsetLeft;
        l = b.move.offsetTop;
        if (typeof b.opacity === "number") {
            b.move.style.filter = "alpha(opacity=" + b.opacity + ")";
            b.move.style.opacity = "0." + b.opacity
        }
        gc(document, "mousemove", n);
        gc(document, "mouseup", e)
    }

    function c(i) {
        i = pui.Qk(i);
        if (i.x < b.Hj) i.x = b.Hj;
        if (i.y < b.xo) i.y = b.xo;
        if (typeof b.Ln === "number" && i.x > b.Ln) i.x = b.Ln;
        if (typeof b.km === "number" && i.y > b.km) i.y = b.km;
        b.move.style.left = g - f + i.x + "px";
        b.move.style.top = l - h + i.y + "px";
        typeof b.lt ===
        "function" && b.lt()
    }

    function d(i) {
        var r = pui.Qk(i);
        i = g + r.x - f;
        r = l + r.y - h;
        if (i < b.Hj) i = b.Hj;
        if (r < b.xo) r = b.xo;
        if (typeof b.Ln === "number" && i > b.Ln) i = b.Ln;
        if (typeof b.km === "number" & r > b.km) r = b.km;
        b.move.style.left = i + "px";
        b.move.style.top = r + "px";
        typeof b.XH === "function" && b.XH()
    }

    function e() {
        ic(document, "mousemove", n);
        ic(document, "mouseup", e);
        typeof b.Bo === "function" && b.Bo();
        if (typeof b.opacity === "number") {
            b.move.style.filter = "";
            b.move.style.opacity = ""
        }
    }

    var f, h, g, l;
    if (typeof b.Hj !== "number") b.Hj = 0;
    if (typeof b.xo !==
        "number") b.xo = 0;
    var n = b.ex === "click" ? c : d;
    if (b.wc instanceof Array) for (var o = 0; o < b.wc.length; o++) gc(b.wc[o], "mousedown", a); else b.wc != null && gc(b.wc, "mousedown", a)
};
pui.Kh = function (b) {
    if (window.React && b != null && b.pui && b.pui.data && b.pui.Cm) {
        var a = {};
        a[b.pui.Cm] = [b];
        a = pui.jx(a);
        b.pui.data[b.pui.Cm] = a[b.pui.Cm]
    }
};
pui.ko = function (b, a) {
    if (Q == "dspf") {
        if (pui.yd) {
            var c = vb(b);
            c.modified = true;
            if (c.parentNode != null && c.parentNode.comboBoxWidget != null) {
                c = c.parentNode;
                c.modified = true
            }
            pui.modified = true;
            if (c.id != null && c.id.indexOf(".") == -1 && a) pui.ai[a] = true;
            window.React && c.pui.data && c.pui.Cm && setTimeout(function () {
                pui.Kh(c)
            }, 0)
        }
    } else if (pui.J.rendered) {
        c = vb(b);
        if (c != null) {
            var d = c.S;
            if (d != null) {
                d = d.idx;
                if (d != null) {
                    d = String(d);
                    if (c.OG != null) d = "s" + d + "." + c.OG;
                    pui.response[d] = c;
                    if (c.type == "radio" && pui.genie.allowRadioClear &&
                        c.className.indexOf("selection-field-single") >= 0) if (b.type == "click") setTimeout(function () {
                        if (pui.ie_mode == 8 && c.checked != c.nM) c.nu = true;
                        if (c.checked && !c.nu) c.checked = false;
                        c.nu = false
                    }, 0); else if (b.type == "change") c.nu = true
                }
            }
        }
    }
};
pui.JF = function (b) {
    b = b || window.event;
    if (b.keyCode == pui.dup.keyCode) if (!(pui.dup.shift && !b.shiftKey)) if (!(pui.dup.ctrl && !b.ctrlKey)) if (!(pui.dup.alt && !b.altKey)) {
        var a = vb(b), c = a.value, d = a.maxLength;
        if (d == null) d = 0;
        d = Number(d);
        if (isNaN(d)) d = 0;
        var e = Sb(a);
        if (e < 0) e = 0;
        for (c = c.substr(0, e); c.length < e;) c += " ";
        for (; c.length < d;) c += pui.dup["char"];
        a.value = c;
        pui.ko(b);
        pui.St(a);
        yb(b);
        return false
    }
};
pui.hu = function (b) {
    var a = "";
    if (typeof b == "string") a = b;
    if (typeof b == "object") a = b.value;
    if (a == null) a = "";
    if (typeof a != "string") a = String(a);
    return a.indexOf(pui.dup["char"]) != -1
};
pui.hn = function (b) {
    switch (b) {
        case "subfile next changed":
            return true;
        case "subfile message key":
            return true;
        case "subfile program message queue":
            return true;
        case "selection field":
            return true;
        case "subfile changed":
            return true;
        case "row font color":
            return true;
        case "row background":
            return true;
        default:
            return false
    }
};
pui.AK = function (b) {
    if (b !== null) {
        var a = [];
        a[128] = "20";
        a[129] = "21";
        a[130] = "22";
        a[131] = "23";
        a[132] = "24";
        a[10] = "25";
        a[23] = "26";
        a[27] = "27";
        a[136] = "28";
        a[137] = "29";
        a[138] = "2A";
        a[139] = "2B";
        a[140] = "2C";
        a[5] = "2D";
        a[6] = "2E";
        a[7] = "2F";
        a[144] = "30";
        a[145] = "31";
        a[22] = "32";
        a[147] = "33";
        a[148] = "34";
        a[149] = "35";
        a[150] = "36";
        a[4] = "37";
        a[152] = "38";
        a[153] = "39";
        a[154] = "3A";
        a[155] = "3B";
        a[20] = "3C";
        a[21] = "3D";
        a[158] = "3E";
        a[26] = "3F";
        a[181] = "A0";
        a[126] = "A1";
        a[115] = "A2";
        a[116] = "A3";
        a[117] = "A4";
        a[118] = "A5";
        a[119] = "A6";
        a[120] =
            "A7";
        a[121] = "A8";
        a[122] = "A9";
        a[161] = "AA";
        a[191] = "AB";
        a[208] = "AC";
        a[221] = "AD";
        a[222] = "AE";
        a[174] = "AF";
        a[94] = "B0";
        a[163] = "B1";
        a[165] = "B2";
        a[183] = "B3";
        a[169] = "B4";
        a[167] = "B5";
        a[182] = "B6";
        a[188] = "B7";
        a[189] = "B8";
        a[190] = "B9";
        a[91] = "BA";
        a[93] = "BB";
        a[175] = "BC";
        a[168] = "BD";
        a[180] = "BE";
        a[215] = "BF";
        return a[b]
    }
};
pui.$G = function (b) {
    if (b == null || typeof b != "string") return [];
    var a = [];
    a["20"] = ["GRN"];
    a["21"] = ["GRN", "RI"];
    a["22"] = ["WHT"];
    a["23"] = ["WHT", "RI"];
    a["24"] = ["GRN", "UL"];
    a["25"] = ["GRN", "UL", "RI"];
    a["26"] = ["WHT", "UL"];
    a["27"] = ["ND"];
    a["28"] = ["RED"];
    a["29"] = ["RED", "RI"];
    a["2A"] = ["RED", "HI"];
    a["2B"] = ["RED", "HI", "RI"];
    a["2C"] = ["RED", "UL"];
    a["2D"] = ["RED", "UL", "RI"];
    a["2E"] = ["RED", "UL", "BL"];
    a["2F"] = ["ND"];
    a["30"] = ["TRQ", "CS"];
    a["31"] = ["TRQ", "CS", "RI"];
    a["32"] = ["YLW", "CS"];
    a["33"] = ["WHT", "RI", "CS"];
    a["34"] = ["TRQ",
        "UL", "CS"];
    a["35"] = ["TRQ", "UL", "RI", "CS"];
    a["36"] = ["YLW", "UL", "CS"];
    a["37"] = ["ND"];
    a["38"] = ["PNK"];
    a["39"] = ["PNK", "RI"];
    a["3A"] = ["BLU"];
    a["3B"] = ["BLU", "RI"];
    a["3C"] = ["PNK", "UL"];
    a["3D"] = ["PNK", "UL", "RI"];
    a["3E"] = ["BLU", "UL"];
    a["3F"] = ["ND"];
    a.A0 = ["GRN", "PR"];
    a.A1 = ["GRN", "RI", "PR"];
    a.A2 = ["WHT", "PR"];
    a.A3 = ["WHT", "RI", "PR"];
    a.A4 = ["GRN", "UL", "PR"];
    a.A5 = ["GRN", "UL", "RI", "PR"];
    a.A6 = ["WHT", "UL", "PR"];
    a.A7 = ["ND", "PR"];
    a.A8 = ["RED", "PR"];
    a.A9 = ["RED", "RI", "PR"];
    a.AA = ["RED", "HI", "PR"];
    a.AB = ["RED", "HI", "RI", "PR"];
    a.AC = ["RED", "UL", "PR"];
    a.AD = ["RED", "UL", "RI", "PR"];
    a.AE = ["RED", "UL", "BL", "PR"];
    a.AF = ["ND", "PR"];
    a.B0 = ["TRQ", "CS", "PR"];
    a.B1 = ["TRQ", "CS", "RI", "PR"];
    a.B2 = ["YLW", "CS", "PR"];
    a.B3 = ["WHT", "RI", "CS", "PR"];
    a.B4 = ["TRQ", "UL", "CS", "PR"];
    a.B5 = ["TRQ", "UL", "RI", "CS", "PR"];
    a.B6 = ["YLW", "UL", "CS", "PR"];
    a.B7 = ["ND", "PR"];
    a.B8 = ["PNK", "PR"];
    a.B9 = ["PNK", "RI", "PR"];
    a.BA = ["BLU", "PR"];
    a.BB = ["BLU", "RI", "PR"];
    a.BC = ["PNK", "UL", "PR"];
    a.BD = ["PNK", "UL", "RI", "PR"];
    a.BE = ["BLU", "UL", "PR"];
    a.BF = ["ND", "PR"];
    return a[b]
};
pui.ax = function (b) {
    if (b == null || typeof b != "string" || b.length < 1) return [];
    b = pui.AK(b.charCodeAt(0));
    return pui.$G(b)
};
pui.oI = function (b) {
    b = b.split("(");
    if (b.length != 2) return null;
    var a = b[0], c = b[1];
    if (c.substr(c.length - 1, 1) != ")") return null;
    c = c.substr(0, c.length - 1);
    b = a.split("/");
    if (b.length != 2) return null;
    var d = b[0];
    a = b[1];
    d = Zb(d).toUpperCase();
    if (d == "") return null;
    a = Zb(a).toUpperCase();
    if (a == "") return null;
    c = Zb(c).toUpperCase();
    if (c == "") return null;
    return {library: d, file: a, member: c}
};
pui.yE = function (b, a) {
    var c = pui.og;
    if (!(Q != "dspf" || c == null)) {
        if (pui.Ma[c] != null) for (var d in pui.Ma[c]) for (var e = pui.Ma[c][d], f = 0; f < e.length; f++) if (e[f] == a) {
            e.splice(f, 1);
            break
        }
        a.Wf = b;
        if (!(b == null || b == "")) {
            if (pui.Ma[c] == null) pui.Ma[c] = {};
            if (pui.Ma[c][b] == null) pui.Ma[c][b] = [];
            pui.Ma[c][b].push(a);
            if (a.onclick == null || a.Fa == null) pui.fj(a)
        }
    }
};
pui.wG = function (b) {
    var a;
    for (b = b.parentNode; b != null && b != pui.runtimeContainer;) {
        if (b.ze == true) {
            a = b;
            break
        }
        b = b.parentNode
    }
    return a
};
var R = null, kc = {}, lc = null, nc = null;
pui.Yi = false;
pui.a = function (b, a, c, d) {
    var e = "<hr><b title='The default value(s) of this property.'>Default Value:</b> ";
    e += "<code class='propdefault'>";
    e += b === "true" ? "<span title='The default value of the property is true.'>true</span>" : b === "blank" ? "<span title='The default value of the property is unset or not defined.'>[blank]</span>" : b === "css" ? "[<span title='The default value is the value defined in the CSS &#010;(theme/developer CSS classes defined in a CSS&#010;file or \"style\" DOM attribute) for the element.'>CSS value</span>]" : b ===
    "false" ? "<span title='The default value of the property is false.'>false</span>" : b === "placeholder" ? '[<span title=\'The default value of the property is placeholder &#010;text, such as "Lorem Ipsum..." or "HTML Content".\'>placeholder text</span>]' : b === "browser" ? "[<span title='The default is determined by the browser for the element.'>browser setting</span>]" : b === "theme" ? "[<span title='The default value of this property is based on the selected widget and its theme/template/purpose.'>selected widget</span>]" :
        b === "skin" ? "[<span title='The default value of this property is determined by &#010;the selected skin and its defaults, CSS, and/or JavaScript customizations.'>selected skin</span>]" : b === "id" ? "[<span title='The default ID is based on the name of the selected &#010;widget with no spaces and the first letter of each word capitalized.'>WidgetName</span>][<span title='A whole number value starting from 1 determined by how many of the same widget have previously been added to the Design grid.'>number</span>]" :
            b === "bind" ? "<span title='This property requires being bound and a value passed to or from your program.'>[bound value]</span>" : b === "widget" ? "[<span title='The default value of this property is determined by the selected widget.'>selected widget</span>]" : b === "position" ? "[<span title='The default values are determined by where the &#010;widget is dropped/placed on the Designer grid.'>user drop point</span>]" : b;
    e += "</code>";
    e += "<hr><b title='A general description of the widget's properties.'>Description: </b>";
    e += a;
    if (c != null) {
        if (c.indexOf("other") != -1) e += " The 'Other...' option can be selected to write in a custom value.";
        if (c.indexOf("color") != -1) e += "<hr><span style='font-weight:bold;'>Usage</span>: Enter a color name, hex, or select a color.<hr><span style='font-weight:bold;'>Valid Color Names</span>: <select style='background-color: #eee; border:none; width: 125px; height: 14px; font-size: 12px; font-family: Arial;'><option>Text Colors</option><option style='font-weight: bold; background-color: #71706F !important; color: AliceBlue;'>AliceBlue</option><option style='font-weight: bold; background-color: #716363 !important; color: AntiqueWhite;'>AntiqueWhite</option><option style='font-weight: bold; background-color: #716363 !important; color: Aqua;'>Aqua</option><option style='font-weight: bold; background-color: #716363 !important; color: Aquamarine;'>Aquamarine</option><option style='font-weight: bold; background-color: #8A6C6C !important; color: Azure;'>Azure</option><option style='font-weight: bold; background-color: #716C6F !important; color: Beige;'>Beige</option><option style='font-weight: bold; background-color: #686964 !important; color: Bisque;'>Bisque</option><option style='font-weight: bold; background-color: #828282 !important; color: Black;'>Black</option><option style='font-weight: bold; background-color: #825A5A !important; color: BlanchedAlmond;'>BlanchedAlmond</option><option style='font-weight: bold; background-color: #E6E6D3 !important; color: Blue;'>Blue</option><option style='font-weight: bold; background-color: #E3E3E2 !important; color: BlueViolet;'>BlueViolet</option><option style='font-weight: bold; background-color: #D9D2D2 !important; color: Brown;'>Brown</option><option style='font-weight: bold; background-color: #483723 !important; color: BurlyWood;'>BurlyWood</option><option style='font-weight: bold; background-color: #201822 !important; color: CadetBlue;'>CadetBlue</option><option style='font-weight: bold; background-color: #465040 !important; color: Chartreuse;'>Chartreuse</option><option style='font-weight: bold; background-color: #080901 !important; color: Chocolate;'>Chocolate</option><option style='font-weight: bold; background-color: #372821 !important; color: Coral;'>Coral</option><option style='font-weight: bold; background-color: #241A20 !important; color: CornflowerBlue; '>CornflowerBlue</option><option style='font-weight: bold; background-color: #695C30 !important; color: Cornsilk;'>Cornsilk</option><option style='font-weight: bold; background-color: #F6F6F3 !important; color: Crimson;'>Crimson</option><option style='font-weight: bold; background-color: #4A5469 !important; color: Cyan;'>Cyan</option><option style='font-weight: bold; background-color: #95A5A2 !important; color: DarkBlue;'>DarkBlue</option><option style='font-weight: bold; background-color: #0B040E !important; color: DarkCyan;'>DarkCyan</option><option style='font-weight: bold; background-color: #211412 !important; color: DarkGoldenRod;'>DarkGoldenRod</option><option style='font-weight: bold; background-color: #2C2C2C !important; color: DarkGray;'>DarkGray</option><option style='font-weight: bold; background-color: #CCCCCC !important; color: DarkGreen;'>DarkGreen</option><option style='font-weight: bold; background-color: #403129 !important; color: DarkKhaki;'>DarkKhaki</option><option style='font-weight: bold; background-color: #C3D4D9 !important; color: DarkMagenta;'>DarkMagenta</option><option style='font-weight: bold; background-color: #DEE7ED !important; color: DarkOliveGreen;'>DarkOliveGreen</option><option style='font-weight: bold; background-color: #372C21 !important; color: DarkOrange;'>DarkOrange</option><option style='font-weight: bold; background-color: #E4E6D6 !important; color: DarkOrchid;'>DarkOrchid</option><option style='font-weight: bold; background-color: #BBBFAC !important; color: DarkRed;'>DarkRed</option><option style='font-weight: bold; background-color: #3A2923 !important; color: DarkSalmon;'>DarkSalmon</option><option style='font-weight: bold; background-color: #16353F !important; color: DarkSeaGreen;'>DarkSeaGreen</option><option style='font-weight: bold; background-color: #D9CBCB !important; color: DarkSlateBlue;'>DarkSlateBlue</option><option style='font-weight: bold; background-color: #D1D1D1 !important; color: DarkSlateGray;'>DarkSlateGray</option><option style='font-weight: bold; background-color: #1D393B !important; color: DarkTurquoise;'>DarkTurquoise</option><option style='font-weight: bold; background-color: #EBEDED !important; color: DarkViolet;'>DarkViolet</option><option style='font-weight: bold; background-color: #1B0E1E !important; color: DeepPink;'>DeepPink</option><option style='font-weight: bold; background-color: #053725 !important; color: DeepSkyBlue;'>DeepSkyBlue</option><option style='font-weight: bold; background-color: #EBEBEB !important; color: DimGray;'>DimGray</option><option style='font-weight: bold; background-color: #2A1237 !important; color: DodgerBlue;'>DodgerBlue</option><option style='font-weight: bold; background-color: #E0E6CE !important; color: FireBrick;'>FireBrick</option><option style='font-weight: bold; background-color: #69604C !important; color: FloralWhite;'>FloralWhite</option><option style='font-weight: bold; background-color: #01030E !important; color: ForestGreen;'>ForestGreen</option><option style='font-weight: bold; background-color: #370537 !important; color: Fuchsia;'>Fuchsia</option><option style='font-weight: bold; background-color: #5F4C4C !important; color: Gainsboro;'>Gainsboro</option><option style='font-weight: bold; background-color: #615B69 !important; color: GhostWhite;'>GhostWhite</option><option style='font-weight: bold; background-color: #504930 !important; color: Gold;'>Gold</option><option style='font-weight: bold; background-color: #442E2C !important; color: GoldenRod;'>GoldenRod</option><option style='font-weight: bold; background-color: #020202 !important; color: Gray;'>Gray</option><option style='font-weight: bold; background-color: #BCE8D6 !important; color: Green;'>Green</option><option style='font-weight: bold; background-color: #275C69 !important; color: GreenYellow;'>GreenYellow</option><option style='font-weight: bold; background-color: #4C6269 !important; color: HoneyDew;'>HoneyDew</option><option style='font-weight: bold; background-color: #501130 !important; color: HotPink;'>HotPink</option><option style='font-weight: bold; background-color: #000402 !important; color: IndianRed;'>IndianRed</option><option style='font-weight: bold; background-color: #A3B0B6 !important; color: Indigo;'>Indigo</option><option style='font-weight: bold; background-color: #695D58 !important; color: Ivory;'>Ivory</option><option style='font-weight: bold; background-color: #5A5208 !important; color: Khaki;'>Khaki</option><option style='font-weight: bold; background-color: #5C5064 !important; color: Lavender;'>Lavender</option><option style='font-weight: bold; background-color: #825463 !important; color: LavenderBlush;'>LavenderBlush</option><option style='font-weight: bold; background-color: #4B4D4B !important; color: LawnGreen;'>LawnGreen</option><option style='font-weight: bold; background-color: #69605D !important; color: LemonChiffon;'>LemonChiffon</option><option style='font-weight: bold; background-color: #334850 !important; color: LightBlue;'>LightBlue</option><option style='font-weight: bold; background-color: #5A0C0C !important; color: LightCoral;'>LightCoral</option><option style='font-weight: bold; background-color: #5D5C69 !important; color: LightCyan;'>LightCyan</option><option style='font-weight: bold; background-color: #64605C !important; color: LightGoldenRodYellow;'>LightGoldenRodYellow</option><option style='font-weight: bold; background-color: #6F4343 !important; color: LightGray;'>LightGray</option><option style='font-weight: bold; background-color: #355158 !important; color: LightGreen;'>LightGreen</option><option style='font-weight: bold; background-color: #50404B !important; color: LightPink;'>LightPink</option><option style='font-weight: bold; background-color: #373430 !important; color: LightSalmon;'>LightSalmon</option><option style='font-weight: bold; background-color: #242B35 !important; color: LightSeaGreen;'>LightSeaGreen</option><option style='font-weight: bold; background-color: #034B3C !important; color: LightSkyBlue;'>LightSkyBlue</option><option style='font-weight: bold; background-color: #240535 !important; color: LightSlateGray;'>LightSlateGray</option><option style='font-weight: bold; background-color: #074845 !important; color: LightSteelBlue;'>LightSteelBlue</option><option style='font-weight: bold; background-color: #69605C !important; color: LightYellow;'>LightYellow</option><option style='font-weight: bold; background-color: #165869 !important; color: Lime;'>Lime</option><option style='font-weight: bold; background-color: #233237 !important; color: LimeGreen;'>LimeGreen</option><option style='font-weight: bold; background-color: #645A50 !important; color: Linen;'>Linen</option><option style='font-weight: bold; background-color: #370537 !important; color: Magenta;'>Magenta</option><option style='font-weight: bold; background-color: #CEB291 !important; color: Maroon;'>Maroon</option><option style='font-weight: bold; background-color: #2C3732 !important; color: MediumAquaMarine;'>MediumAquaMarine</option><option style='font-weight: bold; background-color: #CCA5E7 !important; color: MediumBlue;'>MediumBlue</option><option style='font-weight: bold; background-color: #160D3D !important; color: MediumOrchid;'>MediumOrchid</option><option style='font-weight: bold; background-color: #28012C !important; color: MediumPurple;'>MediumPurple</option><option style='font-weight: bold; background-color: #073336 !important; color: MediumSeaGreen;'>MediumSeaGreen</option><option style='font-weight: bold; background-color: #0B013F !important; color: MediumSlateBlue;'>MediumSlateBlue</option><option style='font-weight: bold; background-color: #644463 !important; color: MediumSpringGreen;'>MediumSpringGreen</option><option style='font-weight: bold; background-color: #2C3D54 !important; color: MediumTurquoise;'>MediumTurquoise</option><option style='font-weight: bold; background-color: #E3EDFB !important; color: MediumVioletRed;'>MediumVioletRed</option><option style='font-weight: bold; background-color: #A4859B !important; color: MidnightBlue;'>MidnightBlue</option><option style='font-weight: bold; background-color: #446469 !important; color: MintCream;'>MintCream</option><option style='font-weight: bold; background-color: #695450 !important; color: MistyRose;'>MistyRose</option><option style='font-weight: bold; background-color: #695454 !important; color: Moccasin;'>Moccasin</option><option style='font-weight: bold; background-color: #695454 !important; color: NavajoWhite;'>NavajoWhite</option><option style='font-weight: bold; background-color: #CE7EBE !important; color: Navy;'>Navy</option><option style='font-weight: bold; background-color: #675A48 !important; color: OldLace;'>OldLace</option><option style='font-weight: bold; background-color: #050535 !important; color: Olive;'>Olive</option><option style='font-weight: bold; background-color: #110D02 !important; color: OliveDrab;'>OliveDrab</option><option style='font-weight: bold; background-color: #373232 !important; color: Orange;'>Orange</option><option style='font-weight: bold; background-color: #370E00 !important; color: OrangeRed;'>OrangeRed</option><option style='font-weight: bold; background-color: #231E2B !important; color: Orchid;'>Orchid</option><option style='font-weight: bold; background-color: #585224 !important; color: PaleGoldenRod;'>PaleGoldenRod</option><option style='font-weight: bold; background-color: #596561 !important; color: PaleGreen;'>PaleGreen</option><option style='font-weight: bold; background-color: #0C5858 !important; color: PaleTurquoise;'>PaleTurquoise</option><option style='font-weight: bold; background-color: #450117 !important; color: PaleVioletRed;'>PaleVioletRed</option><option style='font-weight: bold; background-color: #825453 !important; color: PapayaWhip;'>PapayaWhip</option><option style='font-weight: bold; background-color: #504C49 !important; color: PeachPuff;'>PeachPuff</option><option style='font-weight: bold; background-color: #372516 !important; color: Peru;'>Peru</option><option style='font-weight: bold; background-color: #693A5C !important; color: Pink;'>Pink</option><option style='font-weight: bold; background-color: #3A3347 !important; color: Plum;'>Plum</option><option style='font-weight: bold; background-color: #4A5982 !important; color: PowderBlue;'>PowderBlue</option><option style='font-weight: bold; background-color: #BAC9CE !important; color: Purple;'>Purple</option><option style='font-weight: bold; background-color: #BDCDC8 !important; color: RebeccaPurple;'>RebeccaPurple</option><option style='font-weight: bold; background-color: #370000 !important; color: Red;'>Red</option><option style='font-weight: bold; background-color: #580505 !important; color: RosyBrown;'>RosyBrown</option><option style='font-weight: bold; background-color: #F2FBE2 !important; color: RoyalBlue;'>RoyalBlue</option><option style='font-weight: bold; background-color: #D9D1CB !important; color: SaddleBrown;'>SaddleBrown</option><option style='font-weight: bold; background-color: #642119 !important; color: Salmon;'>Salmon</option><option style='font-weight: bold; background-color: #45382F !important; color: SandyBrown;'>SandyBrown</option><option style='font-weight: bold; background-color: #010E27 !important; color: SeaGreen;'>SeaGreen</option><option style='font-weight: bold; background-color: #825E45 !important; color: SeaShell;'>SeaShell</option><option style='font-weight: bold; background-color: #E8EAEE !important; color: Sienna;'>Sienna</option><option style='font-weight: bold; background-color: #5C4A4A !important; color: Silver;'>Silver</option><option style='font-weight: bold; background-color: #1F4455 !important; color: SkyBlue;'>SkyBlue</option><option style='font-weight: bold; background-color: #FFF2CD !important; color: SlateBlue;'>SlateBlue</option><option style='font-weight: bold; background-color: #13102C !important; color: SlateGray;'>SlateGray</option><option style='font-weight: bold; background-color: #826464 !important; color: Snow;'>Snow</option><option style='font-weight: bold; background-color: #546469 !important; color: SpringGreen;'>SpringGreen</option><option style='font-weight: bold; background-color: #09141E !important; color: SteelBlue;'>SteelBlue</option><option style='font-weight: bold; background-color: #554737 !important; color: Tan;'>Tan</option><option style='font-weight: bold; background-color: #202835 !important; color: Teal;'>Teal</option><option style='font-weight: bold; background-color: #744256 !important; color: Thistle;'>Thistle</option><option style='font-weight: bold; background-color: #372C2A !important; color: Tomato;'>Tomato</option><option style='font-weight: bold; background-color: #2E557C !important; color: Turquoise;'>Turquoise</option><option style='font-weight: bold; background-color: #710F71 !important; color: Violet;'>Violet</option><option style='font-weight: bold; background-color: #785757 !important; color: Wheat;'>Wheat</option><option style='font-weight: bold; background-color: #827373 !important; color: White;'>White</option><option style='font-weight: bold; background-color: #786A6A !important; color: WhiteSmoke;'>WhiteSmoke</option><option style='font-weight: bold; background-color: #82695C !important; color: Yellow;'>Yellow</option><option style='font-weight: bold; background-color: #504C43 !important; color: YellowGreen;'>YellowGreen</option></select><br>All other colors must be specified using a hex value (ex: <span style='color:#FF0000;'>#FF0000</span>)<br>&ensp;";
        if (c.indexOf("background color") != -1) e += "<hr><span style='font-weight:bold;'>Usage</span>: Enter a color name, hex, or select a color.<hr><span style='font-weight:bold;'>Valid Color Names</span>: <select style='background-color: #eee; border:none; width: 125px; height: 14px; font-size: 12px; font-family: Arial;'><option>Background Colors</option><option style='font-weight: bold; color: #71706F !important; background-color: AliceBlue !important;'>AliceBlue</option><option style='font-weight: bold; color: #716363 !important; background-color: AntiqueWhite !important;'>AntiqueWhite</option><option style='font-weight: bold; color: #716363 !important; background-color: Aqua !important;'>Aqua</option><option style='font-weight: bold; color: #716363 !important; background-color: Aquamarine !important;'>Aquamarine</option><option style='font-weight: bold; color: #8A6C6C !important; background-color: Azure !important;'>Azure</option><option style='font-weight: bold; color: #716C6F !important; background-color: Beige !important;'>Beige</option><option style='font-weight: bold; color: #686964 !important; background-color: Bisque !important;'>Bisque</option><option style='font-weight: bold; color: #828282 !important; background-color: Black !important;'>Black</option><option style='font-weight: bold; color: #825A5A !important; background-color: BlanchedAlmond !important;'>BlanchedAlmond</option><option style='font-weight: bold; color: #E6E6D3 !important; background-color: Blue !important;'>Blue</option><option style='font-weight: bold; color: #E3E3E2 !important; background-color: BlueViolet !important;'>BlueViolet</option><option style='font-weight: bold; color: #D9D2D2 !important; background-color: Brown !important;'>Brown</option><option style='font-weight: bold; color: #483723 !important; background-color: BurlyWood !important;'>BurlyWood</option><option style='font-weight: bold; color: #201822 !important; background-color: CadetBlue !important;'>CadetBlue</option><option style='font-weight: bold; color: #465040 !important; background-color: Chartreuse !important;'>Chartreuse</option><option style='font-weight: bold; color: #080901 !important; background-color: Chocolate !important;'>Chocolate</option><option style='font-weight: bold; color: #372821 !important; background-color: Coral !important;'>Coral</option><option style='font-weight: bold; color: #241A20 !important; background-color: CornflowerBlue !important; '>CornflowerBlue</option><option style='font-weight: bold; color: #695C30 !important; background-color: Cornsilk !important;'>Cornsilk</option><option style='font-weight: bold; color: #F6F6F3 !important; background-color: Crimson !important;'>Crimson</option><option style='font-weight: bold; color: #4A5469 !important; background-color: Cyan !important;'>Cyan</option><option style='font-weight: bold; color: #95A5A2 !important; background-color: DarkBlue !important;'>DarkBlue</option><option style='font-weight: bold; color: #0B040E !important; background-color: DarkCyan !important;'>DarkCyan</option><option style='font-weight: bold; color: #211412 !important; background-color: DarkGoldenRod !important;'>DarkGoldenRod</option><option style='font-weight: bold; color: #2C2C2C !important; background-color: DarkGray !important;'>DarkGray</option><option style='font-weight: bold; color: #CCCCCC !important; background-color: DarkGreen !important;'>DarkGreen</option><option style='font-weight: bold; color: #403129 !important; background-color: DarkKhaki !important;'>DarkKhaki</option><option style='font-weight: bold; color: #C3D4D9 !important; background-color: DarkMagenta !important;'>DarkMagenta</option><option style='font-weight: bold; color: #DEE7ED !important; background-color: DarkOliveGreen !important;'>DarkOliveGreen</option><option style='font-weight: bold; color: #372C21 !important; background-color: DarkOrange !important;'>DarkOrange</option><option style='font-weight: bold; color: #E4E6D6 !important; background-color: DarkOrchid !important;'>DarkOrchid</option><option style='font-weight: bold; color: #BBBFAC !important; background-color: DarkRed !important;'>DarkRed</option><option style='font-weight: bold; color: #3A2923 !important; background-color: DarkSalmon !important;'>DarkSalmon</option><option style='font-weight: bold; color: #16353F !important; background-color: DarkSeaGreen !important;'>DarkSeaGreen</option><option style='font-weight: bold; color: #D9CBCB !important; background-color: DarkSlateBlue !important;'>DarkSlateBlue</option><option style='font-weight: bold; color: #D1D1D1 !important; background-color: DarkSlateGray !important;'>DarkSlateGray</option><option style='font-weight: bold; color: #1D393B !important; background-color: DarkTurquoise !important;'>DarkTurquoise</option><option style='font-weight: bold; color: #EBEDED !important; background-color: DarkViolet !important;'>DarkViolet</option><option style='font-weight: bold; color: #1B0E1E !important; background-color: DeepPink !important;'>DeepPink</option><option style='font-weight: bold; color: #053725 !important; background-color: DeepSkyBlue !important;'>DeepSkyBlue</option><option style='font-weight: bold; color: #EBEBEB !important; background-color: DimGray !important;'>DimGray</option><option style='font-weight: bold; color: #2A1237 !important; background-color: DodgerBlue !important;'>DodgerBlue</option><option style='font-weight: bold; color: #E0E6CE !important; background-color: FireBrick !important;'>FireBrick</option><option style='font-weight: bold; color: #69604C !important; background-color: FloralWhite !important;'>FloralWhite</option><option style='font-weight: bold; color: #01030E !important; background-color: ForestGreen !important;'>ForestGreen</option><option style='font-weight: bold; color: #370537 !important; background-color: Fuchsia !important;'>Fuchsia</option><option style='font-weight: bold; color: #5F4C4C !important; background-color: Gainsboro !important;'>Gainsboro</option><option style='font-weight: bold; color: #615B69 !important; background-color: GhostWhite !important;'>GhostWhite</option><option style='font-weight: bold; color: #504930 !important; background-color: Gold !important;'>Gold</option><option style='font-weight: bold; color: #442E2C !important; background-color: GoldenRod !important;'>GoldenRod</option><option style='font-weight: bold; color: #020202 !important; background-color: Gray !important;'>Gray</option><option style='font-weight: bold; color: #BCE8D6 !important; background-color: Green !important;'>Green</option><option style='font-weight: bold; color: #275C69 !important; background-color: GreenYellow !important;'>GreenYellow</option><option style='font-weight: bold; color: #4C6269 !important; background-color: HoneyDew !important;'>HoneyDew</option><option style='font-weight: bold; color: #501130 !important; background-color: HotPink !important;'>HotPink</option><option style='font-weight: bold; color: #000402 !important; background-color: IndianRed !important;'>IndianRed</option><option style='font-weight: bold; color: #A3B0B6 !important; background-color: Indigo !important;'>Indigo</option><option style='font-weight: bold; color: #695D58 !important; background-color: Ivory !important;'>Ivory</option><option style='font-weight: bold; color: #5A5208 !important; background-color: Khaki !important;'>Khaki</option><option style='font-weight: bold; color: #5C5064 !important; background-color: Lavender !important;'>Lavender</option><option style='font-weight: bold; color: #825463 !important; background-color: LavenderBlush !important;'>LavenderBlush</option><option style='font-weight: bold; color: #4B4D4B !important; background-color: LawnGreen !important;'>LawnGreen</option><option style='font-weight: bold; color: #69605D !important; background-color: LemonChiffon !important;'>LemonChiffon</option><option style='font-weight: bold; color: #334850 !important; background-color: LightBlue !important;'>LightBlue</option><option style='font-weight: bold; color: #5A0C0C !important; background-color: LightCoral !important;'>LightCoral</option><option style='font-weight: bold; color: #5D5C69 !important; background-color: LightCyan !important;'>LightCyan</option><option style='font-weight: bold; color: #64605C !important; background-color: LightGoldenRodYellow !important;'>LightGoldenRodYellow</option><option style='font-weight: bold; color: #6F4343 !important; background-color: LightGray !important;'>LightGray</option><option style='font-weight: bold; color: #355158 !important; background-color: LightGreen !important;'>LightGreen</option><option style='font-weight: bold; color: #50404B !important; background-color: LightPink !important;'>LightPink</option><option style='font-weight: bold; color: #373430 !important; background-color: LightSalmon !important;'>LightSalmon</option><option style='font-weight: bold; color: #242B35 !important; background-color: LightSeaGreen !important;'>LightSeaGreen</option><option style='font-weight: bold; color: #034B3C !important; background-color: LightSkyBlue !important;'>LightSkyBlue</option><option style='font-weight: bold; color: #240535 !important; background-color: LightSlateGray !important;'>LightSlateGray</option><option style='font-weight: bold; color: #074845 !important; background-color: LightSteelBlue !important;'>LightSteelBlue</option><option style='font-weight: bold; color: #69605C !important; background-color: LightYellow !important;'>LightYellow</option><option style='font-weight: bold; color: #165869 !important; background-color: Lime !important;'>Lime</option><option style='font-weight: bold; color: #233237 !important; background-color: LimeGreen !important;'>LimeGreen</option><option style='font-weight: bold; color: #645A50 !important; background-color: Linen !important;'>Linen</option><option style='font-weight: bold; color: #370537 !important; background-color: Magenta !important;'>Magenta</option><option style='font-weight: bold; color: #CEB291 !important; background-color: Maroon !important;'>Maroon</option><option style='font-weight: bold; color: #2C3732 !important; background-color: MediumAquaMarine !important;'>MediumAquaMarine</option><option style='font-weight: bold; color: #CCA5E7 !important; background-color: MediumBlue !important;'>MediumBlue</option><option style='font-weight: bold; color: #160D3D !important; background-color: MediumOrchid !important;'>MediumOrchid</option><option style='font-weight: bold; color: #28012C !important; background-color: MediumPurple !important;'>MediumPurple</option><option style='font-weight: bold; color: #073336 !important; background-color: MediumSeaGreen !important;'>MediumSeaGreen</option><option style='font-weight: bold; color: #0B013F !important; background-color: MediumSlateBlue !important;'>MediumSlateBlue</option><option style='font-weight: bold; color: #644463 !important; background-color: MediumSpringGreen !important;'>MediumSpringGreen</option><option style='font-weight: bold; color: #2C3D54 !important; background-color: MediumTurquoise !important;'>MediumTurquoise</option><option style='font-weight: bold; color: #E3EDFB !important; background-color: MediumVioletRed !important;'>MediumVioletRed</option><option style='font-weight: bold; color: #A4859B !important; background-color: MidnightBlue !important;'>MidnightBlue</option><option style='font-weight: bold; color: #446469 !important; background-color: MintCream !important;'>MintCream</option><option style='font-weight: bold; color: #695450 !important; background-color: MistyRose !important;'>MistyRose</option><option style='font-weight: bold; color: #695454 !important; background-color: Moccasin !important;'>Moccasin</option><option style='font-weight: bold; color: #695454 !important; background-color: NavajoWhite !important;'>NavajoWhite</option><option style='font-weight: bold; color: #CE7EBE !important; background-color: Navy !important;'>Navy</option><option style='font-weight: bold; color: #675A48 !important; background-color: OldLace !important;'>OldLace</option><option style='font-weight: bold; color: #050535 !important; background-color: Olive !important;'>Olive</option><option style='font-weight: bold; color: #110D02 !important; background-color: OliveDrab !important;'>OliveDrab</option><option style='font-weight: bold; color: #373232 !important; background-color: Orange !important;'>Orange</option><option style='font-weight: bold; color: #370E00 !important; background-color: OrangeRed !important;'>OrangeRed</option><option style='font-weight: bold; color: #231E2B !important; background-color: Orchid !important;'>Orchid</option><option style='font-weight: bold; color: #585224 !important; background-color: PaleGoldenRod !important;'>PaleGoldenRod</option><option style='font-weight: bold; color: #596561 !important; background-color: PaleGreen !important;'>PaleGreen</option><option style='font-weight: bold; color: #0C5858 !important; background-color: PaleTurquoise !important;'>PaleTurquoise</option><option style='font-weight: bold; color: #450117 !important; background-color: PaleVioletRed !important;'>PaleVioletRed</option><option style='font-weight: bold; color: #825453 !important; background-color: PapayaWhip !important;'>PapayaWhip</option><option style='font-weight: bold; color: #504C49 !important; background-color: PeachPuff !important;'>PeachPuff</option><option style='font-weight: bold; color: #372516 !important; background-color: Peru !important;'>Peru</option><option style='font-weight: bold; color: #693A5C !important; background-color: Pink !important;'>Pink</option><option style='font-weight: bold; color: #3A3347 !important; background-color: Plum !important;'>Plum</option><option style='font-weight: bold; color: #4A5982 !important; background-color: PowderBlue !important;'>PowderBlue</option><option style='font-weight: bold; color: #BAC9CE !important; background-color: Purple !important;'>Purple</option><option style='font-weight: bold; color: #BDCDC8 !important; background-color: RebeccaPurple !important;'>RebeccaPurple</option><option style='font-weight: bold; color: #370000 !important; background-color: Red !important;'>Red</option><option style='font-weight: bold; color: #580505 !important; background-color: RosyBrown !important;'>RosyBrown</option><option style='font-weight: bold; color: #F2FBE2 !important; background-color: RoyalBlue !important;'>RoyalBlue</option><option style='font-weight: bold; color: #D9D1CB !important; background-color: SaddleBrown !important;'>SaddleBrown</option><option style='font-weight: bold; color: #642119 !important; background-color: Salmon !important;'>Salmon</option><option style='font-weight: bold; color: #45382F !important; background-color: SandyBrown !important;'>SandyBrown</option><option style='font-weight: bold; color: #010E27 !important; background-color: SeaGreen !important;'>SeaGreen</option><option style='font-weight: bold; color: #825E45 !important; background-color: SeaShell !important;'>SeaShell</option><option style='font-weight: bold; color: #E8EAEE !important; background-color: Sienna !important;'>Sienna</option><option style='font-weight: bold; color: #5C4A4A !important; background-color: Silver !important;'>Silver</option><option style='font-weight: bold; color: #1F4455 !important; background-color: SkyBlue !important;'>SkyBlue</option><option style='font-weight: bold; color: #FFF2CD !important; background-color: SlateBlue !important;'>SlateBlue</option><option style='font-weight: bold; color: #13102C !important; background-color: SlateGray !important;'>SlateGray</option><option style='font-weight: bold; color: #826464 !important; background-color: Snow !important;'>Snow</option><option style='font-weight: bold; color: #546469 !important; background-color: SpringGreen !important;'>SpringGreen</option><option style='font-weight: bold; color: #09141E !important; background-color: SteelBlue !important;'>SteelBlue</option><option style='font-weight: bold; color: #554737 !important; background-color: Tan !important;'>Tan</option><option style='font-weight: bold; color: #202835 !important; background-color: Teal !important;'>Teal</option><option style='font-weight: bold; color: #744256 !important; background-color: Thistle !important;'>Thistle</option><option style='font-weight: bold; color: #372C2A !important; background-color: Tomato !important;'>Tomato</option><option style='font-weight: bold; color: #2E557C !important; background-color: Turquoise !important;'>Turquoise</option><option style='font-weight: bold; color: #710F71 !important; background-color: Violet !important;'>Violet</option><option style='font-weight: bold; color: #785757 !important; background-color: Wheat !important;'>Wheat</option><option style='font-weight: bold; color: #827373 !important; background-color: White !important;'>White</option><option style='font-weight: bold; color: #786A6A !important; background-color: WhiteSmoke !important;'>WhiteSmoke</option><option style='font-weight: bold; color: #82695C !important; background-color: Yellow !important;'>Yellow</option><option style='font-weight: bold; color: #504C43 !important; background-color: YellowGreen !important;'>YellowGreen</option></select><br>All other colors must be specified using a hex value (ex: <span style='color:#FF0000;'>#FF0000</span>)<br>&ensp;";
        if (c.indexOf("font") != -1) e += "<hr><span style='font-weight:bold;'>Valid Font Families</span>: <select style='background-color: #eee; border:none; width: 125px; height: 14px; font-size: 12px; font-family: Arial;'><option>Font Family List</option><optgroup label='Serif'><option style='font-family: Georgia, serif !important;'>Georgia, serif</option><option style='font-family:'Palatino Linotype', 'Book Antiqua', Palatino, serif !important;'>'Palatino Linotype', 'Book Antiqua', Palatino, serif</option><option style='font-family: 'Times New Roman', Times, serif !important;'>'Times New Roman', Times, serif</option></optgroup><optgroup label='Sans-Serif'><option style='font-family: Arial, Helvetica, sans-serif !important;'>Arial, Helvetica, sans-serif</option><option style='font-family: 'Arial Black', Gadget, sans-serif !important;'>'Arial Black', Gadget, sans-serif</option><option style='font-family: 'Comic Sans MS', cursive, sans-serif !important;'>'Comic Sans MS', cursive, sans-serif</option><option style='font-family: Impact, Charcoal, sans-serif !important;'>&nbsp;&nbsp;&nbsp;Impact, Charcoal, sans-serif</option><option style='font-family: 'Lucida Sans Unicode', 'Lucida Grande', sans-serif !important;'>'Lucida Sans Unicode', 'Lucida Grande', sans-serif</option><option style='font-family: Tahoma, Geneva, sans-serif !important;'>Tahoma, Geneva, sans-serif</option><option style='font-family: 'Trebuchet MS', Helvetica, sans-serif !important;'>'Trebuchet MS', Helvetica, sans-serif</option><option style='font-family: Verdana, Geneva, sans-serif !important;'>Verdana, Geneva, sans-serif</option></optgroup><optgroup label='Monospace'><option style='font-family: 'Courier New', Courier, monospace !important;'>'Courier New', Courier, monospace</option><option style='font-family: 'Lucida Console', Monaco, monospace !important;'>'Lucida Console', Monaco, monospace</option></optgroup></select><br>All other fonts must be imported in some manner.<br><br>Example:<code class='propdefault'><br>@font-face {<br>&ensp; font-family: myCustomFont;<br>&ensp; src: url('myCustomFont.ttf');<br>}</code><br><br>&#x1F6D1 Make sure your font file extension is supported in the browsers users will be using before attempting this.";
        if (c.indexOf("overflow") != -1) e += "<style>ul.listing {display: block; list-style-type: disc; padding-left: 10px; margin-left: 15px;}</style><hr><span style='font-weight:bold;'>Valid options</span>: <br><ul class='listing'><li><code class='propdefault'>visible</code> - lets the content flow beyond the dimensions of the element without a scrollbar.</li><li><code class='propdefault'>hidden</code> - does not display a scrollbar and hides overflowing content.</li><li><code class='propdefault'>scroll</code> - always displays the scrollbar.</li><li><code class='propdefault'>auto</code> - displays the scrollbar only when the element's content goes beyond the elements dimensions.</li></ul>";
        if (c.indexOf("pixel") != -1) e += "Specify in pixels. <br><br>Example: <code class='propdefault'>12px</code>"
    }
    if (typeof d == "string" && d.length > 0) e += "<br><br><b style='color: red;'>Note: </b>" + d;
    e += "<hr><br>";
    return e
};

function oc() {
    if (lc != null) return lc;
    if (pui.ja) return lc = [{name: "Identification", category: true}, {
        name: "bound field",
        help: pui.a("Field[<span title='A whole number value starting from 0001 determined by how many fields with unchanged names have previously been added to the Universal Display File.'>number</span>]", "Use this property to specify the bound field name and data type."),
        readOnly: true,
        $a: false
    }, {
        name: "description",
        help: pui.a("blank", "Use this property to provide a text description (or comment) for the field."),
        bind: false
    }, {name: "Misc", category: true}, {
        name: "encoding",
        choices: ["none", "html", "json", "xml", "csv"],
        help: pui.a("[<span title='The Format Property *document type* of the Record Format.'>document type</span>]", "Sets the encoding type for the field. If not set, the encoding will default based on the <i>document type</i> property setting."),
        bind: false
    }, {
        name: "visibility",
        format: "1 / 0",
        readOnly: true,
        p: true,
        o: ["indicator", "expression"],
        help: pui.a("true", "Determines whether the field is output or not.")
    },
        {
            name: "user defined data",
            U: true,
            help: pui.a("blank", "Specifies user-defined general purpose data associated with the field. To provide multiple user defined data values, right-click the property and select Add Another User Defined Value.")
        }];
    var b = ["none", "dotted", "dashed", "solid", "double", "groove", "ridge", "inset", "outset"],
        a = ["thin", "medium", "thick", "0px", "1px", "2px", "3px", "4px", "5px", "Other..."],
        c = ["auto", "0px", "1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "Other..."];
    return lc = [{
        name: "Identification",
        category: true
    }, {
        name: "id",
        Oa: "id",
        maxLength: 75,
        help: pui.a("id", 'Specifies the ID of the current element. ID\'s are used to access the element using CSS (#element-id { ... }) and JavaScript code (getObj("element-id");).'),
        bind: false,
        $a: false
    }, {
        name: "parent window",
        Oa: "parentWindow",
        help: pui.a("blank", "Specifies the window that this field belongs to."),
        j: "genie"
    }, {
        name: "screen identifier",
        choices: ["true", "false"],
        Mg: false,
        help: pui.a("false", "If set to true, this element will be used to <u>detect the screen</u>. This means that any screen with an elment matching this one will receive the screen customizations that were saved to the .scn file. Because of this, the identifier element is suggested to be a <i>unique and static output field</i> of the screen(s) you would like the changes to apply to. For example, if the screen has a unique heading, it can be used as an identifier for the screen. When appropriate, you can use a combination of several elements to uniquely identify the screen.",
            null, "At least one element on the screen must be marked as an identifier before you can save the screen."),
        j: "genie"
    }, {
        name: "field type",
        displayName: "widget type",
        choices: pui.widgets.Ry(false),
        Mg: false,
        help: pui.a("widget", "Specifies the type of control that is used to render the element."),
        bind: false,
        $a: false
    }, {
        name: "description",
        help: pui.a("blank", "This property is used to provide a text description or comment for the element."),
        bind: false
    }, {
        name: "button style", choices: pui.widgets.gg, help: pui.a("theme",
            "Specifies the style to be used for the look and feel of the button."), controls: ["styled button"]
    }, {
        name: "panel style",
        choices: pui.widgets.Rk,
        help: pui.a("theme", "Specifies the style to be used for the look and feel of the panel."),
        controls: ["panel"]
    }, {name: "value", help: pui.a("theme", "Sets the initial value of the current element."), translate: true}, {
        name: "response",
        format: "1 / 0",
        readOnly: true,
        p: true,
        o: ["indicator", "char", "zoned"],
        help: pui.a("bind", "Specifies a response indicator to be returned to your program when the element is clicked."),
        controls: ["button", "styled button", "graphic button", "hyperlink", "image", "css button", "icon"],
        j: "dspf"
    }, {
        name: "menu response",
        readOnly: true,
        p: true,
        help: pui.a("bind", "Specifies a response field to be returned to your program containing the value of the selected menu option. The menu option values are set with the 'choice values' property."),
        controls: ["menu"],
        j: "dspf"
    }, {
        name: "tab response",
        readOnly: true,
        format: "number",
        p: true,
        o: ["zoned"],
        help: pui.a("bind", "Specifies a numeric response field to be returned to your program when a tab is selected containing the index of the selected tab. Each of the Tab Panel's tabs are identified by a sequential index, starting from 0. For example, 0 refers to the first tab, 1 refers to the second tab, etc."),
        controls: ["tab panel"],
        j: "dspf"
    }, {
        name: "upload response",
        readOnly: true,
        p: true,
        o: ["char"],
        help: pui.a("bind", "Specifies a data structure response field to be returned to your program when files are uploaded populated with the number of files uploaded, the directory the files were uploaded to, and the names of each of the uploaded files. The data structure should be defined as follows (**FREE):<br><code class='propdefault'>&nbsp;&nbsp;DCL-DS UPLOADINFO QUALIFIED;<br>&nbsp;&nbsp;&nbsp;&nbsp;NUMFILES  ZONED(3:0);<br>&nbsp;&nbsp;&nbsp;&nbsp;DIRECTORY CHAR(256);<br>&nbsp;&nbsp;&nbsp;&nbsp;FILES     CHAR(256) DIM(6);<br>&nbsp;&nbsp;END-DS UPLOADINFO;</code>"),
        controls: ["file upload", "file upload dnd"],
        j: "dspf"
    }, {
        name: "radio button group",
        readOnly: true,
        help: pui.a("bind", "Specifies a response field to be returned to your program that allows you to associate multiple radio buttons together. The field name should be unique."),
        controls: ["radio button"],
        j: "dspf"
    }, {
        name: "chart response",
        readOnly: true,
        p: true,
        o: ["char", "varchar", "string"],
        help: pui.a("bind", "Specifies a response field to be returned to your program containing the name of the data point selected by the user."),
        controls: ["chart"],
        j: "dspf"
    }, {
        name: "Alternate Destination",
        category: true,
        controls: ["button", "styled button", "graphic button", "hyperlink", "image", "css button"],
        j: "dspf",
        viewdesigner: true
    }, {
        name: "destination url",
        p: true,
        o: ["char", "varchar", "string"],
        help: pui.a("blank", "Specifies an alternate destination URL for the control. The screen will either be submitted to this URL or the browser will navigate to it, depending on the 'redirect to destination' property value."),
        controls: ["button", "styled button",
            "graphic button", "hyperlink", "image", "css button"],
        j: "dspf",
        viewdesigner: true
    }, {
        name: "destination parameters",
        type: "destinationparams",
        readOnly: true,
        bind: false,
        help: pui.a("blank", "Identifies parameter names and the corresponding bound fields for use with 'destination url'."),
        Gc: ["destination parameter name", "destination parameter value"],
        $a: false,
        controls: ["button", "styled button", "graphic button", "hyperlink", "image", "css button"],
        j: "dspf",
        viewdesigner: true
    }, {
        name: "destination parameter name",
        label: "Parameter Name",
        U: true,
        hide: true,
        bind: false,
        help: "",
        controls: ["button", "styled button", "graphic button", "hyperlink", "image", "css button"],
        j: "dspf",
        viewdesigner: true
    }, {
        name: "destination parameter value",
        label: "Parameter Value",
        U: true,
        hide: true,
        help: "",
        controls: ["button", "styled button", "graphic button", "hyperlink", "image", "css button"],
        j: "dspf",
        viewdesigner: true
    }, {
        name: "bookmarkable",
        choices: ["true", "false"],
        type: "boolean",
        p: true,
        o: ["indicator", "expression"],
        help: pui.a("true", "By default, 'destination parameters' are added to the URL to facilitate bookmarking. If this property is set to 'false', then the parameters will only appear in the POST data."),
        controls: ["button", "styled button", "graphic button", "hyperlink", "image", "css button"],
        j: "dspf",
        viewdesigner: true
    }, {
        name: "redirect to destination",
        choices: ["true", "false"],
        type: "boolean",
        p: true,
        o: ["indicator", "expression"],
        help: pui.a("false", "If set to 'true' the browser will navigate to the 'destination url', passing the 'destination parameters'. Otherwise, the screen will submit by Ajax call."),
        controls: ["button", "styled button", "graphic button", "hyperlink", "image", "css button"],
        j: "dspf",
        viewdesigner: true
    },
        {name: "Font and Text", category: true}, {
            name: "color",
            L: "color",
            type: "color",
            help: pui.a("css", "Specifies the color of the text inside the current element.", ["color"]),
            Bc: true
        }, {
            name: "font family",
            L: "fontFamily",
            choices: ["Arial", "Consolas", "Courier New", "Georgia", "Monospace", "Tahoma", "Times New Roman", "Sans-Serif", "Serif", "Trebuchet MS", "Verdana", "Other..."],
            help: pui.a("css", "Specifies the font face for the text of the current element.", ["font", "other"]),
            Bc: true
        }, {
            name: "font size",
            L: "fontSize",
            format: "px",
            choices: ["8px", "9px", "10px", "11px", "12px", "13px", "14px", "15px", "16px", "17px", "18px", "19px", "20px", "21px", "22px", "23px", "24px", "25px", "26px", "27px", "28px", "29px", "30px", "0.75em", "1.00em", "1.25em", "1.50em", "1.75em", "2.00em", "Other..."],
            help: pui.a("css", "Specifies the size of the text for the current element.<br><b>Examples:</b> <span style='font-size:12px;'>12px</span> <span style='font-size:2em;'>2em</span> <span style='font-size:1vh;'>1vh</span> <span style='font-size:12pt;'>12pt</span> <span style='font-size:70%;'>70%</span><br><br>",
                ["other"], "1em = 12pt = 16px = 100%"),
            Bc: true
        }, {
            name: "font style",
            L: "fontStyle",
            format: "italic / normal",
            choices: ["normal", "italic", "oblique"],
            help: pui.a("css", "Specifies the style of the font inside the current element. <br><b>Examples:</b><p style=''>Normal Text</p><p style='font-style:italic;'>Italic Text</p><span style='font-style:oblique;'>Oblique Text</span>", null, "The 'oblique' and 'italic' options will look the same for most fonts."),
            Bc: true
        }, {
            name: "font variant",
            L: "fontVariant",
            choices: ["normal",
                "small-caps"],
            help: pui.a("css", "Specifies the font variant of the text inside the current element. <span style='font-variant:small-caps;'>'small caps' displays the text as capital letters with the same height of a lower case letter.</span>"),
            Bc: true
        }, {
            name: "font weight",
            L: "fontWeight",
            format: "bold / normal",
            choices: ["normal", "bolder", "bold", "lighter", "100", "200", "300", "400", "500", "600", "700", "800", "900"],
            help: pui.a("css", "Specifies the weight of the text inside the current element. <br><b>Examples:</b><p style='font-weight: normal'>Font Weight: Normal</p><p style='font-weight: bolder'>Font Weight: Bolder</p><p style='font-weight: bold'>Font Weight: Bold</p><p style='font-weight: lighter'>Font Weight: Lighter</p><p style='font-weight: 100'>Font Weight 100</p><p style='font-weight: 200'>Font Weight 200</p><p style='font-weight: 300'>Font Weight 300</p><p style='font-weight: 400'>Font Weight 400</p><p style='font-weight: 500'>Font Weight 500</p><p style='font-weight: 600'>Font Weight 600</p><p style='font-weight: 700'>Font Weight 700</p><p style='font-weight: 800'>Font Weight 800</p><span style='font-weight: 900'>Font Weight 900</span>",
                null, "Not all fonts will display a difference between font weights."),
            Bc: true
        }, {
            name: "letter spacing",
            L: "letterSpacing",
            format: "px",
            choices: ["normal", "-3px", "-2px", "-1px", "0px", "1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "10px", "11px", "12px", "13px", "14px", "15px", "16px", "17px", "18px", "19px", "20px", "Other..."],
            Bc: true,
            help: pui.a("css", "Specifies the spacing between each letter of a word inside the current element. <b>Examples:</b> <p style='letter-spacing:4px;'>4px: Positive values increase the distance between letters.</p><p style='letter-spacing:-1px;'>-1px: Negative values decrease the distance between letters.</p><br>",
                ["other"])
        }, {
            name: "text align",
            L: "textAlign",
            choices: ["left", "right", "center", "justify"],
            help: pui.a("css", "Specifies the alignment of the text inside the current element.<br><b>Examples:</b> <table style='width:100%;' cellpadding='0' cellspacing='2'><tr><td><div style='text-align:left;width:100%;border:1px solid black;'>This text is aligned left.</div></td></tr><tr><td><div style='text-align:right;width:100%;border:1px solid black;'>This text is aligned right.</div></td></tr><tr><td><div style='text-align:center;width:100%;border:1px solid black;'>This text is aligned center.</div></td></tr><tr><td><div style='text-align:justify; text-align-last:justify; width:100%;border:1px solid black;'>This text has justified alignment.</div></td></tr></table>",
                null, "The CSS property 'text-align-last' can be used to set the alignment of the final line of a group of text."),
            Bc: true
        }, {
            name: "text decoration",
            L: "textDecoration",
            format: "underline / none",
            choices: ["none", "underline", "overline", "line-through"],
            help: pui.a("none", "Specifies the decoration on the text inside the current element. <br><b>Examples:</b><br>None, <span style='text-decoration:underline;'>Underline</span>, <span style='text-decoration:overline;'>Overline</span>, <span style='text-decoration:line-through;'>Line-through</span>."),
            Bc: true
        }, {
            name: "text transform",
            L: "textTransform",
            choices: ["capitalize", "uppercase", "lowercase", "none"],
            help: pui.a("none", "Specifies the transformation used as the default formatting of the text inside the current element. </br><b>Examples:</b> <br><br>capitalize: Changes The First Character Of Each Word To Uppercase<br><br>uppercase: CHANGES ALL CHARACTERS OF EACH WORD TO UPPERCASE<br><br>lowercase: changes all characters of each word to lowercase", null, "This only affects how the information is <i>displayed</i> in the browser. To send <u>transformed values</u> to your backend program, you must also <u>set</u> the <i>Text Transform</i> attribute of the <b>Binding Dialog</b> for the value being returned to the program. ")
        },
        {
            name: "white space",
            L: "whiteSpace",
            choices: ["normal", "pre", "nowrap", "pre-wrap", "pre-line"],
            help: pui.a("widget", "Specifies how white space inside the current element is handled. The default is <i>nowrap</i> for most widgets. The prefix 'pre-' is short for 'preserve'. ", null, "If 'pre', 'pre-wrap', or 'pre-line' aren't used, all white space is 'collapsed', meaning it doesn't display."),
            controls: ["html container", "hyperlink"]
        }, {
            name: "word spacing",
            L: "wordSpacing",
            format: "px",
            choices: ["normal", "-3px",
                "-2px", "-1px", "0px", "1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "10px", "11px", "12px", "13px", "14px", "15px", "16px", "17px", "18px", "19px", "20px", "21px", "22px", "23px", "24px", "25px", "Other..."],
            help: pui.a("css", "Specifies the spacing between each word inside the current element. <b>Examples:</b><span style='word-spacing:-2px;'>-2px: Negative values decrease the spacing between words.</span><br><span style='word-spacing:2px;'>2px: Positive values increase the spacing between words.</span>.", ["other"]),
            Bc: true
        }, {
            name: "spell check",
            Oa: "spellcheck",
            choices: ["true", "false"],
            help: pui.a("browser", "Specifies whether the element will use the browser based spell checking. The default behavior is determined by the user's browser settings."),
            p: true,
            o: ["indicator"],
            controls: ["textbox", "text area"]
        }, {name: "Field Settings", category: true}, {
            name: "ajax url",
            type: "long",
            help: pui.a("blank", "Specifies the content url for an ajax container."),
            controls: ["ajax container"]
        }, {
            name: "results template",
            type: "long",
            Sh: true,
            controls: ["textbox"],
            help: pui.a("[default template]", "HTML template for auto-complete results panel. If omitted, a default template will be used.")
        }, {
            name: "iframe url",
            type: "long",
            help: pui.a("blank", "Specifies the content url for an IFrame (inline frame) element."),
            controls: ["iframe"]
        }, {
            name: "frame border",
            choices: ["true", "false"],
            Mg: false,
            help: pui.a("true", "Determines whether the IFrame (inline frame) element will have a border."),
            controls: ["iframe"]
        }, {
            name: "theme",
            choices: ["A - Black", "B - Blue",
                "C - Gray", "D - Light Gray", "E - Yellow", "F - Green", "G - Red", "Other..."],
            help: pui.a("theme", "Specifies the jQuery Mobile theme to use for the button. The theme is associated with a set of cascading style sheet rules.", ["other"]),
            controls: ["css button"]
        }, {
            name: "has header",
            choices: ["true", "false"],
            help: pui.a("theme", "Determines whether the panel has a header."),
            controls: ["css panel", "layout"]
        }, {
            name: "header height",
            format: "number",
            help: pui.a("theme", "Specifies the height of the panel header."),
            controls: ["css panel",
                "layout"]
        }, {
            name: "header theme",
            choices: ["A - Black", "B - Blue", "C - Gray", "D - Light Gray", "E - Yellow", "F - Green", "G - Red", "Other..."],
            help: pui.a("theme", "Specifies the jQuery Mobile theme to use for the panel header. The theme is associated with a set of cascading style sheet rules.", ["other"]),
            controls: ["css panel", "layout"]
        }, {
            name: "body theme",
            choices: ["A - Black", "B - Blue", "C - Gray", "D - Light Gray", "E - Yellow", "F - Green", "G - Red", "Other..."],
            help: pui.a("theme", "Specifies the jQuery Mobile theme to use for the panel body. The theme is associated with a set of cascading style sheet rules.",
                ["other"]),
            controls: ["css panel", "layout"]
        }, {
            name: "icon position",
            choices: ["left", "right"],
            help: pui.a("theme", "Specifies the position of the icon. If a position is not provided, icons other than image icons will not be displayed."),
            controls: ["css button", "graphic button"]
        }, {
            name: "icon",
            type: "icon",
            help: pui.a("theme", "Identifies the icon to display in the position specified by the 'icon position' property. Setting this property overrides the 'image source' property.", null, "Material Icon set does not display in Internet Explorer 9 and lower."),
            controls: ["css button", "graphic button", "icon"]
        }, {
            name: "small button",
            choices: ["true", "false"],
            help: pui.a("theme", "This property uses CSS to provide a smaller, more compact version of the button that is useful in toolbars and tight spaces."),
            controls: ["css button"]
        }, {
            name: "straight edge",
            choices: ["all", "left", "right", "top", "bottom"],
            help: pui.a("theme", "Determines which parts of the element will have a straight edge instead of rounded corners."),
            controls: ["css button", "css panel", "layout"]
        }, {
            name: "hyperlink reference",
            help: pui.a("browser", "This property specifies an href attribute for the hyperlink. It is used as an alternative to the response property or the onclick event property."),
            controls: ["hyperlink", "css button"]
        }, {
            name: "target",
            help: pui.a("_self", "This property specifies where to open the hyperlink reference."),
            choices: ["_parent", "_blank", "_top", "_self"],
            controls: ["hyperlink", "css button"]
        }, {
            name: "checked value",
            help: pui.a("blank", "For a checkbox field, specifies the value to send to the application when the checkbox is checked."),
            controls: ["checkbox"],
            bind: false
        }, {
            name: "unchecked value",
            help: pui.a("blank", "For a checkbox field, specifies the value to send to the application when the checkbox is not checked."),
            controls: ["checkbox"],
            bind: false
        }, {
            name: "on value",
            help: pui.a("blank", "Specifies the value to send to the application when the on/off switch is on."),
            controls: ["on off switch"],
            bind: false
        }, {
            name: "off value",
            help: pui.a("blank", "Specifies the value to send to the application when the on/off switch is off."),
            controls: ["on off switch"],
            bind: false
        }, {
            name: "on text",
            help: pui.a("ON", "Specifies the text to to display for the 'on' state of an on/off switch."),
            controls: ["on off switch"],
            translate: true
        }, {
            name: "off text",
            help: pui.a("OFF", "Specifies the text to to display for the 'off' state of an on/off switch."),
            controls: ["on off switch"],
            translate: true
        }, {
            name: "wide handle",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("true", "Specifies whether the on/off switch should display a wide handle for switching state. If false is selected, a narrow handle will be used."),
            p: true,
            o: ["indicator", "expression"],
            controls: ["on off switch"]
        }, {
            name: "date format",
            choices: ["MM/DD/YY", "MM/DD/YYYY", "DD/MM/YY", "DD/MM/YYYY", "DD.MM.YY", "DD.MM.YYYY", "MMDDYY", "MMDDYYYY", "DDMMYY", "DDMMYYYY", "YYMMDD", "YY/MM/DD", "YYYYMMDD", "YYYY-MM-DD", "YYYY/MM/DD"],
            help: pui.a("MM/DD/YY", "Defines the date format that is returned from the pop-up calendar."),
            controls: ["date field"],
            j: "genie"
        }, {
            name: "default value",
            help: pui.a("blank", "Specifies a default value for a field. The specified value is displayed on the first output operation. On subsequent output operations, the program value appears."),
            controls: ["combo box", "date field", "output field", "password field", "select box", "spinner", "text area", "textbox"],
            bind: false,
            j: "dspf",
            viewdesigner: false
        }, {
            name: "default value condition",
            o: ["indicator", "expression"],
            p: true,
            readOnly: true,
            format: "true / false",
            type: "boolean",
            help: pui.a("bind", "Determines if the default value is applied."),
            controls: ["combo box", "date field", "output field", "password field", "select box", "spinner", "text area", "textbox"],
            j: "dspf",
            viewdesigner: false
        }, {
            name: "blank value",
            U: true,
            help: pui.a("blank", "Use this property to map blank field data to a different value during input and output operations. This property is typically used with elements whose value is bound to a date, time, or timestamp field. To specify multiple blank values, right-click the property and select Add Another Blank Value."),
            controls: ["combo box", "date field", "output field", "password field", "spinner", "text area", "textbox"],
            bind: false,
            j: "dspf"
        }, {
            name: "override data",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Use this property to together with the 'put override' property to override existing data contents already on the display. It represents the OVRDTA keyword."),
            p: true,
            o: ["indicator", "expression"],
            controls: ["combo box", "date field", "output field", "password field", "select box", "spinner", "text area", "textbox"],
            j: "dspf",
            viewdesigner: false
        }, {
            name: "override attribute",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Use this property to together with the 'put override' property to override existing attributes already on the display. It represents the OVRATR keyword."),
            p: true,
            o: ["indicator", "expression"],
            controls: ["combo box", "date field", "output field", "password field", "select box", "spinner", "text area", "textbox"],
            j: "dspf",
            viewdesigner: false
        }, {
            name: "put retain",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "You use this property with the 'overlay' property to prevent the handler from deleting data that is already on the display when the application displays the record again. It represents the PUTRETAIN keyword."),
            p: true,
            o: ["indicator", "expression"],
            controls: ["combo box", "date field", "output field", "password field", "select box", "spinner", "text area", "textbox"],
            j: "dspf",
            viewdesigner: false
        }, {
            name: "disabled",
            Oa: "disabled",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Determines whether the element is disabled or not. The user cannot use a disabled field in any way." + (Q == "genie" ? " A disabled field is not submitted to the server application." : "")),
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "html", type: "long", Sh: true, help: pui.a("placeholder",
                "Used to define custom html in an html container."), controls: ["html container"], translate: true
        }, {
            name: "image source",
            type: "image",
            Oa: "src",
            help: pui.a("/profoundui/proddata/images/image.png", "Specifies the path to an image for an image or graphic button."),
            controls: ["image", "graphic button"]
        }, {
            name: "hover image source",
            type: "image",
            help: pui.a("css", "Specifies the path to an image that will be displayed when the user hovers the mouse cursor over the image element."),
            controls: ["image"]
        }, {
            name: "click image source",
            type: "image",
            help: pui.a("blank", "Specifies the path to an image that will be displayed when the user presses down the mouse on the image element."),
            controls: ["image"]
        }, {
            name: "alternate text",
            Oa: "alt",
            help: pui.a("blank", "Specifies the alternate text for an image. The alternate text appears when the image cannot be rendered."),
            controls: ["image"],
            translate: true
        }, {
            name: "label",
            help: pui.a("widget", "Specifies the caption text associated with a checkbox or a radio button."),
            controls: ["checkbox", "radio button"],
            translate: true
        }, {
            name: "orientation",
            choices: ["horizontal", "vertical"],
            help: pui.a("theme", "Specifies the orientation of a slider or a menu element."),
            controls: ["menu", "slider"]
        }, {
            name: "min value",
            format: "number",
            help: pui.a("blank", "Defines the minimum value for a spinner or slider element."),
            controls: ["slider", "spinner"]
        }, {
            name: "max value",
            format: "number",
            help: pui.a("blank", "Defines the maximum value for a spinner or slider element."),
            controls: ["slider", "spinner"]
        }, {
            name: "increment value",
            format: "number",
            help: pui.a("1", "Specifies how much the value in a spinner or slider element increases or decreases."),
            controls: ["slider", "spinner"]
        }, {
            name: "read only",
            Oa: "readOnly",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Defines whether the current element is read only or not. A read only element prevents the user from changing its value; however, the user can still interact with the element."),
            controls: ["checkbox", "combo box", "date field", "on off switch", "password field", "radio button", "signature pad",
                "spinner", "text area", "textbox"],
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "input only",
            choices: ["true", "false"],
            bind: false,
            type: "boolean",
            help: pui.a("false", "Defines whether the current element is input only or not. An input only element is always initialized when the screen appears."),
            controls: ["checkbox", "combo box", "date field", "password field", "select box", "spinner", "text area", "textbox"],
            j: "dspf",
            viewdesigner: false
        }, {
            name: "empty text",
            controls: ["combo box", "date field", "spinner", "text area",
                "textbox"],
            help: pui.a("blank", "Specifies the default text to place into an empty field. When the field receives focus, the text is removed. This property is similar to the 'placeholder' property, but provides support for older browser that may not yet support the placeholder HTML5 attribute."),
            translate: true
        }, {
            name: "placeholder",
            Oa: "placeholder",
            controls: ["combo box", "date field", "spinner", "text area", "textbox", "password field"],
            help: pui.a("blank", "Uses the HTML5 placeholder attribute to specify a short hint that describes the expected value of an input field. Older browsers may not support this feature."),
            translate: true
        }, {
            name: "input type",
            choices: ["color", "date", "datetime", "datetime-local", "email", "month", "number", "range", "search", "tel", "time", "url", "week"],
            controls: ["combo box", "date field", "textbox"],
            help: pui.a("textbox", "Specifies an HTML5 input type. Some types may not yet be supported by the user's browser or mobile device. If a type is not specified or if the selected type is not supported, a standard textbox element will be used.")
        }, {
            name: "browser auto complete",
            p: true,
            choices: ["on", "off",
                "Other..."],
            controls: ["combo box", "date field", "password field", "textbox", "spinner"],
            help: pui.a("off", 'Specifies the value of the HTML textbox "autocomplete" attribute, which controls the browser\'s autocomplete/autofill feature. Browser autocomplete/autofill is disabled ("off") by default. Specify "on" to enable browser autocomplete/autofill or for further control, specify an autofill field name. See <a href="https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill-field" target="_blank">here</a> for details on autofill field names.')
        },
        {
            name: "related field",
            help: pui.a("blank", "This property allows you to create a radio button group by associating multiple radio buttons with a field from the original application. Specify the id of the field to associate the radio button with. Additionally, this property can associate a text area with a group of textboxes by specify a comma separated list of textbox id's."),
            controls: ["radio button", "text area"],
            j: "genie"
        }, {
            name: "select box height",
            format: "number",
            Oa: "size",
            choices: ["1", "2", "3", "4",
                "5", "6", "7", "8", "9", "Other..."],
            help: pui.a("5", "If specified, the select box appears as a list box; if omitted, the select box appears as a dropdown.", ["other"]),
            controls: ["select box"]
        }, {
            name: "multiple",
            Oa: "multiple",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Specifies that multiple options can be selected at once in a List Box. The options are returned as a comma separated list."),
            controls: ["select box"],
            j: "dspf",
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "set focus",
            choices: ["true",
                "false"],
            type: "boolean",
            help: pui.a("blank", "This property determines if the focus will be set to this field when the screen loads."),
            controls: ["checkbox", "combo box", "date field", "password field", "radio button", "select box", "spinner", "text area", "textbox"],
            j: "dspf",
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "auto advance",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Use this property to indicate that the user does not need to press Enter or otherwise manually submit the screen. Whenever the user keys a character (including a blank) into the last position of the field, the screen contents are submitted to the server as if the Enter key had been pressed."),
            controls: ["combo box", "date field", "password field", "spinner", "textbox"],
            j: "dspf",
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "allow field exit",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("true", "This property determines whether the field exit key (Numeric Pad Plus Sign by default) can be used to progress to the next input element."),
            controls: ["combo box", "date field", "select box", "spinner", "textbox"],
            j: "dspf",
            p: true,
            o: ["indicator", "expression"],
            viewdesigner: false
        }, {
            name: "allow dup key",
            choices: ["true",
                "false"],
            type: "boolean",
            help: pui.a("false", "This property determines whether the Dup key (Shift-Insert by default) can be used on this element. It represents the DUP DDS keyword."),
            controls: ["date field", "textbox"],
            j: "dspf",
            p: true,
            o: ["indicator", "expression"],
            viewdesigner: false
        }, {
            name: "dup key response",
            format: "1 / 0",
            readOnly: true,
            p: true,
            o: ["indicator"],
            help: pui.a("bind", "Specifies a response indicator that is returned to your program when the Dup key is used on this element."),
            controls: ["date field",
                "textbox"],
            j: "dspf",
            viewdesigner: false
        }, {
            name: "prevent auto tab",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "This proprty prevents automatic tabbing on this element even when the pui['auto tab'] flag is set to true."),
            controls: ["combo box", "date field", "password field", "spinner", "textbox"],
            j: "dspf",
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "shortcut key",
            choices: ["Enter", "Escape", "PageUp", "PageDown", "PrtScn", "Pause/Break", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12",
                "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", "F21", "F22", "F23", "F24", "Alt-F1", "Alt-F2", "Alt-F3", "Alt-F4", "Alt-F5", "Alt-F6", "Alt-F7", "Alt-F8", "Alt-F9", "Alt-F10", "Alt-F11", "Alt-F12", "Alt-F13", "Alt-F14", "Alt-F15", "Alt-F16", "Alt-F17", "Alt-F18", "Alt-F19", "Alt-F20", "Alt-F21", "Alt-F22", "Alt-F23", "Alt-F24", "Ctrl-F1", "Ctrl-F2", "Ctrl-F3", "Ctrl-F4", "Ctrl-F5", "Ctrl-F6", "Ctrl-F7", "Ctrl-F8", "Ctrl-F9", "Ctrl-F10", "Ctrl-F11", "Ctrl-F12", "Ctrl-F13", "Ctrl-F14", "Ctrl-F15", "Ctrl-F16", "Ctrl-F17", "Ctrl-F18", "Ctrl-F19",
                "Ctrl-F20", "Ctrl-F21", "Ctrl-F22", "Ctrl-F23", "Ctrl-F24"],
            help: pui.a("blank", "Specifies a keyboard shortcut that can be used to trigger this element."),
            controls: ["button", "styled button", "graphic button", "hyperlink", "image", "menu", "css button", "icon"],
            j: "dspf"
        }, {
            name: "response AID",
            choices: ["AutoEnter", "Clear", "Enter", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", "F21", "F22", "F23", "F24", "Help", "PageDown", "PageUp", "Print", "RecordBackspace"],
            help: pui.a("Enter", "When screen is submitted for 'tab response' property, the AID code corresponding to the key specified here will be used. If not specified, the AID code for the Enter key will be used."),
            controls: ["tab panel"],
            j: "dspf"
        }, {
            name: "cursor row",
            format: "number",
            help: pui.a("blank", "Identifies the cursor row number associated with this widget."),
            controls: ["combo box", "date field", "html container", "output field", "password field", "select box", "spinner", "text area", "textbox"],
            j: "dspf",
            viewdesigner: false
        },
        {
            name: "cursor column",
            format: "number",
            help: pui.a("blank", "Identifies the cursor column number associated with this widget."),
            controls: ["combo box", "date field", "html container", "output field", "password field", "select box", "spinner", "text area", "textbox"],
            j: "dspf",
            viewdesigner: false
        }, {
            name: "changed",
            format: "1 / 0",
            readOnly: true,
            p: true,
            o: ["indicator"],
            help: pui.a("bind", "Specifies a response indicator that is set on if the data within the input element is modified."),
            controls: ["checkbox", "combo box",
                "date field", "password field", "select box", "spinner", "text area", "textbox"],
            j: "dspf"
        }, {
            name: "is blank",
            format: "1 / 0",
            readOnly: true,
            p: true,
            o: ["indicator"],
            help: pui.a("bind", "Specifies a response indicator that is set on if the data within the input element is blank. The property allows you to distinguish between a blank and a zero within a numeric field."),
            controls: ["date field", "password field", "spinner", "text area", "textbox"],
            j: "dspf"
        }, {
            name: "allow spellcheck",
            Oa: "spellcheck",
            choices: ["true", "false"],
            help: pui.a("true", "Set to false to disable the browser's built-in spellcheck for this widget."),
            p: true,
            o: ["indicator", "expression"],
            controls: ["textbox", "text area"]
        }, {
            name: "messages",
            type: "messages",
            readOnly: true,
            bind: false,
            help: pui.a("blank", "Identifies messages used to populate this element."),
            Gc: ["clear message", "message id prefix", "message id", "message file", "message library", "message condition"],
            j: "dspf",
            controls: ["button", "output field", "styled button", "text area", "textbox", "css button"],
            $a: false
        },
        {
            name: "clear message",
            label: "Clear Message",
            bp: true,
            bind: false,
            U: true,
            hide: true,
            help: "",
            j: "dspf",
            controls: ["button", "output field", "styled button", "text area", "textbox", "css button"]
        }, {
            name: "message id prefix",
            label: "Message Id Prefix",
            uppercase: true,
            maxLength: 3,
            U: true,
            hide: true,
            help: "",
            j: "dspf",
            controls: ["button", "output field", "styled button", "text area", "textbox", "css button"]
        }, {
            name: "message id",
            label: "Message Id",
            uppercase: true,
            maxLength: 7,
            U: true,
            hide: true,
            help: "",
            j: "dspf",
            controls: ["button",
                "output field", "styled button", "text area", "textbox", "css button"]
        }, {
            name: "message file",
            label: "Message File",
            uppercase: true,
            maxLength: 10,
            U: true,
            hide: true,
            help: "",
            j: "dspf",
            controls: ["button", "output field", "styled button", "text area", "textbox", "css button"]
        }, {
            name: "message library",
            label: "Library",
            uppercase: true,
            maxLength: 10,
            U: true,
            hide: true,
            help: "",
            j: "dspf",
            controls: ["button", "output field", "styled button", "text area", "textbox", "css button"]
        }, {
            name: "message condition",
            label: "Condition",
            o: ["indicator",
                "expression"],
            p: true,
            readOnly: true,
            U: true,
            hide: true,
            format: "1 / 0",
            type: "boolean",
            help: "",
            j: "dspf",
            controls: ["button", "output field", "styled button", "text area", "textbox", "css button"]
        }, {
            name: "label for",
            help: pui.a("blank", "Specifies the ID of the element that this is a label for. This property will cause a &lt;label&gt; tag to be generated for this element with the 'for' attribute set to the ID specified."),
            $a: true,
            controls: ["output field"]
        }, {name: "Validation", category: true, j: "dspf"}, {
            name: "error message location",
            choices: ["left", "right", "top", "bottom", "alert"],
            o: ["char", "varchar", "string", "indicator", "expression"],
            help: pui.a("right", "Controls the position and orientation of validation and error tool tips. When 'alert' is selected, an alert box will be used instead of a tool tip."),
            j: "dspf"
        }, {
            name: "error message css class",
            help: pui.a("pui-tip-error", "Specifies a css class name to apply to the top-level error tip element. This allows error tips to be styled individually. If not specified, css class 'pui-tip-error' is used, which gives error message styling. Try 'pui-tip-info' for an informational message."),
            j: "dspf"
        }, {
            name: "mandatory entry",
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "When set to true, the user must modify the field by typing at least one character into the input box. A blank is a valid character."),
            controls: ["combo box", "date field", "password field", "spinner", "text area", "textbox"],
            j: "dspf"
        }, {
            name: "mandatory fill",
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "When set to true, the user must type characters in all positions of the input box."),
            controls: ["combo box", "date field", "password field", "spinner", "textbox"],
            j: "dspf"
        }, {
            name: "required",
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "When set to true, the element cannot be empty."),
            controls: ["combo box", "date field", "file upload", "password field", "select box", "spinner", "text area", "textbox", "file upload dnd"],
            j: "dspf"
        }, {
            name: "valid values",
            type: "list",
            controls: ["combo box", "date field", "password field", "spinner", "text area", "textbox"],
            help: pui.a("blank", "Specifies a list of values that are valid for the user to type into the input box. The values should be comma separated."),
            j: "dspf"
        }, {
            name: "comparison operator",
            choices: ["Equal", "Not Equal", "Greater Than", "Greater Than or Equal", "Less Than", "Less Than or Equal"],
            controls: ["combo box", "date field", "password field", "spinner", "text area", "textbox"],
            help: pui.a("blank", "Identifies the relational operator used to compare data in the input box with the specified comparison value."),
            j: "dspf"
        },
        {
            name: "comparison value",
            controls: ["combo box", "date field", "password field", "spinner", "text area", "textbox"],
            help: pui.a("blank", "Specifies the value used for comparing against data in the input box. This property is used in combination with the comparison operator property."),
            j: "dspf"
        }, {
            name: "range low",
            controls: ["combo box", "date field", "password field", "spinner", "text area", "textbox"],
            help: pui.a("blank", "Specifies the minimum value for range validity checking. The data in the input box must be greater than or equal to this value."),
            j: "dspf"
        }, {
            name: "range high",
            controls: ["combo box", "date field", "password field", "spinner", "text area", "textbox"],
            help: pui.a("blank", "Specifies the maximum value for range validity checking. The data in the input box must be less than or equal to this value."),
            j: "dspf"
        }, {
            name: "validate name",
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("blank", "Use this property to specify that the data typed into the field must be a valid simple name. The first character must be $, #, @, or A through Z. The remaining characters must be alphanumeric ($, #, @, A through Z, 0 through 9, or underscore (_), and must not contain embedded blanks."),
            controls: ["combo box", "textbox"],
            j: "dspf"
        }, {
            name: "validate email",
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("blank", "Use this property to specify that the data typed into the field must be in the format of an email address."),
            controls: ["combo box", "textbox"],
            j: "dspf"
        }, {
            name: "allow blanks",
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "When set to true, blank input will satisfy validity checking should any other associated validity check fail."),
            controls: ["combo box", "date field", "password field", "spinner", "text area", "textbox"],
            j: "dspf"
        }, {
            name: "error messages",
            type: "errmessages",
            readOnly: true,
            bind: false,
            help: pui.a("blank", "Identifies error messages to be displayed in association with this element."),
            Gc: ["error message", "error message id", "error message file", "error message library", "replacement data", "error condition", "error response", "error enhanced mode"],
            j: "dspf",
            $a: false
        }, {
            name: "error message", label: "Message Text", U: true, hide: true, help: "",
            j: "dspf"
        }, {
            name: "error message id",
            label: "Message Id",
            uppercase: true,
            maxLength: 7,
            U: true,
            hide: true,
            help: "",
            j: "dspf",
            viewdesigner: false
        }, {
            name: "error message file",
            label: "Message File",
            maxLength: 10,
            uppercase: true,
            U: true,
            hide: true,
            help: "",
            j: "dspf",
            viewdesigner: false
        }, {
            name: "error message library",
            label: "Library",
            maxLength: 10,
            uppercase: true,
            U: true,
            hide: true,
            help: "",
            j: "dspf",
            viewdesigner: false
        }, {
            name: "replacement data",
            label: "Replacement Data",
            o: ["char"],
            p: true,
            readOnly: true,
            U: true,
            hide: true,
            help: "",
            j: "dspf",
            viewdesigner: false
        }, {
            name: "error condition",
            label: "Error Condition",
            o: ["indicator", "expression"],
            p: true,
            readOnly: true,
            U: true,
            hide: true,
            format: "1 / 0",
            type: "boolean",
            help: "",
            j: "dspf"
        }, {
            name: "error response",
            label: "Error Response",
            o: ["indicator"],
            p: true,
            readOnly: true,
            U: true,
            hide: true,
            format: "1 / 0",
            type: "boolean",
            help: "",
            j: "dspf",
            viewdesigner: false
        }, {
            name: "error enhanced mode",
            label: "Enhanced Mode",
            bp: true,
            bind: false,
            U: true,
            hide: true,
            help: pui.a("[checked]", "If checked, allows error messages to display without ERRMSG/ERRMSGID-type restrictions. Errors can display regardless of whether format is already on the screen, and output data is also sent."),
            j: "dspf",
            viewdesigner: false
        }, {
            name: "set as modified",
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("blank", "Marks an input field as modified when it is first displayed."),
            controls: ["check box", "combo box", "date field", "password field", "radio button", "select box", "slider", "spinner", "text area", "textbox"],
            j: "dspf"
        }, {
            name: "bypass validation",
            choices: ["true", "false", "send data"],
            type: "boolean",
            controls: ["button", "styled button", "graphic button", "hyperlink", "image",
                "menu", "tab panel", "chart", "css button", "icon"],
            help: pui.a("blank", "This property, typically used on Cancel or Undo buttons, specifies that the element will not trigger client-side validation and will automatically discard all data modified by the user on the screen. It represents the CAxx set of DDS keywords. You can select 'send data' to bypass all client-side validation except for field data type validation and still send all data modified by the user."),
            o: ["char", "indicator", "expression"],
            j: "dspf"
        },
        {name: "Auto-Complete Choices", category: true, controls: ["textbox"]}, {
            name: "Selection Choices",
            category: true,
            controls: ["combo box", "select box"]
        }, {name: "Menu Options", category: true, controls: ["menu"]}, {
            name: "choices",
            type: "list",
            help: pui.a("Option 1, Option 2, Option 3...", "Specifies the options for a select box (dropdown or list box), text field with autocomplete, combo box, or menu. The options should be comma separated. To specify submenus for a menu, indent the choices using a dash or a series of dashes."),
            controls: ["combo box", "menu", "select box", "textbox"],
            translate: true
        }, {
            name: "choice values",
            type: "list",
            help: pui.a("css", "Specifies alternate option values to send to the application for a select box (dropdown or list box), text field with auto complete, combo box, or menu. The values should be comma separated."),
            controls: ["combo box", "menu", "select box", "textbox"]
        }, {
            name: "hover background color",
            type: "color",
            help: pui.a("css", "Defines the background color of a menu option when the user hovers the mouse over it.",
                ["background color"]),
            controls: ["menu"]
        }, {
            name: "hover text color",
            type: "color",
            help: pui.a("css", "Defines the text color of a menu option when the user hovers the mouse over it.", ["color"]),
            controls: ["menu"]
        }, {
            name: "animate",
            choices: ["true", "false"],
            Mg: false,
            help: pui.a("true", "Determines if hovering over menu options is animated."),
            controls: ["menu"]
        }, {
            name: "border color",
            type: "color",
            help: pui.a("css", "The color of the border used for menu options.", ["color"]),
            controls: ["menu"]
        }, {
            name: "menu option padding",
            choices: c,
            format: "px",
            help: pui.a("css", "Sets the distance between the edge of the menu option and the menu option text.", ["other", "pixel"]),
            controls: ["menu"]
        }, {
            name: "menu option indent",
            choices: c,
            format: "px",
            help: pui.a("css", "Sets the distance between the left edge of the menu option and the menu option text.", ["other", "pixel"]),
            controls: ["menu"]
        }, {
            name: "option image",
            type: "image",
            help: pui.a("css", "Defines the background image displayed under each menu option. You can specify one image or a comma separated list of images corresponding to each menu option."),
            controls: ["menu"]
        }, {
            name: "option hover image",
            type: "image",
            help: pui.a("css", "Defines the background image displayed when the user hovers over a menu option."),
            controls: ["menu"]
        }, {
            name: "onoptionclick",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when a menu option is clicked. The choice value is passed to the event as a parameter named 'value'. The choice text is passed to the event as a parameter named 'text'."),
            controls: ["menu"]
        }, {
            name: "Database-Driven Auto-Complete", category: true,
            controls: ["textbox"]
        }, {
            name: "Database-Driven Selection",
            category: true,
            controls: ["combo box", "select box"]
        }, {name: "Database-Driven Chart", category: true, controls: ["chart"]}, {
            name: "database file",
            type: "file",
            displayName: pui.nodedesigner ? "database table" : undefined,
            uppercase: pui.nodedesigner !== true,
            help: pui.a("blank", "Database table to use for the chart's data source."),
            controls: ["chart"]
        }, {
            name: "name field",
            type: "field",
            uppercase: pui.nodedesigner !== true,
            help: pui.a("blank", "Database field that determines the names by which records would be represented in the chart."),
            controls: ["chart"]
        }, {
            name: "value field",
            type: "field",
            uppercase: pui.nodedesigner !== true,
            help: pui.a("blank", "Database field that determines the numerical values from which the chart is to be built."),
            controls: ["chart"]
        }, {
            name: "summary option",
            choices: ["none", "average", "count", "sum", "maximum", "minimum"],
            help: pui.a("blank", "Determines how values are used when creating the chart."),
            controls: ["chart"]
        }, {
            name: "selection criteria",
            type: "long",
            help: pui.a("blank", "Optional expression identifying which records should be retrieved from the database table."),
            controls: ["chart"]
        }, {
            name: "parameter value",
            bind: true,
            type: "long",
            br: 1,
            U: true,
            help: pui.a("blank", "Value for parameter marker in 'selection criteria' or 'custom sql' properties. Parameter markers are specified using a question mark. Profound UI will accept values from the client for any parameter marker values which are not bound to program fields. Parameter markers are numbered in order of occurence, from left to right. To specify multiple parameter marker values, right-click the property and select Add Another Parameter Value."),
            controls: ["chart"]
        }, {
            name: "record limit",
            format: "number",
            help: pui.a("blank", "Sets a limit on how many records are to be used in the chart."),
            controls: ["chart"]
        }, {
            name: "custom sql",
            type: "long",
            help: pui.a("blank", "Specifies an SQL statement to use to retrieve the records for a database-driven chart. The last column is used as the chart values. Earlier columns are concatenated into the chart labels."),
            controls: ["chart"]
        }, {name: "Database-Driven Image Data", category: true, controls: ["image"]}, {
            name: "blob table",
            type: "file",
            uppercase: pui.nodedesigner !== true,
            help: pui.a("blank", "Database table that contains a blob for this image."),
            controls: ["image"]
        }, {
            name: "blob column",
            type: "field",
            uppercase: pui.nodedesigner !== true,
            help: pui.a("blank", "Blob column in database table that image will be loaded from."),
            controls: ["image"]
        }, {
            name: "blob selection criteria",
            type: "long",
            help: pui.a("blank", "Expression expression identifying which row to load image blob from."),
            controls: ["image"]
        }, {
            name: "blob parameter value",
            bind: true,
            type: "long",
            U: true,
            help: pui.a("blank", "Value for parameter marker in 'blob selection criteria' property. Parameter markers are specified using a question mark. Profound UI will accept values from the client for any parameter marker values which are not bound to program fields. Parameter markers are numbered in order of occurence, from left to right. To specify multiple parameter marker values, right-click the property and select Add Another Blob Parameter Value."),
            controls: ["image"]
        }, {
            name: "choices database file",
            type: "file",
            displayName: pui.nodedesigner ? "choices database table" : undefined,
            uppercase: pui.nodedesigner !== true,
            help: pui.a("blank", "Database table to be used for a dynamic database-driven dropdown box, list box, or text field with autocomplete."),
            controls: ["combo box", "select box", "textbox"]
        }, {
            name: "choice options field",
            type: "field",
            multiple: true,
            uppercase: pui.nodedesigner !== true,
            help: pui.a("blank", "Database field name used to retrieve the options for a dynamic dropdown box, list box, combo box, or text field with auto complete. Multiple fields can be specifed for a text field with auto complete. In this case, the field names should be comma separated."),
            controls: ["combo box", "select box", "textbox"]
        }, {
            name: "choice values field",
            type: "field",
            uppercase: pui.nodedesigner !== true,
            help: pui.a("[choice options field]", "Database field name used to retrieve the values sent back to the application. If omitted, the choice options field is used. In the case of a text field with autocomplete that has multiple option fields, the first option field is used."),
            controls: ["combo box", "select box", "textbox"]
        }, {
            name: "choices selection criteria",
            type: "long",
            help: pui.a("blank",
                "Optional expression identifying which records should be retrieved from the choices database table."),
            controls: ["combo box", "select box", "textbox"]
        }, {
            name: "choices parameter value",
            bind: true,
            type: "long",
            br: 1,
            U: true,
            help: pui.a("blank", "Value for parameter marker in 'choices selection criteria' property. Parameter markers are specified using a question mark. Profound UI will accept values from the client for any parameter marker values which are not bound to program fields. Parameter markers are numbered in order of occurence, from left to right. To specify multiple parameter marker values, right-click the property and select Add Another Choices Parameter Value."),
            controls: ["combo box", "select box", "textbox"]
        }, {
            name: "blank option",
            choices: ["true", "false"],
            help: pui.a("false", "When set to true, a database-driven dropdown box will display a blank option before the options from the database table are displayed."),
            controls: ["combo box", "select box"]
        }, {
            name: "blank option label",
            help: pui.a("blank", "By default, the blank option contains no text. Use this property to specify alternate text to be displayed in the blank option. The value sent to the server will still be blank."),
            controls: ["combo box", "select box"],
            translate: true
        }, {
            name: "order by",
            type: "field",
            multiple: true,
            uppercase: pui.nodedesigner !== true,
            help: pui.a("blank", "Optional expression identifying which fields determine the order of the items. For a database-driven chart, this property is ignored when <i>'summary option'</i> is used. In this case, the items will sort on the <i>'name field'</i>."),
            controls: ["combo box", "select box", "chart", "textbox"]
        }, {
            name: "max choices",
            format: "number",
            help: pui.a("[500 or 10]",
                "Optional maximum number of choices to provide for a dynamic dropdown box, list box, or text field with auto complete. If blank: defaults to 500 for dropdown, 10 for auto complete."),
            controls: ["combo box", "select box", "textbox"]
        }, {
            name: "contains match",
            choices: ["true", "false"],
            help: pui.a("false", "When set to true, the auto-complete query finds records that contain the search text. When set to false, the auto-complete query finds records that start with the search text."),
            controls: ["textbox"]
        }, {
            name: "case sensitive",
            choices: ["true", "false"],
            help: pui.a("false", "When set to true, the auto-complete query does not convert the database search column to upper case before comparing. When false, the database column and search text are converted to upper case before comparing."),
            controls: ["textbox"]
        }, {name: "Dynamic Auto-Complete", category: true, controls: ["textbox"]}, {
            name: "Dynamic Selection",
            category: true,
            controls: ["combo box", "select box"]
        }, {
            name: "choices url",
            type: "long",
            help: pui.a("blank", "Sets the url to a Web service that returns the choice options and values in JSON format. If a choices url is used, the database " +
                (pui.nodedesigner ? "table" : "file") + ", choice options field, choice value field, and max choices properties are ignored."),
            controls: ["combo box", "select box", "textbox"]
        }, {name: "Chart Settings", category: true, controls: ["chart"]}, {
            name: "chart type",
            choices: pui.widgets.eG,
            help: pui.a("[selected chart]", "Identifies the type of chart to display. The chart type matches the JavaScript alias listed in the FusionCharts documentation. The available chart names are provided here: <br /><br /> <a target='_blank' href='https://www.fusioncharts.com/dev/chart-guide/getting-started/list-of-charts'>List of FusionCharts Charts files</a><br /><br /> HTML5 is used to render the chart."),
            controls: ["chart"]
        }, {
            name: "map type",
            help: pui.a("world", "Identifies the type of map to display. The available map names are provided here: <br /><br /> <a target='_blank' href='http://www.fusioncharts.com/dev/usage-guide/setup/list-of-maps.html'>List of FusionCharts Maps files</a><br /><br />Specifiy the 'JavaScript alias' name, with or without the 'maps/' prefix. If this property is specified, the 'chart type' property is ignored."),
            controls: ["chart"]
        }, {
            name: "chart options",
            type: "long",
            Sh: true,
            help: pui.a("blank",
                "Specifies chart options as a set of XML attributes that are to be attached to the FusionCharts &lt;chart&gt; tag. The format of the attributes is described on the FusionCharts documentation site: <a href='https://www.fusioncharts.com/dev/chart-attributes/?chart=area2d' target='_blank'>Chart Attributes</a>."),
            controls: ["chart"]
        }, {
            name: "chart overlay",
            choices: ["true", "false"],
            help: pui.a("false", "When set to true, the Chart panel will overlay any other content on the screen, regardless of z-index settings. When set to false, the Chart panel will behave according to normal layering rules, based on z-index."),
            controls: ["chart"]
        }, {
            name: "onchartclick",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when a chart section is clicked. The name of the chart section is passed to the event as a parameter named 'name'."),
            controls: ["chart"]
        }, {name: "Chart Data" + (Q == "genie" ? " from Screen" : ""), category: true, controls: ["chart"]}, {
            name: "names",
            type: "list",
            help: pui.a("blank", "Specifies a list of names representing the data points on the chart or a list of screen element id's from which the names could be retrieved. The list should be comma separated."),
            controls: ["chart"],
            translate: true
        }, {
            name: "values",
            type: "list",
            help: pui.a("blank", "Specifies a list of numerical values used to build the chart or a list of screen element id's from which the values could be retrieved. The list should be comma separated."),
            controls: ["chart"]
        }, {name: "Dynamic Chart", category: true, controls: ["chart"]}, {
            name: "chart url",
            type: "long",
            help: pui.a("blank", "Sets the url to a web service that returns the chart definition and data in XML format as specified in the FusionCharts Data Formats section of the FusionCharts documentation site: <a href='https://www.fusioncharts.com/dev/' target='_blank'>FusionCharts Documentation</a>."),
            controls: ["chart"]
        }, {
            name: "chart url json",
            type: "long",
            help: pui.a("blank", "Sets the url to a web service that returns the chart definition and data in JSON format as specified in the FusionCharts Data Formats section of the FusionCharts documentation site: <a href='https://www.fusioncharts.com/dev/' target='_blank'>FusionCharts Documentation</a>."),
            controls: ["chart"]
        }, {
            name: "chart xml",
            type: "long",
            Sh: true,
            help: pui.a("blank", "Sets the XML data for the chart as specified in the FusionCharts Data Formats section of the FusionCharts documentation site: <a href='https://www.fusioncharts.com/dev/' target='_blank'>FusionCharts Documentation</a>."),
            controls: ["chart"]
        }, {
            name: "chart json",
            type: "long",
            Sh: true,
            help: pui.a("blank", "Sets the JSON data for the chart as specified in the FusionCharts Data Formats section of the FusionCharts documentation site: <a href='https://www.fusioncharts.com/dev/' target='_blank'>FusionCharts Documentation</a>. The data can be provided as a string or as a JavaScript object through the use of property scripting."),
            controls: ["chart"]
        }, {name: "Background", category: true}, {
            name: "background color",
            L: "backgroundColor",
            type: "color",
            help: pui.a("css", "Defines the background color of the given element.", ["background color"]),
            Bc: true
        }, {
            name: "background image",
            type: "image",
            L: "backgroundImage",
            help: pui.a("css", "Defines the background image of the current element."),
            Bc: true
        }, {
            name: "background position",
            L: "backgroundPosition",
            choices: ["top", "center", "bottom", "left"],
            help: pui.a("css", "Position of the background within the current element."),
            Bc: true
        }, {
            name: "background repeat",
            L: "backgroundRepeat",
            choices: ["repeat-x", "repeat-y",
                "no-repeat", "repeat"],
            help: pui.a("css", "Defines how to repeat the background, repeat-x: repeats horizontally, repeat-y: repeats vertically, no-repeat: doesn't repeat at all, repeat: repeats horizontally and vertically."),
            Bc: true
        }, {name: "Position", category: true}, {
            name: "left",
            L: "left",
            format: "px",
            help: pui.a("position", "Represents the x-coordinate of the current element. Specify in pixels" + (Q == "genie" ? "." : " or as a percentage."))
        }, {
            name: "top",
            L: "top",
            format: "px",
            help: pui.a("position", "Represents the y-coordinate of the current element. Specify in pixels" +
                (Q == "genie" ? "." : " or as a percentage."))
        }, {
            name: "right",
            L: "right",
            format: "px",
            help: pui.a("blank", "Position of the element from the right of the screen" + (Q == "genie" ? "." : " or layout container.") + " Specify in pixels" + (Q == "genie" ? "." : " or as a percentage."))
        }, {
            name: "bottom",
            L: "bottom",
            format: "px",
            help: pui.a("blank", "Position of the element from the bottom of the screen" + (Q == "genie" ? "." : " or layout container.") + " Specify in pixels" + (Q == "genie" ? "." : " or as a percentage."))
        }, {
            name: "height", L: "height", format: "px",
            help: pui.a("widget", "Height of the current element. Specify in pixels" + (Q == "genie" ? "." : " or as a percentage."))
        }, {
            name: "width",
            L: "width",
            format: "px",
            help: pui.a("widget", "Width of the current element. Specify in pixels" + (Q == "genie" ? "." : " or as a percentage."))
        }, {
            name: "min height",
            L: "minHeight",
            format: "px",
            help: pui.a("css", "Minimum height of the current element.", ["pixel"])
        }, {
            name: "min width",
            L: "minWidth",
            format: "px",
            help: pui.a("css", "Minimum width of the current element.", ["pixel"])
        }, {
            name: "max height",
            L: "maxHeight", format: "px", help: pui.a("css", "Maximum height of the current element.", ["pixel"])
        }, {
            name: "max width",
            L: "maxWidth",
            format: "px",
            help: pui.a("css", "Maximum width of the current element.", ["pixel"])
        }, {
            name: "z index",
            L: "zIndex",
            format: "number",
            help: pui.a("css", "The stacking order of the current element, expressed as an integer value. The element with the higher z index will overlay lesser elements.")
        }, {
            name: "auto arrange",
            choices: ["true", "false"],
            type: "boolean",
            o: ["indicator", "expression"],
            p: true,
            help: pui.a("false", "This property is used to automatically position action buttons or links in order to accommodate for converted overlay screens."),
            controls: ["button", "styled button", "graphic button", "hyperlink", "css button"],
            j: "dspf"
        }, {
            name: "locked in place",
            choices: ["true", "false"],
            help: pui.a("false", "If set to true, the element cannot be moved or sized."),
            bind: false
        }, {name: "Drag and Drop", category: true, controls: ["html container", "output field", "image"], j: "dspf"}, {
            name: "allow drag",
            choices: ["true",
                "false"],
            type: "boolean",
            o: ["indicator", "expression"],
            p: true,
            help: pui.a("false", "This property determines if the element can be drag and dropped."),
            controls: ["html container", "output field", "image", "ajax container", "button", "graphic button", "styled button", "css button"],
            j: "dspf"
        }, {
            name: "use proxy",
            choices: ["true", "false"],
            type: "boolean",
            o: ["indicator", "expression"],
            p: true,
            help: pui.a("false", "This property determines if a drag and drop proxy is created. If set to true, instead of dragging the element around, a proxy element is created and moved instead."),
            controls: ["html container", "output field", "image", "ajax container", "button", "graphic button", "styled button", "css button"],
            j: "dspf"
        }, {
            name: "ondragstart",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the user first starts to drag the element. Information about the drag and drop operation is provided using the global pui.dragDropInfo object."),
            controls: ["html container", "output field", "image", "ajax container", "button", "graphic button", "styled button", "css button"],
            j: "dspf"
        }, {
            name: "drop targets",
            type: "list",
            help: pui.a("blank", "Specifies a list of target element id's, which identify where this element can be dropped."),
            controls: ["html container", "output field", "image", "ajax container", "button", "graphic button", "styled button", "css button"],
            j: "dspf"
        }, {
            name: "ondragenter",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the user drags an element over a valid drop target. Information about the drag and drop operation is provided using the global pui.dragDropInfo object."),
            controls: ["html container",
                "output field", "image", "ajax container", "button", "graphic button", "styled button", "css button"],
            j: "dspf"
        }, {
            name: "ondragleave",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the user moves an element out of a valid drop target during a drag operation. Information about the drag and drop operation is provided using the global pui.dragDropInfo object."),
            controls: ["html container", "output field", "image", "ajax container", "button", "graphic button", "styled button", "css button"],
            j: "dspf"
        },
        {
            name: "ondrop",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse is released during a drag and drop operation. Information about the drag and drop operation is provided using the global pui.dragDropInfo object."),
            controls: ["html container", "output field", "image", "ajax container", "button", "graphic button", "styled button", "css button"],
            j: "dspf"
        }, {name: "Tabs", category: true}, {
            name: "tab panel style",
            choices: pui.widgets.IG,
            help: pui.a("theme", "Identifies the look and feel of the tab panel."),
            controls: ["tab panel"]
        }, {
            name: "tab names",
            type: "list",
            help: pui.a("Tab 1,Tab 2,Tab 3", "This property identifies a comma separated list of tab names for a Tab Panel."),
            controls: ["tab panel"],
            translate: true
        }, {
            name: "active tab",
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("0", "This property specifies the initial active tab on a Tab Panel. Each tab within a Tab Panel is identified by a sequential index, starting with 0 for the first tab, 1 for the second tab, and so on."),
            controls: ["tab panel"]
        }, {
            name: "ontabclick",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when a tab is clicked. The tab index is passed to the event as a parameter named 'tab'. If the client-side script evaluates to false, the tab will not be switched."),
            controls: ["tab panel"]
        }, {
            name: "tab keys",
            type: "list",
            help: pui.a("blank", "This property identifies a comma separated list of function keys assigned to each tab within a Tab Panel. The function keys in the list are automatically pressed when the appropriate tab is selected, allowing users to navigate the original application through a tab interface."),
            controls: ["tab panel"],
            j: "genie"
        }, {
            name: "parent tab panel",
            help: pui.a("position", "This property specifies the id of the Tab Panel to which this element belongs. The property is set automatically when you drag and drop the element onto a Tab Panel."),
            bind: false
        }, {
            name: "parent tab",
            help: pui.a("position", "This property specifies the tab index of the specific tab to which this element belongs. Each tab within a Tab Panel is identified by a sequential index, starting with 0 for the first tab, 1 for the second tab, and so on. The property is set automatically when you drag and drop the element onto a Tab Panel."),
            bind: false
        }, {
            name: "parent field set",
            help: pui.a("position", "This property specifies the id of the Field Set Panel to which this element belongs. The property is set automatically when you drag and drop the element onto a Field Set Panel."),
            bind: false
        }, {name: "File Upload", category: true, controls: ["file upload", "file upload dnd"]}, {
            name: "selection mode",
            controls: ["file upload"],
            bind: false,
            choices: ["standard", "enhanced", "single"],
            help: pui.a("standard", "When set to 'enhanced' the file upload control will allow for selection of multiple files at once from the browser's file selector. This is accomplished by SHIFT+Click or CNTRL+Click or CNTRL+A. When 'standard' mode is used, the user must select each file for upload one by one. When 'single' mode is used, only one file can be chosen.",
                null, "Not all browsers support 'enhanced' mode. For example, Internet Explorer does not. In such browsers, the control will work in 'standard' mode regardless of this setting.")
        }, {
            name: "auto submit",
            controls: ["file upload dnd"],
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            j: "dspf",
            o: ["indicator", "expression"],
            help: pui.a("false", "After dropping a file should a page submit happen automatically. Upload happens during submit.")
        }, {
            name: "auto upload",
            controls: ["file upload dnd"],
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            j: "genie",
            o: ["indicator", "expression"],
            help: pui.a("false", "After dropping a file should upload happen automatically.")
        }, {
            name: "number of files",
            controls: ["file upload", "file upload dnd"],
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("1", "This property specifies the maximum number of files that can be uploaded at one time.")
        }, {
            name: "size limit",
            controls: ["file upload", "file upload dnd"],
            p: true,
            o: ["zoned"],
            help: pui.a("10", "Specifies the size limit (in MB) for each file.")
        }, {
            name: "target directory",
            controls: ["file upload", "file upload dnd"],
            oj: 50,
            p: true,
            o: ["char", "varchar", "string"],
            help: pui.a("blank", "This property specifies the IFS directory where uploaded files will be saved.")
        }, {
            name: "rename to",
            controls: ["file upload", "file upload dnd"],
            oj: 50,
            p: true,
            o: ["char", "varchar", "string"],
            help: pui.a("blank", "Specifies an alternate file name to be used when the uploaded file is saved.", null, "This property is ignored when more than 1 file is uploaded.")
        }, {
            name: "overwrite files",
            controls: ["file upload",
                "file upload dnd"],
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "Specifies the action to take when 1 or more files being saved already exists in the IFS target directory. When set to 'true', any existing files will be overwritten. When set to 'false' no files will be overwritten. If \"generate unique names\" is set to true, then the files will be saved with automatically generated unique names. Otherwise, an error will be returned when files already exist.")
        },
        {
            name: "generate unique names",
            controls: ["file upload", "file upload dnd"],
            choices: ["true", "false"],
            type: "boolean",
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "If set to 'true' and \"overwrite files\" is set to 'false', then any uploaded files that already exist on the file system will be saved with automatically generated unique names.")
        }, {
            name: "allowed type",
            controls: ["file upload", "file upload dnd"],
            U: true,
            choices: ["text/plain", "application/vnd.ms-word", "application/vnd.ms-excel", "application/pdf",
                "image/gif", "image/jpg", "image/png", "Other..."],
            p: true,
            o: ["char", "varchar", "string"],
            help: pui.a("[all file types]", "Specifies a MIME file type (as reported by the web browser) which is allowed to be uploaded. If not set, any file type will be allowed.<br /><br />To specify multiple types, right-click the property and select Add Another Allowed Type.", ["other"])
        }, {
            name: "onupload",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when files are uploaded."),
            controls: ["file upload", "file upload dnd"],
            j: "genie"
        }, {name: "Borders", category: true}, {
            name: "border radius",
            L: "borderRadius",
            format: "px",
            choices: ["1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "10px", "11px", "12px", "13px", "14px", "15px", "16px", "17px", "18px", "19px", "20px", "Other..."],
            help: pui.a("css", "This property allow you to create rounded corners by specifying a border radius.", ["other"])
        }, {
            name: "border bottom color",
            L: "borderBottomColor",
            type: "color",
            help: pui.a("css", "The color of the element's bottom side of the border.", ["color"])
        },
        {
            name: "border bottom style",
            L: "borderBottomStyle",
            choices: b,
            help: pui.a("css", "The style of the element's bottom side of the border.")
        }, {
            name: "border bottom width",
            format: "px",
            L: "borderBottomWidth",
            choices: a,
            help: pui.a("css", "The thickness of the element's bottom side of the border.", ["other"])
        }, {
            name: "border left color",
            L: "borderLeftColor",
            type: "color",
            help: pui.a("css", "The color of the element's left side of the border.", ["color"])
        }, {
            name: "border left style", L: "borderLeftStyle", choices: b, help: pui.a("css",
                "The style of the element's left side of the border.")
        }, {
            name: "border left width",
            format: "px",
            L: "borderLeftWidth",
            choices: a,
            help: pui.a("css", "The thickness of the element's left side of the border.", ["other"])
        }, {
            name: "border right color",
            L: "borderRightColor",
            type: "color",
            help: pui.a("css", "The color of the element's right bottom side of the border.", ["color"])
        }, {
            name: "border right style",
            L: "borderRightStyle",
            choices: b,
            help: pui.a("css", "The style of the element's right side of the border.")
        }, {
            name: "border right width",
            format: "px",
            L: "borderRightWidth",
            choices: a,
            help: pui.a("css", "The thickness of the element's right side of the border.", ["other"])
        }, {
            name: "border top color",
            L: "borderTopColor",
            type: "color",
            help: pui.a("css", "The color of the element's top side of the border.", ["color"])
        }, {
            name: "border top style",
            L: "borderTopStyle",
            choices: b,
            help: pui.a("css", "The style of the element's top side of the border.")
        }, {
            name: "border top width",
            format: "px",
            L: "borderTopWidth",
            choices: a,
            help: pui.a("css", "The thickness of the element's top side of the border.",
                ["other"])
        }, {name: "Padding", category: true}, {
            name: "padding bottom",
            format: "px",
            L: "paddingBottom",
            choices: c,
            help: pui.a("css", "Sets the distance between the bottom edge of the current element and the element's content.", ["other", "pixel"]),
            Bc: true
        }, {
            name: "padding left",
            format: "px",
            L: "paddingLeft",
            choices: c,
            help: pui.a("css", "Sets the distance between the left edge of the current element and the element's content.", ["other", "pixel"]),
            Bc: true
        }, {
            name: "padding right",
            format: "px",
            L: "paddingRight",
            choices: c,
            help: pui.a("css", "Sets the distance between the right edge of the current element and the element's content.", ["other", "pixel"]),
            Bc: true
        }, {
            name: "padding top",
            format: "px",
            L: "paddingTop",
            choices: c,
            help: pui.a("css", "Sets the distance between the top edge of the current element and the element's content.", ["other", "pixel"]),
            Bc: true
        }, {name: "Classes", category: true, j: "dspf"}, {
            name: "css class",
            type: "cssClass",
            U: true,
            help: pui.a("widget", "Defines a custom cascading style sheet class to assign to the element. To specify multiple classes, right-click the property and select Add Another CSS Class."),
            j: "dspf"
        }, {
            name: "focus class",
            help: pui.a("blank", "Defines a custom cascading style sheet class for when the element receives focus."),
            j: "dspf",
            controls: ["combo box", "date field", "password field", "select box", "spinner", "text area", "textbox"]
        }, {
            name: "display attribute field",
            readOnly: true,
            p: true,
            o: ["char"],
            oj: 1,
            help: pui.a("bind", "This property identifies a field containing a display attribute hex value. It represents the DSPATR keyword with a program to system field parameter. The hex value is translated to the appropriate css class at run time."),
            j: "dspf",
            viewdesigner: false
        }, {name: "Misc", category: true}, {
            name: "css class",
            type: "cssClass",
            Oa: "class",
            help: pui.a("theme", "Defines a custom cascading style sheet class to assign to the element."),
            j: "genie"
        }, {
            name: "cursor",
            L: "cursor",
            choices: ["auto", "default", "crosshair", "pointer", "move", "e-resize", "ne-resize", "nw-resize", "n-resize", "se-resize", "sw-resize", "s-resize", "w-resize", "text", "wait", "help", "Other..."],
            help: pui.a("css", "Determines how the mouse cursor should look when hovering over the element. <br><br><u>Valid options</u>: <span style='cursor:default;'>default</span>, <span style='cursor:crosshair;'>crosshair</span>, <span style='cursor:pointer;'>pointer</span>, <span style='cursor:move;'>move</span>, <span style='cursor:e-resize;'>e-resize</span>, <span style='cursor:ne-resize;'>ne-resize</span>, <span style='cursor:nw-resize;'>nw-resize</span>, <span style='cursor:n-resize;'>n-resize</span>, <span style='cursor:se-resize;'>se-resize</span>, <span style='cursor:sw-resize;'>sw-resize</span>, <span style='cursor:s-resize;'>s-resize</span>, <span style='cursor:w-resize;'>w-resize</span>, <span style='cursor:text;'>text</span>, <span style='cursor:wait;'>wait</span>, <span style='cursor:help;'>help</span>.<br><br>Hover over the options above to see the cursor.",
                ["other"]),
            Bc: true
        }, {
            name: "overflow x",
            L: "overflowX",
            choices: ["visible", "hidden", "scroll", "auto"],
            help: pui.a("css", "Determines whether a horizontal scrollbar should be displayed for this element.", ["overflow"]),
            Bc: true
        }, {
            name: "overflow y",
            L: "overflowY",
            choices: ["visible", "hidden", "scroll", "auto"],
            help: pui.a("css", "Determines whether a vertical scrollbar should be displayed for this element.", ["overflow"]),
            Bc: true
        }, {
            name: "tab index",
            format: "number",
            Oa: "tabIndex",
            help: pui.a("blank", "Determines the tab order for input elements on the screen." +
                (Q == "genie" ? " This property does not take effect unless the Prevent Auto Tab property is set to true under Screen Properties." : ""))
        }, {
            name: "tool tip",
            type: "long",
            Sh: true,
            Oa: "title",
            translate: true,
            help: pui.a("blank", "Defines the text to appear in a tool tip when the user hovers the mouse over this element.")
        }, {
            name: "user defined data",
            U: true,
            help: pui.a("blank", "Specifies user-defined general purpose data associated with the widget. To provide multiple user defined data values, right-click the property and select Add Another User Defined Value.")
        },
        {
            name: "visibility",
            format: "visible / hidden",
            L: "visibility",
            choices: ["hidden", "visible"],
            help: pui.a("blank", "Determines whether the element is visible or hidden. Hidden elements appear dimmed out in design mode, and invisible at runtime. If not defined, the CSS will determine the visibility, it will inherit its parent's visibility, or it will be visible.")
        }, {
            name: "inline style",
            type: "long",
            Sh: true,
            Oa: "style",
            help: pui.a("blank", "This property lets you define CSS properties that will be applied to the widget. These properties are applied inline, and therefore take precedence over those defined in a CSS class. Multiple properties may be provided, separated by a semi-colon. You can learn more about CSS properties at the following link: http://www.w3schools.com/cssref/. If you define CSS properties that are defined by other widget properties, the widget properties overrule the CSS inline properties. These CSS properties are ignored and should be set using the widget properties: 'position', 'visibility', 'display', 'left', 'right', 'top', 'bottom', 'width', 'height'")
        },
        {name: "Events", category: true}, {
            name: "onblur",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the element loses focus.")
        }, {
            name: "onchange",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the element value is changed.")
        }, {
            name: "oninput",
            controls: ["combo box", "date field", "password field", "spinner", "text area", "textbox"],
            type: "js",
            help: pui.a("blank", "Initiates a client-side script immediately after any input is entered into the element without waiting for the element to lose focus.")
        },
        {
            name: "onclick",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the element is clicked.")
        }, {
            name: "ondblclick",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the element is double-clicked.")
        }, {
            name: "ondbload",
            controls: ["select box", "combo box", "textbox", "chart"],
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when database data is loaded for a database-driven widget. An object named <b>response</b> will be defined that contains:<ul><li><b>success</b> - boolean true/false</li><li><b>id</b> - the widget id</li><li><b>error</b> - an object with 'id', 'text' and 'text2' fields containing the error.</li></ul>")
        },
        {
            name: "onfocus",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the element receives focus.")
        }, {
            name: "onkeydown",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when a keyboard key is being pressed down on this element.")
        }, {
            name: "onkeypress",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the user presses and releases a keyboard key on this element.")
        }, {
            name: "onkeyup",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the user releases a keyboard key on this element.")
        },
        {
            name: "onmousedown",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse is pressed down on this element.")
        }, {
            name: "onmousemove",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse is moving within this element.")
        }, {
            name: "onmouseout",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse is moved off this element.")
        }, {
            name: "onmouseover",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse is moved over this element.")
        },
        {
            name: "onmouseup",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse button is released off this element.")
        }, {
            name: "onselect",
            controls: ["combo box", "textbox"],
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when a selection is made from the selection list of an auto-complete textbox or a combo box. In the case of an auto-complete textbox, the selected record is passed to the function as a JSON object that has properties named after the selected fields.")
        }, {
            name: "onspin",
            controls: ["spinner"],
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the up or down arrow is clicked on a spinner element.")
        }]
}

function pc(b) {
    if (pui.ja) return b = [{name: "Identification", category: true}, {
        name: "record format name",
        help: pui.a("blank", "Identifies the screen name used by server-side code to read input or write output."),
        maxLength: 10,
        bind: false,
        $a: false
    }, {name: "description", help: pui.a("blank", "Describes the record format."), bind: false}, {
        name: "document type",
        choices: ["html", "json", "xml", "text", "csv"],
        help: pui.a("blank", "Specifies the type of document used to define the record format. This determines the default content type and affects the syntax highlighting within the editor."),
        p: true,
        o: ["char", "varchar", "string"]
    }, {name: "Input", category: true}, {
        name: "input parameters",
        type: "inputfields",
        readOnly: true,
        bind: false,
        help: pui.a("bind", "Identifies input parameter names and the corresponding bound fields for the HTTP request."),
        Gc: ["parameter name", "input field"],
        $a: false
    }, {
        name: "parameter name",
        label: "Parameter Name",
        U: true,
        hide: true,
        bind: false,
        help: ""
    }, {
        name: "input field",
        label: "Bound Field",
        p: true,
        readOnly: true,
        U: true,
        hide: true,
        help: ""
    }, {name: "HTTP Header", category: true}, {
        name: "content type",
        help: pui.a("[based on document type]", "Specifies an HTTP response content type. If not specified, a default content type based on the document type is used."),
        p: true,
        o: ["char", "varchar", "string"]
    }, {
        name: "attachment name",
        help: pui.a("blank", "Specifies an attachment file name. When the attachment name is specified, the 'Content-Disposition: attachment' header is sent as part of the HTTP response."),
        p: true,
        o: ["char", "varchar", "string"]
    }, {
        name: "no cache",
        choices: ["true", "false"],
        type: "boolean",
        help: pui.a("browser",
            "Specifies whether the 'Cache-Control: no-cache' HTTP header is sent, which causes the browser not to cache the response."),
        p: true,
        o: ["indicator", "expression"]
    }, {
        name: "custom header",
        U: true,
        type: "long",
        help: pui.a("[default headers]", "Specifies custom HTTP headers to send as part of the HTTP response."),
        p: true,
        o: ["char", "varchar", "string"]
    }, {name: "Misc", category: true}, {
        name: "separator",
        help: pui.a("blank", "Specifies an optional seperator value to output when multiple copies of this format are written. For example, if the format is to be written into a JSON array, the comma character should be specified as a separator."),
        bind: false
    }, {
        name: "destination",
        help: pui.a("STDOUT", "Specifies an IFS path to send the output to. The file path is set on the first write to this record format, and cannot be changed without closing and re-opening the display file. If not specified, the output is sent to STDOUT."),
        p: true,
        o: ["char", "varchar", "string"]
    }, {
        name: "existing file action",
        choices: ["append", "replace", "exception"],
        help: pui.a("exception", "Action to take if <i>destination</i> file already exists when the program starts writing this record format. 'append' will append to existing file content. 'replace' will delete/re-create the file. 'exception' will cause the handler to send an escape message to the program."),
        p: true,
        o: ["char", "varchar", "string"]
    }, {
        name: "user defined data",
        U: true,
        help: pui.a("blank", "Specifies user-defined general purpose data associated with the record format. To provide multiple user defined data values, right-click the property and select Add Another User Defined Value.")
    }];
    if (Q == "dspf") return b = [{name: "Identification", category: true}, {
        name: "record format name",
        displayName: pui.nodedesigner ? "name" : undefined,
        help: pui.a("blank", "Identifies the name that is used to access this screen from server code."),
        maxLength: pui.viewdesigner || pui.nodedesigner ? null : 10,
        bind: false,
        $a: false
    }, {name: "description", help: pui.a("blank", "Describes the screen."), bind: false}, {
        name: "document title",
        help: pui.a("blank", "Specifies the document title to use when this screen is displayed. Web browsers usually display the document title in a window's title bar when the window is open, and in the task bar when the window is minimized.")
    }, {name: "External Files", category: true}, {
        name: "external css", type: "cssfile", U: true, help: pui.a("blank",
            "Identifies the location of an external cascading style sheet file to apply to this screen. To specify multiple files, right-click the property and select Add Another External CSS.")
    }, {
        name: "external javascript",
        type: "jsfile",
        U: true,
        help: pui.a("blank", "Identifies the location of an external JavaScript file to load on this screen. To specify multiple files, right-click the property and select Add Another External JavaScript.")
    }, {name: "Transition Animation", category: true}, {
        name: "animated screen",
        choices: ["previous",
            "new"],
        help: pui.a("new", "Specifies whether the previous screen is animated away to reveal the new screen or the new screen is animated on top of the previous screen. The default is to animate the new screen.")
    }, {
        name: "animation",
        choices: ["slide-right", "slide-left", "slide-down", "slide-up", "fade", "zoom-in", "zoom-out", "Other..."],
        help: pui.a("blank", "Identifies the CSS class for the screen transition animation. The 'animated screen' property is appended to the 'animation' property to select the appropriate CSS class.",
            ["other"])
    }, {
        name: "overlay screens",
        choices: ["true", "false"],
        type: "boolean",
        help: pui.a("false", "Determines if both the previous and the newly rendered screen should remain after the animation completes. This is useful in presenting a mobile pop-up menu screen or similar. Defaults to false.")
    }, {name: "Overlay", category: true}, {
        name: "overlay",
        choices: ["true", "false"],
        type: "boolean",
        help: pui.a("false", "Specifies that the screen you are defining should appear on the display without the entire display being cleared first."),
        p: true,
        o: ["indicator", "expression"],
        viewdesigner: false
    }, {
        name: "overlay range",
        help: pui.a("blank", "Specifies a range of row numbers for this record format. This can be used to emulate certain behaviors of legacy green-screens in converted applications."),
        bind: false,
        viewdesigner: false
    }, {
        name: "design overlay formats",
        type: "list",
        help: pui.a("blank", "Specifies a list of additional record formats to render in the designer when this record format is selected. This property is only used at design-time. It is ignored at run-time."),
        bind: false
    }, {name: "Behavior", category: true}, {
        name: "disable enter key",
        choices: ["true", "false"],
        type: "boolean",
        help: pui.a("false", "This property determines if pressing the Enter key will cause a response to be sent to the server. If set to true and the Enter key is not used as a shortcut key, the response will not be sent. Otherwise, the response is sent automatically."),
        p: true,
        o: ["indicator", "expression"]
    }, {
        name: "initialize record",
        choices: ["true", "false"],
        type: "boolean",
        bind: false,
        help: pui.a("false",
            "Specifies that if this record is not already on the display, it is to be written to the display before an input operation is sent from the program. It represents the INZRCD keyword."),
        viewdesigner: false
    }, {
        name: "protect",
        choices: ["true", "false"],
        type: "boolean",
        help: pui.a("false", "Specifies that when this record is displayed, all input-capable fields already on the display become protected. The read only property is set to true and the PR css class is applied."),
        p: true,
        o: ["indicator", "expression"]
    },
        {
            name: "erase formats",
            type: "eraseformats",
            readOnly: true,
            bind: false,
            help: pui.a("blank", "Identifies record formats to be erased when this record is written."),
            Gc: ["erase format", "erase condition"],
            $a: false,
            viewdesigner: false
        }, {
            name: "erase format",
            label: "Record Format Name",
            maxLength: 10,
            uppercase: true,
            U: true,
            hide: true,
            bind: false,
            help: "",
            viewdesigner: false
        }, {
            name: "erase condition",
            label: "Erase Condition",
            o: ["indicator", "expression"],
            p: true,
            readOnly: true,
            U: true,
            hide: true,
            format: "1 / 0",
            type: "boolean",
            help: "",
            viewdesigner: false
        }, {
            name: "assume",
            choices: ["true", "false"],
            help: pui.a("false", "Use this property to specify that the program is to assume that a record is already shown on the display when this file is opened."),
            bind: false,
            viewdesigner: false
        }, {
            name: "clear line",
            choices: ["*END", "*NO", "*ALL", "Other..."],
            help: pui.a("blank", "Use this property to clear (delete) a specific number of lines before the record is displayed. It represents the CLRL keyword.", ["other"]),
            bind: false,
            viewdesigner: false
        },
        {
            name: "starting line",
            help: pui.a("blank", "This property identifies the starting line of the record format. It is used in conjunction with 'clear line' property to specify where the clearing of lines begins. It represents the SLNO keyword."),
            bind: false,
            viewdesigner: false
        }, {
            name: "put override",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Use this property to override data contents or attributes of specific fields within a record. It represents the PUTOVR keyword."),
            p: true,
            o: ["indicator",
                "expression"],
            viewdesigner: false
        }, {
            name: "override data",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Use this property to together with the 'put override' property to override existing data contents already on the display. It represents the OVRDTA keyword."),
            p: true,
            o: ["indicator", "expression"],
            viewdesigner: false
        }, {
            name: "override attribute",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Use this property to together with the 'put override' property to override existing attributes already on the display. It represents the OVRATR keyword."),
            p: true,
            o: ["indicator", "expression"],
            viewdesigner: false
        }, {
            name: "put retain",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "You use this property with the 'overlay' property to prevent the handler from deleting data that is already on the display when the application displays the record again. It represents the PUTRETAIN keyword."),
            p: true,
            o: ["indicator", "expression"],
            viewdesigner: false
        }, {
            name: "return data",
            choices: ["true", "false"],
            type: "boolean",
            bind: false,
            help: pui.a("false", "Specifies that when your program sends an input operation to this record format, the program is to return the same data that was returned on the previous input operation sent to this record format. This property is ignored if the record format has not already been read. It represents the RTNDTA keyword."),
            viewdesigner: false
        }, {name: "Response", category: true}, {
            name: "changed",
            format: "1 / 0",
            readOnly: true,
            p: true,
            o: ["indicator"],
            help: pui.a("bind", "Specifies a response indicator that is set on if data on any input element within the record format is modified.")
        }, {
            name: "set off",
            U: true,
            format: "1 / 0",
            readOnly: true,
            p: true,
            o: ["indicator"],
            help: pui.a("bind", "Specifies response indicators that are to be set off. To specify additional set off indicators, right-click the property and select Add Another Set Off."),
            viewdesigner: false
        }, {
            name: "valid command key",
            format: "1 / 0",
            readOnly: true,
            p: true,
            o: ["indicator"],
            help: pui.a("bind", "Specifies a response indicator that is set on when a response that is not associated with the Enter shortcut key is sent to the server."),
            viewdesigner: false
        }, {
            name: "back button",
            format: "1 / 0",
            readOnly: true,
            p: true,
            o: ["indicator"],
            help: pui.a("bind", "Specifies a response indicator that is set on when the user presses the browser's back button. This feature will only work in browsers that support the HTML5 history.pushState() method.")
        },
        {name: "Messages", category: true}, {
            name: "error messages",
            type: "errmessages",
            readOnly: true,
            bind: false,
            help: pui.a("blank", "Identifies error messages to be displayed in association with this element."),
            Gc: ["error message", "error message id", "error message file", "error message library", "replacement data", "error condition", "error response", "error enhanced mode"],
            $a: false
        }, {name: "error message", label: "Message Text", U: true, hide: true, help: ""}, {
            name: "error message id", label: "Message Id", uppercase: true, maxLength: 7,
            U: true, hide: true, help: ""
        }, {
            name: "error message file",
            label: "Message File",
            maxLength: 10,
            uppercase: true,
            U: true,
            hide: true,
            help: ""
        }, {
            name: "error message library",
            label: "Library",
            maxLength: 10,
            uppercase: true,
            U: true,
            hide: true,
            help: ""
        }, {
            name: "replacement data",
            label: "Replacement Data",
            o: ["char"],
            p: true,
            readOnly: true,
            U: true,
            hide: true,
            help: ""
        }, {
            name: "error condition",
            label: "Error Condition",
            o: ["indicator", "expression"],
            p: true,
            readOnly: true,
            U: true,
            hide: true,
            format: "1 / 0",
            type: "boolean",
            help: ""
        }, {
            name: "error response",
            label: "Error Response",
            o: ["indicator"],
            p: true,
            readOnly: true,
            U: true,
            hide: true,
            format: "1 / 0",
            type: "boolean",
            help: ""
        }, {
            name: "error enhanced mode",
            label: "Enhanced Mode",
            bp: true,
            bind: false,
            U: true,
            hide: true,
            help: pui.a("checked", "If checked, allows error messages to display without ERRMSG/ERRMSGID-type restrictions. Errors can display regardless of whether format is already on the screen, and output data is also sent.")
        }, {name: "Help", category: true, viewdesigner: false}, {
            name: "help titles",
            type: "helptitles",
            readOnly: true,
            bind: false,
            help: pui.a("blank", "Identifies the help title for the help panel. Multiple titles can be specified and conditioned using indicators."),
            Gc: ["help title", "help title condition"],
            $a: false,
            viewdesigner: false
        }, {
            name: "help title",
            label: "Help Title",
            U: true,
            bind: false,
            hide: true,
            help: "",
            viewdesigner: false
        }, {
            name: "help title condition",
            label: "Condition",
            o: ["indicator", "expression"],
            p: true,
            readOnly: true,
            U: true,
            hide: true,
            format: "1 / 0",
            type: "boolean",
            help: "",
            viewdesigner: false
        }, {
            name: "help panels",
            type: "helppanels",
            readOnly: true,
            bind: false,
            help: pui.a("blank", "Identifies the help area and the specifc help record or help panel group to display when the help button is clicked."),
            Gc: ["help record", "help display file", "help panel group", "help module", "help area", "help panel condition"],
            $a: false,
            viewdesigner: false
        }, {
            name: "help record",
            label: "Help Record",
            uppercase: true,
            maxLength: 10,
            U: true,
            bind: false,
            hide: true,
            help: "",
            viewdesigner: false
        }, {
            name: "help display file", label: "Help Display File", uppercase: true,
            maxLength: 21, U: true, bind: false, hide: true, help: "", viewdesigner: false
        }, {
            name: "help panel group",
            label: "Help Panel Group",
            uppercase: true,
            maxLength: 21,
            U: true,
            bind: false,
            hide: true,
            help: "",
            viewdesigner: false
        }, {
            name: "help module",
            label: "Help Module",
            uppercase: true,
            maxLength: 32,
            U: true,
            bind: false,
            hide: true,
            help: "",
            viewdesigner: false
        }, {name: "help area", label: "Help Area", U: true, bind: false, hide: true, help: "", viewdesigner: false}, {
            name: "help panel condition", label: "Condition", o: ["indicator", "expression"], p: true,
            readOnly: true, U: true, hide: true, format: "1 / 0", type: "boolean", help: "", viewdesigner: false
        }, {name: "Window", category: true}, {
            name: "show as window",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Determines whether this screen is shown as a pop-up window."),
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "window left",
            format: "px",
            help: pui.a("blank", "Represents the x-coordinate of the window. Can be expressed in pixels or columns.")
        }, {
            name: "window top",
            format: "px",
            help: pui.a("blank", "Represents the y-coordinate of the window. Can be expressed in pixels or rows.")
        },
        {
            name: "center window",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "If set to true, the window will be centered within the boundaries of the previously rendered screen."),
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "mask screen",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("true", "Determines if the screen is masked when a window is displayed. Defaults to true."),
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "remove windows",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false",
                "Specify this property to remove all existing windows on the display before this window is displayed."),
            p: true,
            o: ["indicator", "expression"],
            viewdesigner: false
        }, {
            name: "window reference",
            help: pui.a("blank", "Use this property to refer to a record format name where the window and its properties have been defined."),
            maxLength: 10,
            bind: false,
            viewdesigner: false
        }, {name: "Cursor Location", category: true}, {
            name: "return cursor record",
            readOnly: true,
            p: true,
            o: ["char", "varchar", "string"],
            help: pui.a("bind", "This property can be bound to a character field, which will be used to receive the name of the record format or screen on which the cursor is located.")
        },
        {
            name: "return cursor field",
            readOnly: true,
            p: true,
            o: ["char", "varchar", "string"],
            help: pui.a("bind", "This property can be bound to a character field, which will be used to receive the name of the field on which the cursor is located.")
        }, {
            name: "return cursor position",
            readOnly: true,
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("bind", "This property can be bound to a numeric field, which will be used to reveive the relative position of the cursor within an element.")
        }, {
            name: "return cursor row",
            readOnly: true,
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("bind", "This property can be bound to a numeric field, which will contain the row on which the cursor is located. The row number is based on the <i>cursor row</i> property assigned to the widgets on the screen."),
            viewdesigner: false
        }, {
            name: "return cursor column",
            readOnly: true,
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("bind", "This property can be bound to a numeric field, which will contain the column on which the cursor is located. The column number is based on the <i>cursor column</i> property assigned to the widgets on the screen."),
            viewdesigner: false
        }, {
            name: "set cursor condition",
            readOnly: true,
            p: true,
            o: ["indicator", "expression"],
            format: "true / false",
            help: pui.a("bind", "This property can provide an indicator condition, which will be used to determine whether the <i>set cursor row</i> and <i>set cursor column</i> properties are used to set focus."),
            viewdesigner: false
        }, {
            name: "set cursor row",
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("blank", "This property is used to set focus on a specific widget by identifying the widget's assigned cursor row and cursor column properties."),
            viewdesigner: false
        }, {
            name: "set cursor column",
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("blank", "This property is used to set focus on a specific widget by identifying the widget's assigned cursor row and cursor column properties."),
            viewdesigner: false
        }, {
            name: "no focus",
            choices: ["true", "false", "no focus on page"],
            type: "boolean",
            help: pui.a("false", "This property indicates that no field should receive focus when the screen first renders. When set to 'true', focus will not go to any input element, but key presses (such as for function keys) will still be detected by the application without any special action from the user.<br /><br />When set to 'no focus on page', no input element will get focus, but key presses will not be detected by the application until the user clicks on a component in the screen. This setting is useful to prevent Internet Explorer from taking focus away from another open window when the screen is rendered."),
            p: true,
            o: ["indicator", "expression"]
        }, {name: "Drag and Drop Response", category: true}, {
            name: "dd element id",
            readOnly: true,
            p: true,
            o: ["char", "varchar", "string"],
            help: pui.a("bind", "This property can be bound to a character field, which will be used to retrieve the id of the element that is drag and dropped.")
        }, {
            name: "dd record number",
            readOnly: true,
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("bind", "This property can be bound to a numeric field, which will be used to retrieve the record number of the subfile row that is drag and dropped.")
        },
        {
            name: "target element id",
            readOnly: true,
            p: true,
            o: ["char", "varchar", "string"],
            help: pui.a("bind", "This property can be bound to a character field, which will be used to retrieve the id of the target element in a drag and drop operation. Use this property to determine where an element was dropped.")
        }, {
            name: "target record number",
            readOnly: true,
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("bind", "This property can be bound to a numeric field, which will be used to retrieve the record number of the target subfile row in a drag and drop operation. Use this property to determine where within a subfile an element was dropped.")
        },
        {
            name: "bypass validation",
            choices: ["true", "false", "send data"],
            type: "boolean",
            help: pui.a("false", "This property specifies that a drag and drop operation will not trigger client-side validation and will automatically discard all data modified by the user on the screen. You can select 'send data' to bypass all client-side validation except for field data type validation and still send all data modified by the user."),
            o: ["char", "indicator", "expression"]
        }, {name: "Events", category: true}, {
            name: "onload",
            type: "js", help: pui.a("blank", "Initiates a client-side script when the screen loads.")
        }, {
            name: "onsubmit",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script or expression before a response is submitted to the screen. This typically occurs when a button or a hyperlink is clicked. If the expression evaluates to <i>false</i>, the response is not submitted.")
        }, {
            name: "onmessage",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script that receives a message from the Profound.js display.screen.write(), display.screen.execute(), or the display.screen.executeMessage() API, which allows you to partially update screen content instead of re-rendering the entire screen. The message is received in a variable named <b>message</b>.")
        },
        {name: "Misc", category: true}, {
            name: "user defined data",
            U: true,
            help: pui.a("blank", "Specifies user-defined general purpose data associated with the screen. To provide multiple user defined data values, right-click the property and select Add Another User Defined Value.")
        }];
    if (b.oc == true) return b = [{name: "Identification", category: true}, {
        name: "screen name",
        help: pui.a("[blank or matched screen name]", "The screen name is used to save the current screen to the server. The screen is saved to a .scn file under the selected skin. In addition to specifying a screen name, you will have to mark one or more fields as screen identifiers."),
        $a: false
    }, {name: "Window Subfile Options", category: true}, {
        name: "create combo boxes",
        ub: "pui.genie.config.createComboBoxesInWindow",
        choices: ["true", "false"],
        type: "boolean",
        help: pui.a("false", "<i>Default = false</i>.<br> This flag determines whether the option column will be converted to a combo box when a subfile is detected in a window format. Due to the limited amount of space in a window format, this can overflow the window, so it is disabled by default.")
    }, {name: "Events", category: true}, {
        name: "onpageload",
        type: "js",
        help: pui.a("blank", "Initiates a client-side script when the page loads but before screen design customizations are applied.")
    }, {name: "onload", type: "js", help: pui.a("blank", "Initiates a client-side script when the screen loads.")}];
    return b = [{name: "Identification", category: true}, {
        name: "screen name",
        help: pui.a("[blank or matched screen name]", "The screen name is used to save the current screen to the server. The screen is saved to a .scn file under the selected skin. In addition to specifying a screen name, you will have to mark one or more fields as screen identifiers."),
        $a: false
    }, {name: "Subfile Options", category: true}, {
        name: "detect subfile",
        ub: "pui.genie.config.detectSubfile",
        choices: ["true", "false"],
        type: "boolean",
        help: pui.a("true", "This flag determines whether Genie should look for a subfile on the current screen.")
    }, {
        name: "detect subfile patterns",
        ub: "pui.genie.config.detectSubfilePatterns",
        choices: ["true", "false"],
        type: "boolean",
        help: pui.a("true", "This flag tells Genie to look for a subfile by detecting a pattern of rows that are formatted in the same way. When a subfile is detected using this method, a grid widget is created over it. If the flag is not set to true, Genie looks for Option Headings, instead, in order to detect the subfile.")
    },
        {
            name: "detect subfile end plus",
            ub: "pui.genie.config.detectSubfileEndPlus",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("true", "When 'detect subfile patterns' is selected, this flag will allow Genie to recognize a 1A output field usually containing a '+' on the end of the last row, and remove it so it will not interrupt the pattern detection.")
        }, {
            name: "find option column",
            ub: "pui.genie.config.findOptionColumn",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("true", "When 'detect subfile patterns' is selected, this flag is used to prevent false positives by only creating grids on subfiles where an Option Column exists.")
        },
        {
            name: "option headings",
            type: "list",
            ub: "pui.genie.config.optionHeadings",
            help: pui.a("true", "Specifies a comma separated list of headings to look for to identify a subfile option column. This method of detecting subfiles is used only when the 'detect subfile patterns' option is not selected.")
        }, {
            name: "subfile start",
            ub: "pui.genie.config.subfileStartLine",
            choices: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27],
            help: pui.a("blank", "Subfile start and subfile end properties specify the row numbers where the screen's subfile starts and ends. This explicitly overrides all subfile detection.")
        },
        {
            name: "subfile end",
            ub: "pui.genie.config.subfileEndLine",
            choices: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27],
            help: pui.a("blank", "Subfile start and subfile end properties specify the row numbers where the screen's subfile starts and ends. This explicitly overrides all subfile detection.")
        }, {
            name: "outline subfile",
            ub: "pui.genie.config.outlineSubfile",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("skin", "If a subfile is found using the Option Headings method, this flag determines whether an outline is drawn around the subfile area.")
        },
        {
            name: "subfile outline color",
            ub: "pui.genie.config.subfileOutlineColor",
            type: "color",
            help: pui.a("skin", "Sets the outline color when the 'outline subfile' option is used. This can be give either as a CSS color name, such as 'red', or as a hex code, such as '#FF0000'.")
        }, {
            name: "separate subfile lines",
            ub: "pui.genie.config.separateSubfileLines",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("skin", "If a subfile is found using the Option Headings method, this flag determines whether a separator line is drawn between each subfile line.")
        },
        {
            name: "hide subfile options",
            ub: "pui.genie.config.hideSubfileOpt",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("skin", "If a subfile is found using the Option Headings method, this flag tells Genie to find and hide an option input box on each subfile line. Instead of using the input box, the user will be able to right-click the subfile to select the appropriate option.")
        }, {
            name: "row highlight color",
            ub: "pui.genie.config.hiColor",
            type: "color",
            help: pui.a("skin", "Defines the color of the row when it is hovered over with the mouse.",
                ["background color"])
        }, {
            name: "row highlight font color",
            ub: "pui.genie.config.hiFontColor",
            type: "color",
            help: pui.a("skin", "Defines the color of the text within the row when the row is hovered over with the mouse.", ["color"])
        }, {
            name: "striped subfile",
            ub: "pui.genie.config.stripedSubfile",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("skin", "This flag determines if the subfile rows are striped with alternate colors.")
        }, {
            name: "odd row color", ub: "pui.genie.config.oddRowColor", type: "color", help: pui.a("skin",
                "The color of the odd rows in a striped subfile.", ["background color"])
        }, {
            name: "even row color",
            ub: "pui.genie.config.evenRowColor",
            type: "color",
            help: pui.a("skin", "The color of the even rows in a striped subfile.", ["background color"])
        }, {name: "Misc", category: true}, {
            name: "alert errors",
            ub: "pui.genie.config.alertErrors",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "When set to true, Genie presents green-screen errors in an alert box. When set to false, errors are displayed at the bottom of the screen only.")
        },
        {
            name: "detect menus",
            ub: "pui.genie.config.detectMenus",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("true", "When set to true, Genie looks for menu panels on this screen and and transforms the menu options into hyperlinks.")
        }, {
            name: "detect date fields",
            ub: "pui.genie.config.detectDateFields",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "When set to true, Genie looks for date fields on this screen and automatically attaches a calendar control to any field that it finds.")
        }, {
            name: "default date format",
            ub: "pui.genie.config.defaultDateFormat",
            choices: ["MM/DD/YY", "MM/DD/YYYY", "DD/MM/YY", "DD/MM/YYYY", "DD.MM.YY", "DD.MM.YYYY", "MMDDYY", "MMDDYYYY", "DDMMYY", "DDMMYYYY", "YYMMDD", "YYYYMMDD", "YYYY-MM-DD", "YYYY/MM/DD"],
            help: pui.a("MM/DD/YY", "Defines the default date format to be used in calendar controls.")
        }, {
            name: "enlarge headings",
            ub: "pui.genie.config.enlargeHeadings",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("skin", "When set to true, Genie looks for the screen heading and automatically increases its font size and adds a shadow.")
        },
        {
            name: "function key buttons",
            ub: "pui.genie.config.functionKeyButtons",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("skin", "This flag determines whether function key labels, such as 'F3=Exit', are transformed into buttons.")
        }, {
            name: "hide function key names",
            ub: "pui.genie.config.hideFKeyNames",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("skin", "This flag looks for function key labels and removes the function key name. For example, 'F3=Exit' becomes 'Exit'. The user will be able to click on the field to send the appropriate function key to the server.")
        },
        {
            name: "overtype mode",
            ub: "pui.genie.config.overtypeMode",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("true", "Determines if the default keyboard cursor mode is overtype or insert. In overtype mode, the characters you type replace existing characters one by one. In insert mode, the characters you type move existing text to the right.", null, "This feature is only available in Internet Explorer. Other browsers no longer allow overtype mode.")
        }, {
            name: "highlight on focus",
            ub: "pui.genie.config.highlightOnFocus",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Highlights text in input fields when focus is received.")
        }, {
            name: "prevent auto tab",
            ub: "pui.genie.config.preventAutoTab",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "If set to false, Genie overrides the browser's default behavior of the Tab key with its own automatic tabbing. If set to true, the browser's default behavior is used for tabbing.")
        }, {
            name: "set field background color",
            ub: "pui.genie.config.setFieldBackground",
            choices: ["true",
                "false"],
            type: "boolean",
            help: pui.a("false", "If set to true, Genie will set the background color of all fields to the match the main screen background color, preventing any underlying items from showing through. If set to false, all fields will be given a transparent background, allowing any underlying items to show through.")
        }, {
            name: "use fixed font",
            ub: "pui.genie.config.useFixedFont",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "If set to true, Genie will set the font for this screen to Monospace. If set to false, Genie will use the font specified in the style sheet for this skin.")
        },
        {
            name: "adjust window borders",
            ub: "pui.genie.config.adjustWindowBorders",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("true", "When set to true, Genie will adjust the position and height of reverse image/space window borders in order to prevent gaps in the border.")
        }, {name: "Events", category: true}, {
            name: "onpageload",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the page loads but before screen design customizations are applied.")
        }, {
            name: "onload", type: "js", help: pui.a("blank",
                "Initiates a client-side script when the screen loads including all screen design customizations.")
        }, {
            name: "onsubmit",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script or expression before a response is submitted to the screen. This typically occurs when a function key is pressed or a button/hyperlink is clicked. If the expression evaluates to <i>false</i>, the response is not submitted.")
        }, {
            name: "subfile row onclick",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when a subfile row is clicked. The JavaScript variable hiLine reports the line that is currently highlighted. This event only fires when the 'detect subfile patterns' option is not selected.")
        },
        {
            name: "subfile row ondblclick",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when a subfile row is double-clicked. The JavaScript variable hiLine reports the line that is currently highlighted. This event only fires when the 'detect subfile patterns' option is not selected.")
        }]
}

function qc(b) {
    for (var a = {}, c = 0; c < b.length; c++) {
        a[b[c].name] = b[c];
        if (b[c].displayName) pui.Wu[b[c].displayName] = b[c].name
    }
    return a
}

function rc() {
    if (nc != null) return nc;
    return nc = qc(oc())
}

function sc(b, a, c) {
    if (pui.Wu[a]) a = pui.Wu[a];
    if (typeof b == "string") b = Tb(b);
    if (b == null) return null;
    a == "shortcut key" && pui.yE(c, b);
    if (a == "focus class") if (b.pui.properties["field type"] === "combo box") {
        var d = b.comboBoxWidget.getBox();
        d.focusClass = Zb(c);
        gc(d, "focus", pui.Qo);
        gc(d, "blur", pui.Lq)
    } else {
        b.focusClass = Zb(c);
        gc(b, "focus", pui.Qo);
        gc(b, "blur", pui.Lq)
    }
    if (a == "required") b.EA = c == "true";
    if (a == "mandatory entry") b.tw = c == "true";
    if (a == "mandatory fill") b.uw = c == "true";
    if (a == "valid values") b.Yv = c;
    if (a == "allow blanks") b.uk =
        c == "true";
    if (a == "auto advance") {
        d = b;
        if (b.comboBoxWidget != null) d = b.comboBoxWidget.getBox();
        if (c == "true") {
            d.gj = true;
            gc(d, "keyup", pui.ys)
        } else {
            d.gj = true;
            ic(d, "keyup", pui.ys)
        }
    }
    if (a == "validate name") b.wa = c == "true";
    if (a == "validate email") b.validateEmail = c == "true";
    if (a == "comparison operator") b.Ts = c == "true";
    if (a == "comparison value") b.Us = c;
    if (a == "range low") b.pl = c;
    if (a == "range high") b.ol = c;
    if (a == "checked value") b.pe = c;
    if (a == "unchecked value") b.Gg = c;
    if (a == "bypass validation") b.ia = c;
    if (a == "set focus" && (c == true ||
        c == "true")) {
        d = b;
        if (d.comboBoxWidget != null) d = d.comboBoxWidget.getBox();
        d.focus();
        pui.Pa.dom = d;
        pui.Pa.Zj = true
    }
    var e;
    e = b.ff == null ? rc() : b.ff;
    d = e[a];
    if (d == null) d = pui.Ye(e, a);
    if (d != null) {
        if (b.pui == null || b.pui.properties == null) {
            e = "";
            var f = "output field";
            if (b.tagName == "DIV") e = tc(b);
            if (b.tagName == "INPUT") {
                e = b.value;
                f = "textbox";
                if (b.type == "button" || b.type == "submit") f = "button"
            }
            if (a == "field type") f = c;
            if (b.pui == null) b.pui = {};
            b.pui.properties = {"field type": f, value: e}
        }
        b.pui.properties[a] = c;
        return uc(d, b.pui.properties,
            b, c, false)
    }
}

function uc(b, a, c, d, e, f, h, g) {
    if (d == "Other..." && e && b.name != "value") return c;
    var l = c, n;
    if (e) {
        n = f.originalValue;
        f.ta = true
    } else if (a.originalValue != null) n = a.originalValue; else {
        n = c.tagName == "DIV" ? c.comboBoxWidget != null ? c.comboBoxWidget.getValue() : c.Ha != null ? c.Ha.value : tc(c) : c.value;
        a.originalValue = n
    }
    var o = hc(d, n, c), i = b.name, r, k;
    if (i == "field type") {
        r = pui.widgets[o];
        if (r == null) return l;
        l = r.tag;
        var q = r.inputType;
        switch (o) {
            case "select box":
                if (!e && c.readOnly && c.tagName == "INPUT") switch (pui.J.config.protectedSelectBox) {
                    case "disable":
                        c.disabled = true;
                        break;
                    case "output":
                    default:
                        l = "input";
                        q = c.type
                }
                if (e && pui.is_old_ie && pui.ie_mode == 6 && (String(f.properties["select box height"]) == "" || String(f.properties["select box height"]) == "1" || String(f.properties["select box height"]) == "undefined")) {
                    l = "input";
                    q = "text"
                }
                break
        }
        var s = false, t = false;
        k = c.tagName.toLowerCase() != l;
        if (!k && c.tagName.toLowerCase() == "input") if (c.type != q) {
            k = true;
            if (c.type == "number" && q == "text") k = false
        }
        if (k) {
            s = true;
            k = document.createElement(l);
            if (l == "input" || !pui.is_old_ie && l == "button") k.type =
                q;
            c.parentNode != null && c.parentNode.replaceChild(k, c);
            k.style.left = c.style.left;
            k.style.top = c.style.top;
            k.style.width = c.style.width;
            k.style.height = c.style.height;
            k.style.position = c.style.position;
            k.style.cursor = c.style.cursor;
            k.style.visibility = c.style.visibility;
            k.id = c.id;
            if (typeof c.name == "string") k.name = c.name;
            if (Q == "dspf") {
                if (k.pui == null) k.pui = {};
                if (c.nf != null) {
                    k.nf = c.nf;
                    k.pui.formatName = c.nf
                }
                if (c.Rg != null) {
                    k.Rg = c.Rg;
                    k.pui.fieldName = c.Rg
                }
            }
            if (Q == "genie") {
                k.S = c.S;
                if (pui.J.Pa == c) pui.J.Pa = k;
                t = true
            }
            if (c.className.indexOf("hide") !=
                -1) {
                k.className = "hide";
                if (e) {
                    k.style.visibility = "visible";
                    k.style.filter = "alpha(opacity=30)";
                    k.style.opacity = 0.3
                }
            }
            c.getAttribute("maxlength") != null && k.setAttribute("maxlength", c.getAttribute("maxlength"));
            k.disabled = c.disabled;
            if (c.Jb != null) k.Jb = c.Jb;
            if (c.Yc != null) k.Yc = c.Yc;
            if (c.Vt) k.Vt = true;
            Q == "genie" && attachInputEvents(k);
            if (e) {
                f.dom = k;
                h != null && h.$w(f);
                f.designer.vs(k, f)
            }
            if (c.readOnly) if (l == "input") {
                if (k.type == "checkbox" || k.type == "radio") Q == "genie" && gc(k, "click", disableInputControl)
            } else if (l ==
                "textarea") k.readOnly = true
        } else {
            k = c;
            if (l == "div" && o != "tab panel") k.tabPanel = null;
            if (e || o == "chart" || o == "radio button") s = true
        }
        if (s) {
            l = oc();
            for (q = 0; q < l.length; q++) {
                s = l[q].name;
                var u = a[s];
                if (u != null && u != "") {
                    var w = l[q].L != null;
                    if (s == "overflow x" || s == "overflow y") if (a["field type"] == "layout") w = false;
                    if (w) if (l[q].L == "visibility" && e) if (u == "hidden") {
                        k.style.filter = "alpha(opacity=30)";
                        k.style.opacity = 0.3
                    } else {
                        k.style.filter = "";
                        k.style.opacity = ""
                    } else try {
                        var v = pui.Ky(l[q].L, u);
                        k.style[l[q].L] = v;
                        e && pui.Wo(k,
                            l[q].L, v)
                    } catch (E) {
                    }
                    if (l[q].Oa != null) {
                        if (l[q].type == "boolean" && u == "true") u = true;
                        if (l[q].type == "boolean" && u == "false") u = false;
                        if (l[q].Oa == "disabled" && e) u = false;
                        try {
                            if (u == false) k.getAttribute(l[q].Oa) != null && k.removeAttribute(l[q].Oa); else {
                                var y = hc(u, n, k);
                                if (l[q].Oa == "src") y = pui.normalizeURL(y, true);
                                l[q].Oa !== "style" && k.setAttribute(l[q].Oa, y);
                                if (l[q].Oa == "class") k.className = u
                            }
                        } catch (F) {
                        }
                    }
                }
            }
        }
        if (Q == "dspf") {
            q = [];
            q.push(a["css class"]);
            s = 2;
            for (u = a["css class " + s]; u != null;) {
                q.push(u);
                s++;
                u = a["css class " +
                s]
            }
            s = a["display attribute field"];
            u = false;
            if (s != null && !pui.f(s) && s != "" && s != " ") {
                q = q.concat(pui.ax(s));
                u = true
            }
            vc(k, q, u)
        }
        l = k;
        if (!r.resizable) {
            l.style.width = "";
            l.style.height = ""
        }
    } else {
        r = pui.widgets[a["field type"]];
        if (r == null) return l
    }
    if (l.pui == null) l.pui = {};
    if (l.pui.properties == null) l.pui.properties = {};
    l.pui.properties[i] = o;
    if (i == "value" && d != "script: value" && !e && Q == "genie" && l.S != null && l.S.idx != null) l.tagName == "INPUT" && l.type == "radio" && l.checked != true || (pui.response[l.S.idx] = l);
    if (e && i == "screen identifier" &&
        Q == "genie") {
        q = "red";
        q = d == "true" || d == true ? "red" : "#cccccc";
        if (l.style.borderLeftStyle == "dotted") l.style.borderLeftColor = q;
        if (l.style.borderRightStyle == "dotted") l.style.borderRightColor = q;
        if (l.style.borderTopStyle == "dotted") l.style.borderTopColor = q;
        if (l.style.borderBottomStyle == "dotted") l.style.borderBottomColor = q
    }
    q = r.eh;
    s = r.propertySetters;
    u = null;
    if (s != null) u = s[i];
    var D;
    if (u != null || q != null) D = {
        newValue: d,
        value: o,
        design: e,
        properties: a,
        originalValue: n,
        dom: l,
        Jd: c,
        propertyName: i,
        c: f,
        pc: h,
        evalProperty: function (H) {
            return hc(this.properties[H],
                this.originalValue, this.dom)
        }
    };
    if (q != null) if (q(D) == false) return;
    if (u != null) if (u(D) == false) return;
    if (t) if (k.comboBoxWidget != null) {
        t = k.comboBoxWidget.getBox();
        pui.xE(t);
        t.S = k.S;
        attachInputEvents(t);
        k.comboBoxWidget.lr(c.maxLength)
    } else pui.xE(k);
    if (i == "id" && e) {
        k = f.designer;
        t = k.selection;
        if (f.dom.id != d && document.getElementById(d) != null) if (!(pui.is_old_ie && f.dom.id.toUpperCase() == d.toUpperCase())) {
            pui.alert('The ID "' + d + '" is already in use.');
            k.k.refresh();
            return l
        }
        for (q = 0; q < t.e.length; q++) if (f.properties.newitem ==
            "true") if (kc[k.i.l] && kc[k.i.l].items) {
            s = kc[k.i.l].items;
            for (u = 0; u < s.length; u++) if (s[u].id == f.properties.id) s[u].id = d
        }
        if (a["field type"] == "tab panel") for (q = 0; q < k.items.length; q++) if (k.items[q].properties["parent tab panel"] == f.dom.id) {
            k.items[q].properties["parent tab panel"] = d;
            k.items[q].dom.Jb = d;
            k.items[q].m["parent tab panel"] = true;
            k.k.ea("parent tab panel")
        }
        t.e.length == 1 && k.k.io("Properties - " + o)
    }
    if (i == "parent tab panel" && (e || a.visibility != "hidden")) c.Jb = o;
    if (i == "parent tab") c.Yc = o;
    if (i == "top" ||
        i == "left" || i == "right" || i == "bottom") pui.Eq(c);
    i == "empty text" && !e && pui.HJ(c, o);
    k = null;
    if (String(d).substr(0, 3).toLowerCase() == "js:") k = d.substr(3);
    if (String(d).substr(0, 11).toLowerCase() == "javascript:") k = d.substr(11);
    if (String(d).substr(0, 7).toLowerCase() == "script:") k = d.substr(7);
    if (b.L != null) {
        if (b.L == "visibility" && e) if (o == "hidden") {
            c.style.filter = "alpha(opacity=30)";
            c.style.opacity = 0.3
        } else {
            c.style.filter = "";
            c.style.opacity = "";
            c.style.visibility = o
        } else if (b.L == "backgroundColor" && c.tabPanel != null) {
            c.tabPanel.ld =
                o ? o : "#eeeeff";
            if (Q == "genie" || e) c.tabPanel.H()
        } else {
            try {
                v = pui.Ky(b.L, o);
                c.style[b.L] = v;
                if (e) o === null || o.length == 0 ? pui.ev(c, b.L) : pui.Wo(c, b.L, v)
            } catch (B) {
                if (k == null && e) {
                    v = "'" + d + "' is not a valid value for " + i + ".";
                    if (R.Of) {
                        t = R.designer.Ga[R.designer.i.l]["record format name"];
                        if (a.grid != null) {
                            q = Tb(a.grid);
                            if (q != null && q.grid != null) t = q.grid.Sf
                        }
                        v += "\n\n\nRecord Format: " + t;
                        v += "\n\nElement Id: " + a.id;
                        v += "\n\nElement Type: " + a["field type"]
                    }
                    pui.alert(v)
                }
            }
            if (c.tabPanel != null) if (b.L == "color" || b.L == "fontFamily" ||
                b.L == "fontSize" || b.L == "height" || b.L == "width") if (Q == "genie" || e) c.tabPanel.H()
        }
        b.L == "visibility" && o == "hidden" && !e && a["field type"] == "date field" && setTimeout(function () {
            if (c.calimg && c.style.visibility == "hidden") c.calimg.style.visibility = "hidden"
        }, 1);
        b.L == "visibility" && o == "hidden" && !e && a["field type"] == "spinner" && setTimeout(function () {
            c.Ic && c.style.visibility == "hidden" && c.Ic.hide()
        }, 1);
        if (b.L == "color" && c.firstChild != null && c.firstChild.tagName == "A") c.firstChild.style.color = o; else if (b.L == "color" && c.firstChild !=
            null && c.firstChild.nextSibling != null && c.firstChild.nextSibling.tagName == "A") c.firstChild.nextSibling.style.color = o;
        if (b.L == "textDecoration" && c.firstChild != null && c.firstChild.tagName == "A") c.firstChild.style.textDecoration = o; else if (b.L == "textDecoration" && c.firstChild != null && c.firstChild.nextSibling != null && c.firstChild.nextSibling.tagName == "A") c.firstChild.nextSibling.style.textDecoration = o;
        if (b.L == "width" && !r.resizable) c.style.width = "";
        if (b.L == "height" && !r.resizable) c.style.height = ""
    }
    if (b.Oa != null) if (o ==
        "") try {
        b.Oa === "style" ? xc(c) : c.removeAttribute(b.Oa);
        if (b.Oa == "class") c.className = ""
    } catch (I) {
        k == null && e && pui.alert(I.message)
    } else try {
        y = o;
        if (b.type == "boolean" && y == "true") {
            y = true;
            if (b.Oa == "disabled" && e) y = false
        }
        if (b.type == "boolean" && y == "false") y = false;
        if (y == false) c.getAttribute(b.Oa) != null && c.removeAttribute(b.Oa); else {
            if (b.Oa == "src") y = pui.normalizeURL(y, true);
            b.Oa === "style" ? yc(c, y, a["field type"] === "layout") : c.setAttribute(b.Oa, y);
            if (b.Oa == "class") c.className = y
        }
    } catch (z) {
        if (k == null && e) {
            v = "'" + d + "' is not a valid value for " +
                i + ".";
            if (R.Of) {
                t = R.designer.Ga[R.designer.i.l]["record format name"];
                if (a.grid != null) {
                    q = Tb(a.grid);
                    if (q != null && q.grid != null) t = q.grid.Sf
                }
                v += "\n\n\nRecord Format: " + t;
                v += "\n\nElement Id: " + a.id;
                v += "\n\nElement Type: " + a["field type"]
            }
            pui.alert(v)
        }
    }
    if (Q == "dspf" && (i.substr(0, 9) == "css class" || i == "display attribute field")) {
        q = [];
        q.push(a["css class"]);
        s = 2;
        for (u = a["css class " + s]; u != null;) {
            q.push(u);
            s++;
            u = a["css class " + s]
        }
        y = Number(i.substr(10));
        if (isNaN(y) || y < 1 || y > 99) y = 1;
        if (i != "display attribute field") q[y -
        1] = o;
        s = a["display attribute field"];
        u = false;
        if (s != null && !pui.f(s) && s != "" && s != " ") {
            q = q.concat(pui.ax(s));
            u = true
        }
        vc(c, q, u)
    }
    if (b.type == "js") {
        b = null;
        if (i == "ontabclick") b = function () {
            eval("var tab = arguments[0];");
            try {
                return eval(d)
            } catch (H) {
                pui.qc(H, i.substr(0, 1).toUpperCase() + i.substr(1) + " Error:\n")
            }
        }; else if (i == "onoptionclick") b = function () {
            eval("var value = arguments[0];");
            eval("var text = arguments[1];");
            try {
                eval(d)
            } catch (H) {
                pui.qc(H, i.substr(0, 1).toUpperCase() + i.substr(1) + " Error:\n")
            }
        }; else if (i ==
            "onspin") b = function () {
            eval("var value = arguments[0];");
            eval("var increment = arguments[1];");
            eval("var spinner = arguments[2];");
            eval("var newValue = arguments[3];");
            eval("var row;");
            g != null && eval("row = " + g + ";");
            eval("var rrn;");
            g != null && eval("rrn = " + g + ";");
            eval("var rowNumber;");
            c.Dd != null && eval("rowNumber = " + (c.Dd + 1) + ";");
            try {
                return eval(d)
            } catch (H) {
                pui.qc(H, i.substr(0, 1).toUpperCase() + i.substr(1) + " Error:\n")
            }
        }; else if (i == "onchartclick") b = function (H) {
            eval("var name = arguments[0];");
            if (typeof name ==
                "object") {
                eval("var category = name.category");
                eval("var name = name.name")
            }
            try {
                var J = eval(d);
                typeof J == "function" && J(H)
            } catch (K) {
                pui.qc(K, i.substr(0, 1).toUpperCase() + i.substr(1) + " Error:\n")
            }
        }; else if (i != "onselect" && i != "ondragstart") b = function (H) {
            if (pui.xn == null) if (!(c.getAttribute != null && c.getAttribute("disabled") == "true" || c.disabled != null && c.disabled == true)) {
                eval("var row;");
                g != null && eval("row = " + g + ";");
                eval("var rrn;");
                g != null && eval("rrn = " + g + ";");
                eval("var rowNumber;");
                c.Dd != null && eval("rowNumber = " +
                    (c.Dd + 1) + ";");
                pui.temp_event = H;
                eval("var event = pui.temp_event;");
                try {
                    pui.is_ios && delete pui.mu;
                    var J = eval(d);
                    if (typeof J == "function") {
                        if (!H) H = window.event;
                        J(H, this)
                    }
                } catch (K) {
                    pui.qc(K, i.substr(0, 1).toUpperCase() + i.substr(1) + " Error:\n")
                }
            }
        };
        if (!e && b != null) {
            c[i] = b;
            c.comboBoxWidget != null && i != "onselect" && c.comboBoxWidget.wE(i, b)
        }
    }
    if (e) {
        if (d != "" || a[i] != null) a[i] = d;
        f.m[i] = true;
        if (i == "field type" || i == "left" || i == "top" || i == "z index" || i == "visibility" || i == "height" || i == "width" || i == "label" || i == "color" || i == "font family" ||
            i == "font size" || i == "font style" || i == "font weight") f.Pc();
        f.Ib();
        h != null && h.Fb();
        if (Q == "dspf") {
            i == "id" && pui.ide.zg();
            if (i == "id" || i == "field type" || i == "value") pui.ide.He();
            if (!f.Ej) {
                f.designer.qb();
                pui.ide.refreshRibbon()
            }
        }
    }
    q = r.MG;
    s = r.mE;
    u = null;
    if (s != null) u = s[i];
    if (u != null || q != null) D = {
        newValue: d,
        value: o,
        design: e,
        properties: a,
        originalValue: n,
        dom: l,
        Jd: c,
        propertyName: i,
        c: f,
        pc: h,
        evalProperty: function (H) {
            return hc(this.properties[H], this.originalValue, this.dom)
        }
    };
    q != null && q(D);
    u != null && u(D);
    return l
}

function vc(b, a, c) {
    function d(r) {
        return r == "BLU" || r == "GRN" || r == "PNK" || r == "RED" || r == "TRQ" || r == "WHT" || r == "YLW"
    }

    for (var e = [], f = false, h = [], g = false, l = null, n = 0; n < a.length; n++) {
        var o = false;
        if (c && n == a.length - 1) o = true;
        var i = a[n];
        if (!(i == null || i == "")) {
            if (d(i)) {
                if (g && !o) continue;
                if (g) {
                    if (o && l != null) {
                        e[l] = i;
                        continue
                    }
                } else {
                    g = true;
                    l = e.length
                }
            }
            e.push(i);
            if (i == "PR" || i == "PR-UL") {
                b.readOnly = true;
                b.tabIndex = "-1";
                if (b.tagName == "SELECT") b.disabled = true;
                if (b.comboBoxWidget != null) {
                    o = b.comboBoxWidget.getBox();
                    o.readOnly =
                        true;
                    o.disabled = true;
                    o.tabIndex = "-1"
                }
            }
            if (i == "RI") f = true;
            if (d(i) || i == "HI") h.push(i)
        }
    }
    if (f) for (n = 0; n < h.length; n++) e.push("RI-" + h[n]);
    a = e.join(" ");
    b.setAttribute("class", a);
    b.className = a
}

function hc(b) {
    var a = "";
    if (pui.f(b) || pui.Ia(b)) {
        if (b.designValue != null) a = b.designValue;
        return a
    }
    if (b == null) b = "";
    var c = null;
    if (String(b).substr(0, 3).toLowerCase() == "js:") c = b.substr(3);
    if (String(b).substr(0, 11).toLowerCase() == "javascript:") c = b.substr(11);
    if (String(b).substr(0, 7).toLowerCase() == "script:") c = b.substr(7);
    if (c == null || Zb(c) == "") a = b; else {
        eval("var value = arguments[1];");
        eval("var obj = arguments[2];");
        try {
            a = eval(c)
        } catch (d) {
            if (!pui.Yi) {
                pui.Yi = true;
                setTimeout(function () {
                    pui.alert("Expression '" +
                        Zb(c) + "' contains an error:\n\n" + d.message);
                    pui.Yi = false
                }, 1)
            }
        }
    }
    return a
}

pui.addCustomProperty = function (b) {
    for (var a = oc(), c = rc(), d = false, e = a.length, f = 0; f < a.length; f++) if (a[f].category == true && a[f].name == b.category) {
        e = f + 1;
        d = true;
        break
    }
    if (!d) {
        a.splice(e, 0, {name: b.category, category: true, controls: b.controls});
        e++
    }
    delete b.category;
    a.splice(e, 0, b);
    c[b.name] = b
};
pui.UA = ["position", "visibility", "display", "left", "right", "top", "bottom", "width", "height"];
pui.iJ = ["overflow", "overflow-x", "overflow-y"];

function yc(b, a, c) {
    if (b.pui.Cf && b.pui.Cf !== null) for (var d in b.pui.Cf) b.style[d] = "";
    b.pui.Cf = {};
    a = a.split(";");
    for (var e = 0; e < a.length; e++) {
        var f = a[e].split(":");
        if (f.length == 2) {
            var h = f[0].replace(/^\s+|\s+$/gm, "");
            h = h.toLowerCase();
            if (!(pui.ic(pui.UA, h) >= 0)) if (!(c && pui.ic(pui.iJ, h) >= 0)) {
                b.pui.Cf[h] = f[1];
                b.style[h] = f[1]
            }
        }
    }
    if (b.pui.hd && b.pui.hd !== null) for (d in b.pui.hd) b.style[d] = b.pui.hd[d]; else b.pui.hd = {}
}

function xc(b) {
    if (!(typeof b.pui.Cf !== "object" || b.pui.Cf === null)) {
        for (var a in b.pui.Cf) b.style[a] = "";
        b.pui.Cf = null;
        if (b.pui.hd && b.pui.hd !== null) for (a in b.pui.hd) b.style[a] = b.pui.hd[a]; else b.pui.hd = {}
    }
}

pui.Wo = function (b, a, c) {
    if (!b.pui.hd || b.pui.hd === null) b.pui.hd = {};
    if (pui.ic(pui.UA, a) < 0) b.pui.hd[a] = c
};
pui.ev = function (b, a) {
    typeof b.pui.hd != "undefined" && b.pui.hd[a] != "undefined" && delete b.pui.hd[a];
    if (typeof b.pui.Cf === "object" || b.pui.Cf !== null) for (var c in b.pui.Cf) b.style[c] = b.pui.Cf[c];
    for (c in b.pui.hd) b.style[c] = b.pui.hd[c]
};
pui.getPropertiesModel = oc;
pui.getPropertiesNamedModel = rc;

function zc(b) {
    if (typeof b == "string") b = Tb(b);
    if (b != null) b.style.visibility = "hidden"
}

function Ac() {
    for (var b = 0; b < Ac.arguments.length; b++) zc(Ac.arguments[b])
}

function Bc(b) {
    if (typeof b == "string") b = Tb(b);
    b != null && b.parentNode.removeChild(b)
}

function Cc() {
    for (var b = 0; b < Cc.arguments.length; b++) Bc(Cc.arguments[b])
}

function Dc(b) {
    var a;
    b = b != null && typeof b == "object" ? b : document.getElementById(b);
    if (b == null) return "";
    a = "";
    if (b.tagName.toLowerCase() == "div") {
        a = b.firstChild;
        a = a != null && a.tagName != null && a.tagName == "A" ? a.innerHTML : b.innerHTML
    }
    if (b.tagName == "INPUT" && b.type == "checkbox") {
        if (b.checked && b.pe != null) return b.pe;
        if (!b.checked && b.Gg != null) return b.Gg;
        return b.checked
    }
    if (b.tagName == "INPUT" || b.tagName == "TEXTAREA") a = b.value;
    if (b.tagName == "SELECT") {
        a = b.selectedIndex;
        a = a >= 0 ? b.options[a].value : b.pui && b.pui.properties &&
        b.pui.properties.value ? b.pui.properties.value : b.value
    }
    if (b.comboBoxWidget != null) a = b.comboBoxWidget.getValue();
    if (b.Ha != null) a = String(b.value);
    if (b.aa != null) {
        a = "";
        if (b.aa.mg && b.aa.gl != null) a = b.aa.gl; else if (!b.aa.mg && b.aa.fl != null) a = b.aa.fl
    }
    for (a = a.replace(/&nbsp;/g, " "); a.indexOf(String.fromCharCode(160)) != -1;) a = a.replace(String.fromCharCode(160), " ");
    if (a == b.emptyText) a = "";
    return a
}

function Ec(b) {
    return Zb(Dc(b))
}

function Tb(b) {
    return document.getElementById(b)
}

function Fc(b, a) {
    var c;
    c = typeof b == "object" ? b : document.getElementById(b);
    if (c != null) {
        if (c.tagName == "DIV") if (c.Ha != null) c.Ha.setValue(a); else if (c.comboBoxWidget != null) c.comboBoxWidget.setValue(a); else if (c.button && c.button.z) c.button.z.innerHTML = a; else c.innerHTML = a;
        if (c.tagName == "INPUT" || c.tagName == "SELECT" || c.tagName == "TEXTAREA") if (c.tagName == "INPUT" && c.type == "checkbox") c.checked = typeof a == "boolean" ? a : c.pe != null && a == c.pe ? true : false; else c.value = a;
        if (Q == "dspf" || pui.Na && c.S == null) {
            c.modified = true;
            pui.Kh(c);
            var d = c.ha;
            if (c.id != null && c.id.indexOf(".") == -1 && c.nf != null) pui.ai[c.nf] = true;
            if (d != null) {
                d.hide();
                d.jb = true;
                pui.La(c, d.vj())
            }
        }
        if (Q == "genie" && c.S != null && c.S.idx != null) pui.response[c.S.idx] = c;
        pui.Xh(c);
        if (c.pui && c.pui.properties) c.pui.properties.value = a
    }
}

function Gc(b, a, c, d, e) {
    if (typeof b == "string") {
        e = c;
        d = a;
        c = b;
        b = a = 0
    }
    var f;
    if (c == null) c = "div";
    f = c = c.toLowerCase();
    if (c == "dspf") f = "div";
    if (c == "button") f = "input";
    f = document.createElement(f);
    f.style.position = "absolute";
    f.style.top = b * pui.Ob + Ma + "px";
    f.style.left = a * pui.ac + "px";
    if (d != null) switch (c) {
        case "div":
            f.innerHTML = d;
            break;
        case "dspf":
            b = new pui.Ajax(d);
            b.async = false;
            b.send();
            if (b.Fu()) f.innerHTML = b.jc();
            break;
        case "input":
            f.value = d;
            break;
        case "button":
            f.type = "button";
            f.value = d;
            f.className = "button";
            if (!pui.is_quirksmode) f.style.width =
                "55px";
            break;
        case "img":
            f.src = d;
            break
    }
    if (e != null) f.id = e;
    if (c == "input") {
        document.forms.main.appendChild(f);
        gc(f, "keydown", Rb)
    } else {
        Q == "genie" && document.getElementById(Ca).appendChild(f);
        Q == "dspf" && pui.runtimeContainer.appendChild(f)
    }
    return f
}

function yb(b) {
    if (!b) b = window.event;
    if (window.event) {
        window.event.cancelBubble = true;
        window.event.returnValue = false
    }
    if (b.preventDefault) {
        b.cancelBubble = true;
        b.preventDefault()
    }
}

var Hc = {};

function bc(b) {
    for (; b.charAt(0) == " ";) b = b.replace(b.charAt(0), "");
    return b
}

function $b(b) {
    for (; b.charAt(b.length - 1) == " ";) b = b.substring(0, b.length - 1);
    return b
}

function Zb(b) {
    return b.replace(/^\s*|\s*$/g, "")
}

pui.detachCalendar = function (b) {
    if (typeof b == "string") b = Tb(b);
    b != null && pui.fv(b)
};

function ec(b, a) {
    var c;
    try {
        c = document.createElement("<" + b + ' name="' + a + '">')
    } catch (d) {
        c = document.createElement(b);
        c.name = a
    }
    return c
}

function tc(b) {
    if (typeof b == "string") b = Tb(b);
    if (b == null) return "";
    var a = b.textContent;
    if (a == null) {
        a = b.innerText;
        if (a == null) return ""
    }
    for (; a.indexOf(String.fromCharCode(160)) != -1;) a = a.replace(String.fromCharCode(160), " ");
    return a
}

function cc(b, a, c) {
    var d = false, e = location.href;
    e = e.split("?")[0];
    e = e.split("/");
    if (e.length > 2 && e[e.length - 2].toLowerCase() == "auth") d = true;
    e = "/profoundui/";
    if (d == true || c == true) e += "auth/";
    e += b;
    if (a != null && a == true) e += "/" + PSID;
    if (pui.serverURL != null) e = pui.serverURL + e;
    return e
}

pui.getProgramURL = cc;

function Ic(b, a) {
    for (var c = a.replace(/ /g, "-"), d = "", e = false, f = 0; f < a.length; f++) {
        var h = a.substr(f, 1);
        if (e) {
            h = h.toUpperCase();
            e = false
        }
        if (h == " ") e = true; else d += h
    }
    e = "";
    if (b.currentStyle) e = b.currentStyle[d]; else if (window.getComputedStyle) e = document.defaultView.getComputedStyle(b, null).getPropertyValue(c);
    if (a.indexOf("color") >= 0) {
        if (e.substr(0, 1) == "#") e = e.toUpperCase();
        if (e.substr(0, 4) == "rgb(" && e.substr(e.length - 1, 1) == ")") {
            e = e.substr(4, e.length - 5);
            e = e.replace(/ /g, "");
            c = e.split(",");
            e = "#";
            for (f = 0; f < c.length; f++) {
                d =
                    Number(c[f]).toString(16).toUpperCase();
                if (d.length == 1) d = "0" + d;
                e += d
            }
        }
    }
    return e
}

function gc(b, a, c) {
    if (b.addEventListener) b.addEventListener(a, c, false); else b.attachEvent && b.attachEvent("on" + a, c)
}

function ic(b, a, c) {
    if (b.removeEventListener) b.removeEventListener(a, c, false); else b.detachEvent && b.detachEvent("on" + a, c)
}

function Jc(b) {
    if (b != null && b.touches != null && b.touches.length == 1) return b.touches[0].pageX;
    var a = 0;
    if (window.event != null) {
        if (window.event.clientX != null) a += window.event.clientX;
        if (document.documentElement != null && document.documentElement.scrollLeft != null) a += document.documentElement.scrollLeft;
        if (document.body != null && document.body.scrollLeft != null) a += document.body.scrollLeft
    } else if (b != null) {
        if (b.clientX != null) a += b.clientX;
        if (b.scrollX != null) a += b.scrollX
    }
    return a
}

function Kc(b) {
    if (b != null && b.touches != null && b.touches.length == 1) return b.touches[0].pageY;
    var a = 0;
    if (window.event != null) {
        if (window.event.clientY != null) a += window.event.clientY;
        if (document.documentElement != null && document.documentElement.scrollTop != null) a += document.documentElement.scrollTop;
        if (document.body != null && document.body.scrollTop != null) a += document.body.scrollTop
    } else if (b != null) {
        if (b.clientY != null) a += b.clientY;
        if (b.scrollY != null) a += b.scrollY
    }
    return a
}

pui.Pk = function (b) {
    return pui.Qk(b).x
};
pui.Sm = function (b) {
    return pui.Qk(b).y
};
pui.Qk = function (b) {
    b = b || window.event;
    var a = {x: 0, y: 0};
    if (b != null && b.touches != null && b.touches.length == 1) {
        a.x = b.touches[0].pageX;
        a.y = b.touches[0].pageY
    } else if (b != null) {
        if (b.pageX) a.x = b.pageX; else if (b.clientX) a.x = b.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);
        if (b.pageY) a.y = b.pageY; else if (b.clientY) a.y = b.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop)
    }
    return a
};

function Oc() {
    return pui.currentFormatNames
}

function Pc() {
    var b = {}, a = "";
    a = location.search.substring(1, location.search.length);
    if (a.length == 0) return b;
    a = a.replace(/\+/g, " ");
    a = a.split("&");
    for (var c = 0; c < a.length; c++) {
        var d = a[c].split("="), e = decodeURIComponent(d[0]), f = "";
        if (d.length == 2) f = decodeURIComponent(d[1]);
        b[e] = f
    }
    return b
}

if (typeof sc != "undefined") window.im = sc;
pui.bm = {
    encode: function (b) {
        for (var a = "", c = 0; c < b.length; c++) {
            var d = b.charCodeAt(c);
            if (d < 128) a += String.fromCharCode(d); else {
                if (d > 127 && d < 2048) a += String.fromCharCode(d >> 6 | 192); else {
                    a += String.fromCharCode(d >> 12 | 224);
                    a += String.fromCharCode(d >> 6 & 63 | 128)
                }
                a += String.fromCharCode(d & 63 | 128)
            }
        }
        return a
    }, decode: function (b) {
        for (var a = "", c = 0, d = c1 = c2 = 0; c < b.length;) {
            d = b.charCodeAt(c);
            if (d < 128) {
                a += String.fromCharCode(d);
                c++
            } else if (d > 191 && d < 224) {
                c2 = b.charCodeAt(c + 1);
                a += String.fromCharCode((d & 31) << 6 | c2 & 63);
                c += 2
            } else {
                c2 =
                    b.charCodeAt(c + 1);
                c3 = b.charCodeAt(c + 2);
                a += String.fromCharCode((d & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
                c += 3
            }
        }
        return a
    }
};
pui.lw = {
    Th: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", encode: function (b) {
        var a = "", c, d, e, f, h, g, l = 0;
        for (b = pui.bm.encode(b); l < b.length;) {
            c = b.charCodeAt(l++);
            d = b.charCodeAt(l++);
            e = b.charCodeAt(l++);
            f = c >> 2;
            c = (c & 3) << 4 | d >> 4;
            h = (d & 15) << 2 | e >> 6;
            g = e & 63;
            if (isNaN(d)) h = g = 64; else if (isNaN(e)) g = 64;
            a = a + this.Th.charAt(f) + this.Th.charAt(c) + this.Th.charAt(h) + this.Th.charAt(g)
        }
        return a
    }, decode: function (b) {
        var a = "", c, d, e, f, h, g = 0;
        for (b = b.replace(/[^A-Za-z0-9\+\/\=]/g, ""); g < b.length;) {
            c = this.Th.indexOf(b.charAt(g++));
            d = this.Th.indexOf(b.charAt(g++));
            f = this.Th.indexOf(b.charAt(g++));
            h = this.Th.indexOf(b.charAt(g++));
            c = c << 2 | d >> 4;
            d = (d & 15) << 4 | f >> 2;
            e = (f & 3) << 6 | h;
            a += String.fromCharCode(c);
            if (f != 64) a += String.fromCharCode(d);
            if (h != 64) a += String.fromCharCode(e)
        }
        return a = pui.bm.decode(a)
    }
};
pui.downloadJSON = function () {
    if (pui.savedJSON == null) pui.alert("JSON is not available."); else {
        var b = pui.savedJSON;
        if (typeof JSON === "object" && typeof JSON.parse === "function" && typeof JSON.stringify === "function") try {
            b = JSON.stringify(JSON.parse(pui.savedJSON), null, "  ")
        } catch (a) {
        }
        pui.Jf("text/plain", "json.txt", b)
    }
};
pui.keepAlive = function () {
    var b;
    if (!(Q == "genie" && pui.J.ue == true)) {
        if (Q == "dspf") b = pui.J == null ? cc("PUI0001200.pgm") : cc("PUI0002110.pgm"); else if (Q == "genie") b = DOCUMENT_URI; else return false;
        if (pui.psid != null && pui.psid != "") b += "/" + pui.psid;
        if (pui.overrideSubmitUrl != null && typeof pui.overrideSubmitUrl == "function") try {
            b = pui.overrideSubmitUrl(b)
        } catch (a) {
        }
        if (Q == "genie") pui.Xi(pui.J.ue = true);
        if (Q == "dspf") pui.yd = false;
        pui.Yf();
        var c = {keepalive: "1"};
        if (pui.isCloud) c.workspace_id = pui.cloud.ws.id;
        dc({
            url: b, method: "post",
            params: c, sendAsBinary: false, suppressAlert: true, handler: function () {
                pui.qd();
                if (Q == "genie") pui.Xi(pui.J.ue = false);
                if (Q == "dspf") pui.yd = true;
                for (var d = 0; d < pui.kc.length; d++) pui.kc[d].unMask()
            }, onfail: function (d) {
                pui.onoffline == null && !pui["suppress comm errors"] && pui.alert(pui.Um(d));
                pui.qd();
                if (Q == "genie") pui.Xi(pui.J.ue = false);
                if (Q == "dspf") pui.yd = true;
                for (d = 0; d < pui.kc.length; d++) pui.kc[d].unMask();
                pui.onoffline != null && pui.onoffline()
            }
        });
        return true
    }
};
pui.getWindowSize = function () {
    var b, a;
    if (document.body && document.body.offsetWidth) {
        b = document.body.offsetWidth;
        a = document.body.offsetHeight
    }
    if (document.compatMode == "CSS1Compat" && document.documentElement && document.documentElement.offsetWidth) {
        b = document.documentElement.offsetWidth;
        a = document.documentElement.offsetHeight
    }
    if (window.innerWidth && window.innerHeight) {
        b = window.innerWidth;
        a = window.innerHeight
    }
    if (window.Jr && window.Jr.width && window.Jr.height) {
        b = window.Jr.width;
        a = window.Jr.height
    }
    if (document.documentElement &&
        document.documentElement.clientWidth) {
        b = document.documentElement.clientWidth;
        a = document.documentElement.clientHeight
    }
    if (b == null && screen != null) b = screen.width;
    if (a == null && screen != null) a = screen.height;
    if (b == null) b = 800;
    if (a == null) a = 600;
    return {width: b, height: a}
};
pui.openURL = function (b) {
    window.open(b)
};
pui.normalizeURL = function (b, a) {
    if (b == null || typeof b != "string") return "";
    if (a == true && window.puiMobileClient == null) return b;
    if (b.substr(0, 5).toLowerCase() == "http:" || b.substr(0, 6).toLowerCase() == "https:") return b;
    return pui.serverURL != null ? pui.serverURL + b : window.cordova && b.substr(0, 1) == "/" ? b.substr(1) : b
};
pui.animate = function (b) {
    var a = b.element;
    if (typeof a == "string") a = Tb(a);
    if (a != null) {
        var c, d = b.effect;
        if (d == "fly in left" || d == "fly in right" || d == "fly out left" || d == "fly out right") c = "left"; else if (d == "fly in up" || d == "fly in down" || d == "fly out up" || d == "fly out down") c = "top"; else if (d == "fade in" || d == "fade out") c = "opacity"; else {
            c = b.properties;
            if (c == null) {
                c = b.property;
                if (c == null) return
            }
        }
        if (typeof c == "string") c = [c];
        var e = b.duration;
        if (e == null) e = "500ms";
        if (e.substr(e.length - 1, 1) != "s") e += "s";
        var f = parseInt(e) *
            1E3;
        if (e.length > 2 && e.substr(e.length - 2, 2) == "ms") f = parseInt(e);
        var h = b.type;
        if (h == null) h = "ease";
        var g = b.from, l = b.to;
        switch (d) {
            case "fly in right":
                g = -a.offsetWidth;
                g += "px";
                l = "0px";
                break;
            case "fly in left":
                g = a.offsetWidth;
                g += "px";
                l = "0px";
                break;
            case "fly out left":
                l = -a.offsetWidth;
                l += "px";
                g = "0px";
                break;
            case "fly out right":
                l = a.offsetWidth;
                l += "px";
                g = "0px";
                break;
            case "fly out down":
                l = a.offsetHeight;
                l += "px";
                g = "0px";
                break;
            case "fly out up":
                l = -a.offsetHeight;
                l += "px";
                g = "0px";
                break;
            case "fly in up":
                g = a.offsetHeight;
                g += "px";
                l = "0px";
                break;
            case "fly in down":
                g = -a.offsetHeight;
                g += "px";
                l = "0px";
                break;
            case "fade in":
                g = "0";
                l = "100";
                break;
            case "fade out":
                g = "100";
                l = "0";
                break
        }
        if (l != null) {
            var n = "";
            for (d = 0; d < c.length; d++) {
                var o = c[d];
                if (n != "") n += ", ";
                n += o + " " + e + " " + h
            }
            var i = ["transition", "MozTransition", "WebkitTransition", "msTransition", "OTransition"];
            if (g != null) {
                if (typeof g == "string" || typeof g == "number") g = [g];
                for (d = 0; d < c.length; d++) {
                    o = c[d];
                    a.style[o] = g[d]
                }
            }
            setTimeout(function () {
                for (var r = 0; r < i.length; r++) a.style[i[r]] = n;
                setTimeout(function () {
                    if (typeof l ==
                        "string" || typeof l == "number") l = [l];
                    for (var k = 0; k < c.length; k++) a.style[c[k]] = l[k];
                    setTimeout(function () {
                        for (var q = 0; q < i.length; q++) a.style[i[q]] = "";
                        b.oncomplete != null && b.oncomplete()
                    }, f)
                }, 1)
            }, 1)
        }
    }
};
pui.getActiveElement = function () {
    return Q == "genie" ? lastActiveElement : pui.activeElement
};
pui.fieldExit = function (b) {
    var a = pui.getActiveElement();
    if (a != null) {
        var c = false;
        if (b != null) c = true;
        Q == "genie" ? ac(a, c) : pui.Rx(a)
    }
};
pui.showCalendar = function (b) {
    var a = b;
    if (typeof b == "string") a = Tb(b);
    if (a != null) if (typeof a == "object") {
        var c = a.calimg;
        if (c != null) if (c.click != null && typeof c.click == "function") c.click(); else c.onclick != null && typeof c.onclick == "function" && setTimeout(function () {
            c.onclick()
        }, 250)
    }
};
pui.getComputedStyle = function (b) {
    var a = null;
    if (window.getComputedStyle) a = window.getComputedStyle(b); else if (b.currentStyle) a = b.currentStyle;
    return a
};
pui.upload = function (b, a) {
    var c = b.dir, d = b.overwrite === true, e;
    if (typeof b.slimit == "number") e = b.slimit;
    var f;
    if (typeof b.flimit == "number") f = b.flimit;
    var h = "";
    if (typeof b.altname == "string") h = b.altname;
    var g;
    if (typeof b.allowedTypes && b.allowedTypes instanceof Array) g = b.allowedTypes;
    if (f == null) f = b.files.length;
    if (e == null || g == null) {
        for (var l, n = [], o = 0; o < b.files.length; o++) {
            var i = b.files[o], r = typeof i.type != "undefined" && i.type != "" ? i.type : "application/octet-stream";
            pui.ic(n, r) == -1 && n.push(r);
            i = i.data && i.data instanceof
            ArrayBuffer ? i.data.byteLength : i.size;
            i = Math.ceil(i / 1048576);
            if (l == null || i > l) l = i
        }
        if (e == null) e = l;
        if (g == null) g = n
    }
    l = cc("PUI0009109.PGM");
    l += "?AUTH=" + encodeURIComponent(pui.appJob.auth);
    l += "&mode=ajax";
    l += "&r=" + Math.floor(Math.random() * 1E9);
    if (pui.isCloud) l += "&workspace_id=" + pui.cloud.ws.id;
    n = new FormData;
    n.append("dir", c);
    n.append("overwrite", d ? "1" : "0");
    n.append("flimit", f);
    n.append("slimit", e);
    n.append("altname", h);
    for (o = 0; o < g.length; o++) n.append("type", g[o]);
    for (o = 0; o < b.files.length; o++) {
        i = b.files[o];
        if (i.data && i.data instanceof ArrayBuffer) {
            var k;
            try {
                k = new Blob([i.data])
            } catch (q) {
                c = new window.WebKitBlobBuilder;
                c.append(i.data);
                k = c.getBlob()
            }
            n.append("file", k)
        } else n.append("file", i);
        n.append("filename", i.name)
    }
    var s = new XMLHttpRequest;
    s.open("POST", l, true);
    s.onreadystatechange = function () {
        if (s.readyState == 4) {
            var t = true, u;
            if (s.status == 200) {
                var w;
                try {
                    w = eval("(" + s.responseText + ")")
                } catch (v) {
                    t = false;
                    u = "Server response missing or invalid."
                }
                if (w) {
                    t = w.success;
                    if (!t) if (w.key) {
                        u = pui.getLanguageText("runtimeMsg",
                            "upload " + w.key);
                        if (w.key == "file limit") u = u.replace("&1", f);
                        if (w.key == "size limit") u = u.replace("&1", e)
                    } else u = w.error
                }
            } else {
                t = false;
                u = s.status + " - " + s.statusText + "."
            }
            typeof a == "function" && a(t, u)
        }
    };
    s.send(n)
};
pui.getCookie = function (b) {
    var a = document.cookie.split(";"), c = "", d = "", e = "", f = "";
    for (f = 0; f < a.length; f++) {
        c = a[f].split("=");
        d = c[0].replace(/^\s+|\s+$/g, "");
        if (d == b) {
            if (c.length > 1) e = unescape(c[1].replace(/^\s+|\s+$/g, ""));
            return e
        }
    }
    return null
};
pui.setCookie = function (b, a, c, d, e, f) {
    var h = new Date;
    h.setTime(h.getTime());
    if (c) c = c * 1E3 * 60 * 60 * 24;
    h = new Date(h.getTime() + c);
    document.cookie = b + "=" + escape(a) + (c ? ";expires=" + h.toGMTString() : "") + (d ? ";path=" + d : "") + (e ? ";domain=" + e : "") + (f ? ";secure" : "")
};
pui.deleteCookie = function (b, a, c) {
    if (pui.getCookie(b)) document.cookie = b + "=" + (a ? ";path=" + a : "") + (c ? ";domain=" + c : "") + ";expires=Thu, 01-Jan-1970 00:00:01 GMT"
};
pui.refresh = function (b) {
    if (b == null) b = {};
    var a = b.url;
    b = b.skin;
    pui.setCookie("puiRefreshId", pui.psid, null, "/");
    pui.skipConfirm = true;
    pui.shutdownOnClose = false;
    pui.confirmOnClose = false;
    if (b != null) {
        b = "skin=" + encodeURIComponent(b);
        a = window.location.href;
        var c = a.split("?");
        a = c[0];
        c = c[1];
        if (c == null) c = "";
        qparms = c.split("&");
        c = false;
        for (var d = 0; d < qparms.length; d++) if (qparms[d].length >= 5 && qparms[d].substr(0, 5).toLowerCase() == "skin=") {
            qparms[d] = b;
            c = true
        }
        if (!c) if (qparms.length == 1 && qparms[0] == "") qparms[0] = b; else qparms.push(b);
        c = qparms.join("&");
        a = a + "?" + c
    }
    if (a != null) window.location.href = a; else window.location.reload()
};
pui.downloadURL = function (b) {
    if (pui == null || pui.appJob == null || pui.appJob.auth == null || pui.appJob.auth == "") return pui.is_ie ? "" : "data:text/html,<!DOCTYPE html><html><body><p>To download, please connect to a Profound UI session.</p></body></html>";
    var a = b.inline === true;
    if (b.id == null) return "";
    var c = cc("PUI0009110.PGM");
    c += "?id=" + encodeURIComponent(b.id);
    if (b.contentType != null) c += "&type=" + encodeURIComponent(b.contentType);
    if (a) c += "&inline=1";
    c += "&usehttprc=0";
    c += "&AUTH=" + encodeURIComponent(pui.appJob.auth);
    c += "&r=" + Math.floor(Math.random() * 1E9);
    return c
};
pui.download = function (b) {
    var a = pui.downloadURL(b);
    b = b.inline === true;
    if (pui == null || pui.appJob == null || pui.appJob.auth == null || pui.appJob.auth == "") b = true;
    b ? pui.openURL(a) : pui.link(a)
};
pui.focusOnContainer = function () {
    window.parent != window && pui.Ul(window.parent) && window.parent.noderun || setTimeout(function () {
        if (pui.Se == null) {
            pui.Se = document.createElement("input");
            pui.Se.type = pui.is_touch ? "button" : "text";
            pui.Se.readOnly = true;
            pui.Se.style.position = "absolute";
            pui.Se.style.left = "-999px";
            pui.Se.style.top = "-999px";
            pui.Se.style.width = "10px";
            pui.Se.style.borderStyle = "none";
            pui.Se.style.backgroundColor = "transparent";
            pui.runtimeContainer.appendChild(pui.Se)
        }
        pui.Bj = true;
        pui.Se.focus();
        setTimeout(function () {
            pui.Bj =
                false
        }, 0)
    }, 1)
};
pui.addCSS = function (b) {
    var a = document.getElementsByTagName("head")[0], c = document.createElement("style");
    c.type = "text/css";
    if (pui.is_old_ie) c.styleSheet.cssText = b; else c.innerHTML = b;
    a.appendChild(c)
};
pui.loadCSS = function (b) {
    if (pui.Ep(b) != null) return false;
    var a = document.getElementsByTagName("head")[0], c = document.createElement("link");
    c.setAttribute("rel", "stylesheet");
    c.setAttribute("type", "text/css");
    c.setAttribute("media", "screen");
    c.setAttribute("href", pui.normalizeURL(b));
    a.appendChild(c);
    return true
};
pui.removeCSS = function (b) {
    var a = document.getElementsByTagName("head")[0], c = pui.Ep(b);
    if (c == null) {
        c = a.getElementsByTagName("style");
        for (var d = 0; d < c.length; d++) {
            var e = c[d];
            if (e.innerHTML == b || e.styleSheet != null && e.styleSheet.cssText == b) {
                a.removeChild(e);
                return true
            }
        }
        return false
    } else {
        a.removeChild(c);
        return true
    }
};
pui.loadJS = function (b) {
    if (b == null) return null;
    var a, c, d, e;
    if (typeof b == "string") a = b;
    if (typeof b == "object") {
        a = b.path;
        c = b.callback;
        d = b.onerror;
        e = b.test;
        if (e != null && typeof e == "function" && e() == true) return false
    }
    if (a == null) return null;
    if (pui.Py(pui.normalizeURL(a)) != null) return false;
    b = document.getElementsByTagName("head")[0];
    var f = false, h = document.createElement("script");
    h.type = "text/javascript";
    h.onreadystatechange = function () {
        if (h.readyState == "complete" || h.readyState == "loaded") if (!(e != null && typeof e ==
            "function" && e() != true)) {
            !f && c != null && c();
            f = true
        }
    };
    h.onload = function () {
        if (!(e != null && typeof e == "function" && e() != true)) {
            !f && c != null && c();
            f = true
        }
    };
    if (d) h.onerror = d;
    h.src = pui.normalizeURL(a);
    b.appendChild(h);
    return true
};
pui.endOfSession = function (b) {
    pui.confirmOnClose = false;
    pui.shutdownOnClose = false;
    if (window.puiMobileClient != null && window.puiMobileClient.showConnections != null) {
        window.puiMobileClient.showConnections();
        b != null && pui.alert(b)
    } else {
        var a = Pc().gobackto;
        if (a != null) {
            document.body.innerHTML = "";
            b != null && pui.alert(b);
            location.href = a
        }
        if (navigator.app != null && navigator.app.exitApp != null) {
            document.body.innerHTML = "";
            b != null ? pui.alert(b, function () {
                navigator.app.exitApp()
            }) : navigator.app.exitApp()
        }
    }
};
pui.alert = function (b, a, c, d) {
    if (window.navigator != null && window.navigator.notification != null && window.navigator.notification.alert != null) if (a == null && c == null && d == null && window.puiMobileClient != null && window.puiMobileClient.alert != null) window.puiMobileClient.alert(b); else {
        if (a == null) a = ra();
        if (c == null) c = "Profound UI";
        if (d == null) d = "OK";
        window.navigator.notification.alert(b, a, c, d)
    } else pui.Yk && window.parent && window.parent != window && pui.Ul(window.parent) && window.parent.noderun ? console.log("Suppressed alert: " +
        b) : alert(b)
};
pui.applyProperty = function (b, a, c) {
    return window.applyProperty(b, a, c)
};
pui.get = function (b) {
    return Ec(b)
};
pui.set = function (b, a) {
    Fc(b, a)
};
pui.getActiveContainer = function () {
    if (Q == "genie") {
        for (var b = 1, a = document.getElementById("window" + b); a;) {
            var c = document.getElementById("window" + ++b);
            if (c) a = c; else break
        }
        if (a) return a
    } else if (Q == "dspf" && pui.Mf) return pui.Mf;
    return pui.runtimeContainer
};
pui.getDisplayType = function () {
    return pui.Na ? "5250-handler" : Q == "dspf" ? "rdf" : "5250"
};

function Qc(b) {
    function a() {
        if (!(f >= e.length)) {
            var h = e[f].command, g = e[f].wait;
            f += 1;
            if (c == 1 || c == 2) {
                var l = g ? "1" : "0";
                l = "http://localhost:" + (typeof pui["pc listener port"] == "number" ? pui["pc listener port"] : 80) + "/?cmd=" + encodeURIComponent(h) + "&wait=" + l;
                if (c == 2) {
                    l += "&type=image&rnd=" + String(Math.random()) + String((new Date).getTime());
                    g = new Image;
                    g.onload = function () {
                        a()
                    };
                    g.src = l
                } else {
                    l = new pui.Ajax(l);
                    l.method = "GET";
                    l.async = g ? false : true;
                    l.mK = true;
                    l.sd = function (o) {
                        if (o.Vc() != 200) {
                            console.log("PC Command Listener comm. failure: " +
                                o.Uk());
                            console.log("Command: " + h)
                        }
                    };
                    l.hM = function () {
                        a()
                    };
                    l.send()
                }
            } else if (c == 3) jc({
                url: cc("PUI0009117.pgm"),
                method: "post",
                params: {cmd: h, auth: pui.appJob.auth},
                async: true,
                handler: function (o) {
                    if (o != null) if (o.cmd) {
                        o = "puilaunch:" + encodeURIComponent(o.cmd);
                        var i = document.createElement("iframe");
                        i.style.display = "none";
                        i.src = o;
                        document.body.appendChild(i);
                        setTimeout(function () {
                            i != null && i.parentNode != null && document.body.removeChild(i);
                            i = null;
                            a()
                        }, 5E3)
                    } else o.error && console.log("PC Command signing error:",
                        o.error); else console.log("Empty response from PC command signing program.")
                }
            }); else {
                if (f == 0 && e.length > 0) {
                    g = [];
                    for (l = 0; l < e.length; l++) g.push("(" + e[l].vL + ")");
                    h = g.join(" && ")
                }
                try {
                    d.runCommand(h)
                } catch (n) {
                    g = 'Unable to execute "' + h + '".\n\n';
                    if (n != null) g += n.name + ":\n\n" + n.message + ".";
                    alert(g)
                }
            }
        }
    }

    var c = 0;
    if (pui["use pc listener"]) c = 1;
    if (window.HTTPS != null && window.HTTPS == "ON" && c == 1) c = 2;
    if (pui["pc listener mode"]) c = parseInt(pui["pc listener mode"]);
    if (typeof pui["pc command mode"] == "string") switch (pui["pc command mode"]) {
        case "applet":
            c =
                0;
            break;
        case "listener":
            c = 1;
            break;
        case "listener_m2":
            c = 2;
            break;
        case "launcher":
            c = 3;
            break;
        default:
            c = 0;
            console.log("Unsupported pc command mode:", pui["pc command mode"])
    }
    if (c == 0) {
        var d = document.getElementById("PCCommandApplet");
        if (!d) {
            pui.Xw = b;
            Rc("runCommandCb");
            return
        }
    }
    var e = [], f = 0;
    e = typeof b == "string" ? [{command: b, wait: false}] : b;
    a()
}

window.runCommandCb = function () {
    Qc(pui.Xw);
    pui.Xw = null
};
pui.runPCCommand = Qc;

function Sc(b, a) {
    if (a != null && typeof a != "string" && a == true) setTimeout(function () {
        Sc(b)
    }, 0); else if (Q == "dspf") {
        var c = Gc("button");
        c.id = "puiKeyButton";
        c.style.display = "none";
        applyProperty("puiKeyButton", "shortcut key", b);
        pui.click("puiKeyButton")
    } else if (arguments.length > 1) {
        c = [];
        for (var d = 0; d < arguments.length; d++) c[d] = "pressKey('" + arguments[d] + "')";
        multiStepAction(c)
    } else if (b.substr(0, 6) == "option") {
        c = b.substr(6);
        selectOption(c)
    } else {
        c = getKeyNameFromDesc(b);
        c != "" && pressKeyUsingHexName(c)
    }
}

pui.isServerBusy = function () {
    if (typeof Q == "undefined") return false;
    if (Q == "dspf" && pui.yd === false || Q == "genie" && pui.J.ue === true) return true;
    for (var b = document.getElementsByTagName("iframe"), a = 0; a < b.length; a++) {
        var c = b[a].contentWindow;
        if (c != null) {
            var d = null;
            try {
                d = c.pui
            } catch (e) {
            }
            if (d != null) if (typeof d === "object") if (typeof d.isServerBusy === "function") if (d.isServerBusy()) return true
        }
    }
    return false
};
pui.showLastError = function () {
    if (Oa.length == 0) alert("No errors have been reported."); else {
        var b = Oa.length - 1;
        alert("Operation: " + Oa[b].wq + "\nId: " + Oa[b].id + "\n\nMessage: " + Oa[b].text + "\n" + Oa[b].Br)
    }
};
pui.editCode = function (b, a) {
    function c(D, B) {
        var I = ["", "", "", "nn/n", "nn/nn", "nn/nn/n", "nn/nn/nn", "nnn/nn/nn", "nn/nn/nnnn", "nnn/nn/nnnn"];
        if (g.dateEdit === "*ymd") {
            I[8] = "nnnn/nn/nn";
            I[9] = "nnnnn/nn/nn"
        }
        I = I[E];
        D = String(D);
        D = D.replace(".", "");
        D = D.replace(",", "");
        D = D.replace("-", "");
        D = "0000000000" + D;
        D = D.substr(D.length - B);
        var z = "/";
        if (g.dateEditSeparator != null) z = g.dateEditSeparator;
        for (var H = false, J = 0, K = "", L = 0; L < I.length; L++) {
            var N = I.substr(L, 1), O = I.substr(L + 1, 1);
            if (N === "/" || O === "/") H = true;
            if (N === "/") N = z;
            else {
                N = D.substr(J, 1);
                J += 1;
                if (N === "0") H || (N = " "); else H = true
            }
            K += N
        }
        return K
    }

    function d(D, B, I) {
        for (D += ""; D.length < B;) D += I;
        return D
    }

    var e = null, f = 0, h = null, g = {}, l = 2;
    if (typeof arguments[l] === "number") {
        e = arguments[l];
        l++;
        if (typeof arguments[l] === "number") {
            f = arguments[l];
            l++
        }
    }
    if (typeof arguments[l] === "string") {
        h = arguments[l];
        l++
    }
    if (typeof arguments[l] === "object") {
        g = arguments[l];
        l++
    }
    var n = false;
    if (h === "*astfill") {
        n = true;
        h = null
    }
    var o = false, i = null, r = false, k = l = false;
    l = " ";
    if (pui.appJob && typeof pui.appJob.decimalFormat ===
        "string") l = pui.appJob.decimalFormat;
    var q = l === "I" || l === "J", s = l === "J";
    if (g.decimalEdit != null) {
        q = g.decimalEdit === "," || g.decimalEdit === "0,";
        s = g.decimalEdit === "0." || g.decimalEdit === "0,"
    }
    if (a >= "1" && a <= "4") i = "999.00";
    if (a >= "A" && a <= "D") i = "999.00CR";
    if (a >= "J" && a <= "M") i = "999.00-";
    if (a >= "N" && a <= "Q") i = "-999.00";
    if (a == "1" || a == "A" || a == "J" || a == "N" || a == "2" || a == "B" || a == "K" || a == "O") r = true;
    l = a == "1" || a == "A" || a == "J" || a == "N" || a == "3" || a == "C" || a == "L" || a == "P" ? true : false;
    if (a == "Z") i = "999.00";
    if (a === "X" || a === "Z") k = true;
    if (a ===
        "X") o = true;
    a >= "5" && a <= "9" && pui.alert("User-defined edit code not supported: " + a + ".");
    a >= "1" && a <= "9" || a >= "A" && a <= "D" || a >= "J" && a <= "Q" || a >= "X" && a <= "Z" || pui.alert("Invalid edit code: " + a + ".");
    var t = (b || 0) + "", u = parseFloat(t, 10) || 0, w;
    w = t.replace(/\..*/, "");
    if (w === "-0") w = "-";
    if ((w == "" || w == "-") && s) w = "0";
    var v;
    v = t;
    if (v.indexOf(".") == -1) v += ".";
    v = v.replace(/.*\./, "");
    var E = w.length;
    if (E < 3) E = 3;
    var y = v.length;
    if (typeof e === "number") E = e;
    if (typeof f === "number") y = f;
    if (a == "Y") {
        if (E < 3 || E > 9) pui.alert("Length not valid for edit code Y.");
        return c(u, E)
    }
    e = ".";
    if (q) e = ",";
    if (k) e = "";
    if (y > 0) {
        v = d(v, y, "0");
        if (w === "0" && !s) w = "";
        t = w + e + v
    }
    var F = " ";
    if (o) F = "0";
    if (n) F = "*";
    if (r) {
        for (f = /(\d+)(\d{3})/; f.test(w);) w = w.replace(f, "$1" + (q ? "." : ",") + "$2");
        t = w + (y > 0 ? e + v : "");
        q = E - y - 1;
        q = q >= 0 ? q : 0
    }
    q = u < 0;
    t = t.replace(/-/g, "");
    if (i === "(999.00)") {
        if (q) t = "(" + t + ")"
    } else if (i === "999.00-") t += q ? "-" : " "; else if (i === "999.00CR") t += q ? "CR" : "  "; else if (i === "-999.00") if (q) t = "-" + t;
    if (h) t = h == "EUR" ? t + " EUR" : h == "$" ? t.substr(0, 1) == "-" ? "-" + h + t.substr(1) : h + t : h + t;
    if (!l) if (u === 0) t = "";
    (function () {
        var D = E;
        D += y && !k ? 1 : 0;
        if (r) D += parseInt((E - y - 1) / 3);
        if (i === "999.00CR") D += 2;
        if (i === "999.00-") D += 1;
        if (i === "-999.00") D += 1;
        if (typeof h === "string") D += h.length;
        var B = t;
        for (B += ""; B.length < D;) B = F + B;
        t = B
    })();
    return t
};
pui.editWord = function (b, a, c) {
    function d() {
        if (s.length > 0) {
            var w = s.substr(s.length - 1, 1);
            s = s.substr(0, s.length - 1);
            if (w == "0" && s.length == 0 && u) w = t ? "*" : " "
        } else {
            w = "0";
            if (u) w = " ";
            if (t) w = "*"
        }
        return w
    }

    b = String(b);
    var e = {};
    if (typeof c === "object") e = c;
    c = "$";
    if (e.currencySymbol != null) c = e.currencySymbol;
    var f = a.indexOf("0") + 1, h = a.indexOf("*") + 1;
    if (f == 0 || h != 0 && h < f) f = h;
    for (var g = -1, l = a.length - 1; l >= 0; l -= 1) if (l + 1 == f || a.substr(l, 1) == " ") {
        g = l;
        break
    }
    h = a.substr(0, g + 1);
    var n = "", o = "", i = false, r = false, k = a.substr(g + 1).indexOf("-") >=
        0 || a.substr(g + 1).indexOf("CR") >= 0;
    for (l = g + 1; l < a.length; l++) {
        var q = a.substr(l, 1);
        if (a.substr(l, 2) == "CR") {
            r = true;
            l++
        } else if (q == "-") r = true; else if (q != "&") if (!(q == "*" && !r)) if (q.toUpperCase() >= "A" && q.toUpperCase() <= "Z" && k && !r) a = a.substr(0, l) + " " + a.substr(l + 1); else {
            n = a.substring(g + 1, l);
            o = a.substr(l);
            i = true;
            break
        }
    }
    i || (n = a.substr(g + 1));
    l = ".";
    q = " ";
    if (pui.appJob && typeof pui.appJob.decimalFormat === "string") q = pui.appJob.decimalFormat;
    if (typeof e.decimalFormat === "string") q = e.decimalFormat;
    if (q === "I" || q === "J") l =
        ",";
    e = 0;
    l = h.split(l);
    if (l.length > 1) e = l[1].replace(/[^ ]/g, "").length;
    var s;
    s = isNaN(Number(b)) ? "0" : String(b);
    s = s.replace("-", "");
    l = s.split(".");
    q = l[0];
    a = "";
    g = null;
    if (l.length > 1) a = l[1];
    if (g == null || isNaN(g)) g = e;
    for (; a.length > g;) a = a.substr(0, a.length - 1);
    for (; g > a.length;) a += "0";
    for (s = q + a; s.substr(0, 1) == "0";) s = s.substr(1);
    e = "";
    var t = g = false;
    var u = a = false;
    if (f == 0) u = true;
    for (l = h.length - 1; l >= 0; l -= 1) {
        i = q = h.substr(l, 1);
        if (q == " ") i = d(); else if (q == "&") i = " "; else if (q == "0" && l + 1 == f) i = d(); else if (q == "*") {
            t = true;
            i = d()
        } else if (q == c) {
            if (l + 2 == f) {
                i = d();
                a = true
            }
        } else if (g) {
            i = " ";
            if (t) i = "*"
        }
        e = i + e;
        if (l <= f) u = true;
        if (u && s.length == 0) g = true
    }
    n = n.replace(/&/g, " ");
    n = n.replace(/\*/g, " ");
    if (b >= 0) {
        n = n.replace("CR", "  ");
        n = n.replace("-", " ")
    }
    e = e + n + o;
    b = e.length - 1;
    e = bc(e);
    if (t && e.substr(0, 1) != "*") e = "*" + e;
    if (a) e = c + e;
    c = 0;
    if (e[e.length - 1] === "-") c = 1;
    for (; e.length <= b;) e = " " + e;
    return e
};
if (typeof window.pui == "undefined") window.pui = {};

function Rc(b) {
    if (document.getElementById("PCCommandApplet") == null) {
        var a = document.createElement("applet");
        a.id = "PCCommandApplet";
        a.archive = "/profoundui/proddata/applet/PCIntegration.jar";
        a.code = "com.profoundlogic.genie.PCIntegration";
        a.style.height = "0px";
        a.style.width = "0px";
        if (typeof eval(b) == "function") {
            var c = document.createElement("param");
            c.setAttribute("name", "callback");
            c.setAttribute("value", b);
            a.appendChild(c)
        }
        document.body.appendChild(a)
    }
}

window.copyToClipboardCb = function () {
    copyToClipboardCb(pui.Ww);
    pui.Ww = null
};
pui.help = {};
pui.help.show = function () {
    var b = pui.vg.layers;
    if (b != null) {
        b = b[b.length - 1].formats;
        if (b != null) if (b.length != 0) {
            for (var a = pui.G.record, c = b[0], d = 0; d < b.length; d++) if (b[d].name == a) {
                c = b[d];
                break
            }
            var e = c.metaData.screen;
            b = null;
            a = false;
            for (d = 1; !a;) {
                var f = "";
                if (d > 1) f = " " + String(d);
                if (e["help record" + f] == null && e["help panel group" + f] == null) a = true; else {
                    var h = e["help panel condition" + f];
                    if (h != null && pui.f(h)) {
                        h = h.dataType == "expression" ? pui.tt(h.fieldName, data) : data[fieldName];
                        if (h != "1" && h != "true" && h != true) {
                            d++;
                            continue
                        }
                    }
                    h = e["help area" + f];
                    if (h == "" || h == null) {
                        b = f;
                        break
                    }
                    var g = h.split(" ");
                    if (g.length == 4) {
                        var l = Number(g[0]), n = Number(g[1]), o = Number(g[2]);
                        g = Number(g[3]);
                        var i = Number(pui.G.row), r = Number(pui.G.column);
                        if (!isNaN(l) && !isNaN(o) && !isNaN(i) && !isNaN(n) && !isNaN(g) && !isNaN(r)) if (i >= l && i <= o && r >= n && r <= g) {
                            b = f;
                            break
                        }
                    }
                    if (h == pui.G.st) {
                        b = f;
                        break
                    }
                    d++
                }
            }
            b == null && pui.help.fy(e);
            if (b != null) {
                if (e["help record" + b] != null) {
                    a = e["help record" + b];
                    d = e["help display file"];
                    if (d == null) {
                        d = c.file;
                        c = c.library;
                        if (c == null || c == "") c =
                            "*LIBL"
                    } else {
                        helpFileParts = d.split("/");
                        if (helpFileParts.length == 2) {
                            c = helpFileParts[0];
                            d = helpFileParts[1]
                        } else c = "*LIBL"
                    }
                    pui.Yf();
                    jc({
                        url: cc("PUI0009108.pgm"),
                        method: "post",
                        params: {record: a, library: c, file: d, AUTH: pui.appJob.auth},
                        async: true,
                        handler: function (k) {
                            pui.qd();
                            k.success == true ? pui.help.ZI(k.metaData) : pui.help.error(k)
                        }
                    })
                }
                if (e["help panel group" + b] != null) {
                    c = e["help panel group" + b];
                    d = c.split("/");
                    if (d.length == 2) {
                        a = d[0];
                        c = d[1]
                    } else a = "*LIBL";
                    b = e["help module" + b];
                    pui.Yf();
                    jc({
                        url: cc("PUI0009108.pgm"),
                        method: "post",
                        params: {modules: "1", pgroup1: c, library1: a, module1: b, AUTH: pui.appJob.auth},
                        async: true,
                        handler: function (k) {
                            pui.qd();
                            k.success == true ? pui.help.RA(k.html, true, e) : pui.help.error(k)
                        }
                    })
                }
            }
        }
    }
};
pui.help.ZI = function (b) {
    b = b.items;
    var a = rc(), c = document.createElement("div");
    c.style.width = "1000px";
    c.style.height = "750px";
    c.style.zIndex = 999;
    c.style.position = "absolute";
    c.style.backgroundColor = "white";
    pui.runtimeContainer.appendChild(c);
    for (var d = 0; d < b.length; d++) {
        var e = b[d];
        if (e.id != "btnHELP") {
            var f = document.createElement("div");
            f.style.position = "absolute";
            var h = e.left, g = e.top;
            if (h == null) h = "0px";
            if (g == null) g = "0px";
            f.style.left = h;
            f.style.top = g;
            c.appendChild(f);
            if (e["field type"] == "button" || e["field type"] ==
                "styled button") f.onclick = function () {
                c.innerHTML = "";
                c.parentNode.removeChild(c);
                c = null
            };
            for (var l in e) {
                h = pui.Ye(a, l);
                if (h != null) {
                    g = e[l];
                    if (g != null && g != "") f = uc(h, e, f, g, false)
                }
            }
        }
    }
};
pui.help.error = function (b) {
    var a = b.id, c = b.message;
    b = b.help;
    var d = "An error has occurred trying to display help text.";
    if (a != null) d += "\n\nError Id: " + a;
    if (c != null) d += "\n\nMessage: " + c;
    if (b != null) d += "\n\n" + b;
    pui.alert(d)
};
pui.help.RA = function (b, a, c) {
    var d = document.createElement("div");
    d.style.width = "1000px";
    d.style.height = "750px";
    d.style.zIndex = 999;
    d.style.position = "absolute";
    d.style.backgroundColor = "white";
    d.style.padding = "10px";
    pui.runtimeContainer.appendChild(d);
    d.innerHTML = b;
    b = document.createElement("input");
    b.type = "button";
    b.value = "Return to Application";
    b.onclick = function () {
        d.innerHTML = "";
        d.parentNode.removeChild(d);
        d = null
    };
    d.appendChild(b);
    if (a == true) {
        d.appendChild(document.createTextNode("    "));
        a = document.createElement("input");
        a.type = "button";
        a.value = "Extended Help";
        a.onclick = function () {
            pui.help.fy(c, d)
        };
        d.appendChild(a)
    }
    if (pui["help panel group toc"] == false) {
        tocDiv = d.firstChild;
        if (tocDiv != null && tocDiv.nodeType == 3) tocDiv = tocDiv.nextSibling;
        if (tocDiv != null && tocDiv.tagName == "DIV" && tocDiv.firstChild != null && tocDiv.firstChild.tagName == "A" && tocDiv.firstChild.name == "TOC") tocDiv.style.display = "none"
    }
};
pui.help.fy = function (b, a) {
    for (var c = {modules: 0, AUTH: pui.appJob.auth}, d = false, e = 1; !d;) {
        var f = "";
        if (e > 1) f = " " + String(e);
        if (b["help record" + f] == null && b["help panel group" + f] == null) d = true; else {
            var h = b["help panel condition" + f];
            if (h != null && pui.f(h)) {
                h = h.dataType == "expression" ? pui.tt(h.fieldName, data) : data[fieldName];
                if (h != "1" && h != "true" && h != true) {
                    e++;
                    continue
                }
            }
            h = b["help panel group" + f];
            if (h != null) {
                var g = h.split("/"), l;
                if (g.length == 2) {
                    l = g[0];
                    h = g[1]
                } else l = "*LIBL";
                f = b["help module" + f];
                c.modules++;
                c["pgroup" +
                c.modules] = h;
                c["library" + c.modules] = l;
                c["module" + c.modules] = f
            }
            e++
        }
    }
    if (c.modules <= 0) return false;
    jc({
        url: cc("PUI0009108.pgm"), method: "post", params: c, async: true, handler: function (n) {
            pui.qd();
            if (n.success == true) {
                if (a != null) {
                    a.innerHTML = "";
                    a.parentNode.removeChild(a);
                    a = null
                }
                pui.help.RA(n.html)
            } else pui.help.error(n)
        }
    });
    return true
};
pui.click = function (b, a) {
    setTimeout(function () {
        if (typeof b != "object") b = Tb(b);
        var c;
        if (b != null) {
            if (a != true && b.onclick != null && typeof b.onclick == "function") {
                b.onclick();
                return
            }
            c = b.Fa;
            if (b.Fa == "0" || b.P != null) b.Fa = "1";
            if (b.Wf != null) pui.Wc = b.Wf;
            pui.ia = b.ia
        }
        var d = pui.Ld();
        pui.ia = "false";
        if (d == false && b != null) b.Fa = c
    }, 0)
};
pui.link = function (b) {
    pui.skipConfirm = true;
    setTimeout(function () {
        location.href = b
    }, 1);
    setTimeout(function () {
        pui.skipConfirm = false
    }, 100)
};
pui.shiftElements = function (b, a, c) {
    function d(e) {
        e = document.getElementsByTagName(e);
        for (var f = 0; f < e.length; f++) {
            var h = e[f], g = parseInt(h.style.top);
            if (h.parentNode == pui.runtimeContainer && !isNaN(g) && g >= b && g <= a) {
                g += c;
                h.style.top = g + "px"
            }
        }
    }

    d("div");
    d("input");
    d("select");
    d("textarea")
};
pui.getRuntimeContainerHeight = function () {
    function b(c) {
        c = document.getElementsByTagName(c);
        for (var d = 0; d < c.length; d++) {
            var e = c[d], f = parseInt(e.style.top);
            if (e.parentNode == pui.runtimeContainer && !isNaN(f)) {
                e = e.offsetHeight;
                if (!isNaN(e)) {
                    e += f;
                    if (e > a) a = e
                }
            }
        }
    }

    var a = 0;
    b("div");
    b("input");
    b("select");
    b("textarea");
    return a
};
pui.showHelp = function () {
    pui.help.show()
};
pui.Xo = {};
pui.show = function (b) {
    var a = b.path, c = b.meta, d = b.appJob || {}, e = b.format || b.screen, f = b.formats || b.screens, h = b.data;
    if (h == null) h = {};
    h.__pui_show = true;
    var g = b.handler;
    if (!(c == null && a == null)) {
        if (c == null && pui.Xo[a] != null) c = pui.Xo[a];
        if (c == null) {
            c = {
                method: "post", handler: function (k) {
                    b.meta = k;
                    b.appJob = d;
                    pui.Xo[a] = k;
                    pui.show(b)
                }
            };
            if (b.method) c.method = b.method;
            f = pui.oI(a);
            if (f == null) {
                c.url = a;
                jc(c)
            } else {
                c.url = cc("PUI0001102.pgm");
                c.params = f;
                c.handler = function (k) {
                    k = k.replace(/''/g, "'");
                    pui.display = null;
                    eval(k);
                    b.meta = pui.display;
                    pui.Xo[a] = pui.display;
                    pui.show(b)
                };
                dc(c)
            }
        } else {
            if (f == null && e != null) {
                f = [];
                f.push(e)
            }
            e = [];
            if (f != null) for (var l = 0; l < c.formats.length; l++) for (var n = c.formats[l], o = 0; o < f.length; o++) if (n.screen["record format name"] == f[o]) {
                e.push({metaData: n, data: h, name: n.screen["record format name"]});
                break
            }
            e.length == 0 && e.push({metaData: c.formats[0], data: h});
            var i = b.container;
            if (i != null && typeof i == "string") i = Tb(b.container);
            pui.runtimeContainer = i == null ? Tb("pui") : i;
            var r = {
                b: pui.runtimeContainer, appJob: d,
                layers: [{formats: e}], success: true
            };
            if (b.transition) r.gk = b.transition;
            setTimeout(function () {
                pui.handler = g;
                if (pui.handler == null) pui.handler = ra();
                pui.render(r);
                if (b.setDims) {
                    var k = pui.getDimensions(i);
                    i.style.width = k.x2 + "px";
                    i.style.height = k.y2 + "px"
                }
            }, 0)
        }
    }
};
pui.applyResponse = function (b, a) {
    for (var c in a) b[c] = a[c]
};
pui.setMLTCHCFLD = function (b, a) {
    if (pui.ia != "true") {
        for (var c = 0, d = 0; d < a.length; d++) {
            var e = Tb(a[d]);
            e != null && e.checked == true && c++
        }
        d = Tb(b);
        if (d != null) for (var f in pui.Ua) if (pui.Ua[f][0] == d) {
            pui.HA[f] = String(c);
            return
        }
    }
};
pui.setPSHBTNFLD = function (b, a) {
    for (var c = a.id, d = "", e = c.length - 1; e >= 0; e -= 1) {
        var f = c.substr(e, 1);
        if (f < "0" || f > "9") break;
        d = f + d
    }
    d = Number(d);
    isNaN(d) || Fc(b, String(d));
    pui.click(a, true)
};
pui.buildFKeyMenu = function (b) {
    if (b == null) b = {};
    var a = b.prefix;
    if (a == null) a = "btn";
    var c = b.fkeyMenuId;
    if (c == null) {
        c = "fkeyMenu";
        if (b.format != null) c = b.format + "_" + c;
        if (b.file != null) c = b.file + "_" + c
    }
    var d = b.skipF24;
    if (d == null) d = true;
    var e = b.skipHelp;
    if (e == null) e = false;
    var f = b.availableKeys;
    if (typeof f == "string") f = [f];
    b = "";
    if (f != null) for (var h = 0; h < f.length; h++) {
        var g = Tb(f[h]);
        if (g != null) b += " " + tc(g)
    }
    b = Zb(b);
    c = Tb(c);
    if (c != null) {
        f = c.Y;
        if (f != null) {
            h = c.parentNode;
            if (h != null) {
                f.choices = [];
                f.tm = [];
                for (g = h.firstChild; g !=
                null;) {
                    var l = g.id;
                    if (!(l == null || l.length <= a.length || l.substr(0, a.length) != a)) {
                        var n = l.substr(a.length);
                        if (n.substr(0, 2) == "CA" || n.substr(0, 2) == "CF") {
                            n = Number(n.substr(2));
                            if (isNaN(n) || n < 1 || n > 24) {
                                g = g.nextSibling;
                                continue
                            }
                            n = "F" + n
                        }
                        n += "=";
                        if (n == "Submit=") n = null;
                        g.style.left = "-250px";
                        g.style.top = "-250px";
                        h = -1;
                        if (n != null && b != "") {
                            h = b.indexOf(n);
                            if (h == -1) {
                                g = g.nextSibling;
                                continue
                            }
                        }
                        if (!(n == "F24=" && d)) if (!(n == "HELP=" && e)) if (g.style.display != "none") if (g.style.visibility != "hidden") {
                            n = g.tagName == "INPUT" ? g.value :
                                tc(g);
                            if (h != -1) {
                                var o = "", i = 0;
                                for (h = h; h < b.length; h++) {
                                    var r = b.substr(h, 1);
                                    r == "=" && i++;
                                    if (i >= 2) break
                                }
                                if (i >= 2) for (; h > 0 && b.substr(h, 1) != " ";) h -= 1;
                                for (h = h - 1; h >= 0; h -= 1) {
                                    r = b.substr(h, 1);
                                    if (r == "=") break;
                                    o = r + o
                                }
                                o = Zb(o);
                                if (o != "") n = o
                            }
                            f.choices.push(n);
                            f.tm.push(l)
                        }
                    }
                    g = g.nextSibling
                }
                c.onoptionclick = function (k) {
                    pui.click(k)
                };
                f.H()
            }
        }
    }
};
pui.capturePhoto = function (b) {
    var a = b.dir;
    if (a == null) a = "/www/profoundui/htdocs/profoundui/userdata/images";
    var c = b.overwrite;
    if (c !== true) c = false;
    var d = b.fileName;
    if (d == null) d = "image.jpg";
    var e = JSON.parse(JSON.stringify(b));
    if (e.quality == null) e.quality = 50;
    e.destinationType = navigator.camera.DestinationType.FILE_URI;
    e.sourceType = navigator.camera.PictureSourceType.CAMERA;
    if (e.targetWidth == null || e.targetHeight == null) {
        delete e.targetWidth;
        delete e.targetHeight
    }
    if (e.correctOrientation == null) e.correctOrientation =
        true;
    var f = b.handler;
    if (f == null) f = function (h) {
        if (h.success == false) pui.alert(h.error); else h.success == true ? pui.alert("Photo captured successfully.") : pui.alert("Invalid response.")
    };
    navigator.camera == null ? f({
        success: false,
        error: "Camera unavailable."
    }) : navigator.camera.getPicture(function (h) {
        var g = new window.FileUploadOptions;
        g.fileKey = "file";
        g.fileName = h.substr(h.lastIndexOf("/") + 1);
        g.mimeType = "image/jpeg";
        var l = {};
        l.dir = a;
        l.overwrite = c ? "1" : "0";
        l.flimit = "1";
        l.slimit = "50";
        l.filename = d;
        g.params = l;
        l = new window.FileTransfer;
        var n = cc("PUI0009109.PGM");
        n += "?AUTH=" + encodeURIComponent(pui.appJob.auth);
        n += "&mode=ajax";
        if (pui.isCloud) n += "&workspace_id=" + pui.cloud.ws.id;
        l.upload(h, encodeURI(n), function (o) {
            var i = {};
            try {
                i = eval("(" + decodeURIComponent(o.response) + ")")
            } catch (r) {
                i.success = false;
                i.error = "Invalid response."
            }
            o.success = i.success;
            o.success || (o.error = i.key ? pui.getLanguageText("runtimeMsg", "upload " + i.key) : i.error);
            f(o)
        }, function (o) {
            o.success = false;
            o.error = "An error has occurred: Code = " + o.code;
            f(o)
        }, g)
    }, function (h) {
        f({
            success: false,
            error: h
        })
    }, e)
};
pui.BK = function (b, a) {
    var c = b.overwrite === true, d = b.data, e = d.indexOf(";base64,") + 8;
    e = d.substring(e);
    var f = b.imageType;
    d = cc("PUI0009109.PGM");
    d += "?AUTH=" + encodeURIComponent(pui.appJob.auth);
    d += "&mode=ajax";
    d += "&r=" + Math.floor(Math.random() * 1E9);
    if (pui.isCloud) d += "&workspace_id=" + pui.cloud.ws.id;
    c = [{name: "file", value: e, contenttype: f, filename: b.fileName, transferencoding: "base64"}, {
        name: "dir",
        value: b.dir
    }, {name: "overwrite", value: c ? "1" : "0"}, {name: "flimit", value: "1"}, {
        name: "slimit",
        value: String(Math.ceil(e.length / 1048576))
    },
        {name: "filename", value: b.fileName}];
    e = new pui.$l;
    e.fm(c);
    e.send(d, function (h) {
        var g = true, l;
        if (h.Vc() == 200) {
            var n;
            try {
                n = eval("(" + h.jc() + ")")
            } catch (o) {
                g = false;
                l = "Server response missing or invalid."
            }
            if (n) (g = n.success) || (l = n.key ? pui.getLanguageText("runtimeMsg", "upload " + n.key) : n.error)
        } else {
            g = false;
            l = h.Vc() + " - " + h.Uk() + "."
        }
        typeof a == "function" && a(g, l)
    })
};
pui.uploadSignature = function (b) {
    var a = Tb(b.signaturePadId);
    if (!(a == null || a.firstChild == null)) {
        if (b.imageType == null) b.imageType = "image/png";
        if (b.fileName == null) b.fileName = "signature.png";
        a = a.firstChild.toDataURL(b.imageType);
        b.data = new String(a);
        pui.BK(b, b.handler)
    }
};
pui.errorTip = function (b, a, c) {
    if (c == null) c = 3E3; else if (c == 0) c = null;
    if (typeof b == "string") b = Tb(b);
    pui.Bj = true;
    var d = b.ha;
    if (d == null) d = new pui.No(b);
    pui.ya(b, d.vj());
    d.Il(a);
    d.show(c);
    setTimeout(function () {
        pui.Bj = false
    }, 0)
};
pui.expandAccordionSection = function (b, a) {
    var c = Tb(b);
    if (c != null) {
        c = c.Ef;
        c != null && c.Lk(a)
    }
};
pui.runAttnProgram = function () {
    Q == "dspf" && pui.submitResponse({attn: "1"})
};
pui.captureData = function (b, a) {
    function c(f) {
        for (var h = document.getElementsByTagName(f), g = 0; g < h.length; g++) {
            var l = h[g], n = l.name;
            if (n != null && n != "") {
                var o = l.value;
                l = l.type;
                if (f === "button" || l == "submit" || l === "reset" || l === "button") o = "0";
                e[n] = o
            }
        }
    }

    function d() {
        c("input");
        c("button");
        c("select");
        c("textarea")
    }

    var e = b;
    if (typeof e === "object") d(); else {
        e = {};
        d();
        if (typeof b === "string") {
            if (a == null) a = "1";
            e[b] = a
        }
    }
    return e
};
pui.getAllScreenProps = function (b) {
    if (b && typeof b != "string") return false;
    if (!pui.vg || !pui.vg.layers) return false;
    for (var a = pui.vg.layers, c = [], d = 0; d < a.length; d++) {
        for (var e = a[d].formats, f = 0; f < e.length; f++) {
            var h = e[f], g = h.name, l = h.data, n = h.metaData.screen;
            h = h.metaData.ref;
            var o = {formatName: g};
            for (var i in n) i == "onload" || i == "onsubmit" || i == "onmessage" || (o[i] = pui.ab(n[i], l, h));
            c.push(o)
        }
        if (b && pui.Wb(b) === g) return o
    }
    if (b) return false;
    return c
};
pui.getScreenProp = function (b, a) {
    if (!b || typeof b != "string") return false;
    var c = pui.getAllScreenProps();
    if (!c) return false;
    if (a) b = pui.Wb(b); else {
        a = b;
        b = Oc();
        if (b.length > 1) b = b[b.length - 1]
    }
    a = a.toLowerCase();
    var d;
    if (c.length > 1) for (var e = 0; e < c.length; e++) {
        if (c[e].formatName == b) {
            d = c[e];
            break
        }
    } else d = c[0];
    return d && d[a] ? d[a] : false
};
pui.zC = function () {
    var b = {}, a = {}, c = this, d;
    this.init = function () {
        if (d == null) d = document.getElementsByTagName("head")[0]
    };
    this.ZD = function (e) {
        if (typeof e == "string") {
            e = Zb(e);
            if (e != "") if (b[e] == null) {
                var f = document.createElement("link");
                f.setAttribute("rel", "stylesheet");
                f.setAttribute("type", "text/css");
                f.setAttribute("media", "screen");
                f.setAttribute("href", pui.normalizeURL(e));
                b[e] = f;
                d.appendChild(f)
            }
        }
    };
    this.Pw = function (e, f, h) {
        if (typeof e != "string") return false;
        e = Zb(e);
        if (e == "") return false;
        if (a[e] != null) return false;
        if (h == true) return true;
        var g = false, l = document.createElement("script");
        l.type = "text/javascript";
        l.onreadystatechange = function () {
            if (l.readyState == "complete" || l.readyState == "loaded") {
                !g && f != null && f();
                g = true
            }
        };
        l.onload = function () {
            !g && f != null && f();
            g = true
        };
        a[e] = l;
        l.src = pui.normalizeURL(e);
        d.appendChild(l);
        return true
    };
    this.load = function (e) {
        c.init();
        var f = null, h;
        if (e != null) {
            h = false;
            f = e.metaData.screen
        } else {
            h = true;
            f = R.designer.Ga[R.designer.i.l]
        }
        var g = {}, l = 1, n = f["external css"];
        for (h || (n = pui.ab(n, e.data,
            e.ref)); n != null;) {
            g[n] = true;
            l++;
            n = f["external css " + l];
            h || (n = pui.ab(n, e.data, e.ref))
        }
        l = [];
        for (n in b) g[n] != true && l.push(n);
        for (var o = 0; o < l.length; o++) {
            n = l[o];
            d.removeChild(b[n]);
            delete b[n]
        }
        for (n in g) c.ZD(n);
        var i = 0;
        if (h != true) {
            l = 1;
            for (n = pui.ab(f["external javascript"], e.data, e.ref); n != null;) {
                if (c.Pw(n, ra(), true)) {
                    e.Zn = false;
                    i++
                }
                l++;
                n = pui.ab(f["external javascript " + l], e.data, e.ref)
            }
            if (i > 0) {
                l = 1;
                for (n = pui.ab(f["external javascript"], e.data, e.ref); n != null;) {
                    c.Pw(n, function () {
                        i -= 1;
                        if (i == 0) {
                            pui.onload !=
                            null && typeof pui.onload == "function" && pui.onload(e);
                            var r = f.onload;
                            if (r != null && r != "") try {
                                eval('var format = "' + f["record format name"] + '";');
                                eval('var file = "' + e.file + '";');
                                eval(r)
                            } catch (k) {
                                pui.qc(k, "Onload Error:\n")
                            }
                            if (f.onmessage && e.msgInfo != null) {
                                pui.message = e.msgInfo;
                                try {
                                    eval('var message = pui["message"];');
                                    eval(f.onmessage)
                                } catch (q) {
                                    pui.qc(q, "Onmessage Error:\n")
                                }
                            }
                        }
                    });
                    l++;
                    n = pui.ab(f["external javascript " + l], e.data, e.ref)
                }
            }
        }
    }
};
pui.sj = new pui.zC;
pui.No = function (b) {
    function a(y, F) {
        setTimeout(function () {
            y == o && E.hide()
        }, F)
    }

    function c() {
        if (l >= 0 && l <= 100) {
            u.style.filter = "alpha(opacity=" + l + ")";
            u.style.opacity = l / 100
        }
        if (n) l -= 30; else l += 20;
        if (n && l <= 0 || !n && l >= 100) if (n) {
            u.style.display = "none";
            u.style.visibility = "hidden";
            l = 0
        } else {
            u.style.filter = "alpha(opacity=100)";
            u.style.opacity = 1;
            l = 100
        } else setTimeout(c, 100)
    }

    function d(y) {
        if (!pui.cu) {
            y = vb(y);
            if (y != null) {
                y = y.ha;
                y != null && y.jb != true && y.show()
            }
        }
    }

    function e(y) {
        y = y || window.event;
        var F = y.keyCode;
        if (!(F >=
            9 && F <= 45)) if (!(F >= 112 && F <= 145)) {
            y = vb(y);
            if (y != null) {
                F = y.ha;
                if (F != null) {
                    F.hide();
                    F.jb = true;
                    pui.La(y, F.vj())
                }
            }
        }
    }

    function f(y) {
        y = y || window.event;
        y = vb(y);
        if (y != null) {
            var F = y.ha;
            if (F != null) {
                F.hide();
                F.jb = true;
                pui.La(y, F.vj())
            }
        }
    }

    function h(y) {
        if (y != null) k = y; else if (typeof r.pui.properties["error message location"] != "undefined") k = r.pui.properties["error message location"];
        if (k != "left" && k != "right" && k != "top" && k != "bottom") k = "right"
    }

    function g() {
        var y = u != null;
        if (y) {
            v.onmousedown = null;
            v.onmouseup = null;
            v.onclick =
                null;
            v.parentNode.removeChild(v);
            v = null;
            w.parentNode.removeChild(w);
            w = null;
            u.onmousedown = null;
            u.parentNode.removeChild(u);
            u = null
        }
        u = document.createElement("div");
        u.className = "pui-tip ";
        u.className += k == "top" ? "pui-tip-top " : k == "bottom" ? "pui-tip-bottom " : k == "left" ? "pui-tip-left " : "pui-tip-right ";
        u.className += s;
        u.style.position = "absolute";
        w = document.createElement("div");
        w.className = "pui-tip-content";
        v = document.createElement("div");
        v.className = "pui-tip-close";
        v.onmousedown = function (F) {
            v.className = "pui-tip-close-click";
            yb(F);
            return false
        };
        v.onmouseup = function () {
            v.className = "pui-tip-close"
        };
        v.onclick = function () {
            u.style.display = "none";
            u.style.visibility = "hidden";
            l = 0;
            if (pui.is_old_ie) {
                var F = r.parentNode;
                if (i != null && F != null && F.nodeName != "#document-fragment") if (i.tagName == "INPUT" || i.tagName == "SELECT" || i.tagName == "TEXTAREA") if (i.disabled != true) {
                    pui.cu = true;
                    i.focus();
                    if (i.createTextRange != null) {
                        i.select();
                        F = i.createTextRange();
                        if (F != null && F.collapse != null && F.select != null) {
                            F.collapse();
                            F.select()
                        }
                    }
                    setTimeout(function () {
                        pui.cu =
                            false
                    }, 0)
                }
            }
        };
        u.onmousedown = function (F) {
            yb(F);
            return false
        };
        if (!y) {
            u.style.display = "none";
            u.style.visibility = "hidden"
        }
        u.appendChild(w);
        u.appendChild(v);
        E.b.appendChild(u)
    }

    this.b = null;
    var l = 0, n = false, o = 0, i = b, r = b, k = "right", q = "", s = "";
    if (typeof r.pui.properties["error message css class"] == "string") s = Zb(r.pui.properties["error message css class"]);
    if (s == "") s = "pui-tip-error";
    var t = s + "-invalid", u, w, v, E = this;
    this.b = pui.wG(r);
    if (this.b == null) this.b = pui.runtimeContainer;
    if (i.comboBoxWidget != null) i = i.comboBoxWidget.getBox();
    gc(i, "focus", d);
    i.tagName == "INPUT" && (i.type == "text" || pui.$p(i.type)) || gc(i, "click", d);
    gc(i, "blur", function (y) {
        if (!pui.Bj) {
            y = vb(y);
            if (y != null) {
                y = y.ha;
                y != null && y.hide()
            }
        }
    });
    i.tagName == "SELECT" ? gc(i, "change", f) : gc(i, "keydown", e);
    i.ha = this;
    h();
    g();
    this.Il = function (y) {
        q = y;
        w.innerHTML = '<div class="pui-tip-icon" />';
        w.appendChild(document.createTextNode(q))
    };
    this.setPosition = function (y, F) {
        u.style.left = y + "px";
        u.style.top = F + "px"
    };
    this.qI = function () {
        var y = u.offsetHeight, F = u.offsetWidth, D = r.offsetHeight, B = r.offsetWidth,
            I = k;
        h();
        if (I != k) {
            g();
            E.Il(q)
        }
        if (k == "left" || k == "right") {
            y = r.offsetTop - (y - D) / 2;
            F = k == "left" ? r.offsetLeft - F - 3 : r.offsetLeft + B + 3
        } else {
            F = r.offsetLeft + (B - F) / 2;
            y = k == "top" ? r.offsetTop - y - 3 : r.offsetTop + D + 3
        }
        D = r.parentNode;
        if (D == null || pui.is_old_ie && D.nodeName == "#document-fragment") {
            h("right");
            g();
            E.Il(q);
            y = 0;
            F = -7
        } else {
            if (D.getAttribute("container") == "true") {
                B = pui.layout.ec(D);
                y += B.y;
                F += B.x
            }
            if (D != E.b && D.getAttribute("container") != "true") {
                F += D.offsetLeft;
                y += D.offsetTop;
                D = D.parentNode;
                if (D != E.b) {
                    F += D.offsetLeft;
                    y += D.offsetTop;
                    if (D.parentNode.getAttribute("container") == "true") {
                        B = pui.layout.ec(D.parentNode);
                        y += B.y;
                        F += B.x
                    }
                }
            }
        }
        if (r.style.visibility == "hidden") {
            D = r.Yc;
            B = r.Jb;
            if (D != null && B) {
                B = Tb(B);
                if (B != null) {
                    B = B.tabPanel;
                    if (B != null) if (B.selectedTab != D) {
                        B.selectedTab = D;
                        B.H()
                    }
                }
            }
        }
        E.setPosition(F, parseInt(y))
    };
    this.show = function (y, F) {
        this.jb = false;
        if (F == true) setTimeout(function () {
            E.show(y, false)
        }, 0); else {
            if (u.style.display == "none") {
                u.style.display = "block";
                u.style.visibility = "";
                l = 0;
                n = false;
                c()
            }
            o += 1;
            if (o > 1E4) o = 0;
            y !=
            null && a(o, y);
            E.qI()
        }
    };
    this.hide = function () {
        n = true;
        c()
    };
    this.aH = function () {
        u.style.display = "none";
        u.style.visibility = "hidden";
        l = 0
    };
    this.destroy = function () {
        u.removeChild(w);
        u.parentNode.removeChild(u);
        u = w = null;
        E = E.b = null
    };
    this.vj = function () {
        return t
    }
};

function Tc(b) {
    function a() {
        if (!(la && qa)) {
            u = true;
            setTimeout(n, 200)
        }
    }

    function c(ya) {
        ma = true;
        ya = ya || window.event;
        var Fa = ya.keyCode;
        if ((Fa == 38 || Fa == 40) && y.style.display == "block") {
            var Da;
            if (Fa == 38) Da = N != null ? N - 1 : O.length - 1; else if (Fa == 40) Da = N != null ? N + 1 : 0;
            if (Da < 0 || Da >= O.length) Da = null;
            f(Da, true);
            ya.cancelBubble = true;
            ya.returnValue = false;
            ya.preventDefault && ya.preventDefault();
            ya.stopPropagation && ya.stopPropagation();
            return false
        } else if (Fa == 9 && N != null) i(); else if (Fa == 13) {
            if ((Fa = y.style.display == "block") &&
                y.children.length == 1 && y.children[0].textContent.toUpperCase() === ya.currentTarget.value.toUpperCase()) {
                N = 0;
                i();
                n();
                return true
            }
            if (Fa && N != null) {
                i();
                n();
                ya.cancelBubble = true;
                ya.returnValue = false;
                ya.preventDefault && ya.preventDefault();
                ya.stopPropagation && ya.stopPropagation();
                return false
            } else {
                n();
                if (Fa) {
                    ya.cancelBubble = true;
                    ya.returnValue = false;
                    ya.preventDefault && ya.preventDefault();
                    ya.stopPropagation && ya.stopPropagation();
                    return false
                }
            }
        }
    }

    function d(ya) {
        ma = false;
        ya = ya || window.event;
        ya = ya.keyCode;
        if (!(ea.readOnly ||
            ea.disabled)) if (Zb(ea.value) == "") {
            if (X) X.value = "";
            n()
        } else if (ya == 8 || ya >= 46 && ya <= 90 || ya >= 96 && ya <= 111 || ya >= 186 && ya <= 222 || (window.wL != null || typeof window.orientation !== "undefined") && (ya == 0 || ya == 229)) if (ea.value.replace(/ /g, "") != "") if (Eb && wb) h($b(ea.value.toUpperCase())); else {
            clearTimeout(V);
            u = false;
            V = setTimeout(function () {
                g($b(ea.value))
            }, Cb)
        }
    }

    function e() {
        if (!ma) if (Zb(ea.value) == "") {
            if (X) X.value = "";
            n()
        } else if (ea.value.replace(/ /g, "") != "") if (Eb && wb) h($b(ea.value.toUpperCase())); else {
            u = false;
            g($b(ea.value))
        }
    }

    function f(ya, Fa) {
        if (N != null && y.childNodes != null && y.childNodes[N] != null) {
            y.childNodes[N].className = y.childNodes[N].className.replace(" autocomplete-selected", "");
            y.childNodes[N].className = y.childNodes[N].className.replace("autocomplete-selected", "")
        }
        if (ya != null) {
            var Da = y.childNodes[ya];
            Da.className += " autocomplete-selected";
            if (Fa == true && typeof Da.scrollIntoView != null) {
                var gb = 0;
                if (typeof window.pageYOffset == "number") gb = window.pageYOffset; else if (document.body && document.body.scrollTop) gb = document.body.scrollTop;
                else if (document.documentElement && document.documentElement.scrollTop) gb = document.documentElement.scrollTop;
                var sb = 0;
                if (self.innerHeight) sb = self.innerHeight; else if (document.documentElement && document.documentElement.clientHeight) sb = document.documentElement.clientHeight; else if (document.body) sb = document.body.clientHeight;
                sb = gb + sb;
                var ab = Da.offsetTop + Da.parentNode.offsetTop, pb = Da.parentNode.parentNode;
                ab += pb.offsetTop;
                if (pb.parentNode != null && pb.parentNode.grid != null) {
                    ab += pb.parentNode.offsetHeight;
                    ab +=
                        pb.parentNode.parentNode.offsetHeight
                }
                if (ab + Da.offsetHeight > sb || ab < gb) {
                    U = true;
                    Da.scrollIntoView(true);
                    setTimeout(function () {
                        U = false
                    }, 1)
                }
                if (la && Da.offsetTop > oa && !U) {
                    U = true;
                    Da.scrollIntoView(true);
                    setTimeout(function () {
                        U = false
                    }, 1)
                }
            }
        }
        N = ya
    }

    function h(ya) {
        if (X) X.value = "";
        if (ya != "") {
            jb({results: [{field1: ""}]});
            for (var Fa, Da = 0; Da < nb.length; Da++) if (nb[Da][0].toUpperCase().indexOf(ya) == 0) {
                Fa = Da;
                break
            }
            if (Fa != null) {
                O = [];
                for (Da = Fa; Da < nb.length; Da++) O.push({field1: nb[Da][0], field2: nb[Da][1]});
                if (X && O.length ==
                    1 && ea.value.toUpperCase() == O[0][L].toUpperCase()) {
                    X.value = r(O[0], Ba);
                    n()
                } else l()
            } else n()
        }
    }

    function g(ya) {
        if (ya == "") n(); else if (!(xb && xb(La, ya) == false)) {
            ga = null;
            ya = encodeURIComponent(Ta) + "=" + encodeURIComponent(ya);
            if (Wa != null) ya += "&limit=" + Wa;
            if ((Wa == null || Wa == "") && pui["Default Auto Complete Max Choices"] != null) ya += "&limit=" + encodeURIComponent(pui["Default Auto Complete Max Choices"]);
            if (La) for (var Fa in La) {
                ya += "&";
                ya += encodeURIComponent(Fa) + "=" + encodeURIComponent(La[Fa])
            }
            if (pui["read db driven data as ebcdic"] !==
                true) ya += "&UTF8=Y";
            if (X) Ka += 1;
            Fa = new pui.Ajax(pui.ej(da));
            Fa.method = "post";
            Fa.async = true;
            Fa.suppressAlert = true;
            Fa.postData = ya;
            Fa.sequence = Lb;
            Fa.onready = function (Da) {
                if (X) Ka -= 1;
                if (Da.sequence != null) {
                    if (Da.sequence < Lb) return;
                    Lb++
                }
                if (Da = Vb(Da, "Generate Auto-Complete Suggestions")) if (Zb(ea.value) == "") n(); else if (u) n(); else {
                    Da = eval(Da);
                    O = Da.results;
                    if ((Ba == null || L == null) && O.length > 0) for (var gb in O[0]) {
                        if (Ba == null) Ba = gb;
                        if (L == null) L = gb
                    }
                    if (X && O.length == 1 && ea.value.toUpperCase() == O[0][L].toUpperCase()) X.value =
                        r(O[0], Ba); else if (X) X.value = "";
                    if (O.length > 0) {
                        jb && jb(Da);
                        l()
                    } else n();
                    Ib && pui.di(Ib, true, ea.id)
                } else Ib && pui.di(Ib, false, ea.id)
            };
            Fa.send()
        }
    }

    function l() {
        var ya = ea.offsetWidth;
        if (!pui.is_old_ie || !pui.is_quirksmode) ya -= 2;
        if (m == null || m < ya) m = ya;
        y.style.width = m + "px";
        ya = O;
        if (b.Zh) {
            ya = [];
            for (var Fa = false, Da = 0; Da < b.Zh.length; Da++) {
                var gb = ea.value, sb = Eb[Da];
                if (gb !== null && sb !== null) {
                    sb = sb.substr(0, gb.length);
                    gb = gb.toUpperCase();
                    sb = sb.toUpperCase()
                }
                if (gb == sb) {
                    ya.push(b.Zh[Da]);
                    Fa = true
                } else if (Fa) break
            }
        }
        if (!qb) {
            var ab;
            for (Da in ya[0]) {
                ab = Da;
                break
            }
            qb = '<div class="autocomplete-item">(' + ab + ")</div>"
        }
        y.innerHTML = "";
        for (Da = 0; Da < ya.length; Da++) {
            ab = qb;
            for (var pb in ya[Da]) ab = ab.replace("(" + pb + ")", ya[Da][pb]);
            y.innerHTML += ab;
            y.lastChild.setAttribute("recordIndex", String(Da))
        }
        for (Da = 0; Da < y.childNodes.length; Da++) if (y.childNodes[Da].attachEvent) y.childNodes[Da].attachEvent("onmousemove", k); else y.childNodes[Da].addEventListener && y.childNodes[Da].addEventListener("mousemove", k, false);
        y.style.display = "block";
        v = ea.offsetTop;
        E = ea.offsetLeft;
        Da = ea.parentNode;
        if (Da.parentNode.grid) {
            v += Da.offsetTop;
            E += Da.offsetLeft;
            Da = Da.parentNode;
            v += Da.offsetTop;
            E += Da.offsetLeft;
            Da = Da.parentNode
        }
        if (Da.getAttribute("container") == "true") {
            Da = pui.layout.ec(Da);
            v += Da.y;
            E += Da.x
        }
        if (Q == "genie") if (ea.parentNode.layerInfo) {
            v += ea.parentNode.offsetTop + ea.parentNode.clientTop;
            E += ea.parentNode.offsetLeft + ea.parentNode.clientLeft
        }
        v += ea.offsetHeight;
        v += Ea;
        E += pa;
        Da = pui.Ty();
        if (v - Da + y.offsetHeight > pui.getWindowSize().height) {
            pb = v - y.offsetHeight - ea.offsetHeight -
                3;
            if (pb - Da >= 0) v = pb
        }
        y.style.top = v + "px";
        y.style.left = E + "px";
        if (Z) {
            y.style.height = "";
            la = false;
            if (y.clientHeight > oa) {
                y.style.height = String(oa) + "px";
                la = true
            }
            y.style.overflowY = "auto"
        }
        if (kb) {
            F.style.top = v + 3 + "px";
            F.style.left = E - 4 + "px";
            F.style.width = m + 10 + "px";
            F.style.height = y.offsetHeight + 2 + "px";
            D.style.top = "0px";
            D.style.left = "0px";
            D.style.width = "6px";
            if (y.offsetHeight >= 6) D.style.height = y.offsetHeight - 6 + "px";
            if (y.offsetHeight >= 6) z.style.top = y.offsetHeight - 6 + "px";
            z.style.left = "0px";
            z.style.height = "6px";
            z.style.width =
                "6px";
            if (y.offsetHeight >= 6) I.style.top = y.offsetHeight - 6 + "px";
            I.style.left = "6px";
            I.style.height = "6px";
            I.style.width = m - 2 + "px";
            B.style.top = "0px";
            B.style.right = "0px";
            B.style.width = "6px";
            if (y.offsetHeight >= 6) B.style.height = y.offsetHeight - 6 + "px";
            if (y.offsetHeight >= 6) H.style.top = y.offsetHeight - 6 + "px";
            H.style.right = "0px";
            H.style.height = "6px";
            H.style.width = "6px";
            F.style.display = "block"
        }
        if (K) {
            pb = Da = 0;
            ab = kb ? F : y;
            Da = ab.offsetTop;
            pb = ab.offsetLeft;
            ya = ab.offsetHeight;
            ab = ab.offsetWidth + 1;
            J.style.top = Da + "px";
            J.style.left =
                pb + "px";
            J.style.height = ya + "px";
            J.style.width = ab + "px";
            J.style.display = "block"
        }
    }

    function n() {
        if (y != null) y.style.display = "none";
        if (kb) F.style.display = "none";
        if (K) J.style.display = "none";
        O = [];
        N = null
    }

    function o() {
        y.style.display == "block" && l()
    }

    function i() {
        if (N != null) {
            for (var ya in O[N]) {
                ea.value = O[N][ya];
                break
            }
            ga = O[N];
            if (X != null) if (O[N] != null) X.value = r(O[N], Ba);
            if (tb) try {
                var Fa = eval(tb);
                typeof Fa == "function" && Fa(ga, ea)
            } catch (Da) {
                pui.qc(Da, "Onselect error:\n")
            }
        }
    }

    function r(ya, Fa) {
        var Da = ya[Fa];
        if (Da == null) for (var gb in ya) Da =
            ya[gb];
        return Da
    }

    function k(ya) {
        if (!U) {
            ya = ya || window.event;
            ya = ya.target || ya.srcElement;
            var Fa = ya.getAttribute("recordIndex");
            if (Fa == "" || Fa == null) {
                ya = ya.parentNode;
                Fa = ya.getAttribute("recordIndex");
                if (Fa == "" || Fa == null) return
            }
            f(Number(Fa))
        }
    }

    function q(ya) {
        if (la && Y != null && y.offsetWidth != null) {
            var Fa = ya.currentTarget.getBoundingClientRect().right - Y;
            if (pui.Pk(ya) > Fa) return true
        }
        return false
    }

    function s(ya) {
        qa = true;
        setTimeout(function () {
            ea.focus()
        }, 0);
        if (!q(ya)) {
            i();
            n()
        }
    }

    function t() {
        qa = false
    }

    var u = false,
        w = this, v, E, y, F, D, B, I, z, H, J, K, L, N = null, O = [], V, X, ga, U = false, Z = false, la = false,
        Y = function () {
            var ya = document.createElement("div");
            ya.style.overflow = "scroll";
            ya.style.visibility = "hidden";
            ya.style.position = "absolute";
            document.body.appendChild(ya);
            ya.style.height = "50px";
            ya.style.width = "50px";
            var Fa = document.createElement("div");
            Fa.style.height = "1px";
            ya.appendChild(Fa);
            Fa = Fa.offsetWidth;
            var Da = ya.offsetWidth;
            ya.parentElement.removeChild(ya);
            return Da - Fa
        }(), oa = null, qa = false, ma = false, ka, ea, da, Ba, Ea, pa, ia, m,
        La, Ta, Wa, kb, qb, Cb, tb, xb, jb, Eb, wb, nb, Ib, Lb = 0;
    da = b.url;
    Ba = b.valueField;
    ea = typeof b.zo == "object" ? b.zo : document.getElementById(b.zo);
    ea.setAttribute("autocomplete", "off");
    ka = b.b ? b.b : ea.parentNode;
    Q == "genie" && ea.setAttribute("maxLength", "133");
    if (b.choices && b.values) {
        ia = false;
        var cb = Zb(ea.value);
        nb = [];
        Eb = b.choices;
        wb = b.values;
        for (var Hb = 0; Hb < wb.length; Hb++) if (Eb[Hb] != null) {
            nb[nb.length] = [];
            nb[nb.length - 1][0] = Zb(Eb[Hb]);
            nb[nb.length - 1][1] = Zb(wb[Hb]);
            if (!ia && cb != "") if (cb == Zb(wb[Hb])) {
                ea.value = Zb(Eb[Hb]);
                ia = ea.bx = true
            }
        }
        nb.sort(function (ya, Fa) {
            return ya[0].toUpperCase() < Fa[0].toUpperCase() ? -1 : 1
        });
        L = "field1";
        Ba = "field2"
    }
    if (Ba) {
        if (Q == "genie") {
            ia = ea.getAttribute("name");
            ea.removeAttribute("name");
            try {
                X = document.createElement('<input name="' + ia + '" />')
            } catch (db) {
                X = document.createElement("input");
                X.name = ia
            }
            X.type = "hidden";
            X.value = ea.value;
            X.S = ea.S;
            X.oL = ea;
            ea.S = null;
            if (X.S != null) pui.response[X.S.idx] = X;
            document.forms.main.appendChild(X)
        }
        if (Q == "dspf") {
            X = {value: ""};
            ea.Cs = X
        }
    }
    Ea = b.vK ? b.vK : 0;
    pa = b.JH ? b.JH : 0;
    ia =
        b.zIndex ? b.zIndex : 1E5;
    if (typeof b.width != "undefined") m = b.width;
    if (b.baseParams) La = b.baseParams;
    Ta = b.mI ? b.mI : "query";
    if (typeof b.bl != "undefined") Wa = b.bl;
    kb = typeof b.shadow != "undefined" && b.shadow == false ? false : true;
    K = pui.is_old_ie && pui.ie_mode <= 6 ? true : false;
    if (typeof b.beforequery == "function") xb = b.beforequery;
    if (typeof b.onload == "function") jb = b.onload;
    if (b.onselect != null) tb = b.onselect;
    if (b.gA != null) Ib = b.gA;
    if (typeof b.template != "undefined") qb = b.template;
    Cb = typeof b.typeAheadDelay === "number" ? b.typeAheadDelay :
        200;
    if (typeof b.rv != "undefined" && typeof b.maxHeight != "undefined" && b.maxHeight != null) {
        Z = b.rv;
        oa = b.maxHeight
    }
    y = document.createElement("div");
    y.style.display = "none";
    y.style.margin = "0px";
    y.style.padding = "0px";
    y.style.position = "absolute";
    y.style.zIndex = ia;
    y.className = "autocomplete-results " + Zb(ea.id) + "-autocomplete-results";
    if (y.addEventListener) y.addEventListener("mousedown", s, false); else y.attachEvent && y.attachEvent("onmousedown", s);
    if (y.addEventListener) y.addEventListener("mouseup", t, false); else y.attachEvent &&
    y.attachEvent("onmouseup", t);
    ka.appendChild(y);
    if (kb) {
        cb = "";
        if (Ja == "ON") cb = "https://" + HTTP_HOST;
        cb += pui.normalizeURL("/profoundui/proddata/images/");
        F = document.createElement("div");
        F.style.display = "none";
        F.style.padding = "0px";
        F.style.margin = "0px";
        F.style.position = "absolute";
        F.style.zIndex = ia - 1;
        F.style.fontSize = "0px";
        D = document.createElement("div");
        D.style.padding = "0px";
        D.style.margin = "0px";
        D.style.position = "absolute";
        D.style.background = "transparent url(" + cb + "shadow-side.png) repeat-y scroll";
        F.appendChild(D);
        z = document.createElement("div");
        z.style.padding = "0px";
        z.style.margin = "0px";
        z.style.position = "absolute";
        z.style.background = "transparent url(" + cb + "shadow.png) no-repeat scroll 0px -12px";
        F.appendChild(z);
        I = document.createElement("div");
        I.style.padding = "0px";
        I.style.margin = "0px";
        I.style.position = "absolute";
        I.style.background = "transparent url(" + cb + "shadow.png) repeat-x scroll 0px -36px";
        F.appendChild(I);
        B = document.createElement("div");
        B.style.padding = "0px";
        B.style.margin = "0px";
        B.style.position = "absolute";
        B.style.background = "transparent url(" + cb + "shadow-side.png) repeat-y scroll -6px";
        F.appendChild(B);
        H = document.createElement("div");
        H.style.padding = "0px";
        H.style.margin = "0px";
        H.style.position = "absolute";
        H.style.background = "transparent url(" + cb + "shadow.png) no-repeat scroll 0px -6px";
        F.appendChild(H);
        ka.appendChild(F)
    }
    if (K) {
        J = document.createElement("iframe");
        J.style.display = "none";
        J.style.visibility = "hidden";
        J.style.position = "absolute";
        J.style.margin = "0px";
        J.style.zIndex = ia - 2;
        ka.appendChild(J)
    }
    if (ea.addEventListener) {
        ea.addEventListener("keyup",
            d, false);
        ea.addEventListener("keydown", c, false);
        ea.addEventListener("blur", a, false);
        ea.addEventListener("input", e, false);
        window.addEventListener("resize", o, false)
    } else if (ea.attachEvent) {
        ea.attachEvent("onkeyup", d);
        ea.attachEvent("onkeydown", c);
        ea.attachEvent("onblur", a);
        ea.attachEvent("onresize", o)
    }
    this.tB = function (ya) {
        qb = ya
    };
    this.dn = function () {
        return y.style.display == "block"
    };
    this.setWidth = function (ya) {
        m = ya
    };
    this.QL = function () {
        return ga
    };
    this.destroy = function () {
        ic(ea, "keyup", d);
        ic(ea, "keydown",
            c);
        ic(ea, "blur", a);
        ic(ea, "input", e);
        ic(ea, "resize", o);
        ic(window, "resize", o);
        w = Ib = nb = wb = Eb = jb = xb = tb = kb = La = ea = ka = ga = X = V = O = N = L = J = H = z = I = B = D = F = y = null
    }
}

function Uc(b, a, c) {
    var d = hc(b["choices database file"], a, c), e = hc(b["choice options field"], a, c), f = pui.Ok(e),
        h = hc(b["choices url"], a, c);
    e = hc(b["choice values field"], a, c);
    var g = hc(b["max choices"], a, c), l = hc(b.choices, a, c);
    l = pui.Ta(l);
    if (l.length == 0) l = [""];
    var n = hc(b["choice values"], a, c);
    if (n == "") {
        n = [];
        for (var o = 0; o < l.length; o++) n.push(l[o])
    } else n = pui.Ta(n);
    if (n.length == 0) n = [""];
    var i = Zb(hc(b["results template"], a, c));
    if (i == "") i = null;
    if (d != "" && f[0] != "" || h != "" || l.length > 0 && l[0] != "" && n[0] != "") {
        var r =
            hc(b.onselect, a, c), k;
        if (r != null && r != "") {
            k = r;
            r = k.indexOf("(");
            if (r != -1) if (k.substr(r + 1, 1) == ")") k = k.substr(0, r)
        }
        r = hc(b.ondbload, a, c);
        if (typeof r != "string" || r == "") r = null;
        var q = {};
        if (pui.isCloud) q.workspace_id = pui.cloud.ws.id;
        if (Q == "genie") q.AUTH = GENIE_AUTH;
        if (Q == "dspf" && (h == "" || !pui.vn)) q.AUTH = pui.appJob.auth;
        if (h == "" && l[0] == "" && n[0] == "") {
            var s = hc(b["contains match"], a, c) == "true", t = "SELECT DISTINCT ";
            for (o = 0; o < f.length; o++) {
                if (o != 0) t += ", ";
                t += f[o]
            }
            if (e != "") t += "," + e;
            t += " FROM " + d;
            t += " WHERE UPPER(" + f[0] +
                ") LIKE '";
            if (s) t += "%";
            t += "!!QUERY!!%'";
            o = hc(b["choices selection criteria"], a, c);
            if (o != "") t += " AND (" + o + ")";
            t += " ORDER BY " + f[0]
        }
        if (c.Qe != null && c.Qe.destroy != null) {
            c.Qe.destroy();
            c.Qe = null
        }
        var u;
        if (Q == "dspf" && Ub()) u = R.designer.b; else {
            for (o = c.parentNode; o;) {
                if (o.ze) {
                    u = o;
                    break
                }
                o = o.parentNode
            }
            if (u == null) u = pui.runtimeContainer
        }
        var w = function (E) {
            E = $b(E.replace(/\u00DF/g, "\u1e9e"));
            E = E.toUpperCase();
            return E = E.replace(/\u1E9E/g, "\u00df")
        }, v = new Tc({
            zo: c,
            url: h != "" ? h : cc("PUI0009102.PGM"),
            baseParams: q,
            b: u,
            choices: l[0] != "" ? l : null,
            values: n[0] != "" ? n : null,
            bl: g != "" ? g : null,
            template: i,
            onselect: k,
            gA: r,
            typeAheadDelay: pui["autocomplete typeahead delay"],
            valueField: h == "" && l[0] == "" && n[0] == "" && e != "" && e != f[0] ? e : null,
            beforequery: h == "" && l[0] == "" && n[0] == "" ? function (E, y) {
                if (hc(b["case sensitive"], a, c) == "true") if (hc(b["text transform"], a, c) == "uppercase" || c.sa != null && c.sa.textTransform == "uppercase") y = w(y); else {
                    if (hc(b["text transform"], a, c) == "lowercase" || c.sa != null && c.sa.textTransform == "lowercase") y = $b(y.toLowerCase())
                } else y =
                    w(y);
                if (y == "") return false;
                if (pui.secLevel > 0) {
                    if (hc(b["contains match"], a, c) == "true") y = "%" + Zb(y) + "%"; else y += "%";
                    E.q = pui.jg(c);
                    E.p1 = y;
                    pui.ig(b, E)
                } else {
                    y = y.replace(/'/g, "''");
                    E.q = pui.ad.ci(t.replace("!!QUERY!!", y))
                }
            } : null,
            onload: function (E) {
                if (!i) if (c.FE != null) {
                    c.As && v.tB(c.As);
                    c.Bs && v.setWidth(c.Bs)
                } else {
                    var y = document.createElement("div");
                    y.style.position = "absolute";
                    y.style.top = "0px";
                    y.style.left = "0px";
                    y.style.className = "autocomplete-item";
                    y.style.visibility = "hidden";
                    document.body.appendChild(y);
                    var F = '<div class="autocomplete-item">', D = E.colWidths;
                    E = E.results[0];
                    var B = 0, I = 0, z;
                    for (var H in E) {
                        if (h == "" && B == f.length) break;
                        y.innerHTML = "";
                        F += '<div class="autocomplete-col" style="float: left; width: ';
                        if (D && D[B]) if (typeof D[B] == "number") {
                            for (z = 0; z < D[B]; z++) y.innerHTML += "a";
                            F += y.offsetWidth + 5 + 'px;"';
                            I += y.offsetWidth + 5
                        } else if (typeof D[B] == "string") {
                            F += D[B] + ';"';
                            z = Number(D[B].replace("px", ""));
                            isNaN(z) || (I += z)
                        } else {
                            F += '100px"';
                            I += 100
                        } else {
                            F += '100px"';
                            I += 100
                        }
                        F += ">(" + H + ")</div>";
                        B++
                    }
                    F += "</div>";
                    c.As =
                        F;
                    c.Bs = I + 20;
                    c.FE = true;
                    v.setWidth(c.Bs);
                    v.tB(c.As);
                    document.body.removeChild(y)
                }
            },
            shadow: pui.is_old_ie && pui.ie_mode <= 6 ? false : true,
            rv: true,
            maxHeight: isNaN(parseInt(hc(b["max height"], a, c))) ? null : parseInt(hc(b["max height"], a, c))
        });
        c.Qe = v;
        if (h == "" && f[0] != "" && e != "" && e != f[0] && c.value != "") {
            d = "SELECT " + f[0] + " FROM " + d + " WHERE " + e + " = '" + $b(c.value).replace("'", "''") + "'";
            o = hc(b["choices selection criteria"], a, c);
            if (o != "") d += " AND (" + o + ")";
            k = new pui.Ajax(cc("PUI0009102.PGM"));
            k.method = "post";
            k.async = true;
            k.suppressAlert = true;
            if (Q == "genie") k.postData = "AUTH=" + GENIE_AUTH;
            if (Q == "dspf") k.postData = "AUTH=" + pui.appJob.auth;
            if (pui.secLevel > 0) {
                k.postData += "&q=" + encodeURIComponent(pui.jg(c)) + ".reverse";
                k.postData += "&p1=" + encodeURIComponent($b(c.value));
                d = pui.ig(b);
                if (d != "") k.postData += "&" + d
            } else k.postData += "&q=" + pui.ad.ci(d);
            k.postData += "&limit=1";
            if (pui.isCloud) k.postData += "&workspace_id=" + pui.cloud.ws.id;
            k.onready = function (E) {
                Ka -= 1;
                if (E = Vb(E, "Generate Auto-Complete Suggestions.")) {
                    var y;
                    E = E.results[0];
                    for (var F in E) {
                        y =
                            F;
                        break
                    }
                    if (y == null) {
                        if (pui["force auto complete match"] !== false) c.value = ""
                    } else c.value = E[y]
                } else if (pui["force auto complete match"] !== false) c.value = ""
            };
            Ka += 1;
            k.send()
        }
    }
};

function Vc(b) {
    for (var a = false, c = 0, d = 0; d < b.length; d++) if ((b.charCodeAt(d) >= 19968 && b.charCodeAt(d) <= 40959 || b.charCodeAt(d) >= 19968 && b.charCodeAt(d) <= 40895 || b.charCodeAt(d) >= 12352 && b.charCodeAt(d) <= 12447 || b.charCodeAt(d) >= 12448 && b.charCodeAt(d) <= 12543 || b.charCodeAt(d) >= 44032 && b.charCodeAt(d) <= 55203 || b.charCodeAt(d) >= 4352 && b.charCodeAt(d) <= 4607 || b.charCodeAt(d) >= 12593 && b.charCodeAt(d) <= 12686 || b.charCodeAt(d) >= 65441 && b.charCodeAt(d) <= 65500 ? true : false) == true) {
        a == false && c++;
        a = true;
        c += 2
    } else {
        a == true && c++;
        a = false;
        c++
    }
    a == true && c++;
    return c
}

function Wc(b, a) {
    if (a == null) {
        b = b || window.event;
        a = b.target || b.srcElement
    }
    if (pui.vi(a)) if (a.choices == null) if (!(a.S != null && a.S.DBCSDataType && a.S.DBCSDataType == "G")) if (Vc($b(a.value)) > a.maxLength) {
        if (a == null) {
            b.cancelBubble = true;
            b.returnValue = false;
            b.preventDefault && b.preventDefault();
            b.stopPropagation && b.stopPropagation()
        }
        ic(a, "blur", Wc);
        pui.alert("Input data exceeds the field length.");
        gc(a, "blur", Wc);
        setTimeout(function () {
            a.focus()
        }, 100);
        return false
    }
};

function Xc(b) {
    this.toString = function () {
        return "INVALID: " + this.message
    };
    this.message = b
}

function Yc(b) {
    this.qk[0][0][0] || this.VD();
    var a, c, d, e, f = this.qk[0][4], h = this.qk[1];
    a = b.length;
    var g = 1;
    if (a !== 4 && a !== 6 && a !== 8) throw new Xc("invalid key size");
    this.UD = [d = b.slice(0), e = []];
    for (b = a; b < 4 * a + 28; b++) {
        c = d[b - 1];
        if (b % a === 0 || a === 8 && b % a === 4) {
            c = f[c >>> 24] << 24 ^ f[c >> 16 & 255] << 16 ^ f[c >> 8 & 255] << 8 ^ f[c & 255];
            if (b % a === 0) {
                c = c << 8 ^ c >>> 24 ^ g << 24;
                g = g << 1 ^ (g >> 7) * 283
            }
        }
        d[b] = d[b - a] ^ c
    }
    for (a = 0; b; a++, b--) {
        c = d[a & 3 ? b : b - 4];
        e[a] = b <= 4 || a < 4 ? c : h[0][f[c >>> 24]] ^ h[1][f[c >> 16 & 255]] ^ h[2][f[c >> 8 & 255]] ^ h[3][f[c & 255]]
    }
}

Yc.prototype = {
    PF: function (b) {
        return this.SD(b, 0)
    }, qk: [[[], [], [], [], []], [[], [], [], [], []]], VD: function () {
        var b = this.qk[0], a = this.qk[1], c = b[4], d = a[4], e, f, h, g = [], l = [], n, o, i, r;
        for (e = 0; e < 256; e++) l[(g[e] = e << 1 ^ (e >> 7) * 283) ^ e] = e;
        for (f = h = 0; !c[f]; f ^= n || 1, h = l[h] || 1) {
            i = h ^ h << 1 ^ h << 2 ^ h << 3 ^ h << 4;
            i = i >> 8 ^ i & 255 ^ 99;
            c[f] = i;
            d[i] = f;
            o = g[e = g[n = g[f]]];
            r = o * 16843009 ^ e * 65537 ^ n * 257 ^ f * 16843008;
            o = g[i] * 257 ^ i * 16843008;
            for (e = 0; e < 4; e++) {
                b[e][f] = o = o << 24 ^ o >>> 8;
                a[e][i] = r = r << 24 ^ r >>> 8
            }
        }
        for (e = 0; e < 5; e++) {
            b[e] = b[e].slice(0);
            a[e] = a[e].slice(0)
        }
    },
    SD: function (b, a) {
        if (b.length !== 4) throw new Xc("invalid block size");
        var c = this.UD[a], d = b[0] ^ c[0], e = b[a ? 3 : 1] ^ c[1], f = b[2] ^ c[2], h = b[a ? 1 : 3] ^ c[3], g, l, n,
            o = c.length / 4 - 2, i, r = 4, k = [0, 0, 0, 0];
        g = this.qk[a];
        var q = g[0], s = g[1], t = g[2], u = g[3], w = g[4];
        for (i = 0; i < o; i++) {
            g = q[d >>> 24] ^ s[e >> 16 & 255] ^ t[f >> 8 & 255] ^ u[h & 255] ^ c[r];
            l = q[e >>> 24] ^ s[f >> 16 & 255] ^ t[h >> 8 & 255] ^ u[d & 255] ^ c[r + 1];
            n = q[f >>> 24] ^ s[h >> 16 & 255] ^ t[d >> 8 & 255] ^ u[e & 255] ^ c[r + 2];
            h = q[h >>> 24] ^ s[d >> 16 & 255] ^ t[e >> 8 & 255] ^ u[f & 255] ^ c[r + 3];
            r += 4;
            d = g;
            e = l;
            f = n
        }
        for (i = 0; i < 4; i++) {
            k[a ? 3 & -i :
                i] = w[d >>> 24] << 24 ^ w[e >> 16 & 255] << 16 ^ w[f >> 8 & 255] << 8 ^ w[h & 255] ^ c[r++];
            g = d;
            d = e;
            e = f;
            f = h;
            h = g
        }
        return k
    }
};

function Zc(b) {
    var a, c = [], d;
    b = b.replace(/\s|0x/g, "");
    d = b.length;
    b += "00000000";
    for (a = 0; a < b.length; a += 8) c.push(parseInt(b.substr(a, 8), 16) ^ 0);
    b = c;
    a = d * 4;
    if (!(b.length * 32 < a)) {
        b = b.slice(0, Math.ceil(a / 32));
        d = b.length;
        a &= 31;
        if (d > 0 && a) {
            c = b[d - 1] & 2147483648 >> a - 1;
            a = a === 32 ? c : (c | 0) + a * 1099511627776;
            b[d - 1] = a
        }
    }
    b = b;
    return b
}

pui.ad = {};
pui.ad.lE = "if(a.c=='genie'){h.g=true;a.x++}";
pui.ad.QF = function (b) {
    var a = Zc(pui.ad.cy(pui.ad.lE, 2));
    a = new Yc(a);
    b = Zc(b);
    a = b = a.PF(b);
    b = "";
    var c;
    for (c = 0; c < a.length; c++) b += ((a[c] | 0) + 263882790666240).toString(16).substr(4);
    c = a.length;
    a = c === 0 ? 0 : (c - 1) * 32 + (Math.round(a[c - 1] / 1099511627776) || 32);
    return b = b.substr(0, a / 4)
};
pui.ad.RF = function (b, a) {
    if (b.length % 4 != 0) return "";
    for (; b.length % 32 != 0;) b += "0020";
    if (a) {
        for (var c = "", d = 0; d < b.length; d += 2) {
            c += b.substr(d, 2);
            c += ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"][Math.floor(Math.random() * 16)];
            c += ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"][Math.floor(Math.random() * 16)]
        }
        b = c
    }
    c = "";
    for (d = 0; d < b.length; d += 32) {
        var e = b.substr(d, 32);
        c += pui.ad.QF(e)
    }
    return c
};
pui.ad.cy = function (b, a) {
    for (var c = "", d = b.length, e = 0, f; e < d;) {
        for (f = b.charCodeAt(e++).toString(16); f.length < a;) f = "0" + f;
        c += f
    }
    return c
};
pui.ad.ci = function (b) {
    b = pui.ad.cy(b, 4);
    return pui.ad.RF(b, true).toUpperCase()
};
var $c = new (function () {
    function b() {
        var f = "{ ", h = 0;
        for (var g in e) {
            h++;
            var l = e[g];
            if (h > 1) f += ", ";
            f += g + ":";
            f += '"';
            f += l;
            f += '"'
        }
        f += " }";
        document.cookie = c + "=" + escape(f) + "; path=/"
    }

    function a() {
        for (var f = null, h = document.cookie.split("; "), g = 0; g < h.length; g++) {
            var l = h[g].split("=");
            if (c == l[0]) f = unescape(l[1])
        }
        if (f == null) e = {}; else try {
            e = eval("(" + f + ")")
        } catch (n) {
            e = {}
        }
        d = true
    }

    var c = "GenieSession";
    if (Q == "dspf") c = "PUISession";
    var d = false, e = {};
    this.$q = function (f, h) {
        d || a();
        e[f] = h;
        b()
    };
    this.getValue = function (f, h) {
        d ||
        a();
        var g = e[f];
        if (g == null) g = h;
        if (g == null) g = "";
        return g
    };
    this.clear = function () {
        e = {};
        b()
    };
    this.DI = this.set = this.setValue = this.$q;
    this.get = this.getValue
});
window.session = $c;
window.session.saveValue = $c.$q;
window.session.getValue = $c.getValue;
window.session.clear = $c.clear;
window.session.setValue = $c.setValue;
window.session.set = $c.set;
window.session.put = $c.DI;
window.session.get = $c.get;
pui.runtimeContainer = null;
pui.QA = 0;
pui["refresh interval"] = null;
pui.Ua = {};
pui.Ak = {};
pui.Xk = {};
pui.Kk = {};
pui.Ma = {};
pui.Bg = {};
pui.psid = null;
pui.yd = false;
pui.gt = false;
pui.Pa = {};
pui.vq = null;
pui.$i = 1E3;
pui.Mf = null;
pui.pu = null;
pui.qu = null;
pui.modified = false;
pui.ai = {};
pui.Bj = false;
pui.cu = false;
pui.confirmOnClose = true;
pui.shutdownOnClose = true;
pui.skipConfirm = false;
pui.Wc = "";
pui.yq = null;
pui.Lb = {};
pui.G = {};
pui.ip = {};
pui.Sq = {};
pui.Dr = {};
pui.or = {};
pui.Uv = {};
pui.Oc = {};
pui.ap = {};
pui.Nr = null;
pui.Lr = null;
pui.Dq = true;
pui.Hr = null;
pui.jm = null;
pui.tv = false;
pui.mr = [];
pui.Wa = {};
pui.Wa.keys = {};
pui.kc = [];
pui.Eo = [];
pui.kn = [];
pui.ia = "false";
pui.Lx = "false";
pui.og = null;
pui.Hn = false;
pui.pb = false;
pui.oi = false;
pui.Pg = null;
pui.Ug = null;
pui.Te = [];
pui.activeElement = null;
pui.Ds = false;
pui.currentFormatNames = [];
pui["no focus"] = false;
pui.wh = {};
pui.Mr = null;
pui.gJ = 0;
pui.Pv = 20;
pui.jK = 8;
pui.leftOffset = 140;
pui.wK = 0;
pui.Qj = 27;
pui["vertical button spacing"] = 33;
pui["horizontal button spacing"] = 90;
pui["highlight on focus"] = false;
pui["window mask color"] = "#CCCCCC";
pui["window mask opacity"] = 50;
pui["loading animation"] = {};
pui["loading animation"].path = pui.normalizeURL("/profoundui/proddata/images/loading.gif");
pui["loading animation"].left = 10;
pui["loading animation"].top = 10;
pui["loading animation"].width = 16;
pui["loading animation"].height = 16;
pui["loading animation"].zIndex = 250;
pui["loading animation"].css = "pui-animation";
pui["auto tab"] = false;
pui["enable arrow keys"] = false;
pui["horizontal auto arrange"] = false;
pui["buttons per row"] = 1;
pui.wikihelp = {};
pui.$F = {
    F1: 1,
    F2: 2,
    F3: 3,
    F4: 4,
    F5: 5,
    F6: 6,
    F7: 7,
    F8: 8,
    F9: 9,
    F10: 10,
    F11: 11,
    F12: 12,
    F13: 13,
    F14: 14,
    F15: 15,
    F16: 16,
    F17: 17,
    F18: 18,
    F19: 19,
    F20: 20,
    F21: 21,
    F22: 22,
    F23: 23,
    F24: 24,
    Enter: 0
};
pui.ls = {
    F1: 49,
    F2: 50,
    F3: 51,
    F4: 52,
    F5: 53,
    F6: 54,
    F7: 55,
    F8: 56,
    F9: 57,
    F10: 58,
    F11: 59,
    F12: 60,
    F13: 177,
    F14: 178,
    F15: 179,
    F16: 180,
    F17: 181,
    F18: 182,
    F19: 183,
    F20: 184,
    F21: 185,
    F22: 186,
    F23: 187,
    F24: 188,
    "Pause/Break": 189,
    Clear: 189,
    Enter: 241,
    "Alt-F1": 243,
    Help: 243,
    PageUp: 244,
    PageDown: 245,
    Print: 246,
    RecordBackspace: 248,
    AutoEnter: 63
};
pui.CA = function (b) {
    b = b.metaData.items;
    for (var a = 0; a < b.length; a++) {
        var c = b[a], d = c["field type"];
        if (d == "checkbox" || d == "combo box" || d == "date field" || d == "password field" || d == "radio button" || d == "select box" || d == "spinner" | d == "text area" || d == "textbox") {
            c["read only"] = "true";
            d = false;
            var e = 1, f = "css class";
            if (c[f] == "PR" || c[f] == "PR-UL") d = true;
            for (; c[f] != null;) {
                e++;
                f = "css class " + e;
                if (c[f] == "PR" || c[f] == "PR-UL") d = true
            }
            d || (c[f] = "PR")
        }
    }
};
pui.GF = function (b, a, c, d) {
    var e;
    switch (b) {
        case "*END":
            e = d;
            b = 27;
            break;
        case "*ALL":
            e = 1;
            b = 27;
            break;
        case "*NO":
            b = e = 0;
            break;
        default:
            b = parseInt(b);
            if (isNaN(b)) b = 0;
            e = d;
            b = d + b - 1
    }
    if (c == null) c = "";
    d = c.split("-");
    if (d.length != 2) d = c = 0; else {
        c = parseInt(d[0]);
        if (isNaN(c)) c = 0;
        d = parseInt(d[1]);
        if (isNaN(d)) d = 0
    }
    var f = null;
    a = a.metaData.items;
    for (var h = 0; h < a.length; h++) {
        var g = a[h], l = g["cursor row"];
        if (l != null && l != "") {
            l = parseInt(l);
            if (!isNaN(l) && l > 0) {
                if (l >= e && l <= b) {
                    g.visibility = "hidden";
                    if (g.grid != null) f = g.grid
                }
                if (l >= c &&
                    l <= d && pui["clear overlapped lines"] != false) {
                    g.visibility = "hidden";
                    if (g.grid != null) f = g.grid
                }
            }
        }
    }
    if (f != null) for (h = 0; h < a.length; h++) {
        g = a[h];
        if (g["field type"] == "grid" && g.id == f) g.visibility = "hidden";
        if (g["field type"] == "image" && g.id == f + "_expander") g.visibility = "hidden"
    }
};
pui.HI = function (b, a) {
    if (b == null) return false;
    if (a == null) return false;
    var c = b.split("-"), d = a.split("-");
    if (c.length != 2) return false;
    if (d.length != 2) return false;
    var e = parseInt(c[0]);
    c = parseInt(c[1]);
    var f = parseInt(d[0]);
    d = parseInt(d[1]);
    if (isNaN(e)) return false;
    if (isNaN(c)) return false;
    if (isNaN(f)) return false;
    if (isNaN(d)) return false;
    var h = (e + c) / 2, g = (f + d) / 2;
    if (h >= f && h <= d) return true;
    if (g >= e && g <= c) return true;
    return false
};
pui.kI = function (b) {
    function a(k, q, s) {
        for (var t = s, u = 1; q[t] != null && q[t] != "";) {
            if (q[t] === k) return true;
            u++;
            t = s + " " + u
        }
        return false
    }

    var c = null, d = null;
    if (b.length > 1) for (var e = 0; e < b.length; e++) {
        var f = b[e];
        if (pui.ab(f.metaData.screen.protect, f.data, f.ref) == "true") for (r = 0; r < e; r++) pui.CA(b[r]);
        var h = f.metaData.screen["clear line"];
        if (h != null && h != "") {
            var g = f.metaData.screen["overlay range"], l = f.metaData.screen["starting line"];
            if (l == null) l = g != null ? g.split("-")[0] : "1";
            l = parseInt(l);
            if (isNaN(l) || l < 1) l = 1;
            var n =
                false, o = f.metaData.items;
            for (r = 0; r < o.length; r++) {
                var i = o[r];
                i = i["field type"];
                if (i == "checkbox" || i == "combo box" || i == "date field" || i == "password field" || i == "radio button" || i == "select box" || i == "spinner" | i == "text area" || i == "textbox") {
                    n = true;
                    break
                }
            }
            for (r = 0; r < e; r++) {
                pui.GF(h, b[r], g, l);
                n && pui.HI(b[r].metaData.screen["overlay range"], g) && pui.CA(b[r])
            }
        }
        if (f.subfiles != null) {
            g = f.metaData.screen["overlay range"];
            if (g != null) {
                o = g.split("-");
                if (o.length == 2) {
                    c = Number(o[1]);
                    o = f.metaData.items;
                    for (var r = 0; r < o.length; r++) {
                        i =
                            o[r];
                        if (i["field type"] == "grid") {
                            d = i;
                            break
                        }
                    }
                }
            }
        }
    }
    if (c != null && !isNaN(c) && d != null) for (e = 0; e < b.length; e++) {
        f = b[e];
        g = f.metaData.screen["overlay range"];
        if (g != null) {
            o = g.split("-");
            if (o.length == 2) {
                o = Number(o[0]);
                if (!isNaN(o) && o > c) {
                    o = Number(d["number of rows"]);
                    if (isNaN(o) || o <= 0) break;
                    if (d["has header"] == "true") o -= 1;
                    i = Number(d["row height"]);
                    if (isNaN(i) || i <= 0) break;
                    h = d["fold multiple"];
                    if (h == null) h = parseInt(i / pui.Pv);
                    h = Number(h);
                    if (isNaN(h) || h < 1) h = 1;
                    i = parseInt(i / h);
                    h = o * (i - pui.Pv);
                    o = d["show paging controls"];
                    i = d["show page number"];
                    g = d["csv export"];
                    l = false;
                    if (o != null && o != "" && o != "false") l = true;
                    if (i != null && i != "" && i != "false") l = true;
                    if (g != null && g != "" && g != "false") l = true;
                    if (l) h += pui.Qj;
                    if (h <= 0) break;
                    o = f.metaData.items;
                    for (r = 0; r < o.length; r++) {
                        i = o[r];
                        if (i.grid == null) {
                            f = i["field type"];
                            if (f != "panel" && f != "css panel" && !pui.f(i.top) && !a("stationary", i, "css class")) i.top = parseInt(i.top) + h + "px"
                        }
                    }
                }
            }
        }
    }
};
pui.um = function () {
    pui.Se = null;
    if (pui.vg != null && pui.Yk != true) {
        if (pui.vg.layers) for (var b = 0; b < pui.vg.layers.length; b++) for (var a = pui.vg.layers[b], c = 0; c < a.formats.length; c++) {
            var d = a.formats[c];
            d.data && delete d.data;
            d.metaData && delete d.metaData;
            d = d.subfiles;
            if (d != null) for (var e in d) {
                delete d[e].data;
                delete d[e]
            }
        }
        delete pui.vg
    }
    for (c = 0; c < pui.kc.length; c++) {
        b = pui.kc[c];
        b != null && typeof b.destroy == "function" && b.destroy()
    }
    pui.kc = [];
    for (c = 0; c < pui.kn.length; c++) {
        b = pui.kn[c];
        b != null && typeof b.destroy == "function" &&
        b.destroy()
    }
    pui.kn = [];
    if (typeof FusionCharts != "undefined") for (c = 0; c < pui.qm.length; c++) FusionCharts(pui.qm[c]) && FusionCharts(pui.qm[c]).dispose();
    pui.qm = [];
    for (c = 0; c < pui.Eo.length; c++) {
        b = pui.Eo[c];
        b != null && typeof b.destroy == "function" && b.destroy()
    }
    pui.Eo = [];
    for (var f in pui.wh) document.body.style[f] = pui.wh[f];
    pui.wh = {};
    pui.Bz()
};
pui.resize = function (b) {
    if (pui.is_touch && document.activeElement && document.activeElement.Az) {
        b.cancel = true;
        b.preventDefault && b.preventDefault();
        b.stopImmediatePropagation && b.stopImmediatePropagation()
    } else {
        var a = pui.runtimeContainer;
        if (a != null) for (var c = 0; c < a.childNodes.length; c++) {
            var d = a.childNodes[c];
            if (d.sizeMe != null && typeof d.sizeMe == "function") if (pui.is_old_ie || pui.da(d.style.width) || pui.da(d.style.height)) d.sizeMe();
            b && d.layout != null && d.layout.stretch()
        }
    }
};
pui.pI = function (b) {
    if (b != null) {
        b = b.state;
        if (b != null) {
            if (b.DA == "previous") if (pui.jm != null) {
                pui.ia = "true";
                pui.tv = true;
                pui.Ld()
            }
            history.forward()
        }
    }
};
pui.render = function (b) {
    if (typeof pui.beforeRender === "function") {
        var a = pui.beforeRender(b);
        if (a) b = a
    }
    if (b.pjsVersion != null) pui.kM = b.pjsVersion;
    if (typeof pui.sA == "undefined") pui.sA = pui.pjsDefaultMode || null;
    pui.pjsDefaultMode = b.pjsDefaultMode ? b.pjsDefaultMode : pui.sA;
    pui.vn = b.nodejs === true;
    pui.qt = null;
    if (b.version != null && pui.version != null && b.version != pui.version) {
        a = null;
        var c = b.version.split("."), d = c.shift();
        c = c.join(".");
        if (b.nodejs) {
            if (pui.version < b.version) a = "Installed copy of Profound.js requires Profound UI client-side Version " +
                d + ", Fix Pack " + c + " or above. Profound UI client-side version is Version " + pui.baseVersion + ", Fix Pack " + pui.fixPackVersion + "."
        } else a = "Profound UI server-side (Version " + d + ", Fix Pack " + c + ") doesn't match client-side JavaScript (Version " + pui.baseVersion + ", Fix Pack " + pui.fixPackVersion + ")";
        a != null && window.console && window.console.error && console.error(a)
    }
    pui.is_old_ie && pui.ie_mode >= 9 ? pui.ya(pui.runtimeContainer, "pui-ie9plus") : pui.La(pui.runtimeContainer, "pui-ie9plus");
    if (pui.J && pui.J.Id == null) pui.J.Id =
        document.getElementById("middle");
    if (!pui.eJ) {
        gc(window, "resize", pui.resize);
        pui.eJ = true
    }
    if (!pui.Yk && !pui.IE && history.pushState != null && history.replaceState != null) if (!(window.parent && window.parent != window && pui.Ul(window.parent) && window.parent.noderun)) {
        history.replaceState({DA: "previous"}, document.title);
        history.pushState({DA: "current"}, document.title);
        gc(window, "popstate", pui.pI);
        pui.IE = true
    }
    window.React || pui.um();
    pui.vg = b;
    a = b.success;
    if (a == null) a = true;
    if (a) if (b.closeTab == true && window.parent != window &&
        pui.jj(window.parent)) window.Atrium.closeTab(); else if (b.noKey == true) {
        pui.skipConfirm = true;
        b = "/profoundui/key";
        if (pui.serverURL != null) b = pui.serverURL + b;
        location.href = b
    } else {
        if (pui.J == null) {
            if (pui["refresh interval"] != null && pui["refresh interval"] > 0 && pui.QA >= pui["refresh interval"]) {
                pui.refresh();
                return
            }
            pui.QA++
        }
        if (b.psid != null) pui.psid = b.psid;
        if (b.appJob != null) {
            pui.secLevel = b.appJob.secLevel;
            if (pui.appJob == null) pui.appJob = {};
            for (e in b.appJob) pui.appJob[e] = b.appJob[e]
        }
        b.message || (pui.layers = b.layers);
        if (b.ctrlJob != null) {
            if (pui.ctrlJob == null) pui.ctrlJob = {};
            for (var e in b.ctrlJob) pui.ctrlJob[e] = b.ctrlJob[e]
        }
        if (pui.pb && !pui.oi) Tb("ipadKeyboard").style.display = "none";
        pui.EE();
        if (pui.handler == null) if (pui["client side timeout"] == true) {
            pui.timeout = b.timeout;
            pui.Kc.start()
        } else pui.zb.Jv();
        pui.Bg = {};
        pui.modified = false;
        pui.ai = {};
        pui.confirmOnClose = true;
        if (pui.isCloud) pui.confirmOnClose = false;
        pui.shutdownOnClose = true;
        pui.Wc = "";
        pui.Oc = {};
        pui.ip = {};
        pui.Sq = {};
        pui.Dr = {};
        pui.or = {};
        pui.Uv = {};
        pui.gc = {};
        pui.ia =
            "false";
        pui.Hn = false;
        pui.activeElement = null;
        pui.tv = false;
        pui.Ds = false;
        e = pui.translate(b);
        e != null && pui.alert(e);
        if (b.message) {
            var f = b.message.format.toLowerCase();
            pui.message = b.message.message;
            pui.Pq();
            pui.qd();
            if (pui.uq && pui.uq[f]) try {
                eval('var message = pui["message"];');
                eval(pui.uq[f])
            } catch (h) {
                pui.qc(h, "Onmessage Error:\n")
            }
        } else if (b.html) {
            b.b.innerHTML = b.html;
            b.b.style.width = "100%";
            if (pui.J && pui.J.Id != null) pui.J.Id.style.width = "100%";
            var g = b.b.getElementsByTagName("script"), l = function (k) {
                var q =
                    g[k];
                if (q != null) if (q.innerHTML) {
                    eval.call(window, q.innerHTML);
                    l(k + 1)
                } else pui.loadJS({
                    path: q.src, callback: function () {
                        l(k + 1)
                    }, onerror: function () {
                        l(k + 1)
                    }
                })
            };
            l(0);
            pui.yd = true;
            pui.aq = true
        } else {
            pui.aq = false;
            if (pui.Yk !== true && pui.$o == null) b.b.style.width = "";
            if (pui.J && pui.J.Id != null) pui.J.Id.style.width = "";
            e = b.layers;
            for (a = 0; a < e.length; a++) pui.kI(e[a].formats);
            if (e.length > 0) {
                a = e[e.length - 1];
                if (a.formats.length > 0) {
                    f = a.formats[a.formats.length - 1];
                    if (pui.yq == null) pui.yq = document.title;
                    a = pui.ab(f.metaData.screen["document title"],
                        f.data, f.ref);
                    if (a != null && a != "") document.title = a; else if (document.title != pui.yq) document.title = pui.yq
                }
            }
            if (pui.wikihelp.overlays != null) for (; pui.wikihelp.overlays.length > 0;) {
                a = pui.wikihelp.overlays.pop();
                a.parentNode != null && typeof a.parentNode.removeChild == "function" && a.parentNode.removeChild(a);
                try {
                    delete a.pui
                } catch (n) {
                }
                a = null
            }
            pui.wikihelp.overlays = [];
            pui.Mr = [];
            for (a = 0; a < e.length; a++) {
                pui.Ua = {};
                pui.Ak = {};
                pui.Xk = {};
                pui.Kk = {};
                pui.Ma = {};
                pui.Wa = {};
                pui.Wa.keys = {};
                pui.gt = false;
                pui.Pa = {};
                pui.ap = {};
                pui.Nr =
                    null;
                pui.Lr = null;
                pui.Dq = true;
                pui.Hr = null;
                pui.jm = null;
                pui.mr = [];
                pui.Lb.record = null;
                pui.Lb.field = null;
                pui.Lb.position = null;
                pui.Lb.row = null;
                pui.Lb.column = null;
                pui.G.record = null;
                pui.G.field = null;
                pui.G.position = null;
                pui.G.st = null;
                pui.G.row = null;
                pui.G.column = null;
                pui.G.Qi = null;
                pui.G.Eh = null;
                pui.G.ug = null;
                pui.kc = [];
                pui.Eo = [];
                pui.kn = [];
                pui.Te = [];
                pui.uq = {};
                d = e[a].formats;
                if (a == 0) {
                    pui.Mf = null;
                    pui.pu = null;
                    var o = pui.qu = null;
                    if (d.length > 0 && d[0].metaData != null && d[0].metaData.screen != null) o = pui.ab(d[0].metaData.screen.animation,
                        d[0].data, d[0].ref);
                    if (b.gk && b.gk.animation) o = b.gk.animation;
                    if (typeof o === "string") {
                        o = o.trim();
                        if (o === "") o = null
                    }
                    if (pui.$o || b.designMode || pui.J != null) o = null;
                    if (o) {
                        pui.qd();
                        c = {
                            b: b.b,
                            ps: o,
                            Lg: pui.ab(d[0].metaData.screen["animated screen"], d[0].data, d[0].ref),
                            Rf: pui.ab(d[0].metaData.screen["overlay screens"], d[0].data, d[0].ref)
                        };
                        if (b.gk && b.gk.animation) {
                            c.Lg = b.gk.screen;
                            c.Rf = b.gk.overlay
                        }
                        b.b = pui.Ao.Jv(c);
                        pui.runtimeContainer = b.b
                    } else {
                        pui.Ao.um();
                        b.b.innerHTML = ""
                    }
                } else {
                    pui.cK(b, e[a]);
                    if (d.length > 0) {
                        f =
                            d[0].metaData.screen["window reference"];
                        if (f != null && f != "" && e[a].metaData != null) {
                            var i = e[a].metaData.items;
                            for (c = 0; c < i.length; c++) {
                                var r = i[c];
                                if (r.id == f && (r["field type"] == "panel" || r["field type"] == "css panel")) {
                                    d[0].metaData.items.push(r);
                                    break
                                }
                            }
                        }
                    }
                }
                pui.og = null;
                i = a == e.length - 1;
                pui.currentFormatNames = [];
                for (c = 0; c < d.length; c++) {
                    f = d[c];
                    f.b = b.b;
                    if (i) {
                        f.Cz = true;
                        pui.sj.load(f)
                    }
                    if (f.active == true) {
                        f.cq = true;
                        pui.og = f.name
                    }
                    pui.Pn(f)
                }
                if (pui.og == null) if (d.length > 0) {
                    c = d.length - 1;
                    d[c].cq = true;
                    pui.og = d[c].name
                } else pui.og =
                    null;
                a > 0 && d.length > 0 && pui.ab(d[0].metaData.screen["center window"], d[0].data, d[0].ref) == "true" && pui.UE();
                pui.Mr.push(b.b)
            }
            if (!pui.og && pui.format) pui.og = pui.format;
            o && pui.Ao.animate();
            if (pui.Pa != null && pui.Pa.dom != null && (!pui.Hn || pui.G.Qi != null || pui.G.Eh != null || pui.Pa.Zj == true)) {
                b = pui.Pa.dom.parentNode;
                b != null && b.parentNode != null && b.parentNode.grid != null && parseInt(pui.Pa.dom.style.top) > parseInt(b.style.height) ? pui.focusOnContainer() : setTimeout(function () {
                        if (pui.Pa.dom != null) if (pui.Pa.dom.tagName == "DIV" ||
                            pui.Pa.dom.style.visibility == "hidden") pui.focusOnContainer(); else if (pui.G.ug == true) pui.focusOnContainer(); else if (pui.G.ug != "no focus on page") try {
                            pui.Pa.dom.focus();
                            if (pui.Pa.dom.tagName != "SELECT" && pui.Pa.dom.type != "checkbox" && pui.Pa.dom.type != "radio") {
                                if (pui.is_old_ie) if (pui.Pa.dom.createTextRange != null) {
                                    pui.Pa.dom.select();
                                    var k = pui.Pa.dom.createTextRange();
                                    if (k != null && k.collapse != null && k.select != null) {
                                        k.collapse();
                                        k.select()
                                    }
                                } else pui.focusOnContainer();
                                pui["highlight on focus"] && pui.Pa.dom.select()
                            }
                        } catch (q) {
                            pui.focusOnContainer()
                        }
                    },
                    1)
            } else if (!pui.Hn && (pui.G.Qi == null || pui.G.Eh == null)) pui.focusOnContainer();
            pui.yd = true;
            pui.xB();
            pui.eA != null && pui.eA.update();
            pui.breakMessagesInit()
        }
    } else {
        document.body.innerHTML = "<h1>Unrecoverable Error</h1> <p>Unrecoverable error <strong>" + b.exception + "</strong> occurred while handling an exception. The original exception id is <strong>" + b.cause + "</strong>.</p> <p>Please contact the server administrator to determine the cause of the problem.";
        pui.yd = true
    }
};
pui.xB = function () {
    for (var b = 0; b < pui.kc.length; b++) {
        var a = pui.kc[b];
        if (a.s != null && !a.$A) {
            a.s.xs != null && typeof a.s.xs == "function" && a.s.xs();
            a.s.ql = true;
            a.s.Md == 1 && a.s.H();
            a.$A = true
        }
    }
};
pui.Pn = function (b) {
    var a = b.designMode;
    if (a == null) a = false;
    var c = b.metaData.screen, d = b.metaData.items, e = b.designer, f = b.data, h = b.name, g = false, l = [], n = {},
        o = b.Yn == null && b.dq == null;
    if (pui.controller != null && c != null) for (var i = "", r = 1, k = "error condition"; c[k + i];) {
        if (pui.ab(c[k + i], f) == "1") {
            i = pui.ab(c["error message" + i], f);
            l.push({msg: i});
            break
        }
        i = " " + ++r
    }
    !a && b.P == null && b.dq == null && pui.currentFormatNames.push(h);
    if (c != null) {
        if (pui.ab(c["show as window"], f, b.ref) == "true") g = true;
        if (c["window reference"] != null &&
            c["window reference"] != "") g = true
    }
    if (!a && o) {
        h = h || pui.format;
        pui.Ma[h] = {};
        var q = pui.handler == null ? h + "." : "";
        r = b.metaData.screen["return cursor record"];
        if (pui.f(r)) {
            if (pui.Lb.record == null) pui.Lb.record = {};
            pui.Lb.record[q + pui.ca(r.fieldName)] = true
        }
        r = b.metaData.screen["return cursor field"];
        if (pui.f(r)) {
            if (pui.Lb.field == null) pui.Lb.field = {};
            pui.Lb.field[q + pui.ca(r.fieldName)] = true
        }
        r = b.metaData.screen["return cursor position"];
        if (pui.f(r)) {
            if (pui.Lb.position == null) pui.Lb.position = {};
            pui.Lb.position[q + pui.ca(r.fieldName)] =
                true
        }
        r = b.metaData.screen["return cursor row"];
        if (pui.f(r)) {
            if (pui.Lb.row == null) pui.Lb.row = {};
            pui.Lb.row[q + pui.ca(r.fieldName)] = true
        }
        r = b.metaData.screen["return cursor column"];
        if (pui.f(r)) {
            if (pui.Lb.column == null) pui.Lb.column = {};
            pui.Lb.column[q + pui.ca(r.fieldName)] = true
        }
        r = b.metaData.screen.changed;
        if (pui.f(r)) pui.ap[h] = q + pui.ca(r.fieldName);
        r = b.metaData.screen["window left"];
        if (pui.f(r)) pui.Lr = q + pui.ca(r.fieldName);
        r = b.metaData.screen["window top"];
        if (pui.f(r)) pui.Nr = q + pui.ca(r.fieldName);
        r = b.metaData.screen["valid command key"];
        if (pui.f(r)) pui.Hr = q + pui.ca(r.fieldName);
        r = b.metaData.screen["back button"];
        if (pui.f(r)) pui.jm = q + pui.ca(r.fieldName);
        r = b.metaData.screen["dd element id"];
        if (pui.f(r)) pui.Oc.bt = q + pui.ca(r.fieldName);
        r = b.metaData.screen["dd record number"];
        if (pui.f(r)) pui.Oc.ct = q + pui.ca(r.fieldName);
        r = b.metaData.screen["target element id"];
        if (pui.f(r)) pui.Oc.Vv = q + pui.ca(r.fieldName);
        r = b.metaData.screen["target record number"];
        if (pui.f(r)) pui.Oc.Wv = q + pui.ca(r.fieldName);
        q = 1;
        for (r = b.metaData.screen["set off"]; pui.f(r);) {
            pui.mr.push(h +
                "." + pui.ca(r.fieldName));
            q++;
            r = b.metaData.screen["set off " + q]
        }
        pui.Lx = pui.ab(c["bypass validation"], f, b.ref);
        pui.G.Qi = pui.ab(c["set cursor row"], f, b.ref);
        pui.G.Eh = pui.ab(c["set cursor column"], f, b.ref);
        pui.G.ug = pui.ab(c["no focus"], f, b.ref);
        if (pui.G.ug == "true") pui.G.ug = true;
        if (pui["no focus"] == "true" || pui["no focus"] == true) pui.G.ug = true;
        if (pui.f(c["set cursor condition"])) {
            r = pui.ab(c["set cursor condition"], f, b.ref);
            if (r != true && r != "true") {
                pui.G.Qi = null;
                pui.G.Eh = null
            }
        }
    }
    if (a) {
        e.i.name = c["record format name"];
        if (e.i.name == null || e.i.name == "") e.i.name = "[Unnamed Screen]";
        for (k in c) {
            var s = c[k];
            e.Ga[e.i.l][k] = s;
            e.Nd[e.i.l][k] = true;
            pui.f(s) && e.D.Tc({
                fieldName: s.fieldName,
                dataType: s.dataType,
                dataLength: s.dataLength,
                decPos: s.decPos,
                refField: s.refField,
                keywords: s.keywords,
                c: "Screen",
                property: k,
                fg: true,
                longName: s.longName
            }, e)
        }
    }
    if (!a && o) if (pui.ab(c["disable enter key"], f, b.ref) == "true") pui.gt = true;
    var t = rc();
    r = [];
    q = [];
    for (var u = [], w = {}, v = 0; v < d.length; v++) if (!(b.hideControlRecord == true && !a && d[v]["field type"] != "grid" &&
        d[v].grid == null && d[v]["cursor row"] != null)) {
        if (!a && b.Yn != null && d[v]["field type"] == "output field" && d[v].visibility == "hidden") {
            var E = parseInt(d[v].top), y = parseInt(d[v].left);
            if (!isNaN(E) && E < 0 && !isNaN(y) && y < 0) continue
        }
        if (!a && d[v]["auto arrange"] == "true") {
            E = d[v].visibility;
            if (E == "hidden" || pui.f(E) && pui.ab(E, f, b.ref) == "hidden") d[v]["shortcut key"] != null && delete d[v]["shortcut key"]
        }
        if (!a && d[v]["shortcut key"] != null) {
            E = d[v].disabled;
            if (E == "true" || pui.f(E) && pui.ab(E, f, b.ref) == "true") delete d[v]["shortcut key"]
        }
        if (d[v]["csv file name"] !=
            null && d[v]["export file name"] == null) d[v]["export file name"] = d[v]["csv file name"];
        y = E = null;
        var F = d[v].grid, D = d[v].layout;
        if (F != null) {
            D = Tb(F);
            if (D != null) {
                E = D.grid;
                y = Number(d[v].column);
                if (d[v].columnId == undefined) d[v].columnId = y;
                if (a) y = E.cells[E.t ? 1 : 0][y]; else if (b.Yn != null) y = E.cells[b.Yn][y]; else {
                    d[v].domEls != null && delete d[v].domEls;
                    E.Za.push(d[v]);
                    continue
                }
            } else if (w[F] != null) {
                I(F);
                continue
            }
        } else if (D != null) {
            var B = Tb(D);
            if (B != null && B.layout != null) {
                y = Number(d[v].container);
                if (w[D] != null) {
                    I(D, y);
                    continue
                } else y = B.layout.Ab[y - 1]
            } else if (w[D] != null) {
                I(D);
                continue
            }
        }
        var I = function (pa, ia) {
            var m;
            if (w[pa].root != null && w[pa].b != null) {
                m = w[pa].root;
                ia = w[pa].b
            } else m = w[pa];
            m.CF(ia - 1, d[v]);
            if (d[v]["field type"] == "layout" || d[v]["field type"] == "grid") w[d[v].id] = {root: m, b: ia}
        };
        if (y == null) y = a ? e.b : b.b;
        var z;
        if (!a && b.P != null && d[v].domEls != null && d[v].domEls[b.P - 1] != null) {
            z = d[v].domEls[b.P - 1];
            if (y != null) {
                y.appendChild(z);
                if (z.rl == true) {
                    z.style.display = "";
                    z.rl = false
                }
                if (z.calimg != null) {
                    y.appendChild(z.calimg);
                    z.calimg.bA && pui.rn(z);
                    if (z.calimg.rl) {
                        z.calimg.style.display = "";
                        z.calimg.rl = false
                    }
                }
                if (z.cg != null) for (D = 0; D < z.cg.length; D++) {
                    y.appendChild(z.cg[D]);
                    if (z.cg[D].rl == true) {
                        z.cg[D].style.display = "";
                        z.cg[D].rl = false
                    }
                }
                if (z.Op === true) {
                    pui.DF(z);
                    z.Op = false
                }
                if (b.Ya != null && b.Ya.text != "" && String(d[v].column) === String(b.Ya.col)) if (z.tagName == "DIV") {
                    pui.Np(z, b.Ya.text);
                    z.Op = true
                }
            }
        } else {
            z = document.createElement("div");
            z.style.position = "absolute";
            var H = d[v].left;
            D = d[v].top;
            if (pui.f(H)) H = "0px";
            if (pui.f(D)) D = "0px";
            if (H == "NaNpx") H = "0px";
            if (D == "NaNpx") D = "0px";
            if (d[v].left != null) z.style.left = H;
            if (d[v].top != null) z.style.top = D;
            if (!a && d[v]["parent tab panel"] != null && d[v]["parent tab panel"] != "") z.style.visibility = "hidden";
            if (y != null) d[v].kH != null ? y.insertBefore(z, d[v].kH) : y.appendChild(z);
            H = {};
            D = null;
            if (a) {
                D = e.addItem(z, true);
                D.properties = H;
                D.properties.newitem = "true";
                D.m.newitem = true;
                B = d[v]["field type"];
                if (B == "styled button" || B == "panel" || B == "css panel" || B == "css button" || B == "Layout") D.dom.style.borderStyle = "none"
            }
            var J =
                B = null;
            for (var K in d[v]) if (K != "domEls") {
                s = d[v][K];
                if (pui.f(s)) if (a) {
                    e.D.Tc({
                        fieldName: s.fieldName,
                        dataType: s.dataType,
                        dataLength: s.dataLength,
                        decPos: s.decPos,
                        refField: s.refField,
                        keywords: s.keywords,
                        c: D,
                        property: K,
                        fg: true,
                        longName: s.longName
                    }, e);
                    i = s
                } else {
                    if (pui.CH(K)) z.Vt = true;
                    if (s.longName && s.fieldName) if (!s.lowerCaseField && pui.handler == null) {
                        pui.yi[pui.ca(s.longName)] = pui.ca(s.fieldName);
                        pui.yi[pui.ca(s.fieldName)] = pui.ca(s.longName)
                    } else {
                        pui.yi[s.longName] = s.fieldName;
                        pui.yi[s.fieldName] = s.longName
                    }
                    if (K ==
                        "row background" && d[v]["field type"] == "grid") i = ""; else {
                        i = pui.ab(s, f, b.ref);
                        if ((K == "range low" || K == "range high") && s.dataType == "date") {
                            var L = s.dateFormat, N;
                            s.dateFormat = "Y-m-d";
                            N = pui.ab(s, f, b.ref);
                            s.dateFormat = L;
                            if (K == "range low") B = N; else J = N
                        }
                    }
                    if (K == "value" || K == "html") {
                        z.nf = h;
                        z.Rg = pui.ca(s.fieldName);
                        if (z.pui == null) z.pui = {};
                        z.pui.formatName = h;
                        z.pui.fieldName = z.Rg;
                        if (d[v]["field type"] == "textbox") {
                            L = pui.ab(d[v]["choices database file"], f, b.ref);
                            if (L != null && L != "") {
                                L = pui.ab(d[v]["choice options field"],
                                    f, b.ref);
                                var O;
                                if (L != null) O = pui.Ta(L)[0];
                                L = pui.ab(d[v]["choice values field"], f, b.ref);
                                if (O != null && O != "" && L != null && L != "" && O != L) {
                                    s.formatting = "Text";
                                    s.wi = null;
                                    s.maxLength = null
                                }
                            }
                        }
                    }
                    if (K == "cursor record number") pui.ip[(pui.handler == null ? h + "." : "") + pui.ca(s.fieldName)] = z; else if (K == "subfile return rrn") pui.Sq[(pui.handler == null ? h + "." : "") + pui.ca(s.fieldName)] = z; else if (K == "return mode") pui.or[(pui.handler == null ? h + "." : "") + pui.ca(s.fieldName)] = z; else if (K == "column sort response") z.kj = (pui.handler == null ? h +
                        "." : "") + pui.ca(s.fieldName); else if (K == "field name sort response") z.ei = (pui.handler == null ? h + "." : "") + pui.ca(s.fieldName); else if (K == "filter response") z.ky = (pui.handler == null ? h + "." : "") + pui.ca(s.fieldName); else if (K == "subfile changed") pui.Uv[H["record format name"].toLowerCase()] = pui.ca(s.fieldName);
                    if (K == "column sort response" || K == "field name sort response") if (pui.f(d[v]["return sort order"])) z.xl = (pui.handler == null ? h + "." : "") + pui.ca(d[v]["return sort order"].fieldName)
                } else {
                    if (!a && y != null && y.ze) {
                        if (y.NB ==
                            null) y.NB = "";
                        if (K == "id" || K == "top" || K == "left") y.NB += s
                    }
                    i = s;
                    if ((K == "range low" || K == "range high") && d[v].value && d[v].value.dataType == "date") {
                        L = d[v].value;
                        N = {};
                        N.dataType = L.dataType;
                        N.dateFormat = L.dateFormat;
                        N.formatting = L.formatting;
                        N.locale = L.locale;
                        N.value = i;
                        N.yh = true;
                        N = pui.Oe.format(N);
                        if (K == "range low") B = N; else J = N
                    }
                }
                H[K] = i
            }
            if (H["field type"] == "tab panel" || H["field type"] == "layout" && H.template == "tab panel") {
                i = H.id;
                r.push(i);
                Hc[i] != null ? q.push(Hc[i]) : q.push(hc(H["active tab"], "", z))
            }
            for (k in H) {
                i = z.ff ==
                null ? pui.Ye(t, k) : pui.Ye(z.ff, k);
                if (i != null) {
                    s = H[k];
                    if (!a) {
                        N = d[v][k];
                        if (pui.f(N)) {
                            N.revert = false;
                            if (pui.is_touch && !pui.is_mouse_capable && k == "value" && H["field type"] == "textbox" && N.formatting == "Number") if (N.numSep != "true" && N.numBlankFill != "true" && N.negNum != "(999.00)" && N.negNum != "999.00-" && N.negNum != "999.00 CR" && (!N.edtWrd || N.edtWrd == "") && (!N.edtMsk || N.edtMsk == "") && (!N.curSym || N.curSym == "") && (!N.units || N.units == "")) {
                                z.type = "number";
                                N.maxLength > 0 && gc(z, "textInput", function (pa) {
                                    var ia = vb(pa);
                                    if (!(ia == null ||
                                        ia.value == null)) if (pa.data == "-" && ia.validity != null && (ia.value != "" && ia.validity.valid || !ia.validity.valid)) yb(pa); else ia.maxLength > 0 && ia.value.length >= ia.maxLength && yb(pa)
                                })
                            }
                            if (k == "changed") {
                                L = pui.ca(N.fieldName);
                                var V = h + "." + L;
                                if (pui.handler != null) V = L;
                                if (b.P != null) V += "." + b.P;
                                if (pui.Ak[V] == null) pui.Ak[V] = [];
                                pui.Ak[V].push(z)
                            }
                            if (k == "is blank") {
                                L = pui.ca(N.fieldName);
                                V = h + "." + L;
                                if (pui.handler != null) V = L;
                                if (b.P != null) V += "." + b.P;
                                if (pui.Xk[V] == null) pui.Xk[V] = [];
                                pui.Xk[V].push(z)
                            }
                            if (k == "dup key response" &&
                                H["allow dup key"] == "true") {
                                L = pui.ca(N.fieldName);
                                V = h + "." + L;
                                if (pui.handler != null) V = L;
                                if (b.P != null) V += "." + b.P;
                                if (pui.Kk[V] == null) pui.Kk[V] = [];
                                pui.Kk[V].push(z)
                            }
                            if (pui.tz(k, z)) {
                                L = pui.ca(N.fieldName);
                                V = h + "." + L;
                                if (pui.handler != null) V = L;
                                if (b.P != null) V += "." + b.P;
                                if (k == "radio button group") {
                                    L = L;
                                    if (b.P != null) L += "." + b.P;
                                    z.name = L;
                                    if (pui.is_old_ie) {
                                        var X;
                                        try {
                                            X = document.createElement('<input name="' + L + '" type="radio">')
                                        } catch (ga) {
                                            X = document.createElement("input");
                                            X.name = L;
                                            X.type = "radio"
                                        }
                                        X.style.position = z.style.position;
                                        X.style.left = z.style.left;
                                        X.style.top = z.style.top;
                                        X.style.visibility = z.style.visibility;
                                        X.style.display = z.style.display;
                                        X.id = z.id;
                                        X.value = z.value;
                                        X.cg = z.cg;
                                        X.ng = z.ng;
                                        X.modified = z.modified;
                                        X.disabled = z.disabled;
                                        z.parentNode.replaceChild(X, z);
                                        X.checked = z.checked;
                                        X.Jb = z.Jb;
                                        X.Yc = z.Yc;
                                        X.onblur = z.onblur;
                                        X.onchange = z.onchange;
                                        X.Iu = z.Iu;
                                        X.onclick = z.onclick;
                                        X.ondblclick = z.ondblclick;
                                        X.onfocus = z.onfocus;
                                        X.onkeydown = z.onkeydown;
                                        X.onkeypress = z.onkeypress;
                                        X.onkeyup = z.onkeyup;
                                        X.onmousedown = z.onmousedown;
                                        X.onmousemove =
                                            z.onmousemove;
                                        X.onmouseout = z.onmouseout;
                                        X.onmouseover = z.onmouseover;
                                        X.onmouseup = z.onmouseup;
                                        X.pui = z.pui;
                                        z = X
                                    }
                                    z.radioValue = H.value
                                }
                                if (pui.Ua[V] == null) pui.Ua[V] = [];
                                if (pui.Ua[V][0] != null && pui.Ua[V][0].qn) {
                                    pui.Ua[V] = [];
                                    z.modified = true;
                                    pui.modified = true
                                }
                                if (k == "page down response") {
                                    pui.Ua[V].push(z.grid.A.gb);
                                    pui.Ua[V].push(z.grid.A.hb)
                                } else if (k == "page up response") {
                                    pui.Ua[V].push(z.grid.A.yb);
                                    pui.Ua[V].push(z.grid.A.ib)
                                } else pui.Ua[V].push(z);
                                if (k == "menu response") z.Fa = "";
                                if (k == "upload response") z.fileUpload.EI =
                                    V;
                                if (k == "chart response") z.Fa = "";
                                if (k == "tab response") z.fr = true;
                                if (k == "active tab") z.er = true;
                                if (k == "response") {
                                    L = H["shortcut key"];
                                    if (L != null && L != "") {
                                        if (pui.Ma[h] == null) pui.Ma[h] = {};
                                        if (pui.Ma[h][L] == null) pui.Ma[h][L] = [];
                                        pui.Ma[h][L].push(z);
                                        z.Wf = L
                                    }
                                    if (F == null) z.Fa = "0";
                                    if (H.onclick == null || H.onclick == "") pui.fj(z)
                                }
                                if (k == "page down response") {
                                    if (pui.Ma[h].PageDown == null) pui.Ma[h].PageDown = [];
                                    pui.Ma[h].PageDown.push(z.grid.A.hb);
                                    pui.fj(z.grid.A.gb);
                                    pui.fj(z.grid.A.hb);
                                    z.grid.A.gb.sa = N;
                                    z.grid.A.hb.sa = N
                                }
                                if (k ==
                                    "page up response") {
                                    if (pui.Ma[h].PageUp == null) pui.Ma[h].PageUp = [];
                                    pui.Ma[h].PageUp.push(z.grid.A.ib);
                                    pui.fj(z.grid.A.yb);
                                    pui.fj(z.grid.A.ib);
                                    z.grid.A.yb.sa = N;
                                    z.grid.A.ib.sa = N
                                }
                                z.sa = N
                            }
                        }
                        if (k == "selection field" && H["field type"] == "grid") if (pui.f(d[v]["selection field"])) z.grid.gd = d[v]["selection field"];
                        if (k == "row font color" && H["field type"] == "grid") if (pui.f(d[v][k])) z.grid.Vq = d[v][k];
                        if (k == "row background" && H["field type"] == "grid") if (pui.f(d[v][k])) z.grid.Wn = d[v][k];
                        if (k == "shortcut key" && s != null && s !=
                            "" && !pui.f(d[v].response)) {
                            if (pui.Ma[h] == null) pui.Ma[h] = {};
                            if (pui.Ma[h][s] == null) pui.Ma[h][s] = [];
                            pui.Ma[h][s].push(z);
                            z.Wf = s;
                            if (F == null) z.Fa = "0";
                            if (H.onclick == null || H.onclick == "") pui.fj(z)
                        }
                        if (k == "id" && b.P != null) {
                            s += "." + b.P;
                            H[k] = s
                        }
                        if (k == "set focus" && s == "true") if (pui.Pa.dom == null || pui.Pa.Zj != true) if (H.visibility != "hidden") {
                            pui.Pa.dom = z;
                            if (z.comboBoxWidget != null) pui.Pa.dom = z.comboBoxWidget.getBox();
                            pui.Pa.Zj = true
                        }
                        if (k == "focus class" && !pui.f(s) && Zb(s) != "") if (z.pui.properties["field type"] === "combo box") {
                            L =
                                z.comboBoxWidget.getBox();
                            L.focusClass = Zb(s);
                            gc(L, "focus", pui.Qo);
                            gc(L, "blur", pui.Lq)
                        } else {
                            z.focusClass = Zb(s);
                            gc(z, "focus", pui.Qo);
                            gc(z, "blur", pui.Lq)
                        }
                        if (k == "required" && s == "true") z.EA = true;
                        if (k == "mandatory entry" && s == "true") z.tw = true;
                        if (k == "mandatory fill" && s == "true") z.uw = true;
                        if (k == "valid values" && s != null && s != "") z.Yv = s;
                        if (k == "allow blanks" && s == "true") z.uk = true;
                        if (k == "auto advance" && s == "true") {
                            var U = z;
                            if (z.comboBoxWidget != null) U = z.comboBoxWidget.getBox();
                            U.gj = true;
                            gc(U, "keyup", pui.ys)
                        }
                        k == "allow dup key" &&
                        s == "true" && gc(z, "keydown", pui.JF);
                        L = false;
                        if ((pui["always allow field exit"] == true || pui["always allow field exit"] == "true") && (H["field type"] == "combo box" || H["field type"] == "date field" || H["field type"] == "spinner" || H["field type"] == "textbox")) L = true;
                        if (k == "allow field exit" && s == "true") L = true;
                        if (L == true) {
                            U = z;
                            if (z.comboBoxWidget != null) U = z.comboBoxWidget.getBox();
                            if (pui.f(d[v].value) && d[v].value.rjZeroFill == "true") {
                                z.WA = true;
                                U.WA = true
                            }
                            gc(U, "keydown", function (pa) {
                                pa = pa || window.event;
                                if (pa.keyCode == pui["field exit key"] &&
                                    !pa.shiftKey && (pui["field exit key"] == 17 || !pa.ctrlKey)) {
                                    var ia = vb(pa);
                                    pui.xr(ia);
                                    if (pui.Rx(ia) == false) {
                                        yb(pa);
                                        return false
                                    }
                                }
                            })
                        }
                        if (k == "validate name" && s == "true") z.wa = true;
                        if (k == "validate email" && s == "true") z.validateEmail = true;
                        if (k == "set as modified" && s == "true") {
                            z.modified = true;
                            pui.modified = true;
                            if (b.P == null) pui.ai[h] = true
                        }
                        if (k.length >= 11 && k.substr(0, 11) == "blank value" && s != null && s != "") {
                            if (z.lm == null) z.lm = [];
                            z.lm.push(s);
                            L = z;
                            if (z.comboBoxWidget != null) L = z.comboBoxWidget.getBox();
                            if ((L.tagName == "DIV" ?
                                tc(L) : L.value) == s) if (L.tagName == "DIV") L.innerHTML = ""; else L.value = ""
                        }
                        if (k == "comparison operator" && s != null && s != "") z.Ts = s;
                        if (k == "comparison value" && s != null && s != "") z.Us = s;
                        if (k == "range low" && s != null && s != "") {
                            z.pl = s;
                            if (B != null) z.GI = B
                        }
                        if (k == "range high" && s != null && s != "") {
                            z.ol = s;
                            if (J != null) z.FI = J
                        }
                        if (k == "checked value") z.pe = s;
                        if (k == "unchecked value") z.Gg = s;
                        if (k == "cursor row") z.Bm = s;
                        if (k == "cursor column") z.Gk = s;
                        if (k == "bypass validation") z.ia = s;
                        if (k == "auto arrange" && s == "true") if (b.cq != true) {
                            z.style.display = "none";
                            z.style.visibility = "hidden";
                            z.removeAttribute("id")
                        } else if (H.visibility != "hidden") {
                            L = H["shortcut key"];
                            if (pui.Wa.keys[L] == true) {
                                z.style.display = "none";
                                z.style.visibility = "hidden"
                            } else {
                                if (L != null) pui.Wa.keys[L] = true;
                                if (g || pui["horizontal auto arrange"]) {
                                    if (pui.Wa.top == null) pui.Wa.top = parseInt(z.style.top);
                                    if (pui.Wa.left == null) {
                                        pui.Wa.left = parseInt(z.style.left);
                                        pui.Wa.Jc = parseInt(z.style.left)
                                    } else if (pui["horizontal auto arrange"]) {
                                        if (pui.Wa.Vo == null) pui.Wa.Vo = 0;
                                        if (pui.Wa.Rb == null) pui.Wa.Rb = parseInt(z.style.top);
                                        pui.Wa.Vo++;
                                        pui.Wa.left = pui.Wa.Jc + pui.Wa.Vo % pui["buttons per row"] * pui["horizontal button spacing"];
                                        pui.Wa.top = pui.Wa.Rb + Math.floor(pui.Wa.Vo / pui["buttons per row"]) * pui["vertical button spacing"]
                                    } else if (pui.Wa.wA != null && Math.abs(parseInt(z.style.top) - pui.Wa.wA) > 5) pui.Wa.left = pui.Wa.Jc; else pui.Wa.left += pui["horizontal button spacing"];
                                    z.style.left = pui.Wa.left + "px";
                                    pui.Wa.wA = parseInt(z.style.top);
                                    if (pui["horizontal auto arrange"]) z.style.top = pui.Wa.top + "px"
                                } else {
                                    if (pui.Wa.top == null) pui.Wa.top = parseInt(z.style.top);
                                    else pui.Wa.top += pui["vertical button spacing"];
                                    z.style.top = pui.Wa.top + "px"
                                }
                            }
                        }
                        if (k == "allow drag" && s == "true") {
                            if ((H.cursor == null || H.cursor == "") && !pui.pb) z.style.cursor = "move";
                            pui.zE(z, H)
                        }
                    }
                    if (!a && k == "visibility" && H["parent tab panel"] != null && H["parent tab panel"] != "") s = "hidden";
                    if (s != null && s != "") {
                        L = H;
                        if (a) L = D.properties;
                        z = uc(i, L, z, s, a, D, null, b.P)
                    }
                    if (!a && k == "visibility" && s == "visible" && b.Yn != null) z.style.visibility = ""
                }
                if (b.Ya != null && b.Ya.text != "" && String(H.column) === String(b.Ya.col)) if (z.tagName == "DIV") {
                    pui.Np(z,
                        b.Ya.text);
                    z.Op = true
                }
                if (pui.controller != null && k.indexOf("error condition") == 0 && s == "1" && !n[z.id]) {
                    i = "";
                    if (k.length > 15) i = " " + parseInt(k.substr(15), 10);
                    i = H["error message" + i];
                    l.push({id: z.id, msg: i});
                    n[z.id] = true
                }
            }
            if (pui["auto tab"] == true && H["prevent auto tab"] != "true") if (H["field type"] == "combo box" || H["field type"] == "date field" || H["field type"] == "spinner" || H["field type"] == "textbox" || H["field type"] == "password field") {
                U = z;
                if (z.comboBoxWidget != null) U = z.comboBoxWidget.getBox();
                gc(U, "keyup", function (pa) {
                    pa =
                        pa || window.event;
                    var ia = vb(pa), m = true, La = pa.keyCode;
                    if (La < 48 || La > 90 && La < 96 || La > 111 && La < 186) if (La != 32) m = false;
                    La = ia;
                    if (La.comboBoxWidget != null) La = La.comboBoxWidget.getBox();
                    if (m && La.value.length == La.maxLength && (pui.is_touch || Sb(La) >= La.maxLength)) {
                        pui.St(ia);
                        yb(pa);
                        return false
                    }
                })
            }
            if (pui["enable arrow keys"] == true) if (H["field type"] == "combo box" || H["field type"] == "date field" || H["field type"] == "spinner" || H["field type"] == "textbox" || H["field type"] == "password field" || H["field type"] == "checkbox") {
                U =
                    z;
                if (z.comboBoxWidget != null) U = z.comboBoxWidget.getBox();
                gc(U, "keydown", function (pa) {
                    pa = pa || window.event;
                    var ia = vb(pa);
                    if (!(ia.Qe && ia.Qe.dn())) {
                        var m = pa.keyCode, La = ia;
                        if (La.comboBoxWidget != null) La = La.comboBoxWidget.getBox();
                        if (m == 37) if (Sb(La) <= 0) {
                            pui.Hp(ia, "left");
                            yb(pa);
                            return false
                        }
                        if (m == 38) {
                            pui.Hp(ia, "up");
                            yb(pa);
                            return false
                        }
                        if (m == 39) if (Sb(La) >= La.value.length) {
                            pui.Hp(ia, "right");
                            yb(pa);
                            return false
                        }
                        if (m == 40) {
                            pui.Hp(ia, "down");
                            yb(pa);
                            return false
                        }
                    }
                })
            }
            if (!a && H.visibility != "hidden" && pui.G.Qi != null &&
                pui.G.Qi != "" && pui.G.Eh != null && pui.G.Eh != "") {
                F = H["cursor row"];
                if (z.parentNode && z.parentNode.parentNode && z.parentNode.parentNode.grid) {
                    F = parseInt(F, 10);
                    F += z.parentNode.parentNode.grid.t ? z.parentNode.row - 1 : z.parentNode.row;
                    F = "" + F
                }
                if (pui.G.Qi == F) {
                    F = false;
                    if (pui.G.Eh == H["cursor column"]) F = true;
                    if (!F) if (H["field type"] == "textbox" || H["field type"] == "date field" || H["field type"] == "password field" || H["field type"] == "combox box" || H["field type"] == "spinner") {
                        B = d[v].value;
                        if (B != null && pui.f(B) && B.dataLength !=
                            null) {
                            B = Number(B.dataLength);
                            J = Number(H["cursor column"]);
                            i = Number(pui.G.Eh);
                            if (!isNaN(B) && !isNaN(J) && !isNaN(i)) if (i > J && i < J + B) F = true
                        }
                    }
                    if (F) {
                        pui.Pa.dom = z;
                        if (z.comboBoxWidget != null) pui.Pa.dom = z.comboBoxWidget.getBox();
                        pui.Pa.Zj = true
                    }
                }
            }
            if (!a) {
                var Z = function (pa) {
                    pui.ko(pa, h)
                };
                if (window.React && z.sa) {
                    if (z.pui == null) z.pui = {};
                    z.pui.data = f;
                    if (b.Wy) z.pui.data = b.Wy;
                    z.pui.Cm = z.sa.fieldName
                }
                if (z.comboBoxWidget != null || z.tagName == "TEXTAREA" || z.tagName == "INPUT" && (pui.vi(z) || z.type == "file")) {
                    U = z;
                    if (z.comboBoxWidget !=
                        null) {
                        z.comboBoxWidget.formatName = h;
                        U = z.comboBoxWidget.getBox()
                    }
                    if (z.sa != null && z.sa.maxLength != null) {
                        U.maxLength = z.sa.maxLength;
                        if (z.tagName == "TEXTAREA") {
                            gc(z, "keyup", function (pa) {
                                pa = vb(pa);
                                var ia = Number(pa.maxLength);
                                if (!isNaN(ia) && ia > 0 && pa.value != null && pa.value.length > ia) pa.value = pa.value.substr(0, ia)
                            });
                            gc(z, "paste", function (pa) {
                                var ia = vb(pa);
                                setTimeout(function () {
                                    var m = Number(ia.maxLength);
                                    if (!isNaN(m) && m > 0 && ia.value != null && ia.value.length > m) ia.value = ia.value.substr(0, m)
                                }, 0)
                            });
                            gc(z, "keydown", function (pa) {
                                pa =
                                    pa || window.event;
                                var ia = pa.keyCode;
                                if (ia >= 48 && ia <= 57 || ia >= 65 && ia <= 90 || ia == 32 || ia >= 106 && ia <= 111 || ia >= 186 && ia <= 192 || ia >= 219 && ia <= 222) {
                                    ia = vb(pa);
                                    var m = Number(ia.maxLength);
                                    if (!isNaN(m) && m > 0 && ia.value != null && ia.value.length == m) {
                                        yb(pa);
                                        return false
                                    }
                                }
                            })
                        }
                    }
                    if (z.nf != null || z.Rg != null || z.Bm != null || z.Gk != null) {
                        gc(U, "focus", pui.xh);
                        gc(U, "keyup", pui.xh)
                    }
                    gc(U, "focus", pui.eo);
                    gc(U, "keydown", pui.eo);
                    gc(U, "change", Z);
                    gc(U, "paste", Z);
                    U.at = 0;
                    gc(U, "mouseup", pui.Tv);
                    gc(U, "mousedown", pui.Tv);
                    gc(U, "keyup", pui.Tv);
                    pui.is_touch &&
                    gc(U, "click", function (pa) {
                        pa.srcElement.Az = true;
                        setTimeout(function (ia) {
                            delete ia.Az
                        }, 1E3, pa.srcElement)
                    });
                    gc(U, "keydown", function (pa) {
                        pa = pa || window.event;
                        var ia = pa.keyCode;
                        ia >= 9 && ia <= 45 && ia != 32 || ia >= 112 && ia <= 145 || pa.ctrlKey && ia != 88 && ia != 86 || Z(pa)
                    });
                    z.sa && z.sa.wi && function () {
                        var pa = z.sa.wi;
                        gc(U, "keypress", function (ia) {
                            ia = ia || window.event;
                            pui.wi(ia, pa)
                        });
                        z.type == "number" && z.sa.noExtraSpaces && gc(U, "textInput", function (ia) {
                            ia = ia || window.event;
                            pa.test(ia.data) || yb(ia)
                        })
                    }();
                    if (z.sa != null && z.sa.edtMsk !=
                        null && z.sa.edtMsk != "") {
                        gc(U, "keyup", function (pa) {
                            pui.ss(vb(pa), pa)
                        });
                        gc(U, "keydown", function (pa) {
                            pa = pa || window.event;
                            var ia = pa.keyCode, m = vb(pa), La = null;
                            if (ia == 46 || ia == 8 || ia == 32) {
                                var Ta = false;
                                if (typeof m.selectionStart == "number") Ta = m.selectionStart == 0 && m.selectionEnd == m.value.length; else if (typeof document.selection != "undefined") Ta = document.selection.createRange().text == m.value;
                                if (Ta) {
                                    m.value = "";
                                    return
                                }
                            }
                            if (ia >= 48 && ia <= 57) La = ia - 48;
                            if (ia >= 96 && ia <= 105) La = ia - 96;
                            if (ia == 46) La = 0;
                            if (ia == 8) La = 0;
                            if (La != null) {
                                m =
                                    vb(pa);
                                Ta = m.value;
                                if (Ta != null) {
                                    var Wa = Sb(m);
                                    if (ia == 8 && Wa > 0) Wa -= 1;
                                    m.value = Ta.substr(0, Wa) + String(La) + Ta.substr(Wa + 1);
                                    ia != 46 && ia != 8 && Wa++;
                                    yb(pa);
                                    pui.ss(m, pa, Wa);
                                    if (pui.is_old_ie) try {
                                        pa.keyCode = 0
                                    } catch (kb) {
                                    }
                                    return false
                                }
                            }
                        });
                        pui.ss(U)
                    }
                }
                z.tagName == "SELECT" && gc(z, "keydown", function (pa) {
                    pa = pa || window.event;
                    var ia = pa.keyCode;
                    if (ia == 38 || ia == 40) Z(pa)
                });
                if (z.tagName == "SELECT" || z.tagName == "INPUT" && (z.type == "checkbox" || z.type == "radio")) {
                    if (z.nf != null || z.Rg != null || z.Bm != null || z.Gk != null) {
                        gc(z, "focus", pui.xh);
                        gc(z,
                            "keyup", pui.xh)
                    }
                    gc(z, "focus", pui.eo);
                    gc(z, "keydown", pui.eo);
                    gc(z, "change", Z);
                    if (z.tagName != "SELECT") gc(z, "click", Z); else {
                        gc(z, "keydown", function (pa) {
                            if (!pa) pa = window.event;
                            if (pa.keyCode == 34) {
                                pa.cancel = true;
                                pa.preventDefault && pa.preventDefault();
                                return false
                            }
                        });
                        b.P > 0 && pui.is_firefox && gc(z, "keydown", function (pa) {
                            pa = pa || window.event;
                            if (pa.keyCode == 33 || pa.keyCode == 34) yb(pa)
                        })
                    }
                }
                if (z.nf != null || z.Rg != null || z.Bm != null || z.Gk != null) gc(z, "click", pui.xh);
                gc(z, "click", pui.eo)
            }
            if (!a && !pui.pb && pui.Pa.dom == null &&
                !z.disabled && !z.readOnly && H.visibility != "hidden") {
                if (z.tagName == "INPUT") if (pui.vi(z) || z.type == "checkbox" || z.type == "radio" || z.type == "file") pui.Pa.dom = z;
                if (z.tagName == "TEXTAREA" || z.tagName == "SELECT") pui.Pa.dom = z;
                if (z.comboBoxWidget != null) pui.Pa.dom = z.comboBoxWidget.getBox()
            }
            a && H["field type"] == "grid" && e.kb.push(D);
            a && H["field type"] == "layout" && e.Nf.push(D);
            B = H["field type"];
            if (B != null) {
                F = pui.widgets[B];
                F != null && F.initialize != null && F.initialize({design: a, properties: H, dom: z, c: D})
            }
            if (!a && H["field type"] ==
                "layout") {
                pui.kn.push(z.layout);
                if (H["lazy load"] == "true" && typeof z.layout.YA == "function") {
                    w[H.id] = z.layout;
                    z.layout.YA(b)
                }
            }
            if (!a && H["field type"] == "grid") {
                D = b.subfiles;
                var la, Y, oa, qa, ma;
                F = pui.Wb(H["record format name"]);
                if (D != null) la = D[F];
                if (la != null) Y = la.data;
                if (la != null) oa = la["field names"];
                if (la != null) qa = la.ref;
                if (la != null) ma = la.errors;
                z.grid.wt = b.fileId;
                if (typeof pui.view != "undefined") z.grid.vo = "pui-grid-" + pui.view; else if (typeof b.file != "undefined" && typeof b.library != "undefined") z.grid.vo = "pui-grid-" +
                    b.library + "-" + b.file + "-" + F;
                z.grid.dataArray = Y != null ? Y : [];
                z.grid.eb = oa != null ? oa : [];
                if (pui.handler != null && Y == null) {
                    (Y = f[pui.Wb(H["record format name"])]) || (Y = []);
                    oa = [];
                    la = [];
                    oa = {};
                    for (D = 0; D < d.length; D++) {
                        F = d[D];
                        if (F.grid === H.id) for (var ka in F) {
                            B = F[ka];
                            if (pui.f(B)) oa[B.fieldName] = true
                        }
                    }
                    oa = Object.keys(oa);
                    for (D = 0; D < Y.length; D++) {
                        F = [];
                        B = Y[D];
                        for (J = 0; J < oa.length; J++) {
                            L = oa[J];
                            F.push(B[L])
                        }
                        la.push(F)
                    }
                    z.grid.dataArray = la;
                    z.grid.eb = oa;
                    z.grid.Xy = Y;
                    la = {}
                }
                z.grid.ref = qa != null ? qa : {};
                if (ma != null) z.grid.errors = ma;
                D = d[v]["subfile message key"];
                F = d[v]["subfile program message queue"];
                B = d[v]["subfile control program message queue"];
                if (D != null && D != "" && F != null && F != "" || B != null && B != "") {
                    if (z.grid.s != null) z.grid.s.pM = "Message";
                    z.grid.Za.push({
                        id: "_msgsfltext",
                        column: "0",
                        "field type": "output field",
                        grid: H.id,
                        left: "5px",
                        top: "5px",
                        cursor: "pointer",
                        onclick: "pui.showMessageSubfileHelp(this);",
                        value: {
                            dataLength: "132",
                            dataType: "char",
                            fieldName: "text",
                            formatting: "Text",
                            textTransform: "none",
                            trimLeading: "false",
                            trimTrailing: "true",
                            lowerCaseField: true
                        }
                    });
                    z.grid.Za.push({
                        id: "_msgsflhelp",
                        column: "0",
                        "field type": "output field",
                        grid: H.id,
                        left: "0px",
                        top: "0px",
                        visibility: "hidden",
                        value: {
                            dataLength: "9999",
                            dataType: "char",
                            fieldName: "help",
                            formatting: "Text",
                            textTransform: "none",
                            trimLeading: "false",
                            trimTrailing: "true",
                            lowerCaseField: true
                        }
                    });
                    z.grid.Za.push({
                        id: "_msgsflid",
                        column: "0",
                        "field type": "output field",
                        grid: H.id,
                        left: "0px",
                        top: "0px",
                        visibility: "hidden",
                        value: {
                            dataLength: "7",
                            dataType: "char",
                            fieldName: "id",
                            formatting: "Text",
                            textTransform: "none",
                            trimLeading: "false",
                            trimTrailing: "true",
                            lowerCaseField: true
                        }
                    });
                    z.grid.Za.push({
                        id: "_msgsfldate",
                        column: "0",
                        "field type": "output field",
                        grid: H.id,
                        left: "0px",
                        top: "0px",
                        visibility: "hidden",
                        value: {
                            dataLength: "7",
                            dataType: "char",
                            fieldName: "date",
                            formatting: "Text",
                            textTransform: "none",
                            trimLeading: "false",
                            trimTrailing: "true",
                            lowerCaseField: true
                        }
                    });
                    z.grid.Za.push({
                        id: "_msgsfltime",
                        column: "0",
                        "field type": "output field",
                        grid: H.id,
                        left: "0px",
                        top: "0px",
                        visibility: "hidden",
                        value: {
                            dataLength: "6",
                            dataType: "char",
                            fieldName: "time",
                            formatting: "Text",
                            textTransform: "none",
                            trimLeading: "false",
                            trimTrailing: "true",
                            lowerCaseField: true
                        }
                    })
                }
                if (z.grid.dataArray.length == 0) if (pui.f(d[v]["subfile message key"]) || pui.f(d[v]["subfile program message queue"])) z.grid.au();
                la == null && z.grid.au();
                D = Number(H["subfile record number"]);
                z.grid.pr = D;
                if (isNaN(D)) {
                    D = 1;
                    z.grid.pr = 0
                }
                if (D < 1 || D > 9999) {
                    D = 1;
                    z.grid.pr = 0
                }
                if (H["position at top"] != "true") {
                    F = z.grid.cells.length;
                    if (z.grid.t) F -= 1;
                    if (z.grid.rz()) F *= z.grid.Zd;
                    z.grid.w = parseInt((D - 1) /
                        F) * F + 1
                } else z.grid.w = D;
                if (H["place cursor"] == "true") {
                    z.grid.Cq = D;
                    pui.Hn = true
                }
                u.push(z.grid);
                pui.kc.push(z.grid)
            }
            if (!a && b.P != null) {
                z.P = b.P;
                if (d[v].domEls == null) d[v].domEls = [];
                d[v].domEls[b.P - 1] = z
            }
        }
        if ((pui.controller != null || typeof pui.handler == "function") && H != null && H["set as modified"] != "false") z.modified = true;
        if (!a && b.Dd != null) z.Dd = b.Dd;
        if (!a && E != null && !E.expanded) {
            y = parseInt(y.style.height);
            if (!isNaN(y)) {
                E = parseInt(z.style.top);
                if (isNaN(E)) E = 0;
                if (E > y && (z.tagName == "INPUT" || z.tagName == "SELECT" || z.tagName ==
                    "TEXTAREA") && !z.disabled) {
                    z.bv = true;
                    z.disabled = true
                }
            }
        }
    }
    if (!a) {
        ma = pui.controller != null && l.length > 0 ? l : b.errors;
        if (ma != null) if (b.P != null) {
            ma = ma[String(b.P)];
            ma != null && pui.Kv(ma, b.P)
        } else pui.Kv(ma)
    }
    for (v = 0; v < r.length; v++) {
        f = document.getElementById(r[v]);
        g = f.tabPanel;
        if (!g) g = f.rb;
        if (g) {
            if (q[v]) g.selectedTab = q[v];
            g.Xj()
        }
    }
    if (a) for (v = 0; v < e.kb.length; v++) e.kb[v].dom.grid.cd(true);
    u.forEach(function (pa) {
        if (pui.Pa != null && pui.Pa.Zj == true) pa.Cq = null;
        if (pa.rz()) pa.collapse(Tb(pa.g.id + "_expander")); else {
            if (pa.Wi) return;
            pa.getData()
        }
        if (!pa.Wi) {
            pa.w > 1 && pa.s != null && pa.s.type == "sliding" && pa.s.Gh(pa.w, true);
            if (pui.Hn && pui.G.Eh == null && pui.G.Qi == null) if (pui.Pa == null || pui.Pa.Zj != true) setTimeout(function () {
                pa.tA(true)
            }, 1);
            if (pa.s != null) {
                !a && pa.s.type == "sliding" && pa.s.Md == 1 && pa.s.H();
                if (!a && typeof c["record format name"] === "string" && pa.s.type == "paging") {
                    var ia = c["record format name"], m = pui.Wb(ia);
                    if (pui.Ma[ia] == null && pui.Ma[m] != null) ia = m;
                    if (pui.Ma[ia] != null) {
                        if (pui.Ma[ia].PageDown == null) {
                            pui.Ma[ia].PageDown = [];
                            pui.Ma[ia].PageDown.push(pa.A.hb);
                            pa.A.Lu = true
                        }
                        if (pui.Ma[ia].PageUp == null) {
                            pui.Ma[ia].PageUp = [];
                            pui.Ma[ia].PageUp.push(pa.A.ib);
                            pa.A.Nu = true
                        }
                    }
                }
            }
            pa.vu();
            pa.hJ()
        }
    });
    for (var ea in w) typeof w[ea].Nq == "function" && w[ea].Nq();
    if (!a) {
        pui.onload != null && typeof pui.onload == "function" && o && b.Zn !== false && !pui.Na && pui.onload(b);
        if (c != null) {
            if (b.Zn !== false) {
                e = c.onload;
                if (e != null && e != "") try {
                    eval('var format = "' + c["record format name"] + '";');
                    eval('var file = "' + b.file + '";');
                    eval(e)
                } catch (da) {
                    pui.qc(da, "Onload Error:\n")
                }
            }
            pui.vq = c.onsubmit;
            if (c.onmessage &&
                typeof c["record format name"] === "string") {
                pui.uq[c["record format name"].toLowerCase()] = c.onmessage;
                if (b.msgInfo != null && o && b.Zn !== false && !pui.Na) {
                    pui.message = b.msgInfo;
                    try {
                        eval('var message = pui["message"];');
                        eval(c.onmessage)
                    } catch (Ba) {
                        pui.qc(Ba, "Onmessage Error:\n")
                    }
                }
            }
        }
        if (b.dq != null) {
            pui.yd && pui.xB();
            if (b.hl != null) try {
                eval('var lazyContainerNum = "' + b.dq + '";');
                eval(b.hl)
            } catch (Ea) {
                pui.qc(Ea, "OnLazyLoad Error:\n")
            }
        }
    }
};
pui.fj = function (b) {
    gc(b, "click", function () {
        if (b.disabled != true) if (!(b.getAttribute != null && b.getAttribute("disabled") == "true")) {
            if (b.ud != null) {
                if (b.nextPage == true && !b.ud.grid.Qd()) {
                    b.ud.grid.Ku();
                    return
                }
                if (b.ll == true && !b.ud.grid.me()) {
                    b.ud.grid.Mu();
                    return
                }
            }
            if (b.Wf != null) pui.Wc = b.Wf;
            var a = [];
            if (b.Wf != null) {
                b.ud && a.push(b);
                for (var c in pui.Ma) {
                    var d = pui.Ma[c][pui.Wc];
                    if (d != null) for (var e = 0; e < d.length; e++) d[e].ud || a.push(d[e])
                }
            } else a.push(b);
            for (e = 0; e < a.length; e++) {
                a[e].Fa = "1";
                if (a[e].ia == "true" || a[e].ia ==
                    "send data") pui.ia = a[e].ia
            }
            c = b.parentNode;
            if (c != null) {
                d = c.parentNode;
                if (d != null) {
                    d = d.grid;
                    d != null && d.ir(c.row)
                }
            }
            pui.pp = null;
            pui.Ik = null;
            pui.op = null;
            pui.et = null;
            if (b.pui && b.pui.properties && b.pui.properties["destination url"]) {
                c = b.pui.properties;
                pui.pp = c["destination url"];
                pui.op = !c.bookmarkable || c.bookmarkable == "true";
                pui.et = c["redirect to destination"] == "true";
                pui.Ik = [];
                d = 1;
                e = "destination parameter name";
                for (var f = "destination parameter value"; c[e];) {
                    pui.Ik.push([c[e], c[f]]);
                    e = "destination parameter name " +
                        ++d;
                    f = "destination parameter value " + d
                }
            }
            c = pui.Ld();
            pui.pp = null;
            pui.Ik = null;
            pui.op = null;
            pui.et = null;
            if (c == false) {
                for (e = 0; e < a.length; e++) a[e].Fa = "0";
                pui.ia = "false"
            }
        }
    })
};
pui.Kv = function (b, a) {
    for (var c = [], d = b.length - 1; d >= 0; d -= 1) {
        var e = b[d], f = e.msg;
        if (e.encoded) f = pui.formatting.Hk(f);
        var h = null, g;
        if (String(f).substr(0, 3).toLowerCase() == "js:") h = f.substr(3);
        if (String(f).substr(0, 11).toLowerCase() == "javascript:") h = f.substr(11);
        if (String(f).substr(0, 7).toLowerCase() == "script:") h = f.substr(7);
        if (h !== null && Zb(h) !== "") {
            g = f;
            try {
                f = eval(h)
            } catch (l) {
                if (!pui.Yi) {
                    pui.Yi = true;
                    setTimeout(function () {
                            pui.alert("Expression '" + Zb(h) + "' contains an error:\n\n" + l.message);
                            pui.Yi = false
                        },
                        1)
                }
            }
            if (typeof f == "undefined") f = g
        }
        f = f.replace(/&N/g, "<br/>");
        f = f.replace(/&P/g, "<br/>");
        f = f.replace(/&B/g, "<br/>");
        g = e.dom;
        e = e.id;
        if (a != null) e += "." + a;
        if (g == null && e != null) g = Tb(e);
        if (g == null || g.tagName == null) f != null && f != "" && c.push(f); else {
            if (g.parentNode && g.parentNode.comboBoxWidget) g = g.parentNode;
            e = g;
            if (g.comboBoxWidget != null) e = g.comboBoxWidget.getBox();
            if (g.pui.properties["error message location"] == "alert") c.push(f); else {
                var n = e.ha;
                if (n == null) n = new pui.No(g);
                if (!n.jb) {
                    pui.ya(e, n.vj());
                    n.Il(f);
                    n.show(3E3,
                        true)
                }
                f = g.parentNode;
                if (f != null) {
                    f = f.parentNode;
                    if (f != null) {
                        f = f.grid;
                        if (f != null) f.Ir[g.id] = n
                    }
                }
            }
        }
    }
    if (c.length > 0) {
        g = "";
        for (d = c.length - 1; d >= 0; d -= 1) {
            if (d != c.length - 1) g += "<br/>";
            g += c[d]
        }
        for (var o = g; o.indexOf("<br/>") >= 0;) o = o.replace("<br/>", "\n");
        setTimeout(function () {
            pui.alert(o)
        }, 1)
    }
    var i = !pui.yd;
    setTimeout(function () {
        pui.Bj = true;
        for (var r = 0; r < b.length; r++) {
            var k = b[r].id;
            if (a != null) k += "." + a;
            var q = b[r].dom;
            if (q == null && k != null) q = Tb(k);
            if (q != null) {
                if (q.comboBoxWidget != null) q = q.comboBoxWidget.getBox();
                try {
                    if (i) {
                        pui.Pa.dom =
                            q;
                        pui.Pa.Zj = true
                    } else {
                        q.focus();
                        pui["highlight on focus"] && q.select()
                    }
                    n.jb || q.ha.show();
                    break
                } catch (s) {
                }
            }
        }
        setTimeout(function () {
            pui.Bj = false
        }, 0)
    }, 0)
};
pui.Ld = function () {
    if (pui.xn != null) return false;
    if (pui.isServerBusy()) return false;
    var b = pui.jx();
    if (typeof b.valid == "boolean" && b.valid == false) if (pui.ia != "true" && (pui.ia != "send data" || b.Eu == true)) {
        b.Eu = false;
        pui.Kv(b.errors);
        pui.Bg = {};
        pui.Wc = "";
        return false
    }
    ad();
    if (pui.vq != null && pui.vq != "") try {
        pui.HA = b;
        var a = eval(pui.vq);
        if (typeof a == "function") a = a(b);
        delete pui.HA;
        if (a == false) {
            pui.Bg = {};
            pui.Wc = "";
            return false
        }
    } catch (c) {
        pui.qc(c, "Onsubmit Error:\n");
        pui.Bg = {};
        pui.Wc = "";
        return false
    }
    if (pui.onsubmit !=
        null && typeof pui.onsubmit == "function") if (pui.onsubmit() == false) {
        pui.Bg = {};
        pui.Wc = "";
        return false
    }
    pui.yd = false;
    pui.Yf();
    a = false;
    if (pui.ia != "true" && (pui.ia != "send data" || b.Eu == true)) a = pui.AI(b);
    if (!a) {
        pui.haltFrames();
        pui.submitResponse(b)
    }
    return true
};
pui.jx = function (b) {
    function a(w, v) {
        if (w != null && w != "" && v != null && v != "") if (typeof w == "object") for (var E in w) c[E] = v; else c[w] = v
    }

    var c = {};
    if (!b) {
        for (var d in pui.Ak) {
            for (var e = pui.Ak[d], f = 0; f < e.length; f++) {
                var h = e[f];
                if (h.modified && (pui.controller != null || pui.ia != "true")) {
                    c[d] = "1";
                    break
                }
            }
            if (c[d] != "1") c[d] = "0"
        }
        for (d in pui.Xk) {
            e = pui.Xk[d];
            for (f = 0; f < e.length; f++) {
                h = e[f];
                if (typeof h.value == "string" && Zb(h.value) == "") {
                    c[d] = "1";
                    break
                }
            }
            if (c[d] != "1") c[d] = "0"
        }
        for (d in pui.Kk) {
            e = pui.Kk[d];
            for (f = 0; f < e.length; f++) {
                h =
                    e[f];
                if (pui.hu(h)) {
                    c[d] = "1";
                    break
                }
            }
            if (c[d] != "1") c[d] = "0"
        }
    }
    e = pui.Ua;
    if (b) e = b;
    for (d in e) {
        var g = e[d];
        h = g[0];
        if (h.type == "radio") for (var l = 0; l < g.length; l++) {
            f = g[l];
            if (f.modified) {
                h = f;
                break
            }
        }
        var n = h;
        if (h.comboBoxWidget != null) n = h.comboBoxWidget.getBox();
        var o = null;
        if (h.Fa != null) {
            o = h.Fa;
            if (o == "0") for (f = 1; f < g.length; f++) {
                if (g[f].Fa == "1") {
                    o = "1";
                    break
                }
            } else if (h.Fa == "" && h.pui != null && h.pui.properties["field type"] == "menu" && g.length > 1) for (f = 1; f < g.length; f++) if (g[f].Fa != "") {
                o = g[f].Fa;
                break
            }
            if (h.qn) {
                f = d.split(".");
                l = f[0];
                f = parseInt(f[f.length - 1]);
                if (!isNaN(f) && f > 0) {
                    g = l + ".rrn";
                    var i = g + "=" + f;
                    if (pui.Bg[i] != true) {
                        if (c[g] == null) c[g] = [];
                        c[g].push(f);
                        pui.Bg[i] = true
                    }
                }
            }
            c[d] = o
        } else {
            if (pui.modified && pui.ia != "true" && pui.ia != "send data") {
                if (h.tw == true && h.modified != true) {
                    c.valid = false;
                    if (c.errors == null) c.errors = [];
                    c.errors.push({dom: n, msg: pui.getLanguageText("runtimeMsg", "ME")});
                    if (n.ha != null && n.ha.jb != null) n.ha.jb = false;
                    continue
                }
                if (h.uw == true && h.modified == true && n.maxLength != null && n.value != null && (n.maxLength != n.value.length ||
                    n.value === n.emptyText)) {
                    c.valid = false;
                    if (c.errors == null) c.errors = [];
                    c.errors.push({dom: n, msg: pui.getLanguageText("runtimeMsg", "MF")});
                    if (n.ha != null && n.ha.jb != null) n.ha.jb = false;
                    continue
                }
            }
            if (pui.ia != "true" && pui.ia != "send data" && h.EA == true && !h.disabled) if (typeof n.value == "string" && (Zb(n.value) == "" || n.value === n.emptyText) || h.fileUpload != null && h.fileUpload.getCount() < 1) {
                c.valid = false;
                if (c.errors == null) c.errors = [];
                f = pui.getLanguageText("runtimeMsg", "required");
                if (h.fileUpload != null) f = pui.getLanguageText("runtimeMsg",
                    "file required");
                c.errors.push({dom: n, msg: f});
                if (n.ha != null && n.ha.jb != null) n.ha.jb = false;
                continue
            }
            if (h.fileUpload != null && pui.ia != "true" && pui.ia != "send data") {
                f = h.fileUpload.Zv();
                if (f == null) f = h.fileUpload.aw();
                if (f != null) {
                    c.valid = false;
                    if (c.errors == null) c.errors = [];
                    c.errors.push({dom: h, msg: f});
                    if (h.ha != null && h.ha.jb != null) h.ha.jb = false;
                    continue
                }
            }
            if (h.modified == true && (pui.controller != null || pui.ia != "true")) {
                if (h.tagName == "INPUT") switch (h.type) {
                    case "text":
                    case "number":
                    case "password":
                    case "file":
                    case "hidden":
                    case "":
                    case "number":
                    case "date":
                    case "datetime":
                    case "time":
                    case "email":
                    case "url":
                    case "month":
                    case "tel":
                    case "url":
                    case "color":
                    case "datetime-local":
                    case "search":
                    case "week":
                        o =
                            h.value;
                        if (o === h.emptyText) o = "";
                        if (h.Cs != null) {
                            if (pui["force auto complete match"] != false || h.Cs.value != "") o = h.Cs.value;
                            if (h.sa != null && h.sa.dataType != "expression" && pui.formatting.ye(h.sa.dataType)) /^[0-9,.\- \(\)]+/.test(o) || (o = "")
                        }
                        if (pui.hu(o)) {
                            g = "";
                            i = " ";
                            if (h.sa != null && pui.formatting.ye(h.sa.dataType)) i = "0";
                            f = "";
                            for (l = 0; l < o.length; l++) {
                                var r = o.substr(l, 1);
                                if (r == pui.dup["char"]) {
                                    g += "1";
                                    r = i;
                                    o = o.substr(0, l) + r + o.substr(l + 1)
                                } else g += "0";
                                if (r >= "0" && r <= "9") f += r
                            }
                            if (i != "0") c[d + ".dup"] = g;
                            if (i == "0") {
                                i = Number(h.sa.dataLength);
                                if (isNaN(i)) i = 0;
                                g = h.sa.decPos;
                                if (isNaN(g)) g = 0;
                                i -= g;
                                if (i < 0) i = 0;
                                l = f.substr(0, i);
                                f = f.substr(i);
                                if (f.length > g) f = f.substr(0, g);
                                g = ".";
                                if (pui.appJob.decimalFormat == "I" || pui.appJob.decimalFormat == "J") g = ",";
                                i = o.indexOf("-") != -1;
                                o = l;
                                if (f != "") o += g + f;
                                if (i) o = "-" + o
                            }
                        }
                        break;
                    case "checkbox":
                        o = h.checked ? h.pe != null && h.pe != "" ? h.pe : "1" : h.Gg != null && h.Gg != "" ? h.Gg : " ";
                        break;
                    case "radio":
                        for (l = 0; l < g.length; l++) {
                            f = g[l];
                            if (f.checked && f.radioValue != null) {
                                o = f.radioValue;
                                break
                            }
                        }
                        break
                }
                if (h.tagName == "SELECT") {
                    l = false;
                    if (h.getAttribute("multiple") !=
                        null) l = true;
                    if (!l) o = h.value;
                    if (l) {
                        o = [];
                        for (l = 0; l < h.options.length; l++) h.options[l].selected && o.push(h.options[l].value);
                        o = o.join(",")
                    }
                }
                if (h.tagName == "TEXTAREA") {
                    o = h.value;
                    if (o === h.emptyText) o = ""
                }
                if (h.comboBoxWidget != null) {
                    o = h.comboBoxWidget.getValue();
                    if (o === h.comboBoxWidget.getBox().emptyText) o = ""
                }
                if (h.Ha != null) {
                    o = h.value;
                    if (o != null) o = String(o)
                }
                if (h.signaturePad != null) o = h.signaturePad.getValue();
                if (h.aa != null) {
                    o = "";
                    if (h.aa.mg && h.aa.gl != null) o = h.aa.gl; else if (!h.aa.mg && h.aa.fl != null) o = h.aa.fl
                }
                if (h.type ==
                    "grid selection") o = h.value
            }
        }
        if (typeof o == "string" && (pui.controller != null || pui.ia != "true")) {
            if (Zb(o) == "" && h.lm != null && h.lm.length >= 1) o = h.lm[0];
            if (h.signaturePad != null && pui.ia != "send data") if (o.length > h.sa.maxLength) {
                c.valid = false;
                if (c.errors == null) c.errors = [];
                c.errors.push({dom: h, msg: pui.getLanguageText("runtimeMsg", "signature overflow")});
                if (h.ha != null && h.ha.jb != null) h.ha.jb = false;
                continue
            }
            l = h.sa;
            if (l != null && l.dataType != "expression") {
                l.value = o;
                l.revert = true;
                if (h.Fa != null) l.formatting = "Text";
                o = pui.Oe.format(l);
                if (typeof o == "object") {
                    c.valid = false;
                    c.Eu = true;
                    if (c.errors == null) c.errors = [];
                    c.errors.push({dom: n, msg: o.msg});
                    if (n.ha != null && n.ha.jb != null) n.ha.jb = false
                } else {
                    f = false;
                    if (pui.ia == "send data") f = true;
                    if (pui.hu(h)) f = true;
                    if (h.uk == true && typeof h.value == "string" && Zb(h.value) == "") f = true;
                    if (!f) {
                        if (h.wa == true) {
                            f = S.wa(o);
                            if (f != "" && f != "is too long.") {
                                c.valid = false;
                                if (c.errors == null) c.errors = [];
                                c.errors.push({dom: n, msg: "Name " + f});
                                if (n.ha != null && n.ha.jb != null) n.ha.jb = false;
                                continue
                            }
                        }
                        if (h.validateEmail == true) if (!pui.validateEmail(o)) {
                            c.valid =
                                false;
                            if (c.errors == null) c.errors = [];
                            f = pui.getLanguageText("runtimeMsg", "invalid email");
                            c.errors.push({dom: n, msg: f});
                            if (n.ha != null && n.ha.jb != null) n.ha.jb = false;
                            continue
                        }
                        if (typeof h.Yv == "string") {
                            g = pui.Ta(h.Yv);
                            i = true;
                            for (f = 0; f < g.length; f++) if ($b(String(g[f])) == o) {
                                i = false;
                                break
                            }
                            if (i) {
                                c.valid = false;
                                if (c.errors == null) c.errors = [];
                                c.errors.push({
                                    dom: n,
                                    msg: pui.getLanguageText("runtimeMsg", "validValues") + g.join(", ") + "."
                                });
                                if (n.ha != null && n.ha.jb != null) n.ha.jb = false;
                                continue
                            }
                        }
                        if (typeof h.Ts == "string" && typeof h.Us ==
                            "string") {
                            i = h.Us;
                            g = o;
                            if (l.formatting == "Number") {
                                i = Number(i);
                                g = Number(g)
                            }
                            r = i;
                            if (typeof i == "string") {
                                i = $b(i);
                                r = "'" + r + "'"
                            }
                            if (typeof g == "string") g = $b(g);
                            f = "";
                            switch (h.Ts) {
                                case "Equal":
                                    if (i != g) f = "Value must equal " + r + ".";
                                    break;
                                case "Not Equal":
                                    if (i == g) f = "Value must not equal " + r + ".";
                                    break;
                                case "Greater Than":
                                    if (g <= i) f = "Value must be greater than " + r + ".";
                                    break;
                                case "Greater Than or Equal":
                                    if (g < i) f = "Value must be greater than or equal to " + r + ".";
                                    break;
                                case "Less Than":
                                    if (g >= i) f = "Value must be less than " +
                                        r + ".";
                                    break;
                                case "Less Than or Equal":
                                    if (g > i) f = "Value must be less than or equal to " + r + ".";
                                    break
                            }
                            if (f != "") {
                                c.valid = false;
                                if (c.errors == null) c.errors = [];
                                c.errors.push({dom: n, msg: f});
                                if (n.ha != null && n.ha.jb != null) n.ha.jb = false;
                                continue
                            }
                        }
                        f = null;
                        if (typeof h.pl == "string") {
                            i = h.pl;
                            g = o;
                            if (l.formatting == "Number") {
                                i = Number(i);
                                g = Number(g)
                            }
                            if (typeof i == "string") i = $b(i);
                            if (typeof g == "string") g = $b(g);
                            if (l.formatting == "Date") {
                                g = f = pui.Oe.Date.uy(g, l);
                                i = h.GI
                            }
                            if (g < i) {
                                o = h.pl;
                                if (l.formatting != "Number") o = "'" + o + "'";
                                f = pui.getLanguageText("runtimeMsg",
                                    "invalid low range", [o]);
                                if (h.ol != null) {
                                    g = h.ol;
                                    if (l.formatting != "Number") g = "'" + g + "'";
                                    f = pui.getLanguageText("runtimeMsg", "invalid range", [o, g])
                                }
                                c.valid = false;
                                if (c.errors == null) c.errors = [];
                                c.errors.push({dom: n, msg: f});
                                if (n.ha != null && n.ha.jb != null) n.ha.jb = false;
                                continue
                            }
                        }
                        if (typeof h.ol == "string") {
                            i = h.ol;
                            g = o;
                            if (l.formatting == "Number") {
                                i = Number(i);
                                g = Number(g)
                            }
                            if (l.formatting == "Date") {
                                g = f == null ? pui.Oe.Date.uy(g, l) : f;
                                i = h.FI
                            }
                            if (typeof i == "string") i = $b(i);
                            if (typeof g == "string") g = $b(g);
                            if (g > i) {
                                g = h.ol;
                                if (l.formatting !=
                                    "Number") g = "'" + g + "'";
                                f = pui.getLanguageText("runtimeMsg", "invalid high range", [g]);
                                if (h.pl != null) {
                                    o = h.pl;
                                    if (l.formatting != "Number") o = "'" + o + "'";
                                    f = pui.getLanguageText("runtimeMsg", "invalid range", [o, g])
                                }
                                c.valid = false;
                                if (c.errors == null) c.errors = [];
                                c.errors.push({dom: n, msg: f});
                                if (n.ha != null && n.ha.jb != null) n.ha.jb = false;
                                continue
                            }
                        }
                    }
                    c[d] = o;
                    if (h.P != null) {
                        l = d.split(".")[0];
                        g = l + ".rrn";
                        i = g + "=" + h.P;
                        if (pui.Bg[i] != true) {
                            if (c[g] == null) c[g] = [];
                            c[g].push(h.P);
                            pui.Bg[i] = true
                        }
                        n = pui.Uv[l.toLowerCase()];
                        if (n != null) c[l +
                        "." + n + "." + h.P] = "1"
                    }
                }
            }
        }
    }
    if (b) return c;
    if (pui.Wc != null && pui.Wc != "") {
        b = pui.$F[pui.Wc];
        if (b != null && b > 0) c.fkey = String(b);
        b = pui.ls[pui.Wc];
        c.aid = b != null ? String(b) : pui.ls.Enter
    }
    a(pui.Lb.record, pui.G.record);
    a(pui.Lb.field, pui.G.field);
    a(pui.Lb.position, pui.G.position);
    a(pui.Lb.row, pui.G.row);
    a(pui.Lb.column, pui.G.column);
    b = Number(pui.G.row);
    if (!isNaN(b) && b > 0) c.row = String(b);
    b = Number(pui.G.column);
    if (!isNaN(b) && b > 0) c.column = String(b);
    if (pui.G.gw != null) c.wrow = String(pui.G.gw);
    if (pui.G.dw != null) c.wcolumn = String(pui.G.dw);
    for (var k in pui.ip) {
        h = pui.ip[k];
        if (h.mf != null) c[k] = h.mf
    }
    for (var q in pui.Sq) {
        h = pui.Sq[q];
        if (h.VA != null) {
            c[q] = h.VA;
            if (pui.Wc == "PageUp") c[q] = 1;
            if (pui.Wc == "PageDown") c[q] += h.grid.Fp()
        }
    }
    for (var s in pui.Dr) c[s] = pui.Dr[s];
    for (var t in pui.or) {
        h = pui.or[t];
        c[t] = h.grid.expanded ? "0" : "1"
    }
    if (pui.Pg != null) {
        k = pui.Pg.g.kj;
        o = pui.Pg.Ss;
        if (k != null && o != null) c[k] = o;
        k = pui.Pg.g.xl;
        o = pui.Pg.Li;
        if (k != null && o != null) c[k] = o
    }
    if (pui.Ug != null) {
        k = pui.Ug.g.ei;
        o = pui.Ug.Jm;
        if (k != null && o != null) c[k] = o;
        k = pui.Ug.g.xl;
        o = pui.Ug.Li;
        if (k !=
            null && o != null) c[k] = o
    }
    if (pui.xp != null) {
        k = pui.xp.g.ky;
        o = pui.xp.fi;
        if (k != null && o != null) c[k] = o
    }
    for (var u in pui.ap) c[pui.ap[u]] = pui.ai[u] && (pui.controller != null || pui.ia != "true") ? "1" : "0";
    if (pui.Dq) {
        if (pui.Nr != null && pui.Mf != null) c[pui.Nr] = String(parseInt(pui.Mf.style.top));
        if (pui.Lr != null && pui.Mf != null) c[pui.Lr] = String(parseInt(pui.Mf.style.left))
    }
    if (pui.Hr != null) c[pui.Hr] = c.aid != pui.ls.Enter ? "1" : "0";
    for (f = 0; f < pui.mr.length; f++) {
        u = pui.mr[f];
        if (c[u] == null) c[u] = "0"
    }
    if (pui.Oc.Ld == true) {
        if (pui.Oc.bt != null) c[pui.Oc.bt] =
            pui.dragDropInfo["dd element id"];
        if (pui.Oc.ct != null) {
            u = pui.dragDropInfo["dd record number"];
            if (u == null) u = 0;
            c[pui.Oc.ct] = String(u)
        }
        if (pui.Oc.Vv != null) c[pui.Oc.Vv] = pui.dragDropInfo["target element id"];
        if (pui.Oc.Wv != null) {
            u = pui.dragDropInfo["target record number"];
            if (u == null) u = 0;
            c[pui.Oc.Wv] = String(u)
        }
    }
    if (pui.jm != null) c[pui.jm] = pui.tv ? "1" : "0";
    if (pui.controller != null) {
        u = 0;
        k = pui.vg.layers;
        for (f = 0; f < k.length; f++) {
            q = k[f].formats;
            for (l = 0; l < q.length; l++) c["pui-recname." + ++u] = q[l].metaData.screen["record format name"]
        }
    }
    if (typeof pui.beforeRespond ===
        "function") if (u = pui.beforeRespond(c)) c = u;
    return c
};
pui.submitResponse = function (b, a) {
    if (pui.isCloudPreview) setTimeout(function () {
        pui.yd = true;
        pui.qd()
    }, 500); else {
        if (pui.aq) {
            if (!pui.yd) return false;
            pui.yd = false
        }
        if (b == null) b = pui.captureData(); else if (typeof b === "string") b = pui.captureData(b, a);
        var c;
        c = pui.J == null ? cc("PUI0001200.pgm") : cc("PUI0002110.pgm");
        if (pui.psid != null && pui.psid != "") c += "/" + pui.psid;
        if (pui.handler != null && typeof pui.handler == "string") c = pui.handler;
        if (pui.overrideSubmitUrl != null && typeof pui.overrideSubmitUrl == "function") try {
            c = pui.overrideSubmitUrl(c)
        } catch (d) {
        }
        if (pui.handler !=
            null && typeof pui.handler == "function") {
            if (pui.pp) {
                var e = pui.pp.split("?"), f = "";
                c = e[0];
                if (e.length > 1) f = e[1];
                var h = "";
                e = [];
                for (var g = 0; g < pui.Ik.length; g++) {
                    var l = pui.Ik[g][0];
                    a = pui.Ik[g][1];
                    if (h != "") h += "&";
                    h += encodeURIComponent(l) + "=" + encodeURIComponent(a);
                    e.push('"' + l + '"', '"' + a + '"');
                    b[l] = a
                }
                if (pui.op) {
                    if (f != "") f += "&";
                    f += h
                }
                if (f != "") c += "?" + f;
                if (pui.et) {
                    if (pui.op) location.href = c; else {
                        f = 'postTo("' + c + '"';
                        if (e.length > 0) f += "," + e.join(",");
                        f += ");";
                        eval(f)
                    }
                    return
                } else pui.controller = c
            }
            pui.handler(b)
        } else {
            pui.Kc.end();
            pui.Yf();
            var n = function () {
                if (pui.isCloud) b.workspace_id = pui.cloud.ws.id;
                jc({
                    url: c,
                    method: "post",
                    params: b,
                    sendAsBinary: false,
                    saveResponse: true,
                    suppressAlert: true,
                    handler: function (o) {
                        if (o == null) {
                            document.body.innerHTML = '<div style="font-family: Trebuchet MS; width: 95%; text-align: center; font-size: 200%;"><br/>' + pui.getLanguageText("runtimeMsg", "session ended text") + "<br/><br/>" + pui.getLanguageText("runtimeMsg", "close browser text") + "</div>";
                            if (shutDown() != false) {
                                pui.shutdownOnClose = false;
                                pui.confirmOnClose =
                                    false;
                                Q = ""
                            }
                        } else {
                            o.b = pui.runtimeContainer;
                            var i = "", r = "";
                            if (o != null && o.layers != null && o.layers[0] != null && o.layers[0].formats != null && o.layers[0].formats[0] != null && o.layers[0].formats[0].name != null && o.layers[0].formats[0].file != null) {
                                i = o.layers[0].formats[0].name;
                                r = o.layers[0].formats[0].file
                            }
                            if (pui["session timeout retries"] > 0) if (i === "TIMOUTSCRN" && r === "PUISCREENS" || pui.J && o != null && o.exception == "PUI0003") {
                                pui.vv += 1;
                                if (pui.vv <= pui["session timeout retries"]) {
                                    setTimeout(n, 2E3);
                                    return
                                }
                            }
                            pui.vv = 0;
                            pui.J == null ?
                                pui.mn(o, function () {
                                    pui.render(o)
                                }) : pui.PA(o)
                        }
                    },
                    onfail: function (o) {
                        pui.onoffline == null && !pui["suppress comm errors"] && pui.alert(pui.Um(o));
                        pui.qd();
                        pui.Pq();
                        pui.onoffline != null && pui.onoffline()
                    }
                })
            };
            n()
        }
    }
};
pui.submit = pui.submitResponse;
pui.Pq = function () {
    for (var b in pui.Ua) for (var a = pui.Ua[b], c = 0; c < a.length; c++) if (a[c].Fa == "1") a[c].Fa = "0";
    pui.yd = true
};
pui.RE = function (b) {
    for (var a in b) {
        var c = b[a], d = Tb(a);
        if (d != null) {
            var e = d.ha;
            e != null && e.hide();
            e = new pui.No(d);
            e.Il(c);
            e.show()
        }
    }
    pui.qd();
    for (b = 0; b < pui.kc.length; b++) pui.kc[b].unMask();
    pui.unmaskScreen();
    pui.Pq()
};
pui.ab = function (b, a, c) {
    if (!pui.f(b) && !pui.Ia(b)) return b;
    if (a == null) {
        if (b.designValue != null) return b.designValue;
        return ""
    }
    var d = b.fieldName;
    if (a.__pui_show && b.longName) d = b.longName;
    if (b.lowerCaseField != true && pui.handler == null) d = pui.ca(d);
    if (b.dataType == "expression") a = pui.tt(b.fieldName, a); else {
        a = a[d];
        if (a == null) a = ""
    }
    b.value = a;
    if (b.dataType == "reference" && c != null) {
        c = c[d];
        if (c != null) {
            b.dataType = pui.xK(c.dataType);
            b.dataLength = String(c.dataLength);
            b.decPos = String(c.decPos)
        }
    }
    if (b.formatting == "Text") if (pui.formatting.ye(b.dataType)) {
        b.textTransform !=
        null && delete b.textTransform;
        b.trimLeading != null && delete b.trimLeading;
        b.trimTrailing != null && delete b.trimTrailing;
        b.formatting = "Number";
        b.numSep = "false";
        b.zeroBalance = "false";
        b.zeroFill = "false";
        b.curSym = "";
        b.units = "";
        b.negNum = "-999.00"
    }
    return pui.Oe.format(b)
};
pui.tt = function (b, a) {
    for (var c = false, d = b.split(" or "), e = 0; e < d.length; e++) {
        for (var f = true, h = d[e].split(" and "), g = 0; g < h.length; g++) {
            var l = h[g], n = false;
            if (l.substr(0, 1) == "N") {
                n = true;
                l = l.substr(1)
            }
            l = "*IN" + l;
            l = a[l] == "1";
            if (n) l = !l;
            if (!l) {
                f = false;
                break
            }
        }
        if (f) {
            c = true;
            break
        }
    }
    if (c) return "1";
    return "0"
};
pui.Yf = function () {
    pui.qd();
    var b;
    if (pui["loading animation"].css != null && !pui.is_old_ie && pui["loading animation"].path == pui.normalizeURL("/profoundui/proddata/images/loading.gif") && pui["loading animation"].text == null) {
        b = document.createElement("div");
        b.className = pui["loading animation"].css
    } else {
        if (pui["loading animation"].text != null) {
            b = document.createElement("div");
            b.innerHTML = pui["loading animation"].text;
            b.style.backgroundColor = "#cccccc";
            b.style.border = "1px solid #333333";
            b.style.fontSize = "10px";
            b.style.fontFamily = "Sans-Serif"
        } else {
            b = document.createElement("img");
            b.src = pui["loading animation"].path;
            var a = pui["loading animation"].height;
            b.style.width = pui["loading animation"].width + "px";
            b.style.height = a + "px"
        }
        if (pui["loading animation"].alt != null && pui["loading animation"].alt.length > 0) b.alt = pui["loading animation"].alt;
        b.style.position = "absolute";
        a = pui["loading animation"].left;
        if (pui.aq && a < 0) a = 0;
        b.style.left = a + "px";
        a = pui["loading animation"].top;
        a += Math.max(document.body.scrollTop, document.documentElement.scrollTop);
        b.style.top = a + "px";
        b.style.zIndex = pui["loading animation"].zIndex
    }
    b.id = "_pui_loading_animation";
    pui.runtimeContainer.appendChild(b);
    for (b = 0; b < pui.kc.length; b++) {
        a = pui.kc[b];
        a.Wi || a.mask()
    }
};
pui.qd = function () {
    var b = Tb("_pui_loading_animation");
    b != null && b.parentNode != null && b.parentNode.removeChild(b)
};
pui.Wk = function (b, a) {
    if (!(Q != "dspf" || pui.aq)) {
        if (!b) b = window.event;
        var c = b.keyCode, d;
        if (pui.fx) pui.Hs(b); else {
            d = c - 111;
            if (a == null) if (d >= 1 && d <= 12) {
                if (!pui.is_old_ie || d > 1 || b.shiftKey) {
                    if (b.shiftKey) d += 12; else if (b.zi && Event.Ko) d += 12;
                    a = "F" + d;
                    if (b.altKey) a = "Alt-" + a; else if (b.ctrlKey) a = "Ctrl-" + a
                }
            } else switch (c) {
                case 13:
                    a = "Enter";
                    break;
                case 19:
                    a = "Pause/Break";
                    break;
                case 27:
                    a = "Escape";
                    break;
                case 33:
                    a = "PageUp";
                    break;
                case 34:
                    a = "PageDown";
                    break;
                case 44:
                    a = "PrtScn";
                    break
            }
            if (a == "Ctrl-F9") {
                pui.downloadJSON();
                return false
            }
            if ((d =
                a != null && pui.og != null && (a == "Enter" || a == "PageUp" || a == "PageDown" || pui.Ma[pui.og][a] != null)) && a == "PageUp" || a == "PageDown") {
                var e = false;
                for (c = 0; c < pui.kc.length; c++) {
                    var f = pui.kc[c];
                    if (f.A && f.A.Xf) if (e == false) e = true; else {
                        d = false;
                        break
                    }
                }
            }
            if (d) {
                d = [];
                e = c = false;
                for (var h in pui.Ma) {
                    f = pui.Ma[h][a];
                    if (f != null) {
                        var g = true;
                        for (c = 0; c < f.length; c++) {
                            var l = f[c];
                            l.disabled || (g = false);
                            if (l.ud != null) {
                                if (l.nextPage == true && !l.ud.grid.Qd()) {
                                    l.ud.grid.Ku();
                                    yb(b);
                                    if (pui.is_old_ie) try {
                                        b.keyCode = 0
                                    } catch (n) {
                                    }
                                    return false
                                }
                                if (l.nextPage ==
                                    true && !l.ud.En) {
                                    yb(b);
                                    if (pui.is_old_ie) try {
                                        b.keyCode = 0
                                    } catch (o) {
                                    }
                                    return false
                                }
                                if (l.ll == true && !l.ud.grid.me()) {
                                    l.ud.grid.Mu();
                                    yb(b);
                                    if (pui.is_old_ie) try {
                                        b.keyCode = 0
                                    } catch (i) {
                                    }
                                    return false
                                }
                                if (l.ll == true && !l.ud.Fn) {
                                    yb(b);
                                    if (pui.is_old_ie) try {
                                        b.keyCode = 0
                                    } catch (r) {
                                    }
                                    return false
                                }
                                if (l.disabled) {
                                    yb(b);
                                    if (pui.is_old_ie) try {
                                        b.keyCode = 0
                                    } catch (k) {
                                    }
                                    return false
                                }
                            }
                            if (l.ll == true || l.nextPage == true) e = true;
                            d.push(l)
                        }
                        if (d.length >= 1 && typeof d[0].onclick == "function" && l.nextPage != true && l.ll != true && !e) {
                            d[0].onclick();
                            pui.runtimeContainer.focus();
                            yb(b);
                            if (pui.is_old_ie) try {
                                b.keyCode = 0
                            } catch (q) {
                            }
                            return false
                        }
                        if (g) {
                            yb(b);
                            if (pui.is_old_ie) try {
                                b.keyCode = 0
                            } catch (s) {
                            }
                            return false
                        }
                        c = true
                    }
                }
                if (a == "Enter" && !pui.gt) c = true;
                if (c) {
                    pui.Wc = a;
                    for (c = 0; c < d.length; c++) {
                        d[c].Fa = "1";
                        if (d[c].ia == "true" || d[c].ia == "send data") pui.ia = d[c].ia
                    }
                    if (pui.Ld() == false) {
                        for (c = 0; c < d.length; c++) d[c].Fa = "0";
                        pui.ia = "false"
                    }
                    yb(b);
                    if (pui.is_old_ie) try {
                        b.keyCode = 0
                    } catch (t) {
                    }
                    return false
                }
            }
            if (a != null && (a != "PageUp" && a != "PageDown" || pui.Ds)) {
                yb(b);
                if (pui.is_old_ie) try {
                    b.keyCode = 0
                } catch (u) {
                }
                return false
            }
        }
    }
};
pui.Ut = function (b) {
    return pui.Wk(b, "F1")
};
pui.run = function (b) {
    var a = b.mobile === true, c = b.screenshot === true, d = b.parameter, e = b.program;
    if (e == null) e = "";
    var f = b.container, h = b.workstnid;
    if (h == null) h = "";
    h = h.toUpperCase();
    var g = b.debug, l = b.log;
    if (g == null) g = "0";
    if (l == null) l = "0";
    var n = "*LIBL", o = e.split("/");
    if (o.length == 2) {
        n = o[0];
        e = o[1]
    }
    if (f == null) f = "pui";
    if (typeof f == "string") f = document.getElementById(f);
    gc(document.body, "keydown", pui.Wk);
    gc(document.body, "help", pui.Ut);
    gc(document.body, "mousedown", pui.vx);
    b.jsonURL == null && b.mode != "preview" && pui.us();
    f.setAttribute("tabindex", "0");
    pui.runtimeContainer = f;
    pui.Yf();
    o = "post";
    var i = cc("PUI0001200.pgm");
    if (b.jsonURL != null) {
        i = b.jsonURL + "?r=" + Math.floor(Math.random() * 1E9 + 1);
        o = "get"
    }
    e = {
        program: e.toUpperCase(),
        library: n.toUpperCase(),
        init: "1",
        pathname: location.pathname,
        debug: g,
        log: l,
        workstnid: h
    };
    if (pui.isCloud) {
        e.workspace_id = pui.cloud.ws.id;
        e.workspace_url = location.href;
        if (c) e.screenshot = "1"
    }
    if (b.suffixid == "1") e.suffixid = "1";
    if (b.duplicateid == "1") e.duplicateid = "1";
    if (a) {
        e.mobile = "1";
        if (d == null) d = "";
        e.p1 =
            d;
        e.l1 = "250"
    }
    a = b.params;
    if (a != null) for (var r in a) e[r] = a[r];
    if (b.mode == "preview") {
        b = null;
        if (window.opener && window.opener.pui && typeof window.opener.pui.generatePreview === "function") b = window.opener.pui.generatePreview;
        if (window.parent && window.parent != window && pui.Ul(window.parent) && window.parent.noderun && typeof window.parent.noderun.generatePreview === "function") b = window.parent.noderun.generatePreview;
        if (b) {
            var k = b();
            k.b = f;
            pui.Yk = true;
            b = false;
            if (window.opener && window.opener.pui && window.opener.pui.viewdesigner) b =
                true;
            if (window.opener && window.opener.pui && window.opener.pui.nodedesigner) b = true;
            if (window.parent && window.parent != window && pui.Ul(window.parent) && window.parent.noderun) b = true;
            pui.handler = b ? function (q) {
                jc({
                    url: "/profoundui/dummy_submit",
                    method: "post",
                    params: q,
                    sendAsBinary: false,
                    suppressAlert: true,
                    handler: function () {
                        document.body.innerHTML = "<br/><br/>Preview screen submitted."
                    },
                    onfail: function () {
                        document.body.innerHTML = "<br/><br/>Preview screen submitted."
                    }
                })
            } : null;
            pui.mn(k, function () {
                pui.render(k)
            })
        } else {
            f.innerHTML =
                "";
            pui.alert("Preview data is no longer available.  You can rebuild the preview in the Visual Designer.")
        }
    } else {
        b = pui.getCookie("puiRefreshId");
        if (b != null) {
            pui.deleteCookie("puiRefreshId", "/");
            e = {refresh: "1"};
            i += "/" + b
        }
        jc({
            url: i,
            method: o,
            sendAsBinary: false,
            params: e,
            saveResponse: true,
            suppressAlert: true,
            handler: function (q) {
                q.b = f;
                pui.mn(q, function () {
                    pui.render(q)
                })
            },
            onfail: function (q) {
                pui.qd();
                setTimeout(function () {
                    if (pui.onoffline == null) {
                        pui["suppress comm errors"] || pui.alert(pui.Um(q));
                        pui.is_touch &&
                        setTimeout(function () {
                            navigator.app != null && navigator.app.exitApp != null && navigator.app.exitApp()
                        }, 500)
                    } else pui.onoffline()
                }, 500)
            }
        })
    }
};
pui.signon = function (b) {
    var a = b.mobile === true, c = b.screenshot === true, d = b.container, e = b.debug, f = b.workstnid,
        h = b.atrium_item;
    if (h == null) h = "";
    if (f == null) f = "";
    f = f.toUpperCase();
    var g = b.log;
    if (d == null) d = "pui";
    if (e == null) e = "0";
    if (g == null) g = "0";
    if (typeof d == "string") d = document.getElementById(d);
    gc(document.body, "keydown", pui.Wk);
    gc(document.body, "help", pui.Ut);
    pui.us();
    d.setAttribute("tabindex", "0");
    pui.runtimeContainer = d;
    pui.xn == null && pui.Yf();
    var l = cc("PUI0001200.pgm"), n = "", o = "";
    if (typeof b.program != "undefined") {
        o =
            "*LIBL";
        var i = b.program.split("/");
        if (i.length == 2) {
            o = i[0];
            n = i[1]
        }
    }
    e = {
        signon: "1",
        program: n.toUpperCase(),
        library: o.toUpperCase(),
        init: "1",
        pathname: location.pathname,
        debug: e,
        log: g,
        workstnid: f,
        atrium_item: h
    };
    if (pui.isCloud) {
        e.workspace_id = pui.cloud.ws.id;
        e.workspace_url = location.href;
        if (c) e.screenshot = "1"
    }
    if (b.suffixid == "1") e.suffixid = "1";
    if (b.duplicateid == "1") e.duplicateid = "1";
    if (a) e.mobile = "1";
    b = b.params;
    if (b != null) for (var r in b) e[r] = b[r];
    r = pui.getCookie("puiRefreshId");
    if (r != null) {
        pui.deleteCookie("puiRefreshId",
            "/");
        e = {refresh: "1"};
        l += "/" + r
    }
    pui.xn == null && jc({
        url: l,
        method: "post",
        sendAsBinary: false,
        params: e,
        saveResponse: true,
        suppressAlert: true,
        handler: function (k) {
            k.b = d;
            pui.mn(k, function () {
                pui.render(k)
            })
        },
        onfail: function (k) {
            pui.qd();
            setTimeout(function () {
                if (pui.onoffline == null) {
                    pui["suppress comm errors"] || pui.alert(pui.Um(k));
                    pui.is_touch && setTimeout(function () {
                        navigator.app != null && navigator.app.exitApp != null && navigator.app.exitApp()
                    }, 500)
                } else pui.onoffline()
            }, 500)
        }
    })
};
pui.mv = function (b) {
    b.profoundui = "1";
    jc({
        url: pui.normalizeURL(pui.controller),
        method: "post",
        params: b,
        sendAsBinary: false,
        saveResponse: true,
        suppressAlert: true,
        handler: function (a) {
            if (a == null) {
                document.body.innerHTML = '<div style="font-family: Trebuchet MS; width: 95%; text-align: center; font-size: 200%;"><br/>' + pui.getLanguageText("runtimeMsg", "session ended text") + "<br/><br/>" + pui.getLanguageText("runtimeMsg", "close browser text") + "</div>";
                pui.closeSession()
            } else {
                a.b = pui.runtimeContainer;
                var c = a.data;
                if (c == null) c = {};
                if (a.view != null) pui.view = a.view;
                if (a.redirect != null) location.href = a.redirect; else if (a.controller != null) {
                    pui.controller = a.controller;
                    pui.mv({})
                } else if (a.html != null) pui.runtimeContainer.innerHTML = a.html; else {
                    var d = a.format;
                    if (d == null) d = a.screen;
                    var e = a.formats;
                    if (e == null) e = a.screens;
                    a = a.appJob || {};
                    pui.show({
                        path: pui.normalizeURL(pui.view),
                        data: c,
                        format: d,
                        formats: e,
                        appJob: a,
                        handler: function (f) {
                            pui.mv(f)
                        }
                    })
                }
            }
        },
        onfail: function (a) {
            pui.onoffline == null && !pui["suppress comm errors"] && pui.alert(pui.Um(a));
            pui.qd();
            pui.Pq();
            pui.onoffline != null && pui.onoffline()
        }
    })
};
pui.start = function () {
    pui.lK();
    var b = Pc();
    pui.$o = b.canvasSize;
    var a = b.pgm;
    if (a == null) a = b.program;
    var c = b.debug, d = b.container, e = b.workstnid, f = b.suffixid, h = b.duplicateid, g = b.log, l = b.atrium_item,
        n = b.initpgm, o = b.jsonURL, i = b.mode, r = b.controller, k = b.mobile === "1", q = b.screenshot === "1",
        s = b.observe === "1";
    if (s) pui.eA.enabled = true;
    var t = {};
    pui.ft != null && typeof pui.ft == "function" && pui.ft(d);
    for (var u = 1; u <= 255; u++) {
        var w = b["p" + u], v = b["l" + u];
        if (w == null || v == null) break;
        t["p" + u] = w;
        t["l" + u] = v
    }
    if (r != null) pui.controller =
        r;
    if (pui.controller != null) {
        gc(document.body, "keydown", pui.Wk);
        gc(document.body, "help", pui.Ut);
        gc(document.body, "mousedown", pui.vx);
        pui.mv({})
    } else {
        b = {
            container: d,
            debug: c,
            log: g,
            workstnid: e,
            suffixid: f,
            duplicateid: h,
            mobile: k,
            screenshot: q,
            params: t,
            observe: s
        };
        if (a == null && o == null && i == null) {
            if (l != null) b.atrium_item = l; else if (n != null) b.program = n;
            pui.signon(b)
        } else {
            b.program = a;
            if (o != null) b.jsonURL = o;
            if (i != null) b.mode = i;
            pui.run(b)
        }
    }
};
pui.downloadJobLog = function (b) {
    pui.Jf("text/plain", b.fileName, b.data)
};
pui.newSession = function () {
    window.location.reload()
};
pui.closeSession = function () {
    if (window.parent != window && pui.jj(window.parent)) window.Atrium.closeTab(); else {
        var b = pui.Ul(window.parent);
        if (window.parent != window && b && window.parent.pui && window.parent.pui.isCloud) {
            var a = window.parent.Ext;
            if (a && a.getCmp) if (a = a.getCmp("_south_panel_stop")) if (typeof a.handler === "function") {
                a.handler();
                return
            }
        }
        if (window.parent != window && b && window.parent.noderun && typeof window.parent.noderun.stopApp === "function") window.parent.noderun.stopApp(); else {
            document.body.innerHTML = '<div style="width: 95%; text-align: center; font-size: 200%;"><br/>' +
                pui.getLanguageText("runtimeMsg", "close browser text") + "</div>";
            try {
                window.close()
            } catch (c) {
            }
            navigator.app != null && navigator.app.exitApp != null && navigator.app.exitApp()
        }
    }
};
pui.formatErrorText = function () {
    var b = document.getElementById("ESHELP"), a;
    if (b != null) {
        a = b.innerHTML;
        if (a != null) {
            var c = "Recovery  . . . :";
            a = a.replace(c, "<br/><br/>" + c);
            c = c.replace("  ", " ");
            a = a.replace(c, "<br/><br/>" + c);
            b.innerHTML = a
        }
    }
};
pui.maskScreen = function () {
    function b(h) {
        var g = {x: 0, y: 0};
        if (h.offsetParent) for (; ;) {
            g.x += h.offsetLeft;
            g.y += h.offsetTop;
            if (!h.offsetParent) break;
            h = h.offsetParent
        } else if (h.x) {
            g.x += h.x;
            g.y += h.y
        }
        if (document.documentElement.scrollHeight > document.documentElement.clientHeight) g.x += 8;
        return g
    }

    function a() {
        if (!(pui.scrollFrequency != null && pui.Ez != null && (new Date).getTime() - pui.Ez < pui.scrollFrequency)) {
            pui.Ez = (new Date).getTime();
            var h = document.documentElement.scrollTop, g = document.documentElement.scrollLeft;
            if (!pui.is_old_ie) {
                h = window.pageYOffset;
                g = window.pageXOffset
            }
            var l = b(pui.runtimeContainer);
            if (pui.J != null || pui.runtimeContainer.offsetLeft != 0 || pui.runtimeContainer.offsetTop != 0) {
                g -= l.x;
                if (Q == "dspf") h -= l.y; else h = -pui.runtimeContainer.offsetTop
            }
            if (e != null) {
                e.style.top = h + "px";
                e.style.left = g + "px"
            }
        }
    }

    var c = document.documentElement.clientWidth - 2, d = document.documentElement.clientHeight - 2;
    if (c < 0) c = 0;
    if (d < 0) d = 0;
    var e;
    if (pui.Zb == null) {
        e = document.createElement("div");
        e.id = "pui-screen-mask";
        pui.Zb = e
    } else e = pui.Zb;
    pui.runtimeContainer.appendChild(e);
    e.yH = true;
    e.style.position = "absolute";
    e.style.padding = "0px";
    e.style.left = "0px";
    e.style.top = "0px";
    if (pui.J != null || pui.runtimeContainer.offsetLeft != 0 || pui.runtimeContainer.offsetTop != 0) {
        e.style.display = "none";
        setTimeout(function () {
            var h = b(pui.runtimeContainer);
            e.style.left = 0 - h.x + "px";
            e.style.top = 0 - h.y + "px";
            e.style.display = ""
        }, 0)
    }
    e.style.width = c + "px";
    e.style.height = d + "px";
    e.style.backgroundColor = pui["window mask color"];
    pui.$i++;
    e.style.zIndex = pui.$i;
    var f = pui["window mask opacity"];
    e.style.opacity = f / 100;
    e.style.filter = "alpha(opacity=" + f + ")";
    if (typeof e.style.MozUserSelect != "undefined") e.style.MozUserSelect = "none";
    gc(window, "resize", function () {
        if (!(pui.resizeFrequency != null && pui.Dz != null && (new Date).getTime() - pui.Dz < pui.resizeFrequency)) {
            pui.Dz = (new Date).getTime();
            c = document.documentElement.clientWidth - 2;
            d = document.documentElement.clientHeight - 2;
            if (e != null) {
                e.style.height = d + "px";
                e.style.width = c + "px"
            }
            a()
        }
    });
    gc(window, "scroll", a)
};
pui.unmaskScreen = function () {
    if (pui.Zb != null) {
        var b = pui.Zb.parentNode;
        b == pui.runtimeContainer && b.removeChild(pui.Zb)
    }
};
pui.cK = function (b, a) {
    function c(l) {
        l = b.b.getElementsByTagName(l);
        for (var n = 0; n < l.length; n++) {
            var o = l[n];
            if (o.onclick) o.onclick = null;
            o.id = "";
            o.removeAttribute("id");
            o.disabled = true;
            o.readOnly = true;
            typeof o.Gl == "function" && o.Gl()
        }
    }

    var d = a.formats[0];
    pui.qd();
    c("a");
    c("input");
    c("button");
    c("div");
    c("select");
    c("textarea");
    var e;
    if (d != null) e = pui.ab(d.metaData.screen["mask screen"], d.data, d.ref);
    var f = true;
    if (e == "false") f = false;
    f && pui.maskScreen(b);
    e = document.createElement("div");
    pui.$i++;
    e.style.zIndex =
        pui.$i;
    e.style.position = "absolute";
    var h;
    if (d != null) h = pui.ab(d.metaData.screen["window left"], d.data, d.ref);
    pui.pu = h;
    if (h == null) h = "0px";
    if (h.length <= 2 || h.substr(h.length - 2) != "px") {
        h = parseInt(h);
        if (isNaN(h)) h = 0;
        h = h * pui.jK + pui.leftOffset;
        h += "px";
        pui.Dq = false
    }
    var g;
    if (d != null) g = pui.ab(d.metaData.screen["window top"], d.data, d.ref);
    pui.qu = g;
    if (g == null) g = "0px";
    if (g.length <= 2 || g.substr(g.length - 2) != "px") {
        g = parseInt(g);
        if (isNaN(g)) g = 0;
        g = g * pui.Pv + pui.wK;
        g += "px";
        pui.Dq = false
    }
    e.style.left = h;
    e.style.top = g;
    e.ze =
        true;
    pui.runtimeContainer.appendChild(e);
    b.b = e;
    pui.Mf = e
};
pui.UE = function () {
    for (var b = pui.getDimensions(pui.Mf), a, c = 0; c < pui.Mr.length; c++) {
        a = pui.getDimensions(pui.Mr[c]);
        if (a.x1 != a.x2 && a.y1 != a.y2) break
    }
    c = parseInt((a.x2 - (b.x2 - b.x1)) / 2) - b.x1;
    a = parseInt((a.y2 - (b.y2 - b.y1)) / 2) - b.y1;
    if (c < -b.x1) c = -b.x1;
    if (a < -b.y1) a = -b.y1;
    pui.Mf.style.left = c + "px";
    pui.Mf.style.top = a + "px"
};
pui.getDimensions = function (b) {
    for (var a = {x1: 99999, y1: 99999, x2: 0, y2: 0}, c = b.firstChild; c != null;) {
        if (!c.ze && !c.yH && c.style != null && c.style.position == "absolute" && c.pui) {
            var d = c.offsetLeft, e = c.offsetTop, f = d + c.offsetWidth, h = e + c.offsetHeight;
            if (d < a.x1) a.x1 = d;
            if (e < a.y1) a.y1 = e;
            if (f > a.x2) a.x2 = f;
            if (h > a.y2) a.y2 = h
        }
        c = c.nextSibling
    }
    if (b.id == "5250" && a.x1 == 99999 && a.x2 == 0 && a.y1 == 99999 && a.y2 == 0) {
        a.x1 = 0;
        a.y1 = 0;
        a.x2 = b.parentNode.offsetWidth;
        a.y2 = b.parentNode.offsetHeight
    }
    if (a.x1 == 99999) a.x1 = 0;
    if (a.y1 == 99999) a.y1 = 0;
    return a
};
pui.showMessageSubfileHelp = function (b) {
    if (pui.De != null && !document.body.contains(pui.De)) pui.De = null;
    if (pui.De != null && pui.De.style.display != "none" && pui.De.parentNode != null) pui.De.style.display = "none"; else {
        var a = b.id, c = a.substr(a.indexOf("."));
        a = Ec("_msgsflid" + c);
        var d = Ec("_msgsfldate" + c);
        if (d.length == 7 && d.substr(0, 1) == "1") {
            d = "20" + d.substr(1);
            var e = Number(d.substr(0, 4)), f = Number(d.substr(4, 2)) - 1;
            d = Number(d.substr(6, 2));
            d = new Date(e, f, d);
            e = pui.appJob.dateFormat;
            if (e == "") e = "*ISO";
            e = pui.formatting.keywords.DATFMT[e].Ec.replace(/\B/g,
                pui.appJob.dateSeparator);
            d = d.format(e, "en_US")
        }
        e = Ec("_msgsfltime" + c);
        f = pui.appJob.timeSeparator;
        if (f == null) f = ".";
        e = e.substr(0, 2) + f + e.substr(2, 2) + f + e.substr(4, 2);
        f = b.innerHTML;
        var h = Ec("_msgsflhelp" + c);
        h = h.replace(/&amp;N/g, "<br/><br/>");
        h = h.replace("Cause . . . . . :", "<strong>Cause:</strong>");
        h = h.replace("Recovery  . . . :", "<strong>Recovery:</strong>");
        c = '<div style="height: 30px; text-align: center; padding-top: 3px;"><strong>Additional Message Information</strong></div>';
        c += '<div style="height: 215px; overflow-y: auto; white-space: normal;">';
        c += "<strong>Message Id:</strong> " + a + "<br/><br/>";
        c += "<strong>Message:</strong> " + f + "<br/><br/>";
        c += "<strong>Date/Time:</strong> " + d + " " + e;
        c += h;
        c += "<br/><br/>";
        c += "</div>";
        b = b.parentNode.parentNode;
        a = parseInt(b.style.top);
        a -= 260;
        if (a < 5) a = 5;
        d = parseInt(b.style.left);
        d += 3;
        e = b.clientWidth - 25;
        if (e < 600) e = 600;
        var g;
        if (pui.De == null || pui.De.parentNode == null) {
            g = document.createElement("div");
            b.parentNode.appendChild(g)
        } else g = pui.De;
        g.style.position = "absolute";
        g.style.left = d + "px";
        g.style.top = a + "px";
        g.style.width =
            e + "px";
        g.style.height = "250px";
        g.style.border = "1px solid #cccccc";
        g.style.zIndex = pui.$i;
        g.style.whiteSpace = "normal";
        g.style.fontFamily = "Arial";
        g.style.backgroundColor = "#ffffff";
        g.style.color = "#555555";
        g.style.paddingLeft = "8px";
        g.innerHTML = c;
        g.style.display = "";
        var l = document.createElement("img");
        l.style.position = "absolute";
        l.style.top = "3px";
        l.style.right = "2px";
        l.style.cursor = "pointer";
        l.src = pui.normalizeURL("/profoundui/proddata/images/buttons/close/x1.png");
        l.onmouseover = function () {
            l.src = pui.normalizeURL("/profoundui/proddata/images/buttons/close/x1_hover.png")
        };
        l.onmouseout = function () {
            l.src = pui.normalizeURL("/profoundui/proddata/images/buttons/close/x1.png")
        };
        l.onclick = function () {
            g.style.display = "none"
        };
        g.appendChild(l);
        pui.De = g
    }
};
pui.eo = function (b) {
    b = vb(b);
    if (!(b.tagName == "INPUT" && b.type == "button")) pui.activeElement = b;
    b = b;
    if (b.parentNode && b.parentNode.comboBoxWidget) b = b.parentNode;
    b = b.parentNode;
    if (b != null) {
        var a = b.parentNode;
        if (a != null) {
            a = a.grid;
            a != null && a.ir(b.row)
        }
    }
};
pui.xh = function (b, a) {
    var c;
    if (b != null) c = vb(b);
    if (a != null) c = a;
    var d = c.parentNode, e = null;
    if (d != null && d.parentNode != null) e = d.parentNode.grid;
    var f = false;
    if (c.tagName == "A" || c.tagName == "BUTTON" || c.tagName == "INPUT" && c.type == "button" || c.button != null) f = true;
    var h = c;
    if (h.parentNode != null && h.parentNode.comboBoxWidget != null) h = h.parentNode;
    if (h.tagName == "OPTION" && h.parentNode.tagName == "SELECT") h = h.parentNode;
    if (h.tagName == "IMG" && h.parentNode.tagName == "BUTTON") {
        h = h.parentNode;
        f = true
    }
    pui.G.record = h.nf;
    pui.G.field =
        h.Rg;
    var g = Sb(c) + 1;
    if (g <= 0) g = 1;
    if (c.maxLength != null && c.maxLength >= 1 && g > c.maxLength) g = c.maxLength;
    pui.G.position = String(g);
    pui.G.st = h.id;
    pui.G.row = h.Bm;
    pui.G.gw = null;
    pui.G.dw = null;
    c = pui.qu;
    if (c != null) if (c.length <= 2 || c.substr(c.length - 2) != "px") {
        c = Number(c);
        if (!isNaN(c) && c > 0) {
            pui.G.gw = pui.G.row;
            if (pui.G.row != null) pui.G.row = Number(pui.G.row) + c
        }
    }
    if (d != null && d.row != null && typeof d.row == "number") {
        if (pui.G.row != null) {
            pui.G.row = Number(pui.G.row) + d.row;
            if (e != null && e.t) pui.G.row -= 1;
            pui.G.row = String(pui.G.row)
        }
        e !=
        null && e.ir(d.row)
    }
    d = pui.pu;
    if (d != null) if (d.length <= 2 || d.substr(d.length - 2) != "px") d = Number(d);
    if (h.Gk == null) pui.G.column = null; else {
        pui.G.column = Number(h.Gk) + Number(g) - 1;
        if (!isNaN(d) && d > 0) {
            pui.G.dw = pui.G.column;
            pui.G.column = pui.G.column + d + 1
        }
    }
    if (!f) for (f = 0; f < pui.kc.length; f++) {
        h = pui.kc[f];
        if (h != e) h.g.mf = 0
    }
};
pui.vx = function (b) {
    var a = false;
    b = vb(b);
    if (b == document.body) a = true;
    if (b == pui.runtimeContainer) a = true;
    if (b.parentNode != null && b.parentNode.panel != null) a = true;
    if (a) {
        pui.G.field = null;
        pui.G.position = null;
        pui.G.st = null
    }
};
pui.Qo = function (b) {
    b = vb(b);
    var a = b.className;
    if (a == null) a = "";
    a = Zb(a);
    if (a.indexOf(b.focusClass) == -1) a += " " + b.focusClass;
    b.className = a;
    if (b.parentNode && b.parentNode.pui && b.parentNode.pui.properties["field type"] === "combo box") {
        a = b.parentNode;
        var c = a.className;
        if (c == null) c = "";
        c = Zb(c);
        if (c.indexOf(b.focusClass) == -1) c += " " + b.focusClass;
        a.className = c
    }
};
pui.Lq = function (b) {
    b = vb(b);
    var a = b.className;
    if (a == null) a = "";
    for (a = Zb(a); a.indexOf(b.focusClass) >= 0;) a = a.replace(b.focusClass, "");
    b.className = Zb(a);
    if (b.parentNode && b.parentNode.pui && b.parentNode.pui.properties["field type"] === "combo box") {
        a = b.parentNode;
        var c = a.className;
        if (c == null) c = "";
        for (c = Zb(c); c.indexOf(b.focusClass) >= 0;) c = c.replace(b.focusClass, "");
        a.className = c
    }
};
pui.ys = function (b) {
    b = b || window.event;
    var a = b.keyCode;
    if (a < 48 || a > 90 && a < 96 || a > 111 && a < 186) if (a != 32) return;
    b = vb(b);
    if (b.comboBoxWidget != null) b = b.comboBoxWidget.getBox();
    if (b.value.length == b.maxLength && (pui.is_touch || Sb(b) >= b.maxLength)) {
        pui.Wc = "Enter";
        pui.click()
    }
};
pui.xK = function (b) {
    switch (b) {
        case 0:
            return "char";
        case 7:
            return "zoned";
        case 9:
            return "packed";
        case 10:
            return "floating";
        case 15:
            return "graphic";
        case 16:
            return "date";
        case 17:
            return "time";
        case 18:
            return "timestamp";
        default:
            return "char"
    }
};
pui.St = function (b) {
    function a(f) {
        for (var h = [], g = [], l = document.querySelectorAll("INPUT,SELECT,TEXTAREA"), n = null, o = null, i = 0; i < l.length; i++) {
            n = l[i];
            if (n == f) o = i; else !n.clientHeight || !n.clientWidth || n.readOnly == "true" || n.disabled == "true" || n.tabIndex == "-1" || (o ? g.push(n) : h.push(n))
        }
        f = g.concat(h);
        if (f.length > 0) return f[0];
        return null
    }

    for (b = b; (b = a(b)) != null;) {
        var c = b;
        if (b != null && b.comboBoxWidget != null) c = b.comboBoxWidget.getBox();
        var d = c.tagName;
        if (d == "INPUT" || d == "SELECT" || d == "TEXTAREA" || d == "A") if (!c.readOnly &&
            !c.disabled && b.style.visibility != "hidden" && c.tabIndex != "-1") {
            try {
                c.focus();
                if (document.activeElement != c) continue;
                pui["highlight on focus"] && c.select();
                setTimeout(function () {
                    pui.xh(null, c)
                }, 0)
            } catch (e) {
            }
            break
        }
    }
};
pui.Hp = function (b, a) {
    function c(v) {
        v = f.getElementsByTagName(v);
        for (var E, y = 0; y < v.length; y++) {
            E = v[y];
            E.tagName == "A" && E.parentNode.pui != null && E.parentNode.pui.properties != null && E.parentNode.pui.properties["field type"] == "hyperlink" && E.parentNode.tabIndex == -1 || E.tagName.toUpperCase() == "INPUT" && E.type.toUpperCase() == "BUTTON" || E.tabIndex == -1 || q.push(E)
        }
    }

    if (b.parentNode.comboBoxWidget != null) b = b.parentNode;
    var d = parseInt(b.style.left);
    if (isNaN(d)) return null;
    var e = parseInt(b.style.top);
    if (isNaN(e)) return null;
    var f = b.parentNode, h = f.parentNode;
    if (h.grid != null) {
        var g = parseInt(b.parentNode.style.left);
        if (isNaN(g)) return null;
        var l = parseInt(b.parentNode.style.top);
        if (isNaN(l)) return null;
        var n = parseInt(h.style.left);
        if (isNaN(n)) return null;
        var o = parseInt(h.style.top);
        if (isNaN(o)) return null;
        d += g + n;
        e += l + o;
        f = h.parentNode
    }
    var i = null, r = 99999, k = 99999, q = [];
    c("input");
    c("select");
    c("textarea");
    c("a");
    for (var s = 0; s < q.length; s++) {
        var t = q[s];
        if (!(t.readOnly || t.disabled || t.style.visibility == "hidden" || t.parentNode.style.visibility ==
            "hidden")) {
            if (t.tagName == "A") t = t.parentNode;
            l = t;
            if (t.parentNode.comboBoxWidget != null) l = t.parentNode;
            t = parseInt(l.style.left);
            if (!isNaN(t)) {
                var u = parseInt(l.style.top);
                if (!isNaN(u)) {
                    h = l.parentNode.parentNode;
                    if (h.grid != null) {
                        g = parseInt(l.parentNode.style.left);
                        if (isNaN(g)) return null;
                        l = parseInt(l.parentNode.style.top);
                        if (isNaN(l)) return null;
                        n = parseInt(h.style.left);
                        if (isNaN(n)) continue;
                        o = parseInt(h.style.top);
                        if (isNaN(o)) continue;
                        t += g + n;
                        u += l + o
                    }
                    h = Math.abs(d - t);
                    g = Math.abs(e - u);
                    if (a == "down" && u > e || a ==
                        "up" && e > u) if (g < k || g == k && h < r) {
                        i = q[s];
                        r = h;
                        k = g
                    }
                    if (a == "right" && t > d || a == "left" && d > t) if (g <= 3 && h < r) {
                        i = q[s];
                        r = h;
                        k = g
                    }
                }
            }
        }
    }
    if (i != null) try {
        i.focus();
        pui["highlight on focus"] && i.select();
        setTimeout(function () {
            pui.xh(null, i)
        }, 0)
    } catch (w) {
    }
};
pui.ca = pui.Wb = function (b) {
    if (b == null) return "";
    return pui.handler != null || pui.viewdesigner || pui.pjsDefaultMode === "case-sensitive" ? b : b.toUpperCase()
};
pui.Rx = function (b) {
    if (!b.disabled && !b.readOnly) if (b.tagName == "TEXTAREA" || b.tagName == "INPUT" && (b.type == "text" || b.type == "number" || b.type == "password")) {
        var a = b.at;
        if (pui.is_touch && !pui.is_mouse_capable) a = Sb(b);
        if (a == null) return false;
        if (a < 0) a = 0;
        a = b.value.substr(0, a);
        if (b.WA == true && b.maxLength != null) for (; a.length < b.maxLength;) a = "0" + a;
        var c = b.value !== a;
        b.value = a;
        b.modified = true;
        c && typeof b.onchange === "function" && b.onchange()
    }
    if (b.gj == true) {
        pui.Wc = "Enter";
        pui.click()
    } else pui.St(b);
    return false
};
pui.translate = function (b) {
    var a = b.translations;
    if (a != null) {
        for (var c in a) a[c] = pui.formatting.Hk(a[c]);
        c = "";
        b = b.layers;
        for (var d = 0; d < b.length; d++) for (var e = b[d].formats, f = 0; f < e.length; f++) {
            var h = e[f], g = h.metaData.items;
            c += pui.Tx(h.metaData.screen, a, true);
            for (h = 0; h < g.length; h++) c += pui.Tx(g[h], a)
        }
        if (c != "") return "Missing translation data:\n\n" + c
    }
};
pui.Tx = function (b, a, c) {
    c = c === true;
    var d = "";
    for (var e in b) {
        var f = b[e];
        if (pui.Ia(f)) {
            for (var h = f.translations, g = [], l = 0; l < h.length; l++) {
                var n = h[l], o = n == 0 ? "" : a[n];
                if (o != null) g.push(o); else {
                    o = f.designValue;
                    if (h.length > 1) o = JSON.parse(o)[l];
                    g.push(o);
                    d += c ? 'Record format "' + Zb(b["record format name"]) + '" ' : 'Widget "' + Zb(b.id) + '" ';
                    d += ', property "' + Zb(e) + '". ';
                    d += "Phrase: " + o;
                    d += " (" + n + ").\n"
                }
            }
            if (g.length == 1) b[e] = g[0]; else if (g.length > 1) b[e] = JSON.stringify(g)
        }
    }
    return d
};
pui.wikihelp.onscroll = function () {
    pui.wikihelp.hA != null && clearTimeout(pui.wikihelp.hA);
    pui.wikihelp.hA = setTimeout(pui.wikihelp.iI, 17)
};
pui.wikihelp.iI = function () {
    for (var b = 0; b < pui.wikihelp.overlays.length; b++) {
        var a = pui.wikihelp.overlays[b];
        if (!a.pui.isVisible) {
            a.pui.isVisible = pui.wikihelp.isVisible(Tb(a.pui.fieldId));
            if (a.pui.isVisible) a.style.display = "block"
        }
    }
};
pui.wikihelp.isVisible = function (b) {
    if (b == null) return false;
    if (b.Jb && b.Yc) {
        var a = document.getElementById(b.Jb);
        if (!a) return false;
        if (a.getTab() !== parseInt(b.Yc, 10)) return false
    }
    var c = b.getBoundingClientRect(), d = Math.round((c.left + c.right) / 2), e = Math.round((c.top + c.bottom) / 2);
    a = document.elementFromPoint(c.left + 2, c.top + 2);
    var f = document.elementFromPoint(c.right - 2, c.bottom - 2);
    c = document.elementFromPoint(c.left + 2, c.bottom - 2);
    d = document.elementFromPoint(d, e);
    if (a === b || d === b || f === b || c === b || b.contains(a) ||
        b.contains(d) || b.contains(f) || b.contains(c)) return true;
    return b.parentNode != null && b.parentNode.getAttribute("container") == "true"
};
pui.wikihelp.overlayOn = function () {
    if (pui.layers != null) {
        gc(window, "scroll", pui.wikihelp.onscroll);
        if (pui.wikihelp.overlays.length > 0) for (var b = 0; b < pui.wikihelp.overlays.length; b++) {
            var a = pui.wikihelp.overlays[b];
            a.pui.isVisible = pui.wikihelp.isVisible(Tb(a.pui.fieldId));
            if (a.pui.isVisible) a.style.display = "block";
            var c = document.getElementById(a.pui.fieldId);
            pui.wikihelp.PB(c, a)
        } else pui.wikihelp.Dx(true)
    }
};
pui.wikihelp.Dx = function (b) {
    for (var a = Oc(), c = 0; c < pui.layers.length; c++) for (var d = pui.layers[c], e = 0; e < d.formats.length; e++) {
        var f = d.formats[e];
        if (!(pui.ic(a, f.name) < 0)) for (var h = 0; h < f.metaData.items.length; h++) {
            var g = f.metaData.items[h];
            if (g.id) {
                var l = Tb(g.id);
                if (l) if (g["field type"] !== "layout") if (g["field type"] !== "panel") if (g["field type"] !== "css panel") if (g.visibility !== "hidden") {
                    var n = {};
                    n.dspf = f.file;
                    n.recfmt = f.name;
                    n.fieldId = g.id;
                    n["field type"] = g["field type"];
                    n.fieldName = typeof g.value == "object" &&
                    g.value.fieldName ? g.value.fieldName : typeof g["menu response"] == "object" && g["menu response"].fieldName ? g["menu response"].fieldName : typeof g.response == "object" && g.response.fieldName ? g.response.fieldName : "";
                    if (!(typeof pui.wikihelp.skipItem == "function" && pui.wikihelp.skipItem(n) === true)) {
                        var o = document.createElement("div");
                        o.className = "pui-wikih-overlay";
                        o.style.position = "absolute";
                        l.parentNode.appendChild(o);
                        o.pui = n;
                        if (l.Jb && l.Yc) {
                            o.pui.Jb = l.Jb;
                            o.pui.Yc = parseInt(l.Yc, 10)
                        }
                        o.pui.isVisible = pui.wikihelp.isVisible(l);
                        o.style.display = o.pui.isVisible && b ? "block" : "none";
                        if (g["field type"] === "grid" && g["csv export"] === "true") o.pui.Qj = pui.Qj;
                        if (g["field type"] === "styled button") o.pui.HH = g.height;
                        o.style.zIndex = l.style.zIndex + 100;
                        if (l.style.top.length > 0) o.style.top = l.style.top; else if (l.style.bottom.length > 0) o.style.bottom = l.style.bottom;
                        if (l.style.left.length > 0) o.style.left = l.style.left; else if (l.style.right.length > 0) o.style.right = l.style.right;
                        pui.wikihelp.overlayText && o.appendChild(document.createTextNode(pui.wikihelp.overlayText));
                        if (pui.wikihelp.image) {
                            g = document.createElement("img");
                            g.src = pui.wikihelp.image;
                            o.appendChild(g)
                        }
                        pui.wikihelp.PB(l, o);
                        gc(o, "click", pui.wikihelp.fI);
                        pui.wikihelp.overlays.push(o)
                    }
                }
            }
        }
    }
};
pui.wikihelp.PB = function (b, a) {
    b.getBoundingClientRect();
    var c = b.offsetWidth, d = b.offsetHeight;
    if (a.pui["field type"] === "radio button") {
        a.style.margin = "3px 3px 0 5px";
        if (b.nextSibling && b.nextSibling.tagName.toLowerCase() == "div") {
            c = b.offsetWidth + b.nextSibling.offsetWidth;
            d = Math.max(b.offsetHeight, b.nextSibling.offsetHeight)
        }
    } else if (a.pui["field type"] === "checkbox") {
        a.style.margin = "2px";
        if (b.nextSibling && b.nextSibling.tagName.toLowerCase() == "div") {
            c = b.offsetWidth + b.nextSibling.offsetWidth;
            d = Math.max(b.offsetHeight,
                b.nextSibling.offsetHeight)
        }
    } else if (a.pui["field type"] === "tab panel") {
        d = b.childNodes[1].offsetHeight;
        a.style.fontSize = d * 0.85 + "px"
    } else if (a.pui["field type"] === "date field") c = b.offsetWidth + 22; else if (a.pui["field type"] === "grid" && a.pui.Qj != null) d += a.pui.Qj; else if (a.pui["field type"] === "styled button" && !a.pui.HH) {
        d = 0;
        for (var e = b.firstChild; e != null;) {
            if (e.style != null && e.style.position == "absolute") {
                var f = e.offsetTop + e.offsetHeight;
                if (f > d) d = f
            }
            e = e.nextSibling
        }
    }
    a.style.width = c + "px";
    a.style.height = d +
        "px";
    if (pui.wikihelp.overlayText && pui.wikihelp.fontScale != false) {
        e = Number(pui.wikihelp.fontScale);
        if (isNaN(e)) e = 1.56;
        a.style.fontSize = Math.min(c / pui.wikihelp.overlayText.length * e, d * e / 2) + "px"
    }
    if (pui.wikihelp.image) {
        e = a.getElementsByTagName("img")[0];
        if (pui.wikihelp.imageSquare !== false) {
            c = Math.min(c, d);
            e.width = c;
            e.height = c
        } else {
            e.width = c;
            e.height = d
        }
    }
};
pui.wikihelp.overlayOff = function () {
    ic(window, "scroll", pui.wikihelp.onscroll);
    for (var b = 0; b < pui.wikihelp.overlays.length; b++) pui.wikihelp.overlays[b].style.display = "none"
};
pui.wikihelp.fI = function (b) {
    b = b || window.event;
    yb(b);
    var a = b.target || b.srcElement;
    if (a.parentNode.pui && a.parentNode.pui.dspf) a = a.parentNode;
    var c = {};
    c.dspf = a.pui.dspf;
    c.recfmt = a.pui.recfmt;
    c.fieldId = a.pui.fieldId;
    c.fieldName = a.pui.fieldName;
    c["field type"] = a.pui["field type"];
    c.event = b;
    typeof pui.wikihelp.onclick === "function" && pui.wikihelp.onclick(c);
    return false
};
pui.wikihelp.getScreenInfo = function () {
    pui.wikihelp.overlays.length < 1 && pui.wikihelp.Dx(false);
    var b = {};
    b.formats = Oc();
    b.dspf = pui.layers[0].formats[0].file;
    b.fields = [];
    for (var a = 0; a < pui.wikihelp.overlays.length; a++) {
        var c = {};
        c.id = pui.wikihelp.overlays[a].pui.fieldId;
        if (pui.wikihelp.overlays[a].pui.fieldName && pui.wikihelp.overlays[a].pui.fieldName.length > 0) c.name = pui.wikihelp.overlays[a].pui.fieldName;
        b.fields.push(c)
    }
    return b
};
pui.tz = function (b, a) {
    if (b == "response" || b == "chart response" || b == "menu response" || b == "upload response" || b == "tab response" || b == "active tab" || b == "active section" || b == "radio button group" || b == "page down response" && a.grid != null && a.grid.A != null || b == "page up response" && a.grid != null && a.grid.A != null || b == "value" && (a.tagName == "INPUT" && a.type != "button" || a.tagName == "SELECT" || a.tagName == "TEXTAREA" || a.comboBoxWidget != null || a.Ha != null || a.signaturePad != null || a.aa != null)) return true;
    return false
};
pui.Ao = {
    Jv: function (b) {
        this.ps = b.ps;
        this.Lg = b.Lg;
        if (this.Lg !== "previous") this.Lg = "new";
        this.Rf = b.Rf === "true" || b.Rf === true;
        pui.Ao.um();
        var a = b.b.id;
        this.Kd = b.b;
        this.Kd.id = "pui-previous";
        this.Kd.style.zIndex = 10;
        b = this.Kd.getElementsByTagName("*");
        for (var c = 0; c < b.length; c++) {
            var d = b[c];
            d.hasAttribute("id") && d.removeAttribute("id");
            typeof d.Gl == "function" && d.Gl()
        }
        this.Ci = document.createElement("div");
        this.Ci.id = a;
        this.Ci.style.zIndex = 20;
        this.Kd.parentNode.appendChild(this.Ci);
        return this.Ci
    }, animate: function () {
        this.kE();
        var b = this.Ci;
        if (this.Lg === "previous") {
            this.Kd.style.zIndex = 30;
            b = this.Kd
        }
        if (!this.Rf || this.Lg === "previous") b.addEventListener("animationend", function () {
            pui.Ao.um()
        }, false); else {
            var a = document.createElement("div");
            a.className = "pui-animation-mask";
            this.Kd.firstChild ? this.Kd.insertBefore(a, this.Kd.firstChild) : this.Kd.appendChild(a)
        }
        this.Lg === "new" && b.addEventListener("animationend", function () {
            b.className = ""
        }, false);
        b.className = "pui-" + this.ps + "-" + this.Lg
    }, um: function () {
        if (this.Kd) {
            this.Kd.innerHTML = "";
            this.Kd.parentNode && this.Kd.parentNode.removeChild(this.Kd);
            this.Kd = null
        }
    }, kE: function () {
        var b = pui.getComputedStyle(this.Ci);
        if (b != null && (b.height == "0px" || b.height == "auto")) {
            pui.wh.padding = document.body.style.padding;
            document.body.style.padding = "0";
            pui.wh.height = document.body.style.height;
            document.body.style.height = "100%";
            document.body.parentNode.style.padding = "0";
            document.body.parentNode.style.height = "100%";
            pui.wh.overflow = document.body.style.overflow;
            document.body.style.overflow = "hidden";
            this.Ci.style.padding =
                "0";
            this.Ci.style.height = "100%"
        }
        pui.resize()
    }
};
pui.bK = function () {
    function b() {
        for (var g = h.options.length - 1; g >= 0; g--) h.remove(g);
        var l = false;
        for (g = 0; g < pui.yu.length; g++) {
            var n = pui.yu[g];
            if (n.height != null) if (n.width != null) {
                var o = h.options.length;
                h.options[o] = new Option(n.description, n.height + "x" + n.width);
                if (n.height == e && n.width == f || n.width == e && n.height == f) l = h.options[o].selected = true
            }
        }
        if (!l) {
            o = h.options.length;
            h.options[o] = new Option(e + " x " + f, e + "x" + f);
            h.options[o].selected = true
        }
    }

    var a = Tb("pui");
    if (a != null) {
        var c = document.createElement("div"), d =
            pui.$o.split("x"), e = Number(d[1]);
        if (isNaN(e)) e = 320;
        var f = Number(d[0]);
        if (isNaN(f)) f = 640;
        c.style.position = "absolute";
        c.gu = true;
        c.style.border = "2px solid #999999";
        c.style.backgroundColor = "#333333";
        c.style.borderRadius = "15px";
        c.style.boxShadow = "6px 6px 12px rgba(50, 66, 64, 0.67)";
        c.style.width = f + 60 + "px";
        c.style.height = e + 60 + "px";
        c.style.top = "40px";
        c.style.left = "20px";
        a.style.width = f + "px";
        a.style.height = e + "px";
        a.style.left = "50px";
        a.style.top = "70px";
        a.style.backgroundColor = "white";
        a.style.overflow = "hidden";
        a.parentNode.insertBefore(c, a);
        var h = document.createElement("select");
        h.style.position = "absolute";
        h.style.width = "200px";
        h.style.top = "10px";
        h.style.left = "50px";
        h.style.fontFamily = "sans-serif";
        h.style.fontSize = "13px";
        b();
        jc({
            url: cc("PUI0009112.pgm"), method: "post", params: {}, suppressAlert: true, handler: function (g) {
                if (g.success != true) g.message != null ? pui.alert(g.message) : pui.alert("Error occurred while loading canvas sizes."); else {
                    g = g.sizes;
                    if (g != null && g != "") {
                        pui.yu = eval(g);
                        b()
                    }
                }
            }, onfail: function () {
                pui.alert("Error occurred while loading canvas sizes.")
            }
        });
        h.onchange = function () {
            var g = h.value.split("x");
            e = Number(g[1]);
            if (isNaN(e)) e = 320;
            f = Number(g[0]);
            if (isNaN(f)) f = 640;
            c.style.width = f + 60 + "px";
            c.style.height = e + 60 + "px";
            a.style.width = f + "px";
            a.style.height = e + "px";
            pui.resize(true)
        };
        document.body.appendChild(h);
        d = document.createElement("img");
        d.src = "/profoundui/proddata/images/FlatIcons/24x24/rotate.png";
        d.style.position = "absolute";
        d.style.top = "8px";
        d.style.left = "260px";
        d.style.cursor = "pointer";
        d.title = "Rotate";
        d.onclick = function () {
            var g = c.style.height;
            c.style.height =
                c.style.width;
            c.style.width = g;
            g = a.style.height;
            a.style.height = a.style.width;
            a.style.width = g;
            pui.resize(true)
        };
        document.body.appendChild(d)
    }
};
pui.ft = function (b) {
    if (b == null) b = "pui";
    if (typeof b == "string") b = document.getElementById(b);
    if (b != null) {
        var a;
        if (b.parentNode.className == "ipad-emulator") {
            pui.pb = true;
            a = false
        }
        if (b.parentNode.className == "iphone-emulator") {
            pui.pb = true;
            pui.oi = true;
            a = false
        }
        if (pui.pb) {
            if (a) {
                var c = document.createElement("img");
                c.src = "/profoundui/proddata/images/ipad/finger.png";
                c.style.position = "absolute";
                c.style.cursor = "crosshair";
                c.style.zIndex = 99;
                gc(document, "mousemove", function (d) {
                    var e = Jc(d);
                    e += 3;
                    c.style.left = e + "px";
                    d =
                        Kc(d);
                    d += 3;
                    c.style.top = d + "px"
                });
                gc(document, "mousedown", function (d) {
                    var e = Jc(d);
                    e += 1;
                    c.style.left = e + "px";
                    d = Kc(d);
                    d += 1;
                    c.style.top = d + "px"
                })
            }
            b = document.createElement("input");
            b.style.position = "absolute";
            if (pui.oi) {
                b.style.left = "90px";
                b.style.top = "164px";
                b.style.width = "223px";
                b.style.backgroundColor = "#d3dae4"
            } else {
                b.style.left = "285px";
                b.style.top = "89px";
                b.style.width = "455px"
            }
            b.style.color = "#999999";
            b.style.borderStyle = "none";
            b.style.fontFamily = "Trebuchet MS, Sans-Serif";
            b.style.fontSize = "14px";
            b.value =
                location.href;
            if (!pui.oi) {
                b.onclick = function () {
                    Tb("ipadKeyboard").style.display = ""
                };
                b.onblur = function () {
                    Tb("ipadKeyboard").style.display = "none"
                }
            }
            document.body.appendChild(b);
            a && document.body.appendChild(c)
        } else if (pui.$o != null) {
            pui.bK();
            pui.pb = true;
            pui.oi = true
        }
    }
};
pui.yu = [{description: "iPhone (320 x 480)", height: 320, width: 480}, {
    description: "iPad (768 x 1024)",
    height: 768,
    width: 1024
}, {description: "Android Phone (360 x 640)", height: 360, width: 640}, {
    description: "Android Phone (480 x 800)",
    height: 480,
    width: 800
}, {description: "Android Tablet (600 x 1024)", height: 600, width: 1024}, {
    description: "Android Tablet (800 x 1280)",
    height: 800,
    width: 1280
}];
pui.dragDropInfo = {};
pui.zE = function (b, a) {
    function c(g) {
        function l(N) {
            N.pointerType && N.stopImmediatePropagation && N.stopImmediatePropagation();
            var O = Kc(N), V = Jc(N), X = O - z, ga = V - I;
            if (ga == 0 && X == 0) return true;
            pui.az(B) || document.body.appendChild(B);
            if (f && b.grid.bg) {
                var U = Tb(b.grid.bg);
                U.style.visibility = "hidden";
                U.style.display = "none"
            }
            if (e) {
                X += q;
                ga += k
            }
            B.style.top = J + X + "px";
            B.style.left = H + ga + "px";
            s && N.preventDefault();
            X = K;
            ga = false;
            for (U = 0; U < E.length; U++) {
                var Z = E[U], la = B.offsetLeft, Y = B.offsetTop, oa = la + B.offsetWidth, qa = Y + B.offsetHeight;
                if (Z.WB == null || Z.XB == null) {
                    var ma = pui.Xe(Z.parentNode);
                    Z.WB = ma[0];
                    Z.XB = ma[1]
                }
                ma = Z.offsetLeft + Z.WB;
                var ka = Z.offsetTop + Z.XB, ea = ma + Z.offsetWidth, da = ka + Z.offsetHeight;
                if (Z.parentNode.getAttribute("container") == "true") {
                    var Ba = ea - Z.offsetWidth + Z.parentNode.offsetWidth - Z.offsetLeft;
                    if (Ba < ea) ea = Ba
                }
                Ba = false;
                if (Z.th != null) {
                    var Ea = pui.Xe(Z.th.g), pa = Ea[1] + Z.th.g.offsetHeight;
                    if (V > Ea[0] + Z.th.g.offsetWidth || V < Ea[0] || O > pa || O < Ea[1]) Ba = true
                }
                if (ga || ma > oa || ea < la || ka > qa || da < Y || Ba) if (Z.th != null) pui.La(Z, "grid-drop-target");
                else {
                    if (Z.tagName == "IMG") if (Z.Uh != null) Z.style.backgroundColor = Z.Uh;
                    if (Z.mm != null) Z.style.borderColor = Z.mm
                } else {
                    if (Z.th != null) pui.ya(Z, "grid-drop-target"); else {
                        if (Z.mm == null) Z.mm = Z.style.borderColor;
                        if (Z.mm == null) Z.mm = "";
                        Z.style.borderColor = "#9999ff";
                        if (Z.tagName == "IMG") {
                            if (Z.Uh == null) Z.Uh = Z.style.backgroundColor;
                            if (Z.Uh == null) Z.Uh = "";
                            Z.style.backgroundColor = "#D8F0FD"
                        }
                    }
                    ga = true;
                    K = Z
                }
            }
            ga || (K = null);
            if (X != K) {
                u++;
                if (X != null) {
                    pui.dragDropInfo = {};
                    pui.dragDropInfo["dd element"] = b;
                    pui.dragDropInfo["dd element id"] =
                        b.id;
                    if (w != null) pui.dragDropInfo["dd record number"] = w;
                    pui.dragDropInfo.proxy = B;
                    pui.dragDropInfo.event = N;
                    var ia = n(X);
                    pui.dragDropInfo["target element"] = ia.dom;
                    pui.dragDropInfo["target element id"] = ia.id;
                    if (ia.Pb != null) pui.dragDropInfo["target record number"] = ia.Pb;
                    pui.dragDropInfo.text = w != null ? "ondragleave: Dragging row " + w + " of grid " + b.id : "ondragleave: Dragging element " + b.id;
                    pui.dragDropInfo.text += ia.Pb != null ? " off of row " + ia.Pb + " of grid " + ia.id : " off of element " + ia.id;
                    d("ondragleave")
                }
                if (K !=
                    null) {
                    pui.dragDropInfo = {};
                    pui.dragDropInfo["dd element"] = b;
                    pui.dragDropInfo["dd element id"] = b.id;
                    if (w != null) pui.dragDropInfo["dd record number"] = w;
                    pui.dragDropInfo.proxy = B;
                    pui.dragDropInfo.event = N;
                    ia = n(K);
                    pui.dragDropInfo["target element"] = ia.dom;
                    pui.dragDropInfo["target element id"] = ia.id;
                    if (ia.Pb != null) pui.dragDropInfo["target record number"] = ia.Pb;
                    pui.dragDropInfo.text = w != null ? "ondragenter: Dragging row " + w + " of grid " + b.id : "ondragenter: Dragging element " + b.id;
                    pui.dragDropInfo.text += ia.Pb == 0 ?
                        " before row " + (ia.Pb + 1) + " of grid " + ia.id : ia.Pb != null ? " after row " + ia.Pb + " of grid " + ia.id : " over element " + ia.id;
                    d("ondragenter");
                    var m = function (Wa) {
                        setTimeout(function () {
                            if (Wa == u) {
                                var kb = false;
                                if (La()) {
                                    ia.grid.w -= 1;
                                    ia.Pb -= 1;
                                    kb = true
                                } else if (Ta()) {
                                    ia.grid.w += 1;
                                    ia.Pb += 1;
                                    kb = true
                                }
                                if (kb) {
                                    ia.grid.Je ? ia.grid.s.Gh(ia.grid.w) : ia.grid.getData();
                                    pui.dragDropInfo.text = w != null ? "ondragleave: Dragging row " + w + " of grid " + b.id : "ondragleave: Dragging element " + b.id;
                                    pui.dragDropInfo.text += " off of row " + pui.dragDropInfo["target record number"] +
                                        " of grid " + ia.id;
                                    d("ondragleave");
                                    pui.dragDropInfo["target record number"] = ia.Pb;
                                    pui.dragDropInfo.text = w != null ? "ondragenter: Dragging row " + w + " of grid " + b.id : "ondragenter: Dragging element " + b.id;
                                    pui.dragDropInfo.text += ia.Pb == 0 ? " before row " + (ia.Pb + 1) + " of grid " + ia.id : " after row " + ia.Pb + " of grid " + ia.id;
                                    d("ondragenter");
                                    setTimeout(function () {
                                        m(Wa)
                                    }, 35)
                                }
                            }
                        }, 350)
                    }, La = function () {
                        if (ia.row == null) return false;
                        if (ia.grid.me()) return false;
                        if (ia.row == 0) return true;
                        if (ia.row == 1 && ia.grid.t) return true;
                        return false
                    }, Ta = function () {
                        if (ia.row == null) return false;
                        if (ia.grid.Qd()) return false;
                        if (ia.row == ia.grid.cells.length) return true;
                        return false
                    };
                    if (La() || Ta()) {
                        O = 0;
                        if (typeof pui["drop scroll wait"] == "number") O = pui["drop scroll wait"];
                        O >= 0 && setTimeout(function () {
                            m(u)
                        }, O)
                    }
                }
            }
            s || yb(N)
        }

        function n(N) {
            var O = N.th;
            if (O == null) return {dom: N, id: N.id}; else {
                var V = N = N.IF;
                if (O.t) V -= 1;
                V = V + O.w - 1;
                return {dom: O.g, grid: O, id: O.g.id, row: N, Pb: V}
            }
        }

        function o() {
            u++;
            if (e) {
                pui.az(B) && B.parentNode.removeChild(B);
                B = null
            }
            if (s) {
                ic(document,
                    "touchmove", l);
                ic(document, "touchend", o)
            } else {
                ic(document, "mousemove", l);
                ic(document, "mouseup", o)
            }
            document.onselectstart = L;
            if (K != null) {
                pui.dragDropInfo = {};
                pui.dragDropInfo["dd element"] = b;
                pui.dragDropInfo["dd element id"] = b.id;
                if (w != null) pui.dragDropInfo["dd record number"] = w;
                pui.dragDropInfo.proxy = B;
                pui.dragDropInfo.event = g;
                var N = n(K);
                pui.dragDropInfo["target element"] = N.dom;
                pui.dragDropInfo["target element id"] = N.id;
                if (N.Pb != null) pui.dragDropInfo["target record number"] = N.Pb;
                pui.dragDropInfo.text =
                    w != null ? "ondrop: Dropped row " + w + " of grid " + b.id : "ondrop: Dropped element " + b.id;
                pui.dragDropInfo.text += N.Pb == 0 ? " before row " + (N.Pb + 1) + " of grid " + N.id : N.Pb != null ? " after row " + N.Pb + " of grid " + N.id : " into element " + N.id;
                if (K.th != null) pui.La(K, "grid-drop-target"); else {
                    if (K.tagName == "IMG") K.style.backgroundColor = K.Uh;
                    if (K.Uh != null) K.style.borderColor = K.Uh
                }
                if (!(N.dom.id == b.id && w != null && N.Pb != null && (w == N.Pb || w == N.Pb + 1))) {
                    pui.dragDropInfo.cancel = false;
                    d("ondrop");
                    if (pui.dragDropInfo.cancel != true) if (pui.Oc.bt !=
                        null || pui.Oc.ct || pui.Oc.Vv != null || pui.Oc.Wv) {
                        pui.Oc.Ld = true;
                        pui.ia = pui.Lx;
                        pui.Ld();
                        pui.ia = "false"
                    }
                }
            }
            if (!e && pui.Oc.Ld != true) {
                b.style.left = H + "px";
                b.style.top = J + "px"
            }
            if (f) b.grid.nt = false
        }

        g.pointerType && g.stopImmediatePropagation && g.stopImmediatePropagation();
        var i = vb(g), r = pui.Xe(b.parentNode), k = r[0], q = r[1], s = false;
        if (g) if (g.touches != null) {
            if (g.touches.length != 1) return;
            s = true
        } else if (g.pointerType === "touch") s = true;
        s && g.preventDefault();
        var t, u = 0, w;
        if (h) if (i.tagName == "TEXTAREA" || i.tagName == "INPUT") return;
        if (f) {
            r = b.grid.dataArray;
            if (b.grid.isFiltered()) r = b.grid.Cb;
            var v = b.grid.cells.length - 1;
            if (!b.grid.wb()) {
                t = r.length - b.grid.w + 1;
                if (v > t) v = t
            }
            t = 0;
            if (b.grid.t) t = 1;
            i = vb(g);
            if (i.tagName == "A" || i.tagName == "IMG" || i.tagName == "INPUT" || i.tagName == "SELECT" || i.tagName == "TEXTAREA") return;
            for (; i != null && (i.row == null || i.col == null);) i = i.parentNode;
            if (i != null && i.row >= t) t = i.row; else return;
            if (t > v) return;
            w = t + b.grid.w;
            if (b.grid.t) w -= 1;
            if (r[w - 1] !== null && r[w - 1].length != 0 && r[w - 1].P != null) w = r[w - 1].P;
            b.grid.nt = true
        }
        v = a["drop targets"];
        var E = [];
        if (v != null && v != "") {
            v = v.split(",");
            for (i = 0; i < v.length; i++) {
                var y = Tb(v[i]);
                if (y != null) if (y.grid != null) {
                    var F = y.grid.v, D = F.length - 1;
                    if (!y.grid.wb()) {
                        r = y.grid.dataArray;
                        if (y.grid.isFiltered()) r = y.grid.Cb;
                        r = r.length - y.grid.w + 2;
                        if (D > r) D = r
                    }
                    for (r = y.grid.t ? 1 : 0; r <= D; r++) {
                        F[r].IF = r;
                        E.push(F[r])
                    }
                } else E.push(y)
            }
        }
        var B = b;
        if (e) {
            if (f) {
                t = b.grid.cells[t];
                r = t[0];
                B = document.createElement("div");
                B.style.position = "absolute";
                B.style.left = b.style.left;
                B.style.top = parseInt(b.style.top) + parseInt(r.style.top) + "px";
                i = parseInt(b.style.width);
                i -= 2;
                if (a.scrollbar != "none") i -= 16;
                if (i < 5) i = 5;
                B.style.width = i + "px";
                r = parseInt(r.style.height);
                r -= 2;
                if (r < 5) r = 5;
                B.style.height = r + "px";
                for (i = 0; i < t.length; i++) {
                    r = t[i].cloneNode(true);
                    r.style.top = "0px";
                    r.onclick = null;
                    r.onmousedown = null;
                    r.onmouseup = null;
                    B.appendChild(r)
                }
            } else B = b.cloneNode(true);
            B.style.zIndex = 701;
            if (!pui.pb) B.style.cursor = "move";
            B.style.opacity = 0.6;
            B.style.filter = "alpha(opacity=60)";
            B.style.border = "1px solid #333333"
        }
        if (B.style.top.indexOf("calc") !== -1) B.style.top =
            window.getComputedStyle(b, null).getPropertyValue("top");
        if (B.style.left.indexOf("calc") !== -1) B.style.left = window.getComputedStyle(b, null).getPropertyValue("left");
        var I = Jc(g), z = Kc(g), H = parseInt(B.style.left), J = parseInt(B.style.top), K = null,
            L = document.onselectstart;
        pui.dragDropInfo = {};
        pui.dragDropInfo["dd element"] = b;
        pui.dragDropInfo["dd element id"] = b.id;
        if (w != null) pui.dragDropInfo["dd record number"] = w;
        pui.dragDropInfo.proxy = B;
        pui.dragDropInfo.event = g;
        pui.dragDropInfo.text = w != null ? "ondragstart: Dragging row " +
            w + " of grid " + b.id : "ondragstart: Dragging element " + b.id;
        d("ondragstart");
        if (s) {
            gc(document, "touchmove", l);
            gc(document, "touchend", o)
        } else {
            gc(document, "mousemove", l);
            gc(document, "mouseup", o)
        }
        document.onselectstart = za(false)
    }

    function d(g) {
        var l = a[g];
        if (l != null && l != "") try {
            if (eval(l) == false) return false
        } catch (n) {
            pui.qc(n, g + " Error:\n");
            return false
        }
    }

    b.onselectstart = function (g) {
        if (f || h) {
            g = vb(g);
            if (g.tagName == "TEXTAREA" || g.tagName == "INPUT") return true
        }
        return false
    };
    if (typeof b.style.MozUserSelect != "undefined") b.style.MozUserSelect =
        "none";
    var e = a["use proxy"] == "true", f = b.grid != null, h = a["field type"] == "html container";
    if (f) {
        e = true;
        setTimeout(function () {
            var g = b.grid.cells.length - 1;
            if (!b.grid.wb()) {
                var l = b.grid.dataArray;
                if (b.grid.isFiltered()) l = b.grid.Cb;
                l = l.length - b.grid.w + 1;
                if (g > l) g = l
            }
            if ((a.cursor == null || a.cursor == "") && !pui.pb) for (l = b.grid.t ? 1 : 0; l <= g; l++) for (var n = b.grid.cells[l], o = 0; o < n.length; o++) n[o].style.cursor = "move"
        }, 1)
    }
    if (window.PointerEvent) gc(b, "pointerdown", c); else {
        gc(b, "mousedown", c);
        gc(b, "touchstart", c)
    }
};
pui.MC = function () {
    var b = this, a = [];
    this.tG = function () {
        return a
    };
    this.add = function (c) {
        var d = c.name;
        if (d !== null) {
            for (var e = 0; e < a.length; e++) if (c.text < a[e].text) break;
            a.splice(e, 0, c);
            b[d] = c
        }
    }
};
pui.locales = new pui.MC;
pui.locales.add({
    name: "en_UK",
    text: "English (United Kingdom)",
    datePatterns: ["Y-m-d", "d.m.y", "d.m.Y", "d/m/y", "d/m/Y", "d-m-y", "d-m-Y", "Y/m", "Y/m/d", "y/m/d", "j F y", "j F Y", "l j F y", "l j F Y", "D d M y", "D d M Y", "j-M-y", "j-M-Y", "j M y", "j M Y", "yz", "y/z", "y-z", "y.z", "Yz", "Y/z", "Y-z", "Y.z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["D d M Y H:i:s", "d.m.y g:i A", "d.m.y g:i a", "d.m.y H:i:s", "d/m/y g:i A",
        "d/m/y g:i a", "d/m/y H:i:s", "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "g:i A o\\n n/j/y", "Y-m-d-H.i.s.uu"],
    monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    shortMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    shortDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    weekStart: 1
});
pui.locales.add({
    name: "en_US",
    text: "English (United States)",
    datePatterns: ["Y-m-d", "m/d/y", "m/d/Y", "n/j/y", "n/j/Y", "m-d-y", "m-d-Y", "n-j-y", "n-j-Y", "Y/m", "m/Y", "Y/m/d", "y/m/d", "l, F j, Y", "l, F jS, Y", "D, M d, y", "D, M d, Y", "D M d y", "D M d Y", "F j, y", "F j, Y", "M j, y", "M j, Y", "j-M-y", "j-M-Y", "yz", "y/z", "y-z", "Yz", "Y/z", "Y-z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["m/d/y g:i A", "m/d/y g:i a",
        "m/d/y H:i:s", "m-d-y g:i A", "m-d-y g:i a", "m-d-y H:i:s", "D, M d, Y H:i:s", "g:i A o\\n n/j/y", "Y-m-d-H.i.s.uu"],
    monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    shortMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    shortDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    weekStart: 0
});
pui.locales.add({
    name: "fr_FR",
    text: "French (France)",
    datePatterns: ["Y-m-d", "d.m.y", "d.m.Y", "d/m/y", "d/m/Y", "d-m-y", "d-m-Y", "Y/m", "Y/m/d", "y/m/d", "j F y", "j F Y", "l j F y", "l j F Y", "D d M y", "D d M Y", "j-M-y", "j-M-Y", "j M y", "j M Y", "yz", "y/z", "y-z", "y.z", "Yz", "Y/z", "Y-z", "Y.z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["D d M Y H:i:s", "d.m.y g:i A", "d.m.y g:i a", "d.m.y H:i:s", "d/m/y g:i A", "d/m/y g:i a",
        "d/m/y H:i:s", "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "Y-m-d-H.i.s.uu"],
    monthNames: ["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"],
    shortMonthNames: ["jan", "f\u00e9v", "mar", "avr", "mai", "jun", "jui", "ao\u00fb", "sep", "oct", "nov", "d\u00e9c"],
    dayNames: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"],
    shortDayNames: ["dim", "lun", "mar", "mer", "jeu", "ven", "sam"],
    weekStart: 1
});
pui.locales.add({
    name: "de_DE",
    text: "German (Germany)",
    datePatterns: ["Y-m-d", "d.m.y", "d.m.Y", "d/m/y", "d/m/Y", "d-m-y", "d-m-Y", "Y/m", "Y/m/d", "y/m/d", "j F y", "j F Y", "l j F y", "l j F Y", "D d M y", "D d M Y", "j-M-y", "j-M-Y", "j M y", "j M Y", "yz", "y/z", "y-z", "y.z", "Yz", "Y/z", "Y-z", "Y.z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["D d M Y H:i:s", "d.m.y g:i A", "d.m.y g:i a", "d.m.y H:i:s", "d/m/y g:i A", "d/m/y g:i a",
        "d/m/y H:i:s", "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "Y-m-d-H.i.s.uu"],
    monthNames: ["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
    shortMonthNames: ["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"],
    dayNames: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
    shortDayNames: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
    weekStart: 1
});
pui.locales.add({
    name: "pt_BR",
    text: "Portuguese (Brazil)",
    datePatterns: ["Y-m-d", "d.m.y", "d.m.Y", "d/m/y", "d/m/Y", "d-m-y", "d-m-Y", "Y/m", "Y/m/d", "y/m/d", "j F y", "j F Y", "l j F y", "l j F Y", "D d M y", "D d M Y", "j-M-y", "j-M-Y", "j M y", "j M Y", "yz", "y/z", "y-z", "y.z", "Yz", "Y/z", "Y-z", "Y.z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["D d M Y H:i:s", "d.m.y g:i A", "d.m.y g:i a", "d.m.y H:i:s", "d/m/y g:i A", "d/m/y g:i a",
        "d/m/y H:i:s", "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "Y-m-d-H.i.s.uu"],
    monthNames: ["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"],
    shortMonthNames: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],
    dayNames: ["domingo", "segunda", "ter\u00e7a", "quarta", "quinta", "sexta", "s\u00e1bado"],
    shortDayNames: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "S\u00e1b"],
    weekStart: 0
});
pui.locales.add({
    name: "nl_NL",
    text: "Dutch (Netherlands)",
    datePatterns: ["Y-m-d", "d.m.y", "d.m.Y", "d/m/y", "d/m/Y", "d-m-y", "d-m-Y", "Y/m", "Y/m/d", "y/m/d", "j F y", "j F Y", "l j F y", "l j F Y", "D d M y", "D d M Y", "j-M-y", "j-M-Y", "j M y", "j M Y", "yz", "y/z", "y-z", "y.z", "Yz", "Y/z", "Y-z", "Y.z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["D d M Y H:i:s", "d.m.y g:i A", "d.m.y g:i a", "d.m.y H:i:s", "d/m/y g:i A", "d/m/y g:i a",
        "d/m/y H:i:s", "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "Y-m-d-H.i.s.uu"],
    monthNames: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
    shortMonthNames: ["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
    dayNames: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"],
    shortDayNames: ["zo", "ma", "di", "wo", "do", "vr", "za"],
    weekStart: 1
});
pui.locales.add({
    name: "da_DK",
    text: "Danish (Denmark)",
    datePatterns: ["Y-m-d", "d.m.y", "d.m.Y", "d/m/y", "d/m/Y", "d-m-y", "d-m-Y", "Y/m", "Y/m/d", "y/m/d", "j F y", "j F Y", "l j F y", "l j F Y", "D d M y", "D d M Y", "j-M-y", "j-M-Y", "j M y", "j M Y", "yz", "y/z", "y-z", "y.z", "Yz", "Y/z", "Y-z", "Y.z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["D d M Y H:i:s", "d.m.y g:i A", "d.m.y g:i a", "d.m.y H:i:s", "d/m/y g:i A", "d/m/y g:i a",
        "d/m/y H:i:s", "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "Y-m-d-H.i.s.uu"],
    monthNames: ["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"],
    shortMonthNames: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
    dayNames: ["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"],
    shortDayNames: ["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"],
    weekStart: 1
});
pui.locales.add({
    name: "es_MX",
    text: "Spanish (Mexico)",
    datePatterns: ["Y-m-d", "d.m.y", "d.m.Y", "d/m/y", "d/m/Y", "d-m-y", "d-m-Y", "Y/m", "Y/m/d", "y/m/d", "j F y", "j F Y", "l j F y", "l j F Y", "D d M y", "D d M Y", "j-M-y", "j-M-Y", "j M y", "j M Y", "yz", "y/z", "y-z", "Yz", "Y/z", "Y-z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["D d M Y H:i:s", "d.m.y g:i A", "d.m.y g:i a", "d.m.y H:i:s", "d/m/y g:i A", "d/m/y g:i a", "d/m/y H:i:s",
        "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "Y-m-d-H.i.s.uu"],
    monthNames: ["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"],
    shortMonthNames: ["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"],
    dayNames: ["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"],
    shortDayNames: ["dom", "lun", "mar", "mi\u00e9", "jue", "vie", "s\u00e1b"],
    weekStart: 1
});
pui.locales.add({
    name: "ga_IE",
    text: "Irish (Ireland)",
    datePatterns: ["Y-m-d", "d.m.y", "d.m.Y", "d/m/y", "d/m/Y", "d-m-y", "d-m-Y", "Y/m", "Y/m/d", "y/m/d", "j F y", "j F Y", "l j F y", "l j F Y", "D d M y", "D d M Y", "j-M-y", "j-M-Y", "j M y", "j M Y", "yz", "y/z", "y-z", "y.z", "Yz", "Y/z", "Y-z", "Y.z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["D d M Y H:i:s", "d.m.y g:i A", "d.m.y g:i a", "d.m.y H:i:s", "d/m/y g:i A", "d/m/y g:i a",
        "d/m/y H:i:s", "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "Y-m-d-H.i.s.uu"],
    monthNames: ["Ean\u00e1ir", "Feabhra", "M\u00e1rta", "Aibre\u00e1n", "M\u00ed na Bealtaine", "Meith", "I\u00fail", "L\u00fanasa", "Me\u00e1n F\u00f3mhair", "Deireadh F\u00f3mhair", "M\u00ed na Samhna", "M\u00ed na Nollag"],
    shortMonthNames: ["Ean", "Feabh", "M\u00e1rta", "Aib", "Beal", "Meith", "I\u00fail", "L\u00fan", "MF\u00f3mh", "DF\u00f3mh", "Samh", "Noll"],
    dayNames: ["D\u00e9 Domhnaigh", "D\u00e9 Luain", "D\u00e9 M\u00e1irt", "D\u00e9 C\u00e9adaoin",
        "D\u00e9ardaoin", "D\u00e9 hAoine", "D\u00e9 Sathairn"],
    shortDayNames: ["Domh", "Luan", "M\u00e1irt", "C\u00e9ad", "D\u00e9ar", "Aoine", "Sath"],
    weekStart: 1
});
pui.locales.add({
    name: "it_IT",
    text: "Italian (Italy)",
    datePatterns: ["Y-m-d", "d.m.y", "d.m.Y", "d/m/y", "d/m/Y", "d-m-y", "d-m-Y", "Y/m", "Y/m/d", "y/m/d", "j F y", "j F Y", "l j F y", "l j F Y", "D d M y", "D d M Y", "j-M-y", "j-M-Y", "j M y", "j M Y", "yz", "y/z", "y-z", "y.z", "Yz", "Y/z", "Y-z", "Y.z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["D d M Y H:i:s", "d.m.y g:i A", "d.m.y g:i a", "d.m.y H:i:s", "d/m/y g:i A", "d/m/y g:i a",
        "d/m/y H:i:s", "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "Y-m-d-H.i.s.uu"],
    monthNames: ["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"],
    shortMonthNames: ["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"],
    dayNames: ["domenica", "luned\u00ec", "marted\u00ec", "mercoled\u00ec", "gioved\u00ec", "venerd\u00ec", "sabato"],
    shortDayNames: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"],
    weekStart: 1
});
pui.locales.add({
    name: "he_IL",
    text: "Hebrew (Israel)",
    datePatterns: ["Y-m-d", "d/m/y", "d/m/Y", "n/j/y", "n/j/Y", "d-m-y", "d-m-Y", "n-j-y", "n-j-Y", "Y/m", "m/Y", "Y/m/d", "y/m/d", "l, F j, Y", "l, F jS, Y", "D, M d, y", "D, M d, Y", "D M d y", "D M d Y", "F j, y", "F j, Y", "M j, y", "M j, Y", "j-M-y", "j-M-Y", "yz", "y/z", "y-z", "Yz", "Y/z", "Y-z"],
    timePatterns: ["g:i", "g:i:s", "g:i a", "g:i A", "H:i", "H.i.s", "H:i:s", "H:i a", "H:i A", "g:i:s a", "g:i:s A", "H:i:s a", "H:i:s A"],
    timeStampPatterns: ["d/m/y g:i A", "d/m/y g:i a", "d/m/y H:i:s",
        "d-m-y g:i A", "d-m-y g:i a", "d-m-y H:i:s", "D, M d, Y H:i:s", "g:i A o\\n n/j/y", "Y-m-d-H.i.s.uu"],
    monthNames: ["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05d0\u05e8\u05e1", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"],
    shortMonthNames: ["\u05d9\u05e0.", "\u05e4\u05d1\u05e8", "\u05de\u05d0\u05e8\u05e1", "\u05d0\u05e4\u05e8", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2", "\u05e1\u05e4\u05d8", "\u05d0\u05d5\u05e7", "\u05e0\u05d5\u05d1", "\u05d3\u05e6\u05de"],
    dayNames: ["\u05e8\u05d0\u05e9\u05d5\u05df", "\u05e9\u05e0\u05d9", "\u05e9\u05dc\u05d9\u05e9\u05d9", "\u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d7\u05de\u05d9\u05e9\u05d9", "\u05e9\u05d9\u05e9\u05d9", "\u05e9\u05d1\u05ea"],
    shortDayNames: ["\u05d0",
        "\u05d1", "\u05d2", "\u05d3", "\u05d4", "\u05d5", "\u05e9"],
    weekStart: 0
});
pui.rE = function (b) {
    function a() {
        if (n.length > 0) {
            var u = n.substr(n.length - 1, 1);
            n = n.substr(0, n.length - 1);
            if (u == "0" && n.length == 0 && s) u = q ? "*" : " "
        } else {
            u = "0";
            if (s) u = " ";
            if (q) u = "*"
        }
        return u
    }

    for (var c = b.edtWrd, d = b.value, e = Number(b.decPos), f = "[\\d", h = 0; h < c.length; h++) {
        var g = c.substr(h, 1), l = g;
        if (g != " ") {
            if (g == "&") l = " ";
            l = pui.formatting.escapeRe(l);
            f += l
        }
    }
    f += "]";
    b.wi = RegExp(f);
    var n;
    n = isNaN(Number(d)) ? "0" : String(d);
    n = n.replace("-", "");
    h = n.split(".");
    f = h[0];
    g = "";
    if (h.length > 1) g = h[1];
    if (e == null || isNaN(e)) e = 0;
    for (; g.length >
           e;) g = g.substr(g.length - 1);
    for (; e > g.length;) g += "0";
    for (n = f + g; n.substr(0, 1) == "0";) n = n.substr(1);
    e = "$";
    if (pui.appJob != null && pui.appJob.curSym != null) e = pui.appJob.curSym;
    if (c == null || c == "") return d;
    c = Zb(c);
    if (c.length < 3) return d;
    if (c.substr(0, 1) != "'") return d;
    if (c.substr(c.length - 1, 1) != "'") return d;
    c = c.substr(1, c.length - 2);
    f = c.indexOf("0") + 1;
    h = c.indexOf("*") + 1;
    if (f == 0 || h != 0 && h < f) f = h;
    g = -1;
    for (h = c.length - 1; h >= 0; h -= 1) if (h + 1 == f || c.substr(h, 1) == " ") {
        g = h;
        break
    }
    l = c.substr(0, g + 1);
    var o = "", i = "", r = false, k = false;
    for (h = g + 1; h < c.length; h++) if (c.substr(h, 2) == "CR") {
        k = true;
        h++
    } else if (c.substr(h, 1) == "-") k = true; else if (c.substr(h, 1) != "&") if (!(c.substr(h, 1) == "*" && !k)) {
        o = c.substring(g + 1, h);
        i = c.substr(h);
        r = true;
        break
    }
    r || (o = c.substr(g + 1));
    c = "";
    var q = r = false;
    var s = k = false;
    if (f == 0) s = true;
    for (h = l.length - 1; h >= 0; h -= 1) {
        var t = g = l.substr(h, 1);
        if (g == " ") t = a(); else if (g == "&") t = " "; else if (g == "0" && h + 1 == f) t = a(); else if (g == "*") {
            q = true;
            t = a()
        } else if (g == e) {
            if (h + 2 == f) {
                t = a();
                k = true
            }
        } else if (r) {
            t = " ";
            if (q) t = "*"
        }
        c = t + c;
        if (h <= f) s = true;
        if (s && n.length == 0) r = true
    }
    o = o.replace(/&/g, " ");
    o = o.replace(/\*/g, " ");
    if (d >= 0) {
        o = o.replace("CR", "  ");
        o = o.replace("-", " ")
    }
    c = c + o + i;
    b.maxLength = c.length;
    c = Zb(c);
    if (q && c.substr(0, 1) != "*") c = "*" + c;
    if (k) c = e + c;
    return c
};
pui.qE = function (b, a, c) {
    a = a || window.event;
    var d;
    if (a != null) d = a.keyCode;
    a = b.sa;
    if (a != null) {
        var e = a.edtMsk, f = a.edtWrd;
        if (!(e == null || e == "")) if (!(f == null || f == "")) {
            if (f.length > 1 && f.substr(0, 1) == "'" && f.substr(f.length - 1, 1) == "'") f = f.substr(1, f.length - 2);
            if (e.length > 1 && e.substr(0, 1) == "'" && e.substr(e.length - 1, 1) == "'") e = e.substr(1, e.length - 2);
            a = b.value;
            if (a != null) {
                var h = [], g = e.length;
                if (f.length < g) g = f.length;
                for (var l = 0; l < g; l++) {
                    wrdCh = f.substr(l, 1);
                    mskCh = e.substr(l, 1);
                    if (wrdCh == " " || wrdCh == "0" || mskCh == " ") h.push(null);
                    else wrdCh == "&" ? h.push(" ") : h.push(wrdCh)
                }
                for (g = h.length; a.length < g;) if (d == null || d == 0) a = " " + a; else a += " ";
                if (a.length > g) a = a.substr(0, g);
                for (l = 0; l < g; l++) {
                    e = h[l];
                    f = a.substr(l, 1);
                    if (e != null && f != e) a = a.substr(0, l) + e + a.substr(l + 1); else if (e == null && (f < "0" || f > "9")) a = a.substr(0, l) + "0" + a.substr(l + 1)
                }
                a = $b(a);
                if (a != $b(b.value) || c != null) {
                    if (c == null) c = Sb(b);
                    if (d != 8) for (; c < h.length && h[c] != null;) c++;
                    b.value = a;
                    if (b.createTextRange != null && !pui.is_opera) {
                        if (b = b.createTextRange()) {
                            b.moveStart("character", c);
                            b.collapse();
                            b.select()
                        }
                    } else b.selectionStart != null && b.setSelectionRange(c, c)
                }
            }
        }
    }
};
pui.ss = function (b, a, c) {
    if (typeof pui["use original edit mask"] != "undefined" && pui["use original edit mask"] === true) return pui.qE(b, a, c);
    a = a || window.event;
    var d;
    if (a != null) d = a.keyCode;
    a = b.sa;
    if (a != null) {
        var e = a.edtMsk, f = a.edtWrd;
        if (!(e == null || e == "")) if (!(f == null || f == "")) {
            if (f.length > 1 && f.substr(0, 1) == "'" && f.substr(f.length - 1, 1) == "'") f = f.substr(1, f.length - 2);
            if (e.length > 1 && e.substr(0, 1) == "'" && e.substr(e.length - 1, 1) == "'") e = e.substr(1, e.length - 2);
            a = b.value;
            if (a != null) {
                var h = [], g = e.length, l = g;
                if (f.length <
                    g) g = f.length;
                for (var n = 0; n < g; n++) {
                    wrdCh = f.substr(n, 1);
                    mskCh = e.substr(n, 1);
                    if ((wrdCh == "0" || wrdCh == "*") && l > n) l = n;
                    if (wrdCh == " " || wrdCh == "0" || mskCh == " ") h.push(null); else wrdCh == "&" ? h.push(" ") : h.push(wrdCh)
                }
                for (g = h.length; a.length < g;) if (d == null || d == 0) a = " " + a; else a += " ";
                if (a.length > g) a = a.substr(0, g);
                for (n = 0; n < g; n++) {
                    e = n <= l ? " " : "0";
                    f = h[n];
                    var o = a.substr(n, 1);
                    if (f != null && o != f) a = a.substr(0, n) + f + a.substr(n + 1); else if (f == null && (o < "0" || o > "9")) a = a.substr(0, n) + e + a.substr(n + 1)
                }
                a = $b(a);
                if (a != $b(b.value) || c != null) {
                    if (c ==
                        null) c = Sb(b);
                    if (d != 8) for (; c < h.length && h[c] != null;) c++;
                    b.value = a;
                    if (b.createTextRange != null && !pui.is_opera) {
                        if (b = b.createTextRange()) {
                            b.moveStart("character", c);
                            b.collapse();
                            b.select()
                        }
                    } else b.selectionStart != null && b.setSelectionRange(c, c)
                }
            }
        }
    }
};
pui.formatting = {
    Date: {
        formats: {locales: {}}, jl: {locales: {}}, nG: function (b, a) {
            switch (b) {
                case "n":
                    return "(date.getMonth()+1)";
                case "m":
                    return 'pui.formatting.leftPad(date.getMonth()+1, 2, "0")';
                case "M":
                    return 'pui.locales["' + a + '"].shortMonthNames[date.getMonth()]';
                case "F":
                    return 'pui.locales["' + a + '"].monthNames[date.getMonth()]';
                case "j":
                    return "date.getDate()";
                case "d":
                    return 'pui.formatting.leftPad(date.getDate(), 2, "0")';
                case "S":
                    return "pui.formatting.Date.getSuffix(date.getDate())";
                case "D":
                    return 'pui.locales["' +
                        a + '"].shortDayNames[date.getDay()]';
                case "l":
                    return 'pui.locales["' + a + '"].dayNames[date.getDay()]';
                case "y":
                    return 'pui.formatting.leftPad("" + date.getFullYear(), 4, "0").slice(2)';
                case "Y":
                    return 'pui.formatting.leftPad(date.getFullYear(), 4, "0")';
                case "g":
                    return "((date.getHours() % 12) ? date.getHours() % 12 : 12)";
                case "G":
                    return "date.getHours()";
                case "h":
                    return 'pui.formatting.leftPad((date.getHours() % 12) ? date.getHours() % 12 : 12, 2, "0")';
                case "H":
                    return 'pui.formatting.leftPad(date.getHours(), 2, "0")';
                case "R":
                    return '(pui.formatting.Date.isMidnight(date) ? "24" : pui.formatting.leftPad(date.getHours(), 2, "0"))';
                case "i":
                    return 'pui.formatting.leftPad(date.getMinutes(), 2, "0")';
                case "s":
                    return 'pui.formatting.leftPad(date.getSeconds(), 2, "0")';
                case "u":
                    return 'pui.formatting.leftPad(date.getMilliseconds(), 3, "0")';
                case "U":
                    return 'String("000")';
                case "a":
                    return '(date.getHours() < 12 ? "am" : "pm")';
                case "A":
                    return '(date.getHours() < 12 ? "AM" : "PM")';
                case "z":
                    return 'pui.formatting.leftPad(Math.ceil((date - (new Date(date.getFullYear(), 0, 1)))/86400000)+1, 3, "0")';
                default:
                    return '"' + b.replace(/('|\\|"|\.)/, "\\$1") + '"'
            }
        }, xG: function (b, a, c) {
            switch (b) {
                case "n":
                    return {bc: "(\\\\d{1,2})", Ub: "m = parseInt(matches[" + a + "], 10) - 1;", Xb: 1};
                case "m":
                    return {bc: "(\\\\d{2})", Ub: "m = parseInt(matches[" + a + "], 10) - 1;", Xb: 1};
                case "M":
                    return {
                        bc: "(" + pui.locales[c].shortMonthNames.join("|") + ")",
                        Ub: "m = pui.formatting.Date.getMonthNum(matches[" + a + '], "' + c + '", true);',
                        Xb: 1
                    };
                case "F":
                    return {
                        bc: "(" + pui.locales[c].monthNames.join("|") + ")",
                        Ub: "m = pui.formatting.Date.getMonthNum(matches[" +
                            a + '], "' + c + '", false);',
                        Xb: 1
                    };
                case "j":
                    return {bc: "(\\\\d{1,2})", Ub: "d = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "d":
                    return {bc: "(\\\\d{2})", Ub: "d = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "S":
                    return {bc: "(?:st|nd|rd|th)", Ub: "", Xb: 0};
                case "D":
                    return {bc: "(?:" + pui.locales[c].shortDayNames.join("|") + ")", Ub: "", Xb: 0};
                case "l":
                    return {bc: "(?:" + pui.locales[c].dayNames.join("|") + ")", Ub: "", Xb: 0};
                case "y":
                    return {
                        bc: "(\\\\d{2})",
                        Ub: "y = parseInt(matches[" + a + "], 10); y += (y > pui.formatting.Date.y2k ? 1900 : 2000);",
                        Xb: 1
                    };
                case "Y":
                    return {bc: "(\\\\d{4})", Ub: "y = parseInt(matches[" + a + "], 10); if (y == 0) y = null;", Xb: 1};
                case "g":
                    return {bc: "(\\\\d{1,2})", Ub: "h = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "G":
                    return {bc: "(\\\\d{1,2})", Ub: "h = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "h":
                    return {bc: "(\\\\d{1,2})", Ub: "h = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "H":
                    return {bc: "(\\\\d{1,2})", Ub: "h = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "R":
                    return {bc: "(\\\\d{1,2})", Ub: "h = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "i":
                    return {
                        bc: "(\\\\d{2})",
                        Ub: "i = parseInt(matches[" + a + "], 10);", Xb: 1
                    };
                case "s":
                    return {bc: "(\\\\d{2})", Ub: "s = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "u":
                    return {bc: "(\\\\d{3})", Ub: "u = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "U":
                    return {bc: "(\\\\d{3})", Ub: "var microSeconds = parseInt(matches[" + a + "], 10);", Xb: 1};
                case "a":
                    return {
                        bc: "(am|pm)",
                        Ub: "if(matches[" + a + '] == "am"){ if(h == 12) h = 0; }else if(h < 12) h += 12;',
                        Xb: 1
                    };
                case "A":
                    return {
                        bc: "(AM|PM)",
                        Ub: "if(matches[" + a + '] == "AM"){ if(h == 12) h = 0; }else if(h < 12) h += 12;',
                        Xb: 1
                    };
                case "z":
                    return {bc: "(\\\\d{1,3})", Ub: "d = parseInt(matches[" + a + "], 10);", Xb: 1};
                default:
                    return {bc: b.replace(/('|\\|"|\.)/, "\\\\$1"), Ub: "", Xb: 0}
            }
        }, parse: function (b, a, c) {
            pui.formatting.Date.jl.locales[c] && pui.formatting.Date.jl.locales[c][a] || pui.formatting.Date.bI(a, c);
            return pui.formatting.Date.jl.locales[c][a](b)
        }, aI: function (b, a) {
            var c = b, d = false, e = "", f = "return ";
            if (c === "Y-m-d-H.i.s.uu") c = "Y-m-d-H.i.s.uU";
            for (var h = 0; h < c.length; h++) {
                e = c.charAt(h);
                if (!d && e == "\\") d = true; else if (d) {
                    f += '"' + e.replace(/('|\\|")/g,
                        "\\$1") + '" + ';
                    d = false
                } else f += pui.formatting.Date.nG(e, a) + ' + "" + '
            }
            f = f.replace(/\+\s$/, "") || '""';
            f += ";";
            pui.formatting.Date.formats.locales[a] || (pui.formatting.Date.formats.locales[a] = {});
            pui.formatting.Date.formats.locales[a][b] = new Function("date", f)
        }, bI: function (b, a) {
            var c = b, d = false, e = "", f = "", h = "", g = 1;
            if (c === "Y-m-d-H.i.s.uu") c = "Y-m-d-H.i.s.uU";
            for (var l = 0; l < c.length; l++) {
                e = c.charAt(l);
                if (!d && e == "\\") d = true; else if (d) {
                    f += e.replace(/('|\\)/g, "\\$1");
                    d = false
                } else {
                    e = pui.formatting.Date.xG(e, g, a);
                    g += e.Xb;
                    f += e.bc;
                    h += e.Ub
                }
            }
            c = 'var y = 1, m = 0, d = 1;         var h = 0, i = 0, s = 0, u = 0;         var regexObj = new RegExp("^' + f + '$");         var matches = str.match(regexObj);         if(matches && matches.length > 0){' + h + "var dt = new Date(y, m, d, h, i, s, u);         dt.setFullYear(y);if(dt.getFullYear() !== y || dt.getMonth() !== m || dt.getDate() !== d ||          dt.getHours() !== h || dt.getMinutes() !== i || dt.getSeconds() !== s)         return null;return dt;         }else return null;";
            pui.formatting.Date.jl.locales[a] || (pui.formatting.Date.jl.locales[a] = {});
            pui.formatting.Date.jl.locales[a][b] = new Function("str", c)
        }, getSuffix: function (b) {
            switch (b) {
                case 1:
                case 21:
                case 31:
                    return "st";
                case 2:
                case 22:
                    return "nd";
                case 3:
                case 23:
                    return "rd";
                default:
                    return "th"
            }
        }, vG: function (b, a, c) {
            a = c ? pui.locales[a].shortMonthNames : pui.locales[a].monthNames;
            for (c = 0; c < 12; c++) if (a[c] == b) return c;
            return 0
        }, vH: function (b) {
            return b.getHours() === 0 && b.getMinutes() === 0 && b.getSeconds() === 0 && b.getMilliseconds() ===
                0
        }, zM: "Y-m-d", AM: "H:i:s", uo: "Y-m-d-H.i.s.uu", NK: 39
    }, leftPad: function (b, a, c) {
        for (b += ""; b.length < a;) b = c + b;
        return b
    }, kJ: function (b, a, c) {
        b += "";
        if (b.length > a) b = b.substr(0, a); else for (; b.length < a;) b += c;
        return b
    }, ye: function (b) {
        return /^(?:zoned|floating|packed)$/.test(b)
    }, by: function (b, a) {
        for (var c = 0; c < b.length; c++) if (b.charCodeAt(c) > 65535) return {msg: pui.getLanguageText("runtimeMsg", "outside ucs2")};
        for (; b.length < a;) b += " ";
        return pui.lw.encode(b)
    }, Hk: function (b) {
        return pui.lw.decode(b)
    }, keywords: {
        DATFMT: {
            "*JOB": {
                Ec: "Ymd",
                Vd: "-"
            },
            "*MDY": {Ec: "mdy", Vd: "/"},
            "*DMY": {Ec: "dmy", Vd: "/"},
            "*YMD": {Ec: "ymd", Vd: "/"},
            "*JUL": {Ec: "yz", Vd: "/"},
            "*ISO": {Ec: "Ymd", Vd: "-"},
            "*USA": {Ec: "mdY", Vd: "/"},
            "*EUR": {Ec: "dmY", Vd: "."},
            "*JIS": {Ec: "Ymd", Vd: "-"}
        },
        nw: {"*JOB": "/", "/": "/", "-": "-", ".": ".", ",": ",", " ": " "},
        mk: {
            "*HMS": {Ec: "Ris", Vd: ":"},
            "*ISO": {Ec: "Ris", Vd: "."},
            "*USA": {Ec: "hi A", Vd: ":"},
            "*EUR": {Ec: "Ris", Vd: "."},
            "*JIS": {Ec: "Ris", Vd: ":"}
        },
        Ew: {"*JOB": ":", ":": ":", ".": ".", ",": ",", " ": " "}
    }, escapeRe: function () {
        var b = /([\.\*\+\?\^\$\{\}\(\)\|\-\[\]\/\\])/g;
        return function (a) {
            return a.replace(b, "\\$1")
        }
    }()
};
Date.prototype.format = function (b, a) {
    pui.formatting.Date.formats.locales[a] && pui.formatting.Date.formats.locales[a][b] || pui.formatting.Date.aI(b, a);
    return pui.formatting.Date.formats.locales[a][b](this)
};
pui.Oe = {
    format: function (b) {
        if (b.revert) {
            if (typeof pui.inputfilter == "function") {
                var a = {};
                for (var c in b) a[c] = b[c];
                try {
                    var d = pui.inputfilter(a.value, a, Q);
                    if (typeof d == "string") b.value = d
                } catch (e) {
                    pui.Kz(e, "(pui.inputfilter)")
                }
            }
            a = null;
            if (typeof pui.validate == "function") a = pui.validate(b);
            if (a == null || a == false) a = this[b.formatting].yh(b);
            return typeof a === "object" ? a : a + ""
        } else {
            this.zz(b);
            return this[b.formatting].format(b) + ""
        }
    }, Text: {
        format: function (b) {
            var a = b.value + "";
            if (b.customPattern != "") if (b.customPattern ==
                "y/m") if (a.length > 2) a = a.substr(0, a.length - 2) + "/" + a.substr(a.length - 2);
            if (b.dataType == "graphic" && !pui.vn) a = pui.formatting.Hk(a);
            if (b.trimTrailing === true || b.trimTrailing === "true") a = a.replace(/\s+$/g, ""); else for (; a.length < b.dataLength;) a += " ";
            if (b.trimLeading === true || b.trimLeading === "true") a = a.replace(/^\s+/g, "");
            if (b.textTransform == "uppercase") a = a.toUpperCase(); else if (b.textTransform == "lowercase") a = a.toLowerCase(); else if (b.textTransform == "capitalize") a = a.replace(/(?:^[a-z]| +[a-z])/g, function (c) {
                return c.toUpperCase()
            });
            b.maxLength = b.dataLength == "undefined" ? null : b.dataLength;
            return a
        }, yh: function (b) {
            var a = b.value + "";
            a = a.replace(/\s+$/g, "");
            if (b.blankFill == "true" && (b.dataType == "char" || b.dataType == "varchar")) {
                var c = Number(b.dataLength);
                isNaN(c) || (a = pui.formatting.leftPad(a, c, " "))
            }
            if (b.textTransform == "uppercase") a = a.toUpperCase(); else if (b.textTransform == "lowercase") a = a.toLowerCase(); else if (b.textTransform == "capitalize") a = a.replace(/(?:^[a-z]| +[a-z])/g, function (d) {
                return d.toUpperCase()
            });
            if (b.dataType == "graphic" &&
                !pui.vn) {
                c = parseInt(b.dataLength, 10);
                a = pui.formatting.by(a, c)
            }
            return a
        }
    }, Number: {
        format: function (b) {
            var a = pui.appJob != null && (pui.appJob.decimalFormat == "I" || pui.appJob.decimalFormat == "J"),
                c = parseInt(b.dataLength, 10), d = parseInt(b.decPos, 10), e = (b.value || 0) + "";
            if (d > 0 && e === "0") for (e = "."; e.length - 1 < d;) e += "0"; else if (d > 0 && e.substr(0, 1) === "0.") e = e.substr(1);
            var f = parseFloat(e, 10) || 0;
            e = e.replace(/-/g, "");
            var h;
            h = e.replace(/\..*/, "");
            if ((h == "" || h == "-") && pui.appJob.decimalFormat == "J") h = "0";
            var g, l = e;
            if (l.indexOf(".") ==
                -1) l += ".";
            g = l.replace(/.*\./, "");
            l = c;
            var n = "[\\d";
            if (b.edtWrd != null && b.edtWrd != "") if (pui.formatting.ye(b.dataType)) return pui.rE(b);
            if (d > 0) {
                g = pui.formatting.kJ(g, d, "0");
                e = h + (a ? "," : ".") + g;
                if (!b.noExtraSpaces || b.noExtraSpaces != "true") l++;
                n += a ? "," : "\\."
            }
            if (b.zeroFill === true || b.zeroFill === "true") e = pui.formatting.leftPad(e, c + (d ? 1 : 0), "0");
            if (b.numSep === true || b.numSep === "true") {
                for (e = /(\d+)(\d{3})/; e.test(h);) h = h.replace(e, "$1" + (a ? "." : ",") + "$2");
                e = h + (d > 0 ? (a ? "," : ".") + g : "");
                n += a ? "\\." : ",";
                a = c - d - 1;
                a = a >= 0 ? a :
                    0;
                if (!b.noExtraSpaces || b.noExtraSpaces != "true") l += Math.floor(a / 3)
            }
            a = f < 0;
            if (b.negNum) b.negNum = b.negNum.toUpperCase();
            if (b.negNum == "(999.00)") {
                if (a) e = "(" + e + ")";
                if (!b.noExtraSpaces || b.noExtraSpaces != "true") l += 2;
                n += "\\(\\)"
            } else if (b.negNum == "999.00-") {
                e += a ? "-" : " ";
                if (!b.noExtraSpaces || b.noExtraSpaces != "true") l++;
                n += "\\-"
            } else if (b.negNum == "999.00 CR") {
                if (a) e += " CR";
                if (!b.noExtraSpaces || b.noExtraSpaces != "true") l += 3;
                n += "CR\\s"
            } else if (b.negNum == "-999.00") {
                if (a) e = "-" + e;
                if (!b.noExtraSpaces || b.noExtraSpaces !=
                    "true") l++;
                n += "\\-"
            }
            if (b.curSym) {
                e = b.curSym == "EUR" ? e + " EUR" : b.curSym == "$" ? e.substr(0, 1) == "-" ? "-" + b.curSym + e.substr(1) : b.curSym + e : b.curSym + e;
                l += b.curSym.length;
                n += pui.formatting.escapeRe(b.curSym)
            }
            if (b.units) {
                e += b.units;
                l += b.units.length;
                n += pui.formatting.escapeRe(b.units)
            }
            if (b.zeroBalance === false || b.zeroBalance === "false") if (f === 0) e = "";
            n += "]";
            if (isNaN(l)) l = null;
            b.maxLength = l;
            b.wi = RegExp(n);
            return e
        }, yh: function (b) {
            var a = pui.appJob != null && (pui.appJob.decimalFormat == "I" || pui.appJob.decimalFormat == "J"),
                c = ".";
            if (a) c = ",";
            var d = String(b.value);
            if (b.edtWrd != null) {
                var e = "-";
                /-/.test(d) || (e = "");
                var f = d;
                d = "";
                for (var h = 0; h < f.length; h++) {
                    var g = f.substr(h, 1);
                    if ((g < "0" || g > "9") && (g != c || b.decPos == 0) && g != e) g = "";
                    d += g
                }
            }
            if (b.numSep === "true" || b.numSep === true) d = a ? d.replace(/\./g, "") : d.replace(/,/g, "");
            e = d.split(c);
            if (e.length > 1) d = e.join(".");
            if (b.curSym) d = d.replace(RegExp("^" + pui.formatting.escapeRe(b.curSym)), "");
            if (b.units) d = d.replace(RegExp(pui.formatting.escapeRe(b.units) + "$"), "");
            if (b.edtWrd != null && d.indexOf("-") !=
                -1) {
                d = Zb(d);
                if (d.substring(0, 1) != "-" && d.substring(d.length - 1) != "-") d = d.replace(/-/g, "")
            }
            a = true;
            c = d.replace(/[^\d\-]/g, "");
            if (/-/.test(c) && !/(^-|-$)/.test(c)) a = false;
            if (b.negNum && /[\-()CR]/.test(d)) {
                if (b.negNum == "(999.00)") d = d.replace(/\(/, "").replace(/\)/, ""); else if (b.negNum == "999.00-" || b.negNum == "-999.00") d = d.replace(/-/, ""); else if (b.negNum == "999.00 CR") d = d.replace(/ CR/, "");
                d = "-" + d
            }
            if (a && d == "-") a = false;
            d = Zb(d);
            if (a) a = !/[^\d.\-]/.test(d) && d.split("-").length <= 2 && d.split(".").length <= 2;
            c = pui.getLanguageText("runtimeMsg",
                "invalid number", [b.value]);
            if (a) {
                e = d.replace(/-/, "").split(".");
                if (e[0].length > parseInt(b.dataLength, 10) - parseInt(b.decPos, 10)) {
                    a = false;
                    c = pui.getLanguageText("runtimeMsg", "invalid length", [b.value])
                }
                if (e.length == 2) if (e[1].length > parseInt(b.decPos, 10)) {
                    a = false;
                    c = pui.getLanguageText("runtimeMsg", "invalid decimal", [b.value, b.decPos])
                } else if (d.indexOf(".") == -1) {
                    a = d.replace(/-/g, "").length <= b.dataLength;
                    c = pui.getLanguageText("runtimeMsg", "invalid decimal", [b.value, b.decPos])
                } else if (d.indexOf(".") ==
                    d.length - 1) if (pui["allow decimal ending"]) d += "0"; else a = false
            }
            if (a && b.zeroFill == "true" && (b.dataType == "char" || b.dataType == "varchar")) d = pui.formatting.leftPad(d, parseInt(b.dataLength, 10), "0");
            if (a && b.numBlankFill == "true" && (b.dataType == "char" || b.dataType == "varchar")) {
                b = Number(b.dataLength);
                isNaN(b) || (d = pui.formatting.leftPad(d, b, " "))
            }
            return a ? d : {msg: c}
        }
    }, Indicator: {
        format: function (b) {
            var a = b.value + "", c, d;
            if (b.indFormat == "Custom Values") {
                c = b.customTrue;
                d = b.customFalse
            } else {
                c = b.indFormat.split(" / ")[0];
                d = b.indFormat.split(" / ")[1]
            }
            if (c != "" || d != "") b.wi = RegExp("[" + pui.formatting.escapeRe(c + d) + "]");
            b.maxLength = c.length > d.length ? c.length : d.length;
            return a === "1" || b.value === true ? c : d
        }, yh: function (b) {
            var a = b.value + "", c, d;
            if (b.indFormat == "Custom Values") {
                c = b.customTrue;
                d = b.customFalse
            } else {
                c = b.indFormat.split(" / ")[0];
                d = b.indFormat.split(" / ")[1]
            }
            return a === c || a === d ? a === c ? "1" : "0" : {msg: pui.getLanguageText("runtimeMsg", "invalid choice", [b.value, c, d])}
        }
    }, Date: {
        format: function (b) {
            var a;
            a = pui.locale && pui.locales[pui.locale] ?
                pui.locale : b.locale;
            var c = b.value + "", d = this.Rj(b.keywords);
            if (b.dateFormat == "" && pui["default date pattern"]) b.dateFormat = pui["default date pattern"];
            b.dateFormat = b.dateFormat || d.display;
            if (pui.formatting.ye(b.dataType)) {
                if (c == "0" && b.dataType == "zoned" && b.dataLength == 6) if (b.dateFormat == "m/d/y" || b.dateFormat == "d/m/y") {
                    b.maxLength = 8;
                    return ""
                }
                if (c == "" || c == "0") return "";
                d.lc = (b.dateFormat || d.display).replace(/[^mdyY]/g, "");
                if (/Y/.test(d.lc)) {
                    if (b.dataLength == 6 && (d.lc == "Ym" || d.lc == "mY")) {
                        c += "01";
                        d.lc += "d"
                    }
                    c =
                        pui.formatting.leftPad(c, 8, "0")
                } else if (/y/.test(d.lc)) {
                    if (b.dataLength == 4 && (d.lc == "ym" || d.lc == "my")) {
                        c += "01";
                        d.lc += "d"
                    }
                    c = pui.formatting.leftPad(c, 6, "0")
                }
            }
            if (d = pui.formatting.Date.parse(c, d.lc, a)) c = d.format("Y-m-d", "en_US") == "0001-01-01" ? "" : d.format(b.dateFormat, a);
            return c
        }, yh: function (b) {
            var a;
            a = pui.locale && pui.locales[pui.locale] ? pui.locale : b.locale;
            var c = b.value + "", d = this.Rj(b.keywords);
            if (pui.formatting.ye(b.dataType)) d.lc = (b.dateFormat || d.display).replace(/[^mdyY]/g, "");
            var e, f = b.dateFormat;
            if (f == null || f == "") f = d.lc;
            if (b.dataType == "zoned") if (c.length == 5 && (f == "m/d/y" || f == "d/m/y") || c.length == 7 && (f == "m/d/Y" || f == "d/m/Y")) c = "0" + c;
            if (b.dataType == "char" || b.dataType == "varchar") if (c.length == 7 && (f == "m/d/y" || f == "d/m/y") || c.length == 9 && (f == "m/d/Y" || f == "d/m/Y")) c = "0" + c;
            if (b.dataType == "zoned" && parseInt(b.dataLength, 10) == c.length) {
                if (c.length == 6 && (f == "m/d/y" || f == "d/m/y") || c.length == 8 && (f == "m/d/Y" || f == "d/m/Y")) c = c.substr(0, 2) + "/" + c.substr(2, 2) + "/" + c.substr(4);
                if (c.length == 6 && f == "m/Y") c = c.substr(0, 2) +
                    "/" + c.substr(2);
                if (c.length == 6 && f == "Y/m") c = c.substr(0, 4) + "/" + c.substr(4)
            }
            e = c === "" ? pui.formatting.Date.parse("0001-01-01", "Y-m-d", "en_US") : pui.formatting.Date.parse(c, f, a);
            if (f == "m/d/y" || f == "d/m/y") {
                if (c == "00/00/00" && (b.dataType == "char" || b.dataType == "varchar")) return "0";
                if (c == "00/00/00") return "0"
            }
            if (f == "m/d/Y" || f == "d/m/Y") {
                if (c == "00/00/0000" && (b.dataType == "char" || b.dataType == "varchar")) return "";
                if (c == "00/00/0000") return "0"
            }
            if (b.dataType == "zoned" && c == "") return "0";
            if (b.dataType == "char" || b.dataType ==
                "varchar") return c;
            if (e) return e.format(d.lc, a); else {
                e = pui.formatting.Date.parse((new Date).getFullYear() + "-03-07-14.30.15.000000", "Y-m-d-H.i.s.u000", a);
                return {msg: pui.getLanguageText("runtimeMsg", "invalid date", [b.value, e.format(f, a)])}
            }
        }, Rj: function (b) {
            var a, c;
            if (b && b.length > 0) for (var d = /^\s*DATFMT\s*\(\s*(\*\w{3})\s*\)\s*$/, e = /^\s*DATSEP\s*\(\s*(?:(\*JOB)|'(.)')\s*\)\s*$/, f = 0; f < b.length; f++) {
                var h = b[f].toUpperCase();
                if (d.test(h)) a = h.replace(d, "$1"); else if (e.test(h)) c = h.replace(e, "$1$2")
            }
            if (!a &&
                pui["default date pattern"]) {
                b = pui["default date pattern"];
                d = "Y-m-d"
            } else {
                a = a || "*ISO";
                c = c || "*JOB";
                d = pui.formatting.keywords.DATFMT[a] ? pui.formatting.keywords.DATFMT[a].Ec : pui.formatting.keywords.DATFMT["*ISO"].Ec;
                e = (f = /^(?:\*MDY|\*DMY|\*YMD|\*JUL)$/.test(a)) ? pui.formatting.keywords.nw[c] : pui.formatting.keywords.DATFMT[a] ? pui.formatting.keywords.DATFMT[a].Vd : "-";
                b = d;
                if (a == "*JOB" && pui.appJob && pui.appJob.dateFormat) {
                    a = pui.appJob.dateFormat;
                    b = pui.formatting.keywords.DATFMT[a].Ec
                }
                h = e;
                if (f = /^(?:\*MDY|\*DMY|\*YMD|\*JUL)$/.test(a)) {
                    if (c ==
                        "*JOB" && pui.appJob && pui.appJob.dateSeparator) c = pui.appJob.dateSeparator;
                    h = pui.formatting.keywords.nw[c]
                }
                d = d.replace(/\B/g, e);
                b = b.replace(/\B/g, h)
            }
            return {lc: d, display: b}
        }, YF: function (b) {
            if (b && b.length > 0) for (var a = /^\s*DATFMT\s*\(\s*(\*\w{3})\s*\)\s*$/i, c = 0; c < b.length; c++) if (a.test(b[c])) return c;
            return -1
        }, uy: function (b, a) {
            var c = b;
            if (typeof a.keywords != "undefined") {
                var d;
                d = this.YF(a.keywords);
                if (d >= 0) {
                    var e;
                    e = a.keywords[d];
                    a.keywords[d] = "DATFMT(*ISO)";
                    c = pui.Oe.format(a);
                    a.keywords[d] = e
                }
            }
            return c
        }
    },
    Time: {
        format: function (b) {
            var a;
            a = pui.locale && pui.locales[pui.locale] ? pui.locale : b.locale;
            var c = b.value + "", d = this.Rj(b.keywords);
            if (pui.formatting.ye(b.dataType)) {
                d.lc = (b.timeFormat || d.display).replace(/[^Hgis]/g, "");
                c = pui.formatting.leftPad(c, parseInt(b.dataLength, 10), "0")
            }
            var e = c, f = d.lc;
            if (e.length == 4) {
                f += "s";
                e += "00"
            }
            if (e = pui.formatting.Date.parse(e, f, a)) {
                if (b.timeFormat === "") b.timeFormat = d.display;
                if (/^0*$/.test(c.replace(/\D/g, ""))) return e.format(b.timeFormat, a).replace(/(?:12|24)/g, "00");
                return e.format(b.timeFormat,
                    a)
            }
            return c
        }, yh: function (b) {
            var a;
            a = pui.locale && pui.locales[pui.locale] ? pui.locale : b.locale;
            var c = b.value + "", d = this.Rj(b.keywords);
            if (pui.formatting.ye(b.dataType)) d.lc = (b.timeFormat || d.display).replace(/[^Hgis]/g, "");
            var e;
            if (e = c === "" ? pui.formatting.Date.parse("00:00:00", "H:i:s", "en_US") : pui.formatting.Date.parse(c, b.timeFormat, a)) if (/^0*$/.test(c.replace(/\D/g, ""))) {
                b = e.format(d.lc, a);
                b = b.replace(/(?:12|24)/g, "00");
                return b = b.replace(/PM/i, "AM")
            } else {
                if (!(e.getHours() === 0 && e.getMinutes() === 0 && e.getSeconds() ===
                    0)) {
                    d.lc = d.lc.replace(/([^\\]?)R/g, "$1H");
                    if ((b.dataType == "char" || b.dataType == "varchar") && (b.timeFormat == "H:i" || b.timeFormat == "H:i:s")) d.lc = "H:i:s"
                }
                return e.format(d.lc, a)
            } else {
                e = pui.formatting.Date.parse((new Date).getFullYear() + "-03-07-14.30.15.000000", "Y-m-d-H.i.s.u000", a);
                return {msg: pui.getLanguageText("runtimeMsg", "invalid time", [b.value, e.format(b.timeFormat, a)])}
            }
        }, Rj: function (b) {
            var a, c;
            if (b && b.length > 0) for (var d = /^\s*TIMFMT\s*\(\s*(\*\w{3})\s*\)\s*$/, e = /^\s*TIMSEP\s*\(\s*(?:(\*JOB)|'(.)')\s*\)\s*$/,
                                            f = 0; f < b.length; f++) {
                var h = b[f].toUpperCase();
                if (d.test(h)) a = h.replace(d, "$1"); else if (e.test(h)) c = h.replace(e, "$1$2")
            }
            a = a || "*ISO";
            c = c || "*JOB";
            b = pui.formatting.keywords.mk[a] ? pui.formatting.keywords.mk[a].Ec : pui.formatting.keywords.mk["*ISO"].Ec;
            e = d = a == "*HMS" ? pui.formatting.keywords.Ew[c] || ":" : pui.formatting.keywords.mk[a] ? pui.formatting.keywords.mk[a].Vd : ".";
            if (a == "*HMS") {
                if (c == "*JOB" && pui.appJob && pui.appJob.timeSeparator) c = pui.appJob.timeSeparator;
                e = pui.formatting.keywords.Ew[c]
            }
            return {
                lc: b.replace(/\B/g,
                    d), display: b.replace(/\B/g, e)
            }
        }
    }, "Time Stamp": {
        format: function (b) {
            var a;
            a = pui.locale && pui.locales[pui.locale] ? pui.locale : b.locale;
            var c = b.value + "";
            if (b.timeStampFormat) {
                var d = pui.formatting.Date.parse(c, pui.formatting.Date.uo, a);
                if (d) c = d.format(pui.formatting.Date.uo, "en_US") == "0001-01-01-00.00.00.000000" ? "" : d.format(b.timeStampFormat, a)
            }
            return c
        }, yh: function (b) {
            var a;
            a = pui.locale && pui.locales[pui.locale] ? pui.locale : b.locale;
            var c = b.value + "";
            if (c = pui.formatting.Date.parse(c, b.timeStampFormat, a)) c =
                c.format(pui.formatting.Date.uo, a); else {
                c = pui.formatting.Date.parse((new Date).getFullYear() + "-09-09-14.30.15.000000", pui.formatting.Date.uo, a);
                return {msg: pui.getLanguageText("runtimeMsg", "invalid time stamp", [b.value, c.format(b.timeStampFormat, a)])}
            }
            return c
        }
    }, Special: {
        format: function (b) {
            var a = b.value + "", c = "\\d", d;
            switch (b.special) {
                case "Percentage":
                    a = a.replace(/[^\d\-.]/g, "");
                    d = parseInt(b.dataLength, 10) + 2;
                    if (pui.formatting.ye(b.dataType) && parseInt(b.decPos, 10) > 0) {
                        var e = (parseFloat("." + (a.split(/\./)[1] ||
                            "0"), 10).toFixed(parseInt(b.decPos, 10)) + "").split(/\./)[1];
                        a = a.split(/\./)[0] + "." + e;
                        c += "\\.";
                        d++
                    }
                    c += "\\-%";
                    a += "%";
                    break;
                case "Zip Code":
                    a = a.replace(/[^\d]/g, "");
                    a = pui.formatting.leftPad(a, 5, "0");
                    d = 5;
                    break;
                case "Zip Code + 4":
                    a = a.replace(/[^\d]/g, "");
                    a = pui.formatting.leftPad(a, 9, "0");
                    a = a.slice(0, a.length - 4) + "-" + a.slice(-4);
                    c += "\\-";
                    d = 10;
                    break;
                case "Phone Number":
                    a = a.replace(/[^\d]/g, "");
                    d = "";
                    e = a.length;
                    for (var f = e - 1; f >= 0; f--) {
                        if (f == e - 5) d = "-" + d;
                        if (f == e - 8) d = ") " + d;
                        d = a.charAt(f) + d
                    }
                    if (e > 7) d = "(" + d;
                    a = d;
                    c += "\\-() ";
                    d = 14;
                    break;
                case "Social Security Number":
                    a = a.replace(/[^\d]/g, "");
                    a = pui.formatting.leftPad(a, 9, "0");
                    a = a.slice(0, a.length - 6) + "-" + a.slice(-6, -4) + "-" + a.slice(-4);
                    c += "\\-";
                    d = 11;
                    break;
                case "Mailto Link":
                    a = "mailto:" + Zb(a);
                    c = null;
                    break;
                case "Navigation Link":
                    a = pui.is_android ? "geo:0,0?q=" + Zb(a) : "http://maps.google.com/maps?q=" + Zb(a);
                    c = null;
                    break;
                case "Telephone Link":
                    a = "tel:" + Zb(a);
                    c = null;
                    break;
                case "Normalize URL":
                    a = pui.normalizeURL(a);
                    c = null;
                    break
            }
            if (c != null) b.wi = RegExp("[" + c + "]");
            b.maxLength =
                d;
            return a
        }, yh: function (b) {
            var a = b.value + "";
            switch (b.special) {
                case "Percentage":
                    a = a.replace(/%/g, "");
                    if (a.length > 0) {
                        if (!/^-?\d*\.?\d+$/.test(a)) return {msg: pui.getLanguageText("runtimeMsg", "invalid percent", [a])};
                        if (a.length - a.split(".").length - 1 > b.dataLength + (parseInt(b.decPos, 10) === 0 ? 0 : 1)) return {msg: pui.getLanguageText("runtimeMsg", "invalid digits", [a, b.dataLength])};
                        if (pui.formatting.ye(b.dataType)) {
                            var c = parseInt(b.dataLength, 10) - parseInt(b.decPos, 10), d = a.split(".");
                            if (d[0].length > c) return {
                                msg: pui.getLanguageText("runtimeMsg",
                                    "exceeds whole", [a, c])
                            };
                            if (d[1] && d[1].length > parseInt(b.decPos, 10)) return {msg: pui.getLanguageText("runtimeMsg", "exceeds decimal", [a, b.decPos])}
                        }
                    }
                    return a;
                case "Zip Code":
                    if (pui.formatting.ye(b.dataType)) {
                        a = a.replace(/[^\d]/g, "");
                        b = parseInt(b.dataLength, 10) - parseInt(b.decPos, 10);
                        if (b > 5) b = 5;
                        if (a.length > b) return {msg: pui.getLanguageText("runtimeMsg", "zip too long", [b])}
                    } else {
                        b = parseInt(b.dataLength, 10);
                        if (a.length > b) {
                            a = a.replace(/[^\d]/g, "");
                            if (a.length > b) return {
                                msg: pui.getLanguageText("runtimeMsg", "zip too long",
                                    [b])
                            }
                        }
                    }
                    return a;
                case "Zip Code + 4":
                    if (pui.formatting.ye(b.dataType)) {
                        a = a.replace(/[^\d]/g, "");
                        b = parseInt(b.dataLength, 10) - parseInt(b.decPos, 10);
                        if (b > 9) b = 9;
                        if (a.length > b) return {msg: pui.getLanguageText("runtimeMsg", "zip too long", [b])}
                    } else {
                        b = parseInt(b.dataLength, 10);
                        if (a.length > b) {
                            a = a.replace(/[^\d]/g, "");
                            if (a.length > b) return {msg: pui.getLanguageText("runtimeMsg", "zip too long", [b])}
                        }
                    }
                    return a;
                case "Phone Number":
                    if (pui.formatting.ye(b.dataType)) {
                        a = a.replace(/[^\d]/g, "");
                        b = parseInt(b.dataLength, 10) -
                            parseInt(b.decPos, 10);
                        if (b > 10) b = 10;
                        if (a.length > b) return {msg: pui.getLanguageText("runtimeMsg", "phone too long", [b])}
                    } else {
                        b = parseInt(b.dataLength, 10);
                        if (a.length > b) {
                            a = a.replace(/[^\d]/g, "");
                            if (a.length > b) return {msg: pui.getLanguageText("runtimeMsg", "phone too long", [b])}
                        }
                    }
                    return a;
                case "Social Security Number":
                    if (pui.formatting.ye(b.dataType)) {
                        a = a.replace(/[^\d]/g, "");
                        b = parseInt(b.dataLength, 10) - parseInt(b.decPos, 10);
                        if (b > 9) b = 9;
                        if (a.length > b) return {
                            msg: pui.getLanguageText("runtimeMsg", "ssno too long",
                                [b])
                        }
                    } else {
                        b = parseInt(b.dataLength, 10);
                        if (a.length > b) {
                            a = a.replace(/[^\d]/g, "");
                            if (a.length > b) return {msg: pui.getLanguageText("runtimeMsg", "ssno too long", [b])}
                        }
                    }
                    return a;
                default:
                    return a
            }
        }
    }, Custom: {
        format: function (b) {
            if (b.customFunction !== "") {
                var a, c;
                try {
                    c = eval("(" + b.customFunction + ")")
                } catch (d) {
                    return {msg: pui.getLanguageText("runtimeMsg", "invalid custom val") + "\n\n" + d.message || d.description}
                }
                if (typeof c === "function") {
                    try {
                        a = c(b)
                    } catch (e) {
                        return {
                            msg: pui.getLanguageText("runtimeMsg", "error custom val") +
                                "\n\n" + e.message || e.description
                        }
                    }
                    return a
                }
            }
            if (b.customPattern !== "") {
                if (b.dataType == "date") {
                    b.dateFormat = b.customPattern;
                    b.formatting = "Date"
                } else if (b.dataType == "time") {
                    b.timeFormat = b.customPattern;
                    b.formatting = "Time"
                } else if (b.dataType == "timestamp") {
                    b.timeStampFormat = b.customPattern;
                    b.formatting = "Time Stamp"
                } else {
                    b.formatting = "Date";
                    timePatternChars = ["H", "i", "s", "u", "g", "a", "A"];
                    for (a = 0; a < timePatternChars.length; a++) if (b.customPattern.indexOf(timePatternChars[a]) != -1) {
                        b.formatting = "Time Stamp";
                        break
                    }
                    if (b.formatting ==
                        "Time Stamp") b.timeStampFormat = b.customPattern;
                    if (b.formatting == "Date") b.dateFormat = b.customPattern
                }
                return pui.Oe.format(b)
            }
        }, yh: function (b) {
            if (b.customFunction !== "") return pui.Oe.Custom.format(b)
        }
    }, validate: ja(), zz: function () {
        var b = {
            "char": {},
            varchar: {},
            string: {},
            graphic: {Number: true, Indicator: true, Date: true, Time: true, "Time Stamp": true, Special: true},
            zoned: {"Time Stamp": true},
            indicator: {Date: true, Time: true, "Time Stamp": true, Special: true},
            expression: {
                Text: true, Number: true, Date: true, Time: true, "Time Stamp": true,
                Special: true
            },
            floating: {"Time Stamp": true},
            date: {Number: true, Indicator: true, Time: true, Special: true},
            time: {Number: true, Indicator: true, Date: true, "Time Stamp": true, Special: true},
            timestamp: {Number: true, Indicator: true, Special: true},
            reference: {}
        };
        return function (a) {
            if (!b[a.dataType] || b[a.dataType][a.formatting] || a.formatting === "") {
                a.formatting = "Text";
                return false
            }
            return true
        }
    }()
};
pui.QD = function () {
    var b = this, a = [];
    this.JL = function () {
        return a
    };
    this.Ry = function (c) {
        if (c == null) c = true;
        for (var d = [], e = 0; e < a.length; e++) {
            var f = a[e];
            if (!(f.j != null && f.j != Q)) if (c || !f.nj && f.name != "layout") d.push(f.name)
        }
        d.sort();
        return d
    };
    this.OL = function () {
        for (var c = [], d = 0; d < a.length; d++) {
            var e = a[d].menuName;
            if (typeof e == "string") c.push(e); else for (var f = 0; f < e.length; f++) c.push(e[f])
        }
        c.sort();
        return c
    };
    this.KG = function (c) {
        for (var d = 0; d < a.length; d++) {
            var e = a[d];
            if (typeof e.menuName == "string") {
                if (c == e.menuName) return e
            } else for (var f =
                0; f < e.menuName.length; f++) if (c == e.menuName[f]) return e
        }
        return null
    };
    this.add = function (c) {
        var d = c.name;
        if (d != null) {
            if (c.newId == null) {
                for (var e = d.split(" "), f = "", h = 0; h < e.length; h++) {
                    word = e[h];
                    word = word.charAt(0).toUpperCase() + word.substr(1);
                    f += word
                }
                c.newId = f
            }
            if (c.menuName == null) {
                e = d.split(" ");
                f = "";
                for (h = 0; h < e.length; h++) {
                    var g = e[h];
                    g = g.charAt(0).toUpperCase() + g.substr(1);
                    if (f != "") f += " ";
                    f += g
                }
                c.menuName = f
            }
            if (c.newValue == null) c.newValue = "";
            if (c.tag == null) c.tag = "div";
            if (c.inputType == null && c.tag == "input") c.inputType =
                "text";
            if (c.defaults == null) c.defaults = {};
            if (c.Bq == null) c.Bq = "";
            if (c.Qu == null) c.Qu = "";
            if (c.bq == null) c.bq = "";
            if (c.resizable == null) c.resizable = true;
            if (c.nj == null) c.nj = false;
            if (c.b == null) c.b = false;
            if (c.oe == null) c.oe = true;
            if (c.Vh == null) c.Vh = true;
            if (c.rf == null) c.rf = false;
            a.push(c);
            b[d] = c;
            if (!pui.ja) rc()["field type"].choices = b.Ry(false)
        }
    }
};
pui.widgets = new pui.QD;
pui.widgets.gg = function () {
    var b = [];
    for (var a in pui.widgets.buttonStyles) b.push(a);
    return b
};
pui.widgets.Rk = function () {
    var b = [];
    for (var a in pui.widgets.panelStyles) b.push(a);
    return b
};
pui.widgets.eG = function () {
    return pui.widgets.pm
};
pui.widgets.IG = function () {
    var b = [];
    for (var a in pui.widgets.tabStyles) b.push(a);
    b.push("Other...");
    return b
};

function bd(b) {
    this.onready = this.onfail = this.onsuccess = this.suppressAlert = this.password = this.user = this.async = this.url = this.reqData = this.postData = this.method = null;
    this.headers = {};
    this.params = null;
    this.sendAsBinary = true;
    var a = this.overrideMimeType = null, c = null, d = null, e = null,
        f = typeof pui != "undefined" && typeof pui.alert != "undefined" ? pui.alert : alert, h = this;
    if (typeof b == "object") for (var g in b) {
        if (typeof this[g] != "undefined") this[g] = b[g]
    } else this.url = b;
    if (window.XMLHttpRequest) a = new XMLHttpRequest; else if (window.ActiveXObject) a =
        new ActiveXObject("Microsoft.XMLHTTP"); else {
        f("Ajax request error: Unsupported browser.");
        return
    }
    this.send = this.send = function () {
        function l() {
            if (a.readyState == 4) {
                c = a.status + " - " + a.statusText;
                h.onready != null && h.onready(h);
                if (a.status == 200) {
                    d = true;
                    h.onsuccess != null && h.onsuccess(h)
                } else {
                    d = false;
                    h.suppressAlert != true && f(c);
                    h.onfail != null && h.onfail(h)
                }
                e = false
            }
        }

        var n = null, o = null, i = null;
        if (h.method == null) n = "GET"; else if (typeof h.method != "string" && (h.method.toUpperCase() != "GET" || h.method.toUpperCase() != "POST" ||
            h.method.toUpperCase() != "PUT")) {
            f('Invalid value for property: "method".');
            return
        } else n = h.method.toUpperCase();
        if (n == "POST" || n == "PUT") {
            if (h.reqData != null) i = h.reqData; else if (h.postData != null) i = h.postData;
            if (i != null) {
                if (typeof i != "string") {
                    f('Invalid value for property: "postData".');
                    return
                }
            } else i = ""
        }
        if (h.async == null) o = true; else if (h.async != true && h.async != false) {
            f('Invalid value for property: "async".');
            return
        } else o = h.async;
        if (typeof h.url != "string") f('Invalid value for property: "url".'); else {
            if (h.user !=
                null) if (typeof h.user != "string") {
                f('Invalid value for property: "user".');
                return
            }
            if (h.password != null) if (typeof h.password != "string") {
                f('Invalid value for property: "password".');
                return
            }
            if (h.onsuccess != null) if (typeof h.onsuccess != "function") {
                f('Invalid value for event: "onsuccess".');
                return
            }
            if (h.onfail != null) if (typeof h.onfail != "function") {
                f('Invalid value for event: "onfail".');
                return
            }
            if (h.onready != null) if (typeof h.onready != "function") {
                f('Invalid value for event: "onready".');
                return
            }
            var r = true;
            if (i !=
                null) for (var k in h.headers) if (k.toUpperCase() == "CONTENT-TYPE") if (h.headers[k].toLowerCase().indexOf("www-form-urlencoded") == -1) r = false;
            var q = h.url, s = h.params;
            if (typeof s == "object") {
                var t = "";
                for (k in s) {
                    var u = s[k], w = [];
                    if (typeof u == "object") {
                        if (u.length != null && u.length > 0) w = u
                    } else w.push(u);
                    for (u = 0; u < w.length; u++) {
                        if (t != "") t += "&";
                        t += encodeURIComponent(k) + "=" + encodeURIComponent(w[u])
                    }
                }
                if (t != "") if (r && (n == "POST" || n == "PUT")) {
                    if (i != null && i != "") i += "&"; else i = "";
                    i += t
                } else {
                    r = q.split("?");
                    if (r.length == 2 && r[1] !=
                        "") q = r[0] + "?" + r[1] + "&" + t; else q += "?" + t
                }
            }
            try {
                typeof h.user == "string" && typeof h.password == "string" ? a.open(n, q, o, h.user, h.password) : a.open(n, q, o);
                q = false;
                var v = h.headers;
                for (k in v) {
                    a.setRequestHeader(k, v[k]);
                    if (k.toUpperCase() == "CONTENT-TYPE") q = true
                }
                if (n == "POST") q || a.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                typeof h.overrideMimeType == "string" && typeof a.overrideMimeType == "function" && a.overrideMimeType(h.overrideMimeType)
            } catch (E) {
                f(E);
                return
            }
            e = true;
            if (o == true) a.onreadystatechange =
                l;
            if (h.sendAsBinary == true) try {
                a.sendAsBinary(i)
            } catch (y) {
                a.send(i)
            } else a.send(i);
            o != true && l()
        }
    };
    this.ok = this.Fu = function () {
        return d != null ? d : false
    };
    this.getResponseText = this.jc = function () {
        return a.responseText
    };
    this.getResponseXML = this.Ny = function () {
        return a.responseXML
    };
    this.getStatus = this.Vc = function () {
        return a.status
    };
    this.getStatusText = this.xj = function () {
        return a.statusText
    };
    this.getStatusMessage = this.Uk = function () {
        return c
    };
    this.getAllResponseHeaders = this.getAllResponseHeaders = function () {
        if (d) try {
            return a.getAllResponseHeaders()
        } catch (l) {
            f(l)
        }
    };
    this.getResponseHeader = this.getResponseHeader = function (l) {
        if (d) try {
            return a.getResponseHeader(l)
        } catch (n) {
            f(n)
        }
    };
    this.setRequestHeader = this.setRequestHeader = function (l, n) {
        h.headers[l] = n
    };
    this.abort = this.abort = function () {
        if (!(e == null || e == true)) try {
            a.abort()
        } catch (l) {
            f(l)
        }
    }
}

function dc(b, a) {
    var c, d, e, f = "";
    if (arguments.length == 1 && typeof arguments[0] == "object") {
        c = arguments[0];
        c.async = null;
        c.onsuccess = null;
        if (typeof c.handler == "function") {
            d = true;
            e = c.handler
        } else d = false
    } else if (a != null && typeof a == "function") {
        d = true;
        e = a
    } else d = false;
    c = new bd(arguments[0]);
    c.async = d;
    c.onsuccess = function (h) {
        f += h.jc();
        d == true && e(f)
    };
    c.send();
    if (d == false) return f
}

function jc(b, a) {
    var c, d, e, f = null, h = false;
    if (arguments.length == 1 && typeof arguments[0] == "object") {
        c = arguments[0];
        c.async = null;
        c.onsuccess = null;
        if (c.saveResponse == true) h = true;
        if (typeof c.handler == "function") {
            d = true;
            e = c.handler
        } else d = false
    } else if (a != null && typeof a == "function") {
        d = true;
        e = a
    } else d = false;
    c = new bd(arguments[0]);
    c.async = d;
    c.onsuccess = function (g) {
        g = g.jc();
        if (h && typeof pui == "object") pui.savedJSON = g;
        try {
            f = eval("(" + g + ")")
        } catch (l) {
            e(null, l);
            return
        }
        d == true && e(f)
    };
    c.send();
    if (d == false) return f
}

if (typeof window.pui == "undefined") window.pui = {};
window.RPGspRequest = bd;
window.pui.Ajax = bd;
window.pui.AjaxRequest = bd;
window.ajax = dc;
window.ajaxXML = function (b, a) {
    var c, d, e, f = null;
    if (arguments.length == 1 && typeof arguments[0] == "object") {
        c = arguments[0];
        c.async = null;
        c.onsuccess = null;
        c.onfail = null;
        c.onsuccess = null;
        if (typeof c.handler == "function") {
            d = true;
            e = c.handler
        } else d = false
    } else if (a != null && typeof a == "function") {
        d = true;
        e = a
    } else d = false;
    c = new bd(arguments[0]);
    c.async = d;
    c.onsuccess = function (h) {
        f = h.Ny();
        d == true && e(f)
    };
    c.send();
    if (d == false) return f
};
window.ajaxJSON = jc;
window.ajaxSubmit = function (b, a) {
    var c, d = "", e = typeof pui != "undefined" && typeof pui.alert != "undefined" ? pui.alert : alert;
    if (typeof b == "object") c = b; else {
        c = document.getElementById(b);
        if (c == null) c = document.forms[b]
    }
    var f;
    if (c != null) f = c.tagName;
    if (c == null || f == null || f.toUpperCase() != "FORM") {
        e("Ajax request error: Invalid form object.");
        return ""
    }
    if (b.action == "") {
        e("Ajax request error: Invalid form action.");
        return ""
    }
    for (e = 0; e < c.elements.length; e++) {
        f = c.elements[e];
        if (f.name != null && f.name != "") {
            var h = false;
            if (f.tagName ==
                "INPUT") {
                var g = f.type;
                g = g.toLowerCase();
                if (g == "hidden") h = true;
                if (g == "password") h = true;
                if (g == "text") h = true;
                if (pui.$p(g)) h = true;
                if (g == "") h = true;
                if (g == "checkbox" || g == "radio") if (f.checked) h = true
            }
            if (f.tagName == "TEXTAREA") h = true;
            if (f.tagName == "SELECT") h = true;
            if (h) {
                if (d != "") d += "&";
                d += f.name + "=" + encodeURIComponent(f.value)
            }
        }
    }
    c = new bd(c.action);
    c.method = "POST";
    c.postData = d;
    var l = "", n;
    if (a != null && typeof a == "function") n = true; else {
        n = false;
        c.async = false
    }
    c.onsuccess = function (o) {
        l += o.jc();
        n == true && a(l)
    };
    c.send();
    if (n == false) return l
};
pui.widgets.add({
    name: "ajax container",
    defaults: {width: "200px", height: "100px"},
    propertySetters: {
        "field type": function (b) {
            if (b.design) {
                b.dom.innerHTML = "AJAX content will appear here.";
                b.dom.style.overflow = "hidden"
            } else {
                b.dom.innerHTML = "";
                url = b.evalProperty("ajax url");
                if (url == null || url == "") b.dom.innerHTML = "AJAX URL property not specified."; else dc(url, function (a) {
                    try {
                        pui.kB(b.dom, a)
                    } catch (c) {
                        b.dom.innerHTML = c.message
                    }
                })
            }
        }
    }
});
pui.widgets.add({
    name: "button",
    tag: "input",
    inputType: "button",
    newValue: "Click Here",
    rf: true,
    defaults: {width: !pui.is_quirksmode ? "100px" : null, "css class": "button"},
    propertySetters: {
        "field type": function (b) {
            b.dom.value = b.evalProperty("value");
            if (b.design && b.properties["field type"] != "button") {
                var a = b.c.properties["css class"];
                if (a == null) a = "";
                if (!pui.f(a)) if (a.indexOf("button") < 0) {
                    if (a != "") a += " ";
                    a += "button";
                    b.c.properties["css class"] = a;
                    b.c.m["css class"] = true;
                    b.dom.className = a
                }
            }
            b.design || gc(b.dom, "keydown",
                function (c) {
                    if (c.keyCode == 13) {
                        if (!c) c = window.event;
                        c.cancelBubble = true
                    }
                })
        }, value: function (b) {
            b.dom.value = b.value
        }
    }
});
pui.charts = {};
pui.qm = [];
pui.widgets.pm = ["Column3D", "Column2D", "Bar2D", "Line", "Area2D", "Pie2D", "Pie3D", "Doughnut3D", "Other..."];
pui.widgets.YE = ["3D Column", "2D Column", "2D Bar", "Line", "Area", "2D Pie", "3D Pie", "Doughnut"];
pui.widgets.Ki = function (b) {
    function a() {
        b.dom.xz = false
    }

    if (!b.dom.xz) {
        b.dom.xz = true;
        if (typeof FusionCharts == "undefined") {
            b.dom.innerHTML = "<br/>&nbsp;&nbsp;" + pui.getLanguageText("runtimeMsg", "failed to load x", [pui.getLanguageText("runtimeText", "chart")]);
            console.log("Dependency FusionCharts not defined before rendering.")
        } else if (!Ub()) {
            var c = b.dom.pui.properties["map type"], d = c != null && c != "";
            if (b.dom.id != null && b.dom.id != "") c = b.dom.id + "_Chart"; else if (b.Jk != null) c = b.Jk + "_Chart"; else {
                console.log("Stopped rendering chart; missing id attribute.");
                return
            }
            var e = {
                type: b.type.toLowerCase(),
                id: c,
                width: "100%",
                height: "100%",
                renderAt: b.dom,
                events: {renderComplete: a, dataLoadError: a, dataInvalid: a, noDataToDisplay: a}
            };
            if (typeof b.dom.pui.properties["chart response"] != "undefined" || typeof b.dom.pui.properties.onchartclick != "undefined") {
                if (b.hw != null) e.events.dataLoadRequestCompleted = pui.widgets.aE;
                if (b.Nh != null) b.Nh = pui.widgets.Vw(b.dom.id, b.Nh, d); else if (b.jsonData != null) b.jsonData = pui.widgets.hE(b.dom.id, b.jsonData, d)
            }
            if (b.Nh != null) {
                e.dataFormat = "xml";
                e.dataSource = b.Nh
            } else if (b.jsonData != null) {
                e.dataFormat = "json";
                e.dataSource = b.jsonData
            }
            d = new FusionCharts(e);
            pui.qm.push(c);
            d.dom = b.dom;
            b.transparent == true && d.setTransparent(true);
            b.hw != null && pui["legacy chart data url"] == true && d.setXMLUrl(b.hw);
            b.dom.style.backgroundColor = "";
            d.render();
            b.dom.chart = document.getElementById(c);
            if (b.dom.chart != null && b.dom.chart.style.visibility == "visible") b.dom.chart.style.visibility = ""
        }
    }
};
pui.widgets.aE = function (b, a) {
    typeof a.cancelDataLoad == "function" && a.cancelDataLoad();
    var c = b.sender.dom.id, d = b.sender.dom.pui.properties["map type"];
    d = d != null && d != "";
    if (a.dataFormat == "xml") {
        c = pui.widgets.Vw(c, a.dataSource, d);
        b.sender.setXMLData(c)
    }
};
pui.widgets.Vw = function (b, a, c) {
    try {
        var d;
        if (typeof DOMParser != "undefined") d = (new DOMParser).parseFromString(a, "text/xml"); else {
            d = new ActiveXObject("Microsoft.XMLDOM");
            d.async = false;
            d.loadXML(a)
        }
        var e = [], f;
        if (d.getElementsByTagName("categories").length == 1) {
            for (var h = d.getElementsByTagName("category"), g = 0; g < h.length; g++) e.push(h[g].getAttribute("label"));
            f = d.getElementsByTagName("dataset")
        } else f = [d];
        for (h = 0; h < f.length; h++) {
            var l = f[h], n = l.getElementsByTagName("set");
            for (g = 0; g < n.length; g++) {
                var o = {id: b},
                    i = n[g];
                if (l.nodeName == "dataset") {
                    o.name = l.getAttribute("seriesname");
                    if (o.name == null) o.name = l.getAttribute("seriesName");
                    if (g < e.length) o.category = e[g]
                } else if (c) o.name = i.getAttribute("id"); else {
                    o.name = i.getAttribute("name");
                    if (o.name == null) o.name = i.getAttribute("label")
                }
                i.setAttribute("link", "j-pui.widgets.doChartLink-" + JSON.stringify(o))
            }
        }
        return typeof XMLSerializer != "undefined" ? (new XMLSerializer).serializeToString(d) : d.xml
    } catch (r) {
        return a
    }
};
pui.widgets.hE = function (b, a, c) {
    try {
        var d = eval("(" + a + ")"), e, f = [];
        if (d.dataset instanceof Array) {
            e = d.dataset;
            for (var h = 0; h < d.categories[0].category.length; h++) f.push(d.categories[0].category[h].label)
        } else e = [d.data];
        for (h = 0; h < e.length; h++) for (var g = {id: b}, l = e[h], n = l.data instanceof Array ? l.data : l, o = 0; o < n.length; o++) {
            var i = n[o];
            if (l.seriesname) {
                g.name = l.seriesname;
                if (o < f.length) g.category = f[o]
            } else g.name = c ? i.id : i.label;
            i.link = "j-pui.widgets.doChartLink-" + JSON.stringify(g)
        }
        return d
    } catch (r) {
        return a
    }
};
pui.widgets.doChartLink = function (b) {
    b = JSON.parse(b);
    var a = b.name, c = b.category;
    b = Tb(b.id);
    if (typeof b.pui.properties["chart response"] != "undefined") {
        b.Fa = c ? c + "|" + a : a;
        if (b.ia == "true" || b.ia == "send data") pui.ia = b.ia;
        if (pui.Ld() == false) b.Fa = ""
    } else if (typeof b.onchartclick == "function") c ? b.onchartclick({name: a, category: c}) : b.onchartclick(a)
};
pui.widgets.fo = function (b, a, c) {
    b.innerHTML = "";
    if (c) a = "Map"; else {
        c = false;
        for (var d = 0; d < pui.widgets.pm.length; d++) if (a == pui.widgets.pm[d]) if (a != "Other...") {
            c = true;
            break
        }
        c || (a = "Bar2D")
    }
    c = document.createElement("img");
    c.src = "/profoundui/proddata/images/charts/" + a + ".jpg";
    c.style.position = "absolute";
    c.style.left = "0px";
    c.style.top = "0px";
    c.style.width = "100%";
    c.style.height = "100%";
    c.lH = true;
    b.appendChild(c)
};
pui.widgets.py = function (b) {
    var a = '<?xml version="1.0" encoding="utf-8"?><chart';
    if (typeof b == "string" && b.length > 0) a += " " + b;
    a += ">";
    return a
};
pui.widgets.add({
    name: "chart",
    dependencies: ["/FusionChartsXT/js/pui-fusioncharts.js"],
    defaults: {width: "300px", height: "200px", "background color": "#EEEEEE", "z index": "21"},
    propertySetters: {
        "field type": function (b) {
            if (b.dom.pui == null) b.dom.pui = {};
            var a = b.evalProperty("parent tab panel"), c;
            if (a != null && a.length > 0) c = Tb(a);
            if (c) c = c.tabPanel;
            a = parseInt(b.evalProperty("parent tab"), 10);
            if (c && !isNaN(a) && a != c.selectedTab) {
                if (typeof b.properties["chart response"] != "undefined") b.dom.pui.properties["chart response"] =
                    b.properties["chart response"]
            } else {
                c = Zb(b.evalProperty("map type"));
                var d, e = c != "";
                if (e) {
                    if (c.toLowerCase().indexOf("maps/") == 0) c = c.substr(5);
                    d = c = "/FusionChartsXT/js/maps/" + c
                } else d = b.evalProperty("chart type");
                if (b.design) {
                    pui.widgets.fo(b.dom, d, e);
                    b.dom.style.overflow = "hidden";
                    b.dom.style.border = "1px solid #999999"
                } else {
                    var f = b.dom.id;
                    b.dom.pui.properties = b.properties;
                    if (!b.dom.chart) b.dom.innerHTML = "<br/>&nbsp;&nbsp;&nbsp;&nbsp;" + pui.getLanguageText("runtimeMsg", "loading x", [pui.getLanguageText("runtimeText",
                        "chart")]);
                    if (d == "") d = "Bar2D";
                    var h = b.evalProperty("chart url"), g = b.evalProperty("chart url json");
                    if (h != null && h != "") h = pui.ej(h);
                    if (g != null && g != "") g = pui.ej(g);
                    c = b.evalProperty("chart xml");
                    a = b.evalProperty("chart json");
                    if (c != null && c != "") pui.widgets.Ki({
                        dom: b.dom,
                        type: d,
                        transparent: b.properties["chart overlay"] != "true",
                        Nh: c
                    }); else if (a != null && a != "") pui.widgets.Ki({
                        dom: b.dom,
                        type: d,
                        transparent: b.properties["chart overlay"] != "true",
                        jsonData: a
                    }); else {
                        var l = b.evalProperty("custom sql").toUpperCase();
                        a = b.evalProperty("order by").toUpperCase();
                        c = b.evalProperty("record limit").toUpperCase();
                        var n = b.evalProperty("chart options");
                        if (h == "" && g == "" && l == "") {
                            h = b.evalProperty("database file").toUpperCase();
                            g = b.evalProperty("name field").toUpperCase();
                            l = b.evalProperty("value field").toUpperCase();
                            var o = b.evalProperty("summary option"),
                                i = b.evalProperty("selection criteria").toUpperCase(), r = b.evalProperty("names"),
                                k = b.evalProperty("values");
                            if (Zb(r) != "" && Zb(k) != "") {
                                c = pui.widgets.py(n);
                                a = pui.Ta(r);
                                h = pui.Ta(k);
                                g = a.length;
                                if (h.length > g) g = h.length;
                                for (l = 0; l < g; l++) {
                                    i = a[l];
                                    k = h[l];
                                    if (i == null) i = "";
                                    i = Zb(i);
                                    if (i.substr(0, 2) == "D_" || i.substr(0, 2) == "I_") {
                                        k = Ec(i);
                                        if (k != "") i = k
                                    }
                                    k = h[l];
                                    if (k == null) k = "0";
                                    k = String(k);
                                    k = Zb(k);
                                    o = k.substr(0, 1);
                                    if ((o < "0" || o > "9") && o != "." && o != "," && o != "-") {
                                        k = Ec(k);
                                        if (pui.appJob.decimalFormat != "I" && pui.appJob.decimalFormat != "J") k = k.replace(/,/g, "")
                                    }
                                    k = Number(k);
                                    if (isNaN(k)) k = 0;
                                    o = "label";
                                    if (e) o = "id";
                                    c += "<set " + o + '="' + pui.Go(i) + '" value="' + pui.Go(k) + '" />'
                                }
                                c += "</chart>";
                                pui.widgets.Ki({
                                    dom: b.dom, type: d,
                                    transparent: b.properties["chart overlay"] != "true", Nh: c
                                })
                            } else if (h == "") b.dom.innerHTML = "&nbsp;&nbsp;" + pui.getLanguageText("runtimeMsg", "data src not specfd x", [pui.getLanguageText("runtimeText", "chart")]); else if (g == "") b.dom.innerHTML = "&nbsp;&nbsp;" + pui.getLanguageText("runtimeMsg", "name fld not specfd x", [pui.getLanguageText("runtimeText", "chart")]); else {
                                r = "";
                                if (o == "average") r = "avg(";
                                if (o == "count") r = "count(";
                                if (o == "sum") r = "sum(";
                                if (o == "maximum") r = "max(";
                                if (o == "minimum") r = "min(";
                                if (l == null || l == "") if (o ==
                                    "count") l = g; else {
                                    b.dom.innerHTML = "&nbsp;&nbsp;" + pui.getLanguageText("runtimeMsg", "val fld not specfd x", [pui.getLanguageText("runtimeText", "chart")]);
                                    return
                                }
                                k = "SELECT ";
                                if (r != "") l = r + l + ")";
                                k += g + ", ";
                                k += l + " ";
                                k += " FROM " + h;
                                if (i != "") k += " WHERE " + i;
                                if (r != "") k += " GROUP BY " + g + " ";
                                k += r == "" && a != "" ? " ORDER BY " + a : " ORDER BY " + g;
                                h = cc("PUI0009104.PGM");
                                g = "AUTH=";
                                if (Q == "genie") g += GENIE_AUTH;
                                if (Q == "dspf") g += pui.appJob.auth;
                                if (pui.secLevel > 0) {
                                    g += "&q=" + encodeURIComponent(pui.jg(b.dom));
                                    a = pui.ig(b.properties);
                                    if (a !=
                                        "") g += "&" + a
                                } else g += "&q=" + pui.ad.ci(k);
                                g += "&maxcount=" + c;
                                if (pui["read db driven data as ebcdic"] !== true) g += "&UTF8=Y";
                                if (e) g += "&isMap=Y";
                                if (pui.isCloud) g += "&workspace_id=" + pui.cloud.ws.id;
                                var q = new pui.Ajax(h);
                                q.method = "post";
                                q.async = true;
                                q.postData = g;
                                q.suppressAlert = true;
                                q.onsuccess = function () {
                                    if (!Ub()) {
                                        var t = "invalid", u = Vb(q, "Run Charting Query");
                                        if (u) t = u;
                                        if (n != null && typeof n == "string" && n != "" && t.substr(0, 45) == '<?xml version="1.0" encoding="utf-8"?><chart>') t = '<?xml version="1.0" encoding="utf-8"?><chart>'.substr(0,
                                            44) + " " + n + t.substr(44);
                                        pui.widgets.Ki({
                                            dom: b.dom,
                                            Jk: f,
                                            type: d,
                                            transparent: b.properties["chart overlay"] != "true",
                                            Nh: t
                                        });
                                        t = b.evalProperty("ondbload");
                                        if (typeof t != "string" || t == "") t = null;
                                        if (t) {
                                            var w = true;
                                            u || (w = false);
                                            pui.di(t, w, b.dom.id)
                                        }
                                    }
                                };
                                q.send()
                            }
                        } else if (h != "") if (pui["legacy chart data url"] == true) {
                            h = h.replace(/&/g, "%26");
                            pui.widgets.Ki({
                                dom: b.dom,
                                Jk: f,
                                type: d,
                                transparent: b.properties["chart overlay"] != "true",
                                hw: h
                            })
                        } else dc({
                            url: h, method: "get", async: true, handler: function (t) {
                                pui.widgets.Ki({
                                    dom: b.dom,
                                    Jk: f, type: d, transparent: b.properties["chart overlay"] != "true", Nh: t
                                })
                            }
                        }); else if (g != "") dc({
                            url: g, method: "get", async: true, handler: function (t) {
                                pui.widgets.Ki({
                                    dom: b.dom,
                                    Jk: f,
                                    type: d,
                                    transparent: b.properties["chart overlay"] != "true",
                                    jsonData: t
                                })
                            }
                        }); else if (l != "") {
                            g = "AUTH=" + (Q == "genie" ? GENIE_AUTH : pui.appJob.auth);
                            if (pui.secLevel > 0) {
                                g += "&q=" + encodeURIComponent(pui.jg(b.dom));
                                a = pui.ig(b.properties);
                                if (a != "") g += "&" + a
                            } else {
                                k = l;
                                if (a != "") k += " ORDER BY " + a;
                                g += "&q=" + pui.ad.ci(k)
                            }
                            g += "&limit=" + c;
                            if (pui["read db driven data as ebcdic"] !==
                                true) g += "&UTF8=Y";
                            var s = new pui.Ajax(cc("PUI0009102.PGM"));
                            s.method = "post";
                            s.async = true;
                            s.postData = g;
                            s.suppressAlert = true;
                            s.onsuccess = function () {
                                var t = pui.widgets.py(n), u = Vb(s, "Custom SQL query");
                                if (!u || u.results == null) {
                                    t = Oa.pop();
                                    if (t != null && typeof t == "object") if (u = Tb(f)) u.innerHTML = '<ul style="overflow-y:auto; white-space:normal"><li>Chart operation: ' + t.wq + "<li>Id: " + t.id + "<li>Message: " + t.text + "<li>" + t.Br + "</ul>"; else console.log(t)
                                } else {
                                    for (var w = e ? "id" : "label", v = 0, E = u.results.length; v < E; v++) {
                                        var y =
                                            Object.keys(u.results[v]).length, F = "", D = "", B = 0;
                                        for (var I in u.results[v]) {
                                            B++;
                                            var z = u.results[v][I];
                                            if (B < y) F += " " + z; else D = z
                                        }
                                        t += "<set " + w + '="' + pui.Go(Zb(F)) + '" value="' + pui.Go(Zb(D)) + '" />'
                                    }
                                    t += "</chart>";
                                    pui.widgets.Ki({
                                        dom: b.dom,
                                        Jk: f,
                                        type: d,
                                        transparent: b.properties["chart overlay"] != "true",
                                        Nh: t
                                    })
                                }
                            };
                            s.send()
                        }
                    }
                }
            }
        }, width: function (b) {
            b.dom.width = b.value;
            var a = typeof b.properties["map type"] != "undefined";
            b.design && pui.widgets.fo(b.dom, b.properties["chart type"], a)
        }, height: function (b) {
            b.dom.height = b.value;
            var a = typeof b.properties["map type"] != "undefined";
            b.design && pui.widgets.fo(b.dom, b.properties["chart type"], a)
        }, "chart type": function (b) {
            b.design && pui.widgets.fo(b.dom, b.value)
        }, "map type": function (b) {
            b.design && pui.widgets.fo(b.dom, b.value, true)
        }, visibility: function (b) {
            if (b.dom.chart) b.dom.chart.style.display = b.value == "hidden" ? "none" : ""
        }
    }
});
pui.widgets.add({
    name: "checkbox",
    tag: "input",
    inputType: "checkbox",
    bq: "label",
    resizable: false,
    defaults: {label: "Checkbox"},
    propertySetters: {
        "field type": function (b) {
            var a = b.evalProperty("value"), c = b.evalProperty("checked value");
            b.dom.pe = c;
            if (!pui.is_quirksmode) if (!pui.is_old_ie) b.dom.style.margin = "2px";
            b.dom.checked = Q == "genie" && b.dom.jI != null && b.properties.value == null && b.properties["checked value"] == null ? b.dom.jI : a == c ? true : false;
            if (!b.design) {
                var d = b.evalProperty("unchecked value");
                b.dom.Gg = d;
                if ((c ===
                    "" || c === null || c === undefined) && (d === "" || d === null || d === undefined) && (a === "1" || a === "true" || a === true)) b.dom.checked = true;
                Na.push(b.dom);
                a = b.evalProperty("label");
                a != "" && Yb(b.dom, a);
                gc(b.dom, "click", function () {
                    if (b.dom.readOnly) if (b.dom.checked == false) b.dom.checked = true; else if (b.dom.checked == true) b.dom.checked = false
                })
            }
            pui.zt(b.dom)
        }, value: function (b) {
            var a = b.evalProperty("checked value");
            b.dom.pe = a;
            b.dom.checked = b.value == a ? true : false;
            if (!b.design) {
                var c = b.evalProperty("unchecked value");
                if ((a === "" || a ===
                    null || a === undefined) && (c === "" || c === null || c === undefined) && (b.value === "1" || b.value === "true" || b.value === true)) b.dom.checked = true
            }
            pui.zt(b.dom)
        }, "checked value": function (b) {
            var a = b.evalProperty("value"), c = b.value;
            b.dom.pe = c;
            b.dom.checked = a == c ? true : false;
            pui.zt(b.dom)
        }, visibility: function (b) {
            if (!b.design && b.dom.ng) b.dom.ng.style.visibility = b.value == "hidden" ? "hidden" : ""
        }, "css class": function (b) {
            if (b.design && b.c.label) {
                b.c.label.className = "label-for";
                var a = Zb(b.value.split(" ")[0]);
                a != "" && pui.ya(b.c.label,
                    "label-for-" + a)
            }
        }
    }
});
pui.sC = function () {
    function b() {
        h.innerHTML = "";
        h.style.display = "none"
    }

    function a() {
        var l = d.h.offsetTop, n = d.h.offsetLeft, o = d.h.parentNode;
        if (o.parentNode.grid) {
            l += o.offsetTop;
            n += o.offsetLeft;
            o = o.parentNode;
            l += o.offsetTop;
            n += o.offsetLeft;
            o = o.parentNode
        }
        if (o.getAttribute("container") == "true") {
            o = pui.layout.ec(o);
            l += o.y;
            n += o.x
        }
        if (Q == "genie") if (d.h.parentNode.layerInfo) {
            l += d.h.parentNode.offsetTop + d.h.parentNode.clientTop;
            n += d.h.parentNode.offsetLeft + d.h.parentNode.clientLeft
        }
        l += d.h.offsetHeight;
        h.style.top =
            l + "px";
        h.style.left = n + "px"
    }

    function c() {
        h.innerHTML = "";
        h.style.display = "";
        h.style.height = d.choices.length > 5 || d.choices.length == 0 ? g + "px" : "";
        a();
        var l = parseInt(d.h.style.width);
        if (pui.is_old_ie && d.choices.length > 5) l -= 22;
        if (l < 20) l = 20;
        var n = document.createElement("div");
        n.style.width = l + "px";
        n.style.height = "0px";
        n.style.fontSize = "0px";
        n.style.padding = "0px";
        n.style.margin = "0px";
        n.style.border = "0px none";
        n.style.cursor = "default";
        h.appendChild(n);
        for (l = 0; l < d.choices.length; l++) {
            n = document.createElement("div");
            n.innerHTML = d.choices[l] + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
            n.Bk = d["choice values"][l];
            if (n.Bk == null) n.Bk = d.choices[l];
            n.ZE = d.choices[l];
            n.style.fontFamily = e.style.fontFamily;
            n.className = "combo-option";
            n.onmouseover = function (i) {
                vb(i).className = "combo-option-select"
            };
            n.onmouseout = function (i) {
                vb(i).className = "combo-option"
            };
            n.onmousedown = function (i) {
                yb(i)
            };
            n.onclick = function (i) {
                var r = vb(i);
                if (!e.readOnly && !d.design) {
                    e.value = r.Bk;
                    e.modified = true;
                    d.h.modified = true;
                    pui.Kh(d.h);
                    if (d.formatName !=
                        null && pui.ai != null) pui.ai[d.formatName] = true;
                    if (Q == "genie" && e.S != null && e.S.idx != null) pui.response[e.S.idx] = e;
                    var k = e.ha;
                    if (k != null) {
                        k.hide();
                        k.jb = true;
                        pui.La(e, k.vj())
                    }
                    pui.Xh(e)
                }
                b();
                if (!pui.is_touch || pui.is_mouse_capable) d.JJ();
                d.h.aB != null && !e.readOnly && !d.design && d.h.aB(e.value, r.ZE, d.h);
                yb(i)
            };
            h.appendChild(n)
        }
        l = parseInt(h.style.top, 10);
        n = pui.Ty();
        if (l - n + h.offsetHeight > pui.getWindowSize().height) {
            var o = l - h.offsetHeight - e.offsetHeight - 3;
            if (o - n >= 0) l = o
        }
        h.style.top = l + "px"
    }

    this.Jd = this.h = this.b = null;
    this.design = false;
    this.choices = [];
    this["choice values"] = [];
    var d = this, e, f, h, g = 110;
    this.showChoices = function () {
        c()
    };
    this.hideChoices = function () {
        b()
    };
    this.init = function () {
        if (d.h == null) {
            d.h = document.createElement("div");
            d.b != null && d.b.appendChild(d.h);
            d.h.style.position = "absolute";
            d.h.style.top = "100px";
            d.h.style.left = "100px"
        }
        d.h.style.backgroundColor = "#ffffff";
        d.h.style.overflow = "hidden";
        d.h.style.border = "1px solid #7f9db9";
        if (d.h.style.width == null) d.h.style.width = "80px";
        d.h.style.height = "20px";
        if (pui.is_quirksmode) d.h.style.height =
            pui.is_old_ie ? "22px" : "19px";
        if (e == null) {
            e = document.createElement("input");
            d.h.appendChild(e)
        }
        e.type = "text";
        if (e.getAttribute("autocomplete") == null && (Q != "genie" || !pui.J.config.zk)) {
            e.setAttribute("autocomplete", "off");
            Q == "dspf" && e.setAttribute("name", pui.yg())
        }
        e.style.position = "absolute";
        e.style.border = "0px none";
        e.style.top = "0px";
        e.style.left = "1px";
        e.style.paddingTop = "1px";
        e.style.fontFamily = d.h.style.fontFamily;
        e.style.fontWeight = "normal";
        e.style.outline = "none";
        if (d.h.className == "") d.h.className =
            "input";
        if (typeof d.h.name == "string") e.name = d.h.name;
        if (d.design) {
            e.style.cursor = "default";
            e.readOnly = true
        }
        if (f == null) {
            f = document.createElement("img");
            d.h.appendChild(f)
        }
        f.src = pui.normalizeURL("/profoundui/proddata/images/combo/down_arrow.gif");
        f.style.position = "absolute";
        f.style.top = "0px";
        f.style.right = "0px";
        f.style.width = "18px";
        f.style.height = "20px";
        f.dF = true;
        f.onmousedown = function (o) {
            yb(o)
        };
        f.onmouseup = function (o) {
            h.style.display == "none" && !e.disabled ? c() : b();
            yb(o)
        };
        for (var l, n = d.h.parentNode; n;) {
            if (n.ze) {
                l =
                    n;
                break
            }
            n = n.parentNode
        }
        if (h == null) {
            h = document.createElement("div");
            if (Q == "dspf" && Ub()) R.designer.b.appendChild(h); else l ? l.appendChild(h) : pui.runtimeContainer.appendChild(h);
            gc(document, "click", function (o) {
                vb(o) != f && b()
            })
        }
        h.style.display = "none";
        h.style.position = "absolute";
        h.style.overflowX = "hidden";
        h.style.overflowY = "auto";
        h.style.height = g + "px";
        h.style.zIndex = 130;
        h.className = "combo-options";
        d.eB(d.h.className.split(" ")[0])
    };
    this.H = function () {
        var l = 0;
        l = d.h.style.width;
        var n = d.h.offsetWidth;
        if (l[l.length -
        1] === "%") {
            l = (1 - 21 / n) * 100;
            if (isNaN(l) || l < 0) l = 0;
            e.style.width = l + "%";
            e.style.zIndex = -1
        } else {
            l = parseInt(l) - 21;
            if (isNaN(l) || l < 0) l = 0;
            e.style.width = l + "px"
        }
    };
    this.sB = function (l, n) {
        var o = l.split(" ");
        if (o.length == 2) o[1] = o[1].substr(0, 1).toUpperCase() + o[1].substr(1);
        e.style[o.join("")] = n
    };
    this.setValue = function (l) {
        e.value = l;
        pui.Xh(e)
    };
    this.getValue = function () {
        return e.value
    };
    this.pB = function (l) {
        e.readOnly = l
    };
    this.setDisabled = function (l) {
        e.disabled = l
    };
    this.lr = function (l) {
        e.maxLength = l
    };
    this.tM = function (l, n) {
        e.setAttribute(l,
            n)
    };
    this.eB = function (l) {
        e.className = l;
        pui.ya(h, e.className.split(" ")[0] + "-combo-options")
    };
    this.wE = function (l, n) {
        e[l] = n;
        if (d.h[l] != null) d.h[l] = ra()
    };
    this.clear = function () {
        d.choices = [];
        d["choice values"] = [];
        e.value = "";
        pui.Xh(e)
    };
    this.getBox = function () {
        return e
    };
    this.JJ = function () {
        e.focus()
    }
};
pui.widgets.add({
    name: "combo box",
    defaults: {width: "80px", "css class": "input", "font family": "Trebuchet MS"},
    propertySetters: {
        "field type": function (b) {
            if (b.dom.comboBoxWidget == null) b.dom.comboBoxWidget = new pui.sC;
            b.dom.comboBoxWidget.h = b.dom;
            b.dom.comboBoxWidget.design = b.design;
            var a = b.evalProperty("width");
            b.dom.comboBoxWidget.Jd = b.Jd;
            for (var c = "", d = ""; typeof b.properties["css class" + c] == "string";) {
                if (d != "") d += " ";
                d += b.properties["css class" + c];
                c = c == "" ? " 2" : " " + (parseInt(c, 10) + 1)
            }
            b.dom.className = d;
            b.dom.comboBoxWidget.init();
            if (a != null && a != "") b.dom.style.width = a;
            b.dom.comboBoxWidget.H();
            c = b.evalProperty("choices url");
            if (c != "" && !b.design) {
                var e = new pui.Ajax(pui.ej(c));
                e.async = true;
                e.suppressAlert = true;
                e.onready = function () {
                    b.dom.comboBoxWidget.clear();
                    var i = Vb(e, "Generate Combo Box Options");
                    if (i) {
                        for (var r = 0; r < i.length; r++) {
                            var k = i[r];
                            if (k != null && k.nodeType != "OPTION" && k.text != null && k.value != null) k = new Option(k.text, k.value);
                            b.dom.comboBoxWidget.choices.push(k.text);
                            b.dom.comboBoxWidget["choice values"].push(k.value)
                        }
                        b.dom.comboBoxWidget.setValue(b.evalProperty("value"))
                    }
                };
                b.dom.comboBoxWidget.clear();
                b.dom.comboBoxWidget.setValue(pui.getLanguageText("runtimeMsg", "loading"));
                e.send()
            } else if (b.evalProperty("choices database file") != "") {
                if (!b.design) {
                    a = b.evalProperty("max choices");
                    var f = b.evalProperty("choices database file"), h = pui.Ok(b.evalProperty("choice options field")),
                        g = b.evalProperty("choice values field");
                    if (g == null || g == "") g = h[0];
                    c = b.evalProperty("choices selection criteria");
                    d = pui.Ok(b.evalProperty("order by"));
                    if (d[0] != "") for (var l = 0; l < d.length; l++) {
                        var n =
                            d[l];
                        pui.ic(h, n) == -1 && h.push(n)
                    }
                    g = h[0] + ", " + g;
                    h.splice(0, 1);
                    if (h.length > 0) g += ", " + h.join();
                    f = "SELECT DISTINCT " + g + " FROM " + f;
                    if (c && c != "") f += " WHERE " + c;
                    if (d[0] != "") f += " ORDER BY " + d.join();
                    c = cc("PUI0009103.PGM");
                    var o = new pui.Ajax(c);
                    o.method = "post";
                    o.async = true;
                    o.suppressAlert = true;
                    if (Q == "genie") o.postData = "AUTH=" + GENIE_AUTH;
                    if (Q == "dspf") o.postData = "AUTH=" + pui.appJob.auth;
                    if (pui.secLevel > 0) {
                        o.postData += "&q=" + encodeURIComponent(pui.jg(b.dom));
                        c = pui.ig(b.properties);
                        if (c != "") o.postData += "&" + c
                    } else o.postData +=
                        "&q=" + pui.ad.ci(f);
                    if (pui.isCloud) o.postData += "&workspace_id=" + pui.cloud.ws.id;
                    if (a != null && a != "") o.postData += "&maxcount=" + encodeURIComponent(a);
                    if (pui["read db driven data as ebcdic"] !== true) o.postData += "&UTF8=Y";
                    o.onsuccess = function () {
                        var i = b.evalProperty("ondbload");
                        if (typeof i != "string" || i == "") i = null;
                        var r = Vb(o, "Generate Dropdown Box Options");
                        b.dom.comboBoxWidget.clear();
                        if (r) {
                            if (b.properties["blank option"] == "true") {
                                var k = b.evalProperty("blank option label");
                                if (k == null) k = "";
                                b.dom.comboBoxWidget.choices.push(k);
                                b.dom.comboBoxWidget["choice values"].push("")
                            }
                            for (k = 0; k < r.length; k++) {
                                var q = r[k];
                                if (q != null && q.nodeType != "OPTION" && q.text != null && q.value != null) q = new Option(q.text, q.value);
                                b.dom.comboBoxWidget.choices.push(q.text);
                                b.dom.comboBoxWidget["choice values"].push(q.value)
                            }
                            b.dom.comboBoxWidget.setValue(b.evalProperty("value"));
                            i && pui.di(i, true, b.dom.id)
                        } else i && pui.di(i, false, b.dom.id)
                    };
                    b.dom.comboBoxWidget.clear();
                    b.dom.comboBoxWidget.setValue(pui.getLanguageText("runtimeMsg", "loading"));
                    o.send()
                }
            } else {
                b.dom.comboBoxWidget.setValue(b.evalProperty("value"));
                if (b.design && b.properties.choices) {
                    a = rc().choices;
                    uc(a, b.properties, b.c.dom, b.properties.choices, true, b.c)
                }
            }
        }, choices: function (b) {
            if (b.dom.comboBoxWidget != null) b.dom.comboBoxWidget.choices = pui.Ta(b.value)
        }, "choice values": function (b) {
            if (b.dom.comboBoxWidget != null) b.dom.comboBoxWidget["choice values"] = pui.Ta(b.value)
        }, value: function (b) {
            b.dom.comboBoxWidget != null && b.dom.comboBoxWidget.setValue(b.value)
        }, "read only": function (b) {
            if (b.dom.comboBoxWidget != null && !b.design) b.value == true || b.value == "true" ?
                b.dom.comboBoxWidget.pB(true) : b.dom.comboBoxWidget.pB(false)
        }, disabled: function (b) {
            if (b.dom.comboBoxWidget != null && !b.design) b.value == true || b.value == "true" ? b.dom.comboBoxWidget.setDisabled(true) : b.dom.comboBoxWidget.setDisabled(false)
        }, "css class": function (b) {
            b.dom.comboBoxWidget != null && b.dom.comboBoxWidget.eB(b.value)
        }, width: function (b) {
            if (b.dom.comboBoxWidget != null) {
                b.dom.style.width = b.value;
                b.dom.comboBoxWidget.H()
            }
        }, onselect: function (b) {
            b.dom.aB = function () {
                eval("var value = arguments[0];");
                eval("var text = arguments[1];");
                eval("var object = arguments[2];");
                try {
                    eval(b.value)
                } catch (a) {
                    pui.qc(a, "Onselect Error:\n" + a.message)
                }
            }
        }, "input type": function (b) {
            try {
                !b.design && b.dom.comboBoxWidget != null && b.dom.comboBoxWidget.getBox().setAttribute("type", b.value)
            } catch (a) {
            }
        }, "browser auto complete": function (b) {
            if (!b.design && b.dom.comboBoxWidget != null) {
                b.dom.comboBoxWidget.getBox().setAttribute("autocomplete", b.value);
                if (Q == "dspf") b.value == "off" ? b.dom.comboBoxWidget.getBox().setAttribute("name", pui.yg()) : b.dom.comboBoxWidget.getBox().removeAttribute("name")
            }
        }
    },
    eh: function (b) {
        switch (b.propertyName) {
            case "color":
            case "font family":
            case "font size":
            case "font style":
            case "font variant":
            case "font weight":
            case "letter spacing":
            case "text align":
            case "text decoration":
            case "text transform":
            case "word spacing":
            case "background color":
                b.dom.comboBoxWidget.sB(b.propertyName, b.value);
                break
        }
    },
    mE: {
        "tab index": function (b) {
            b.dom.removeAttribute("tabindex");
            b.dom.comboBoxWidget.getBox().setAttribute("tabindex", b.value)
        }
    }
});
pui.Sr = function () {
    this.designMode = this.b = null;
    this.kC = this.Ue = false;
    var b, a, c, d, e = "a", f = 1, h = false, g = " ui-icon-shadow";
    if (pui.is_firefox) g = "";
    var l = this;
    this.init = function () {
        function n() {
            if (!h) {
                pui.La(b, "ui-btn-up-" + e);
                pui.ya(b, "ui-btn-down-" + e)
            }
        }

        function o() {
            pui.La(b, "ui-btn-down-" + e);
            pui.ya(b, "ui-btn-up-" + e)
        }

        b = l.Ue || l.kC ? document.createElement("span") : document.createElement("a");
        a = document.createElement("span");
        c = document.createElement("span");
        d = document.createElement("span");
        b.className = "ui-btn ui-shadow ui-btn-corner-all ui-btn-up-" +
            e;
        b.style.marginTop = "0";
        b.style.marginBottom = "0";
        a.className = "ui-btn-inner ui-btn-corner-all";
        c.className = "ui-btn-text";
        d.className = "ui-icon" + g;
        a.appendChild(c);
        a.appendChild(d);
        b.appendChild(a);
        l.b.appendChild(b);
        gc(b, "mouseover", function () {
            if (!h) {
                pui.La(b, "ui-btn-up-" + e);
                pui.ya(b, "ui-btn-hover-" + e)
            }
        });
        gc(b, "mouseout", function () {
            pui.La(b, "ui-btn-hover-" + e);
            pui.ya(b, "ui-btn-up-" + e)
        });
        gc(b, "focus", function () {
            h || pui.ya(b, "ui-focus")
        });
        gc(b, "blur", function () {
            pui.La(b, "ui-focus")
        });
        gc(b, "mousedown", n);
        gc(b, "touchstart", n);
        gc(document, "mouseup", o);
        gc(document, "touchend", o)
    };
    this.setText = function (n) {
        c.innerHTML = n
    };
    this.Vf = function (n) {
        if (n == null || n == "" || pui.f(n)) n = "a";
        n = n.replace(/ - {1}.*/g, "");
        n = n.toLowerCase();
        if (e != n) {
            for (var o = b.className.split(" "), i = 0; i < o.length; i++) {
                var r = o[i];
                if (r.length > 2 && r.substr(r.length - (f + 1), f + 1) == "-" + e) {
                    o = r.substr(0, r.length - f) + n;
                    pui.La(b, r);
                    pui.ya(b, o);
                    break
                }
            }
            e = n;
            f = e.length
        }
    };
    this.kr = function (n) {
        pui.La(b, "ui-btn-icon-left");
        pui.La(b, "ui-btn-icon-right");
        pui.La(b,
            "ui-btn-icon-top");
        pui.La(b, "ui-btn-icon-bottom");
        n != "left" && n != "right" || pui.ya(b, "ui-btn-icon-" + n)
    };
    this.setIcon = function (n, o) {
        if (n && o == "material") {
            d.className = "pui-material-icons";
            d.innerHTML = n
        } else if (n && o == "fontAwesome") {
            d.className = "pui-fa-icons fa-" + n;
            d.innerHTML = ""
        } else if (n && n.indexOf(":") !== -1) {
            var i = [{type: "material", title: "Material Icons", classList: {"": "pui-material-icons"}}, {
                type: "fontAwesome", title: "Font Awesome Icons", classList: {
                    brands: "pui-fa-brands-icons fa-", solid: "pui-fa-solid-icons fa-",
                    regular: "pui-fa-regular-icons fa-"
                }
            }, {type: "jQueryIcons", title: "jQuery Mobile Icons", classList: {"": "ui-icon ui-icon-"}}];
            n = Zb(n);
            if (pui.customIconList && pui.customIconList) if (Array.isArray(pui.customIconList.icons) && pui.customIconList.icons.length) i = pui.customIconList.icons;
            var r = n.split(":"), k = r.shift().split("-"), q = k.pop();
            k = k.join("-");
            var s = r.pop();
            i.every(function (t) {
                var u = t.classList[q];
                if (k === t.type) {
                    d.className = u + s;
                    d.innerHTML = "";
                    return false
                }
                return true
            })
        } else {
            if (n == "left arrow") n = "arrow-l";
            if (n == "right arrow") n = "arrow-r";
            if (n == "up arrow") n = "arrow-u";
            if (n == "down arrow") n = "arrow-d";
            if (n == null) n = "";
            if (n != "") n = " ui-icon-" + n;
            d.className = "ui-icon" + n + g;
            d.innerHTML = ""
        }
    };
    this.$j = function (n) {
        n == true ? pui.ya(b, "ui-mini") : pui.La(b, "ui-mini")
    };
    this.setDisabled = function (n) {
        h = n
    };
    this.Ba = function (n) {
        if (!(n == null || pui.f(n))) {
            b.style.borderTopLeftRadius = "";
            b.style.borderTopRightRadius = "";
            b.style.borderBottomLeftRadius = "";
            b.style.borderBottomRightRadius = "";
            a.style.borderTopLeftRadius = "";
            a.style.borderTopRightRadius =
                "";
            a.style.borderBottomLeftRadius = "";
            a.style.borderBottomRightRadius = "";
            switch (n) {
                case "left":
                    b.style.borderTopLeftRadius = "0";
                    b.style.borderBottomLeftRadius = "0";
                    a.style.borderTopLeftRadius = "0";
                    a.style.borderBottomLeftRadius = "0";
                    break;
                case "right":
                    b.style.borderTopRightRadius = "0";
                    b.style.borderBottomRightRadius = "0";
                    a.style.borderTopRightRadius = "0";
                    a.style.borderBottomRightRadius = "0";
                    break;
                case "top":
                    b.style.borderTopRightRadius = "0";
                    b.style.borderTopLeftRadius = "0";
                    a.style.borderTopRightRadius = "0";
                    a.style.borderTopLeftRadius =
                        "0";
                    break;
                case "bottom":
                    b.style.borderBottomRightRadius = "0";
                    b.style.borderBottomLeftRadius = "0";
                    a.style.borderBottomRightRadius = "0";
                    a.style.borderBottomLeftRadius = "0";
                    break;
                case "all":
                    b.style.borderTopLeftRadius = "0";
                    b.style.borderBottomLeftRadius = "0";
                    b.style.borderTopRightRadius = "0";
                    b.style.borderBottomRightRadius = "0";
                    a.style.borderTopLeftRadius = "0";
                    a.style.borderBottomLeftRadius = "0";
                    a.style.borderTopRightRadius = "0";
                    a.style.borderBottomRightRadius = "0";
                    break;
                default:
                    break
            }
        }
    };
    this.setHeight = function (n) {
        if (typeof n ==
            "number") n += "px";
        b.style.height = n
    };
    this.setStyle = function (n, o) {
        if (pui.f(o)) o = "";
        var i = n.split(" ");
        if (i.length == 2) n = i[0] + i[1].substr(0, 1).toUpperCase() + i[1].substr(1);
        if (n == "cursor") {
            d.style[n] = o;
            b.style[n] = o;
            a.style[n] = o
        }
        if (n == "textAlign") b.style[n] = o; else c.style[n] = o
    };
    this.LJ = function (n) {
        if (!l.designMode) b.href = n
    };
    this.ZJ = function (n) {
        if (!l.designMode) b.target = n
    };
    this.mB = function (n) {
        if (l.b != null) {
            if (n != null) l.b.style.height = n;
            if (l.b.style.height != null && l.b.style.height != "" && c.innerHTML.toLowerCase().indexOf("<br") <
                0) {
                n = b.offsetHeight - 26;
                if (n < 0) n = 0;
                c.style.lineHeight = n + "px"
            } else c.style.lineHeight = null
        }
    };
    this.Ep = this.hg = function () {
        return b
    };
    this.ah = function () {
        return a
    };
    this.Wm = function () {
        return c
    };
    this.Dh = function (n) {
        for (var o = ["color", "font family", "font size", "font style", "font variant", "font weight", "letter spacing", "text align", "text decoration", "text transform", "word spacing"], i = 0; i < o.length; i++) {
            var r = o[i], k = n[r];
            k != null && l.setStyle(r, k)
        }
    }
};
pui.widgets.ed = function (b) {
    var a = {};
    for (var c in b) a[c] = b[c];
    if (a.value == null) a.value = "Click Here";
    if (a.width == null) a.width = "160px";
    if (a.height == null) a.height = "42px";
    if (a.theme == null) a.theme = "c - Gray";
    b = document.createElement("div");
    b.style.width = a.width;
    b.style.height = a.height;
    c = new pui.Sr;
    c.b = b;
    c.designMode = true;
    c.Ue = true;
    c.init();
    c.setText(a.value);
    c.Vf(a.theme);
    c.setIcon(a.icon);
    c.kr(a["icon position"]);
    c.$j(a["small button"] == "true");
    c.Ba(a["straight edge"]);
    return b
};
pui.widgets.add({
    name: "css button",
    newValue: "Click Here",
    rf: true,
    defaults: {width: "160px", theme: "c - Gray"},
    eh: function (b) {
        switch (b.propertyName) {
            case "color":
            case "font family":
            case "font size":
            case "font style":
            case "font variant":
            case "font weight":
            case "letter spacing":
            case "text align":
            case "text decoration":
            case "text transform":
            case "word spacing":
                b.dom.button.setStyle(b.propertyName, b.value);
                break;
            default:
                break
        }
    },
    propertySetters: {
        "field type": function (b) {
            var a = new pui.Sr;
            a.b = b.dom;
            a.designMode =
                b.design;
            b.dom.innerHTML = "";
            if (!b.design && b.properties["hyperlink reference"] == null && b.properties.target == null) a.kC = true;
            a.init();
            b.dom.button = a;
            a.setText(b.evalProperty("value"));
            a.Vf(b.evalProperty("theme"));
            a.setIcon(b.evalProperty("icon"));
            a.kr(b.evalProperty("icon position"));
            a.$j(b.evalProperty("small button") == "true");
            a.Ba(b.evalProperty("straight edge"));
            a.setHeight("100%")
        }, theme: function (b) {
            b.dom.button.Vf(b.value)
        }, value: function (b) {
            b.dom.button.setText(b.value)
        }, "icon position": function (b) {
            b.dom.button.kr(b.value)
        },
        icon: function (b) {
            if (b.value) b.value = Zb(b.value);
            if (b.value.substr(0, 9) == "material:") {
                var a = Zb(b.value.substr(9));
                b.dom.button.setIcon(a, "material")
            } else if (b.value.substr(0, 12) == "fontAwesome:") {
                a = Zb(b.value.substr(12));
                b.dom.button.setIcon(a, "fontAwesome")
            } else b.dom.button.setIcon(b.value)
        }, "small button": function (b) {
            b.dom.button.$j(b.value == "true" || b.value == true)
        }, disabled: function (b) {
            b.dom.button.setDisabled(b.value == "true" || b.value == true)
        }, "straight edge": function (b) {
            b.dom.button.Ba(b.value)
        },
        "hyperlink reference": function (b) {
            var a = b.value;
            if (b.designMode) a = null;
            b.dom.button.LJ(a)
        }, target: function (b) {
            b.dom.button.ZJ(b.value)
        }, height: function (b) {
            b.dom.button.mB(b.value)
        }, visibility: function (b) {
            if (!b.design) b.dom.firstChild.style.display = b.value == "hidden" ? "none" : ""
        }, cursor: function (b) {
            b.dom.button.setStyle("cursor", b.value)
        }
    }
});
pui.Ur = function () {
    this.b = null;
    this.type = "body";
    this.hi = false;
    var b, a, c, d, e = "c", f = 1, h = this;
    this.init = function () {
        b = document.createElement("span");
        a = document.createElement("span");
        if (h.type == "header") c = document.createElement("span");
        b.className = "ui-btn ui-shadow ui-btn-corner-all ui-btn-up-" + e + " no-shadow";
        b.style.marginTop = "0";
        b.style.marginBottom = "0";
        b.style.cursor = "default";
        a.className = "ui-btn-inner ui-btn-corner-all";
        if (h.type == "header") {
            c.className = "ui-btn-text";
            a.appendChild(c)
        }
        if (h.hi && h.type ==
            "body") {
            d = document.createElement("div");
            d.setAttribute("container", "true");
            d.style.position = "absolute";
            d.style.width = "100%";
            d.style.height = "100%";
            d.style.overflow = "hidden";
            b.appendChild(d)
        }
        b.appendChild(a);
        h.b.appendChild(b)
    };
    this.setText = function (g) {
        if (h.type == "header") {
            if (g == null || pui.f(g) || pui.Ia(g)) g = "";
            c.innerHTML = g
        }
    };
    this.Vf = function (g) {
        if (g == null || g == "" || pui.f(g)) g = "c";
        g = g.replace(/ - {1}.*/g, "");
        g = g.toLowerCase();
        if (e != g) {
            for (var l = b.className.split(" "), n = 0; n < l.length; n++) {
                var o = l[n];
                if (o.length >
                    2 && o.substr(o.length - (f + 1), f + 1) == "-" + e) {
                    l = o.substr(0, o.length - f) + g;
                    pui.La(b, o);
                    pui.ya(b, l);
                    break
                }
            }
            e = g;
            f = e.length
        }
    };
    this.Ba = function (g) {
        if (!(g == null || pui.f(g))) {
            b.style.borderTopLeftRadius = "";
            b.style.borderTopRightRadius = "";
            b.style.borderBottomLeftRadius = "";
            b.style.borderBottomRightRadius = "";
            a.style.borderTopLeftRadius = "";
            a.style.borderTopRightRadius = "";
            a.style.borderBottomLeftRadius = "";
            a.style.borderBottomRightRadius = "";
            switch (g) {
                case "left":
                    b.style.borderTopLeftRadius = "0";
                    b.style.borderBottomLeftRadius =
                        "0";
                    a.style.borderTopLeftRadius = "0";
                    a.style.borderBottomLeftRadius = "0";
                    break;
                case "right":
                    b.style.borderTopRightRadius = "0";
                    b.style.borderBottomRightRadius = "0";
                    a.style.borderTopRightRadius = "0";
                    a.style.borderBottomRightRadius = "0";
                    break;
                case "top":
                    b.style.borderTopRightRadius = "0";
                    b.style.borderTopLeftRadius = "0";
                    a.style.borderTopRightRadius = "0";
                    a.style.borderTopLeftRadius = "0";
                    break;
                case "bottom":
                    b.style.borderBottomRightRadius = "0";
                    b.style.borderBottomLeftRadius = "0";
                    a.style.borderBottomRightRadius = "0";
                    a.style.borderBottomLeftRadius = "0";
                    break;
                case "all":
                    b.style.borderTopLeftRadius = "0";
                    b.style.borderBottomLeftRadius = "0";
                    b.style.borderTopRightRadius = "0";
                    b.style.borderBottomRightRadius = "0";
                    a.style.borderTopLeftRadius = "0";
                    a.style.borderBottomLeftRadius = "0";
                    a.style.borderTopRightRadius = "0";
                    a.style.borderBottomRightRadius = "0";
                    break;
                default:
                    break
            }
        }
    };
    this.setHeight = function (g) {
        if (typeof g == "number") g += "px";
        b.style.height = g
    };
    this.setStyle = function (g, l) {
        if (h.type == "header") {
            if (pui.f(l)) l = "";
            var n = g.split(" ");
            if (n.length == 2) g = n[0] + n[1].substr(0, 1).toUpperCase() + n[1].substr(1);
            if (g == "textAlign") b.style[g] = l; else c.style[g] = l
        }
    };
    this.Dh = function (g) {
        for (var l = ["color", "font family", "font size", "font style", "font variant", "font weight", "letter spacing", "text align", "text decoration", "text transform", "word spacing"], n = 0; n < l.length; n++) {
            var o = l[n], i = g[o];
            i != null && h.setStyle(o, i)
        }
    };
    this.mB = function (g) {
        if (h.type == "header") if (h.b != null) {
            if (g != null) h.b.style.height = g;
            if (h.b.style.height != null && h.b.style.height !=
                "") {
                g = link.offsetHeight - 26;
                if (g < 0) g = 0;
                c.style.lineHeight = g + "px"
            } else c.style.lineHeight = null
        }
    };
    this.hg = function () {
        return b
    };
    this.ah = function () {
        return b
    };
    this.Wm = function () {
        return c
    }
};
pui.Tr = function () {
    this.b = null;
    this.hi = false;
    var b, a, c, d, e = true, f = 40, h = "none", g = this;
    this.init = function () {
        b = document.createElement("div");
        a = document.createElement("div");
        b.style.position = "absolute";
        b.style.left = "0px";
        b.style.top = "0px";
        b.style.width = "100%";
        a.style.position = "absolute";
        a.style.left = "0px";
        a.style.width = "100%";
        c = new pui.Ur;
        c.type = "header";
        c.hi = g.hi;
        c.b = b;
        c.init();
        c.Vf("b");
        c.setHeight("100%");
        d = new pui.Ur;
        d.type = "body";
        d.hi = g.hi;
        d.b = a;
        d.init();
        d.setHeight("100%");
        g.Ba("none");
        g.b.appendChild(b);
        g.b.appendChild(a);
        g.resize();
        var l = g.b.parentNode;
        l != null && l.ze == true && g.Lz();
        l == null && setTimeout(function () {
            var n = g.b.parentNode;
            n != null && n.ze == true && g.Lz()
        }, 0)
    };
    this.Lz = function () {
        var l = g.b.parentNode;
        pui.rd({wc: b, move: l, ex: "click"});
        gc(b, "touchstart", function (n) {
            if (n.touches.length == 1) {
                n = n.touches[0];
                l.R = {};
                l.R.startX = n.pageX;
                l.R.startY = n.pageY;
                l.R.Jc = parseInt(l.style.left);
                l.R.Rb = parseInt(l.style.top)
            }
        });
        gc(b, "touchmove", function (n) {
            if (n.touches.length == 1) {
                var o = n.touches[0], i = o.pageY;
                l.style.left =
                    l.R.Jc - l.R.startX + o.pageX + "px";
                l.style.top = l.R.Rb - l.R.startY + i + "px";
                n.preventDefault()
            }
        });
        b.style.cursor = "move";
        if (b.firstChild != null) b.firstChild.style.cursor = "move"
    };
    this.ho = function (l) {
        b.style.display = l ? "" : "none";
        e = l;
        g.Ba(h);
        g.resize()
    };
    this.jo = function (l) {
        l = parseInt(l);
        if (isNaN(l) || l <= 0) l = 40;
        f = l;
        g.resize()
    };
    this.Ba = function (l) {
        if (!(l == null || pui.f(l))) {
            h = l;
            if (e) switch (l) {
                case "left":
                    c.Ba("left");
                    c.hg().style.borderBottomRightRadius = "0";
                    c.ah().style.borderBottomRightRadius = "0";
                    d.Ba("left");
                    d.hg().style.borderTopRightRadius =
                        "0";
                    d.ah().style.borderTopRightRadius = "0";
                    break;
                case "right":
                    c.Ba("right");
                    c.hg().style.borderBottomLeftRadius = "0";
                    c.ah().style.borderBottomLeftRadius = "0";
                    d.Ba("right");
                    d.hg().style.borderTopLeftRadius = "0";
                    d.ah().style.borderTopLeftRadius = "0";
                    break;
                case "top":
                    c.Ba("all");
                    d.Ba("top");
                    break;
                case "bottom":
                    c.Ba("bottom");
                    d.Ba("all");
                    break;
                case "all":
                    c.Ba("all");
                    d.Ba("all");
                    break;
                default:
                    c.Ba("bottom");
                    d.Ba("top");
                    break
            } else d.Ba(l)
        }
    };
    this.setText = function (l) {
        c.setText(l)
    };
    this.Wm = function () {
        return c.Wm()
    };
    this.setStyle = function (l, n) {
        c.setStyle(l, n)
    };
    this.Dh = function (l) {
        c.Dh(l)
    };
    this.Pi = function (l) {
        c.Vf(l)
    };
    this.Ni = function (l) {
        d.Vf(l)
    };
    this.resize = function (l) {
        var n;
        if (typeof l == "string") if (l.length < 3 || l.substr(l.length - 2, 2) != "px") l = null;
        n = l != null && !isNaN(parseInt(l)) ? parseInt(l) : g.b.offsetHeight;
        l = f;
        e || (l = -1);
        n = n - l - 5;
        if (n < 0) n = 0;
        if (e) b.style.height = l + "px";
        a.style.top = l + 1 + "px";
        a.style.height = n + "px"
    };
    this.setHeight = function (l) {
        g.b.style.height = l;
        g.resize(l)
    };
    this.qG = function () {
        return c.hg()
    };
    this.pG = function () {
        return f
    }
};
pui.widgets.Mm = function (b) {
    var a = {};
    for (var c in b) a[c] = b[c];
    if (a.value == null) a.value = "Panel Title";
    if (a.width == null) a.width = "200px";
    if (a.height == null) a.height = "300px";
    if (a["header theme"] == null) a["header theme"] = "B - Blue";
    if (a["body theme"] == null) a["body theme"] = "C - Gray";
    b = document.createElement("div");
    b.style.width = a.width;
    b.style.height = a.height;
    b.style.position = "relative";
    c = new pui.Tr;
    c.b = b;
    c.init();
    c.setText(a.value);
    c.Pi(a["header theme"]);
    c.Ni(a["body theme"]);
    c.Ba(a["straight edge"]);
    c.ho(a["has header"] !==
        "false" && a["has header"] !== false);
    c.jo(a["header height"]);
    c.setHeight(a.height);
    return b
};
pui.widgets.add({
    name: "css panel",
    menuName: "CSS Panel",
    newId: "Panel",
    newValue: "Panel Title",
    rf: true,
    defaults: {width: "200px", height: "300px", "z index": "8"},
    eh: function (b) {
        switch (b.propertyName) {
            case "color":
            case "font family":
            case "font size":
            case "font style":
            case "font variant":
            case "font weight":
            case "letter spacing":
            case "text align":
            case "text decoration":
            case "text transform":
            case "word spacing":
                b.dom.panel.setStyle(b.propertyName, b.value);
                break;
            default:
                break
        }
    },
    propertySetters: {
        "field type": function (b) {
            b.dom.sizeMe =
                function () {
                    b.dom.panel.resize()
                };
            var a = new pui.Tr;
            a.b = b.dom;
            b.dom.innerHTML = "";
            a.init();
            b.dom.panel = a;
            var c = b.evalProperty("height");
            c != null && a.setHeight(c);
            a.setText(b.evalProperty("value"));
            a.Pi(b.evalProperty("header theme"));
            a.Ni(b.evalProperty("body theme"));
            a.Ba(b.evalProperty("straight edge"));
            c = b.evalProperty("has header");
            c = c !== "false" && c !== false;
            a.ho(c);
            a.jo(b.evalProperty("header height"))
        }, "header theme": function (b) {
            b.dom.panel.Pi(b.value)
        }, "body theme": function (b) {
            b.dom.panel.Ni(b.value)
        },
        value: function (b) {
            b.dom.panel.setText(b.value)
        }, "straight edge": function (b) {
            b.dom.panel.Ba(b.value)
        }, "has header": function (b) {
            b.dom.panel.ho(b.value !== "false" && b.value !== false)
        }, "header height": function (b) {
            b.dom.panel.jo(b.value)
        }, height: function (b) {
            b.dom.panel.setHeight(b.value)
        }
    }
});
var cd = null, dd = [], ed = 0;
pui.currentDateField = null;

function fd(b, a, c) {
    var d, e, f, h = 0;
    if (pui.locale && pui.locales[pui.locale]) f = pui.locale; else {
        if (Q == "dspf" && b.sa) f = b.sa.locale; else if (Q == "genie") f = pui.J.config.locale;
        if (f == "") f = null
    }
    if (f) {
        d = pui.locales[f].monthNames;
        dayNames = pui.locales[f].shortDayNames;
        e = [];
        if (pui.locales[f].weekStart) h = pui.locales[f].weekStart;
        for (f = 0; f < dayNames.length; f++) e.push(dayNames[f])
    } else {
        d = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        e = ["Su", "Mo", "Tu", "We",
            "Th", "Fr", "Sa"]
    }
    pui.currentDateField = b;
    a = a == null || a == "" ? new Date : gd(a);
    if (a == null) a = new Date;
    f = a.getMonth();
    var g = new Date(a);
    for (g.setMonth(f - 1); g.getMonth() == f;) g.setDate(g.getDate() - 1);
    var l = new Date(a);
    l.setMonth(f + 1);
    f = f + 1;
    if (f == 12) f = 0;
    for (; l.getMonth() != f;) l.setDate(l.getDate() - 1);
    var n = new Date(a);
    n.setFullYear(a.getFullYear() - 1);
    var o = new Date(a);
    o.setFullYear(a.getFullYear() + 1);
    f = new Date(a);
    f.setDate(1);
    f.setDate(1 - (7 + f.getDay() - h) % 7);
    (new Date(l)).setDate(0);
    var i = new Date;
    d = new String('<table cellspacing="0" border="0" width="100%">\n<tr><td class="brndrow1">\n<table cellspacing="0" cellpadding="4" border="0" width="100%">\n<tr>\n  <td class="brndrow1"><span arrow="1" style="cursor:pointer" onclick="show_calendar(pui.currentDateField, \'' +
        ld(n) + "'+document.cal.time.value, '" + c + '\');"><img arrow="1" src="' + pui.normalizeURL("/profoundui/proddata/images/prev_year.png") + '" width="16" height="16" border="0" alt="previous month"></span><span arrow="1" style="cursor:pointer" onclick="show_calendar(pui.currentDateField, \'' + ld(g) + "'+document.cal.time.value, '" + c + '\');"><img arrow="1" src="' + pui.normalizeURL("/profoundui/proddata/images/prev_month.png") + '" width="16" height="16" border="0" alt="previous month"></span></td>\n  <td class="calendar" align="center" class="brndrow1" colspan="5"><font color="white" face="tahoma, verdana"><b>' +
        d[a.getMonth()] + " " + a.getFullYear() + '</b></font></td>\n  <td class="brndrow1" align="right"><span arrow="1" style="cursor:pointer" onclick="show_calendar(pui.currentDateField, \'' + ld(l) + "'+document.cal.time.value, '" + c + '\');"><img arrow="1" src="' + pui.normalizeURL("/profoundui/proddata/images/next_month.png") + '" width="16" height="16" border="0" alt="next month"></span><span arrow="1" style="cursor:pointer" onclick="show_calendar(pui.currentDateField, \'' + ld(o) + "'+document.cal.time.value, '" + c + '\');"><img arrow="1" src="' +
        pui.normalizeURL("/profoundui/proddata/images/next_year.png") + '" width="16" height="16" border="0" alt="next month"></span></td>\n</tr>\n');
    g = new Date(f);
    d += "<tr>\n";
    for (l = 0; l < 7; l++) d += '  <td class="calendar brndrow2" align="center"><font color="white" face="verdana, tahoma">' + e[(h + l) % 7] + "</font></td>\n";
    for (d += "</tr>\n"; g.getMonth() == a.getMonth() || g.getMonth() == f.getMonth();) {
        d += "<tr>\n";
        for (e = 0; e < 7; e++) {
            d += g.getDate() == a.getDate() && g.getMonth() == a.getMonth() ? '  <td class="calendar" onmouseover="this.style.backgroundColor=\'yellow\'" onmouseout="this.style.backgroundColor=\'#FFB6C1\'" bgcolor="#FFB6C1" align="right"' :
                g.getDay() == 0 || g.getDay() == 6 ? '  <td class="calendar" onmouseover="this.style.backgroundColor=\'yellow\'" onmouseout="this.style.backgroundColor=\'#eeeeee\'" bgcolor="#eeeeee" align="right"' : '  <td class="calendar" onmouseover="this.style.backgroundColor=\'yellow\'" onmouseout="this.style.backgroundColor=\'white\'" bgcolor="white" align="right"';
            if (g.getDate() == i.getDate() && g.getMonth() == i.getMonth() && g.getYear() == i.getYear()) d += '  style="border: 2px solid #CCCCFF;"';
            d += g.getMonth() == a.getMonth() ?
                " onclick=\"javascript:pui.currentDateField.value='" + md(g, c, b.sa) + '\'; calendar_select();"><font color="black" face="verdana, tahoma">' : " onclick=\"javascript:pui.currentDateField.value='" + md(g, c, b.sa) + '\'; calendar_select();"><font color="gray" face="verdana, tahoma">';
            d += g.getDate() + "</font></td>\n";
            g.setDate(g.getDate() + 1)
        }
        d += "</tr>\n"
    }
    d += '</table>\n</tr>\n</td>\n</table>\n<form name="cal"><input type="hidden" name="time" value="' + new String(a.getHours() + ":" + a.getMinutes() + ":" + a.getSeconds()) +
        '">\n</form>\n';
    cd = document.getElementById("popcal");
    cd.className = "pui-calendar";
    c = Zb(b.className.split(" ")[0]);
    if (c != "") cd.className += " pui-calendar-" + c;
    e = b.calimg;
    cd.style.width = "180px";
    cd.innerHTML = d;
    c = nd(e) + 6;
    e = od(e) + 1 + e.firstChild.height;
    if (parseInt(b.style.top) > 250) {
        e -= 150;
        c += 11
    }
    b = pui.getWindowSize().width - 230;
    if (b < 0) b = 0;
    if (c > b) c = b;
    cd.style.left = c + "px";
    cd.style.top = e + "px";
    setTimeout(function () {
        cd.style.visibility = "visible"
    }, 0)
}

function gd(b) {
    b = /^(\d+)\-(\d+)\-(\d+)\s+(\d+)\:(\d+)\:(\d+)$/.exec(b);
    if (!b) return new Date;
    return new Date(b[3], b[2] - 1, b[1], b[4], b[5], b[6])
}

function ld(b) {
    return new String(b.getDate() + "-" + (b.getMonth() + 1) + "-" + b.getFullYear() + " ")
}

function md(b, a, c) {
    var d = null;
    if (c != null) {
        var e;
        e = pui.locale && pui.locales[pui.locale] ? pui.locale : c.locale;
        d = c.dateFormat;
        if (d == null) d = c.customPattern;
        if ((d == "" || d == null) && pui["default date pattern"]) d = pui["default date pattern"]
    }
    if (d != null) return b.format(d, e);
    if (c != null && c.dataLength == "8" && c.decPos == "0" && (a == "MM/DD/YY" || a == "DD/MM/YY")) a += "YY";
    if (c != null && c.dataLength == "6" && c.decPos == "0" && (a == "MM/DD/YYYY" || a == "DD/MM/YYYY")) a = a.substr(0, 6);
    var f;
    c = new String(b.getMonth() + 1);
    e = new String(b.getDate());
    d = new String(b.getFullYear());
    b = c;
    if (c.length == 1) b = "0" + c;
    c = e;
    if (e.length == 1) c = "0" + e;
    if (d.length == 4) {
        f = d;
        e = d = d.substring(2, 4)
    } else {
        e = d;
        f = d = d.substring(d.length - 2, d.length)
    }
    a = a;
    a = a.replace("YYYY", f);
    a = a.replace("YY", e);
    a = a.replace("MM", b);
    return a = a.replace("DD", c)
}

function nd(b) {
    var a = 0;
    if (b.offsetParent) for (; ;) {
        a += b.offsetLeft - b.scrollLeft;
        if (!b.offsetParent) break;
        b = b.offsetParent
    } else if (b.x) a += b.x;
    return a
}

function od(b) {
    var a = 0;
    if (b.offsetParent) for (; ;) {
        a += b.offsetTop - b.scrollTop;
        if (!b.offsetParent) break;
        b = b.offsetParent
    } else if (b.y) a += b.y;
    return a
}

function ad() {
    if (cd != null) {
        document.getElementById("popcal").style.visibility = "hidden";
        cd = null
    }
}

function pd(b, a) {
    if (a == null || a == "") a = Q == "genie" ? pui.J.config.defaultDateFormat : pui.defaultDateFormat;
    if (a == null || a == "") a = "MM/DD/YY";
    var c = '<img src="' + pui.normalizeURL("/profoundui/proddata/images/cal.gif") + '" width="16px" height="16px" border="0" alt="">',
        d = document.createElement("div");
    d.style.position = "absolute";
    d.style.width = "16px";
    d.innerHTML = c;
    if (b["cal icon class"]) d.firstChild.className = b["cal icon class"];
    d.style.left = parseInt(b.style.left) + b.offsetWidth + 5 + "px";
    c = parseInt(b.style.top);
    c +=
        parseInt((b.offsetHeight - 22) / 2);
    d.style.top = c + "px";
    d.style.visibility = b.style.visibility;
    if (b.pui == null || b.pui.properties == null || b.pui.properties.visibility == null || b.pui.properties.visibility == "") if (Q == "genie" && b.S != null && b.S.attr != null) {
        c = b.S.attr;
        if (c == "27" || c == "2F" || c == "37" || c == "3F") d.style.visibility = "hidden"
    }
    d.style.display = "none";
    d.style.cursor = "pointer";
    if (b.style.zIndex != null) d.style.zIndex = b.style.zIndex;
    d.onclick = function (e) {
        var f = fd, h;
        a:{
            h = b.value;
            var g = a, l = b.sa, n;
            if (!(n = h == null)) {
                if (!(n =
                    h == "")) b:{
                    n = h;
                    for (var o = 0; o < n.length; o++) {
                        var i = n.substr(o, 1);
                        if (i >= "1" && i <= "9") {
                            n = false;
                            break b
                        }
                    }
                    n = true
                }
                n = n
            }
            if (n) h = ""; else {
                n = h.substr(0, 1);
                o = h.substr(1, 1);
                if (n >= "1" && n <= "9" && o == "/") h = "0" + h;
                if (n = l != null) {
                    if (n = l.edtWrd != null) {
                        if (n = l.edtWrd != "") b:{
                            n = h;
                            for (o = 0; o < n.length; o++) {
                                i = n.substr(o, 1);
                                if (i < "0" || i > "9") {
                                    n = false;
                                    break b
                                }
                            }
                            n = true
                        }
                        n = n
                    }
                    n = n
                }
                if (n) if (l.edtWrd == "'  /  /  '" && h.length == 6 || l.edtWrd == "'  /  /    '" && h.length == 8) h = h.substr(0, 2) + "/" + h.substr(2, 2) + "/" + h.substr(4);
                if (l != null && l.dataLength == "8" &&
                    l.decPos == "0" && (g == "MM/DD/YY" || g == "DD/MM/YY")) g += "YY";
                if (l != null && l.dataLength == "6" && l.decPos == "0" && (g == "MM/DD/YYYY" || g == "DD/MM/YYYY")) g = g.substr(0, 6);
                n = null;
                if (l != null) {
                    n = l.dateFormat;
                    if (n == null) n = l.customPattern;
                    if ((n == "" || n == null) && pui["default date pattern"]) n = pui["default date pattern"];
                    if (n != null) {
                        locale = pui.locale && pui.locales[pui.locale] ? pui.locale : l.locale;
                        if (l = pui.formatting.Date.parse(h, n, locale)) {
                            h = l.format("d-m-Y 00:00:00", locale);
                            break a
                        }
                    }
                }
                l = "";
                n = g.indexOf("MM");
                if (n >= 0) l = h.substr(n,
                    2);
                if (l.substr(0, 1) == " ") l = "0" + l.substr(1, 1);
                n = "";
                o = g.indexOf("DD");
                if (o >= 0) n = h.substr(o, 2);
                if (n.substr(0, 1) == " ") n = "0" + n.substr(1, 1);
                o = o = "";
                i = g.indexOf("YY");
                g = g.indexOf("YYYY");
                if (g >= 0) o = h.substr(g, 4); else if (i >= 0) {
                    o = h.substr(i, 2);
                    h = 2E3;
                    if (Number(o) > 39) h = 1900;
                    o = Number(o) + h
                }
                h = n + "-" + l + "-" + o + " 00:00:00"
            }
        }
        f(b, h, a);
        if (!e) e = window.event;
        if (e) {
            e.cancelBubble = true;
            e.returnValue = false;
            e.preventDefault && e.preventDefault();
            e.stopPropagation && e.stopPropagation()
        }
        return false
    };
    if (b.Yc != null && b.Jb != null) {
        d.Yc =
            b.Yc;
        d.Jb = b.Jb
    }
    b.calimg = d;
    dd[ed++] = b;
    if (b.parentNode == null) b.calimg.bA = true; else {
        b.parentNode.appendChild(d);
        pui.rn(b);
        b.calimg.bA = false;
        if (document.getElementById("popcal") == null) {
            gc(document, "click", function (e) {
                for (e = vb(e); e != null;) {
                    if (e.id == "popcal" || e.getAttribute != null && e.getAttribute("arrow") == "1") return;
                    e = e.parentNode
                }
                ad()
            });
            d = document.createElement("div");
            d.style.position = "absolute";
            d.style.width = "180px";
            d.style.zIndex = 100;
            d.style.visibility = "hidden";
            d.id = "popcal";
            document.body.appendChild(d)
        }
    }
}

pui.rn = function (b) {
    var a = b.calimg;
    if (a != null) {
        a.style.display = "none";
        a.style.left = b.offsetLeft + b.offsetWidth + 5 + "px";
        var c = b.offsetTop;
        c += parseInt((b.offsetHeight - 22) / 2);
        a.style.top = c + "px";
        a.style.display = "block"
    }
};
pui.cM = function () {
    for (var b = 0; b < ed; b++) pui.rn(dd[b])
};
pui.fv = function (b) {
    var a = b.calimg;
    if (a) {
        a.parentNode.removeChild(a);
        b.calimg = null
    }
};
pui.widgets.add({
    name: "date field",
    tag: "input",
    newId: "Date",
    Bq: pui.normalizeURL("/profoundui/proddata/images/cal.gif"),
    gz: "input pui-cal pui-cal-input",
    defaults: {"css class": "input"},
    propertySetters: {
        "field type": function (b) {
            b.dom.value = b.evalProperty("value");
            if (!b.design) {
                if (b.dom.tagName == "INPUT" && !b.dom.readOnly && !b.dom.disabled) {
                    var a;
                    if (b.properties["date format"]) a = b.properties["date format"]; else {
                        if (Q == "genie") a = pui.J.config.defaultDateFormat;
                        a || (a = pui.defaultDateFormat ? pui.defaultDateFormat :
                            "MM/DD/YY")
                    }
                    setTimeout(function () {
                        if (b.dom.calimg == null) pd(b.dom, a); else if (Q == "genie") {
                            pui.fv(b.dom);
                            pd(b.dom, a)
                        }
                    }, 1);
                    if (b.dom.getAttribute("autocomplete") == null && (Q != "genie" || !pui.J.config.zk)) {
                        b.dom.setAttribute("autocomplete", "off");
                        Q == "dspf" && b.dom.setAttribute("name", pui.yg())
                    }
                }
                if (pui.pb && !pui.oi) {
                    gc(b.dom, "focus", function () {
                        Tb("ipadKeyboard").style.display = ""
                    });
                    gc(b.dom, "blur", function () {
                        Tb("ipadKeyboard").style.display = "none"
                    })
                }
                b.dom.sizeMe = function () {
                    pui.rn(b.dom)
                };
                b.dom.Hi = function () {
                    pui.rn(b.dom)
                }
            }
            if (b.design) {
                b.dom.readOnly =
                    true;
                b.dom.sizeMe = function () {
                    var c = b.c;
                    c.Pc();
                    c.Ib()
                };
                b.dom.Hi = function () {
                    var c = b.c;
                    c.Pc();
                    c.Ib()
                }
            }
        }, value: function (b) {
            b.dom.value = b.value
        }, "input type": function (b) {
            try {
                b.design || b.dom.setAttribute("type", b.value)
            } catch (a) {
            }
        }, visibility: function (b) {
            if (b.dom.calimg) b.dom.calimg.style.visibility = b.value == "hidden" ? "hidden" : ""
        }, disabled: function (b) {
            if (b.dom.calimg) b.dom.calimg.style.visibility = b.value == "true" ? "hidden" : ""
        }, "css class": function (b) {
            var a = b.value.split(" ").shift();
            a = "pui-cal pui-cal-" + a;
            if (b.design) {
                b.c.fb.className = a;
                b.dom["icon1 class"] = a
            } else if (b.dom.calimg) b.dom.calimg.firstChild.className = a; else b.dom["cal icon class"] = a
        }, "browser auto complete": function (b) {
            if (!b.design) {
                b.dom.setAttribute("autocomplete", b.value);
                if (Q == "dspf") b.value == "off" ? b.dom.setAttribute("name", pui.yg()) : b.dom.removeAttribute("name")
            }
        }
    }
});
pui.widgets.add({
    name: "field set panel",
    oe: false,
    tag: "fieldset",
    newId: "FieldSet",
    newValue: "Field Set",
    b: true,
    rf: true,
    defaults: {width: "300px", height: "200px", "z index": "8"},
    propertySetters: {
        "field type": function (b) {
            var a = b.evalProperty("value"), c = b.evalProperty("color"), d = b.evalProperty("text align");
            if (a) {
                if (c) c = ' style="color:' + c + ';"';
                if (d) d = ' align="' + d + '"';
                b.dom.innerHTML = "<legend" + c + d + ">" + a + "</legend>"
            }
        }, value: function (b) {
            var a = b.value, c = b.evalProperty("color"), d = b.evalProperty("text align");
            if (a) {
                if (c) c =
                    ' style="color:' + c + ';"';
                if (d) d = ' align="' + d + '"';
                b.dom.innerHTML = "<legend" + c + d + ">" + a + "</legend>"
            } else b.dom.innerHTML = ""
        }, color: function (b) {
            var a = b.evalProperty("value"), c = b.value, d = b.evalProperty("text align");
            if (a) {
                if (c) c = ' style="color:' + c + ';"';
                if (d) d = ' align="' + d + '"';
                b.dom.innerHTML = "<legend" + c + d + ">" + a + "</legend>"
            } else b.dom.innerHTML = ""
        }, "text align": function (b) {
            var a = b.evalProperty("value"), c = b.evalProperty("color"), d = b.value;
            if (a) {
                if (c) c = ' style="color:' + c + ';"';
                if (d) d = ' align="' + d + '"';
                b.dom.innerHTML =
                    "<legend" + c + d + ">" + a + "</legend>"
            } else b.dom.innerHTML = ""
        }
    }
});
pui.fileupload = {};
pui.fileupload.Xr = function (b) {
    function a(J) {
        J = J || window.event;
        if (s != null) {
            J.cancelBubble = true;
            J.returnValue = false;
            J.preventDefault && J.preventDefault();
            J.stopPropagation && J.stopPropagation();
            return false
        }
    }

    function c(J) {
        J = J || window.event;
        var K = J.target || J.srcElement;
        if (s == null) {
            K = K.Xu;
            i[K].parentNode.removeChild(i[K]);
            i.splice(K, 1);
            f.render()
        }
        J.cancelBubble = true;
        J.returnValue = false;
        J.preventDefault && J.preventDefault();
        J.stopPropagation && J.stopPropagation();
        return false
    }

    function d(J) {
        J = J || window.event;
        f.clear();
        J.cancelBubble = true;
        J.returnValue = false;
        J.preventDefault && J.preventDefault();
        J.stopPropagation && J.stopPropagation();
        return false
    }

    function e(J) {
        J = J || window.event;
        if (s == null && !Ub() && !pui.J.ue) {
            if (f.getCount() == 0) {
                pui.alert(pui.getLanguageText("runtimeMsg", "upload no files"));
                return
            } else {
                var K = f.Zv();
                K || (K = f.aw());
                if (K) {
                    pui.alert(K);
                    return
                }
            }
            f.upload()
        }
        if (J) {
            J.cancelBubble = true;
            J.returnValue = false;
            J.preventDefault && J.preventDefault();
            J.stopPropagation && J.stopPropagation();
            return false
        }
    }

    var f =
            this, h = cc("PUI0009109.PGM"), g, l, n, o, i = [], r, k, q = 1, s, t = "", u = false, w = 0, v = 1, E = 10,
        y = "", F = "", D = false, B = false, I = [], z, H = [];
    l = ec("iframe", "frame_" + b.id);
    l.src = pui.normalizeURL("/profoundui/proddata/html/blank.html");
    l.className = "upload-frame";
    l.style.display = "none";
    b.appendChild(l);
    (function () {
        g = document.createElement("form");
        g.enctype = "multipart/form-data";
        g.encoding = "multipart/form-data";
        g.method = "post";
        g.target = "frame_" + b.id;
        g.className = "upload-form";
        var J = ec("input", "flimit");
        J.type = "hidden";
        g.appendChild(J);
        J = ec("input", "slimit");
        J.type = "hidden";
        g.appendChild(J);
        J = ec("input", "altname");
        J.type = "hidden";
        g.appendChild(J);
        J = ec("input", "dir");
        J.type = "hidden";
        g.appendChild(J);
        J = ec("input", "overwrite");
        J.type = "hidden";
        g.appendChild(J);
        J = ec("input", "generateNames");
        J.type = "hidden";
        g.appendChild(J);
        b.appendChild(g)
    })();
    n = document.createElement("div");
    n.className = "control-box";
    g.appendChild(n);
    l = document.createElement("div");
    l.className = "list-box";
    o = document.createElement("table");
    o.className = "list";
    l.appendChild(o);
    g.appendChild(l);
    this.render = function () {
        if (w == 0 || i.length == 0) {
            var J;
            if (w == 0) if (i.length > 0) {
                J = i[i.length - 1];
                if (J.input.value == "") {
                    J.parentNode.removeChild(J);
                    i.splice(i.length - 1, 1)
                } else J.style.display = "none"
            }
            J = document.createElement("a");
            J.className = "control-proxy";
            J.appendChild(document.createTextNode(pui.getLanguageText("runtimeText", "upload select text")));
            var K = document.createElement("input");
            K.name = "file";
            K.type = "file";
            K.className = "control";
            if (w == 1) {
                K.multiple = true;
                if (typeof K.files == "undefined") w =
                    0
            }
            if (K.attachEvent) {
                K.attachEvent("onchange", f.render);
                J.attachEvent("onclick", a)
            } else if (K.addEventListener) {
                K.addEventListener("change", f.render, false);
                J.addEventListener("click", a, false)
            }
            J.input = K;
            i.push(J);
            J.appendChild(K);
            if (r == null) {
                r = document.createElement("a");
                r.href = "javascript: void(0);";
                r.appendChild(document.createTextNode(pui.getLanguageText("runtimeText", "upload clear text")));
                r.className = "clear";
                if (r.attachEvent) r.attachEvent("onclick", d); else r.addEventListener && r.addEventListener("click",
                    d, false);
                n.appendChild(r)
            }
            r == null ? n.appendChild(J) : n.insertBefore(J, r);
            if (Q == "genie") {
                if (k == null) {
                    k = document.createElement("a");
                    k.href = "javascript: void(0);";
                    k.appendChild(document.createTextNode(pui.getLanguageText("runtimeText", "upload upload text")));
                    k.className = "upload"
                }
                if (k.attachEvent) k.attachEvent("onclick", e); else k.addEventListener && k.addEventListener("click", e, false);
                n.appendChild(k)
            }
        }
        o.tBodies.length > 0 && o.removeChild(o.tBodies[0]);
        J = o.appendChild(document.createElement("tbody"));
        K = [];
        var L =
            [];
        if (w == 1) for (var N = 0; N < i[0].input.files.length; N++) {
            K.push(i[0].input.files[N].name);
            L.push(i[0].input.files[N].size)
        } else for (N = 0; N < i.length; N++) i[N].input.value != "" && K.push(i[N].input.value.substr(i[N].input.value.lastIndexOf("\\") + 1));
        for (N = 0; N < K.length; N++) {
            var O;
            if (w == 1) {
                O = L[N];
                var V = 2, X = ["B", "KB", "MB", "GB", "TB"];
                O = Math.max(O, 0);
                var ga = Math.floor((O ? Math.log(O) : 0) / Math.log(1024));
                ga = Math.min(ga, X.length - 1);
                O /= Math.pow(1024, ga);
                V = typeof V == "number" ? V : 0;
                O = " (" + (Math.round(O * Math.pow(10, V)) / Math.pow(10,
                    V) + " " + X[ga]) + ")"
            } else O = "";
            V = K[N] + O;
            X = J.insertRow(-1);
            X.className = "row";
            X.className += N % 2 == 0 ? " even" : " odd";
            O = X.insertCell(-1);
            O.className = "name-col";
            O.title = V;
            O.appendChild(document.createTextNode(V));
            if (w == 0) {
                O = X.insertCell(-1);
                O.className = "remove-col";
                V = document.createElement("a");
                V.href = "javascript: void(0);";
                V.className = "remove";
                V.appendChild(document.createTextNode(pui.getLanguageText("runtimeText", "upload remove text")));
                V.Xu = N;
                if (V.attachEvent) V.attachEvent("onclick", c); else V.addEventListener &&
                V.addEventListener("click", c, false);
                O.appendChild(V)
            }
        }
    };
    this.Av = function (J) {
        if (J != null && !isNaN(J)) v = J
    };
    this.Fv = function (J) {
        if (J != null && !isNaN(J)) E = J
    };
    this.setMode = function (J) {
        var K = false;
        if (J == "enhanced") {
            if (w != 1) K = true;
            w = 1
        } else if (J == "standard") {
            if (w != 0) K = true;
            w = 0
        } else if (J == "single") {
            if (w != 2) K = true;
            w = 2
        }
        K && this.clear()
    };
    this.Gp = function () {
        return y
    };
    this.getFileNames = function () {
        var J = [];
        if (w == 1) for (var K = 0; K < i[0].input.files.length; K++) J.push(i[0].input.files[K].name); else for (K = 0; K < i.length; K++) i[K].input.value !=
        "" && J.push(i[K].input.value.substr(i[K].input.value.lastIndexOf("\\") + 1));
        return J
    };
    this.getActualFileNames = function () {
        return H.slice()
    };
    this.getGenerateNames = function () {
        return B
    };
    this.Gv = function (J) {
        if (typeof J == "string") {
            y = J;
            if (y.length > 1 && y.charAt(y.length - 1) == "/") y = y.substr(0, y.length - 1)
        }
    };
    this.xv = function (J) {
        if (typeof J == "string") F = J
    };
    this.setDisabled = function (J) {
        u = J;
        for (J = 0; J < i.length; J++) i[J].input.disabled = u
    };
    this.Ev = function (J) {
        if (typeof J == "boolean") D = J
    };
    this.Bv = function (J) {
        if (typeof J ==
            "boolean") B = J
    };
    this.Iv = function (J) {
        z = J
    };
    this.wv = function (J) {
        if (J && J.constructor && J.constructor.toString().indexOf("function Array") != -1) I = J
    };
    this.getCount = function () {
        return w == 1 ? i[0].input.files.length : w == 2 ? i[0] != null && i[0].input.value != "" ? 1 : 0 : i.length - 1
    };
    this.Zv = function () {
        if (this.getCount() > v) return pui.getLanguageText("runtimeMsg", "upload file limit", [v])
    };
    this.aw = function () {
        if (w == 0) for (var J = this.getFileNames(), K = {}, L = 0; L < J.length; L++) {
            if (typeof K[J[L]] != "undefined") return pui.getLanguageText("runtimeMsg",
                "upload duplicate file");
            K[J[L]] = true
        }
    };
    this.upload = function () {
        if (!(s != null || Q == "genie" && pui.J.ue)) {
            s = {};
            t = "";
            if (typeof window.cordova != "undefined") {
                var J = {};
                J.dir = y;
                J.overwrite = D;
                J.generateNames = B;
                J.flimit = v;
                J.slimit = E;
                J.altname = F;
                J.allowedTypes = I;
                J.files = [];
                if (w == 1) for (var K = 0; K < i[0].input.files.length; K++) J.files.push(i[0].input.files[K]); else if (w == 0) for (K = 0; K < i.length - 1; K++) J.files[K] = i[K].input.files[0]; else if (w == 2) if (i[0] != null && i[0].input.value != "") J.files[0] = i[0].input.files[0];
                pui.upload(J,
                    function (L, N) {
                        L || (t = N);
                        s = null
                    })
            } else {
                if (Q == "genie") {
                    pui.Xi(pui.J.ue = true);
                    pui.Yf()
                }
                g.action = h;
                g.action += "?AUTH=";
                if (pui.appJob && pui.appJob.auth) g.action += encodeURIComponent(pui.appJob.auth);
                g.action += "&trans=" + encodeURIComponent(q);
                g.action += "&id=" + encodeURIComponent(b.id);
                if (pui.isCloud) g.action += "&workspace_id=" + pui.cloud.ws.id;
                g.elements.flimit.value = v;
                g.elements.slimit.value = E;
                g.elements.dir.value = y;
                g.elements.altname.value = F;
                g.elements.overwrite.value = D ? "1" : "0";
                g.elements.generateNames.value =
                    B ? "1" : "0";
                for (K = [].slice(g.querySelectorAll('input[name="type"]')); K.length > 0;) {
                    J = K.pop();
                    J.parentNode.removeChild(J)
                }
                for (K = 0; K < I.length; K++) {
                    J = ec("input", "type");
                    J.type = "hidden";
                    J.value = I[K];
                    g.appendChild(J)
                }
                s = setTimeout(function () {
                    f.fp(q, {success: false, error: pui.getLanguageText("runtimeMsg", "upload timeout")})
                }, 864E5);
                if (w == 0) i[i.length - 1].input.disabled = true;
                g.submit()
            }
        }
    };
    this.completeTransaction = function (J, K) {
        if (!(s == null || J != q)) {
            clearTimeout(s);
            var L;
            if (typeof K == "string") try {
                L = eval("(" + K + ")")
            } catch (N) {
                L =
                    {success: false, error: pui.getLanguageText("runtimeMsg", "upload invalid response")}
            } else L = K;
            if (L.success) H = L.fileNames; else {
                if (L.key) L.error = pui.getLanguageText("runtimeMsg", "upload " + L.key);
                t = L.error;
                if (L.key == "file limit") t = t.replace("&1", v);
                if (L.key == "size limit") t = t.replace("&1", E)
            }
            if (w == 0) i[i.length - 1].input.disabled = false;
            s = null;
            q++;
            if (Q == "genie") {
                pui.Xi(pui.J.ue = false);
                pui.qd();
                L.success == true ? this.jt() : pui.alert(L.error)
            }
        }
    };
    this.yz = function () {
        return s != null
    };
    this.zy = function () {
        return t
    };
    this.getId =
        function () {
            return b.id
        };
    this.jt = function () {
        if (z && z != "") {
            var J = {};
            J.dir = this.Gp();
            J.names = B ? this.getActualFileNames() : this.getFileNames();
            (function (K) {
                eval("var info = arguments[0];");
                try {
                    var L = eval(z);
                    typeof L == "function" && L(K)
                } catch (N) {
                    pui.qc(N, "onupload Error:\n")
                }
            })(J)
        }
    };
    this.clear = function () {
        if (s == null && !u) {
            for (; i.length > 0;) {
                i[i.length - 1].parentNode.removeChild(i[i.length - 1]);
                i.pop()
            }
            this.render()
        }
    }
};
pui.AI = function (b) {
    if (pui.Te.length > 0) {
        for (var a = 0; a < pui.Te.length; a++) pui.Te[a].upload();
        pui.rx(b);
        return true
    } else return false
};
pui.rx = function (b) {
    for (var a = true, c = 0; c < pui.Te.length; c++) if (pui.Te[c].yz()) {
        a = false;
        break
    }
    if (a) {
        a = {};
        var d = true;
        for (c = 0; c < pui.Te.length; c++) {
            var e = pui.Te[c].zy();
            if (e != "") {
                d = false;
                a[pui.Te[c].getId()] = e
            }
        }
        if (d) {
            for (c = 0; c < pui.Te.length; c++) {
                var f = pui.Te[c];
                a = f.EI;
                d = f.getCount();
                if (d > 99) d = 99;
                for (d = String(d); d.length < 3;) d = "0" + d;
                e = f.Gp();
                if (e.length > 256) e = e.substr(0, 256); else for (; e.length < 256;) e += " ";
                f = f.getGenerateNames() ? f.getActualFileNames() : f.getFileNames();
                for (var h = "", g = 0; g < f.length; g++) {
                    var l =
                        f[g];
                    if (l.length > 256) l = l.substr(0, 256); else for (; l.length < 256;) l += " ";
                    h += l
                }
                b[a] = d + e + h
            }
            pui.haltFrames();
            pui.submitResponse(b)
        } else pui.RE(a)
    } else setTimeout(function () {
        pui.rx(b)
    }, 250)
};
pui.widgets.add({
    name: "file upload",
    newId: "FileUpload",
    menuName: "File Upload",
    defaults: {
        width: "400px",
        height: "150px",
        "css class": "pui-file-upload",
        "selection mode": "standard",
        "size limit": "10",
        "number of files": "1",
        "overwrite files": "false"
    },
    propertySetters: {
        "field type": function (b) {
            if (b.dom.fileUpload == null) {
                b.dom.fileUpload = new pui.fileupload.Xr(b.dom);
                Q == "dspf" && pui.Te.push(b.dom.fileUpload)
            }
            for (var a = 1, c = "allowed type", d = []; typeof b.properties[c] == "string";) {
                d.push(b.evalProperty(c));
                c = "allowed type " +
                    ++a
            }
            b.dom.fileUpload.wv(d);
            b.dom.fileUpload.render()
        }, "selection mode": function (b) {
            b.dom.fileUpload.setMode(b.value)
        }, "number of files": function (b) {
            b.design || b.dom.fileUpload.Av(parseInt(b.value, 10))
        }, "size limit": function (b) {
            b.design || b.dom.fileUpload.Fv(parseInt(b.value, 10))
        }, "target directory": function (b) {
            b.design || b.dom.fileUpload.Gv(Zb(b.value))
        }, "rename to": function (b) {
            b.design || b.dom.fileUpload.xv(Zb(b.value))
        }, "overwrite files": function (b) {
            b.design || b.dom.fileUpload.Ev(b.value == "true" || b.value ==
                true)
        }, "generate unique names": function (b) {
            b.design || b.dom.fileUpload.Bv(b.value == "true" || b.value == true)
        }, onupload: function (b) {
            b.design || b.dom.fileUpload.Iv(b.newValue)
        }, disabled: function (b) {
            b.design || b.dom.fileUpload.setDisabled(b.value == "true")
        }
    }
});
pui.fileUploadDND = {};
pui.fileUploadDND.Xr = function (b) {
    function a(da) {
        da = da || event;
        da.returnValue = false;
        da.stopPropagation && da.stopPropagation();
        da.preventDefault && da.preventDefault();
        if (N || I !== null || Ub() || pui.Yk) return false;
        da.dataTransfer.Yx = "copy";
        pui.ya(w, "dragover");
        return false
    }

    function c(da) {
        da = da || event;
        da.returnValue = false;
        da.stopPropagation && da.stopPropagation();
        da.preventDefault && da.preventDefault();
        pui.La(w, "dragover");
        return false
    }

    function d(da) {
        da = da || event;
        da.returnValue = false;
        da.stopPropagation && da.stopPropagation();
        da.preventDefault && da.preventDefault();
        if (!(N || I !== null || Q === "genie" && pui.J.ue || Ub() || pui.Yk)) if (da.dataTransfer.files === null || da.dataTransfer.files === undefined) console.log("Browser doesn't support dataTransfer.files API"); else {
            pui.La(this, "dragover");
            if (y.length > 0 && (y[0].Ux || z.length > 0)) for (; y.length > 0;) y.pop();
            i();
            if (y.length + da.dataTransfer.files.length > O) n(pui.getLanguageText("runtimeMsg", "upload file limit", [O])); else if (da.dataTransfer.files.length > 0) {
                ka = da.dataTransfer.files;
                ea = 0;
                e()
            } else n(pui.getLanguageText("runtimeMsg",
                "upload invalid type"))
        }
    }

    function e() {
        var da = new FileReader;
        da.onload = function () {
            ka[ea].wz = true;
            if (ea == ka.length - 1) f(); else {
                ea++;
                e()
            }
        };
        da.onerror = function () {
            ka[ea].wz = false;
            if (ea == ka.length - 1) f(); else {
                ea++;
                e()
            }
        };
        da.readAsArrayBuffer(ka[ea])
    }

    function f() {
        for (var da = [], Ba = false, Ea = 0; Ea < ka.length && !Ba; Ea++) {
            for (var pa = false, ia = 0; ia < y.length; ia++) if (y[ia].name === ka[Ea].name) {
                pa = true;
                break
            }
            ia = ka[Ea].type.replace(/image\/jpeg/i, "image/jpg");
            if (!(la.length <= 0 || la.indexOf(ia) >= 0) || !ka[Ea].wz) {
                Ba = true;
                n(pui.getLanguageText("runtimeMsg",
                    "upload invalid type"))
            } else if (pa) {
                Ba = true;
                n(pui.getLanguageText("runtimeMsg", "upload duplicate file"))
            } else if (ka[Ea].size > V * 1048576) {
                Ba = true;
                n(pui.getLanguageText("runtimeMsg", "upload size limit", [V]))
            } else da.push(ka[Ea])
        }
        if (!Ba) for (Ea = 0; Ea < da.length; Ea++) y.push(da[Ea]);
        if (y.length > 0 && !K && !L) {
            F.style.display = "";
            if (Q === "genie") ma.style.display = ""
        }
        s.render();
        if (L && Q === "genie") s.upload(); else if (Q === "dspf" && K && y.length > 0) {
            pui.Wc = "Enter";
            pui.click()
        }
    }

    function h() {
        v.value = 100;
        var da, Ba = B;
        if ((da = J.responseText.match(/completeTransaction\((\d),(\{[^\}]+\})\)/i)) &&
            da.length > 0) {
            Ba = parseInt(da[1], 10);
            da = da[2].replace(/'/g, '"');
            da = JSON.parse(da)
        } else da = {success: false, error: pui.getLanguageText("runtimeMsg", "upload invalid response")};
        s.fp(Ba, da)
    }

    function g(da) {
        if (da.lengthComputable) v.value = da.loaded / da.total * 100 | 0
    }

    function l() {
        v.value = 0;
        var da = {success: false, error: pui.getLanguageText("runtimeMsg", "upload cancelled")};
        s.fp(B, da)
    }

    function n(da) {
        if (Q === "genie") {
            qa.style.display = "";
            qa.innerHTML = da
        } else {
            H !== null && H.hide();
            H = new pui.No(t);
            H.Il(da);
            H.show()
        }
    }

    function o(da) {
        da =
            da || window.event;
        da.cancelBubble = true;
        da.returnValue = false;
        da.preventDefault && da.preventDefault();
        da.stopPropagation && da.stopPropagation();
        if (I !== null) return false;
        y.splice((da.target || da.srcElement).Xu, 1);
        s.render();
        if (y.length == 0) s.clear(); else {
            i();
            if (Q === "genie") ma.style.display = ""
        }
        return false
    }

    function i() {
        if (Q === "genie") qa.style.display = "none";
        if (H !== null) {
            H.hide();
            H = null
        }
        z = "";
        v.value = 0
    }

    function r(da) {
        da = da || window.event;
        s.clear();
        da.cancelBubble = true;
        da.returnValue = false;
        da.preventDefault &&
        da.preventDefault();
        da.stopPropagation && da.stopPropagation();
        return false
    }

    function k(da) {
        da = da || window.event;
        I === null && !Ub() && !pui.J.ue && s.upload();
        if (da) {
            da.cancelBubble = true;
            da.returnValue = false;
            da.preventDefault && da.preventDefault();
            da.stopPropagation && da.stopPropagation();
            return false
        }
    }

    function q(da) {
        da = da || window.event;
        da.preventDefault && da.preventDefault();
        da.stopPropagation && da.stopPropagation();
        da.cancelBubble = true;
        da.returnValue = false;
        J && J.abort && J.abort();
        return false
    }

    var s = this, t = b, u = cc("PUI0009109.PGM"),
        w, v, E, y = [], F = null, D = null, B = 1, I = null, z = "", H = null, J = null, K = false, L = false,
        N = false, O = 1, V = 10, X = "", ga = "", U = false, Z = false, la = [], Y = [], oa;
    if (Q === "genie") var qa, ma = null;
    var ka = null, ea = 0;
    (function () {
        var da = true;
        if (!window.File || !window.FileList || !window.FileReader) da = false;
        w = document.createElement("div");
        w.className = "drop-box";
        var Ba = pui.getLanguageText("runtimeText", "upload drophere text");
        if (!da) {
            Ba = pui.getLanguageText("runtimeText", "upload browser unsupported");
            w.style.whiteSpace = "pre-wrap";
            w.style.overflowX =
                "auto"
        }
        Ba = document.createTextNode(Ba);
        w.appendChild(Ba);
        if (da && w.addEventListener) {
            w.addEventListener("dragover", a);
            w.addEventListener("dragleave", c);
            w.addEventListener("drop", d)
        }
        t.appendChild(w)
    })();
    b = document.createElement("div");
    b.className = "control-box";
    F = document.createElement("a");
    F.className = "clear-files";
    F.style.display = "none";
    F.appendChild(document.createTextNode(pui.getLanguageText("runtimeText", "upload clear text")));
    if (F.attachEvent) F.attachEvent("onclick", r); else F.addEventListener &&
    F.addEventListener("click", r, false);
    b.appendChild(F);
    if (Q === "genie") {
        ma = document.createElement("a");
        ma.className = "upload-files";
        ma.style.display = "none";
        ma.appendChild(document.createTextNode(pui.getLanguageText("runtimeText", "upload upload text")));
        if (ma.attachEvent) ma.attachEvent("onclick", k); else ma.addEventListener && ma.addEventListener("click", k, false);
        b.appendChild(ma)
    }
    v = document.createElement("progress");
    v.id = "progbar_" + t.id;
    v.max = 100;
    v.value = 0;
    b.appendChild(v);
    D = document.createElement("a");
    D.className = "abort-upload";
    D.appendChild(document.createTextNode("[x]"));
    D.style.visibility = "hidden";
    if (D.attachEvent) D.attachEvent("onclick", q); else D.addEventListener && D.addEventListener("click", q);
    b.appendChild(D);
    if (Q === "genie") {
        qa = document.createElement("p");
        qa.className = "error";
        qa.style.display = "none";
        b.appendChild(qa)
    }
    t.appendChild(b);
    b = document.createElement("div");
    b.className = "list-box";
    E = document.createElement("table");
    E.className = "list";
    b.appendChild(E);
    t.appendChild(b);
    this.render = function () {
        E.tBodies.length >
        0 && E.removeChild(E.tBodies[0]);
        var da = E.appendChild(document.createElement("tbody"));
        if (z.length > 0 && Q === "genie") qa.innerHTML = z;
        for (var Ba = 0; Ba < y.length; Ba++) {
            var Ea = y[Ba].size, pa = 2, ia = ["B", "KB", "MB", "GB", "TB"];
            Ea = Math.max(Ea, 0);
            var m = Math.floor((Ea ? Math.log(Ea) : 0) / Math.log(1024));
            m = Math.min(m, ia.length - 1);
            Ea /= Math.pow(1024, m);
            pa = typeof pa === "number" ? pa : 0;
            pa = y[Ba].name + (" (" + (Math.round(Ea * Math.pow(10, pa)) / Math.pow(10, pa) + " " + ia[m]) + ")");
            ia = da.insertRow(-1);
            ia.className = "row";
            ia.className += Ba % 2 ===
            0 ? " even" : " odd";
            Ea = ia.insertCell(-1);
            Ea.className = "name-col";
            Ea.title = pa;
            Ea.appendChild(document.createTextNode(pa));
            Ea = ia.insertCell(-1);
            Ea.className = "remove-col";
            if (y[Ba].Ux) {
                Ea = ia.insertCell(-1);
                Ea.className = "status-col";
                pa = document.createTextNode(pui.getLanguageText("runtimeText", "upload finished text"));
                Ea.appendChild(pa)
            } else {
                pa = document.createElement("a");
                pa.href = "javascript: void(0);";
                pa.className = "remove";
                pa.appendChild(document.createTextNode(pui.getLanguageText("runtimeText", "upload remove text")));
                pa.Xu = Ba;
                if (pa.attachEvent) pa.attachEvent("onclick", o); else pa.addEventListener && pa.addEventListener("click", o, false);
                Ea.appendChild(pa)
            }
        }
    };
    this.wJ = function (da) {
        K = da === true || da === "true"
    };
    this.xJ = function (da) {
        L = da === true || da === "true"
    };
    this.Av = function (da) {
        if (da !== null && !isNaN(da)) O = da
    };
    this.Fv = function (da) {
        if (da !== null && !isNaN(da)) V = da
    };
    this.Gv = function (da) {
        if (typeof da === "string") {
            X = da;
            if (X.length > 1 && X.charAt(X.length - 1) === "/") X = X.substr(0, X.length - 1)
        }
    };
    this.xv = function (da) {
        if (typeof da === "string") ga =
            da
    };
    this.setDisabled = function (da) {
        N = da === "true" || da === true
    };
    this.Ev = function (da) {
        if (da === "true" || da === true) U = da
    };
    this.Bv = function (da) {
        if (da === "true" || da === true) Z = da
    };
    this.Iv = function (da) {
        oa = da
    };
    this.wv = function (da) {
        if (da && da.constructor && da.constructor.toString().indexOf("function Array") !== -1) la = da
    };
    this.Gp = function () {
        return X
    };
    this.getFileNames = function () {
        for (var da = [], Ba = 0; Ba < y.length; Ba++) da.push(y[Ba].name);
        return da
    };
    this.getActualFileNames = function () {
        return Y.slice()
    };
    this.getGenerateNames =
        function () {
            return Z
        };
    this.getCount = function () {
        return y.length
    };
    this.yz = function () {
        return I !== null
    };
    this.zy = function () {
        return z
    };
    this.getId = function () {
        return t.id
    };
    this.Zv = function () {
        if (this.getCount() > O) return pui.getLanguageText("runtimeMsg", "upload file limit", [O])
    };
    this.aw = function () {
        for (var da = this.getFileNames(), Ba = {}, Ea = 0; Ea < da.length; Ea++) {
            if (typeof Ba[da[Ea]] !== "undefined") return pui.getLanguageText("runtimeMsg", "upload duplicate file");
            Ba[da[Ea]] = true
        }
    };
    this.upload = function () {
        if (!(z.length >
            0)) {
            i();
            F.style.display = "none";
            if (Q === "genie") ma.style.display = "none";
            if (y.length > 0) {
                I = {};
                if (Q === "genie") {
                    pui.Xi(pui.J.ue = true);
                    pui.Yf()
                }
                var da = u + "?AUTH=";
                if (pui.appJob && pui.appJob.auth) da += encodeURIComponent(pui.appJob.auth);
                da += "&trans=" + encodeURIComponent(B);
                da += "&id=" + encodeURIComponent(t.id);
                if (pui.isCloud) da += "&workspace_id=" + pui.cloud.ws.id;
                var Ba = new FormData;
                Ba.append("flimit", O);
                Ba.append("slimit", V);
                Ba.append("dir", X);
                Ba.append("altname", O > 1 ? "" : ga);
                Ba.append("overwrite", U ? "1" : "0");
                Ba.append("generateNames",
                    Z ? "1" : "0");
                for (var Ea = 0; Ea < y.length; Ea++) Ba.append("file", y[Ea]);
                I = setTimeout(function () {
                    s.fp(B, {success: false, error: pui.getLanguageText("runtimeMsg", "upload timeout")})
                }, 864E5);
                J = new XMLHttpRequest;
                J.open("POST", da);
                if ("upload" in J) J.upload.onprogress = g;
                J.onload = h;
                J.onabort = l;
                D.style.visibility = "visible";
                J.send(Ba)
            }
        }
    };
    this.fp = function (da, Ba) {
        if (!(I === null || da !== B)) {
            clearTimeout(I);
            D.style.visibility = "hidden";
            if (Ba.success) {
                for (var Ea = 0; Ea < y.length; Ea++) y[Ea].Ux = true;
                Y = Ba.fileNames
            } else {
                if (Ba.key) Ba.error =
                    pui.getLanguageText("runtimeMsg", "upload " + Ba.key);
                z = Ba.error;
                if (Ba.key === "file limit") z = z.replace("&1", O);
                if (Ba.key === "size limit") z = z.replace("&1", V);
                Q !== "genie" && !K && n(z)
            }
            s.render();
            F.style.display = "";
            I = null;
            B++;
            if (Q === "genie") {
                pui.Xi(pui.J.ue = false);
                pui.qd();
                Ba.success ? this.jt() : n(Ba.error)
            }
        }
    };
    this.jt = function () {
        if (oa && oa.length > 0) {
            var da = {};
            da.dir = this.Gp();
            da.names = Z ? this.getActualFileNames() : this.getFileNames();
            (function (Ba) {
                eval("var info = arguments[0];");
                try {
                    var Ea = eval(oa);
                    typeof Ea ===
                    "function" && Ea(Ba)
                } catch (pa) {
                    n("onupload Error:\n" + pa.message)
                }
            })(da)
        }
    };
    this.clear = function () {
        if (I === null && !N) {
            for (; y.length > 0;) y.pop();
            i();
            F.style.display = "none";
            if (Q === "genie") ma.style.display = "none";
            this.render()
        }
    }
};
pui.widgets.add({
    name: "file upload dnd",
    newId: "FileUploadDND",
    menuName: "File Upload DND",
    defaults: {
        width: "300px",
        height: "252px",
        "css class": "pui-file-upload",
        "size limit": "10",
        "number of files": "1",
        "overwrite files": "false"
    },
    propertySetters: {
        "field type": function (b) {
            if (b.dom.fileUpload === undefined) {
                b.dom.fileUpload = new pui.fileUploadDND.Xr(b.dom);
                Q === "dspf" && pui.Te.push(b.dom.fileUpload)
            }
            for (var a = 1, c = "allowed type", d = []; typeof b.properties[c] === "string";) {
                d.push(b.evalProperty(c));
                c = "allowed type " +
                    ++a
            }
            b.dom.fileUpload.wv(d);
            b.dom.fileUpload.render();
            if (!pui.fileUploadDND.aA) {
                if (window.addEventListener) {
                    window.addEventListener("dragover", pui.fileUploadDND.$z, false);
                    window.addEventListener("drop", pui.fileUploadDND.$z, false)
                }
                pui.fileUploadDND.aA = true
            }
        }, "auto submit": function (b) {
            b.design || b.dom.fileUpload.wJ(b.value)
        }, "auto upload": function (b) {
            b.design || b.dom.fileUpload.xJ(b.value)
        }, "number of files": function (b) {
            b.design || b.dom.fileUpload.Av(parseInt(b.value, 10))
        }, "size limit": function (b) {
            b.design ||
            b.dom.fileUpload.Fv(parseInt(b.value, 10))
        }, "target directory": function (b) {
            b.design || b.dom.fileUpload.Gv(Zb(b.value))
        }, "rename to": function (b) {
            b.design || b.dom.fileUpload.xv(Zb(b.value))
        }, "overwrite files": function (b) {
            b.design || b.dom.fileUpload.Ev(b.value)
        }, "generate unique names": function (b) {
            b.design || b.dom.fileUpload.Bv(b.value)
        }, onupload: function (b) {
            b.design || b.dom.fileUpload.Iv(b.newValue)
        }, disabled: function (b) {
            b.design || b.dom.fileUpload.setDisabled(b.value)
        }
    }
});
pui.fileUploadDND.$z = function (b) {
    b = b || event;
    b.returnValue = false;
    b.preventDefault && b.preventDefault()
};
pui.fileUploadDND.aA = false;
pui.fD = function () {
    function b() {
        if (h.getContext != null) {
            f = h.getContext("2d");
            if (f != null) {
                if (e.color != null) f.strokeStyle = e.color;
                if (e.backgroundColor != null) {
                    h.style.backgroundColor = e.backgroundColor;
                    f.fillStyle = e.backgroundColor;
                    f.fillRect(0, 0, e.b.offsetWidth, e.b.offsetHeight)
                }
                f.lineJoin = "round";
                f.lineWidth = 5
            }
        }
    }

    function a(i, r, k, q) {
        if (f != null) {
            if (k == null && q == null) f.lineTo(i, r); else {
                f.moveTo(i, r);
                f.lineTo(k, q)
            }
            f.stroke()
        }
    }

    function c() {
        e.b.modified = true;
        pui.Kh(e.b)
    }

    function d(i) {
        function r(w) {
            if (!(e.readOnly ||
                e.disabled)) {
                if (w != null && w.touches != null) if (w.touches.length != 1) return;
                var v = Jc(w) - q[0];
                w = Kc(w) - q[1];
                a(v, w);
                var E = l[l.length - 1];
                E.push(v);
                E.push(w);
                g.x = v;
                g.y = w
            }
        }

        function k() {
            f.closePath();
            if (s) {
                ic(h, "touchmove", r);
                ic(h, "touchend", k);
                ic(document, "touchend", k)
            } else {
                ic(h, "mousemove", r);
                ic(h, "mouseup", k);
                ic(document, "mouseup", k)
            }
            pui.Kh(e.b)
        }

        if (!(e.readOnly || e.disabled)) if (f != null) {
            var q = pui.Xe(e.b), s = false;
            if (i != null && i.touches != null) {
                if (i.touches.length != 1) return;
                s = true
            }
            l.push([]);
            g.x = Jc(i) - q[0];
            g.y =
                Kc(i) - q[1];
            f.beginPath();
            a(g.x, g.y, g.x, g.y);
            var t = l[l.length - 1];
            t.push(g.x);
            t.push(g.y);
            c();
            if (!pui.Ae(i)) {
                if (s) {
                    gc(h, "touchmove", r);
                    gc(h, "touchend", k);
                    gc(document, "touchend", k)
                } else {
                    gc(h, "mousemove", r);
                    gc(h, "mouseup", k);
                    gc(document, "mouseup", k)
                }
                if (e.designMode && !e.c.isSelected()) {
                    t = e.c.designer;
                    var u = t.selection;
                    u.clear();
                    u.add(e.c);
                    t.k.refresh()
                }
                yb(i);
                return false
            }
        }
    }

    var e = this, f, h, g = {}, l = [], n, o;
    this.b = null;
    this.color = "#333333";
    this.backgroundColor = "#ffffcc";
    this.designMode = false;
    this.c = null;
    this.init =
        function () {
            e.b.innerHTML = "";
            e.b.style.overflow = "hidden";
            e.b.style.padding = "0px";
            h = document.createElement("canvas");
            if (!e.designMode) h.innerHTML = "Your browser does not support HTML5 Canvas.<br/>Signature pad widget will not function.";
            e.b.appendChild(h);
            n = document.createElement("div");
            n.style.position = "absolute";
            n.style.top = "0px";
            n.style.right = "1px";
            n.style.width = "40px";
            n.innerHTML = "Clear";
            n.style.backgroundColor = "#cccccc";
            n.style.padding = "1px";
            n.style.border = "1px solid #666666";
            n.style.color = "#666666";
            n.style.fontFamily = "Sans-Serif";
            n.style.fontSize = "12px";
            n.style.textAlign = "center";
            n.style.cursor = "pointer";
            n.onmousedown = function (i) {
                yb(i);
                return false
            };
            n.onclick = function () {
                e.clear();
                c()
            };
            e.b.appendChild(n);
            if (e.designMode) {
                o = document.createElement("div");
                o.style.position = "absolute";
                o.style.top = "0px";
                o.style.right = "46px";
                o.style.width = "40px";
                o.innerHTML = "Move";
                o.style.backgroundColor = "#cccccc";
                o.style.padding = "1px";
                o.style.border = "1px solid #666666";
                o.style.color = "#666666";
                o.style.fontFamily = "Sans-Serif";
                o.style.fontSize = "12px";
                o.style.textAlign = "center";
                o.style.cursor = "move";
                e.b.appendChild(o)
            }
            e.resize();
            gc(h, "mousedown", d);
            gc(h, "touchstart", d);
            gc(e.b, "dblclick", function (i) {
                if (e.designMode) {
                    var r = e.c.designer.k;
                    r.he("value", null, true, i);
                    r.za.Wj()
                }
            });
            if (e.designMode) if (pui.is_chrome || pui.is_old_ie && pui.ie_mode < 10) {
                h.style.display = "none";
                o.style.display = "none"
            }
        };
    this.resize = function (i) {
        h.style.width = e.b.offsetWidth + "px";
        h.style.height = e.b.offsetHeight + "px";
        h.setAttribute("width", e.b.offsetWidth);
        h.setAttribute("height",
            e.b.offsetHeight);
        b();
        if (i == true) e.GA(); else l = []
    };
    this.clear = function () {
        f != null && f.clearRect(0, 0, e.b.offsetWidth, e.b.offsetHeight);
        e.resize()
    };
    this.yv = function (i) {
        e.color = i;
        b()
    };
    this.yJ = function (i) {
        e.backgroundColor = i;
        b()
    };
    this.HB = function () {
        n.style.visibility = e.readOnly || e.disabled ? "hidden" : ""
    };
    this.getValue = function () {
        for (var i = "[", r = 0; r < l.length; r++) {
            var k = l[r];
            if (r > 0) i += ",";
            i += "[";
            for (j = 0; j < k.length; j++) {
                if (j > 0) i += ",";
                i += k[j]
            }
            i += "]"
        }
        i += "]";
        return i
    };
    this.setValue = function (i) {
        e.clear();
        if (!(i.length <
            5 || i.substr(0, 2) != "[[" || i.substr(i.length - 2, 2) != "]]")) {
            try {
                l = eval("(" + i + ")")
            } catch (r) {
            }
            e.GA()
        }
    };
    this.GA = function () {
        if (f != null) {
            f.beginPath();
            for (var i = 0; i < l.length; i++) {
                var r = l[i];
                for (j = 0; j < r.length; j += 2) {
                    if (j + 1 > r.length) break;
                    var k = j - 2;
                    if (k < 0) k = 0;
                    a(r[k], r[k + 1], r[j], r[j + 1])
                }
            }
            f.closePath()
        }
    }
};
pui.widgets.add({
    name: "signature pad",
    defaults: {
        height: "150px",
        width: "450px",
        "background color": "#ffffcc",
        "border top style": "solid",
        "border top width": "1px",
        "border top color": "#000000",
        "border left style": "solid",
        "border left width": "1px",
        "border left color": "#000000",
        "border right style": "solid",
        "border right width": "1px",
        "border right color": "#000000",
        "border bottom style": "solid",
        "border bottom width": "1px",
        "border bottom color": "#000000",
        color: "#333333"
    },
    propertySetters: {
        "field type": function (b) {
            if (b.dom.signaturePad ==
                null) {
                b.dom.signaturePad = new pui.fD;
                b.dom.signaturePad.b = b.dom;
                if (b.dom.signaturePad.designMode = b.design) b.dom.signaturePad.c = b.c;
                b.dom.signaturePad.init();
                b.dom.sizeMe = function () {
                    b.dom.signaturePad.resize(true)
                }
            }
        }, value: function (b) {
            b.design || setTimeout(function () {
                b.dom.signaturePad.setValue(b.value)
            }, 0)
        }, color: function (b) {
            b.dom.signaturePad.yv(b.value)
        }, "read only": function (b) {
            b.dom.signaturePad.readOnly = b.value == true || b.value == "true" ? true : false;
            b.dom.signaturePad.HB()
        }, disabled: function (b) {
            b.dom.signaturePad.disabled =
                b.value == true || b.value == "true" ? true : false;
            b.dom.signaturePad.HB()
        }, width: function (b) {
            b.dom.style.width = b.value;
            b.dom.signaturePad.resize()
        }, height: function (b) {
            b.dom.style.height = b.value;
            b.dom.signaturePad.resize()
        }, "background color": function (b) {
            b.dom.signaturePad.yJ(b.value)
        }
    }
});

function qd(b) {
    var a = b.dom, c = b.evalProperty("value"), d = b.evalProperty("image source"), e = b.evalProperty("icon"),
        f = b.evalProperty("icon position"), h = b.evalProperty("cursor"), g = b.evalProperty("css class");
    if (g) g = Zb(g);
    if (b.properties.value == "script: value") {
        if (c == "") c = b.dom.innerHTML;
        if (c.substr(0, 5).toLowerCase() == "<img ") {
            b = c.indexOf(">");
            c = b >= 0 ? c.substr(b + 1) : ""
        }
    }
    b = "";
    if (d != null && d != "") b = '<img src="' + pui.normalizeURL(d) + '" style="vertical-align:middle;padding-bottom:2px;" /> ';
    var l = "";
    if (e && f) {
        e =
            Zb(e);
        if (e.substr(0, 9) == "material:") {
            e = Zb(e.substr(9));
            l = '<span class="pui-material-icons pui-material-icons-center ' + (g ? g + '"' : '"') + (h ? 'style="cursor:' + h + '"' : "") + ">" + e + "</span>";
            if (c) c = '<span class="pui-material-icons-text ' + (g ? g : "") + '">' + c + "</span>"
        } else if (e.substr(0, 12) == "fontAwesome:") {
            e = Zb(e.substr(12));
            l = '<span class="pui-fa-icons pui-fa-icons-center fa-' + e + " " + (g ? g : "") + '"></span>';
            if (c) c = '<span class="pui-fa-icons-text ' + (g ? g : "") + '">' + c + "</span>"
        } else {
            d = [{
                type: "material", title: "Material Icons",
                classList: {"": "pui-material-icons"}
            }, {
                type: "fontAwesome",
                title: "Font Awesome Icons",
                classList: {
                    brands: "pui-fa-brands-icons fa-",
                    solid: "pui-fa-solid-icons fa-",
                    regular: "pui-fa-regular-icons fa-"
                }
            }, {type: "jQueryIcons", title: "jQuery Mobile Icons", classList: {"": "ui-icon ui-icon-"}}];
            e = Zb(e);
            if (pui.customIconList && pui.customIconList) if (Array.isArray(pui.customIconList.icons) && pui.customIconList.icons.length) d = pui.customIconList.icons;
            e = e.split(":");
            var n = e.shift().split("-"), o = n.pop();
            n = n.join("-");
            var i =
                e.pop();
            d.every(function (r) {
                var k = r.type;
                r = r.classList[o];
                if (n === k) {
                    if (k === "fontAwesome") {
                        l = '<span class="pui-fa-icons-center ' + r + i + " " + (g ? g : "") + '"></span>';
                        if (c) c = '<span class="pui-fa-icons-text ' + (g ? g : "") + '">' + c + "</span>"
                    } else {
                        l = '<span class="pui-icons-center ' + r + i + " " + (g ? g : "") + '"></span>';
                        if (c) c = '<span class="' + (g ? g : "") + '">' + c + "</span>"
                    }
                    return false
                }
                return true
            })
        }
    } else l = b;
    a.setAttribute("type", "button");
    a.innerHTML = f === "right" ? c + l : l + c
}

pui.widgets.add({
    name: "graphic button",
    tag: "button",
    inputType: "button",
    newValue: "Accept",
    rf: true,
    defaults: {
        width: !pui.is_quirksmode ? "100px" : null,
        "icon position": "left",
        "image source": "/profoundui/proddata/images/accept.png",
        color: "#009933",
        "font weight": "bold"
    },
    propertySetters: {
        "field type": function (b) {
            qd(b)
        }, value: function (b) {
            b.properties.value = b.value;
            qd(b)
        }, "image source": function (b) {
            b.properties["image source"] = b.value;
            qd(b)
        }, icon: function (b) {
            b.properties.icon = b.value;
            qd(b)
        }, "icon position": function (b) {
            b.properties["icon position"] =
                b.value;
            qd(b)
        }, "css class": function (b) {
            b.properties["css class"] = b.value;
            qd(b)
        }, cursor: function (b) {
            b.properties.cursor = b.value;
            qd(b)
        }
    }
});
pui.QC = function () {
    function b(r) {
        if (!i.ib.disabled) {
            if (Q != "genie" || pui.Na) {
                if (i.Nu && (!r || i.Fn)) return;
                if (i.grid.designMode) return;
                if (i.grid.me()) return
            }
            i.grid.Mu()
        }
    }

    function a(r) {
        if (!i.hb.disabled) {
            if (Q != "genie" || pui.Na) {
                if (i.Lu && (!r || i.En)) return;
                if (i.grid.designMode) return;
                if (i.grid.Qd()) return
            }
            i.grid.Ku()
        }
    }

    this.y = this.x = 100;
    this.width = 500;
    this.qr = this.Ml = this.Xf = this.mC = this.Vl = this.mj = false;
    this.lA = this.mA = null;
    this.Lu = this.Nu = this.En = this.Fn = false;
    this.zq = 1;
    this.hb = this.gb = this.ib = this.yb = this.grid =
        this.b = null;
    var c, d, e, f, h, g, l, n, o, i = this;
    this.init = function () {
        c = document.createElement("div");
        c.style.position = "absolute";
        c.style.backgroundRepeat = "repeat-x";
        c.style.textAlign = "center";
        c.style.paddingTop = "5px";
        c.style.overflow = "hidden";
        c.onselectstart = za(false);
        if (typeof c.style.MozUserSelect != "undefined") c.style.MozUserSelect = "none";
        i.b.appendChild(c);
        g = document.createElement("div");
        g.style.position = "absolute";
        g.style.top = "2px";
        g.style.left = "2px";
        g.style.width = "0px";
        g.style.padding = "0px";
        g.style.display =
            "none";
        c.appendChild(g);
        d = document.createElement("div");
        d.style.cursor = "pointer";
        d.style.position = "absolute";
        d.style.top = "4px";
        d.style.left = "4px";
        d.style.height = "14px";
        d.style.padding = "1px";
        d.style.width = "14px";
        d.onclick = function () {
            i.grid.designMode || i.grid.exportCSV()
        };
        pui.ya(d, "export-image-icon");
        pui.ya(d, "csv-export-image-icon");
        c.appendChild(d);
        e = document.createElement("span");
        e.innerHTML = pui.getLanguageText("runtimeText", "excel export text");
        e.style.position = "absolute";
        e.style.top = "5px";
        e.style.left =
            "24px";
        e.style.textDecoration = "underline";
        e.style.cursor = "pointer";
        e.onclick = function () {
            i.grid.designMode || i.grid.exportCSV()
        };
        e.className = "paging-link csv-paging-link";
        c.appendChild(e);
        f = document.createElement("div");
        f.style.cursor = "pointer";
        f.style.position = "absolute";
        f.style.top = "4px";
        f.style.left = "4px";
        f.style.height = "14px";
        f.style.padding = "1px";
        f.style.width = "14px";
        f.onclick = function () {
            i.grid.designMode || i.grid.exportCSV(null, true)
        };
        pui.ya(f, "export-image-icon");
        pui.ya(f, "xlsx-export-image-icon");
        c.appendChild(f);
        h = document.createElement("span");
        h.innerHTML = pui.getLanguageText("runtimeText", "export to x", ["XLSX"]);
        h.style.position = "absolute";
        h.style.top = "5px";
        h.style.left = "24px";
        h.style.textDecoration = "underline";
        h.style.cursor = "pointer";
        h.onclick = function () {
            i.grid.designMode || i.grid.exportCSV(null, true)
        };
        h.className = "paging-link xlsx-paging-link";
        c.appendChild(h);
        i.yb = document.createElement("div");
        i.yb.className = "prev-image-icon";
        i.yb.style.verticalAlign = "top";
        i.yb.style.display = "inline-block";
        i.yb.style.height = "16px";
        i.yb.style.width = "16px";
        i.yb.Wf = "PageUp";
        i.yb.Fa = "0";
        i.yb.ud = i;
        i.yb.ll = true;
        i.yb.onmouseover = function () {
            i.yb.disabled || pui.ya(i.ib, "paging-link-hover")
        };
        i.yb.onmouseout = function () {
            i.yb.disabled || pui.La(i.ib, "paging-link-hover")
        };
        i.yb.onclick = function () {
            b(true)
        };
        c.appendChild(i.yb);
        i.ib = document.createElement("span");
        i.ib.innerHTML = pui.getLanguageText("runtimeText", "previous link text");
        i.ib.href = "javascript:void(0)";
        i.ib.style.verticalAlign = "top";
        i.ib.Wf = "PageUp";
        i.ib.Fa =
            "0";
        i.ib.ud = i;
        i.ib.ll = true;
        i.ib.onmouseover = function () {
            i.ib.disabled || pui.ya(i.ib, "paging-link-hover")
        };
        i.ib.onmouseout = function () {
            i.ib.disabled || pui.La(i.ib, "paging-link-hover")
        };
        i.ib.onclick = function () {
            b(true)
        };
        i.ib.className = "paging-link previous-paging-link";
        c.appendChild(i.ib);
        l = document.createElement("span");
        l.innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        c.appendChild(l);
        o = document.createElement("span");
        o.style.fontFamily = "Arial";
        o.style.fontSize = "11px";
        o.style.fontWeight = "bold";
        o.style.verticalAlign =
            "top";
        o.className = "paging-number";
        c.appendChild(o);
        n = document.createElement("span");
        n.innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        c.appendChild(n);
        i.hb = document.createElement("span");
        i.hb.innerHTML = pui.getLanguageText("runtimeText", "next link text");
        i.hb.href = "javascript:void(0)";
        i.hb.style.verticalAlign = "top";
        i.hb.Wf = "PageDown";
        i.hb.Fa = "0";
        i.hb.ud = i;
        i.hb.nextPage = true;
        i.hb.onmouseover = function () {
            i.hb.disabled || pui.ya(i.hb, "paging-link-hover")
        };
        i.hb.onmouseout = function () {
            i.hb.disabled || pui.La(i.hb,
                "paging-link-hover")
        };
        i.hb.onclick = function () {
            a(true)
        };
        i.hb.className = "paging-link next-paging-link";
        c.appendChild(i.hb);
        i.gb = document.createElement("div");
        i.gb.className = "next-image-icon";
        i.gb.style.verticalAlign = "top";
        i.gb.style.display = "inline-block";
        i.gb.style.height = "16px";
        i.gb.style.width = "16px";
        i.gb.Wf = "PageDown";
        i.gb.Fa = "0";
        i.gb.ud = i;
        i.gb.nextPage = true;
        i.gb.onmouseover = function () {
            i.gb.disabled || pui.ya(i.hb, "paging-link-hover")
        };
        i.gb.onmouseout = function () {
            i.gb.disabled || pui.La(i.hb, "paging-link-hover")
        };
        i.gb.onclick = function () {
            a(true)
        };
        c.appendChild(i.gb);
        if (!i.En || !i.Fn) pui.Ds = true;
        if (!i.grid.designMode && pui.runtimeContainer != null && c != null && c.parentNode != null) {
            var r = function (k) {
                if (c == null || c.parentNode == null) ic(pui.runtimeContainer, "keydown", r); else {
                    if (!k) k = window.event;
                    k = k.keyCode;
                    k == 33 && b();
                    k == 34 && a()
                }
            };
            gc(pui.runtimeContainer, "keydown", r)
        }
        gc(c, "mousedown", function (k) {
            function q(E) {
                var y = Kc(E) - u, F = Jc(E) - t;
                E = i.grid.g.c;
                if (E != null) {
                    var D = E.designer.selection;
                    if (D.fc) {
                        F += i.grid.g.Jc;
                        y += i.grid.g.Rb;
                        F = D.mb(F, pui.ac);
                        y = D.mb(y, pui.Ob, Q == "genie" ? 3 : 0);
                        F -= i.grid.g.Jc;
                        y -= i.grid.g.Rb
                    }
                }
                i.grid.Wd(function (B) {
                    B.style.top = B.Rb + y + "px";
                    B.style.left = B.Jc + F + "px"
                });
                if (E != null) E.moved = true;
                i.grid.setScrollBar();
                E = pui.designer.gf;
                if (E.b == null) {
                    E.b = document.body;
                    E.init()
                }
                E.set(i.grid.g.c);
                E.show()
            }

            function s() {
                if (i.grid.g.c != null) if (i.grid.g.c.moved) {
                    i.grid.g.c.designer.Ff();
                    Q == "dspf" && pui.ide.refreshRibbon()
                } else i.grid.g.c.designer.n.iv();
                i.grid.Od();
                var E = pui.designer.gf;
                E != null && E.b != null && E.hide();
                ic(document,
                    "mousemove", q);
                ic(document, "mouseup", s)
            }

            if (i.grid.designMode) {
                i.grid.g.c.designer.hh();
                i.grid.Ch();
                if (pui.Ae(k)) {
                    if (i.grid.g.c) {
                        i.grid.g.c.designer.Nb.hide();
                        i.grid.g.c.designer.rr(k)
                    }
                    S.ua(k);
                    k.stopPropagation && k.stopPropagation();
                    return false
                }
                i.grid.g.c != null && i.grid.g.c.designer.Qa != null && i.grid.g.c.designer.Qa.hide();
                if (i.xi) S.ua(k); else {
                    var t = Jc(k), u = Kc(k);
                    i.grid.Wd(function (E) {
                        E.Jc = parseInt(E.style.left);
                        E.Rb = parseInt(E.style.top)
                    });
                    gc(document, "mousemove", q);
                    gc(document, "mouseup", s);
                    yb(k);
                    if (i.grid.designMode &&
                        i.grid.g.c != null) {
                        i.grid.g.c.moved = false;
                        k = i.grid.g.c.designer;
                        var w = k.selection, v = "Move Selection";
                        if (w.e.length == 1) v = "Move Grid";
                        k.n.start(v);
                        k.n.bf = true;
                        w.Qh(["left", "top", "parent tab panel", "parent tab panel"]);
                        k.n.bf = false
                    }
                }
            }
        })
    };
    this.position = function () {
        if ((i.mj || i.Vl || i.Xf || i.Ml || i.qr) && i.grid.g.style.display != "none" && i.grid.g.style.visibility != "hidden") {
            c.style.left = i.x + "px";
            c.style.top = i.y + "px";
            c.style.width = i.width + "px";
            c.style.display = "";
            c.style.zIndex = i.grid.g.style.zIndex
        } else c.style.display =
            "none"
    };
    this.hide = function () {
        c.style.display = "none"
    };
    this.destroy = function () {
        c.innerHTML = "";
        c.parentNode != null && c.parentNode.removeChild(c);
        i.yb = null;
        i.ib = null;
        i.gb = null;
        i = g = o = n = l = h = f = e = d = c = i.hb = null
    };
    this.hr = function (r) {
        if (c != null) {
            if (r == null) r = "";
            r = Zb(r);
            if (r != "") {
                r = r.split(" ").shift();
                r += "-paging-bar"
            }
            r += " paging-bar";
            r = Zb(r);
            if (c.className != r) c.className = r
        }
    };
    this.H = function () {
        g.style.display = "none";
        i.hr(i.grid.g.className);
        if ((i.mj || i.Vl || i.Xf || i.Ml || i.qr) && i.grid.g.style.display != "none" && i.grid.g.style.visibility !=
            "hidden") {
            i.position();
            var r = i.mj ? "" : "none";
            d.style.display = r;
            e.style.display = r;
            r = i.Vl ? "" : "none";
            f.style.display = r;
            h.style.display = r;
            if (i.Vl && i.mj) {
                e.innerHTML = pui.getLanguageText("runtimeText", "export to x", ["Excel CSV"]);
                h.innerHTML = pui.getLanguageText("runtimeText", "export to x", ["Excel XLSX"]);
                f.style.left = "160px";
                h.style.left = "180px";
                var k = r = h.parentNode.offsetWidth, q = r;
                if (i.Xf) {
                    r = i.yb.offsetLeft;
                    q = i.gb.offsetLeft + i.gb.offsetWidth
                } else if (i.Ml) {
                    r = o.offsetLeft;
                    q = o.offsetLeft + o.offsetWidth
                }
                if (h.offsetLeft +
                    h.offsetWidth > r || q > k) {
                    e.innerHTML = pui.getLanguageText("runtimeText", "export to x", ["CSV"]);
                    h.innerHTML = pui.getLanguageText("runtimeText", "export to x", ["XLSX"]);
                    f.style.left = "122px";
                    h.style.left = "144px";
                    if (i.Xf) q = i.gb.offsetLeft + i.gb.offsetWidth; else if (i.Xf) q = o.offsetLeft + o.offsetWidth;
                    if (h.offsetLeft + h.offsetWidth > r || q > k) {
                        h.innerHTML = "XLSX";
                        f.style.left = "124px";
                        h.style.left = "144px";
                        if (i.Xf) q = i.gb.offsetLeft + i.gb.offsetWidth; else if (i.Xf) q = o.offsetLeft + o.offsetWidth;
                        if (h.offsetLeft + h.offsetWidth >
                            r || q > k) {
                            e.innerHTML = "CSV";
                            f.style.left = "60px";
                            h.style.left = "80px"
                        }
                    }
                }
            } else {
                e.innerHTML = pui.getLanguageText("runtimeText", "excel export text");
                h.innerHTML = pui.getLanguageText("runtimeText", "excel export text");
                f.style.left = "4px";
                h.style.left = "24px"
            }
            if (i.Xf) {
                i.yb.style.display = "inline-block";
                i.ib.style.display = "";
                i.gb.style.display = "inline-block";
                i.hb.style.display = "";
                i.yb.disabled = false;
                i.ib.disabled = false;
                i.gb.disabled = false;
                i.hb.disabled = false;
                if (Q != "genie") {
                    if (!i.grid.designMode && i.grid.me() && (i.mA ==
                        "false" || !i.Fn)) {
                        i.yb.disabled = true;
                        i.ib.disabled = true;
                        pui.ya(i.ib, "paging-link-disabled");
                        pui.ya(i.yb, "prev-image-icon-disabled")
                    } else {
                        pui.La(i.ib, "paging-link-disabled");
                        pui.La(i.yb, "prev-image-icon-disabled")
                    }
                    if (!i.grid.designMode && i.grid.Qd() && (i.grid.SB && pui["page down on subfile end"] != true || i.lA == "false" || !i.En)) {
                        i.gb.disabled = true;
                        i.hb.disabled = true;
                        pui.ya(i.hb, "paging-link-disabled");
                        pui.ya(i.gb, "next-image-icon-disabled")
                    } else {
                        pui.La(i.hb, "paging-link-disabled");
                        pui.La(i.gb, "next-image-icon-disabled")
                    }
                }
            } else {
                i.yb.style.display =
                    "none";
                i.ib.style.display = "none";
                i.gb.style.display = "none";
                i.hb.style.display = "none"
            }
            if (i.Ml) {
                o.style.display = "";
                o.innerHTML = pui.getLanguageText("runtimeText", "page") + " " + i.zq
            } else o.style.display = "none"
        } else c.style.display = "none"
    };
    this.Ng = function (r) {
        i.b = r;
        c.parentNode.removeChild(c);
        i.b.appendChild(c)
    };
    this.getHeight = function () {
        return c.offsetHeight
    };
    this.Hv = function (r) {
        g.innerHTML = r
    };
    this.LB = function () {
        d.style.display = "none";
        e.style.display = "none";
        f.style.display = "none";
        h.style.display = "none";
        i.yb.style.display = "none";
        i.ib.style.display = "none";
        i.gb.style.display = "none";
        i.hb.style.display = "none";
        o.style.display = "none";
        g.style.display = ""
    };
    this.CE = function (r) {
        r(c)
    }
};
pui.gD = function () {
    function b(y, F) {
        if (g) {
            g = false;
            n.sq(F)
        } else setTimeout(function () {
            y == f && n.sq(F)
        }, n.interval)
    }

    function a() {
        var y = 22;
        if (pui.is_touch && !pui.is_mouse_capable && !n.designMode || pui.pb) y = 0;
        q.style.left = n.x - q.offsetWidth + y + "px";
        q.style.top = n.y - q.offsetHeight - 2 + "px"
    }

    function c(y) {
        setTimeout(function () {
            if (y == h) q.style.display = "none"
        }, 800)
    }

    function d(y) {
        function F() {
            if (k.R == null) k.style.opacity = u; else if (!(k.R.startTime > J)) {
                var K = false, L = (new Date).getTime(), N = I + (z - L) * H;
                I = N;
                z = L;
                H *= 0.98;
                if (H >
                    0) {
                    H -= 0.001;
                    if (H <= 0) {
                        K = true;
                        H = 0
                    }
                } else {
                    H += 0.001;
                    if (H >= 0) {
                        K = true;
                        H = 0
                    }
                }
                L = parseInt(r.style.top);
                var O = L + parseInt(r.style.height) - parseInt(k.style.height);
                if (O < L) O = L;
                if (N < L) {
                    N = L;
                    K = true
                }
                if (N > O) {
                    N = O;
                    K = true
                }
                k.Gj = N;
                k.style.top = parseInt(N) + "px";
                N = (N - L) / (O - L);
                if (isNaN(N)) N = 0;
                N = (n.sc - n.Md) * N;
                N = Math.round(N) + 1;
                n.doScroll(N);
                if (K) {
                    k.R = null;
                    pui.animate({element: k, property: "opacity", from: 1, to: u, duration: "1s"})
                } else setTimeout(F, 1E3 / 60)
            }
        }

        if (y == null) k.style.opacity = u; else {
            var D = y.duration, B = y.qp, I = k.Gj, z = y.$k;
            if (B ==
                null || D == null) k.style.opacity = u; else if (!(D > 500)) {
                var H = B / D, J = (new Date).getTime();
                F()
            }
        }
    }

    function e(y, F) {
        if (n.Fd) {
            if (F) y = -y;
            if (n.Fd && y < 0 && n.Fd.grid.Qd() || n.Fd && y > 0 && n.Fd.grid.me()) return true
        }
        return false
    }

    this.y = this.x = 0;
    this.height = 300;
    this.zIndex = 100;
    this.designMode = false;
    this.b = null;
    this.Md = 10;
    this.sc = 100;
    this.cb = 20;
    this.borderWidth = 1;
    this.sq = this.onchange = null;
    this.Nl = true;
    this.Ol = false;
    this.interval = 250;
    this.type = "sliding";
    this.ql = false;
    this.Fd = null;
    var f = 0, h = 0, g = true, l = false, n = this, o, i, r, k,
        q, s = 25, t = -1, u = 0, w, v, E;
    this.init = function (y) {
        n.Fd = y;
        o = document.createElement("div");
        o.style.position = "absolute";
        o.style.width = "23px";
        o.style.overflowY = "scroll";
        o.style.overflowX = "hidden";
        o.style.padding = "0px";
        o.className = "pui-scrollbar";
        if (n.Fd.grid && n.Fd.grid.qg) o.className += " " + n.Fd.grid.qg + "-pui-scrollbar";
        i = document.createElement("div");
        i.style.position = "absolute";
        i.style.left = "0px";
        i.style.top = "0px";
        i.innerHTML = "&nbsp;";
        i.fontSize = "0px";
        q = document.createElement("div");
        q.style.position = "absolute";
        q.style.border = "1px solid #999999";
        q.style.backgroundColor = "#ffffff";
        q.style.fontFamily = "Arial";
        q.style.fontSize = "10px";
        q.style.fontWeight = "bold";
        q.style.padding = "1px";
        q.style.zIndex = 1E3;
        q.style.filter = "alpha(opacity=75)";
        q.style.opacity = 0.75;
        q.style.display = "none";
        if (Q == "dspf" && pui.is_touch && !pui.is_mouse_capable && !n.designMode || pui.pb) {
            r = document.createElement("div");
            r.style.position = "absolute";
            r.style.width = "3px";
            r.style.backgroundColor = "transparent";
            k = document.createElement("div");
            k.style.position =
                "absolute";
            k.style.width = "3px";
            k.style.height = "25px";
            k.style.top = "0px";
            k.style.backgroundColor = "#999999";
            if (!pui.is_android) k.style.borderRadius = "2px";
            o.style.visibility = "hidden";
            o.style.display = "none";
            k.style.opacity = u;
            if (pui.pb) {
                var F = function (z) {
                    function H(L) {
                        k.style.opacity = 1;
                        var N = Kc(L);
                        L = (new Date).getTime();
                        k.R.duration = L - k.R.$k;
                        k.R.$k = L;
                        var O = n.sc / n.Md / 6;
                        if (O < 1) O = 1;
                        if (O > 40) O = 40;
                        k.R.qp = (N - k.R.jn) / O;
                        k.R.jn = N;
                        L = k.R.Rb;
                        N = N - k.R.startY;
                        if (k.R.reverse) N = -N;
                        N /= O;
                        L += N;
                        N = parseInt(r.style.top);
                        O = N + parseInt(r.style.height) -
                            parseInt(k.style.height);
                        if (O < N) O = N;
                        if (L < N) L = N;
                        if (L > O) L = O;
                        k.Gj = L;
                        k.style.top = parseInt(L) + "px";
                        L = (L - N) / (O - N);
                        if (isNaN(L)) L = 0;
                        L = (n.sc - n.Md) * L;
                        L = Math.round(L) + 1;
                        n.doScroll(L)
                    }

                    function J() {
                        ic(document, "mousemove", H);
                        ic(document, "mouseup", J);
                        d(k.R)
                    }

                    var K = vb(z);
                    if (K != null && K.row === 0 || K != null && K.parentNode != null && K.parentNode.row === 0 || K != null && K.parentNode != null && K.parentNode.parentNode != null && K.parentNode.parentNode.row === 0) if (y.grid.t) return;
                    if (!(K != null && K.tagName == "INPUT" || K.tagName == "SELECT" || K.tagName ==
                        "TEXTAREA")) {
                        k.R = {};
                        k.R.reverse = K != k;
                        k.R.startY = Kc(z);
                        k.R.jn = k.R.startY;
                        k.R.startTime = (new Date).getTime();
                        k.R.$k = (new Date).getTime();
                        k.R.qp = null;
                        k.R.duration = null;
                        k.R.Rb = k.Gj != null ? k.Gj : parseInt(k.style.top);
                        gc(document, "mousemove", H);
                        gc(document, "mouseup", J);
                        yb(z)
                    }
                };
                gc(k, "mousedown", F);
                gc(y, "mousedown", F)
            }
            if (!pui.pb) {
                var D, B, I;
                F = function (z) {
                    if (z.touches.length == 1) {
                        var H = z.target;
                        if (H != null && H.row === 0 || H != null && H.parentNode != null && H.parentNode.row === 0 || H != null && H.parentNode != null && H.parentNode.parentNode !=
                            null && H.parentNode.parentNode.row === 0) if (y.grid.t) return;
                        if (!(H != null && H.tagName == "INPUT" || H.tagName == "SELECT" || H.tagName == "TEXTAREA")) {
                            z = z.touches[0];
                            k.R = {};
                            k.R.reverse = H != k;
                            n.bC = H;
                            k.R.startY = z.pageY;
                            k.R.jn = k.R.startY;
                            k.R.startTime = (new Date).getTime();
                            k.R.$k = (new Date).getTime();
                            k.R.qp = null;
                            k.R.duration = null;
                            k.R.Rb = k.Gj != null ? k.Gj : parseInt(k.style.top);
                            D = z.pageX;
                            B = z.pageY;
                            I = null
                        }
                    }
                };
                gc(k, "touchstart", F);
                gc(y, "touchstart", F);
                F = function (z) {
                    if (z.touches.length == 1) if (k.R != null) {
                        k.style.opacity = 1;
                        var H =
                            z.touches[0], J = H.pageY, K = H.pageX - D, L = H.pageY - B;
                        D = H.pageX;
                        B = H.pageY;
                        if (I == null) I = Math.abs(K) - Math.abs(L) > 0;
                        K = H = false;
                        if (n.Fd) {
                            H = n.Fd.grid.Vu;
                            if (n.Fd.grid.nt) K = true
                        }
                        if (!I || H || K) {
                            L = (new Date).getTime();
                            k.R.duration = L - k.R.$k;
                            k.R.$k = L;
                            var N = n.sc / n.Md / 6;
                            if (N < 1) N = 1;
                            if (N > 40) N = 40;
                            k.R.qp = (J - k.R.jn) / N;
                            k.R.jn = J;
                            L = k.R.Rb;
                            J = J - k.R.startY;
                            if (k.R.reverse) J = -J;
                            J /= N;
                            L += J;
                            N = parseInt(r.style.top);
                            var O = N + parseInt(r.style.height) - parseInt(k.style.height);
                            if (O < N) O = N;
                            if (L < N) L = N;
                            if (L > O) L = O;
                            k.Gj = L;
                            k.style.top = parseInt(L) +
                                "px";
                            L = (L - N) / (O - N);
                            if (isNaN(L)) L = 0;
                            L = (n.sc - n.Md) * L;
                            L = Math.round(L) + 1;
                            n.doScroll(L);
                            L = true;
                            if (H || e(J, k.R.reverse)) L = false;
                            if (K && !H) L = true;
                            if (L) z.preventDefault(); else I = true
                        }
                    }
                };
                gc(k, "touchmove", F);
                gc(y, "touchmove", F);
                gc(y, "touchend", function () {
                    n.bC = null;
                    d(k.R)
                })
            }
        }
        if (Q == "genie" && !pui.Na) o.onscroll = n.doScroll;
        o.onmousedown = function (z) {
            if (n.Nl || n.Ol) {
                if (q.innerHTML != "") q.style.display = "";
                a()
            }
            n.designMode && S.ua(z)
        };
        o.onmouseup = function () {
            c(h)
        };
        o.appendChild(i);
        n.b.appendChild(o);
        r != null && n.b.appendChild(r);
        k != null && n.b.appendChild(k);
        n.b.appendChild(q)
    };
    this.xs = function () {
        gc(o, "scroll", n.doScroll)
    };
    this.doScroll = function (y) {
        if (n.ql) {
            var F = Math.round(o.scrollTop / s) + 1;
            if (n.Ar > 0 && (y == null || y.target != null)) F = n.Ar;
            if (w != null && v != null && y == null && t > 0) y = t;
            if (y != null && typeof y == "number") F = y;
            if (F != t) {
                y = F + n.Md - 1;
                if (n.Ol) q.innerHTML = pui.getLanguageText("runtimeText", "rows") + " " + F + " - " + y;
                if (n.Nl) q.innerHTML = pui.getLanguageText("runtimeText", "row") + " " + F;
                a();
                n.onchange != null && n.onchange(F);
                if (n.sq != null) {
                    f += 1;
                    if (f >
                        1E4) f = 10;
                    b(f, F)
                }
                t = F;
                y = n.Fd;
                if (y != null) {
                    y = y.grid.ut.onscroll;
                    if (y != null && y != "" && !n.designMode) try {
                        eval("row = " + F);
                        eval(y)
                    } catch (D) {
                        pui.qc(D, "onscroll Error:\n");
                        return false
                    }
                }
                if ((n.Nl || n.Ol) && n.sc > 1) {
                    q.style.display = "";
                    h += 1;
                    if (h > 1E4) h = 0;
                    a();
                    c(h)
                } else q.style.display = "none"
            }
        }
    };
    this.Gh = function (y, F) {
        if (k != null) {
            var D = parseInt(r.style.top), B = D + parseInt(r.style.height) - parseInt(k.style.height);
            if (B < D) B = D;
            D = parseInt((B - D) * ((y - 1) / (n.sc - n.Md))) + D;
            k.style.top = D + "px";
            t = y;
            return k.style.top != D + "px"
        } else {
            if (F) t =
                y; else n.Ar = y;
            D = o.scrollTop;
            o.scrollTop = (y - 1) * s;
            if (D != o.scrollTop) return true;
            n.Ar = null;
            return false
        }
    };
    this.Ip = function () {
        clearTimeout(n.ZF);
        n.ZF = setTimeout(function () {
            n.Ar = null
        }, n.interval)
    };
    this.H = function (y) {
        if (pui.is_old_ie) {
            s = 25;
            if (n.sc > 1E3) s = 50
        } else s = 19;
        if (k != null && r != null) {
            r.style.left = n.x - 5 + "px";
            r.style.top = n.y + "px";
            r.style.zIndex = n.zIndex;
            k.style.left = n.x - 5 + "px";
            if (t == -1) k.style.top = n.y + "px";
            k.style.zIndex = n.zIndex;
            o.style.visibility = "hidden";
            o.style.display = "none";
            r.style.display = "";
            k.style.display =
                ""
        } else {
            o.style.zIndex = n.zIndex;
            o.style.visibility = "";
            o.style.display = "";
            o.style.left = n.x + "px";
            o.style.top = n.y + "px"
        }
        var F = n.Md * n.cb - n.borderWidth;
        if (r != null) {
            r.style.height = F - 2 + "px";
            var D = (F - 2) * (n.sc <= 0 ? 1 : n.Md / n.sc);
            D = parseInt(D);
            if (D < 25 && F > 27) D = 25;
            if (D > F - 2) D = F - 2;
            k.style.height = D + "px"
        } else {
            o.style.height = F + "px";
            D = (n.sc - n.Md) * s + F;
            var B = 9999990;
            if (pui.is_old_ie) B = 1342177; else if (pui.is_ie) B = 1533917;
            for (; D > B && s > 1;) {
                s -= 1;
                D = (n.sc - n.Md) * s + F
            }
            if (D < 0) D = 0;
            if (D > 5 && D == F) D -= 5;
            i.style.height = D + "px"
        }
        a();
        r == null &&
        !y && n.doScroll();
        if (!n.designMode && n.ql && n.Md == 1) {
            E = i.style.height;
            i.style.height = "0px";
            o.style.overflow = "hidden";
            o.style.overflowX = "hidden";
            o.style.overflowY = "hidden";
            if (w == null && v == null && n.sc > 1) {
                w = document.createElement("img");
                w.style.position = "absolute";
                w.style.top = "0px";
                w.style.right = "0px";
                w.style.cursor = "pointer";
                w.src = pui.normalizeURL("/profoundui/proddata/images/up.gif");
                w.onclick = function () {
                    if (pui.De != null) pui.De.style.display = "none";
                    var I = t - 1;
                    if (I < 1) I = 1;
                    if (I > n.sc) I = n.sc;
                    n.doScroll(I)
                };
                v =
                    document.createElement("img");
                v.style.position = "absolute";
                v.style.bottom = "0px";
                v.style.right = "0px";
                v.style.cursor = "pointer";
                v.src = pui.normalizeURL("/profoundui/proddata/images/down.gif");
                v.onclick = function () {
                    if (pui.De != null) pui.De.style.display = "none";
                    if (t == -1) t = 1;
                    var I = t + 1;
                    if (I < 1) I = 1;
                    if (I > n.sc) I = n.sc;
                    n.doScroll(I)
                };
                o.appendChild(w);
                o.appendChild(v)
            }
        }
        if (!n.designMode && n.ql && n.Md > 1 && w != null && v != null && n.sc > 1) {
            o.removeChild(w);
            o.removeChild(v);
            v = w = null;
            i.style.height = E;
            o.style.overflow = "";
            o.style.overflowX =
                "hidden";
            o.style.overflowY = "scroll"
        }
    };
    this.Up = function (y) {
        if (r != null) r.style.height = parseInt(o.style.height) + y - 2 + "px"; else o.style.height = parseInt(o.style.height) + y + "px"
    };
    this.hr = function (y) {
        o.className = "pui-scrollbar";
        if (n.Fd.grid && y) o.className += " " + y + "-pui-scrollbar"
    };
    this.hide = function () {
        o.style.visibility = "hidden";
        o.style.display = "none";
        q.style.display = "none";
        q.style.visibility = "hidden";
        if (k != null && r != null) {
            r.style.display = "none";
            k.style.display = "none"
        }
    };
    this.destroy = function () {
        o.parentNode !=
        null && o.parentNode.removeChild(o);
        i.parentNode != null && i.parentNode.removeChild(i);
        q.parentNode != null && q.parentNode.removeChild(q)
    };
    this.OF = function (y) {
        function F(I) {
            var z = 0;
            if (!I) I = window.event;
            if (I.wheelDelta) {
                z = I.wheelDelta / 120;
                if (window.opera) z = -z
            } else if (I.detail) z = -I.detail / 3;
            B(z, I)
        }

        function D(I) {
            var z = 0;
            if (pui.is_firefox) z = I.deltaY / -3; else if (pui.is_ie) z = I.deltaY / -144; else if (pui.is_chrome) z = I.deltaY / -100; else if (pui.is_safari) z = I.deltaY / -4; else if (typeof I.deltaY == "number" && (I.deltaY > 0 || I.deltaY <
                0)) z = I.deltaY / I.deltaY * -1;
            B(z, I)
        }

        function B(I, z) {
            if (I) if (k == null) o.scrollTop -= I * s;
            var H = false;
            if (z.preventDefault) H = true;
            if (n.Fd && (n.Fd.grid.Vu || e(I))) H = false;
            if (H) {
                z.preventDefault();
                z.returnValue = false
            }
        }

        if (!l) {
            l = true;
            if (typeof WheelEvent == "function") y.addEventListener("wheel", D, false); else {
                y.addEventListener && y.addEventListener("DOMMouseScroll", F, false);
                y.onmousewheel = F
            }
        }
    };
    this.Ng = function (y) {
        n.b = y;
        o.parentNode.removeChild(o);
        n.b.appendChild(o)
    }
};
pui.RC = function () {
    this.y = this.x = 0;
    this.height = 300;
    this.zIndex = 100;
    this.designMode = this.Qd = this.me = false;
    this.zn = this.An = this.b = null;
    this.type = "paging";
    this.ql = false;
    var b = this, a = false, c = false, d = false, e = 0, f, h;
    this.init = function () {
        f = document.createElement("div");
        f.style.position = "absolute";
        f.style.width = "23px";
        f.style.overflowY = "scroll";
        f.style.overflowX = "hidden";
        f.style.padding = "0px";
        h = document.createElement("div");
        h.style.position = "absolute";
        h.style.left = "0px";
        h.style.top = "0px";
        h.innerHTML = "&nbsp;";
        h.fontSize = "0px";
        f.onmousedown = function (g) {
            b.designMode && S.ua(g)
        };
        f.onscroll = function () {
            var g = parseInt(b.height / 2);
            if (b.designMode || b.me && b.Qd) f.scrollTop = g; else if (a) a = false; else if (d) {
                a = true;
                f.scrollTop = b.height * 2
            } else if (c) {
                a = true;
                f.scrollTop = 0
            } else if (b.Qd && !b.me) {
                if (b.An != null) {
                    g = b.An();
                    if (g == false) {
                        b.H();
                        return
                    }
                }
                a = c = true;
                f.scrollTop = 0
            } else if (b.me && !b.Qd) {
                if (b.zn != null) {
                    g = b.zn();
                    if (g == false) {
                        b.H();
                        return
                    }
                }
                a = d = true;
                f.scrollTop = b.height * 2
            } else if (f.scrollTop > g) {
                if (b.zn != null) {
                    g = b.zn();
                    if (g == false) {
                        b.H();
                        return
                    }
                }
                a = d = true;
                f.scrollTop = b.height * 2
            } else {
                if (b.An != null) {
                    g = b.An();
                    if (g == false) {
                        b.H();
                        return
                    }
                }
                a = true;
                f.scrollTop = 0;
                c = true
            }
        };
        f.appendChild(h);
        b.b.appendChild(f)
    };
    this.H = function () {
        a = true;
        f.style.zIndex = b.zIndex;
        f.style.visibility = "";
        var g = b.x, l = b.y, n = b.height;
        if (n < 0) n = 0;
        e = parseInt(n / 2);
        f.style.left = g + "px";
        f.style.top = l + "px";
        f.style.height = n + "px";
        h.style.height = n * 2 + "px";
        g = b.Qd && !b.me ? n * 2 : b.me && !b.Qd ? 0 : e;
        if (!b.grid.Vx) f.scrollTop = g
    };
    this.reset = function () {
        d = c = false
    };
    this.hide = function () {
        f.style.visibility =
            "hidden"
    };
    this.destroy = function () {
        f.parentNode != null && f.parentNode.removeChild(f);
        h.parentNode != null && h.parentNode.removeChild(h)
    };
    this.Ng = function (g) {
        b.b = g;
        f.parentNode.removeChild(f);
        b.b.appendChild(f)
    }
};
pui.FC = function () {
    function b() {
        for (; d.rows.length > 0;) d.deleteRow(d.rows.length - 1);
        e && e.parentNode.removeChild(e);
        var h = "";
        if (Ja == "ON") h = "https://" + HTTP_HOST;
        h += "/profoundui/proddata/images/";
        var g = [], l = [], n = [], o = [];
        if (a.grid.sortable) {
            if (a.Hf.tr != null) {
                g.push(pui.getLanguageText("runtimeText", "sort ascending text"));
                n.push("icons/sort_ascending.png");
                o.push(function () {
                    a.Hf.tb = true;
                    if (a.grid.g.xl != null) a.grid.Li = "A";
                    a.Hf.tr()
                });
                g.push(pui.getLanguageText("runtimeText", "sort descending text"));
                n.push("icons/sort_descending.png");
                o.push(function () {
                    a.Hf.tb = false;
                    if (a.grid.g.xl != null) a.grid.Li = "D";
                    a.Hf.tr()
                })
            }
            g.push(pui.getLanguageText("runtimeText", "sort..."));
            n.push("icons/grid.png");
            o.push(a.grid.GB)
        }
        if (g.length > 0 && (a.grid.yt || a.grid.Km)) {
            g.push("-");
            n.push(null);
            o.push(null)
        }
        if (a.grid.yt) {
            g.push(pui.getLanguageText("runtimeText", "find text") + "...");
            n.push("icons/search.png");
            o.push(function () {
                a.grid.startFind(a.Hf)
            })
        }
        if (a.grid.Km && (!a.grid.Co() || a.grid.Dy() < a.grid.Wg)) {
            g.push(pui.getLanguageText("runtimeText", "filter text") +
                "...");
            n.push("icons/filter.png");
            o.push(function () {
                a.grid.startFilter(a.Hf)
            })
        }
        if (a.grid.Km && a.Hf.te != null) {
            g.push(pui.getLanguageText("runtimeText", "remove filter"));
            n.push("icons/remove_filter.png");
            o.push(function () {
                a.grid.removeFilter(a.Hf)
            })
        }
        if (a.grid.Km && a.grid.Dy() > 1) {
            g.push(pui.getLanguageText("runtimeText", "remove filters text"));
            n.push("icons/remove_filter.png");
            o.push(function () {
                a.grid.removeAllFilters()
            })
        }
        if (a.grid.TA) {
            g.push(pui.getLanguageText("runtimeText", "reset data"));
            n.push("icons/default.png");
            o.push(function () {
                var y = a.grid.cells[0][0].parentNode.pui.properties;
                a.grid.alignColumnTotals();
                if (a.grid.Db) {
                    var F = y["column headings"].split(","), D = a.grid.vb.map(function (z) {
                        z.showing || a.grid.Zt(z, true)
                    });
                    if (a.grid.vb.vm) a.grid.vb.vm = null;
                    for (; F.length < D.length;) F.push("")
                }
                D = a.grid.cells[0];
                for (var B = 0; B < D.length; B++) {
                    var I = D[B];
                    I.col != I.T && a.grid.moveColumn(I.col, I.T)
                }
                a.grid.Oi(y["column widths"]);
                a.grid.cc();
                a.grid.zd = null;
                if (y["expand to layout"] == "true" || y["expand to layout"] == true) a.grid.cd();
                if (a.grid.wb()) a.grid.je = a.grid.kh;
                if (F) a.Ac = F;
                a.grid.ie();
                a.grid.removeAllFilters();
                a.grid.clearState()
            })
        }
        if (a.grid.Db) {
            n.push("icons/grid.png");
            g.push(pui.getLanguageText("runtimeText", "displayed columns"));
            var i = a.grid.vb;
            if (a.grid.Sz && i.vm) {
                var r = [];
                i.filter(function (y) {
                    if (y.currentColumn == -1 && !y.showing) {
                        r.push(y);
                        return false
                    }
                    return true
                }).sort(function (y, F) {
                    var D = y.currentColumn, B = F.currentColumn, I = false, z = false;
                    if (D == -1) {
                        I = true;
                        D = a.grid.ty(y.columnId)
                    }
                    if (B == -1) {
                        z = true;
                        B = a.grid.ty(F.columnId)
                    }
                    if (D ==
                        B) return I && !z ? 1 : -1;
                    return D > B ? 1 : -1
                }).forEach(function (y) {
                    l.push(y)
                });
                r.forEach(function (y) {
                    l.push(y)
                })
            } else i.forEach(function (y) {
                l.push(y)
            });
            o.push(function (y) {
                a.grid.alignColumnTotals();
                return a.grid.Zt(y)
            })
        }
        if (a.grid.vt == true || a.grid.vt == null && a.grid.A != null && a.grid.A.mj) {
            if (g.length > 0 && g[g.length - 1] != "-") {
                g.push("-");
                n.push(null);
                o.push(null)
            }
            g.push(pui.getLanguageText("runtimeText", "export to x", ["Excel (CSV)"]) + "...");
            n.push("grids/excel.gif");
            o.push(function () {
                a.grid.exportCSV()
            });
            g.push(pui.getLanguageText("runtimeText",
                "export to x", ["Excel (XLSX)"]) + "...");
            n.push("grids/excel.gif");
            o.push(function () {
                a.grid.exportCSV(null, true)
            })
        }
        for (i = 0; i < g.length; i++) {
            var k = d.insertRow(i);
            k.style.color = "#333333";
            if (g[i] == "-") {
                k = k.insertCell(0);
                k.colSpan = 2;
                var q = document.createElement("div");
                q.style.backgroundColor = "#e0e0e0";
                q.style.borderBottomColor = "#ffffff";
                q.style.borderBottomWidth = "1px";
                q.style.borderBottomStyle = "solid";
                q.style.height = "1px";
                q.style.lineHeight = "1px";
                q.style.fontSize = "1px";
                q.style.paddingTop = "0px";
                q.style.paddingBottom =
                    "0px";
                q.style.width = "100%";
                k.appendChild(q)
            } else {
                k.style.cursor = "pointer";
                k.style.padding = "3px";
                k.xq = o[i];
                if (g[i] != pui.getLanguageText("runtimeText", "displayed columns")) {
                    k.onclick = function (y) {
                        vb(y).parentNode.xq();
                        a.hide()
                    };
                    k.iu = false
                }
                k.onmouseover = function (y) {
                    y = vb(y).parentNode;
                    if (y.tagName == "TD") y = y.parentNode;
                    y.style.backgroundColor = "#3399ff";
                    y.style.color = "#ffffff";
                    a.grid.Db && this.iu && a.JB()
                };
                k.onmouseout = function (y) {
                    if (a.grid.Db && this.iu) if (y) {
                        var F = y.relatedTarget || y.BM;
                        if (F && F == c) return;
                        a.$t()
                    }
                    y =
                        vb(y).parentNode;
                    if (y.tagName == "TD") y = y.parentNode;
                    y.style.backgroundColor = "";
                    y.style.color = "#333333"
                };
                q = k.insertCell(0);
                q.style.width = "20px";
                var s = n[i];
                if (s != null) {
                    q.style.backgroundImage = "url('" + h + s + "')";
                    q.style.backgroundPosition = "center";
                    q.style.backgroundRepeat = "no-repeat"
                }
                q.style.padding = "3px";
                q = k.insertCell(1);
                if (g[i] == pui.getLanguageText("runtimeText", "displayed columns")) {
                    s = document.createElement("div");
                    var t = document.createElement("table");
                    t.border = 0;
                    t.cellPadding = 3;
                    t.cellSpacing = 0;
                    q.innerHTML =
                        g[i];
                    var u = document.createElement("img");
                    u.src = pui.normalizeURL("/profoundui/proddata/images/menus/submenu-arrow.gif");
                    u.style.position = "absolute";
                    u.style.right = "3px";
                    u.style.paddingTop = "3px";
                    u.lu = true;
                    q.appendChild(u);
                    for (u = 0; u < l.length; u++) {
                        var w = l[u], v = t.insertRow(u);
                        v.style.color = "#333333";
                        v.style.padding = "3px";
                        v.style.cursor = "pointer";
                        v.onmouseover = function (y) {
                            y = vb(y).parentNode;
                            if (y.tagName == "TD") y = y.parentNode;
                            y.style.backgroundColor = "#3399ff";
                            y.style.color = "#ffffff"
                        };
                        v.onmouseout = function (y) {
                            y =
                                vb(y).parentNode;
                            if (y.tagName == "TD") y = y.parentNode;
                            y.style.backgroundColor = "";
                            y.style.color = "#333333"
                        };
                        v.xq = k.xq;
                        v.col = w;
                        v.insertCell(0).innerHTML = '<input type="checkbox" style="transform:scale(1.25); cursor:pointer;"' + (w.showing ? "checked" : "") + "/>";
                        var E = v.insertCell(1);
                        E.innerHTML = w.name;
                        E.style.fontFamily = "Sans-serif";
                        E.style.fontSize = "12px";
                        E.style.padding = "3px 6px 3px 3px";
                        E.style.whiteSpace = "normal";
                        v.style.top = (u + 1) * 25 + "px";
                        v.onmousedown = function (y) {
                            f = true;
                            y = vb(y);
                            var F = this.getElementsByTagName("input")[0],
                                D = this.xq(this.col);
                            if (y.tagName != "INPUT" && D) F.checked = F.checked ? false : true
                        }
                    }
                    k.onclick = function () {
                        this.tL.add("active-item")
                    };
                    k.iu = true;
                    s.row = k;
                    s.appendChild(t);
                    s.className = "pui-hide-show-columns-list";
                    s.onmouseover = function () {
                        f = true;
                        a.JB()
                    };
                    s.onmouseout = function () {
                        f = false
                    };
                    if (a.grid.g) s.Qz = (u + 1) * 25;
                    e = s;
                    a.$t()
                } else q.innerHTML = g[i];
                q.style.fontFamily = "Sans-serif";
                q.style.fontSize = "12px";
                q.style.padding = "3px";
                q.style.whiteSpace = "normal"
            }
        }
        return g.length
    }

    var a = this, c, d, e, f = false;
    this.Hf = this.clickEvent =
        this.grid = null;
    this.init = function () {
        gc(document, "mousedown", function (h) {
            if (a != null) {
                for (h = vb(h); h != null;) {
                    if (h == c) return;
                    if (h == a.Hf) return;
                    if (f) return;
                    h = h.parentNode
                }
                a.hide()
            }
        });
        c = document.createElement("div");
        c.style.position = "absolute";
        c.style.border = "1px solid #718bb7";
        c.style.backgroundColor = "#f0f0f0";
        c.style.zIndex = a.grid.Ax;
        c.onselectstart = za(false);
        c.oncontextmenu = za(false);
        if (typeof c.style.MozUserSelect != "undefined") c.style.MozUserSelect = "none";
        d = document.createElement("table");
        d.border =
            0;
        d.cellPadding = 3;
        d.cellSpacing = 0;
        d.style.width = "175px";
        a.hide();
        c.appendChild(d);
        a.grid.b.appendChild(c)
    };
    this.show = function () {
        if (b() == 0) a.hide(); else {
            var h = 0, g = 0;
            if (a.toolbar != null) {
                h = a.toolbar.h.offsetLeft + 119;
                g = a.toolbar.h.offsetTop + 47;
                if (a.toolbar.h.offsetTop > a.Hd.length * 22 - 45) g = g - a.Hd.length * 22 + 1
            }
            if (a.clickEvent != null) {
                h = pui.Pk(a.clickEvent);
                g = pui.Sm(a.clickEvent);
                var l = document.body.scrollWidth - 185, n = {x: 0, y: 0}, o = a.grid.g.parentNode;
                if (Q == "dspf") if (o.getAttribute("container") == "true") {
                    n = pui.layout.ec(o);
                    n.x += pui.runtimeContainer.offsetLeft;
                    n.y += pui.runtimeContainer.offsetTop;
                    var i = o.offsetLeft + o.offsetWidth;
                    if (i > 0 && (o.style.overflowX == "hidden" || o.style.overflow == "hidden")) {
                        l = i - 185;
                        i = o.parentNode;
                        if (i != null) {
                            if (i.scrollLeft > 0) l += i.scrollLeft;
                            if (i.style.overflowY == "scroll" || i.style.overflowY == "auto") l -= 10
                        }
                    }
                    i = pui.getActiveContainer();
                    if (i != null && i.ze === true) {
                        n.x += i.offsetLeft;
                        n.y += i.offsetTop
                    }
                    if (e) {
                        o = o.getBoundingClientRect().height;
                        e.Tt = o
                    }
                } else {
                    o = pui.Xe(o);
                    n.x = o[0];
                    n.y = o[1];
                    if (e) e.Tt = window.innerHeight
                } else {
                    o =
                        pui.Xe(o);
                    n.x = o[0];
                    n.y = o[1]
                }
                g -= n.y;
                h -= n.x;
                if (h > l) h = l
            }
            c.style.left = h + "px";
            c.style.top = g + "px";
            c.style.display = "";
            if (e) {
                a.grid.b.appendChild(e);
                e.style.display = "";
                e.style.top = g + e.row.offsetTop + "px";
                if (e.Tt && e.Qz) {
                    g = e.Tt;
                    if (e.Qz > g / 2) {
                        e.style.height = g / 2 + "px";
                        e.style.overflowY = "scroll"
                    } else {
                        e.style.overflowY = "initial";
                        e.style.height = "auto"
                    }
                }
                if (c.offsetLeft === l || h + c.offsetWidth > l) {
                    h = e.offsetWidth;
                    e.style.left = c.offsetLeft - e.offsetWidth + "px";
                    if (e.offsetWidth !== h) e.style.left = c.offsetLeft - e.offsetWidth + "px"
                } else e.style.left =
                    c.offsetLeft + c.offsetWidth + "px";
                e.style.display = "none"
            }
        }
    };
    this.hide = function () {
        c.style.display = "none";
        e && a.$t()
    };
    this.$t = function () {
        e.style.display = "none"
    };
    this.JB = function () {
        e.style.display = ""
    };
    this.destroy = function () {
        if (c != null) {
            c.parentNode != null && c.parentNode.removeChild(c);
            e && e.parentNode != null && e.parentNode.removeChild(e);
            d = e = c = null;
            a.clickEvent = null;
            a = a.grid = null
        }
    }
};
pui.DC = function () {
    var b = this, a, c, d, e = null, f = [16, 17, 18, 35, 36, 37, 38, 39, 40];
    this.type = this.Kp = this.grid = this.b = null;
    this.interval = 100;
    this.init = function () {
        a = document.createElement("div");
        a.className = "pui-find-filter";
        a.style.display = "none";
        c = document.createElement("div");
        c.className = "pui-find-filter-content";
        d = document.createElement("input");
        d.className = "pui-find-filter-box";
        gc(d, "keyup", function (h) {
            if (!h) h = window.event;
            h = h.keyCode;
            if (h != 13) if (!(pui.ic(f, h) >= 0)) if (b.type != "pgfilter") {
                var g = d.value;
                if (typeof b.ph ===
                    "function") {
                    clearTimeout(e);
                    e = setTimeout(function () {
                        b.ph(g)
                    }, b.interval)
                }
            }
        });
        gc(d, "keydown", function (h) {
            if (!h) h = window.event;
            var g = h.keyCode;
            if (g == 13) {
                if (b.type == "find") typeof b.ph === "function" && b.ph(d.value, true); else if (b.type == "filter") {
                    b.grid.Ya.text = "";
                    b.grid.getData();
                    b.hide()
                } else b.type == "pgfilter" && typeof b.ph === "function" && b.ph(d.value);
                yb(h)
            } else if (g == 27) {
                b.grid.Ya.text = "";
                b.grid.getData();
                b.hide();
                yb(h)
            }
        });
        gc(d, "paste", function () {
            b.type != "pgfilter" && setTimeout(function () {
                var h = d.value;
                if (typeof b.ph === "function") {
                    clearTimeout(e);
                    e = setTimeout(function () {
                        b.ph(h)
                    }, b.interval)
                }
            })
        });
        gc(d, "blur", function () {
            b.grid.Ya.text = "";
            b.grid.getData();
            b.hide()
        });
        c.appendChild(d);
        a.appendChild(c);
        b.b.appendChild(a)
    };
    this.show = function () {
        a.style.display = ""
    };
    this.hide = function () {
        a.style.display = "none"
    };
    this.uA = function (h) {
        var g = h.parentNode;
        if (g != null) {
            var l = g.parentNode;
            if (l != null) {
                var n;
                n = g.offsetLeft + h.offsetLeft;
                g = g.offsetTop - 40;
                h = h.offsetWidth;
                var o = pui.getActiveContainer();
                if (o != null && o.ze ===
                    true) {
                    n += o.offsetLeft;
                    g += o.offsetTop
                }
                if (l.getAttribute("container") == "true") {
                    l = pui.layout.ec(l);
                    g += l.y;
                    n += l.x
                }
                b.setPosition(n, g, h)
            }
        }
    };
    this.Ng = function (h) {
        if (b.b !== h) {
            b.b.removeChild(a);
            b.b = h;
            h.appendChild(a)
        }
    };
    this.setPosition = function (h, g, l) {
        if (l == null) l = 200;
        var n = l - 15;
        if (n < 20) n = 20;
        a.style.left = h + "px";
        a.style.top = g + "px";
        a.style.width = l + "px";
        d.style.width = n + "px"
    };
    this.oB = function (h) {
        d.placeholder = h
    };
    this.focus = function () {
        d.focus()
    };
    this.clear = function () {
        d.value = ""
    };
    this.setText = function (h) {
        d.value =
            h
    }
};
pui.EC = function () {
    function b(A, C) {
        var G = m.dataArray;
        if (C && m.isFiltered()) G = m.Cb;
        var M = G[A - 1];
        if (typeof m.Le != "undefined" && m.Le === true || m.isFiltered()) {
            M = null;
            for (var P = 0; P < G.length; P++) if (G[P].P == A) {
                M = G[P];
                break
            }
        }
        return M
    }

    function a(A) {
        for (var C = null, G = 0; G < m.eb.length; G++) if (A == m.eb[G]) {
            C = G;
            break
        }
        return C
    }

    function c(A, C, G) {
        G = String(G);
        if (A.properties[C] != G) {
            if (pui.f(A.properties[C])) {
                if (C == "top" || C == "left") A.properties[C].designValue = G
            } else A.properties[C] = G;
            A.m[C] = true;
            A.ta = true;
            return A.designer.X[A.designer.i.l] =
                true
        }
        return false
    }

    function d(A) {
        var C = document.createElement("div");
        C.style.position = "absolute";
        C.style.border = "1px solid #0000ff";
        if (pui.is_old_ie && pui.is_quirksmode) {
            C.style.height = "6px";
            C.style.width = "6px";
            C.style.padding = "0px"
        } else {
            C.style.height = "3px";
            C.style.width = "3px";
            C.style.padding = "1px"
        }
        C.style.fontSize = "0px";
        C.style.backgroundColor = "#dddddd";
        C.style.cursor = A + "-resize";
        C.style.zIndex = S.kw;
        C.style.visibility = "hidden";
        C.gn = true;
        S.W(C, "mousedown", function (G) {
            function M(fa) {
                var ba = S.getY(fa) -
                    ca;
                fa = S.getX(fa) - W;
                var ha = 0, na = 0;
                if (A == "sw" || A == "se") ha = m.v.length - 1;
                if (A == "ne" || A == "se") na = m.B.length - 1;
                K(fa, ba, ha, false, m.v[ha].Rb, m.v[ha].Jc);
                K(fa, ba, na, true, m.B[na].Rb, m.B[na].Jc);
                if ((A == "sw" || A == "se") && m.v.length > 2) {
                    ba = ba;
                    if (ba < -m.cb + 5) ba = -m.cb + 5;
                    typeof m.s.Up == "function" && m.s.Up(ba)
                }
                T.set(m.g.c)
            }

            function P() {
                S.wd(document, "mousemove", M);
                S.wd(document, "mouseup", P);
                if ((A == "sw" || A == "se") && (m.v.length >= 3 || m.t && m.v.length == 2)) {
                    var fa = parseInt(m.v[m.v.length - 1].style.top);
                    if (m.cells.length > (m.t ? 2 :
                        1)) {
                        m.vl();
                        if (fa > parseInt(m.v[m.v.length - 1].style.top) + m.cb - 3) {
                            for (var ba = false; parseInt(m.v[m.v.length - 1].style.top) < fa;) {
                                m.Kg();
                                ba = true
                            }
                            ba && m.Kj()
                        }
                    } else m.cb = parseInt(m.v[m.v.length - 1].style.top) - parseInt(m.v[m.v.length - 2].style.top)
                }
                m.cd();
                m.Od();
                T.hide()
            }

            var T = pui.designer.gf;
            if (T.b == null) {
                T.b = document.body;
                T.init()
            }
            T.set(m.g.c);
            T.show();
            m.g.c.designer.hh();
            if (!m.xi) if (!(m.v.length < 1 || m.B.length < 1)) {
                var W = S.getX(G), ca = S.getY(G);
                m.v[0].Rb = parseInt(m.v[0].style.top);
                m.v[0].Jc = parseInt(m.v[0].style.left);
                m.B[0].Rb = parseInt(m.B[0].style.top);
                m.B[0].Jc = parseInt(m.B[0].style.left);
                m.v[m.v.length - 1].Rb = parseInt(m.v[m.v.length - 1].style.top);
                m.v[m.v.length - 1].Jc = parseInt(m.v[m.v.length - 1].style.left);
                m.B[m.B.length - 1].Rb = parseInt(m.B[m.B.length - 1].style.top);
                m.B[m.B.length - 1].Jc = parseInt(m.B[m.B.length - 1].style.left);
                S.W(document, "mousemove", M);
                S.W(document, "mouseup", P);
                var aa = m.g.c.designer;
                aa.n.start("Size Grid");
                aa.selection.Qh(["left", "top", "number of rows", "header height", "column widths"]);
                S.ua(G)
            }
        });
        m.b.appendChild(C);
        return C
    }

    function e() {
        var A = "", C = m.Dn["padding bottom"];
        if (C == null || C == "") C = "0px";
        A += "padding-bottom:" + C + ";";
        C = m.Dn["padding left"];
        if (C == null || C == "") C = "4px";
        A += "padding-left:" + C + ";";
        C = m.Dn["padding right"];
        if (C == null || C == "") C = "4px";
        A += "padding-right:" + C + ";";
        C = m.Dn["padding top"];
        if (C == null || C == "") C = "0px";
        A += "padding-top:" + C + ";";
        return A
    }

    function f(A, C) {
        function G() {
            m.Tl || k(A)
        }

        if (!pui.pb) A.style.cursor = "pointer";
        gc(A, "click", G);
        A.tr = G;
        if (typeof A.QB === "undefined") A.tb = !o(C)
    }

    function h() {
        if (wb !=
            false) {
            var A = E();
            if (A != null) if (A.cols == null || A.cols != Lb) y({}); else return A
        }
    }

    function g() {
        var A = h();
        if (A != null) {
            if (m.sortable && m.g.kj == null && m.g.ei == null) {
                var C = A.sort;
                if (C != null && C.columnId != null && C.descending != null) {
                    for (var G, M = 0; M < m.cells[0].length; M++) if (m.cells[0][M].T == C.columnId) {
                        G = m.cells[0][M];
                        G.tb = !C.descending;
                        G.QB = true
                    }
                    k(G, true)
                } else if (C != null && C.multiSort instanceof Array) {
                    n(C.multiSort);
                    k(null, true)
                }
            }
            C = A.filters;
            if (C != null) for (M = 0; M < C.length; M++) {
                G = A.filters[M].text;
                var P = m.cells[0][ka(A.filters[M].column)];
                if (P == null) return;
                if (G != null && G != "") {
                    m.Ya.T = P.T;
                    m.Ya.col = P.col;
                    m.Ya.text = G;
                    m.jr(P);
                    P.dc = G
                } else {
                    m.Ya.text = null;
                    m.Kq(P);
                    P.dc = null
                }
            }
        }
    }

    function l(A, C) {
        for (var G = 0; G < A.length; G++) for (var M = 0; M < m.cells[0].length; M++) {
            var P = m.cells[0][M];
            if (C(A[G], P, G)) {
                eb.push(P);
                break
            }
        }
    }

    function n(A) {
        eb = [];
        l(A, function (C, G) {
            if (G.T !== C.columnId) return false;
            G.tb = C.descending;
            return G.QB = true
        })
    }

    function o(A) {
        var C = null;
        if (m.Sg.length == 0) return false;
        C = m.Sg.length == 1 ? m.Sg[0] : m.Sg[A];
        if (C == null) return false;
        if (C.length < 1) return false;
        C = C.substr(0, 1).toUpperCase();
        return C == "D" ? true : false
    }

    function i() {
        for (var A = m.cells[0], C = 0; C < A.length; C++) A[C].tb = !o(A[C].T)
    }

    function r(A, C, G) {
        m.Gd != null && m.Gd.hide();
        if (!(A == null && eb.length < 1)) {
            var M;
            if (A != null) {
                M = A.tb;
                i();
                if (M == null) M = true
            }
            var P;
            if (Hb !== undefined) try {
                P = new Function("value1, value2, fieldName, isDescending, fieldDateFormat, fieldFormat, multiFields", Hb)
            } catch (T) {
                if (T) {
                    console.log("Sort function error: ");
                    console.error(T)
                }
            }
            if (m.g.kj == null && m.g.ei == null) {
                if (A != null) cb = A.T;
                pui.Bg =
                    {};
                if (!m.Le) for (var W = 0; W < m.dataArray.length; W++) m.dataArray[W].P = W + 1;
                for (W = 0; W < m.dataArray.length; W++) m.dataArray[W].Gs = W;
                m.Le = true;
                v();
                var ca = "", aa = null, fa = {}, ba = null, ha = function (wa) {
                    if (typeof wa.fieldName === "string") ca = wa.fieldName.toUpperCase();
                    if (wa.dateFormat) aa = wa.dateFormat;
                    if (wa.hy) fa = wa.hy
                };
                if (A != null) ha(A); else if (Hb !== undefined || typeof pui.gridSort == "function") {
                    ba = [];
                    for (W = 0; W < eb.length; W++) {
                        ha(eb[W]);
                        ba.push({fieldName: ca, fieldDateFormat: aa, fieldFormat: fa})
                    }
                }
                W = function (wa, ta) {
                    function Aa(Ya,
                                lb, Jb) {
                        Ga = wa[Ya];
                        Pa = ta[Ya];
                        if (lb == "zoned" || lb == "floating") {
                            Ga = Number(Ga);
                            Pa = Number(Pa)
                        } else if (lb == "reference") {
                            Ya = m.ref[Jb];
                            if (Ya != null) if (Ya.dataType == 7 || Ya.dataType == 9 || Ya.dataType == 10) {
                                Ga = Number(Ga);
                                Pa = Number(Pa)
                            }
                        } else if (lb == "graphic") {
                            Ga = pui.formatting.Hk(Ga);
                            Pa = pui.formatting.Hk(Pa)
                        }
                    }

                    var Ga, Pa;
                    if (A != null) Aa(A.Mv, A.dataType, A.fieldName); else {
                        for (var Ua = false, Za, rb, Ra = 0; Ra < eb.length; Ra++) {
                            var Sa = eb[Ra];
                            Aa(Sa.Mv, Sa.dataType, Sa.fieldName);
                            if (Hb !== undefined || typeof pui.gridSort == "function") {
                                ba[Ra].value1 =
                                    Ga;
                                ba[Ra].value2 = Pa
                            }
                            if (!Ua && Ga != Pa) {
                                M = !Sa.tb;
                                Za = Ga;
                                rb = Pa;
                                Ua = true
                            }
                        }
                        if (M == null) M = true;
                        if (Za != null) Ga = Za;
                        if (rb != null) Pa = rb
                    }
                    return typeof P == "function" ? na(P, Ga, Pa, ca, M, aa, fa, ba) : typeof pui.gridSort == "function" ? na(pui.gridSort, Ga, Pa, ca, M, aa, fa, ba) : M && Ga < Pa || !M && Ga > Pa ? -1 : Ga == Pa ? M && wa.P < ta.P || !M && wa.P > ta.P ? -1 : 1 : 1
                };
                var na = function (wa, ta, Aa, Ga, Pa, Ua, Za, rb) {
                    wa = wa(ta, Aa, Ga, Pa, Ua, Za, rb);
                    if (typeof wa != "number") wa = 0;
                    if (wa > 0) return Pa ? -1 : 1;
                    if (wa < 0) return Pa ? 1 : -1;
                    return 0
                };
                m.dataArray.sort(W);
                m.isFiltered() && m.Cb.sort(W);
                ha = [];
                for (W = 0; W < m.dataArray.length; W++) ha[m.dataArray[W].Gs] = W;
                W = pui.Wb(m.Sf) + ".";
                for (var sa in pui.Ua) if (sa.substr(0, W.length) == W) if (sa.substr(W.length).split(".").length == 2) {
                    var xa = pui.Ua[sa][0];
                    xa.Dd = ha[xa.Dd]
                }
                m.w = 1;
                if (m.pr > 0 && (C || G)) for (W = 0; W < m.dataArray.length; W++) if (m.dataArray[W].P == m.pr) {
                    m.w = W + 1;
                    break
                }
                m.s != null && m.s.type == "sliding" && m.s.Gh(m.w);
                m.getData()
            }
            if (A != null) {
                M = !M;
                A.tb = M;
                s(A, M)
            } else {
                q();
                w()
            }
            if (wb && !C) {
                C = {};
                if (A != null) {
                    C.columnId = A.T;
                    C.descending = A.tb
                } else if (eb.length > 0) {
                    C.multiSort =
                        [];
                    for (W = 0; W < eb.length; W++) C.multiSort.push({columnId: eb[W].T, descending: eb[W].tb})
                }
                y(C, "sort")
            }
        }
    }

    function k(A, C) {
        m.Gd != null && m.Gd.hide();
        if (!(A == null && eb.length < 1)) {
            var G;
            if (A != null) {
                cb = A.T;
                G = A.tb;
                i();
                if (G == null) G = true
            }
            if (A != null) {
                m.je = A.T + 1;
                if (G = !G) m.je += " DESC"
            } else {
                m.je = "";
                for (var M = 0; M < eb.length; M++) {
                    G = eb[M].tb;
                    m.je += (M > 0 ? ", " : "") + (eb[M].T + 1) + (G ? " DESC" : "")
                }
            }
            m.Le = true;
            if (!C) {
                m.s != null && m.s.type == "sliding" && m.s.Gh(1);
                m.w = 1;
                m.mask();
                m.getData()
            }
            if (A != null) {
                A.tb = G;
                s(A, G)
            } else {
                q();
                w()
            }
            if (wb && !C) {
                if (A !=
                    null) {
                    var P = {};
                    P.columnId = A.T;
                    P.descending = A.tb
                } else if (eb.length > 0) {
                    P = {};
                    P.multiSort = [];
                    for (M = 0; M < eb.length; M++) P.multiSort.push({columnId: eb[M].T, descending: eb[M].tb})
                }
                y(P, "sort")
            }
        }
    }

    function q() {
        m.zd != null && m.zd.parentNode != null && m.zd.parentNode.removeChild(m.zd)
    }

    function s(A, C) {
        u();
        if (m.zd == null) {
            m.zd = document.createElement("img");
            m.zd.style.paddingLeft = "3px"
        } else m.zd.parentNode != null && m.zd.parentNode.removeChild(m.zd);
        m.zd.src = pui.normalizeURL("/profoundui/proddata/images/grids/") + (C ? "descending.gif" :
            "ascending.gif");
        t(A, m.zd)
    }

    function t(A, C) {
        var G = A;
        if (G.firstChild != null && G.firstChild.tagName == "DIV") G = G.firstChild;
        G.appendChild(C)
    }

    function u() {
        for (var A = 0; A < m.cells[0].length; A++) {
            var C = m.cells[0][A];
            if (C.Ee != null) C.Ee.style.display = "none"
        }
    }

    function w() {
        u();
        for (var A = 0; A < eb.length; A++) {
            var C = eb[A];
            if (C.Ee == null) {
                C.Ee = document.createElement("img");
                C.Ee.style.paddingLeft = "3px";
                C.Ee.style.cursor = "pointer";
                C.Ee.onclick = function (G) {
                    if (!pui.Ae(G)) {
                        yb(G);
                        m.GB()
                    }
                };
                t(C, C.Ee)
            }
            C.Ee.src = pui.normalizeURL("/profoundui/proddata/images/grids/" +
                (C.tb === true ? "descending.gif" : "ascending.gif"));
            C.Ee.style.display = ""
        }
    }

    function v() {
        for (var A = {}, C = 0; C < m.eb.length; C++) A[m.eb[C]] = C;
        var G = pui.Wb(m.Sf) + ".";
        for (var M in pui.Ua) if (M.substr(0, G.length) == G) {
            var P = M.substr(G.length).split(".");
            if (P.length == 2) {
                P = A[P[0]];
                if (P != null) {
                    var T = pui.Ua[M][0];
                    if (T != null && T.P != null) {
                        var W;
                        if (!m.Le && T.Dd != null) if (m.dataArray[T.Dd] && m.dataArray[T.Dd].P != undefined && m.dataArray[T.Dd].P !== T.Dd) for (C = 0; C < m.dataArray.length; C++) {
                            if (m.dataArray[C].P === T.P) {
                                W = m.dataArray[C];
                                break
                            }
                        } else W = m.dataArray[T.Dd]; else for (C = 0; C < m.dataArray.length; C++) if (m.dataArray[C].P === T.P) {
                            W = m.dataArray[C];
                            break
                        }
                        if (W != null) {
                            C = T.value;
                            if (T.comboBoxWidget != null) C = T.comboBoxWidget.getValue();
                            if (T.aa != null) {
                                C = "";
                                if (T.aa.mg && T.aa.gl != null) C = T.aa.gl; else if (!T.aa.mg && T.aa.fl != null) C = T.aa.fl
                            }
                            if (T.tagName == "INPUT" && T.type == "checkbox") C = T.checked ? T.pe != null && T.pe != "" ? T.pe : "1" : T.Gg != null && T.Gg != "" ? T.Gg : " ";
                            var ca = T.sa.value, aa = T.sa.revert;
                            T.sa.value = C;
                            T.sa.revert = true;
                            C = pui.Oe.format(T.sa);
                            T.sa.value =
                                ca;
                            T.sa.revert = aa;
                            if (typeof C == "object") C = "";
                            W[P] = C
                        }
                    }
                }
            }
        }
    }

    function E() {
        var A;
        if (pui.nc() && localStorage[m.vo] != null) try {
            A = JSON.parse(localStorage[m.vo])
        } catch (C) {
        }
        return A
    }

    function y(A, C) {
        var G;
        if (C == null) G = A; else {
            G = E();
            if (G == null) G = {};
            G[C] = A
        }
        G.cols = Lb;
        localStorage[m.vo] = JSON.stringify(G)
    }

    function F(A) {
        if (!m.designMode) {
            var C = m.ut[A];
            if (C != null && C != "") try {
                pui.temporary_property = m;
                eval("var grid = pui.temporary_property;");
                pui.temporary_property = m.g;
                eval("var dom = pui.temporary_property;");
                eval("var row = arguments[1];");
                eval("var rowNumber = arguments[1];");
                A == "onrowclick" && eval("var isRightClick = arguments[2];");
                arguments.length >= 4 && eval("var event = arguments[3]");
                eval("var column = arguments[4];");
                var G = arguments[1];
                if (G != null) {
                    m.t || (G -= 1);
                    pui.temporary_property = m.cells[G];
                    eval("var rowCells = pui.temporary_property;")
                }
                if (m.w != null && !isNaN(m.w) && m.w > 0) {
                    var M = eval("row");
                    M += m.w - 1;
                    eval("rowNumber = " + M);
                    var P = m.dataArray;
                    if (m.isFiltered()) P = m.Cb;
                    if (P[M - 1] != null && P[M - 1].P != null) M = P[M - 1].P;
                    eval("row = " + M);
                    eval("var rrn = " +
                        M)
                }
                if (eval(C) == false) return false
            } catch (T) {
                pui.qc(T, A.substr(0, 1).toUpperCase() + A.substr(1) + " Error:\n");
                return false
            }
        }
    }

    function D(A, C) {
        var G = document.createElement("div");
        G.style.position = "absolute";
        G.style.left = "200px";
        G.style.top = "200px";
        G.style.width = "16px";
        G.style.height = "18px";
        G.style.fontSize = "0px";
        G.style.overflow = "hidden";
        G.style.backgroundImage = "url('" + pui.normalizeURL("/profoundui/proddata/images/icons/") + A + ".gif')";
        G.style.backgroundRepeat = "no-repeat";
        G.style.cursor = "pointer";
        G.style.zIndex =
            m.eH;
        G.title = C;
        G.style.color = "white";
        G.style.padding = "0px";
        G.onmousedown = function (M) {
            S.ua(M)
        };
        m.b.appendChild(G);
        return G
    }

    function B() {
        if (m.designMode) if (La != null) if (Ta != null) {
            var A = 0, C = 0;
            A = m.v.length;
            if (A > 0) {
                C = parseInt(m.v[A - 1].style.left);
                A = parseInt(m.v[A - 1].style.top) - 20
            } else {
                C = m.ae("left");
                A = m.ae("top") - 20
            }
            La.style.left = C + "px";
            La.style.top = A + "px";
            A -= 14;
            Ta.style.left = C + "px";
            Ta.style.top = A + "px";
            A = m.B.length;
            if (A > 0) {
                C = parseInt(m.B[A - 1].style.left) - 20;
                A = parseInt(m.B[A - 1].style.top) + 5
            } else {
                C = m.ae("left") -
                    20;
                A = m.ae("top") + 5
            }
            Wa.style.left = C + "px";
            Wa.style.top = A + "px";
            C -= 14;
            kb.style.left = C + "px";
            kb.style.top = A + "px";
            C = m.ae("left") - 2;
            A = m.ae("top") - 2;
            qb.style.left = C + "px";
            qb.style.top = A + "px";
            C += m.ae("width") - 2;
            Cb.style.left = C + "px";
            Cb.style.top = A + "px";
            A += m.ae("height") + 1;
            if (m.A.mj || m.A.Xf || m.A.Ml || m.A.qr) A += 25;
            xb.style.left = C + "px";
            xb.style.top = A + "px";
            C = m.ae("left") - 2;
            tb.style.left = C + "px";
            tb.style.top = A + "px"
        }
    }

    function I(A) {
        var C = false;
        if (A.selected == null) if (m.gd != null) {
            if (m.dr == null) for (var G = 0; G < m.eb.length; G++) if (pui.ca(m.gd.fieldName) ==
                m.eb[G]) {
                m.dr = G;
                break
            }
            if (m.dr != null) if (A[m.dr] == m.Dl) A.selected = true
        }
        if (A.selected == true) C = true;
        return C
    }

    function z(A, C) {
        if (!(!m.designMode && C != true)) {
            if (!m.designMode && C == true) m.g.parentNode.onselectstart = function (G) {
                if (m.dragging) {
                    yb(G);
                    return false
                }
            };
            A.style.cursor = "default";
            gc(A, "mousedown", function (G) {
                function M(ba) {
                    var ha = pui.Sm(ba) - W, na = pui.Pk(ba) - T;
                    if (m.t && A.row == 0) {
                        if (db == null) {
                            db = A.cloneNode(true);
                            db.style.border = "1px solid #999999";
                            db.style.zIndex = m.Tz;
                            ya = document.createElement("div");
                            ya.className = m.g.className;
                            ya.style.borderColor = "transparent";
                            A.parentNode.parentNode.appendChild(ya);
                            ya.appendChild(db);
                            db.style.display = "none";
                            setTimeout(function () {
                                if (db != null) db.style.display = ""
                            }, 150)
                        }
                        db.style.top = m.g.Rb + ha + "px";
                        db.style.left = m.g.Jc + parseInt(A.style.left) + na + "px";
                        var sa = null;
                        if (ha > -25 && ha < parseInt(m.g.style.height)) for (ba = 0; ba < m.B.length; ba++) {
                            var xa = m.B[ba], wa = parseInt(xa.style.left), ta = na + T, Aa = 0, Ga = 0;
                            if (m.designMode) Aa += m.g.c.designer.li(); else {
                                Ga = pui.runtimeContainer.getBoundingClientRect();
                                if (typeof window.pageXOffset == "number") {
                                    Aa = Ga.left + window.pageXOffset;
                                    Ga = Ga.top + window.pageYOffset
                                } else {
                                    Aa = Ga.left + document.documentElement.scrollLeft;
                                    Ga = Ga.top + document.documentElement.scrollTop
                                }
                                var Pa = m.g.parentNode, Ua = pui.getActiveContainer();
                                if (Pa.ze == true) {
                                    Aa += parseInt(Pa.style.left);
                                    Ga += parseInt(Pa.style.top)
                                } else if (Ua != null && Ua.ze === true) {
                                    Aa += Ua.offsetLeft;
                                    Ga += Ua.offsetTop
                                }
                            }
                            if (Q == "dspf" && m.g.parentNode.getAttribute("container") == "true") {
                                Aa += pui.layout.ec(m.g.parentNode).x;
                                Ga += pui.layout.ec(m.g.parentNode).y
                            }
                            ta -=
                                Aa;
                            if (Math.abs(wa - ta) < 15) {
                                if (Fa != null && Fa.parentNode != xa.parentNode) {
                                    Fa.parentNode.removeChild(Fa);
                                    Fa = null
                                }
                                if (Fa == null) {
                                    Fa = document.createElement("img");
                                    Fa.src = pui.normalizeURL("/profoundui/proddata/images/grids/column-pointer.gif");
                                    Fa.style.position = "absolute";
                                    Fa.style.zIndex = m.Tz + 1;
                                    m.designMode ? R.designer.b.appendChild(Fa) : document.body.appendChild(Fa)
                                }
                                sa = xa.parentNode;
                                wa = parseInt(xa.style.top) - 10;
                                xa = parseInt(xa.style.left) - 4;
                                ta = {x: 0, y: 0};
                                if (m.designMode) {
                                    if (Q == "dspf" && sa.getAttribute("container") ==
                                        "true") ta = pui.layout.ec(sa)
                                } else {
                                    ta.y = Ga;
                                    ta.x = Aa
                                }
                                wa += ta.y;
                                xa += ta.x;
                                Fa.style.display = "";
                                Fa.style.top = wa + "px";
                                Fa.style.left = xa + "px";
                                sa = ba;
                                Fa.mq = sa;
                                break
                            }
                        }
                        if (sa == null && Fa != null) {
                            Fa.style.display = "none";
                            Fa.mq = null
                        }
                    } else {
                        ba = m.g.c;
                        if (ba != null) {
                            pui.designer.Xv({
                                x: na + T,
                                y: ha + W,
                                designer: ba.designer,
                                mz: false,
                                nz: ca,
                                dom: ba.dom,
                                c: ba,
                                Hx: T,
                                Ix: W,
                                oe: false,
                                Vh: true
                            });
                            Aa = ba.designer.selection;
                            if (Aa.fc) {
                                na += m.g.Jc;
                                ha += m.g.Rb;
                                na = Aa.mb(na, pui.ac);
                                ha = Aa.mb(ha, pui.Ob, Q == "genie" ? 3 : 0);
                                na -= m.g.Jc;
                                ha -= m.g.Rb
                            }
                        }
                        m.Wd(function (Za) {
                            Za.style.top =
                                Za.Rb + ha + "px";
                            Za.style.left = Za.Jc + na + "px"
                        });
                        if (ba != null) ba.moved = true;
                        m.setScrollBar();
                        ba = pui.designer.gf;
                        if (ba.b == null) {
                            ba.b = document.body;
                            ba.init()
                        }
                        ba.set(m.g.c);
                        ba.show()
                    }
                }

                function P() {
                    m.dragging = false;
                    if (db != null) {
                        db.parentNode.removeChild(db);
                        ya.parentNode.removeChild(ya);
                        ya = db = null
                    }
                    var ba = false;
                    if (Fa != null) {
                        Fa.style.display = "none";
                        if (Fa.mq != null) {
                            var ha = m.g.c;
                            ha != null && ha.designer.n.Nc("Move Column", ha.designer);
                            m.moveColumn(A.col, Fa.mq);
                            if (m.Db) {
                                var na = m.vb.map(function (wa) {
                                    if (wa.showing) {
                                        var ta =
                                            ka(wa.columnId);
                                        wa.currentColumn = ta;
                                        wa.savedColumn = ta
                                    } else wa.currentColumn = -1;
                                    return wa
                                }), sa = [];
                                m.cells[0].forEach(function (wa) {
                                    sa.push(wa.T)
                                });
                                na.vm = sa;
                                m.vb = na
                            }
                            ba = true;
                            Fa.mq = null;
                            if (wb) {
                                if (!sa) {
                                    sa = [];
                                    for (ha = 0; ha < m.cells[0].length; ha++) sa.push(m.cells[0][ha].T)
                                }
                                y(sa, "colSequence");
                                if (m.Db) {
                                    if (ha = h()) if (ha = ha.hidableColState) {
                                        ha.cols = na;
                                        ha.headings = m.Ac
                                    } else ha = {cols: na, headings: m.Ac}; else ha = {cols: na, headings: m.Ac};
                                    var xa = m.ii().split(",").map(function (wa) {
                                        return Number(wa)
                                    });
                                    y(ha, "hidableColState");
                                    y(xa, "colWidths");
                                    m.vb = na
                                }
                            }
                        }
                    }
                    if (m.designMode) {
                        ha = m.g.c;
                        if (ha != null) if (ha.moved) {
                            ba = ha.designer;
                            if (ba.nd != null) m.Uz(); else {
                                ca && ba.Z.style.display == "" && m.Vz();
                                ba.Ff();
                                m.cd();
                                Q == "dspf" && pui.ide.refreshRibbon()
                            }
                        } else ba || m.g.c.designer.n.iv();
                        m.Od();
                        ba = pui.designer.gf;
                        ba != null && ba.b != null && ba.hide()
                    }
                    ic(document, "mousemove", M);
                    ic(document, "mouseup", P)
                }

                if (m.designMode) {
                    m.g.c.designer.hh();
                    Q == "dspf" && Ext.menu.MenuMgr.hideAll();
                    m.Ch();
                    pui.layout.template.Nm(m.g.c.designer);
                    if (pui.Ae(G)) {
                        if (m.g.c) {
                            m.g.c.designer.Nb.hide();
                            m.g.c.designer.rr(G)
                        }
                        S.ua(G);
                        G.stopPropagation && G.stopPropagation();
                        return false
                    }
                    m.g.c != null && m.g.c.designer.Qa != null && m.g.c.designer.Qa.hide();
                    if (m.xi) {
                        S.ua(G);
                        return
                    }
                    m.g.c.va.left = m.g.style.left;
                    m.g.c.va.top = m.g.style.top
                } else m.Gd != null && !pui.Ae(G) && m.Gd.hide();
                m.dragging = true;
                var T = pui.Pk(G), W = pui.Sm(G);
                m.Wd(function (ba) {
                    ba.Jc = pui.Rc(ba.style.left);
                    ba.Rb = pui.Rc(ba.style.top)
                });
                var ca = false;
                if (Q == "dspf" && m.g.parentNode.getAttribute("container") == "true") ca = true;
                gc(document, "mousemove", M);
                gc(document,
                    "mouseup", P);
                yb(G);
                if (m.designMode && m.g.c != null) {
                    m.g.c.moved = false;
                    G = m.g.c.designer;
                    var aa = G.selection, fa = "Move Selection";
                    if (aa.e.length == 1) fa = "Move Grid";
                    if (!(m.t && A.row == 0)) {
                        G.n.start(fa);
                        G.n.bf = true;
                        aa.Qh(["left", "top", "parent tab panel", "parent tab panel"]);
                        G.n.bf = false
                    }
                }
            })
        }
    }

    function H(A, C) {
        for (var G = [], M = A.firstChild; M != null;) {
            M.style.position == "absolute" && !M.gn && G.push(M);
            M = M.nextSibling
        }
        C.innerHTML = "";
        for (var P = 0; P < G.length; P++) {
            M = G[P];
            M.parentNode.removeChild(M);
            C.appendChild(M)
        }
    }

    function J(A,
               C, G, M) {
        if (m.designMode || M) {
            var P = A[C];
            if (m.borderWidth !== null && m.borderWidth < jb) {
                P.style.borderWidth = "2px";
                if (!G) P.style.width = parseInt(P.style.width) + 2 + "px"
            }
            if (!G) P.style.borderTopStyle = Eb;
            if (G) P.style.borderRightStyle = Eb;
            if (G) P.style.cursor = "w-resize";
            if (!G) A[C].style.cursor = "n-resize";
            m.Ch();
            gc(P, "mousedown", function (T) {
                function W(xa) {
                    var wa = Kc(xa) - ba;
                    K(Jc(xa) - fa, wa, C, G, na, ha);
                    if (!G && C == A.length - 1 && A.length > 2 && m.s != null && m.s.type == "sliding") {
                        xa = wa;
                        if (xa < -m.cb + 5) xa = -m.cb + 5;
                        typeof m.s.Up == "function" &&
                        m.s.Up(xa)
                    }
                    m.designMode ? aa.set(m.g.c) : m.alignColumnTotals()
                }

                function ca() {
                    P.dragging = false;
                    m.dragging = false;
                    var xa = m.borderWidth;
                    if (xa === null || xa < jb) xa = jb;
                    P.style.borderWidth = xa + "px";
                    P.style.borderColor = m.borderColor;
                    if (!G) P.style.borderTopStyle = Eb;
                    if (G) P.style.borderRightStyle = Eb;
                    if (!G && C == A.length - 1 && (C >= 2 || m.t && C == 1)) {
                        xa = parseInt(P.style.top);
                        if (m.cells.length > (m.t ? 2 : 1)) {
                            m.vl();
                            if (xa > parseInt(A[A.length - 1].style.top) + m.cb - 3) {
                                for (var wa = false; parseInt(A[A.length - 1].style.top) < xa;) {
                                    m.Kg();
                                    wa = true
                                }
                                wa &&
                                m.Kj()
                            }
                        } else m.cb = parseInt(A[A.length - 1].style.top) - parseInt(A[A.length - 2].style.top)
                    }
                    if (m.designMode) {
                        m.cd();
                        m.Od();
                        aa.hide()
                    } else {
                        m.alignColumnTotals();
                        if (G && wb) {
                            if (m.Db) xa = m.ii().split(",").map(function (Aa) {
                                return Number(Aa)
                            }); else {
                                xa = Array(m.cells[0].length);
                                for (wa = 0; wa < m.cells[0].length; wa++) {
                                    var ta = m.cells[0][wa];
                                    xa[ta.T] = ta.clientWidth
                                }
                            }
                            y(xa, "colWidths")
                        }
                    }
                    ic(document, "mousemove", W);
                    ic(document, "mouseup", ca)
                }

                if (m.designMode) {
                    var aa = pui.designer.gf;
                    if (aa.b == null) {
                        aa.b = document.body;
                        aa.init()
                    }
                    aa.set(m.g.c);
                    if (C == 0 || C == A.length - 1) aa.show()
                }
                if (m.designMode) {
                    m.g.c.designer.hh();
                    if (m.xi) {
                        S.ua(T);
                        return
                    }
                } else m.Gd != null && m.Gd.hide();
                P.dragging = true;
                m.dragging = true;
                var fa = Jc(T), ba = Kc(T), ha = parseInt(P.style.left), na = parseInt(P.style.top);
                m.Ch();
                var sa = 3;
                if (m.borderWidth > 3) sa = m.borderWidth;
                P.style.borderWidth = sa + "px";
                P.style.borderColor = "#333333";
                if (!G) P.style.borderTopStyle = "solid";
                if (G) P.style.borderRightStyle = "solid";
                gc(document, "mousemove", W);
                gc(document, "mouseup", ca);
                yb(T);
                if (m.designMode) {
                    T = m.g.c.designer;
                    G && T.n.start("Size Grid Column");
                    G || T.n.start("Size Grid Rows");
                    T.selection.Qh(["left", "top", "number of rows", "row height", "header height", "column widths"])
                }
            });
            gc(P, "mouseover", function () {
                if (!m.dragging) {
                    var T = 3;
                    if (m.borderWidth > 3) T = m.borderWidth;
                    P.style.borderWidth = T + "px";
                    P.style.borderColor = "#333333";
                    if (!G) P.style.borderTopStyle = "solid";
                    if (G) P.style.borderRightStyle = "solid"
                }
            });
            gc(P, "mouseout", function () {
                if (!P.dragging) {
                    var T = m.borderWidth;
                    if (T === null || T < jb) T = jb;
                    P.style.borderWidth = T + "px";
                    P.style.borderColor =
                        m.borderColor;
                    if (!G) P.style.borderTopStyle = Eb;
                    if (G) P.style.borderRightStyle = Eb
                }
            })
        }
    }

    function K(A, C, G, M, P, T) {
        var W = pui["grid column resize style"] !== "simple";
        if (m.Tg) W = false;
        var ca;
        ca = M ? m.B : m.v;
        var aa = ca[G];
        if (M) C = 0;
        M || (A = 0);
        C = P + C;
        A = T + A;
        if (M) {
            if (G > 0 && A < parseInt(ca[G - 1].style.left) + 5) A = parseInt(ca[G - 1].style.left) + 5;
            if (G < ca.length - 1 && A > parseInt(ca[G + 1].style.left) - 5) A = parseInt(ca[G + 1].style.left) - 5
        }
        if (!M) {
            if (G > 0 && C < parseInt(ca[G - 1].style.top) + 5) C = parseInt(ca[G - 1].style.top) + 5;
            if (G < ca.length - 1 && C > parseInt(ca[G +
            1].style.top) - 6) C = parseInt(ca[G + 1].style.top) - 6
        }
        if (!M) aa.style.top = C + "px";
        if (M) {
            if (W && G != 0) {
                P = A - aa.offsetLeft;
                for (T = G + 1; T < ca.length; T++) {
                    var fa = ca[T];
                    fa.style.left = fa.offsetLeft + P + "px"
                }
            }
            aa.style.left = A + "px"
        }
        if (!M && (G != 0 || !m.t) && G != ca.length - 1) {
            m.cb = G < ca.length - 1 ? parseInt(ca[G + 1].style.top) - parseInt(ca[G].style.top) : parseInt(ca[G].style.top) - parseInt(ca[G - 1].style.top);
            aa = C;
            for (T = G + 1; T < ca.length; T++) {
                aa += m.cb;
                ca[T].style.top = aa + "px"
            }
            aa = C;
            C = 0;
            if (m.t) C = 1;
            for (T = G - 1; T >= C; T -= 1) {
                aa -= m.cb;
                ca[T].style.top =
                    aa + "px"
            }
            if (m.t) ca[0].style.top = parseInt(ca[1].style.top) - m.be + "px"
        }
        if (!M && G == 0 && m.t && ca.length > 1) m.be = parseInt(ca[1].style.top) - parseInt(ca[0].style.top);
        if (!M && G == 1 && !m.t && ca.length == 2) m.cb = parseInt(ca[G].style.top) - parseInt(ca[G - 1].style.top);
        if (G == 0 && M) {
            m.g.style.left = A + "px";
            for (aa = 0; aa < m.v.length; aa++) m.v[aa].style.left = m.g.style.left
        }
        if (M && (ca.length - 1 == G || G == 0)) N(); else W && M && N();
        if (!M) {
            L();
            O()
        }
        if (M && m.t) m.Db ? m.ie(m.Ey(m.vb)) : m.ie();
        m.cc();
        B();
        m.setScrollBar()
    }

    function L() {
        m.g.style.top = m.v[0].style.top;
        for (var A = 0; A < m.B.length; A++) m.B[A].style.top = m.g.style.top
    }

    function N() {
        var A = 0;
        if (m.B.length > 0) {
            A = m.borderWidth;
            if (A === null || A < jb && m.designMode) A = jb;
            A = parseInt(m.B[m.B.length - 1].style.left) - m.ae("left") + A
        }
        for (var C = 0; C < m.v.length; C++) m.v[C].style.width = A + "px";
        m.g.style.width = A + "px"
    }

    function O() {
        var A = 0;
        if (m.v.length > 0) A = parseInt(m.v[m.v.length - 1].style.top) - m.ae("top");
        for (var C = 0; C < m.B.length; C++) m.B[C].style.height = A + "px";
        m.g.style.height = A + "px"
    }

    function V(A) {
        var C = A.firstChild;
        if (C != null) {
            C.style.whiteSpace =
                "normal";
            C.style.position = "absolute";
            C.style.top = "50%";
            var G = C.offsetHeight;
            if (G > 0) C.style.marginTop = -parseInt(G / 2) + "px"; else {
                C.style.position = "relative";
                C.style.HM = "translateY(-50%)";
                C.style.dM = "translateY(-50%)";
                C.style.eM = "translateY(-50%)";
                C.style.transform = "translateY(-50%)"
            }
            A = parseInt(A.style.width);
            if (isNaN(A)) A = 0;
            A -= 8;
            if (A < 0) A = 0;
            C.style.left = "0px";
            C.style.width = A + "px"
        }
    }

    function X(A, C) {
        var G = document.createElement("div");
        m.g.appendChild(G);
        G.style.position = "absolute";
        G.style.overflow = "hidden";
        G.style.padding = "0px";
        G.style.verticalAlign = "middle";
        if (!pui.pb) G.style.cursor = m.TE;
        if (A > 0 || !m.t) G.style.IK = "rgba(0,0,0,0)";
        var M = A == 0 && m.t, P = A % 2 == 1;
        if (m.t) P = !P;
        if (M) if (C < m.Ac.length) {
            G.innerHTML = '<div style="' + e() + '">' + m.Ac[C] + "</div>";
            V(G)
        }
        m.designMode && oa(G, M, P, C);
        G.onmouseover = function (T) {
            T = T || window.event;
            if (!m.dragging) {
                m.t || F("onrowmouseover", A + 1, null, T, C);
                m.t && A != 0 && F("onrowmouseover", A, null, T, C);
                if (m.bu) if (!(pui.is_touch && !pui.is_mouse_capable && !m.designMode || pui.pb)) if (!(A == 0 && m.t)) {
                    T = m.cells[A];
                    m.Fh(A, true);
                    if (m.OB && !m.expanded && (A > 0 || !m.t)) {
                        T = T[0];
                        if (m.kd == null) {
                            m.kd = document.createElement("img");
                            m.kd.setAttribute("isZoomIcon", "true");
                            m.kd.src = pui.normalizeURL("/profoundui/proddata/images/icons/zoom_in.png");
                            m.kd.style.position = "absolute";
                            m.kd.style.top = "6px";
                            m.kd.style.left = "3px";
                            if (!pui.pb) m.kd.style.cursor = "pointer"
                        }
                        if (m.kd.parentNode != T) {
                            m.kd.parentNode != null && m.kd.parentNode.removeChild(m.kd);
                            T.appendChild(m.kd)
                        }
                        m.kd.style.display = "";
                        m.kd.onclick = function (W) {
                            m.rowZoom(m.cells[A]);
                            yb(W)
                        }
                    }
                }
            }
        };
        G.onmouseout = function (T) {
            T = T || window.event;
            m.t || F("onrowmouseout", A + 1, null, T, C);
            m.t && A != 0 && F("onrowmouseout", A, null, T, C);
            A == 0 && m.t || m.Fh(A)
        };
        G.onmousedown = function (T) {
            T = T || window.event;
            if (pui.Ae(T)) if (!m.designMode) {
                var W = function (na) {
                    if (!na) na = window.event;
                    na.preventDefault && na.preventDefault();
                    na.stopPropagation && na.stopPropagation();
                    na.cancelBubble = true;
                    na.returnValue = false;
                    document.body.oncontextmenu = null;
                    return false
                };
                if (m.t && A == 0) {
                    if (m.Gd == null) {
                        m.Gd = new pui.FC;
                        m.Gd.grid = m;
                        m.Gd.init()
                    }
                    m.Gd.Hf =
                        G;
                    m.Gd.clickEvent = T ? T : window.event;
                    m.Gd.show();
                    document.body.oncontextmenu = W
                } else {
                    var ca;
                    if (m.bg) ca = Tb(m.bg);
                    if (ca != null) {
                        ca.po = true;
                        document.body.oncontextmenu = W;
                        G.onclick(T);
                        if (T.yG && T.yG() || T.cancelBubble) {
                            ca.po = false;
                            m.Mp()
                        } else {
                            W = pui.Pk(T);
                            var aa = pui.Sm(T), fa = pui.Xe(pui.runtimeContainer);
                            if (Q == "genie") fa = pui.Xe(pui.getActiveContainer());
                            var ba = ca.parentNode;
                            if (ba != null && ba.tagName == "FORM") ba = ba.parentNode;
                            if (ba != null) {
                                var ha = {x: 0, y: 0};
                                if (Q == "dspf" && ba.getAttribute("container") == "true") ha = pui.layout.ec(ba);
                                else if (ba.ze) {
                                    ha.x = ba.offsetLeft;
                                    ha.y = ba.offsetTop
                                }
                                ha.x += fa[0];
                                ha.y += fa[1];
                                W -= ha.x;
                                aa -= ha.y
                            }
                            if (pui.is_touch && !pui.is_mouse_capable) {
                                W -= ca.clientWidth / 2;
                                ca.onselectstart = za(false);
                                if (typeof ca.style.MozUserSelect != "undefined") ca.style.MozUserSelect = "none";
                                if (typeof ca.style.webkitUserSelect != "undefined") ca.style.webkitUserSelect = "none"
                            }
                            ca.style.zIndex = m.Ax;
                            ca.style.visibility = "";
                            ca.style.display = "";
                            ha = document.documentElement;
                            ba = document.documentElement.clientWidth + ((window.pageXOffset || ha.scrollLeft) -
                                (ha.clientLeft || 0)) - ca.clientWidth - 10 - fa[0];
                            fa = document.documentElement.clientHeight + ((window.pageYOffset || ha.scrollTop) - (ha.clientTop || 0)) - ca.clientHeight - 10 - fa[1];
                            if (W > ba) W = ba;
                            if (aa > fa) aa = fa;
                            ca.style.left = W + "px";
                            ca.style.top = aa + "px";
                            yb(T);
                            T != null && T.stopPropagation != null && T.stopPropagation();
                            setTimeout(function () {
                                ca.po = false
                            }, 250);
                            return false
                        }
                    }
                }
            }
        };
        pui.is_touch && !pui.is_mouse_capable && !pui.$L && pui.sK(G, function (T) {
            T.button = 3;
            G.onmousedown(T)
        });
        G.onclick = function (T) {
            T = T || window.event;
            var W = vb(T);
            if (!(W.tagName == "IMG" && W.dF)) {
                var ca = pui.Ae(T);
                if (W.tagName != "INPUT" && W.tagName != "SELECT" && W.tagName != "OPTION") {
                    m.t || F("onrowclick", A + 1, ca, T, C);
                    m.t && A != 0 && F("onrowclick", A, ca, T, C)
                }
                if (!m.designMode) {
                    m.ir(A);
                    var aa = (W.tagName == "INPUT" || W.tagName == "SELECT") && !W.disabled && !W.readOnly;
                    if (m.Cg && !aa && (A > 0 || !m.t)) if (m.w != null && !isNaN(m.w) && m.w > 0) {
                        var fa = m.v.length - 1;
                        if (m.qo || m.Im && !T.ctrlKey && !T.shiftKey && !T.metaKey) {
                            var ba = A + m.w - (m.t ? 1 : 0), ha = m.t ? 1 : 0;
                            for (aa = 0; aa < m.dataArray.length; aa++) {
                                var na = aa - m.w + 1 + ha,
                                    sa = ba <= m.dataArray.length && m.dataArray[ba - 1].selected;
                                if (m.isFiltered()) sa = ba <= m.dataArray.length && m.Cb[ba - 1].selected;
                                if (!ca || !sa) if (!T.ctrlKey && !T.metaKey || na != A) m.dataArray[aa].selected == true && ga(m.dataArray[aa], false, aa);
                                if (na >= 0 && !m.t || na >= 1) na < fa && m.Fh(na)
                            }
                            m.isFiltered() && U()
                        }
                        ba = m.dataArray;
                        if (m.isFiltered()) ba = m.Cb;
                        ha = A + m.w - 1 + (m.t ? 0 : 1);
                        if (m.Im && T.shiftKey) {
                            if (m.Cl == null) m.Cl = ha;
                            ca = m.Cl;
                            sa = ha;
                            if (ca > sa) {
                                aa = ca;
                                ca = sa;
                                sa = aa
                            }
                            for (aa = 0; aa < ba.length; aa++) {
                                na = aa - m.w + 1;
                                if (aa + 1 >= ca && aa + 1 <= sa) ba[aa].selected !=
                                true && ga(ba[aa], true, aa); else ba[aa].selected == true && ga(ba[aa], false, aa);
                                if (na >= 0 && !m.t || na >= 1) na < fa && m.Fh(na)
                            }
                        } else if (ba[ha - 1] != null && ba[ha - 1].length > 0) {
                            ba[ha - 1].selected == true && !ca ? ga(ba[ha - 1], false, ha - 1, true) : ga(ba[ha - 1], true, ha - 1, true);
                            m.Fh(A, true)
                        }
                        m.Cl = ha
                    }
                    if (m.Za.length > 0 && m.Za[0].id == "_msgsfltext") {
                        fa = m.cells[A][0];
                        var xa;
                        if (fa != null) xa = fa.firstChild;
                        xa != null && W != xa && xa.onclick != null && typeof xa.onclick == "function" && xa.onclick()
                    }
                    fa = W;
                    if ((aa = W.parentNode) && aa.row && aa.col) fa = aa;
                    if (fa.row != null &&
                        fa.col != null && fa.tagName == "DIV" && fa.parentNode.grid == m) {
                        xa = String(fa.col);
                        for (aa = 0; aa < m.Za.length; aa++) {
                            na = m.Za[aa];
                            if (na.column == xa && na["cursor row"] != null && na["cursor column"] != null) {
                                ca = m.w + fa.row;
                                if (m.t) ca -= 1;
                                ba = false;
                                for (ha = 0; ha < na.domEls.length; ha++) {
                                    sa = na.domEls[ha];
                                    if (sa != null && sa.Dd == ca - 1) {
                                        pui.xh(T, sa);
                                        ba = true
                                    }
                                }
                                if (ba) break
                            }
                        }
                    }
                    if (typeof pui["grid text selection"] == "undefined" || pui["grid text selection"] == false) if (W.tagName != "INPUT" && W.tagName != "SELECT" && W.tagName != "TEXTAREA") {
                        fa = m.cells[A][0];
                        la(fa)
                    }
                }
            }
        };
        G.ondblclick = function (T) {
            T = T || window.event;
            if (m.designMode) {
                if (m.t && A == 0) {
                    var W = m.g.c;
                    if (!pui.f(W.properties["column headings"]) && !pui.Ia(W.properties["column headings"])) {
                        W.designer.we.Oj = function (ca) {
                            for (; ca.indexOf("\n") != -1;) ca = ca.replace("\n", "<br/>");
                            for (; ca.indexOf("\r") != -1;) ca = ca.replace("\r", "");
                            if (G.firstChild != null) G.firstChild.innerHTML = ca; else G.innerHTML = ca;
                            ca = "";
                            for (var aa = 0; aa < m.cells[0].length; aa++) {
                                if (aa != 0) ca += ",";
                                var fa = m.cells[0][aa], ba = tc(fa);
                                if (fa.firstChild != null &&
                                    fa.firstChild.tagName == "DIV") ba = fa.firstChild.innerHTML;
                                ca += ba
                            }
                            W.designer.n.add(W, "column headings");
                            W.properties["column headings"] = ca;
                            m.setProperty("column headings", ca);
                            W.m["column headings"] = true;
                            W.ta = true;
                            W.designer.X[W.designer.i.l] = true;
                            W.designer.k.ea("column headings")
                        };
                        W.designer.we.fA = function (ca, aa, fa) {
                            for (var ba = "", ha = 0; ha < m.cells[0].length; ha++) {
                                var na = m.cells[0][ha].style[aa];
                                if (na == null) na = "";
                                if (ca.indexOf("color") >= 0) na = pui.wn(na);
                                if (m.cells[0][ha] == G) na = fa;
                                if (ha != 0) ba += ",";
                                ba += na
                            }
                            W.properties[ca] =
                                ba;
                            m.setProperty(ca, ba);
                            W.m[ca] = fa != "";
                            W.ta = true;
                            W.designer.X[W.designer.i.l] = true;
                            W.designer.k.ea(ca)
                        };
                        W.designer.we.show(W, G, "grid")
                    }
                }
            } else {
                m.t || F("onrowdblclick", A + 1, null, T, C);
                m.t && A != 0 && F("onrowdblclick", A, null, T, C)
            }
        };
        m.cells[A] || (m.cells[A] = []);
        G.row = A;
        G.col = C;
        m.cells[A][C] = G;
        m.designMode && qa(A, C);
        return G
    }

    function ga(A, C, G, M) {
        pui.modified = true;
        A.selected = C;
        if (m.gd != null) {
            if (A.selection == null) {
                if (M === true) return;
                G = A.P ? A.P : A.Gs ? A.Gs + 1 : G + 1;
                A.selection = {type: "grid selection", P: G, sa: m.gd};
                G = pui.Wb(m.Sf) +
                    "." + pui.ca(m.gd.fieldName) + "." + G;
                if (pui.Ua[G] == null) {
                    pui.Ua[G] = [];
                    pui.Ua[G].push(A.selection)
                }
            }
            A.selection.modified = true;
            A.selection.value = C ? m.Dl : m.gd.dataType == "indicator" ? "0" : " ";
            if (A.selection.Fa) A.selection.Fa = A.selection.value
        }
    }

    function U() {
        for (var A = m.v.length - 1, C = m.t ? 1 : 0; C < A; C++) m.Fh(C)
    }

    function Z(A) {
        for (var C = 0; C < A.length; C++) if (la(A[C])) return;
        document.activeElement == document.body && pui.getActiveContainer().focus()
    }

    function la(A) {
        if (A == null) return false;
        A = A.firstChild;
        for (var C = false; A != null;) {
            if (A.tagName ==
                "INPUT" || A.tagName == "TEXTAREA" || A.tagName == "SELECT" || A.comboBoxWidget != null) if (A.style.visibility != "hidden" && A.style.display != "none") {
                C = true;
                break
            }
            A = A.nextSibling
        }
        if (!C) return false;
        if (A.comboBoxWidget != null) A = A.comboBoxWidget.getBox();
        C = A.tagName;
        if (C != "INPUT" && C != "TEXTAREA" && C != "SELECT") return false;
        if (C == "SELECT" && pui.is_firefox) return false;
        try {
            A.focus();
            if (C == "INPUT" || C == "TEXTAREA") {
                if (A.createTextRange != null) {
                    A.select != null && A.select();
                    var G = A.createTextRange();
                    if (G != null && G.collapse != null &&
                        G.select != null) {
                        G.collapse();
                        G.select()
                    }
                }
                pui["highlight on focus"] && A.select()
            }
        } catch (M) {
        }
        return true
    }

    function Y(A, C, G, M) {
        var P = M, T = m.V[P];
        if (T == null) T = "";
        if (T == "" && P.substr(0, 7) == "header ") {
            P = P.substr(7);
            T = m.V[P];
            if (T == null) T = ""
        }
        if (!(pui.f(T) || pui.Ia(T))) {
            var W = T.split(",");
            if (W.length > 1) T = C < W.length ? W[C] : W[0];
            if (T == "") {
                if (M.substr(0, 7) == "header ") P = M.substr(7);
                if (m.Wh[M] != null) T = m.Wh[M]; else if (m.Wh[P] != null) T = m.Wh[P]
            }
            try {
                A.style[G] = T
            } catch (ca) {
            }
        }
    }

    function oa(A, C, G, M) {
        Y(A, M, "fontFamily", C ? "header font family" :
            "font family");
        Y(A, M, "fontSize", C ? "header font size" : "font size");
        Y(A, M, "fontStyle", C ? "header font style" : "font style");
        Y(A, M, "fontVariant", "font variant");
        Y(A, M, "fontWeight", C ? "header font weight" : "font weight");
        Y(A, M, "letterSpacing", "letter spacing");
        Y(A, M, "textAlign", C ? "header text align" : "text align");
        Y(A, M, "textDecoration", "text decoration");
        Y(A, M, "textTransform", "text transform");
        Y(A, M, "wordSpacing", "word spacing");
        var P = m.designMode && m.V["row font color"] != null && m.V["row font color"] != "" &&
            !pui.f(m.V["row font color"]),
            T = m.designMode && m.V["row background"] != null && m.V["row background"] != "" && !pui.f(m.V["row background"]);
        Y(A, M, "color", C ? "header font color" : P ? "row font color" : G ? "even row font color" : "odd row font color");
        Y(A, M, "backgroundColor", C ? "header background" : T ? "row background" : G ? "even row background" : "odd row background");
        M = "";
        if (C) {
            C = m.V["header image"];
            if (C != null && C != "") {
                A.style.backgroundImage = "url('" + pui.normalizeURL(C, true) + "')";
                A.style.backgroundRepeat = "repeat-x"
            } else {
                A.style.backgroundImage =
                    "";
                A.style.backgroundRepeat = ""
            }
            M = "cell header-cell"
        } else {
            A.style.backgroundImage = "";
            A.style.backgroundRepeat = "";
            M = "cell";
            M += G ? " even" : " odd"
        }
        A.className = M
    }

    function qa(A, C) {
        var G = m.cells[A], M = false;
        if (m.B.length - 2 == C) M = true;
        if (A == 0 && m.t) M = false;
        G = G[C];
        G.style.top = parseInt(m.v[A].style.top) - m.ae("top") + "px";
        G.style.left = parseInt(m.B[C].style.left) - m.ae("left") + "px";
        G.style.height = parseInt(m.v[A + 1].style.top) - parseInt(m.v[A].style.top) + "px";
        var P = parseInt(m.B[C + 1].style.left) - parseInt(m.B[C].style.left);
        if (M && (m.Gi || m.Je)) pui.is_touch && !pui.is_mouse_capable && !m.designMode || pui.pb || m.t && m.cells.length == 2 || !m.t && m.cells.length == 1 || (P -= 16);
        if (P < 0) P = 0;
        G.style.width = P + "px"
    }

    function ma(A, C, G, M, P, T, W) {
        if (C == null) C = 99;
        if (G == null) G = 1;
        var ca = null;
        if (pui.secLevel > 0) {
            ca = pui.ig(m.dataProps);
            if (m.isFiltered()) for (var aa = m.cells[0], fa = 0, ba = 0; ba < aa.length; ba++) {
                var ha = aa[ba];
                if (ha.T >= 0 && ha.dc != null) {
                    ca += "&fltrcol" + String(fa) + "=" + (ha.T + 1);
                    ca += m.wI(String(fa), ha.dc);
                    fa++
                }
            }
            if (ab != null && sb != null) {
                ca += "&findcol=" + ab;
                ca += "&findval=" + encodeURIComponent(sb)
            }
            if (m.dataProps["data url"] != null && m.dataProps["data url"] != "" && m.je != null) ca += "&order=" + m.je
        }
        if (W) {
            m.unMask();
            if (pui.gc == null) pui.gc = {};
            if (pui.gc[G] == null) pui.gc[G] = {};
            if (pui.gc[G].sql === A && pui.gc[G].CI === ca && pui.gc[G].bl === C && pui.gc[G].wF === T) if (M != null) {
                M(pui.gc[G].results, pui.gc[G].totalRecs, pui.gc[G].matchRow);
                return
            } else return pui.gc.results
        }
        var na = null;
        aa = cc("PUI0009102.PGM");
        if (T) aa = pui.ej(T);
        aa = new pui.Ajax(aa);
        aa.method = "post";
        aa.async = true;
        if (M == null) aa.async =
            false;
        if (Q == "genie") aa.postData = "AUTH=" + GENIE_AUTH;
        if (Q == "dspf") aa.postData = "AUTH=" + pui.appJob.auth;
        if (pui.secLevel > 0) {
            aa.postData += "&q=" + encodeURIComponent(pui.jg(m.g));
            fa = m.dataProps["order by"];
            if (m.je != null) fa = m.je;
            if (fa && fa != "") aa.postData += "&order=" + fa; else if (pui.dbDriver == "mssql") aa.postData += "&order=(select null)";
            if (ca != "") aa.postData += "&" + ca
        } else aa.postData += "&q=" + pui.ad.ci(A);
        aa.postData += "&limit=" + C + "&start=" + G;
        if (P != null && P == true) aa.postData += "&getTotal=1";
        if (pui["read db driven data as ebcdic"] !==
            true) aa.postData += "&UTF8=Y";
        P = m.dataProps["allow any select statement"];
        if (P != null && (P == "true" || P == true)) aa.postData += "&FetchCounter=Y";
        if (pui.isCloud) aa.postData += "&workspace_id=" + pui.cloud.ws.id;
        aa.onready = function (sa) {
            m.unMask();
            var xa, wa = false;
            if (m.dataProps["data transform function"] && sa.Vc() == 200) try {
                xa = eval("window." + m.dataProps["data transform function"])(sa.jc())
            } catch (ta) {
                pui.Kz(ta)
            } else xa = Vb(sa, "Run SQL SELECT Query");
            if (xa) {
                if (W) {
                    if (pui.gc[G] == null) pui.gc[G] = {};
                    pui.gc[G].sql = A;
                    pui.gc[G].bl =
                        C;
                    pui.gc[G].start = G;
                    pui.gc[G].wF = T;
                    pui.gc[G].results = xa.results;
                    pui.gc[G].totalRecs = xa.totalRecs;
                    pui.gc[G].CI = ca;
                    pui.gc[G].matchRow = xa.matchRow
                }
                if (M != null) M(xa.results, xa.totalRecs, xa.matchRow); else na = xa.results;
                wa = true
            }
            Db && pui.di(Db, wa, m.g.id);
            m.Tl = false
        };
        m.Tl = true;
        aa.send();
        if (M == null) return na
    }

    function ka(A) {
        var C = -1;
        if (m.cells != null && m.cells[0] != null) for (var G = 0; G < m.cells[0].length; G++) if (m.cells[0][G] != null && m.cells[0][G].T == A) {
            C = m.cells[0][G].col;
            break
        }
        return C
    }

    function ea(A) {
        for (var C = [],
                 G = 0; G < m.eb.length; G++) {
            var M = A[m.eb[G]];
            M || (M = "");
            C.push(M)
        }
        return C
    }

    function da(A, C) {
        function G(ba) {
            var ha = String(ba.T + 1);
            if (ha.length > 3) ha = "000"; else for (; ha.length < 3;) ha = "0" + ha;
            ba = ba.dc.substring(0, m.gi);
            if (ba.length < m.gi) ba += " ".repeat(m.gi - ba.length);
            P += ha;
            T += ba;
            W++
        }

        var M = m.cells[0];
        if (!(typeof A.T != "number" || A.T < 0 || A.T >= M.length)) {
            if (typeof C != "string") C = "";
            var P = "", T = "", W = 0;
            A.dc = C;
            C.length > 0 && G(A);
            for (var ca = 0; ca < M.length && W < m.Wg; ca++) {
                var aa = M[ca].T, fa = M[ca].dc;
                typeof aa == "number" && aa >= 0 &&
                aa != A.T && typeof fa == "string" && fa.length > 0 && G(M[ca])
            }
            Ba(P, T)
        }
    }

    function Ba(A, C) {
        if (A.length < 3 * m.Wg) A += " ".repeat(3 * m.Wg - A.length);
        m.fi = A + C;
        pui.xp = m;
        pui.Ld();
        pui.xp = null
    }

    function Ea(A) {
        if (A == null || A == "") if (m.fi != null && m.fi != "") A = m.fi; else return;
        var C = m.cells[0];
        m.fi = A;
        for (var G = 0; G < m.Wg; G++) {
            var M = A.substring(G * 3, G * 3 + 3);
            M = parseInt(M, 10);
            var P = G * m.gi + 3 * m.Wg;
            P = A.substring(P, P + m.gi);
            P = $b(P);
            if (!isNaN(M) && M > 0 && P != "") {
                M -= 1;
                for (var T = 0; T < C.length; T++) if (C[T].T == M) {
                    C[T].dc = P;
                    m.jr(C[T]);
                    break
                }
            } else break
        }
    }

    function pa() {
        for (var A = m.cells.length, C = m.cells[0].length, G = 0; G < A; G++) for (var M = 0; M < C; M++) m.g.appendChild(m.cells[G][M])
    }

    if (pui.designer.Wr != null) {
        this.D = new pui.designer.Wr;
        this.D.Yg = true
    } else {
        this.D = {};
        this.D.Yg = true;
        this.D.Tc = ra();
        this.D.vh = ra();
        this.D.Tj = ra();
        this.D.uh = ra()
    }
    this.cp = true;
    this.Za = [];
    this.dataArray = [];
    this.Cb = [];
    this.eb = [];
    this.ref = {};
    this.Sf = "";
    this.B = [];
    this.v = [];
    this.g = null;
    this.qg = "";
    this.cells = [];
    this.b = null;
    this.borderColor = "";
    this.borderWidth = null;
    this.TE = "default";
    this.qv =
        "row number";
    this.Mx = 75;
    this.cb = 23;
    this.be = 46;
    this.cb = 26;
    this.be = 30;
    this.t = true;
    this.Le = this.sortable = false;
    this.je = null;
    this.bu = false;
    if (Q == "dspf" || pui.Na) this.bu = true;
    this.Gi = true;
    this.Je = false;
    if (Q == "dspf" || pui.Na) {
        this.Gi = false;
        this.Je = true
    }
    this.Wi = this.SB = false;
    this.A = new pui.QC;
    this.visibility = "";
    this.Ac = [];
    this.vb = [];
    this.Ir = {};
    this.cr = null;
    this.V = {};
    this.V["font family"] = "Verdana";
    this.V["font size"] = "13px";
    this.V["text align"] = "center";
    this.V["header font color"] = "#ffffff";
    this.V["header background"] =
        "#6699ff";
    this.V["header image"] = "";
    this.V["header font weight"] = "bold";
    this.V["header font style"] = "normal";
    this.V["row font color"] = "";
    this.V["row background"] = "";
    this.V["odd row font color"] = "#555555";
    if (Q == "genie") this.V["odd row font color"] = "";
    this.V["odd row background"] = "#efefef";
    this.V["even row font color"] = "#555555";
    if (Q == "genie") this.V["even row font color"] = "";
    this.V["even row background"] = "#fcfcfc";
    this.V["hover font color"] = "#555555";
    this.V["hover background"] = "#dfe8f6";
    this.V["hover image"] =
        "";
    this.V["selection font color"] = "#ffffff";
    this.V["selection background"] = "#6699cc";
    this.V["selection image"] = "";
    this.Wh = {};
    for (var ia in this.V) this.Wh[ia] = this.V[ia];
    this.dataProps = {};
    this.Dn = {};
    this.ut = {};
    this.nt = this.dragging = this.xi = this.designMode = false;
    this.PG = 96;
    this.qJ = this.FK = 97;
    this.eH = 99;
    this.Ax = 100;
    this.mJ = 701;
    this.Tz = 702;
    this.ey = this.totalRecs = this.s = null;
    this.Km = this.yt = this.Hm = this.vp = false;
    this.Sz = nb;
    this.TA = this.Db = false;
    this.vt = null;
    this.Im = this.qo = this.Cg = this.kt = this.Tg = false;
    this.dr = this.gd = null;
    this.Dl = "1";
    this.Cl = null;
    this.gi = 20;
    this.Wg = 3;
    this.Xn = this.Wn = this.Wq = this.Vq = this.fi = null;
    this.expanded = true;
    this.Wp = this.Vp = null;
    this.Zd = 1;
    this.OB = false;
    this.Cq = this.wt = null;
    this.Sg = [];
    this.bg = this.an = this.Zm = this.Li = this.Jm = this.Ss = this.$m = this.kh = null;
    this.Kx = false;
    this.fu = 1;
    this.Bb = new pui.DC;
    this.Bb.b = pui.runtimeContainer;
    if (this.Bb.b == null) this.Bb.b = document.body;
    this.Bb.init();
    this.Ya = {T: 0, col: 0, text: ""};
    this.Vu = false;
    this.ty = ka;
    this.$A = false;
    var m = this, La, Ta, Wa, kb, qb,
        Cb, tb, xb, jb = 1, Eb = "solid", wb = false, nb = false, Ib = false, Lb, cb, Hb, db, ya, Fa, Da = null,
        gb = false, sb, ab, pb, Db = null, eb = [], $a = null;
    this.tp = function () {
        m.designMode = true;
        m.g.destroy = m.destroy;
        if (m.s != null) m.s.designMode = true;
        for (var A = 0; A < m.B.length; A++) J(m.B, A, true);
        for (A = 0; A < m.v.length; A++) J(m.v, A, false);
        for (A = 0; A < m.cells.length; A++) for (var C = 0; C < m.cells[A].length; C++) z(m.cells[A][C]);
        if (La == null) {
            La = D("plus", "Add New Row");
            La.onclick = function () {
                var G = m.g.c;
                G.designer.n.start("Add Grid Row");
                G.designer.n.add(G,
                    "number of rows");
                m.Kg();
                m.Kj();
                m.cd();
                m.Ch()
            }
        }
        if (Ta == null) {
            Ta = D("minus", "Remove Row");
            Ta.onclick = function () {
                if (m.cells.length > (m.t ? 2 : 1)) {
                    var G = m.g.c;
                    G.designer.n.start("Remove Grid Row");
                    G.designer.n.add(G, "number of rows");
                    m.vl();
                    m.cd();
                    m.Ch()
                }
            }
        }
        if (Wa == null) {
            Wa = D("plus", "Add New Column");
            Wa.onclick = function () {
                var G = m.g.c;
                G.designer.n.start("Add Grid Column");
                G.designer.n.add(G, "column widths");
                G.designer.n.add(G, "number of columns");
                m.gs();
                m.cc();
                m.cd();
                m.Ch()
            }
        }
        if (kb == null) {
            kb = D("minus", "Remove Column");
            kb.onclick = function () {
                var G = m.B.length - 2;
                if (!(G < 1)) if (m.ni(G)) {
                    G = m.dA(G);
                    if (G != null) {
                        if (!String.prototype.trim) String.prototype.trim = function () {
                            return this.replace(/^\s+|\s+$/gm, "")
                        };
                        pui.alert("The column cannot be removed because it contains other elements that must be removed first.\n\nTo remove column elements, go to the Elements tab. Then, search the element list for the ID(s) listed below:\n" + G.join("\n") + "\n\nSelect each element and click the Remove Element icon.")
                    }
                } else {
                    G = m.g.c;
                    G.designer.n.start("Remove Grid Column");
                    G.designer.n.add(G, "column widths");
                    G.designer.n.add(G, "number of columns");
                    G.designer.n.add(G, "column headings");
                    m.hv();
                    m.cd();
                    m.Ch()
                }
            }
        }
        if (qb == null) qb = d("nw");
        if (Cb == null) Cb = d("ne");
        if (tb == null) tb = d("sw");
        if (xb == null) xb = d("se");
        m.g.Jx = function () {
            if (m.designMode) {
                if (qb != null) qb.style.visibility = "";
                if (Cb != null) Cb.style.visibility = "";
                if (tb != null) tb.style.visibility = "";
                if (xb != null) xb.style.visibility = ""
            }
        };
        m.g.kp = function () {
            if (qb != null) qb.style.visibility = "hidden";
            if (Cb != null) Cb.style.visibility = "hidden";
            if (tb != null) tb.style.visibility = "hidden";
            if (xb != null) xb.style.visibility = "hidden"
        };
        m.clearData();
        m.visibility == "hidden" && m.Wd(function (G) {
            G.style.visibility = ""
        });
        if (Q == "genie" && m.bg != null) if (A = Tb(m.bg)) {
            A.style.visibility = "";
            A.style.display = ""
        }
        B();
        m.setScrollBar();
        m.A.CE(z);
        m.Od()
    };
    this.cd = function (A) {
        if (!A) if (m.designMode && R.Of) return;
        if (m.Tg) {
            A = m.g.parentNode;
            if (A.getAttribute("container") == "true") {
                for (var C = A.offsetWidth, G = m.ii().split(","), M = 0, P = 0; P < G.length; P++) {
                    var T = G[P];
                    T = Number(T);
                    G[P] = T;
                    M += T
                }
                C = (C - M) / G.length;
                C = parseInt(C);
                for (P = 0; P < G.length; P++) G[P] += C;
                m.Oi(G);
                A = A.offsetHeight;
                if (m.t) A -= m.be;
                if (m.A) A -= m.A.getHeight();
                A = A / m.cb;
                if (m.t) A += 1;
                A = parseInt(A);
                if (A < 1) A = 1;
                m.kt = true;
                m.setNumberOfRows(A);
                m.kt = false;
                var W = parseInt(m.g.style.left), ca = parseInt(m.g.style.top);
                m.Wd(function (aa) {
                    aa.style.left = parseInt(aa.style.left) - W + "px";
                    aa.style.top = parseInt(aa.style.top) - ca + "px"
                });
                m.setScrollBar();
                m.ie()
            }
        }
    };
    this.rz = function () {
        if (m.Zd <= 1) return false;
        var A = m.Vp;
        if (m.Wp == true) A = false;
        if (m.Vp == null &&
            m.Wp == false) A = true;
        if (A == null) A = false;
        return A
    };
    this.collapse = function (A) {
        if (m.expanded) if (!(m.Zd <= 1)) {
            if (m.Tb != null) m.Tb.style.display = "none";
            m.expanded = false;
            var C = m.cells.length;
            if (m.t) C -= 1;
            C *= m.Zd - 1;
            if (!m.Wi) {
                m.setProperty("row height", parseInt(m.cb / m.Zd));
                for (var G = 0; G < C; G++) m.Kg();
                m.cc();
                m.Tf();
                m.getData();
                for (C = 0; C < m.cells.length; C++) for (G = 0; G < m.cells[C].length; G++) {
                    var M = m.cells[C][G], P = M.firstChild, T = parseInt(M.style.height);
                    if (!isNaN(T)) {
                        for (; P != null;) {
                            var W = parseInt(P.style.top);
                            if (isNaN(W)) W =
                                0;
                            if (W > T && (P.tagName == "INPUT" || P.tagName == "SELECT" || P.tagName == "TEXTAREA") && !P.disabled) {
                                P.bv = true;
                                P.disabled = true
                            }
                            P = P.nextSibling
                        }
                        M.scrollTop = 0
                    }
                }
            }
            if (A != null && A.tagName == "IMG") {
                A.src = pui.normalizeURL("/profoundui/proddata/images/icons/expandall.gif");
                A.title = pui.getLanguageText("runtimeText", "expandAll")
            }
        }
    };
    this.expand = function (A) {
        if (!m.expanded) if (!(m.Zd <= 1)) {
            if (m.Tb != null) m.Tb.style.display = "none";
            m.expanded = true;
            var C = m.cells.length;
            if (m.t) C -= 1;
            C = parseInt(C / m.Zd);
            C *= m.Zd - 1;
            if (!m.Wi) {
                m.setProperty("row height",
                    m.cb * m.Zd);
                for (var G = 0; G < C; G++) m.vl();
                m.cc();
                m.Tf();
                m.getData();
                for (G = 0; G < m.Za.length; G++) if (C = m.Za[G].domEls) for (var M in C) if (!isNaN(parseInt(M, 10))) {
                    var P = C[M];
                    if (P.bv) {
                        P.bv = false;
                        P.disabled = false
                    }
                }
            }
            if (A != null && A.tagName == "IMG") {
                A.src = pui.normalizeURL("/profoundui/proddata/images/icons/collapseall.gif");
                A.title = pui.getLanguageText("runtimeText", "collapseAll")
            }
        }
    };
    this.toggle = function (A) {
        m.expanded ? m.collapse(A) : m.expand(A)
    };
    this.vM = ra();
    this.rowZoom = function (A) {
        if (!(Q != "dspf" && !pui.Na)) {
            if (typeof A ==
                "number") {
                A = A - m.w;
                m.t && A++;
                A = m.cells[A];
                if (A == null) return
            }
            if (m.Tb == null) {
                m.Tb = document.createElement("div");
                var C = parseInt(m.g.style.width);
                if (m.Je || m.Gi) C -= 21;
                m.Tb.style.width = C + "px";
                m.Tb.style.height = m.cb * m.Zd + "px";
                m.Tb.style.border = "1px solid #1541c4";
                m.Tb.style.overflow = "hidden";
                m.Tb.style.position = "absolute";
                m.Tb.style.zIndex = m.mJ;
                m.Tb.style.left = parseInt(m.g.style.left) + "px";
                m.Tb.onclick = function () {
                    m.Tb.style.display = "none"
                };
                m.Tb.onmouseout = function (W) {
                    W = W ? W.relatedTarget : event.toElement;
                    try {
                        if (W !=
                            null && W.parentNode != null) {
                            if (W.parentNode == m.Tb) return;
                            if (W.parentNode.parentNode == m.Tb) return
                        }
                    } catch (ca) {
                    }
                    m.Tb.style.display = "none"
                };
                m.g.parentNode.appendChild(m.Tb)
            }
            m.Tb.innerHTML = "";
            m.Tb.className = m.g.className;
            m.Tb.style.top = parseInt(m.g.style.top) + parseInt(A[0].style.top) - parseInt(m.cb * (m.Zd - 1) / 2) + "px";
            for (C = 0; C < A.length; C++) {
                var G = A[C].cloneNode(true);
                G.style.top = "0px";
                G.style.height = parseInt(m.Tb.style.height) + 2 + "px";
                if (!pui.pb) G.style.cursor = "pointer";
                for (var M = 0; M < G.childNodes.length; M++) {
                    var P =
                        G.childNodes[M];
                    if (P.getAttribute("isZoomIcon") == "true") P.style.display = "none";
                    if (P.tagName == "INPUT") {
                        var T = P.className;
                        if (T == null) T = null;
                        T += " PR";
                        P.className = Zb(T);
                        P.readOnly = true
                    }
                    if (P.tagName == "SELECT") P.disabled = true
                }
                m.Tb.appendChild(G)
            }
            m.Tb.style.display = ""
        }
    };
    this.exportXLSX = function (A) {
        return m.exportCSV(A, true)
    };
    this.exportCSV = function (A, C) {
        if (!m.A.Vl && (pui["csv exports xlsx"] === true || pui["csv exports xlsx"] === "true")) C = true;
        var G;
        if (typeof pui["csv separator"] == "string") G = pui["csv separator"];
        else {
            G = ",";
            if (pui.appJob != null && (pui.appJob.decimalFormat == "I" || pui.appJob.decimalFormat == "J")) G = ";"
        }
        if (!m.designMode) {
            if (A == null) A = m.ey;
            if (A == null || A == "") A = m.g.id;
            if (m.wb()) C ? m.UF(A) : m.getData(A); else if (Q == "genie" && !pui.Na) pui.alert('In 5250 mode, the "csv export" feature requires an SQL-driven subfile.'); else {
                A = encodeURIComponent(A);
                var M = [], P = [], T = [], W = [], ca = [], aa = [], fa = [], ba = m.B.length - 1;
                if (m.Db && !m.Hm) {
                    ba = m.vb.length;
                    var ha = m.vb.sort(function (lb, Jb) {
                        return lb.columnId - Jb.columnId
                    })
                }
                for (var na =
                    0; na < ba; na++) {
                    M.push(-1);
                    P.push(false);
                    T.push(false);
                    W.push(false);
                    ca.push(false);
                    aa.push(false);
                    fa.push(false)
                }
                var sa = [], xa = 0;
                for (na = 0; na < m.Za.length; na++) {
                    var wa = m.Za[na];
                    if (wa.visibility != "hidden") {
                        var ta = Number(wa.column);
                        if (m.Db && !m.Hm) ta = wa.columnId;
                        if (!isNaN(ta) && ta >= 0 && ta < M.length && M[ta] == -1) {
                            if (pui.f(wa.visibility)) W[ta] = wa.visibility;
                            var Aa = wa.value;
                            if (wa["field type"] == "html container") Aa = wa.html;
                            if (wa["field type"] == "image" && C) Aa = wa["image source"];
                            if (wa["field type"] == "hyperlink") {
                                var Ga =
                                    wa["hyperlink reference"];
                                fa[ta] = {};
                                if (pui.f(Ga) && Ga.dataType != "indicator" && Ga.dataType != "expression") {
                                    var Pa = pui.ca(Ga.fieldName);
                                    for (ba = 0; ba < m.eb.length; ba++) if (Pa == m.eb[ba]) {
                                        fa[ta].Iz = ba;
                                        break
                                    }
                                    if (!pui.f(Aa) || Aa.dataType == "indicator" || Aa.dataType == "expression") {
                                        fa[ta].value = Aa;
                                        Aa = Ga
                                    }
                                } else if (Ga != null && Ga.length > 0) fa[ta].link = Ga
                            }
                            if (pui.f(Aa) && Aa.dataType != "indicator" && Aa.dataType != "expression") {
                                Pa = pui.ca(Aa.fieldName);
                                for (ba = 0; ba < m.eb.length; ba++) if (Pa == m.eb[ba]) {
                                    M[ta] = ba;
                                    if (C) sa[ta] = Aa;
                                    xa++;
                                    if (Aa.formatting ==
                                        "Number") P[ta] = true; else if (Aa.formatting == "Date") ca[ta] = Aa;
                                    if (Aa.dataType == "graphic") T[ta] = true;
                                    if (C) if (wa["field type"] == "image") {
                                        aa[ta] = {left: 2, top: 2, height: 16, width: 16};
                                        if (wa.domEls != null && wa.domEls.length > 0) for (ba = 0; ba < wa.domEls.length; ba++) if (wa.domEls[ba] && wa.domEls[ba].offsetWidth > 0 && wa.domEls[ba].offsetHeight > 0) {
                                            aa[ta] = {
                                                left: wa.domEls[ba].offsetLeft,
                                                top: wa.domEls[ba].offsetTop,
                                                height: wa.domEls[ba].offsetHeight,
                                                width: wa.domEls[ba].offsetWidth
                                            };
                                            break
                                        }
                                    } else if (wa["field type"] == "hyperlink") if (fa[ta].value ==
                                        null) fa[ta].EM = true;
                                    break
                                }
                            }
                        }
                    }
                }
                wa = "";
                var Ua, Za, rb;
                ta = [];
                Ga = Aa = false;
                if (C) {
                    Za = new pui.nC;
                    Ua = new pui.oC(xa);
                    Ua.EJ(m.cb);
                    rb = [];
                    ba = m.Db && !m.Hm ? ha.map(function (lb) {
                        return pui.Rc(lb.orginalWidth)
                    }) : m.ii().split(",");
                    for (na = 0; na < M.length && na < ba.length; na++) M[na] > -1 && rb.push(ba[na]);
                    Ua.Oi(rb);
                    rb = new pui.MK;
                    for (na = xa = 0; na < M.length; na++) if (M[na] > -1) {
                        Ua.fB(xa, sa[na]);
                        xa++
                    }
                    sa = null
                }
                if (m.t && m.vp) {
                    C && Ua.pq();
                    for (na = 0; na < M.length; na++) {
                        var Ra = M[na];
                        if (Ra > -1) {
                            ba = "";
                            ba = m.Db && !m.Hm ? ha[na].blankHeader ? "" : ha[na].name :
                                tc(m.cells[0][na]);
                            ba = ba.replace(/<br>/g, " ");
                            C && Ua.fs($b(ba), "char");
                            ba = ba.replace(/"/g, '""');
                            ba = ba.replace("\n", "");
                            ba = ba.replace("\r", "");
                            if (wa != "") wa += G;
                            wa += '"' + ba + '"'
                        }
                    }
                }
                wa = "\ufeff" + wa;
                ha = m.dataArray;
                if (m.isFiltered()) ha = m.Cb;
                for (na = 0; na < ha.length; na++) {
                    sa = "";
                    xa = ha[na];
                    Pa = {};
                    if (xa == null || xa.length == 0) Pa.empty = true; else for (ba = 0; ba < m.eb.length; ba++) Pa[m.eb[ba]] = xa[ba];
                    C && Ua.pq();
                    for (ba = 0; ba < M.length; ba++) {
                        var Sa = false;
                        Ra = M[ba];
                        if (Ra > -1) {
                            var Ya = xa[Ra];
                            if (fa[ba] != null && fa[ba].value != null) Ya = fa[ba].value;
                            if (T[ba]) Ya = pui.formatting.Hk(Ya);
                            Ra = Ya;
                            if (P[ba] && pui.appJob != null && (pui.appJob.decimalFormat == "I" || pui.appJob.decimalFormat == "J")) Ya = Ya.replace(".", ","); else if (typeof ca[ba] === "object" && ca[ba] != null) {
                                Ra = Ya = pui.ab(ca[ba], Pa, m.ref);
                                Sa = true
                            }
                            if (typeof Ya === "number") Ya = String(Ya);
                            if (typeof Ra === "number") Ra = String(Ra);
                            Ya = Ya.replace(/"/g, '""');
                            if (W[ba] !== false) if (pui.ab(W[ba], Pa, m.ref) == "hidden") Ra = Ya = "";
                            if (sa != "") sa += G;
                            sa += '"' + $b(Ya) + '"';
                            if (C) if (typeof aa[ba] == "object" && aa[ba] != null) {
                                Aa = true;
                                Sa = Ua.fs("");
                                Ra != null && Ra.length > 0 && rb.gE(Ua.sy(), Sa, Ra, aa[ba])
                            } else {
                                Sa = Ua.fs($b(Ra), Sa ? "date" : null);
                                if (typeof fa[ba] == "object" && fa[ba] != null) {
                                    Ga = true;
                                    Sa = {row: Ua.sy(), col: Sa};
                                    if (fa[ba].link != null) Sa.target = fa[ba].link; else if (fa[ba].Iz != null) Sa.target = xa[fa[ba].Iz];
                                    ta.push(Sa)
                                }
                            }
                        }
                    }
                    if (wa != "") wa += "\n";
                    wa += sa
                }
                if (C) {
                    if (Aa && m.A.mC) if (pui.ie_mode <= 9) {
                        m.A.Hv(pui.getLanguageText("runtimeMsg", "ie9 too low xlsxpics"));
                        m.A.LB();
                        setTimeout(m.A.H, 2E3)
                    } else {
                        Ua.EK();
                        Za.GJ(rb);
                        Za.BJ(m.A.Hv, m.A.H);
                        m.A.Hv(pui.getLanguageText("runtimeMsg",
                            "downloading x", ["..."]));
                        m.A.LB()
                    }
                    if (Ga) {
                        Ua.Cv(ta);
                        Za.Cv(ta)
                    }
                    Za.iB(A);
                    Za.wB(Ua);
                    pui.is_ie ? setTimeout(Za.mt, 100) : Za.mt()
                } else pui.Jf("text/csv", A + ".csv", wa)
            }
        }
    };
    this.UF = function (A) {
        function C(ca) {
            var aa = new pui.Ajax(P);
            aa.method = "post";
            aa.async = true;
            if (Q == "genie") aa.postData = "AUTH=" + GENIE_AUTH;
            if (Q == "dspf") aa.postData = "AUTH=" + pui.appJob.auth;
            aa.postData += "&q=" + encodeURIComponent(pui.jg(m.g)) + "&" + pui.ig(m.dataProps) + "&limit=" + M + "&start=1";
            if (pui["read db driven data as ebcdic"] !== true) aa.postData +=
                "&UTF8=Y";
            var fa = m.dataProps["order by"];
            if (m.je != null) fa = m.je;
            if (fa && fa != "") aa.postData += "&order=" + fa; else if (pui.dbDriver == "mssql") aa.postData += "&order=(select null)";
            fa = m.dataProps["allow any select statement"];
            if (fa != null && (fa == "true" || fa == true)) aa.postData += "&FetchCounter=Y";
            if (pui.isCloud) aa.postData += "&workspace_id=" + pui.cloud.ws.id;
            aa.onready = function (ba) {
                if ((ba = Vb(ba, "Run SQL SELECT Query")) && ba.results && ba.results.length > 0) {
                    if (ca != null) ba.fields = ca;
                    G(ba)
                } else m.unMask()
            };
            aa.send();
            m.mask()
        }

        function G(ca) {
            var aa = 0;
            if (ca.colWidths != null) aa = ca.colWidths.length; else for (var fa in ca.results[0]) aa++;
            var ba = new pui.oC(aa), ha = new pui.nC;
            if (ca.fields != null && ca.results.length > 0) {
                var na = 0;
                for (fa in ca.results[0]) {
                    for (var sa = 0; sa < ca.fields.length; sa++) if (ca.fields[sa].field == fa) {
                        ba.fB(na, {dataType: ca.fields[sa].type, decPos: ca.fields[sa].decPos});
                        break
                    }
                    na++
                }
            }
            if (m.t && m.vp) {
                ba.pq();
                if (m.Db) m.vb.forEach(function (ta, Aa) {
                    var Ga = ta.name;
                    if (ta.blankHeader) Ga = "";
                    ba.gr(Aa, $b(Ga), "char")
                }); else for (sa = 0; sa <
                m.cells[0].length && sa < aa; sa++) {
                    na = tc(m.cells[0][sa]);
                    ba.gr(sa, $b(na), "char")
                }
            }
            for (aa = 0; aa < ca.results.length; aa++) {
                ba.pq();
                sa = ca.results[aa];
                na = 0;
                for (fa in sa) {
                    var xa = sa[fa], wa = ba.formats[na].dataType;
                    if (wa == "zoned" || wa == "packed") if (pui.appJob != null && (pui.appJob.decimalFormat == "I" || pui.appJob.decimalFormat == "J")) {
                        xa = xa.replace(/[.]/g, "");
                        xa = xa.replace(",", ".")
                    }
                    ba.gr(na, xa);
                    na++
                }
            }
            ha.iB(A);
            ha.wB(ba);
            ha.mt();
            m.unMask()
        }

        if (pui.secLevel <= 0) console.log("Export not implemented for low security level."); else {
            var M =
                m.totalRecs;
            if (M == null) M = 9999;
            var P = cc("PUI0009102.PGM"), T = m.dataProps["data url"];
            if (T == "") T = null;
            if (T) {
                P = pui.ej(T);
                C()
            } else if (m.dataProps["database file"] && m.dataProps["database file"].length > 0) {
                T = "";
                var W = m.dataProps["database file"].split("/");
                if (W.length > 1) {
                    T = W[0];
                    W = W[1]
                } else W = W[0];
                jc({
                    url: cc("PUI0009101.pgm"),
                    method: "post",
                    params: {
                        context: "genie",
                        file: W,
                        library: T,
                        AUTH: Q == "genie" ? GENIE_AUTH : pui.appJob.auth,
                        workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
                    },
                    async: true,
                    handler: function (ca) {
                        var aa =
                            null;
                        if (ca != null && ca.fields != null) aa = ca.fields;
                        C(aa)
                    }
                });
                m.mask()
            } else C()
        }
    };
    this.ni = function (A) {
        if (Q == "genie" && !pui.Na) return false;
        var C = A, G = A;
        if (A == null) {
            C = 0;
            G = m.B.length - 2
        }
        A = 0;
        if (m.t) A = 1;
        if (G < 0) return false;
        for (C = C; C <= G; C++) for (var M = m.cells[A][C].firstChild; M != null;) {
            if (M.style.position == "absolute" && !M.gn) return true;
            M = M.nextSibling
        }
        return false
    };
    this.dA = function (A) {
        var C = [], G = A, M = A;
        if (A == null) {
            G = 0;
            M = m.B.length - 2
        }
        A = 0;
        if (m.t) A = 1;
        for (G = G; G <= M; G++) for (var P = m.cells[A][G], T = 0; T < P.children.length; T++) {
            var W =
                P.children[T].id;
            if (!(W == "" || W == null)) {
                W = " " + W;
                C.push(W)
            }
        }
        return C
    };
    this.Ft = function () {
        for (var A = [], C = m.g.c.designer.items, G = 0; G < C.length; G++) {
            var M = C[G];
            M.bb() == m && A.push(M)
        }
        return A
    };
    this.Fp = function () {
        var A = m.v.length - 1;
        if (m.t) A -= 1;
        return A
    };
    this.Ib = function (A) {
        if (!(Q == "genie" && !pui.Na)) if (m.designMode) {
            var C, G, M = document.createElement("span");
            if (m.t) {
                G = m.cells[1][A];
                C = 2
            } else {
                G = m.cells[0][A];
                C = 1
            }
            for (G = G.firstChild; G != null;) {
                if (G.style.position == "absolute" && !G.gn && !G.sz && !G.zH) {
                    var P = G.cloneNode(true);
                    P.id = "";
                    P.MA != null && P.MA(P);
                    M.appendChild(P)
                }
                G = G.nextSibling
            }
            for (C = C; C < m.cells.length; C++) {
                m.cells[C][A].innerHTML = "";
                m.cells[C][A].appendChild(M.cloneNode(true))
            }
        }
    };
    this.Kj = function () {
        if (!(Q == "genie" && !pui.Na)) for (var A = m.B.length - 1, C = 0; C < A; C++) m.Ib(C)
    };
    this.getCellValue = function (A, C) {
        var G = A, M = 1;
        if (Q == "dspf" || m.wb() || pui.Na) M = m.w;
        G -= M;
        m.t && G++;
        G = m.cells[G];
        if (G == null) return null;
        G = G[ka(C)];
        if (G == null) return null;
        return tc(G)
    };
    this.getDataValue = function (A, C) {
        if (typeof A != "number") return null;
        if (typeof C !=
            "string") return null;
        var G = b(A, true);
        if (G == null) return null;
        C = pui.ca(C);
        if (C.length > 10 && !(pui.pjsDefaultMode === "case-sensitive" || pui.handler != null)) C = pui.yi[C];
        var M = pui.Wb(m.Sf) + "." + C;
        if (pui.handler != null) M = C;
        M += "." + A;
        M = pui.Ua[M];
        if (M != null && M.length == 1) {
            M = M[0];
            if (M != null) return M.tagName ? Dc(M) : typeof M.Fa != "undefined" ? M.Fa : M.value
        }
        M = a(C);
        if (M == null) return null;
        return G[M]
    };
    this.getAllDataValues = function (A) {
        if (m.eb.length < 1) return null;
        v();
        var C = m.dataArray;
        if ((A != null && !A ? false : true) && m.isFiltered()) C =
            m.Cb;
        A = [];
        for (var G = 0; G < C.length; G++) {
            for (var M = {}, P = 0; P < m.eb.length; P++) {
                var T = m.eb[P];
                if (pui.yi[T]) T = pui.yi[T];
                M[T] = C[G][P]
            }
            A.push(M)
        }
        return A
    };
    this.setDataValue = function (A, C, G) {
        C = pui.ca(C);
        if (C.length > 10 && !(pui.pjsDefaultMode === "case-sensitive" || pui.handler != null)) C = pui.yi[C];
        var M = b(A, true);
        if (M != null) {
            var P = a(C);
            if (P != null) {
                M[P] = G;
                if (m.Cg && m.gd && m.gd.fieldName && C == pui.ca(m.gd.fieldName)) {
                    var T = (P = G == m.Dl) ? m.Dl : m.gd.dataType == "indicator" ? "0" : " ";
                    if (M.selected != P) {
                        M.selected = P;
                        pui.modified = true;
                        if (M.selection) {
                            M.selection.modified = true;
                            M.selection.value = T
                        } else {
                            var W = pui.Wb(m.Sf) + "." + C + "." + A;
                            if (pui.Ua[W] == null) {
                                M.selection = {
                                    Fa: String(G),
                                    modified: true,
                                    type: "grid selection",
                                    value: T,
                                    P: A,
                                    sa: m.gd,
                                    qn: true
                                };
                                pui.Ua[W] = [M.selection]
                            }
                            if (pui.Ua[W][0] != null && pui.Ua[W][0].qn) pui.Ua[W][0].Fa = String(G)
                        }
                    }
                    if (P) m.Cl = A
                }
            }
        }
        M = null;
        for (P = 0; P < m.Za.length; P++) {
            T = m.Za[P].value;
            if (pui.f(T) && pui.ca(T.fieldName) == C) {
                M = m.Za[P];
                break
            }
        }
        if (M == null) return false;
        T = M.domEls[A - 1];
        if (T == null) {
            T = null;
            for (P in M.domEls) {
                T = M.domEls[P];
                break
            }
            if (T && pui.tz("value", T)) {
                W = pui.Wb(m.Sf) + "." + C + "." + A;
                if (pui.Ua[W] == null) pui.Ua[W] = [{Fa: String(G), qn: true}];
                if (pui.Ua[W][0] != null && pui.Ua[W][0].qn) pui.Ua[W][0].Fa = String(G)
            }
            return false
        }
        Fc(T, G);
        return true
    };
    this.me = function () {
        return m.w > 1 ? false : true
    };
    this.Mu = function () {
        if (F("onpageup") != false) if (pui.Na && m.me() || !pui.Na && Q == "genie") Sc("pageup"); else {
            m.mask();
            var A = m.cells.length;
            if (m.t) A -= 1;
            m.w -= A;
            if (m.w < 1) m.w = 1;
            if (m.Je) {
                m.s.Gh(m.w);
                if (pui.is_touch && !pui.is_mouse_capable || pui.pb) m.getData()
            } else m.getData();
            setTimeout(function () {
                m.unMask();
                if (typeof pui.G.ug == "undefined" || pui.G.ug == false) {
                    var C = 0;
                    m.t && C++;
                    var G = m.cells[C];
                    setTimeout(function () {
                        Z(G)
                    }, 100)
                }
            }, 1)
        }
    };
    this.Qd = function () {
        var A = m.cells.length;
        if (m.t) A -= 1;
        A = m.w + A - 1;
        if (m.wb()) return m.totalRecs <= A; else {
            var C = m.dataArray;
            if (m.isFiltered()) C = m.Cb;
            return C.length <= A
        }
    };
    this.Ku = function () {
        if (F("onpagedown") != false) if (pui.Na && m.Qd() || !pui.Na && Q == "genie") Sc("pagedown"); else {
            m.mask();
            var A = m.cells.length;
            if (m.t) A -= 1;
            m.w += A;
            A = m.w + A - 1;
            if (m.wb()) {
                if (m.totalRecs <
                    A && m.s != null) {
                    m.w = m.w - A + m.totalRecs;
                    if (m.w < 1) m.w = 1
                }
            } else {
                var C = m.dataArray;
                if (m.isFiltered()) C = m.Cb;
                if (C.length < A && m.s != null) {
                    m.w = m.w - A + C.length;
                    if (m.w < 1) m.w = 1
                }
            }
            if (m.Je) {
                m.s.Gh(m.w);
                if (pui.is_touch && !pui.is_mouse_capable || pui.pb) m.getData()
            } else m.getData();
            setTimeout(function () {
                m.unMask();
                if (typeof pui.G.ug == "undefined" || pui.G.ug == false) {
                    var G = 0;
                    m.t && G++;
                    var M = m.cells[G];
                    setTimeout(function () {
                        Z(M)
                    }, 100)
                }
            }, 1)
        }
    };
    this.unMask = function () {
        if (Da != null) Da.style.display = "none"
    };
    this.mask = function () {
        if (!m.designMode) {
            var A =
                m.g;
            if (A.style.visibility != "hidden") if (m.g.parentNode != null) {
                var C = parseInt(A.style.left), G = parseInt(A.style.top), M = parseInt(A.style.width) - 2;
                A = parseInt(A.style.height);
                if (Da == null) Da = document.createElement("div"); else Da.style.display = "";
                if (m.t) {
                    G += m.be;
                    A -= m.be
                }
                Da.style.position = "absolute";
                Da.style.left = C + "px";
                Da.style.top = G + "px";
                Da.style.width = M + "px";
                Da.style.height = A + "px";
                Da.className = "grid-mask";
                m.g.parentNode.appendChild(Da)
            }
        }
    };
    this.getData = function (A) {
        function C(sa, xa, wa) {
            if (!(m == null || m.cells ==
                null)) {
                if (xa != null) m.totalRecs = xa;
                if (wa > 0) {
                    m.w = wa;
                    m.clearData()
                }
                xa = e();
                for (var ta = Array(m.cells[0].length), Aa = 0; Aa < m.cells[0].length; Aa++) ta[m.cells[0][Aa].T] = Aa;
                for (Aa = 0; Aa < sa.length; Aa++) {
                    var Ga = sa[Aa], Pa = 0, Ua = m.cells[Aa + (m.t ? 1 : 0)];
                    if (Ua != null) for (var Za in Ga) {
                        var rb = Ua.length;
                        if (m.Db && m.vb.length) rb = m.vb.length;
                        if (Pa < rb) {
                            rb = Ga[Za];
                            var Ra = "", Sa;
                            Sa = pui.secLevel > 0 ? ta[Pa] : Pa;
                            if (m.Db) {
                                if (Sa == undefined) {
                                    Pa++;
                                    continue
                                }
                                if (m.V["text align"]) {
                                    var Ya = m.V["text align"].split(",");
                                    if (Ya[Pa]) Ra = " text-align:" +
                                        Ya[Pa]
                                }
                            } else if (Ua[Sa].style.textAlign != null && Ua[Sa].style.textAlign != "") Ra = " text-align:" + Ua[Sa].style.textAlign;
                            Ua[Sa].innerHTML = '<div style="' + xa + Ra + '">' + rb + "</div>";
                            if (m.Ya != null && m.Ya.text != "" && Sa === m.Ya.col) if (Ua[Sa].tagName == "DIV") {
                                pui.Np(Ua[Sa], m.Ya.text);
                                Ua[Sa].Op = true
                            }
                        }
                        Pa++
                    }
                }
                sa = m.cells.length;
                if (m.t) sa -= 1;
                if (m.s != null) if (m.s.type == "paging") {
                    m.s.Qd = false;
                    if (m.totalRecs != null) if (m.w + sa > m.totalRecs) m.s.Qd = true;
                    m.s.reset()
                } else if (m.s.type == "sliding") if (m.totalRecs != null) {
                    m.s.sc = m.totalRecs;
                    wa > 0 && m.s.Gh(m.w, true)
                }
                if (m.g.style.visibility != "hidden" && m.s != null) {
                    m.s.H();
                    typeof m.s.Ip == "function" && m.s.Ip()
                }
                if (m.A != null) {
                    m.A.zq = parseInt((m.w + sa * 2 - 2) / sa) + m.fu - 1;
                    m.A.H()
                }
                m.cp = false
            }
        }

        if (m.g.disabled != true) if (!m.designMode) {
            var G = m.cells.length;
            if (m.t) G -= 1;
            if (!(G < 1)) {
                if (m.kh != null && !gb && m.wb()) {
                    gb = true;
                    k(m.cells[0][m.kh], true)
                }
                if (!m.yF && m.wb()) {
                    g();
                    m.yF = true
                }
                var M = m.dataProps["custom sql"], P = "";
                if (M == null || M == "") {
                    var T = m.dataProps["database file"], W = m.dataProps["database fields"],
                        ca = m.dataProps["selection criteria"];
                    P = m.dataProps["order by"];
                    if (m.je != null) P = m.je;
                    if (W != null && W != "" && T != null && T != "") {
                        M = "SELECT " + W + " FROM " + T;
                        if (ca && ca != "") M += " WHERE " + ca;
                        if (P && P != "") M += " ORDER BY " + P
                    }
                } else if (m.je != null) M += " ORDER BY " + m.je;
                T = m.dataProps["data url"];
                if (T == "") T = null;
                if (M == null) M = "";
                if (M != "" || T != null) if (A != null) {
                    if (!(M == null || M == "")) {
                        var aa = ",", fa = ".";
                        if (pui.appJob != null && (pui.appJob.decimalFormat == "I" || pui.appJob.decimalFormat == "J")) {
                            aa = ";";
                            fa = ","
                        }
                        if (typeof pui["csv separator"] == "string") aa = pui["csv separator"];
                        var ba =
                            document.createElement("form");
                        ba.action = cc("PUI0009107.pgm");
                        ba.method = "post";
                        G = function (sa, xa) {
                            var wa = ec("input", sa);
                            wa.type = "hidden";
                            wa.value = xa;
                            ba.appendChild(wa)
                        };
                        pui.isCloud && G("workspace_id", pui.cloud.ws.id);
                        G("delimiter", aa);
                        pui["read db driven data as ebcdic"] !== true && G("UTF8", "Y");
                        G("decType", fa);
                        G("fileName", A + ".csv");
                        if (pui.secLevel > 0) {
                            G("q", encodeURIComponent(pui.jg(m.g)));
                            fa = {};
                            pui.ig(m.dataProps, fa);
                            for (var ha in fa) G(ha, encodeURIComponent(fa[ha]));
                            if (P && P != "") G("order", P); else pui.dbDriver ==
                            "mssql" && G("order", "(select null)")
                        } else G("q", pui.ad.ci(M));
                        G("AUTH", pui.appJob.auth);
                        if (m.t && m.vp) {
                            if (m.Db) {
                                var na = "";
                                m.vb.forEach(function (sa) {
                                    var xa = sa.name;
                                    if (sa.blankHeader) xa = "";
                                    xa = xa.replace(/"/g, '""');
                                    if (na) na += aa;
                                    na += '"' + xa + '"'
                                })
                            } else {
                                na = "";
                                for (M = 0; M < m.cells[0].length; M++) {
                                    fa = tc(m.cells[0][M]);
                                    fa = fa.replace(/"/g, '""');
                                    if (na != "") na += aa;
                                    na += '"' + fa + '"'
                                }
                            }
                            G("headings", na)
                        }
                        document.body.appendChild(ba);
                        pui.skipConfirm = true;
                        ba.submit();
                        setTimeout(function () {
                            ba.parentNode.removeChild(ba);
                            pui.skipConfirm =
                                false
                        }, 0)
                    }
                } else {
                    if (m.s != null) {
                        if (m.s.type == "paging") m.s.me = m.w == 1;
                        m.g.style.visibility != "hidden" && m.s.H()
                    }
                    fa = m.w;
                    if (sb != null && ab != null && pb > 0) fa = pb; else m.clearData();
                    ma(M, G, fa, C, m.totalRecs == null, T, true)
                } else if (Q == "dspf" || pui.Na) {
                    P = m.dataArray;
                    if (m.isFiltered()) P = m.Cb;
                    m.g.mf = 0;
                    M = m.w;
                    if (P[m.w - 1] && P[m.w - 1].P != null) M = P[m.w - 1].P;
                    m.g.VA = M;
                    if (m.wt != null) pui.Dr["toprrn." + m.wt] = M;
                    m.clearData();
                    ha = m.t ? 1 : 0;
                    A = m.w + G - 1;
                    if (P.length < A) {
                        m.w = m.w - A + P.length;
                        if (m.w < 1) m.w = 1;
                        A = P.length
                    }
                    m.bH();
                    for (M = m.w; M <= A; M++) {
                        if (m.Xy) fa =
                            m.Xy[M - 1];
                        fa || (fa = {});
                        T = {};
                        W = P[M - 1];
                        if (W == null || W.length == 0) T.empty = true; else for (ca = 0; ca < m.eb.length; ca++) T[m.eb[ca]] = W[ca];
                        if (m.Cg || m.Vq != null || m.Wn != null) m.Fh(ha);
                        if (T.empty != true) {
                            W = P[M - 1].P;
                            if (W == null) W = M;
                            pui.Pn({
                                designMode: false,
                                name: pui.Wb(m.Sf),
                                metaData: {items: m.Za},
                                data: T,
                                Wy: fa,
                                ref: m.ref,
                                errors: m.errors,
                                Yn: ha,
                                P: W,
                                Dd: M - 1,
                                Ya: m.Ya
                            });
                            if (m.Cg && m.gd != null) {
                                T = pui.Wb(m.Sf) + "." + pui.ca(m.gd.fieldName) + "." + W;
                                if (pui.Ua[T] == null) {
                                    P[M - 1].selection = {
                                        modified: false, type: "grid selection", value: m.gd.dataType ==
                                        "indicator" ? "0" : " ", P: W, sa: m.gd
                                    };
                                    pui.Ua[T] = [];
                                    pui.Ua[T].push(P[M - 1].selection)
                                }
                            }
                        }
                        ha++
                    }
                    if (m.s != null && m.s.type == "sliding") m.s.sc = P.length;
                    if (m.g.style.visibility != "hidden" && m.s != null) {
                        m.s.H();
                        typeof m.s.Ip == "function" && m.s.Ip()
                    }
                    if (m.A != null) {
                        m.A.zq = parseInt((m.w + G * 2 - 2) / G) + m.fu - 1;
                        m.A.H()
                    }
                    m.cp = false
                }
            }
        }
    };
    this.clearData = function () {
        if (!m.cp) {
            var A;
            if (m.s != null) A = m.s.bC;
            for (var C = m.t ? 1 : 0; C < m.cells.length; C++) for (var G = 0; G < m.cells[C].length; G++) for (var M = m.cells[C][G], P = M.firstChild; P;) {
                if (P == A) {
                    P.style.display =
                        "none";
                    P.rl = true;
                    m.g.appendChild(P)
                } else M.removeChild(P);
                P = M.firstChild
            }
            m.cp = true
        }
    };
    this.bH = function () {
        for (var A in m.Ir) m.Ir[A].aH()
    };
    this.destroy = function () {
        m.bg && ic(document, "click", m.Mp);
        for (var A = m.B.length - 1; A >= 0; A -= 1) m.B[A].parentNode != null && m.B[A].parentNode.removeChild(m.B[A]);
        for (A = m.v.length - 1; A >= 0; A -= 1) m.v[A].parentNode != null && m.v[A].parentNode.removeChild(m.v[A]);
        m.s != null && m.s.destroy();
        m.A != null && m.A.destroy();
        m.Gd != null && m.Gd.destroy();
        qb != null && qb.parentNode.removeChild(qb);
        Cb !=
        null && Cb.parentNode.removeChild(Cb);
        tb != null && tb.parentNode.removeChild(tb);
        xb != null && xb.parentNode.removeChild(xb);
        La != null && La.parentNode.removeChild(La);
        Ta != null && Ta.parentNode.removeChild(Ta);
        Wa != null && Wa.parentNode.removeChild(Wa);
        kb != null && kb.parentNode.removeChild(kb);
        Fa != null && Fa.parentNode.removeChild(Fa);
        $a = eb = Fa = null;
        delete m.dataArray;
        delete m.Cb;
        delete m.fi;
        delete m.Za;
        delete m.eb;
        delete m.ref;
        delete m.B;
        delete m.v;
        delete m.cells;
        delete m.Ac;
        delete m.vb;
        delete m.Ir;
        delete m.V;
        delete m
    };
    this.ii = function () {
        for (var A = "", C = 1; C < m.B.length; C++) {
            var G = parseInt(m.B[C].style.left) - parseInt(m.B[C - 1].style.left);
            A += A == "" ? String(G) : "," + String(G)
        }
        return A
    };
    this.Oi = function (A) {
        if (typeof A == "string") A = A.split(",");
        if (!(m.B.length <= 0)) {
            for (var C = parseInt(m.B[0].style.left), G = 1; G < m.B.length; G++) {
                var M = m.Mx, P = G - 1;
                if (P < A.length) M = pui.Rc(A[P], 50);
                C += M;
                m.B[G].style.left = C + "px"
            }
            N();
            m.designMode && m.cc();
            B();
            m.setScrollBar();
            m.ie();
            m.Od(true)
        }
    };
    this.Ch = function () {
        if (!m.kt) if (m.designMode) {
            var A = m.g.c;
            if (A != null) {
                A.designer.we.update();
                var C = A.designer.selection;
                if (C.e.length == 1 && C.e[0].c == A) m.Od(); else {
                    C.clear();
                    C.add(A);
                    m.Od(true)
                }
            }
        }
    };
    this.Od = function (A) {
        if (m.designMode) if (!R.Of) {
            var C = m.g.c;
            if (C != null) {
                var G = m.v.length - 1;
                if (G < 0) G = 0;
                G = String(G);
                var M = m.B.length - 1;
                if (M < 0) M = 0;
                M = String(M);
                var P = false;
                P = c(C, "number of rows", G) || P;
                P = c(C, "number of columns", M) || P;
                P = c(C, "row height", m.cb) || P;
                P = c(C, "header height", m.be) || P;
                P = c(C, "column widths", m.ii()) || P;
                P = c(C, "left", m.g.style.left) || P;
                P = c(C, "top",
                    m.g.style.top) || P;
                P = c(C, "height", m.g.style.height) || P;
                if (P = c(C, "width", m.g.style.width) || P) {
                    C.designer.qb();
                    Q === "dspf" && pui.ide.refreshRibbon()
                }
                if (P || A) C.designer.k.refresh()
            }
        }
    };
    this.ie = function (A) {
        if (m.t) if (!(m.cells.length <= 0)) for (var C = e(), G = m.cells[0], M = 0; M < G.length; M++) {
            var P = G[M], T = false, W = null;
            if (m.designMode == false) {
                if (P.te != null) {
                    T = true;
                    m.Kq(P)
                }
                if (P.Ee != null) {
                    W = P.Ee;
                    W.parentNode != null && W.parentNode.removeChild(W)
                }
            }
            if (m.Ac.length <= M) P.innerHTML = ""; else {
                var ca = "";
                if (P.style.textAlign != null &&
                    P.style.textAlign != "") ca = " text-align:" + P.style.textAlign;
                P.innerHTML = m.Db && A ? '<div style="' + C + ca + '">' + (A[M] ? A[M] : "") + "</div>" : '<div style="' + C + ca + '">' + (m.Ac[M] ? m.Ac[M] : "") + "</div>";
                V(P)
            }
            T && m.jr(P);
            T = false;
            if (m.designMode == false && m.sortable == true) if (W != null) t(P, W); else if (m.zd != null) {
                if (cb == P.T) T = true; else if (m.g.kj != null && m.kh == P.T) T = true; else if (m.g.ei != null && m.$m != null && m.$m == m.Ht(P.T)) T = true;
                if (T) {
                    q();
                    t(P, m.zd)
                }
            }
        }
    };
    this.$E = function () {
        if (m.t) if (!(m.cells.length <= 0)) for (var A = 0; A < m.cells[0].length; A++) m.cells[0][A].innerHTML =
            ""
    };
    this.vu = function () {
        function A(ca) {
            function aa() {
                if (m.g.kj != null) {
                    m.Ss = String(ca.T);
                    pui.Pg = m;
                    pui.Ld();
                    pui.Pg = null
                } else if (m.g.ei != null) {
                    m.Jm = m.Ht(ca.col);
                    if (m.Jm == null) m.Li = null; else {
                        pui.Ug = m;
                        pui.Ld();
                        pui.Ug = null
                    }
                } else r(ca)
            }

            gc(ca, "click", aa);
            ca.tr = aa
        }

        if (m.sortable) if (!(Q != "dspf" && !pui.Na)) if (m.t) if (!(m.cells.length <= 0)) {
            var C = m.cells[0];
            if (m.dataProps["database file"] != null && m.dataProps["database file"] != "" && (m.dataProps["custom sql"] == null || m.dataProps["custom sql"] == "") && (m.dataProps["data url"] ==
                null || m.dataProps["data url"] == "") && m.dataProps["database fields"] != null && m.dataProps["database fields"] != "") for (var G = pui.Ok(m.dataProps["database fields"]), M = 0; M < G.length; M++) {
                if (C[M]) {
                    C[M].fieldName = G[M];
                    f(C[M], M)
                }
            } else if (m.dataProps["custom sql"] != null && m.dataProps["custom sql"] != "" || m.dataProps["data url"] != null && m.dataProps["data url"] != "") {
                G = m.B.length - 1;
                for (M = 0; M < G; M++) f(C[M], M)
            } else {
                for (M = 0; M < m.Za.length; M++) {
                    var P = m.Za[M];
                    G = Number(P.column);
                    var T = P.value;
                    if (P["field type"] == "html container") T =
                        P.html;
                    if (pui.f(T) && !isNaN(G) && G < C.length && C[G].Mv == null) {
                        P = pui.ca(T.fieldName);
                        for (var W = 0; W < m.eb.length; W++) if (P == m.eb[W]) {
                            C[G].Mv = W;
                            C[G].fieldName = P;
                            C[G].dataType = T.dataType;
                            C[G].hy = T;
                            if (T.dateFormat) C[G].dateFormat = T.dateFormat;
                            if (!pui.pb) C[G].style.cursor = "pointer";
                            A(C[G]);
                            C[G].tb = !o(G);
                            break
                        }
                    }
                }
                if (m.Zm instanceof Array) {
                    C = function (ca, aa, fa) {
                        if (parseInt(ca, 10) !== aa.T) return false;
                        if (m.Sg.length > fa && m.Sg[fa] === "A") aa.tb = false;
                        return true
                    };
                    l(m.Zm, C);
                    r(null, false, true)
                } else if (m.an instanceof Array) {
                    C =
                        function (ca, aa, fa) {
                            if (ca !== aa.fieldName) return false;
                            if (m.Sg.length > fa && m.Sg[fa] === "A") aa.tb = false;
                            return true
                        };
                    l(m.an, C);
                    r(null, false, true)
                } else if (m.kh != null) r(C[m.kh], false, true); else if (m.$m != null) {
                    M = m.gG(m.$m);
                    M != null && r(C[M], false, true)
                }
            }
        }
    };
    this.hJ = function () {
        var A = h();
        if (A != null) {
            if (Ib && !m.Db) {
                var C = A.colWidths;
                if (C != null) {
                    m.Oi(C);
                    m.cc();
                    m.ie()
                }
            }
            if (nb && !m.Db) {
                var G = A.colSequence;
                if (G != null) {
                    var M = Array(G.length);
                    for (C = 0; C < M.length; C++) M[C] = m.cells[0][G[C]];
                    for (C = 0; C < M.length; C++) m.moveColumn(M[C].col,
                        C)
                }
            }
            if (m.Db) {
                G = A.hidableColState;
                if (C = A.colWidths) C = C.filter(ja());
                if (G) {
                    var P = G.cols;
                    M = P.map(ja());
                    G = A.colSequence;
                    if (M != null) {
                        M.sort(function (W, ca) {
                            return W.savedColumn > ca.savedColumn ? 1 : -1
                        }).forEach(function (W) {
                            var ca = W.columnId;
                            if (ca !== undefined) {
                                m.vb.every(function (fa) {
                                    if (fa.columnId === ca) {
                                        W.name = fa.name;
                                        return false
                                    }
                                    return true
                                });
                                if (W.showing) {
                                    if (nb) {
                                        var aa = ka(ca);
                                        aa != W.savedColumn && m.moveColumn(aa, W.savedColumn)
                                    }
                                } else m.removeColumn(ca)
                            }
                        });
                        if (G) M.vm = G;
                        m.vb = M;
                        m.vb.sort(function (W, ca) {
                            var aa =
                                null, fa = null;
                            P.every(function (ba, ha) {
                                if (W.columnId === ba.columnId) aa = ha;
                                if (ca.columnId === ba.columnId) fa = ha;
                                if (aa !== null && fa !== null) return false;
                                return true
                            });
                            return aa > fa ? 1 : -1
                        })
                    }
                }
                if (C) {
                    m.Oi(C);
                    m.cc()
                }
                m.Tg && m.cd();
                m.ie(m.Ey(m.vb))
            }
            if (m.sortable && !m.wb() && m.g.kj == null && m.g.ei == null) {
                G = A.sort;
                if (G != null) if (G.columnId != null && G.descending != null) {
                    var T;
                    for (C = 0; C < m.cells[0].length; C++) if (m.cells[0][C].T == G.columnId) {
                        T = m.cells[0][C];
                        T.tb = !G.descending
                    }
                    r(T, true, false)
                } else if (G.multiSort instanceof Array) {
                    n(G.multiSort);
                    r(null, true, false)
                }
            }
            T = A.filters;
            if (T != null && !m.wb()) for (C = 0; C < T.length; C++) {
                G = A.filters[C].column;
                M = A.filters[C].text;
                M == null || M == "" ? m.removeFilter(G) : m.setFilter(G, M)
            }
        }
    };
    this.ZH = function (A) {
        cb = null;
        eb = [];
        if (A instanceof Array) {
            i();
            var C = "", G = "", M = "", P = "";
            l(A, function (T, W) {
                if (T.tx !== W.T) return false;
                W.tb = T.Px;
                C += P + (T.Px ? "D" : "A");
                G += P + T.tx;
                if (m.g.ei != null) M += P + m.Ht(W.col);
                P = ",";
                return true
            });
            if (m.g.kj != null) {
                m.Ss = G;
                pui.Pg = m;
                if (m.g.xl != null) m.Li = C;
                pui.Ld();
                pui.Pg = null
            } else if (m.g.ei != null) {
                m.Jm = M;
                if (m.Jm ==
                    null) m.Li = null; else {
                    if (m.g.xl != null) m.Li = C;
                    pui.Ug = m;
                    pui.Ld();
                    pui.Ug = null
                }
            } else m.wb() ? k(null, false) : r(null, false, false)
        }
    };
    this.eF = function (A, C) {
        if (!m.Kx) {
            m.Kx = true;
            var G = Number(m.dataProps["starting row"]), M = Number(m.dataProps["ending row"]);
            if (!(isNaN(G) || isNaN(M))) if (m.dataProps["data columns"] != null) {
                for (var P = [], T = 0; T < A; T++) {
                    var W = "data columns";
                    if (T > 0) W += " " + (T + 1);
                    P[T] = m.dataProps[W].split(",")
                }
                m.dataArray = [];
                m.w = 1;
                W = 0;
                m.t && W++;
                for (G = G; G <= M; G += A) {
                    var ca = W - (m.t ? 1 : 0);
                    m.dataArray[ca] = [];
                    m.dataArray[ca].selected =
                        false;
                    for (T = 0; T < A; T++) for (var aa = 0; aa < P[T].length; aa++) {
                        var fa = P[T][aa], ba = "D_" + (G + T) + "_" + fa, ha = m.g.parentNode.id;
                        if (ha != null && ha.substr(0, 6) == "window") {
                            var na = parseInt(ha.substr(6, 1));
                            if (!isNaN(na) && na > 0) ba += "_W" + na
                        }
                        var sa = Tb(ba), xa, wa;
                        if (sa == null) {
                            ba = "I_" + (G + T) + "_" + fa;
                            sa = Tb(ba);
                            if (sa == null) if (!isNaN(na) && na > 0) ba += "_W" + na;
                            sa = Tb(ba);
                            if (sa == null) continue;
                            if (!sa.readOnly) continue;
                            fa = sa.value;
                            fa = fa.replace(/ /g, "&nbsp;");
                            sa.style.display = "none";
                            ba = sa.className;
                            ha = parseInt(sa.style.left);
                            xa = parseInt(sa.style.top);
                            wa = sa.S
                        } else {
                            fa = sa.innerHTML;
                            ba = sa.className;
                            ha = parseInt(sa.style.left);
                            xa = parseInt(sa.style.top);
                            wa = sa.S;
                            sa.parentNode.removeChild(sa)
                        }
                        if (ba == null || ba == "" || ba == "A20") ba = ""; else if (ba.indexOf("readOnly") != -1) {
                            ba = pui.gv(ba, "readOnly");
                            ba = pui.gv(ba, "input")
                        }
                        sa = aa;
                        if (A > 1) sa = 0;
                        if (m.cells.length <= W) break;
                        var ta = m.cells[W][sa];
                        if (ta != null) {
                            var Aa = document.createElement("div");
                            Aa.className = ba;
                            Aa.innerHTML = fa;
                            m.dataArray[ca][sa] = fa.replace(/&nbsp;/g, " ");
                            Aa.style.position = "absolute";
                            ha -= parseInt(ta.style.left);
                            ha -= parseInt(m.g.style.left);
                            if (C == true || A == 1) ha = 5;
                            Aa.style.left = ha + "px";
                            xa -= parseInt(ta.style.top);
                            xa -= parseInt(m.g.style.top);
                            if (C == true || A == 1) xa = 5;
                            Aa.style.top = xa + "px";
                            Aa.S = wa;
                            gc(Aa, "click", setPos);
                            if (A == 1) {
                                ta.S = wa;
                                gc(ta, "click", setPos)
                            }
                            ta.appendChild(Aa)
                        }
                    }
                    W++
                }
            }
        }
    };
    this.setScrollBar = function () {
        if (m.A.b == null) {
            m.A.b = m.b;
            m.A.grid = m;
            m.A.init();
            m.A.H()
        }
        m.A.x = parseInt(m.g.style.left);
        m.A.y = parseInt(m.g.style.top);
        var A = parseInt(m.g.style.height);
        if (isNaN(A)) A = 0;
        m.A.y += A;
        m.A.width = parseInt(m.g.style.width);
        if (isNaN(m.A.width) || m.A.width < 10) m.A.width = 10;
        m.A.width -= 2;
        if (!m.designMode) {
            m.A.width -= 2;
            m.A.H()
        }
        m.A.position();
        var C = true;
        if (m.v.length < 2) C = false;
        if (m.v.length < 3 && m.t) C = false;
        if (m.B.length < 2) C = false;
        if (!m.Gi && !m.Je) C = false;
        A = "paging";
        if (m.Je) A = "sliding";
        if (Q == "genie" && !m.designMode && m.wb()) A = "sliding";
        if (C && (m.s == null || m.s != null && m.s.type != A)) {
            m.s != null && m.s.destroy();
            if (A == "paging") {
                m.s = new pui.RC;
                m.s.grid = m
            }
            if (A == "sliding") {
                m.s = new pui.gD;
                if (Q == "genie" && !pui.Na) m.s.ql = true
            }
            m.s.b = m.b;
            m.s.zIndex =
                m.qJ;
            m.s.designMode = m.designMode;
            if (A == "sliding") {
                m.s.sq = function (T) {
                    m.w = T;
                    if (!(m == null || m.cells == null)) {
                        m.getData();
                        m.tA(true)
                    }
                };
                m.s.onchange = function () {
                    m.wb() && m.clearData()
                };
                m.s.OF(m.g)
            }
            if (A == "paging") {
                m.s.An = function () {
                    if (F("onpageup") == false) return false;
                    if (m.wb()) {
                        if (m.w > 1) {
                            var T = m.cells.length;
                            if (m.t) T -= 1;
                            m.w -= T;
                            if (m.w < 1) m.w = 1;
                            m.getData()
                        }
                        return true
                    } else if (Q == "dspf" || pui.Na) {
                        pui.Wk({}, "PageUp");
                        m.s.type == "paging" && pui.yd && setTimeout(function () {
                            m.s.destroy();
                            m.s = null;
                            m.setScrollBar()
                        }, 250)
                    } else if (Q ==
                        "genie") {
                        Sc("PageUp");
                        return true
                    }
                };
                m.s.zn = function () {
                    if (F("onpagedown") == false) return false;
                    if (m.wb()) {
                        var T = m.cells.length;
                        if (m.t) T -= 1;
                        m.w += T;
                        m.getData();
                        return true
                    } else if (Q == "dspf" || pui.Na) {
                        pui.Wk({}, "PageDown");
                        m.s.type == "paging" && pui.yd && setTimeout(function () {
                            m.s.destroy();
                            m.s = null;
                            m.setScrollBar()
                        }, 250)
                    } else if (Q == "genie") {
                        Sc("PageDown");
                        return true
                    }
                }
            }
            m.s.init(m.g)
        }
        if (C) {
            C = m.borderWidth;
            if (C === null || m.designMode && C < jb) C = jb;
            var G = 23;
            if (pui.is_touch && !pui.is_mouse_capable && !m.designMode || pui.pb) G =
                0;
            m.s.x = parseInt(m.B[m.B.length - 1].style.left) - G;
            if (!m.designMode && m.b != null && m.b.tagName == "DIV" && m.b.getAttribute("container") == "true") {
                var M = m.b.parentNode;
                if (M != null && M.tagName == "DIV" && M.style.overflowX == "scroll") {
                    var P = M.parentNode;
                    if (P != null && P.tagName == "DIV" && P.pui != null && P.pui.properties != null && P.pui.properties.template == "simple container" && P.pui.properties["overflow x"] == "scroll") if (P.offsetWidth < m.g.offsetWidth + m.g.offsetLeft) {
                        m.s.x = P.offsetWidth - G + 2 + M.scrollLeft;
                        M.onscroll = function () {
                            m.s.x =
                                P.offsetWidth - G + 2 + M.scrollLeft;
                            m.g.style.visibility != "hidden" && m.s.H(true)
                        }
                    }
                }
            }
            m.s.y = parseInt(m.g.style.top) + C;
            if (A == "paging") {
                m.s.height = m.ae("height") - C;
                if (m.s.height < 0) m.s.height = 0
            }
            if (A == "sliding") {
                m.s.interval = m.wb() ? 250 : 1;
                A = m.cells.length;
                if (m.t) A -= 1;
                m.s.Md = A;
                m.s.cb = m.cb;
                m.s.borderWidth = C;
                if (m.designMode) m.s.sc = A * 3;
                if (m.qv == "row number") {
                    m.s.Nl = true;
                    m.s.Ol = false
                } else if (m.qv == "row range") {
                    m.s.Nl = false;
                    m.s.Ol = true
                } else {
                    m.s.Nl = false;
                    m.s.Ol = false
                }
            }
            if (m.t) {
                A = m.be;
                m.s.y += A;
                A = -A;
                m.s.height += A
            }
            m.g.style.visibility !=
            "hidden" && m.s.H()
        } else if (m.s != null) {
            m.s.destroy();
            m.s = null
        }
    };
    this.ae = function (A) {
        A = parseInt(m.g.style[A]);
        if (isNaN(A)) A = 0;
        return A
    };
    this.setProperty = function (A, C) {
        if (C == null) C = "";
        if (A.indexOf("parameter value") == 0) m.dataProps[A] = C; else switch (A) {
            case "id":
            case "parent window":
            case "screen identifier":
            case "field type":
            case "value":
            case "color":
            case "display subfile":
            case "display control record":
            case "initialize subfile":
            case "subfile records not active":
            case "delete subfile":
            case "clear subfile":
            case "subfile size":
            case "subfile next changed":
            case "subfile record number":
            case "position at top":
            case "place cursor":
            case "cursor record number":
            case "cursor progression":
            case "subfile return rrn":
            case "subfile changed":
            case "subfile message key":
            case "subfile program message queue":
            case "subfile control program message queue":
            case "allow drag":
            case "ondragstart":
            case "drop targets":
            case "ondragenter":
            case "ondragleave":
            case "ondrop":
            case "return mode":
            case "selection field":
            case "column sort response":
            case "right":
            case "bottom":
                break;
            case "field name sort response":
                break;
            case "return sort order":
                break;
            case "record format name":
                m.Sf = C;
                if (Q == "dspf") {
                    var G = m.g.c;
                    if (G != null) {
                        G.properties[A] = C;
                        rd.refresh()
                    }
                }
                break;
            case "description":
                if (Q == "dspf") {
                    G = m.g.c;
                    if (G != null) {
                        G.properties[A] = C;
                        rd.refresh()
                    }
                }
                break;
            case "font family":
            case "font size":
            case "font style":
            case "font variant":
            case "font weight":
            case "letter spacing":
            case "text align":
            case "text decoration":
            case "text transform":
            case "word spacing":
            case "header font color":
            case "header background":
            case "header image":
            case "row font color":
            case "row background":
            case "odd row font color":
            case "odd row background":
            case "even row font color":
            case "even row background":
            case "hover font color":
            case "hover background":
            case "hover image":
            case "selection font color":
            case "selection background":
            case "selection image":
            case "header font family":
            case "header font size":
            case "header font weight":
            case "header font style":
            case "header text align":
                m.V[A] =
                    C == "" && m.Wh[A] != null ? m.Wh[A] : C;
                if (m.designMode) {
                    m.Tf();
                    if (A == "text align" || A == "header text align" || A == "header font family" || A == "header font size" || A == "header font style" || A == "header font weight") m.ie()
                }
                break;
            case "row selection":
                if (C == "single" || C == "multiple (simple)" || C == "multiple (extended)") {
                    m.Cg = true;
                    if (C == "single") {
                        m.qo = true;
                        m.Im = false
                    } else {
                        m.qo = false;
                        m.Im = C == "multiple (extended)" ? true : false
                    }
                    if (typeof pui["grid text selection"] == "undefined" || pui["grid text selection"] == false) {
                        m.g.onselectstart =
                            za(false);
                        if (typeof m.g.style.MozUserSelect != "undefined") m.g.style.MozUserSelect = "none"
                    }
                } else {
                    m.Cg = false;
                    m.qo = false;
                    m.Im = false
                }
                break;
            case "selection value":
                if (C != null && C != "") m.Dl = C;
                break;
            case "number of rows":
                G = m.v.length - 1;
                if (G < 0) G = 0;
                var M = parseInt(C);
                if (isNaN(M)) M = G;
                if (M < 1) M = 1;
                if (m.t && M < 2) M = 2;
                if (M > 99 && m.designMode) M = 99;
                if (M > G) {
                    for (; M > m.v.length - 1;) m.Kg();
                    m.Kj()
                }
                if (M < G) for (; M < m.v.length - 1;) m.vl();
                if (m.g.c != null) m.g.c.properties[A] = C;
                m.Od();
                break;
            case "number of columns":
                M = m.B.length - 1;
                if (M < 0) M = 0;
                G = parseInt(C);
                if (isNaN(G)) G = M;
                if (G < 1) G = 1;
                if (G > 99) G = 99;
                if (G > M) for (; G > m.B.length - 1;) m.gs();
                if (G < M) for (; G < m.B.length - 1;) {
                    M = m.B.length - 2;
                    if (m.designMode && m.ni(M)) break;
                    m.hv()
                }
                m.designMode && m.cc();
                if (m.g.c != null) m.g.c.properties[A] = C;
                m.Od();
                break;
            case "row height":
                if (isNaN(parseInt(C)) || parseInt(C) <= 0) {
                    m.Od(true);
                    break
                }
                m.cb = parseInt(C);
                G = m.t ? 1 : 0;
                if (m.v.length <= G) return;
                M = parseInt(m.v[G].style.top);
                for (G = G + 1; G < m.v.length; G++) {
                    M += m.cb;
                    m.v[G].style.top = M + "px"
                }
                O();
                m.designMode && m.cc();
                B();
                m.setScrollBar();
                m.Od();
                break;
            case "header height":
                if (isNaN(parseInt(C)) || parseInt(C) <= 0) {
                    m.Od(true);
                    break
                }
                m.be = parseInt(C);
                if (!m.t || m.v.length < 2) return;
                m.v[0].style.top = parseInt(m.v[1].style.top) - m.be + "px";
                L();
                O();
                m.designMode && m.cc();
                B();
                m.setScrollBar();
                m.Od();
                break;
            case "has header":
                if (m.t && (C == false || C == "false")) {
                    m.$E();
                    m.t = false;
                    if (Q == "dspf" || pui.Na) {
                        G = m.B.length - 1;
                        for (M = 0; M < G; M++) H(m.cells[1][M], m.cells[0][M]);
                        m.Kj()
                    }
                    if (m.v.length > 1) {
                        m.v[0].style.top = parseInt(m.v[1].style.top) - m.cb + "px";
                        L();
                        O();
                        m.designMode &&
                        m.cc();
                        B();
                        m.setScrollBar()
                    }
                    m.designMode && m.Tf()
                }
                if (!m.t && (C == true || C == "true" || C == "")) {
                    m.cells.length <= 1 && m.Kg();
                    m.t = true;
                    if (Q == "dspf" || pui.Na) {
                        G = m.B.length - 1;
                        for (M = 0; M < G; M++) H(m.cells[0][M], m.cells[1][M]);
                        m.Kj()
                    }
                    if (m.v.length > 1) {
                        m.v[0].style.top = parseInt(m.v[1].style.top) - m.be + "px";
                        L();
                        O();
                        m.designMode && m.cc();
                        B();
                        m.setScrollBar()
                    }
                    m.Tf();
                    m.ie()
                }
                break;
            case "column widths":
                m.Oi(C);
                break;
            case "column headings":
                if (!pui.f(C) && !pui.Ia(C)) m.Ac = pui.Ta(C);
                m.ie();
                if (m.designMode && m.Db && m.vb instanceof Array) for (G =
                                                                            0; G < m.vb.length && G < m.Ac.length; G++) m.vb[G].name = m.Ac[G];
                break;
            case "sortable columns":
                m.sortable = C == "true";
                Q == "genie" && m.vu();
                break;
            case "default sort order":
                if (!m.designMode) {
                    m.Sg = C == null ? [] : C.split(",");
                    i()
                }
                break;
            case "initial sort column":
                if (!m.designMode) {
                    m.kh = parseInt(C);
                    if (isNaN(m.kh)) m.kh = null;
                    if (typeof C === "string") {
                        m.Zm = C.split(",");
                        if (m.Zm.length <= 1) m.Zm = null
                    }
                }
                break;
            case "initial sort field":
                if (!m.designMode) {
                    m.$m = C;
                    if (typeof C === "string") {
                        m.an = C.split(",");
                        if (m.an.length <= 1) m.an = null
                    }
                }
                break;
            case "resizable columns":
                if (!m.designMode && (C == true || C == "true")) {
                    this.dJ = Ib = true;
                    for (G = 0; G < m.B.length; G++) J(m.B, G, true, true)
                }
                break;
            case "movable columns":
                if (!m.designMode && m.t && (C == true || C == "true")) {
                    this.Sz = nb = true;
                    G = m.cells[0];
                    if (G == null) {
                        m.Kg();
                        G = m.cells[0];
                        if (G == null) {
                            m.Kg();
                            G = m.cells[0]
                        }
                    }
                    for (M = 0; M < G.length; M++) z(G[M], true)
                }
                break;
            case "persist state":
                wb = m.designMode == false && pui.nc() && (C == true || C == "true");
                break;
            case "expand to layout":
                G = C == true || C == "true";
                if (G != m.Tg) {
                    m.Tg = G;
                    if (m.Tg) if (m.designMode) {
                        m.cd();
                        m.g.c.properties["expand to layout"] = "true";
                        m.g.c.m["expand to layout"] = true;
                        m.g.c.designer.k.ea("expand to layout")
                    }
                }
                break;
            case "find option":
                m.yt = C == true || C == "true";
                break;
            case "filter option":
                m.Km = C == true || C == "true";
                break;
            case "hide columns option":
                m.Db = C == true || C == "true";
                var P = m.B.length - 1, T = m.ii().split(",").map(function (aa) {
                    return Number(aa)
                });
                for (G = 0; G < P; G++) {
                    M = m.Ac[G];
                    var W = false;
                    if (!M || typeof M === "string" && !M.trim()) {
                        M = "Column " + (G + 1);
                        W = true
                    }
                    M = {
                        name: M, columnId: G, currentColumn: G, width: T[G],
                        orginalWidth: T[G], showing: true, blankHeader: W
                    };
                    m.vb.push(M)
                }
                break;
            case "reset option":
                m.TA = C == true || C == "true";
                break;
            case "export option":
                m.vt = C == true || C == "true" ? true : C == false || C == "false" ? false : null;
                break;
            case "export only visible columns":
                m.Hm = C == true || C == "true" ? true : false;
                break;
            case "context menu id":
                if (!m.designMode) {
                    ic(document, "click", m.Mp);
                    G = Zb(C);
                    if (G != "") m.bg = G;
                    if (pui.is_touch) {
                        m.g.onselectstart = za(false);
                        if (typeof m.g.style.MozUserSelect != "undefined") m.g.style.MozUserSelect = "none";
                        if (typeof m.g.style.webkitUserSelect !=
                            "undefined") m.g.style.webkitUserSelect = "none"
                    }
                    gc(document, "click", m.Mp)
                }
                break;
            case "show paging controls":
                m.A.Xf = C == true || C == "true";
                if (m.designMode) {
                    m.A.H();
                    B()
                }
                break;
            case "show page number":
                m.A.Ml = C == true || C == "true";
                if (m.designMode) {
                    m.A.H();
                    B()
                }
                break;
            case "initial page number":
                G = Number(C);
                if (isNaN(G)) G = 1;
                m.A.zq = G;
                m.fu = G;
                if (m.designMode) {
                    m.A.H();
                    B()
                }
                break;
            case "show bar":
                m.A.qr = C == true || C == "true";
                if (m.designMode) {
                    m.A.H();
                    B()
                }
                break;
            case "page down condition":
                m.A.lA = C;
                break;
            case "subfile end":
                m.SB =
                    C == true || C == "true";
                break;
            case "page up condition":
                m.A.mA = C;
                break;
            case "page up response":
                if (C != null && C != "") {
                    m.A.Fn = true;
                    m.A.Nu = true
                }
                break;
            case "page down response":
                if (C != null && C != "") {
                    m.A.En = true;
                    m.A.Lu = true
                }
                break;
            case "filter response":
                m.designMode || Ea(C);
                break;
            case "filter response text max":
                G = parseInt(C, 10);
                m.gi = isNaN(G) ? 20 : G;
                if (m.gi < 1) m.gi = 1;
                m.designMode || Ea();
                break;
            case "filter response column max":
                G = parseInt(C, 10);
                m.Wg = isNaN(G) ? 3 : G;
                if (m.Wg < 1) m.Wg = 1;
                m.designMode || Ea();
                break;
            case "csv export":
                m.A.mj =
                    C == true || C == "true";
                if (m.designMode) {
                    m.A.H();
                    B()
                }
                break;
            case "xlsx export":
                m.A.Vl = C == true || C == "true";
                if (m.designMode) {
                    m.A.H();
                    B()
                }
                break;
            case "xlsx export pics":
                m.A.mC = C == true || C == "true";
                break;
            case "export file name":
                m.ey = C;
                break;
            case "export with headings":
                m.vp = C == true || C == "true";
                break;
            case "fold multiple":
                m.Zd = parseInt(C);
                if (isNaN(m.Zd) || m.Zd < 1) m.Zd = 1;
                break;
            case "expanded":
                if (!m.designMode) {
                    if (C == "true") m.Wp = true;
                    if (C == "false") m.Wp = false
                }
                break;
            case "collapsed":
                if (!m.designMode) {
                    if (C == "true") m.Vp = true;
                    if (C == "false") m.Vp = false
                }
                break;
            case "single row zoom":
                if (C == "true") m.OB = true;
                break;
            case "scrollbar":
                if (Q == "genie" && !pui.Na) {
                    m.Gi = C == true || C == "true" || C == "" ? true : false;
                    m.cc()
                } else {
                    m.Je = true;
                    m.Gi = false;
                    if (C == "none") {
                        m.Je = false;
                        m.Gi = false
                    }
                    if (C == "paging") {
                        m.Je = false;
                        m.Gi = true
                    }
                    m.designMode && m.cc()
                }
                m.setScrollBar();
                break;
            case "scroll tool tip":
                m.qv = C;
                m.setScrollBar();
            case "database file":
            case "database fields":
            case "selection criteria":
            case "order by":
            case "sortable":
            case "custom sql":
            case "allow any select statement":
            case "data url":
            case "data transform function":
            case "starting row":
            case "ending row":
            case "data columns":
            case "data columns 2":
            case "data columns 3":
            case "data columns 4":
                m.dataProps[A] =
                    C;
                break;
            case "hover effect":
                m.bu = C == true || C == "true";
                break;
            case "top":
                G = C;
                if (pui.f(G)) G = G.designValue;
                var ca = parseInt(m.g.style.top) - pui.Rc(G);
                m.Wd(function (aa) {
                    aa.style.top = parseInt(aa.style.top) - ca + "px"
                });
                m.setScrollBar();
                break;
            case "left":
                M = C;
                if (pui.f(M)) M = M.designValue;
                ca = parseInt(m.g.style.left) - pui.Rc(M);
                m.Wd(function (aa) {
                    aa.style.left = parseInt(aa.style.left) - ca + "px"
                });
                m.setScrollBar();
                break;
            case "width":
                if (!m.designMode || !R.Of) {
                    G = m.B.length;
                    G -= 1;
                    if (G > 0) {
                        M = pui.Rc(C);
                        M = m.ae("left") + M;
                        if (parseInt(m.B[G -
                        1].style.left) + 5 > M) M = parseInt(m.B[G - 1].style.left) + 5;
                        if (Q === "genie") if ((P = parseInt(m.B[G].style.left)) && M - P === 1) M = P;
                        m.B[G].style.left = M + "px";
                        N();
                        m.designMode && m.cc();
                        B();
                        m.setScrollBar();
                        m.Od()
                    }
                }
                break;
            case "height":
                G = m.v.length - 1;
                if (G != 0 || !m.t) {
                    ca = pui.Rc(C) - parseInt(m.g.style.height);
                    M = parseInt(ca / (G - (m.t ? 1 : 0))) + parseInt(m.v[G].style.top);
                    m.v[G].style.top = M + "px";
                    m.cb = M - parseInt(m.v[G - 1].style.top);
                    if (m.cb < 5) m.cb = 5;
                    P = 0;
                    if (m.t) P = 1;
                    for (G = G - 1; G >= P; G -= 1) {
                        M -= m.cb;
                        m.v[G].style.top = M + "px"
                    }
                    if (m.t) m.v[0].style.top =
                        parseInt(m.v[1].style.top) - m.be + "px"
                }
                L();
                O();
                m.designMode && m.cc();
                B();
                m.setScrollBar();
                m.Od();
                break;
            case "z index":
                C = parseInt(C);
                if (isNaN(C)) C = "";
                m.g.style.zIndex = C;
                m.A != null && m.A.position();
                break;
            case "border color":
                m.zJ(C);
                break;
            case "border width":
                m.AJ(C);
                break;
            case "padding bottom":
            case "padding left":
            case "padding right":
            case "padding top":
                m.Dn[A] = C;
                m.ie();
                break;
            case "visibility":
                m.visibility = C;
                if (!m.designMode) {
                    m.Wd(function (aa) {
                        aa.style.visibility = C
                    });
                    if (m.s != null) C == "hidden" ? m.s.hide() : m.s.H()
                }
                if (m.designMode) if (C ==
                    "hidden") {
                    m.g.style.filter = "alpha(opacity=30)";
                    m.g.style.opacity = 0.3
                } else {
                    m.g.style.filter = "";
                    m.g.style.opacity = ""
                }
                break;
            case "locked in place":
                m.xi = C == true || C == "true" ? true : false;
                break;
            case "css class":
                if (m.designMode) {
                    m.qg = C;
                    m.Je && m.s.hr(C)
                }
                m.A != null && m.A.hr(C);
                break;
            case "css class 2":
            case "css class 3":
            case "css class 4":
            case "css class 5":
            case "css class 6":
            case "css class 7":
            case "css class 8":
            case "css class 9":
                break;
            case "tool tip":
                m.g.title = C;
                break;
            case "parent tab panel":
            case "parent tab":
            case "parent field set":
                break;
            case "onrowclick":
            case "onrowdblclick":
            case "onrowmouseover":
            case "onrowmouseout":
            case "onpagedown":
            case "onpageup":
            case "onscroll":
            case "onfilterchange":
                m.ut[A] = C;
                break;
            case "ondbload":
                Db = C;
                break;
            case "propagate scroll events":
                m.Vu = C === true || C === "true" ? true : false;
                break;
            case "sort function":
                if (C) Hb = C;
                break;
            default:
                if (typeof A === "string" && A.substr(0, 17) === "user defined data") break;
                pui.alert("Grid property not handled: " + A)
        }
    };
    this.Wd = function (A) {
        for (var C = 0; C < m.B.length; C++) {
            var G = m.B[C];
            A(G)
        }
        for (C =
                 0; C < m.v.length; C++) {
            G = m.v[C];
            A(G)
        }
        A(m.g);
        La != null && A(La);
        Ta != null && A(Ta);
        Wa != null && A(Wa);
        kb != null && A(kb);
        qb != null && A(qb);
        Cb != null && A(Cb);
        tb != null && A(tb);
        xb != null && A(xb)
    };
    this.ir = function (A) {
        if (m.w != null && !isNaN(m.w) && m.w > 0) {
            m.g.mf = A + m.w;
            if (m.t) m.g.mf -= 1;
            A = m.dataArray;
            if (m.isFiltered()) A = m.Cb;
            if (A[m.g.mf - 1] == null || A[m.g.mf - 1].length == 0) m.g.mf = 0; else if (A[m.g.mf - 1].P != null) m.g.mf = A[m.g.mf - 1].P
        }
    };
    this.setCursorRecordNumber = function (A) {
        if (typeof A == "number" && A > 0 && A < 9999) m.g.mf = A
    };
    this.tA = function (A) {
        var C =
            m.Cq;
        m.Cq = null;
        if (C != null) {
            C = C - m.w;
            if (!(C < 0)) {
                m.t && C++;
                if (!(C > m.cells.length - 1)) {
                    var G = m.cells[C];
                    A == true ? setTimeout(function () {
                        Z(G)
                    }, 1) : Z(G)
                }
            }
        }
    };
    this.isRowSelected = function (A) {
        A = b(A, true);
        return I(A)
    };
    this.getSelectedRows = function () {
        var A = [], C = m.dataArray;
        if (m.isFiltered()) C = m.Cb;
        for (var G = 0; G < C.length; G++) if (I(C[G])) {
            var M = G + 1;
            if (typeof m.Le != "undefined" && m.Le === true || m.isFiltered()) M = C[G].P;
            A.push(M)
        }
        return A
    };
    this.Fh = function (A, C) {
        function G(ha, na, sa) {
            if (na == null) na = "";
            var xa = na.split(",");
            if (xa.length >
                1) na = sa < xa.length ? xa[sa] : xa[0];
            ha.style.color = na;
            if (Q == "genie" && !pui.Na) for (sa = 0; sa < ha.childNodes.length; sa++) ha.childNodes[sa].style.color = na
        }

        var M = A % 2 == 1;
        if (m.t) M = !M;
        if (m.cells != null) {
            var P = m.cells[A], T = false;
            if (m.Cg) if (m.w != null && !isNaN(m.w) && m.w > 0) {
                var W = A + m.w - 1 + (m.t ? 0 : 1), ca = m.dataArray;
                if (m.isFiltered()) ca = m.Cb;
                if (ca[W - 1] != null && ca[W - 1].length > 0) T = I(ca[W - 1])
            }
            var aa = null;
            if (m.Wn != null) if (m.w != null && !isNaN(m.w) && m.w > 0) {
                W = A + m.w - 1 + (m.t ? 0 : 1);
                ca = m.dataArray;
                if (m.isFiltered()) ca = m.Cb;
                if (ca[W - 1] != null &&
                    ca[W - 1].length > 0) {
                    if (m.Xn == null) for (var fa = 0; fa < m.eb.length; fa++) if (pui.ca(m.Wn.fieldName) == m.eb[fa]) {
                        m.Xn = fa;
                        break
                    }
                    if (m.Xn != null) {
                        aa = {};
                        aa[m.eb[m.Xn]] = ca[W - 1][m.Xn];
                        aa = pui.ab(m.Wn, aa, m.ref)
                    }
                }
            }
            if (!pui.f(m.V["row background"]) && m.V["row background"] != null && m.V["row background"] != "") aa = m.V["row background"];
            var ba = null;
            if (m.Vq != null) if (m.w != null && !isNaN(m.w) && m.w > 0) {
                W = A + m.w - 1 + (m.t ? 0 : 1);
                ca = m.dataArray;
                if (m.isFiltered()) ca = m.Cb;
                if (ca[W - 1] != null && ca[W - 1].length > 0) {
                    if (m.Wq == null) for (fa = 0; fa < m.eb.length; fa++) if (pui.ca(m.Vq.fieldName) ==
                        m.eb[fa]) {
                        m.Wq = fa;
                        break
                    }
                    if (m.Wq != null) ba = ca[W - 1][m.Wq]
                }
            }
            if (!pui.f(m.V["row font color"]) && m.V["row font color"] != null && m.V["row font color"] != "") ba = m.V["row font color"];
            for (fa = 0; fa < P.length; fa++) {
                pui.La(P[fa], "selected");
                pui.La(P[fa], "hover");
                if (T) {
                    G(P[fa], m.V["selection font color"], fa);
                    P[fa].style.backgroundColor = m.V["selection background"] == null ? "" : m.V["selection background"];
                    W = m.V["selection image"];
                    P[fa].style.backgroundImage = W == null || W == "" ? "" : "url('" + pui.normalizeURL(W, true) + "')";
                    pui.ya(P[fa],
                        "selected")
                } else if (C == true) {
                    G(P[fa], m.V["hover font color"], fa);
                    P[fa].style.backgroundColor = m.V["hover background"];
                    if (m.V["hover image"] != null && m.V["hover image"] != "") {
                        P[fa].style.backgroundImage = "url('" + pui.normalizeURL(m.V["hover image"], true) + "')";
                        P[fa].style.backgroundRepeat = "repeat-x"
                    }
                    pui.ya(P[fa], "hover")
                } else {
                    ba = ba || m.V["row font color"];
                    if (!ba || !ba.trim()) ba = m.V[(M ? "even" : "odd") + " row font color"];
                    if (ba && ba.trim()) {
                        W = ba.split(",");
                        if (W.length > 1) ba = W[fa].trim()
                    }
                    G(P[fa], ba || "", fa);
                    aa = aa ||
                        m.V["row background"];
                    if (!aa || !aa.trim()) aa = m.V[(M ? "even" : "odd") + " row background"];
                    if (aa && aa.trim()) {
                        W = aa.split(",");
                        if (W.length > 1) aa = W[fa].trim()
                    }
                    P[fa].style.backgroundColor = aa || "";
                    P[fa].style.backgroundImage = ""
                }
            }
            if (C != true && m.kd != null) m.kd.style.display = "none";
            if (C == true && m.kd != null) m.kd.style.display = ""
        }
    };
    this.Uz = function () {
        var A = m.g.c, C = A.designer;
        C.n.Nc("Move " + C.selection.ve(), C);
        var G = C.nd, M, P;
        if (C.Z.style.display == "") {
            M = parseInt(C.Z.style.top);
            P = parseInt(C.Z.style.left)
        } else {
            M = parseInt(A.dom.style.top);
            P = parseInt(A.dom.style.left)
        }
        var T = pui.layout.ec(G);
        P -= T.x;
        M -= T.y;
        if (C.selection.fc) {
            P = C.selection.mb(P, pui.ac);
            M = C.selection.mb(M, pui.Ob)
        }
        var W = M - parseInt(A.dom.style.top), ca = P - parseInt(A.dom.style.left);
        m.Wd(function (aa) {
            aa.parentNode.removeChild(aa);
            G.appendChild(aa);
            aa.style.top = parseInt(aa.style.top) + W + "px";
            aa.style.left = parseInt(aa.style.left) + ca + "px"
        });
        m.s != null && m.s.Ng(G);
        m.A != null && m.A.Ng(G);
        m.b = G;
        m.g.sizeMe != null && typeof m.g.sizeMe == "function" && m.g.sizeMe();
        m.setScrollBar();
        A.properties.top =
            M + "px";
        A.properties.left = P + "px";
        C.Aa.style.display = "none";
        C.Z.style.display = "none";
        C.nd = null;
        C.selection.clear();
        C.selection.add(A);
        C.Ff();
        pui.ide.He()
    };
    this.Vz = function () {
        var A = m.g.c, C = A.designer;
        C.n.Nc("Move " + C.selection.ve(), C);
        var G = parseInt(C.Z.style.top) - parseInt(A.dom.style.top),
            M = parseInt(C.Z.style.left) - parseInt(A.dom.style.left);
        m.Wd(function (P) {
            P.parentNode.removeChild(P);
            C.b.appendChild(P);
            P.style.top = parseInt(P.style.top) + G + "px";
            P.style.left = parseInt(P.style.left) + M + "px"
        });
        m.s != null &&
        m.s.Ng(C.b);
        m.A != null && m.A.Ng(C.b);
        m.b = C.b;
        m.setScrollBar();
        A.properties.top = C.Z.style.top;
        A.properties.left = C.Z.style.left;
        C.Z.style.display = "none";
        C.selection.clear();
        C.selection.add(A);
        C.Ff();
        pui.ide.He()
    };
    this.selectRow = function (A, C) {
        if (!(!m.Cg || A < 1 || A > m.dataArray.length)) {
            for (var G = !m.isFiltered() && (typeof m.Le == "undefined" || m.Le !== true), M = 0; M < m.dataArray.length; M++) if (G && M == A - 1 || !G && m.dataArray[M].P == A) {
                if (m.dataArray[M].selected != true) {
                    ga(m.dataArray[M], true, M);
                    if (m.w != null && !isNaN(m.w) && m.w >
                        0) m.Cl = A + m.w - 1 + (m.t ? 0 : 1)
                }
            } else if ((m.qo || !C) && m.dataArray[M].selected == true) ga(m.dataArray[M], false, M);
            U()
        }
    };
    this.deselectRow = function (A) {
        function C(P) {
            ga(m.dataArray[P], false, P);
            if (G) U(); else if (m.w != null && !isNaN(m.w) && m.w > 0) {
                var T = m.t ? 1 : 0;
                P = P - m.w + 1 + T;
                P < m.v.length - 1 && P >= T && m.Fh(P)
            }
        }

        if (!(!m.Cg || A < 1 || A > m.dataArray.length)) {
            var G = m.isFiltered();
            if (!G && (typeof m.Le == "undefined" || m.Le !== true)) m.dataArray[A - 1].selected == true && C(A - 1); else for (var M = 0; M < m.dataArray.length; M++) if (m.dataArray[M].P == A && m.dataArray[M].selected ==
                true) {
                C(M);
                break
            }
        }
    };
    this.Tf = function () {
        for (var A = 0; A < m.cells.length; A++) {
            for (var C = A == 0 && m.t, G = 0; G < m.cells[A].length; G++) {
                var M = m.cells[A][G], P = A % 2 == 1;
                if (m.t) P = !P;
                oa(M, C, P, G)
            }
            !m.designMode && !C && m.Fh(A)
        }
    };
    this.cc = function () {
        for (var A = 0; A < m.cells.length; A++) for (var C = 0; C < m.cells[A].length; C++) qa(A, C);
        if (Lb == null) Lb = m.ii()
    };
    this.wb = function () {
        return m.dataProps["custom sql"] != null && m.dataProps["custom sql"] != "" || m.dataProps["data url"] != null && m.dataProps["data url"] != "" || m.dataProps["database file"] !=
        null && m.dataProps["database file"] != "" ? true : false
    };
    this.zJ = function (A) {
        if (!A) A = m.borderColor;
        for (var C = 0; C < m.B.length; C++) m.B[C].style.borderRightColor = A;
        for (C = 0; C < m.v.length; C++) m.v[C].style.borderTopColor = A;
        m.borderColor = A
    };
    this.AJ = function (A) {
        if (A == null) A = m.borderWidth;
        A = parseInt(A);
        if (isNaN(A) || A < jb && m.designMode) A = jb;
        for (var C = 0; C < m.B.length; C++) m.B[C].style.borderRightWidth = A + "px";
        for (C = 0; C < m.v.length; C++) m.v[C].style.borderTopWidth = A + "px";
        m.borderWidth = A;
        N();
        m.setScrollBar()
    };
    this.hide = function () {
        m.Wd(function (A) {
            A.style.visibility =
                "hidden"
        });
        m.s != null && m.s.hide();
        m.A != null && m.A.hide()
    };
    this.au = function () {
        m.Wi = true;
        if (m.t) {
            for (var A = 1; A < m.cells.length; A++) for (var C = 0; C < m.cells[A].length; C++) m.cells[A][C].style.display = "none";
            for (A = 2; A < m.v.length; A++) m.v[A].style.display = "none";
            for (A = 0; A < m.B.length; A++) m.B[A].style.display = "none";
            m.s != null && m.s.hide();
            m.A != null && m.A.hide()
        } else m.hide()
    };
    this.show = function () {
        m.Wd(function (M) {
            M.style.visibility = ""
        });
        var A = false, C = m.g.c;
        if (C != null) {
            var G = C.designer.selection;
            if (G.e.length == 1 &&
                G.e[0].c == C) A = true
        }
        !A && m.g.kp && m.g.kp();
        m.setScrollBar()
    };
    this.gs = function (A) {
        var C = m.B.length, G = document.createElement("div");
        G.className = "grid-vline";
        if (m.qg != "") G.className += " " + m.qg + "-vline";
        if (!m.designMode) G.th = m;
        G.style.position = "absolute";
        var M = parseInt(m.g.style.left);
        if (C > 0) M = parseInt(m.B[C - 1].style.left) + m.Mx;
        G.style.left = M + "px";
        G.style.top = m.g.style.top;
        M = 0;
        if (m.v.length > 0) M = parseInt(m.v[m.v.length - 1].style.top) - parseInt(m.g.style.top);
        G.style.height = M + "px";
        M = m.borderWidth;
        if (M === null ||
            M < jb && m.designMode) M = jb;
        G.style.borderRightStyle = "solid";
        G.style.borderRightWidth = M + "px";
        G.style.borderRightColor = m.borderColor;
        G.style.fontSize = "0px";
        G.style.padding = "0px";
        G.style.zIndex = m.FK;
        G.oncontextmenu = za(false);
        m.b.appendChild(G);
        m.B[C] = G;
        N();
        J(m.B, C, true);
        if (C > 0) {
            C = C - 1;
            for (G = 1; G < m.v.length; G++) {
                M = X(G - 1, C);
                M.T = m.Db && (A || A == 0) ? A : C;
                z(M)
            }
        }
        B();
        m.setScrollBar()
    };
    this.removeColumn = function (A) {
        if (m.B.length - 2 < 1) pui.alert(pui.getLanguageText("runtimeMsg", "cannot rmv last col")); else {
            if (m.designMode) A =
                A; else {
                A = ka(A);
                if (A < 0) {
                    pui.alert(pui.getLanguageText("runtimeMsg", "cannot find col"));
                    return
                }
            }
            m.moveColumn(A, m.cells[0].length);
            m.hv();
            m.cd();
            m.Ch()
        }
    };
    this.hv = function () {
        var A = m.B.length;
        if (!(A <= 0)) {
            A -= 1;
            m.B[A].parentNode.removeChild(m.B[A]);
            m.B[A] = null;
            m.B.splice(A, 1);
            if (A > 0) for (var C = 0; C < m.cells.length; C++) {
                m.cells[C][A - 1].parentNode.removeChild(m.cells[C][A - 1]);
                m.cells[C][A - 1] = null;
                m.cells[C].splice(A - 1, 1)
            }
            N();
            B();
            m.setScrollBar()
        }
    };
    this.moveColumn = function (A, C, G) {
        function M(ba, ha, na, sa) {
            if (ba >
                ha) {
                if (na > ha && na < ba) sa -= 1;
                if (na == ha) sa = ba - 1
            }
            if (ha > ba) {
                if (na >= ba && na < ha) sa += 1;
                if (na == ha) sa = ba
            }
            return sa
        }

        for (var P = 0; P < m.cells.length; P++) {
            var T, W = T = m.cells[P][A];
            m.cells[P].length > C ? W.parentNode.insertBefore(W, m.cells[P][C]) : W.parentNode.insertBefore(W, m.cells[P][m.cells[P].length - 1].nextSibling);
            m.cells[P].splice(C, 0, T);
            W = A;
            C <= A && W++;
            m.cells[P].splice(W, 1);
            for (W = 0; W < m.cells[P].length; W++) {
                T = m.cells[P][W];
                T.col = W
            }
        }
        for (P = 1; P < m.B.length - 1; P++) m.B[P].style.left = pui.Rc(m.B[P - 1].style.left) + pui.Rc(m.cells[0][P -
        1].style.width) + "px";
        if (m.designMode) {
            var ca = false, aa = m.g.c,
                fa = JSON != null && typeof JSON.parse == "function" && typeof JSON.stringify == "function";
            P = function (ba) {
                var ha = aa.properties[ba];
                if (!(ha == null || ha == "" || pui.f(ha))) {
                    var na = pui.Ia(ha);
                    if (na) {
                        if (!fa) return;
                        var sa = JSON.parse(ha.designValue)
                    } else sa = ha.split(",");
                    if (!(sa.length == 1 && ba != "column headings" && ba != "column widths")) {
                        for (var xa = m.cells[0].length; sa.length > xa;) {
                            sa.pop();
                            na && ha.translations.pop()
                        }
                        for (; sa.length < xa;) {
                            sa.push("");
                            na && ha.translations.push(0)
                        }
                        sa.splice(C,
                            0, sa[A]);
                        na && ha.translations.splice(C, 0, ha.translations[A]);
                        xa = A;
                        C <= A && xa++;
                        sa.splice(xa, 1);
                        na && ha.translations.splice(xa, 1);
                        if (na) {
                            na = JSON.stringify(sa);
                            if (sa = ha.designValue != na) {
                                ha.designValue = na;
                                na = ha
                            }
                        } else {
                            na = sa.join(",");
                            sa = ha != na
                        }
                        if (sa) {
                            aa.properties[ba] = na;
                            aa.m[ba] = true;
                            aa.ta = true;
                            ca = aa.designer.X[aa.designer.i.l] = true
                        }
                    }
                }
            };
            P("font family");
            P("font size");
            P("font style");
            P("font weight");
            P("letter spacing");
            P("text align");
            P("text decoration");
            P("text transform");
            P("word spacing");
            P("header font family");
            P("header font size");
            P("header font style");
            P("header font weight");
            P("header text align");
            P("header font color");
            P("header background");
            P("column headings");
            W = m.g.c.properties["column headings"];
            if (pui.Ia(W) && fa) m.Ac = JSON.parse(W.designValue); else {
                if (W == null || typeof W != "string") W = "";
                m.Ac = W.split(",")
            }
            P("odd row font color");
            P("odd row background");
            P("even row font color");
            P("even row background");
            P("row font color");
            P("row background");
            P("column widths");
            if (ca) {
                aa.designer.qb();
                aa.designer.k.refresh();
                Q == "dspf" && pui.ide.refreshRibbon()
            }
        }
        m.cc();
        if (!m.designMode) {
            if (m.wb()) {
                G = m.dataProps["database fields"];
                if (G != null && G != "") {
                    G = G.split(",");
                    G.splice(C, 0, G[A]);
                    W = A;
                    C <= A && W++;
                    G.splice(W, 1);
                    m.dataProps["database fields"] = G.join(",")
                }
            } else for (P = 0; P < m.Za.length; P++) {
                aa = m.Za[P];
                T = W = Number(aa.column);
                T = m.Db && G ? aa.columnId == G.columnId ? C : W >= C && W < A + 1 ? T + 1 : M(C, A, W, T) : M(C, A, W, T);
                if (W != T) aa.column = String(T)
            }
            m.Ac.splice(C, 0, m.Ac[A]);
            W = A;
            C <= A && W++;
            m.Ac.splice(W, 1);
            m.alignColumnTotals()
        }
    };
    this.Kg = function () {
        var A =
            m.v.length, C = document.createElement("div");
        C.className = "grid-hline";
        if (m.qg != "") C.className += " " + m.qg + "-hline";
        if (!m.designMode) C.th = m;
        C.style.position = "absolute";
        C.style.left = m.g.style.left;
        var G = parseInt(m.g.style.top);
        if (A > 0) {
            G = m.cb;
            if (A == 1 && m.t) G = m.be;
            G = parseInt(m.v[A - 1].style.top) + G
        }
        C.style.top = G + "px";
        G = 0;
        if (m.B.length > 0) {
            G = m.borderWidth;
            G = parseInt(m.B[m.B.length - 1].style.left) - parseInt(m.g.style.left) + G
        }
        C.style.width = G + "px";
        G = m.borderWidth;
        if (G < jb && m.designMode) G = jb;
        if (G !== null) C.style.borderTopWidth =
            G + "px";
        C.style.zIndex = m.PG;
        if (m.g.style.visibility == "hidden") C.style.visibility = "hidden";
        C.oncontextmenu = za(false);
        m.b.appendChild(C);
        m.v[A] = C;
        O();
        J(m.v, A, false);
        if (A > 0) for (C = 1; C < m.B.length; C++) {
            G = C - 1;
            var M = X(A - 1, G);
            M.T = G;
            z(M)
        }
        B();
        m.setScrollBar()
    };
    this.vl = function () {
        var A = m.v.length;
        if (!(A <= 0)) {
            A -= 1;
            m.v[A].parentNode.removeChild(m.v[A]);
            m.v[A] = null;
            m.v.splice(A, 1);
            A = m.cells.length - 1;
            if (A >= 0) {
                for (var C = m.cells[A].length - 1; C >= 0; C -= 1) {
                    m.cells[A][C].parentNode.removeChild(m.cells[A][C]);
                    m.cells[A][C] =
                        null;
                    m.cells[A].splice(C, 1)
                }
                m.cells.splice(A, 1)
            }
            O();
            B();
            m.setScrollBar()
        }
    };
    this.alignColumnTotals = function () {
        var A = 0;
        if (m.t) A = 1;
        A = m.cells[A];
        for (var C = 0; C < A.length; C++) for (var G = A[C], M = G.children, P = 0; P < M.length; P++) {
            var T = M[P], W = T.id;
            W = W.split(".")[0] + "_total";
            W = Tb(W);
            if (W != null) W.style.left = parseInt(m.g.style.left) + parseInt(G.style.left) + parseInt(T.style.left) + "px"
        }
    };
    this.scrollToRow = function (A) {
        A = parseInt(A, 10);
        if (isNaN(A)) console.log("scrollToRow cannot parseInt:", A); else {
            if (A < 1) A = 1;
            if (m.Je) m.s.Gh(A);
            else {
                m.w = A;
                m.getData()
            }
            return m.getRRN(A)
        }
    };
    this.setNumberOfRows = function (A) {
        m.setProperty("number of rows", String(A));
        m.cc();
        m.Tf();
        m.getData()
    };
    this.render = function () {
        m.cc();
        m.Tf();
        m.ie();
        m.Wi && m.au()
    };
    this.refresh = function () {
        m.w = 1;
        m.totalRecs = null;
        if (m.Je) m.s.sc = m.totalRecs;
        pui.gc = null;
        m.getData()
    };
    this.getRecordCount = function () {
        var A;
        A = m.wb() ? m.totalRecs : m.dataArray.length;
        if (A == null) A = 0;
        return A
    };
    this.clear = function (A) {
        m.dataArray = [];
        for (var C = 0; C < m.Za.length; C++) m.Za[C].domEls = [];
        A && m.refresh()
    };
    this.push = function (A, C) {
        var G = ea(A);
        m.dataArray.push(G);
        C && m.refresh()
    };
    this.addRecords = function (A, C) {
        for (var G = 0; G < A.length; G++) m.push(A[G]);
        C && m.refresh()
    };
    this.replaceRecords = function (A, C) {
        m.clear();
        m.addRecords(A);
        C && m.refresh()
    };
    this.splice = function (A, C) {
        A -= 1;
        for (var G = false, M = [A, C], P = [A, C], T = 2; T < arguments.length; T++) {
            var W = arguments[T];
            if (typeof W === "boolean" && T + 1 === arguments.length) G = true;
            if (typeof W === "object") {
                W = ea(W);
                M.push(W);
                P.push(undefined)
            }
        }
        m.dataArray.splice.apply(m.dataArray, M);
        for (T =
                 0; T < m.Za.length; T++) {
            M = m.Za[T].domEls;
            M.splice.apply(M, P)
        }
        G && m.refresh()
    };
    this.insertRow = function (A) {
        for (var C = [A, 0], G = 1; G < arguments.length; G++) {
            var M = arguments[G];
            typeof M === "object" && C.push(M)
        }
        m.splice.apply(m, C)
    };
    this.unshiftRow = function () {
        for (var A = false, C = [1, 0], G = 0; G < arguments.length; G++) {
            var M = arguments[G];
            if (typeof M === "boolean" && G + 1 === arguments.length) A = true;
            typeof M === "object" && C.push(M)
        }
        m.splice.apply(m, C);
        A && m.refresh()
    };
    this.removeRow = function (A, C) {
        m.splice(A, 1);
        C && m.refresh()
    };
    this.clearState =
        function (A) {
            var C = E();
            if (C != null) if (typeof A == "string") {
                A = A.toLowerCase();
                for (var G in C) if (G.toLowerCase() == A) {
                    delete C[G];
                    y(C);
                    break
                }
                if (m.Db) {
                    if (A === "colsequence" && C.hidableColState && C.hidableColState.cols) {
                        if (C.colWidths instanceof Array) {
                            var M = C.colWidths.map(ja());
                            C.colWidths = []
                        }
                        for (G = A = 0; G < C.hidableColState.cols.length; G++) {
                            var P = C.hidableColState.cols[G];
                            if (P.savedColumn != null && P.savedColumn >= 0 && P.showing) {
                                M && C.colWidths.push(M[P.savedColumn]);
                                P.savedColumn = A++
                            }
                        }
                    } else A == "hidablecolstate" &&
                    delete C.colWidths;
                    y(C)
                }
            } else try {
                delete localStorage[m.vo]
            } catch (T) {
            }
        };
    this.getSelectedCount = function () {
        var A = 0;
        if (m.Cg && m.gd) {
            for (var C, G = 0; G < m.eb.length; G++) if (pui.ca(m.gd.fieldName) == m.eb[G]) {
                C = G;
                break
            }
            if (C != null && C >= 0) for (G = 0; G < m.dataArray.length; G++) if (m.dataArray[G].selection && m.dataArray[G].selection.modified) m.dataArray[G].selected && A++; else m.dataArray[G][C] == m.Dl && A++
        }
        return A
    };
    this.Mp = function () {
        if (m.bg) {
            var A = Tb(m.bg);
            if (A) if (!A.po) if (!(Q == "genie" && m.designMode)) {
                A.style.visibility = "hidden";
                A.style.display = "none"
            }
        }
    };
    this.Ht = function (A) {
        if (A == null || isNaN(A)) return null;
        for (var C = 0; C < m.Za.length; C++) {
            var G = m.Za[C], M = G.value;
            if (G["field type"] == "html container") M = G.html;
            if (M != null && typeof M == "object" && M.fieldName != null) if (Number(G.column) == A) return M.fieldName.toUpperCase()
        }
        return null
    };
    this.gG = function (A) {
        A = pui.ca(A);
        for (var C = 0; C < m.Za.length; C++) {
            var G = m.Za[C], M = G.value;
            if (G["field type"] == "html container") M = G.html;
            if (M != null && typeof M == "object" && M.fieldName != null && pui.ca(M.fieldName) ==
                A) {
                G = Number(G.column);
                if (G != null && !isNaN(G)) return G
            }
        }
        return null
    };
    this.nr = function (A) {
        if (!m.wb()) if (A.ar == null) {
            A.ar = [];
            if (A.pui == null) A.pui = {};
            A.pui.formats = [];
            A.pui.Al = [];
            for (var C = 0; C < m.Za.length; C++) {
                var G = m.Za[C], M = Number(G.column), P = G.value;
                if (G["field type"] == "html container") P = G.html;
                if (pui.f(P) && !isNaN(M) && M == A.col) {
                    G = pui.ca(P.fieldName);
                    for (M = 0; M < m.eb.length; M++) if (G == m.eb[M]) {
                        A.ar.push(M);
                        A.pui.formats.push(P);
                        A.pui.Al.push(C);
                        break
                    }
                }
            }
        }
    };
    this.startFind = function (A) {
        if (typeof A == "number") A =
            m.cells[0][ka(A)];
        if (A != null) {
            m.Bb.grid = m;
            m.Bb.Kp = A;
            m.Bb.type = "find";
            m.Bb.ph = m.find;
            m.Bb.oB(pui.getLanguageText("runtimeText", "find text") + "...");
            m.Bb.uA(A);
            if (m.wb()) m.Bb.interval = 250;
            m.nr(A);
            m.Ya.T = A.T;
            m.Ya.col = A.col;
            m.Bb.show();
            m.Bb.clear();
            m.Bb.focus()
        }
    };
    this.clearHighlighting = function () {
        m.Ya.text = "";
        m.getData()
    };
    this.find = function (A, C, G) {
        if (!m.Tl) {
            var M = m.Bb.Kp, P = A, T = C;
            if (typeof A == "number") {
                M = m.cells[0][ka(A)];
                if (M == null) return;
                P = C;
                T = G;
                m.Ya.T = M.T;
                m.Ya.col = M.col;
                m.nr(M)
            }
            m.Ya.text = "";
            if (P == "") m.getData();
            else if (m.wb()) {
                sb = m.Ya.text = P;
                ab = M.T + 1;
                pb = 1;
                if (T) pb = m.w + 1;
                m.mask();
                m.getData();
                pb = ab = sb = null
            } else {
                G = 0;
                if (T) G = m.w;
                T = P.toLowerCase();
                A = M.ar;
                var W = false;
                C = m.dataArray;
                if (m.isFiltered()) C = m.Cb;
                for (G = G; G < C.length; G++) {
                    for (var ca = 0; ca < A.length; ca++) {
                        var aa = C[G][A[ca]];
                        if (M.pui && M.pui.formats && M.pui.formats[ca] != null && typeof M.pui.formats[ca] == "object") {
                            M.pui.formats[ca].value = aa;
                            aa = pui.Oe.format(M.pui.formats[ca])
                        }
                        if (aa.toLowerCase().indexOf(T) >= 0) {
                            m.Ya.text = P;
                            W = G + 1;
                            if (m.w != W) if (m.s != null && m.s.type == "sliding") m.s.Gh(W,
                                false) === false && m.getData(); else if (m.A) {
                                ca = m.getRecordCount() - m.Fp() + 1;
                                W > ca ? m.scrollToRow(ca) : m.scrollToRow(W)
                            } else m.getData(); else m.getData();
                            W = true;
                            break
                        }
                    }
                    if (W) break
                }
                W || m.getData()
            }
        }
    };
    this.startFilter = function (A) {
        if (typeof A == "number") A = m.cells[0][ka(A)];
        if (A != null) {
            m.Bb.grid = m;
            m.Bb.Kp = A;
            m.Bb.type = m.Co() ? "pgfilter" : "filter";
            m.Bb.ph = m.HF;
            m.Bb.oB(pui.getLanguageText("runtimeText", "filter text") + "...");
            m.Bb.uA(A);
            if (m.wb()) m.Bb.interval = 250;
            m.nr(A);
            m.Ya.T = A.T;
            m.Ya.col = A.col;
            m.Bb.show();
            m.Bb.clear();
            if (A.dc != null && A.dc != "") {
                m.Bb.setText(A.dc);
                m.Ya.text = A.dc;
                m.getData()
            }
            m.Bb.focus()
        }
    };
    this.HF = function (A) {
        var C = m.Bb.Kp;
        A == "" ? m.removeFilter(C) : m.setFilter(C, A)
    };
    this.setFilter = function (A, C) {
        if (!m.Tl) {
            if (typeof A == "number") A = m.cells[0][ka(A)];
            if (A != null) {
                if (m.Co()) return da(A, C);
                m.nr(A);
                m.Ya.T = A.T;
                m.Ya.col = A.col;
                m.Ya.text = C;
                m.jr(A);
                A.dc = C;
                if (m.wb()) {
                    m.totalRecs = null;
                    m.w = 1;
                    m.mask()
                } else {
                    var G = A.ar, M = A.T;
                    m.Cb = [];
                    for (var P = 0; P < m.dataArray.length; P++) {
                        var T = m.dataArray[P];
                        if (T.P == null) T.P = P + 1;
                        for (var W =
                            0; W < G.length; W++) {
                            var ca = T[G[W]], aa = false;
                            if (A.pui != null) {
                                if (A.pui.formats != null && A.pui.formats[W] != null && typeof A.pui.formats[W] == "object") {
                                    var fa = A.pui.formats[W];
                                    fa.value = ca;
                                    ca = pui.Oe.format(fa)
                                }
                                if (A.pui.Al != null && A.pui.Al[W] != null && m.Za[A.pui.Al[W]] != null && typeof m.Za[A.pui.Al[W]] == "object") {
                                    fa = m.Za[A.pui.Al[W]];
                                    var ba = parseInt(fa.left, 10), ha = parseInt(fa.top, 10);
                                    if (fa.visibility == "hidden" || !isNaN(ba) && !isNaN(ha) && ba < 0 && ha < 0) aa = true
                                }
                            }
                            if (T.Xg == null) T.Xg = [];
                            T.Xg[M] = true;
                            if (!aa && m.tK(ca, C)) {
                                T.Xg[M] =
                                    false;
                                break
                            }
                        }
                        m.jB(T);
                        T.Nk || m.Cb.push(T)
                    }
                }
                m.getData();
                wb && m.XA();
                F("onfilterchange")
            }
        }
    };
    this.XA = function () {
        for (var A = [], C = m.cells[0], G = 0; G < C.length; G++) {
            var M = C[G];
            M.dc != null && M.dc != "" && A.push({text: M.dc, column: M.T, curCol: M.col})
        }
        A.length < 1 ? m.clearState("filters") : y(A, "filters")
    };
    this.getFilter = function (A) {
        if (typeof A == "number") A = m.cells[0][ka(A)];
        if (A == null || typeof A.dc == "undefined") return null;
        return A.dc
    };
    this.tK = function (A, C) {
        function G(W) {
            if (M) {
                var ca = W.split(".").join("").replace(",", ".");
                if (!isNaN(ca)) return ca
            }
            if (W.indexOf(",") !=
                -1) {
                ca = W.split(",").join("");
                if (!isNaN(ca)) return ca
            }
            return W
        }

        var M = pui.appJob != null && (pui.appJob.decimalFormat == "I" || pui.appJob.decimalFormat == "J");
        if (C.substr(0, 8).toLowerCase() == "between ") {
            var P = C.substr(8).toLowerCase().split(" ");
            if (P.length == 3 && P[1] == "and") {
                var T = P[0];
                P = P[2];
                if (!isNaN(T) && !isNaN(P)) {
                    T = Number(T);
                    P = Number(P);
                    A = Number(A)
                } else A = A.toLowerCase();
                return A >= T && A <= P
            }
        }
        if (C.substr(0, 7).toLowerCase() == "values ") {
            C = C.substr(7).toLowerCase();
            if (C == "") return true;
            T = C.split(",");
            for (P = 0; P <
            T.length; P++) {
                C = Zb(T[P]).toLowerCase();
                if (A.toLowerCase() == C) return true
            }
            return false
        } else if (C.substr(0, 12).toLowerCase() == "starts with ") {
            C = C.substr(12).toLowerCase();
            return C == A.substr(0, C.length).toLowerCase()
        } else if (C.substr(0, 2) == "==") {
            C = C.substr(2);
            if (C == "") return true;
            return C.toLowerCase() == A.toLowerCase()
        } else if (C.substr(0, 2) == ">=") {
            C = C.substr(2);
            if (C == "") return true;
            C = G(C);
            A = G(A);
            return isNaN(C) ? A.toLowerCase() >= C.toLowerCase() : Number(A) >= Number(C)
        } else if (C.substr(0, 2) == "<=") {
            C = C.substr(2);
            if (C == "") return true;
            C = G(C);
            A = G(A);
            return isNaN(C) ? A.toLowerCase() <= C.toLowerCase() : Number(A) <= Number(C)
        } else if (C.substr(0, 2) == "!=" || C.substr(0, 2) == "<>") {
            C = C.substr(2);
            if (C == "") return true;
            return isNaN(C) ? A.toLowerCase().indexOf(C.toLowerCase()) < 0 : Number(C) != Number(A)
        } else if (C.substr(0, 1) == "=") {
            C = C.substr(1);
            if (C == "") return true;
            return C.toLowerCase() == A.toLowerCase()
        } else if (C.substr(0, 1) == ">") {
            C = C.substr(1);
            if (C == "") return true;
            C = G(C);
            A = G(A);
            return isNaN(C) ? A.toLowerCase() > C.toLowerCase() : Number(A) >
                Number(C)
        } else if (C.substr(0, 1) == "<") {
            C = C.substr(1);
            if (C == "") return true;
            C = G(C);
            A = G(A);
            return isNaN(C) ? A.toLowerCase() < C.toLowerCase() : Number(A) < Number(C)
        } else return A.toLowerCase().indexOf(C.toLowerCase()) >= 0
    };
    this.wI = function (A, C) {
        var G = "";
        C = C.toUpperCase();
        var M = C.match(/^BETWEEN (.+) AND (.+)$/);
        if (M != null && M.length == 3) G = "&fltrtype" + A + "=BET&fltrval" + A + "_0=" + encodeURIComponent(M[1]) + "&fltrval" + A + "_1=" + encodeURIComponent(M[2]); else if (C.substr(0, 7) == "VALUES ") {
            M = C.substr(7);
            if (M != "") {
                M = M.split(",");
                if (M.length > 0) {
                    G = "&fltrtype" + A + "=VAL&fltrcnt" + A + "=" + String(M.length);
                    for (var P = 0; P < M.length; P++) G += "&fltrval" + A + "_" + String(P) + "=" + encodeURIComponent(Zb(M[P]))
                }
            }
        } else G = C.substr(0, 12) == "STARTS WITH " ? "&fltrtype" + A + "=STW&fltrval" + A + "=" + encodeURIComponent(C.substr(12)) : C.substr(0, 2) == "==" ? "&fltrtype" + A + "=%3D&fltrval" + A + "=" + encodeURIComponent(C.substr(2)) : C.substr(0, 1) == "=" ? "&fltrtype" + A + "=%3D&fltrval" + A + "=" + encodeURIComponent(C.substr(1)) : C.substr(0, 2) == ">=" ? "&fltrtype" + A + "=%3E%3D&fltrval" + A + "=" + encodeURIComponent(C.substr(2)) :
            C.substr(0, 2) == "<=" ? "&fltrtype" + A + "=%3C%3D&fltrval" + A + "=" + encodeURIComponent(C.substr(2)) : C.substr(0, 2) == "!=" || C.substr(0, 2) == "<>" ? "&fltrtype" + A + "=!%3D&fltrval" + A + "=" + encodeURIComponent(C.substr(2)) : C.substr(0, 1) == ">" ? "&fltrtype" + A + "=%3E&fltrval" + A + "=" + encodeURIComponent(C.substr(1)) : C.substr(0, 1) == "<" ? "&fltrtype" + A + "=%3C&fltrval" + A + "=" + encodeURIComponent(C.substr(1)) : "&fltrtype" + A + "=CON&fltrval" + A + "=" + encodeURIComponent(C);
        return G
    };
    this.jB = function (A) {
        A.Nk = false;
        if (A.Xg != null) for (var C = 0; C < A.Xg.length; C++) if (A.Xg[C] ===
            true) {
            A.Nk = true;
            break
        }
    };
    this.removeFilter = function (A) {
        if (!m.Tl) {
            if (typeof A == "number") A = m.cells[0][ka(A)];
            if (A != null) {
                m.Ya.text = "";
                m.Kq(A);
                A.dc = null;
                if (m.Co()) return da(A, ""); else if (m.wb()) {
                    m.totalRecs = null;
                    m.w = 1;
                    m.mask()
                } else {
                    A = A.T;
                    m.Cb = [];
                    for (var C = 0; C < m.dataArray.length; C++) {
                        var G = m.dataArray[C];
                        if (G.Xg != null) G.Xg[A] = false;
                        m.jB(G);
                        G.Nk || m.Cb.push(G)
                    }
                }
                m.getData();
                wb && m.XA();
                F("onfilterchange")
            }
        }
    };
    this.removeAllFilters = function () {
        if (!m.Tl) {
            for (var A = m.cells[0], C = 0; C < A.length; C++) {
                var G = A[C];
                m.Kq(G);
                G.dc = null
            }
            if (m.Co()) return Ba("", "");
            for (C = 0; C < m.dataArray.length; C++) {
                A = m.dataArray[C];
                A.Xg = null;
                A.Nk = false
            }
            m.Cb = [];
            if (m.wb()) {
                m.totalRecs = null;
                m.w = 1;
                m.mask()
            }
            m.getData();
            m.clearState("filters");
            F("onfilterchange")
        }
    };
    this.Dy = function () {
        for (var A = 0, C = m.cells[0], G = 0; G < C.length; G++) {
            var M = C[G];
            M.dc != null && M.dc != "" && A++
        }
        return A
    };
    this.isFiltered = function () {
        if (m.fi != null) return false;
        var A = m.cells[0];
        if (A == null) return false;
        for (var C = 0; C < A.length; C++) {
            var G = A[C];
            if (G.dc != null && G.dc != "") return true
        }
        return false
    };
    this.jr = function (A) {
        if (A.te == null) {
            A.te = document.createElement("img");
            A.te.style.paddingLeft = "3px";
            A.te.src = pui.normalizeURL("/profoundui/proddata/images/grids/filter.png");
            A.style.cursor = "pointer";
            A.te.onclick = function (G) {
                if (!pui.Ae(G)) {
                    m.startFilter(A);
                    yb(G)
                }
            };
            var C = A;
            if (C.firstChild != null && C.firstChild.tagName == "DIV") C = C.firstChild;
            if (m.zd != null && m.zd.parentNode === C) C.insertBefore(A.te, m.zd); else A.Ee != null && A.Ee.parentNode === C ? C.insertBefore(A.te, A.Ee) : C.appendChild(A.te)
        }
    };
    this.Kq = function (A) {
        A.te !=
        null && A.te.parentNode != null && A.te.parentNode.removeChild(A.te);
        A.te = null
    };
    this.isRowFilteredOut = function (A) {
        A = b(A, false);
        var C = false;
        if (A != null && A.Nk != null && A.Nk === true) C = true;
        return C
    };
    this.Co = function () {
        return m.g.ky != null
    };
    this.hideColumn = function (A) {
        return m.Yy(A, false)
    };
    this.showColumn = function (A) {
        return m.Yy(A, true)
    };
    this.isColumnHidden = function (A) {
        if (typeof A == "string") A = Number(A);
        if (!isNaN(A)) for (var C = 0; C < m.vb.length; C++) if (m.vb[C].columnId === A) return m.vb[C].showing !== true;
        return false
    };
    this.getRowNumber = function (A) {
        A = A;
        var C = m.dataArray;
        if (m.isFiltered()) C = m.Cb;
        if (A < 1) A = 1;
        if (A > C.length) A = C.length;
        if (typeof m.Le != "undefined" && m.Le === true || m.isFiltered()) for (var G = 0; G < C.length; G++) if (C[G].P == A) {
            A = G + 1;
            break
        }
        return A
    };
    this.getRRN = function (A) {
        A = A;
        var C = m.dataArray;
        if (m.isFiltered()) C = m.Cb;
        if (A < 1) A = 1;
        if (A > C.length) A = C.length;
        C = C[A - 1];
        return C != null && C.P ? C.P : A
    };
    this.Yy = function (A, C) {
        if (!this.Db) return false;
        if (typeof A == "string") A = Number(A);
        if (!isNaN(A)) for (var G = m.vb, M = 0; M < G.length; M++) {
            var P =
                G[M];
            if (P.columnId === A) return P.showing === C ? true : m.Zt(P)
        }
        return false
    };
    this.Zt = function (A, C) {
        if (!this.Db) return false;
        var G = m.vb, M = !A.showing;
        if (m.B.length - 2 < 1 && !M) {
            pui.alert(pui.getLanguageText("runtimeMsg", "cannot rmv last col"));
            return false
        }
        for (var P = A.columnId, T = A.currentColumn, W = G.vm, ca = [], aa = m.cells[0], fa = 0, ba = pui["grid column resize style"] !== "simple", ha = m.ii().split(",").map(function (wa) {
            return Number(wa)
        }), na = 0; na < G.length; na++) {
            if (A === G[na]) {
                G[na].showing = M;
                if (!M) {
                    var sa = ka(G[na].columnId);
                    G[na].width = ha[sa]
                }
                A = G[na]
            }
            if (G[na].showing) {
                sa = ka(G[na].columnId);
                if (sa > -1) G[na].width = ha[sa];
                ca.push(G[na])
            } else fa += G[na].width - (G[na].lastAdjustment || 0)
        }
        if (M) {
            m.gs(P);
            sa = ka(P);
            ha = 0;
            if (nb && W) if (T == -1) ha = sa; else {
                if (W[T] === P) {
                    T = T - 1;
                    for (na = W[T]; na >= 0;) {
                        na = ka(na);
                        if (na != -1) {
                            if (na <= T) ha = na + 1;
                            break
                        } else {
                            T -= 1;
                            na = W[T]
                        }
                    }
                }
            } else if (P > 0) {
                ha = ca.filter(function (wa) {
                    return wa.columnId < P
                }).reduce(function (wa, ta) {
                    return ta.columnId >= wa ? ta.columnId : wa
                }, 0);
                ha = ka(ha) + 1
            }
            m.moveColumn(sa, ha, A);
            m.cc();
            m.Tf()
        } else m.removeColumn(P);
        if (!C && (M || m.wb())) m.getData();
        m.sortable && m.vu();
        var xa = [];
        M = ca.sort(function (wa, ta) {
            return ka(wa.columnId) > ka(ta.columnId) ? 1 : -1
        }).map(function (wa) {
            wa.blankHeader ? xa.push("") : xa.push(wa.name);
            if (m.Tg || ba) {
                if (m.dJ) return wa.width;
                return wa.orginalWidth
            }
            for (var ta = Math.floor(fa / ca.length), Aa = wa.lastAdjustment || 0, Ga = 0; Ga < G.length; Ga++) if (G[Ga].columnId === wa.T) {
                G[Ga].lastAdjustment = ta;
                break
            }
            ta = wa.width + ta - Aa;
            return ta < 0 ? wa.width : ta
        });
        if (wb) {
            G = G.map(function (wa) {
                if (wa.showing) wa.savedColumn = ka(wa.columnId);
                return wa
            });
            y({cols: G, headings: xa}, "hidableColState");
            y(M, "colWidths");
            y(W, "colSequence")
        }
        m.Oi(M);
        m.cc();
        m.Tf();
        if (nb) for (ha = 0; ha < aa.length; ha++) z(aa[ha], true);
        if (Ib) for (na = 0; na < m.B.length; na++) J(m.B, na, true, true);
        m.Tg && m.cd();
        m.Ac = xa;
        m.ie();
        pa();
        return true
    };
    this.Ey = function (A) {
        if (typeof A !== "object") return m.Ac.split(",");
        return A.filter(function (C) {
            return C.showing
        }).sort(function (C, G) {
            return ka(C.columnId) > ka(G.columnId) ? 1 : -1
        }).map(function (C) {
            if (C.blankHeader) return "";
            return C.name
        })
    };
    this.vF =
        function (A) {
            var C, G, M = "", P = "", T = m.g.c;
            if (A.Vc() != 200) G = "HTTP " + A.Vc() + " - " + A.xj() + "."; else {
                try {
                    C = eval("(" + A.jc() + ")")
                } catch (W) {
                    G = "The server response is missing or invalid."
                }
                if (G == null && C.success != true) G = C.errorText
            }
            if (G != null) pui.alert("Unable to retrieve field listing:\n" + G); else {
                for (A = 0; A < C.fields.length; A++) {
                    if (M != "") M += ",";
                    M += Zb(C.fields[A].DB2_LABEL) || Zb(C.fields[A].DB2_COLUMN_NAME) || Zb(C.fields[A].DB2_SYSTEM_COLUMN_NAME);
                    if (P != "") P += ",";
                    P += parseInt(C.fields[A].LENGTH) * 10
                }
                m.setProperty("column headings",
                    M);
                c(T, "column headings", M);
                T.designer.k.ea("column headings");
                m.setProperty("number of columns", C.fields.length);
                c(T, "number of columns", C.fields.length);
                T.designer.k.ea("number of columns");
                m.setProperty("column widths", P);
                c(T, "column widths", P);
                T.designer.k.ea("column widths")
            }
        };
    this.GB = function () {
        function A(ta) {
            ta = ta.target;
            if (ta.tagName == "TD") ta = ta.parentNode;
            if (ta.tagName != "TR") return null;
            return ta
        }

        function C(ta) {
            var Aa = A(ta);
            if (Aa) {
                ta.stopPropagation();
                $a.Ai = Aa;
                pui.ya(Aa, "move_origin");
                try {
                    ta.dataTransfer.setData("text/plain",
                        Aa.T)
                } catch (Ga) {
                }
            }
        }

        function G(ta) {
            if (ta = A(ta)) {
                pui.La(ta, "move_origin");
                $a.Ai = null
            }
        }

        function M(ta) {
            yb(ta);
            if (ta = A(ta)) {
                var Aa = ta.parentNode.parentNode;
                ta.parentNode == Aa.tHead ? pui.La(Aa.tHead.lastChild, "move_valid") : pui.La(ta, "move_valid");
                if ($a.Ai == null) console.log("Origin row not set."); else {
                    var Ga = ta.sectionRowIndex;
                    if (ta.parentNode == Aa.tHead) Ga = -1;
                    Ga++;
                    ta = Aa.tBodies[0].rows[Ga];
                    if ($a.Ai !== ta) {
                        Aa.tBodies[0].removeChild($a.Ai);
                        Aa.tBodies[0].insertBefore($a.Ai, ta)
                    }
                    ca(Aa.tBodies[0])
                }
            }
        }

        function P(ta) {
            if ($a.Ai !=
                null) {
                var Aa = A(ta);
                if (Aa != null) {
                    var Ga = Aa.parentNode.parentNode;
                    if (Aa.parentNode == Ga.tHead) {
                        yb(ta);
                        ta.dataTransfer.Yx = "move";
                        pui.ya(Ga.tHead.lastChild, "move_valid")
                    } else if (Aa != $a.Ai && Aa.sectionRowIndex != $a.Ai.sectionRowIndex - 1) {
                        yb(ta);
                        ta.dataTransfer.Yx = "move";
                        pui.ya(Aa, "move_valid")
                    }
                }
            }
        }

        function T(ta) {
            yb(ta);
            if (ta = A(ta)) {
                var Aa = ta.parentNode.parentNode;
                if (ta.parentNode == Aa.tHead) ta = Aa.tHead.lastChild;
                pui.La(ta, "move_valid")
            }
        }

        function W(ta) {
            ca(ta.target.parentNode.parentNode.parentNode)
        }

        function ca(ta) {
            for (var Aa =
                0, Ga = 0; Ga < ta.rows.length; Ga++) {
                var Pa = ta.rows[Ga], Ua = Pa.cells[1], Za = Pa.cells[3].children[0];
                if (Pa.cells[0].children[0].checked) {
                    Pa.td = Aa;
                    Ua.innerHTML = Aa;
                    Aa++;
                    Za.style.visibility = ""
                } else {
                    Pa.td = -1;
                    Ua.innerHTML = "";
                    Za.style.visibility = "hidden"
                }
            }
        }

        if (m.g.parentNode != null) {
            if ($a == null) {
                $a = document.createElement("div");
                $a.className = "grid-multisort" + (m.qg != "" ? " " + m.qg + "-multisort" : "");
                $a.style.top = m.g.offsetTop + "px";
                $a.style.left = m.g.offsetLeft + "px";
                var aa = document.createElement("div");
                pui.rd({wc: aa, move: $a});
                var fa = document.createElement("button");
                fa.className = "pui-material-icons";
                fa.innerHTML = "close";
                gc(fa, "click", function () {
                    $a.style.display = "none"
                });
                aa.appendChild(fa);
                fa = document.createElement("button");
                fa.className = "pui-material-icons";
                fa.innerHTML = "check";
                gc(fa, "click", function () {
                    $a.style.display = "none";
                    for (var ta = [], Aa = 0; Aa < ba.tBodies[0].rows.length; Aa++) {
                        var Ga = ba.tBodies[0].rows[Aa];
                        Ga.td >= 0 && ta.push({tx: Ga.T, Px: Ga.tb})
                    }
                    m.ZH(ta)
                });
                aa.appendChild(fa);
                aa.appendChild(document.createTextNode(pui.getLanguageText("runtimeText",
                    "sort multiple")));
                $a.appendChild(aa);
                var ba = document.createElement("table");
                aa = ba.createTHead().insertRow();
                aa.ondrop = M;
                aa.ondragover = P;
                aa.ondragleave = T;
                var ha = aa.insertCell();
                ha.innerHTML = pui.getLanguageText("runtimeText", "sort");
                ha = aa.insertCell();
                ha.innerHTML = pui.getLanguageText("runtimeText", "order");
                ha = aa.insertCell();
                ha.innerHTML = pui.getLanguageText("runtimeText", "column");
                ha = aa.insertCell();
                ha.innerHTML = pui.getLanguageText("runtimeText", "direction");
                var na = document.createElement("tbody");
                ba.appendChild(na);
                var sa = m.cells[0].map(function (ta) {
                    for (var Aa = -1, Ga = 0; Ga < eb.length; Ga++) if (ta === eb[Ga]) {
                        Aa = Ga;
                        break
                    }
                    return {T: ta.T, name: ta.textContent, tb: ta.tb, td: Aa}
                });
                sa.sort(function (ta, Aa) {
                    if (ta.td >= 0 && Aa.td >= 0) return ta.td - Aa.td;
                    if (ta.td >= 0 && Aa.td < 0) return -1;
                    if (ta.td < 0 && Aa.td >= 0) return 1;
                    return 0
                });
                for (var xa = 0; xa < sa.length; xa++) {
                    fa = sa[xa].name;
                    ha = sa[xa].T;
                    var wa = sa[xa].tb;
                    aa = na.insertRow();
                    aa.draggable = true;
                    aa.T = ha;
                    aa.tb = wa;
                    aa.td = sa[xa].td;
                    aa.ondragstart = C;
                    aa.ondragend = G;
                    aa.ondrop = M;
                    aa.ondragover =
                        P;
                    aa.ondragleave = T;
                    ha = aa.insertCell();
                    wa = document.createElement("input");
                    wa.type = "checkbox";
                    wa.name = fa + "_sort";
                    wa.onclick = W;
                    wa.checked = aa.td >= 0;
                    ha.appendChild(wa);
                    ha = aa.insertCell();
                    ha.innerHTML = aa.td >= 0 ? aa.td : "&nbsp;";
                    ha = aa.insertCell();
                    ha.innerHTML = fa;
                    ha.draggable = true;
                    ha = aa.insertCell();
                    fa = document.createElement("button");
                    fa.className = "pui-material-icons";
                    fa.innerHTML = aa.tb ? "arrow_downward" : "arrow_upward";
                    fa.style.visibility = aa.td >= 0 ? "" : "hidden";
                    gc(fa, "click", function (ta) {
                        var Aa = ta.target.parentNode.parentNode;
                        if (ta.target.innerHTML == "arrow_downward") {
                            ta.target.innerHTML = "arrow_upward";
                            Aa.tb = false
                        } else {
                            ta.target.innerHTML = "arrow_downward";
                            Aa.tb = true
                        }
                    });
                    fa.enabled = false;
                    ha.appendChild(fa)
                }
                $a.appendChild(ba);
                m.g.parentNode.appendChild($a)
            } else if ($a.style.display == "") {
                $a.style.top = m.g.offsetTop + "px";
                $a.style.left = m.g.offsetLeft + "px"
            }
            $a.style.display = "";
            if (m.g.parentNode.getAttribute("container") == "true" && m.g.parentNode.offsetHeight > 0) if ($a.offsetHeight > m.g.parentNode.offsetHeight - 54) $a.style.height = m.g.parentNode.offsetHeight -
                54 + "px"
        }
    };
    this.mi = function () {
        return [{name: "Identification", category: true}, {
            name: "id",
            maxLength: 75,
            Oa: "id",
            help: pui.a("id", "Specifies the ID that is used to access the grid from client-side code."),
            bind: false,
            $a: false
        }, {
            name: "record format name",
            displayName: pui.nodedesigner ? "name" : undefined,
            help: pui.a("blank", "Specifies the name that is used to access this grid from server code."),
            maxLength: pui.viewdesigner || pui.nodedesigner ? null : 10,
            bind: false,
            j: "dspf",
            $a: false
        }, {
            name: "description", help: pui.a("blank",
                "Describes the grid."), bind: false, j: "dspf"
        }, {
            name: "parent window",
            Oa: "parentWindow",
            help: pui.a("blank", "Sets the window that this field belongs to."),
            j: "genie"
        }, {
            name: "screen identifier",
            choices: ["true", "false"],
            Mg: false,
            help: pui.a("false", "If set to true, this element will be used to detect the screen. The identifier element should be a static output field that is unique to this screen. For example, if the screen has a unique heading, it can be used as the identifier. At least one element on the screen must be marked as an identifier before you can save the screen. When appropriate, you can use a combination of several elements to uniquely identify the screen."),
            j: "genie"
        }, {
            name: "field type",
            displayName: "widget type",
            choices: ["grid"],
            Mg: false,
            help: pui.a("widget", "Determines the type of control that is used to render the element."),
            bind: false,
            $a: false
        }, {
            name: "value",
            help: pui.a("blank", "Sets the initialization value for the current element.")
        }, {name: "Subfile Settings", category: true, j: "dspf"}, {
            name: "display subfile",
            choices: ["true", "false"],
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("true", "This property tells the system when to display grid records. It represents the SFLDSP keyword."),
            j: "dspf",
            viewdesigner: false
        }, {
            name: "display control record",
            choices: ["true", "false"],
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "This property tells the system when to display the subfile control record. It represents the SFLDSPCTL keyword."),
            j: "dspf",
            viewdesigner: false
        }, {
            name: "initialize subfile",
            choices: ["true", "false"],
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "This property tells the system to initialize all records within the subfile. It represents the SFLINZ keyword."),
            j: "dspf",
            viewdesigner: false
        }, {
            name: "subfile records not active",
            choices: ["true", "false"],
            bind: false,
            help: pui.a("false", 'This property can be used together with the "initialize subfile" property to initialize a subfile with no active records. It represents the SFLRNA keyword.'),
            j: "dspf",
            viewdesigner: false
        }, {
            name: "delete subfile",
            choices: ["true", "false"],
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "This property tells the system when to delete the subfile area. It represents the SFLDLT keyword."),
            j: "dspf",
            viewdesigner: false
        }, {
            name: "clear subfile",
            choices: ["true", "false"],
            p: true,
            o: ["indicator", "expression"],
            help: pui.a("false", "This property tells the system when to clear all records from the subfile. It represents the SFLCLR keyword."),
            j: "dspf",
            viewdesigner: false
        }, {
            name: "subfile size",
            format: "number",
            p: true,
            o: ["zoned"],
            help: pui.a("blank", 'This property represents the SFLSIZ keyword, which specifies the number of records that can be placed into the subfile. However, if your program places a record with a relative record number larger than the SFLSIZ value into the subfile, the subfile is automatically extended to contain it (up to a maximum of 9999 records). If this property is not specified, the subfile page value plus one is used. The subfile page value is determined from the "number of rows" property minus the header row if it is present.'),
            j: "dspf",
            viewdesigner: false
        }, {
            name: "subfile record number",
            format: "number",
            p: true,
            o: ["zoned", "reference"],
            help: pui.a("blank", "This property identifies the scrollbar position when the subfile is first displayed." + (pui.viewdesigner ? "" : "  It represents the SFLRCDNBR keyword.")),
            j: "dspf"
        }, {
            name: "position at top",
            choices: ["true", "false"],
            bind: false,
            help: pui.a("false", 'When this property is set to true, the subfile record identified by the "subfile record number" property will display in the top row of the grid.' +
                (pui.viewdesigner ? "" : "  This property is equivalent to the SFLRCDNBR(*TOP) keyword.")),
            j: "dspf"
        }, {
            name: "place cursor",
            choices: ["true", "false"],
            bind: false,
            help: pui.a("false", 'When this property is set to true, the cursor is placed in the subfile record identified by the contents of the "subfile record number" property. The cursor is positioned at the first input-capable field in the subfile record.' + (pui.viewdesigner ? "" : "  This property is equivalent to the SFLRCDNBR(CURSOR) keyword.")),
            j: "dspf"
        },
            {
                name: "subfile end",
                choices: ["true", "false"],
                p: true,
                o: ["indicator", "expression"],
                help: pui.a("false", "This property is used to indicate that a subfile with a paging bar has loaded all of its records." + (pui.viewdesigner ? "" : "  It represents the SFLEND keyword.")),
                j: "dspf"
            }, {
                name: "subfile next changed",
                choices: ["true", "false"],
                p: true,
                o: ["indicator", "expression"],
                help: pui.a("false", "This property represents the SFLNXTCHG keyword, which forces the user to correct program-detected typing errors in subfile records. The program can cause a record to be changed so that a get-next-changed operation must read the record again."),
                j: "dspf",
                viewdesigner: false
            }, {
                name: "cursor record number",
                readOnly: true,
                format: "number",
                p: true,
                o: ["zoned"],
                help: pui.a("bind", "This property can be bound to a numeric field, which will return the relative record number of the record on which the cursor is located." + (pui.viewdesigner ? "" : "  It represents the SFLCSRRRN keyword.")),
                j: "dspf"
            }, {
                name: "cursor progression",
                choices: ["left to right", "top to bottom"],
                help: pui.a("left to right", "This property determines the tab order for input elements within the subfile." +
                    (pui.viewdesigner ? "" : "  It represents the SFLCSRPRG keyword.")),
                j: "dspf"
            }, {
                name: "subfile return rrn",
                readOnly: true,
                format: "number",
                p: true,
                o: ["zoned", "reference"],
                help: pui.a("bind", "This property can be bound to a numeric field, which will return the relative record number of the top visible record within a grid." + (pui.viewdesigner ? "" : "  It represents the SFLSCROLL keyword.")),
                j: "dspf"
            }, {
                name: "subfile changed",
                format: "1 / 0",
                readOnly: true,
                p: true,
                o: ["indicator"],
                help: pui.a("bind", "Specifies a response indicator that is set on if the input data within the subfile is modified."),
                j: "dspf"
            }, {
                name: "Message Subfile Settings",
                category: true,
                j: "dspf",
                viewdesigner: false
            }, {
                name: "subfile message key",
                readOnly: true,
                p: true,
                o: ["char"],
                oj: 4,
                help: pui.a("bind", "This property specifies a field that is used to select messages from a program message queue for display. Your program places a message reference key in this field. The property represents the SFLMSGKEY keyword on a subfile record format."),
                j: "dspf",
                viewdesigner: false
            }, {
                name: "subfile program message queue",
                readOnly: true,
                p: true,
                o: ["char"],
                help: pui.a("bind", "This property specifies a field that contains the name of the program message queue used to build a message subfile. It represents the SFLPGMQ keyword on a subfile record format."),
                j: "dspf",
                viewdesigner: false
            }, {
                name: "subfile control program message queue",
                readOnly: true,
                p: true,
                o: ["char"],
                help: pui.a("bind", "This property specifies a field that contains the name of the program message queue used to build a message subfile when used in conjunction with the <i>subfile initialize</i> property. It represents the SFLPGMQ keyword on a subfile control record format."),
                j: "dspf",
                viewdesigner: false
            }, {name: "Font and Text", category: true}, {
                name: "font family",
                choices: ["Arial", "Consolas", "Courier New", "Fantasy", "Georgia", "Monospace", "Tahoma", "Times New Roman", "Sans-Serif", "Serif", "Trebuchet MS", "Verdana", "Other..."],
                help: pui.a("css", "The font face for the text inside the grid. To define a different font for each grid column, select <i>Other...</i> and specify a comma separated list of fonts.", ["other", "font"])
            }, {
                name: "font size",
                format: "px",
                choices: ["8px", "9px", "10px",
                    "11px", "12px", "13px", "14px", "15px", "16px", "17px", "18px", "19px", "20px", "21px", "22px", "23px", "24px", "25px", "26px", "27px", "28px", "29px", "30px", "Other..."],
                help: pui.a("css", "The size of the text inside the grid. To specify a different font size for each grid column, select <i>Other...</i> and specify a comma separated list of font sizes.", ["other"])
            }, {
                name: "font style",
                format: "italic / normal",
                choices: ["normal", "italic", "oblique", "Other..."],
                help: pui.a("css", "The style of the font in the grid. To specify a different font style for each grid column, select <i>Other...</i> and specify a comma separated list of font styles.",
                    ["other"])
            }, {
                name: "font variant",
                choices: ["normal", "small-caps", "Other..."],
                help: pui.a("css", "Normal or <span style='font-variant:small-caps;'>small caps</span>. Small caps shows the text with all caps but same height as a lower case letter.", ["other"])
            }, {
                name: "font weight",
                format: "bold / normal",
                choices: ["normal", "bolder", "bold", "lighter", "100", "200", "300", "400", "500", "600", "700", "800", "900", "Other..."],
                help: pui.a("css", "Specifies the weight of the font inside the grid. To specify a different font weight for each grid column, select <i>Other...</i> and specify a comma separated list of font weights.",
                    ["other"])
            }, {
                name: "letter spacing",
                format: "px",
                choices: ["normal", "-3px", "-2px", "-1px", "0px", "1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "10px", "11px", "12px", "13px", "14px", "15px", "16px", "17px", "18px", "19px", "20px", "Other..."],
                help: pui.a("css", "Spacing between each letter of a word. To specify a different value for each grid column, select <i>Other...</i> and specify a comma separated list of values.", ["other"])
            }, {
                name: "text align", choices: ["left", "right", "center", "justify", "Other..."], help: pui.a("css",
                    "Alignment of text inside cells of the grid element. To specify a different alignment option for each grid column, select <i>Other...</i> and specify a comma separated list of values.", ["other"])
            }, {
                name: "text decoration",
                format: "underline / none",
                choices: ["none", "underline", "overline", "line-through", "Other..."],
                help: pui.a("css", "Decoration of the text inside the grid. To specify a different value for each grid column, select <i>Other...</i> and specify a comma separated list of values.", ["other"])
            },
            {
                name: "text transform",
                choices: ["capitalize", "uppercase", "lowercase", "none", "Other..."],
                help: pui.a("css", "Transforms the default formatting of the text inside the grid. To specify a different value for each grid column, select <i>Other...</i> and specify a comma separated list of values.", ["other"])
            }, {
                name: "word spacing",
                format: "px",
                choices: ["normal", "-3px", "-2px", "-1px", "0px", "1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "10px", "11px", "12px", "13px", "14px", "15px", "16px", "17px", "18px", "19px",
                    "20px", "21px", "22px", "23px", "24px", "25px", "Other..."],
                help: pui.a("css", "Spacing between each word in the cells of the grid. To specify a different value for each grid column, select <i>Other...</i> and specify a comma separated list of values.", ["other"])
            }, {name: "Header", category: true}, {
                name: "has header",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("true", "Determines whether the grid has a header row.")
            }, {
                name: "header height",
                help: pui.a("theme", "Specifies the height of the header row. This can also be specified by dragging the grid's top border with the mouse."),
                bind: false,
                $a: false
            }, {
                name: "header font family",
                choices: ["Arial", "Consolas", "Courier New", "Fantasy", "Georgia", "Monospace", "Tahoma", "Times New Roman", "Sans-Serif", "Serif", "Trebuchet MS", "Verdana", "Other..."],
                help: pui.a("css", "The font face for the text inside the grid header row. To define a different font for each grid column, select <i>Other...</i> and specify a comma separated list of fonts.", ["other", "font"])
            }, {
                name: "header font size",
                format: "px",
                choices: ["8px", "9px", "10px", "11px", "12px", "13px",
                    "14px", "15px", "16px", "17px", "18px", "19px", "20px", "21px", "22px", "23px", "24px", "25px", "26px", "27px", "28px", "29px", "30px", "Other..."],
                help: pui.a("css", "The size of the text inside the grid header row. To specify a different font size for each grid column, select <i>Other...</i> and specify a comma separated list of font sizes.", ["other"])
            }, {
                name: "header font style",
                format: "bold / normal",
                choices: ["normal", "italic", "oblique", "Other..."],
                help: pui.a("css", "Specifies the style of the font inside the grid header row. To specify a different font style for each grid column, select <i>Other...</i> and specify a comma separated list of font styles.",
                    ["other"])
            }, {
                name: "header font weight",
                format: "italic / normal",
                choices: ["normal", "bolder", "bold", "lighter", "100", "200", "300", "400", "500", "600", "700", "800", "900", "Other..."],
                help: pui.a("css", "Specifies the weight of the font inside the grid header row. To specify a different font weight for each grid column, select <i>Other...</i> and specify a comma separated list of font weights.", ["other"])
            }, {
                name: "header text align",
                choices: ["left", "right", "center", "justify", "Other..."],
                help: pui.a("css", "Alignment of text inside the cells of the grid header row. To specify a different alignment option for each cell, select <i>Other...</i> and specify a comma separated list of values.",
                    ["other"])
            }, {
                name: "header font color",
                type: "color",
                help: pui.a("css", "Defines the color of the text inside the header row. To define a different color for each grid cell in the header row, specify a comma separated list of color values.", ["color"])
            }, {
                name: "header background",
                type: "color",
                help: pui.a("css", "Defines the background color of the header row. To define a different color for each grid cell in the header row, specify a comma separated list of color values.", ["background color"])
            }, {
                name: "header image",
                type: "image", help: pui.a("css", "Defines a repeating background image for the header row.")
            }, {
                name: "column headings",
                type: "list",
                help: pui.a("placeholder", "Specifies a comma separated list of heading text for each column of the grid."),
                translate: true
            }, {name: "Colors", category: true}, {
                name: "odd row font color",
                type: "color",
                help: pui.a("css", "Defines the color of text inside the odd rows of the grid. To define a different color for each grid column, specify a comma separated list of color values.", ["color"],
                    "This only applies to text displayed in a database driven grid.")
            }, {
                name: "odd row background",
                type: "color",
                help: pui.a("css", "Defines the background color of the odd rows in the grid. To define a different color for each grid column, specify a comma separated list of color values.", ["background color"])
            }, {
                name: "even row font color",
                type: "color",
                help: pui.a("css", "Defines the color of text inside the even rows of the grid. To define a different color for each grid column, specify a comma separated list of color values.",
                    ["color"], "This only applies to text displayed in a database driven grid.")
            }, {
                name: "even row background",
                type: "color",
                help: pui.a("css", "Defines the background color of the even rows in the grid. To define a different color for each grid column, specify a comma separated list of color values.", ["background color"])
            }, {
                name: "row font color",
                type: "color",
                help: pui.a("css", "Defines the color of text in an individual row. You can define a dynamic color for each record by binding this property to a field.",
                    ["color"], "This only applies to text displayed in a database driven grid. This property, if defined, will be used instead of <i>even row font color</i> and <i>odd row font color</i>."),
                j: "dspf"
            }, {
                name: "row background",
                type: "color",
                help: pui.a("css", "Defines the background color of an individual row. To define a different color for each grid column, specify a comma separated list of color values. You can define a dynamic background color for each record by binding this property to a field.", ["background color"],
                    "This property, if defined, will be used instead of <i>even row background</i> and <i>odd row background</i>."),
                j: "dspf"
            }, {
                name: "hover font color",
                type: "color",
                help: pui.a("css", "Defines the color of text when the user hovers the mouse cursor over a grid row. To define a different color for each grid column, specify a comma separated list of color values.", ["color"])
            }, {
                name: "hover background",
                type: "color",
                help: pui.a("css", "Defines the background color of a grid row when the user hovers the mouse cursor over it. To define a different color for each grid column, specify a comma separated list of color values.",
                    ["background color"])
            }, {
                name: "selection font color",
                type: "color",
                help: pui.a("css", "Defines the color of text when the user selects a grid row.", ["color"]),
                j: "dspf"
            }, {
                name: "selection background",
                type: "color",
                help: pui.a("css", "Defines the background color of a grid row when the user selects it.", ["background color"]),
                j: "dspf"
            }, {name: "Grid Settings", category: true}, {
                name: "number of rows",
                help: pui.a("theme", "Specifies the number of rows in the grid, including the header row."),
                bind: false,
                $a: false
            }, {
                name: "number of columns",
                help: pui.a("theme", "Specifies the number of columns in the grid."), bind: false, $a: false
            }, {
                name: "row height",
                help: pui.a("theme", "Specifies the height that will be applied to each row, not including the header row. This can also be controlled by resizing the grid with the mouse."),
                bind: false,
                $a: false
            }, {
                name: "hover effect",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("theme", "Determines whether the grid rows will be highlighted when the user hovers the mouse over them.")
            },
            {
                name: "hover image",
                type: "image",
                help: pui.a("theme", "Defines a repeating cell background image for the hover effect.")
            }, {
                name: "row selection",
                choices: ["none", "single", "multiple (simple)", "multiple (extended)"],
                help: pui.a("none", "Determines if rows within the grid can be selected by the user with a click of the mouse. <br/><br/>Possible values are: <br/><br/><b>none</b> - rows cannot be selected <br/><br/><b>single</b> - only one row can be selected <br/><br/><b>multiple (simple)</b> - multiple rows can be selected by simply clicking on the rows <br/><br/><b>multiple (extended)</b> - multiple rows can be selected with the use of the Shift and Ctrl keys")
            },
            {
                name: "selection field",
                format: "1 / 0",
                readOnly: true,
                p: true,
                o: ["char", "indicator"],
                oj: 1,
                help: pui.a("bind", "This property must be bound to an indicator or a character field, which will be used to both set and return the selected state on each record. If a character field is specified, the selection value property will be used to populate the field when a row is selected."),
                j: "dspf"
            }, {
                name: "selection value",
                help: pui.a("blank", "Specifies the value used to populate the selection field when a grid row is selected."),
                bind: false,
                j: "dspf"
            }, {
                name: "selection image",
                type: "image",
                help: pui.a("theme", "Defines a repeating cell background image for row selection.")
            }, {
                name: "column widths",
                type: "list",
                help: pui.a("theme", "Specifies a comma separated list of column widths for this grid."),
                bind: false,
                $a: false
            }, {
                name: "scrollbar",
                choices: Q == "genie" && !pui.Na ? ["true", "false"] : ["none", "sliding", "paging"],
                help: pui.a("sliding", Q == "genie" && !pui.Na ? "Determines whether a vertical scrollbar for paging through data records will appear within the grid. If the grid is not a database-driven grid, the scrollbar will automatically send the PageUp/PageDown keys to the underlying application." :
                    "Determines the type of vertical scrollbar used to scroll through records within the grid. A sliding scrollbar scrolls freely, while a paging scrollbar scrolls one page of records at a time only.")
            }, {
                name: "scroll tool tip",
                choices: ["none", "row number", "row range"],
                help: pui.a("true", "Determines if the row number or the row number range should be displayed in a tool tip when the user scrolls through the data in the grid."),
                j: "dspf"
            }, {
                name: "propagate scroll events",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "When this property is false (which is the default) the grid handles any scroll wheel or swipe events sent to it so that they scroll the grid, but not the window that the grid is placed inside. If you enable this property, these events will be propagated, which allows mouse wheel and swipe events to scroll the grid's parent window.", ["other"]),
                j: "dspf"
            }, {
                name: "sortable columns",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Enables column sorting. If set to true, the user will be able to click on the column headings to resort the data."),
                j: "dspf"
            }, {
                name: "default sort order",
                choices: ["Ascending", "Descending", "Other..."],
                help: pui.a("Descending", "Specifies the default order for sortable columns. When the user clicks a column, the default sort order is used initially. To provide a different sort order for each grid column, select <i>Other...</i> and specify a comma separated list. Entries in the list can be abbreviated using the letter A for Ascending and D for Descending.",
                    ["other"]),
                j: "dspf"
            }, {
                name: "initial sort column",
                format: "number",
                help: pui.a("blank", 'This property specifies the column used to for initial sorting. Each grid column is identified by a sequential index, starting with 0 for the first column, 1 for the second column, and so on. If this property and the "initial sort field" property are omitted or set to blanks, sorting is not initiated when the grid is first rendered.'),
                j: "dspf"
            }, {
                name: "initial sort field",
                help: pui.a("blank", 'This property specifies the field name used to identify the column for initial sorting. If this property and the "initial sort column" property are omitted or set to blanks, sorting is not initiated when the grid is first rendered.'),
                p: true,
                o: ["char", "varchar"],
                j: "dspf"
            }, {
                name: "column sort response",
                format: "number",
                p: true,
                readOnly: true,
                o: ["zoned", "char"],
                help: pui.a("bind", 'Specifies a response variable to receive a column number for server-side sorting. If omitted, client-side sorting is used. The response is a numeric value that represents a column in the grid. Each grid column is identified by a sequential index, starting with 0 for the first column, 1 for the second column, and so on. It is the responsibility of the program to keep track of the sort direction, and to display an up or down arrow in the appropriate column using the "initial sort column" and "default sort order" properties.'),
                j: "dspf"
            }, {
                name: "field name sort response",
                readOnly: true,
                help: pui.a("bind", 'Specifies a response variable to receive a field name used for server-side sorting. If omitted, client-side sorting is used. The response represents the name of the field bound to the first widget in a column of the grid. It is the responsibility of the program to keep track of the sort direction, and to display an up or down arrow in the appropriate column using the "initial sort field" and "default sort order" properties.'),
                p: true,
                o: ["char", "varchar"],
                j: "dspf"
            }, {
                name: "return sort order",
                readOnly: true,
                help: pui.a("bind", "Specifies a response variable to receive the selected sort order when the user clicks on one of the sort options in the grid's built-in header context menu. The response variable will be populated with 'A' for ascending, or 'D' for descending. This property is ignored if the grid does not allow column sorting, or if client-side sorting is used."),
                p: true,
                o: ["char"],
                oj: 1,
                j: "dspf"
            }, {
                name: "sort function",
                type: "js",
                help: pui.a("blank", "Specifies a custom sort function that will be called. If not specified the grid will sort using built in sorting. The following variables are passed:<br /> &nbsp;&nbsp;<b>value1</b> first field value to compare <br /> &nbsp;&nbsp;<b>value2</b> second field value to compare <br />&nbsp;&nbsp;<b>fieldName</b> name fo the field <br /> &nbsp;&nbsp;<b>isDescending</b> true if sorting in descending sequence, false otherwise <br /> &nbsp;&nbsp;<b>fieldDateFormat</b> date format of the field, if the field is not a date field the value is null <br /> &nbsp;&nbsp;<b>fieldInfo</b> formatting information of the field that the grid is sorted by; if the field does not contain any formatting information, a blank object will be passed instead",
                    [], ""),
                j: "dspf"
            }, {
                name: "resizable columns",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Allows the user to resize grid columns at run time."),
                j: "dspf"
            }, {
                name: "movable columns",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Allows the user to rearrange grid columns at run time."),
                j: "dspf"
            }, {
                name: "persist state",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false",
                    "Specifies whether the grid state should be saved when the user sorts, moves, or resizes columns. When set to true, the state is saved to browser local storage with each user action, and automatically restored the next time the grid is dislpayed."),
                j: "dspf"
            }, {
                name: "find option",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Presents an option to search grid data when the grid heading is right-clicked."),
                j: "dspf"
            }, {
                name: "filter option",
                choices: ["true",
                    "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Presents an option to filter grid data when the grid heading is right-clicked."),
                j: "dspf"
            }, {
                name: "hide columns option",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Presents an option to hide and show columns for this grid when the grid heading is right-clicked. Defaults to false."),
                j: "dspf"
            }, {
                name: "reset option",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Presents an option to reset the persistent state for this grid when the grid heading is right-clicked."),
                j: "dspf"
            }, {
                name: "export option",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Presents options to export grid data to Excel using the CSV and XLSX formats when the grid heading is right-clicked."),
                j: "dspf"
            }, {
                name: "export only visible columns",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "When the 'hide columns option' is set to true, this option determines whether to export only the visible columns or all of the columns. Note this setting does not take effect for database-driven grids. Defaults to false."),
                j: "dspf"
            }, {
                name: "context menu id",
                help: pui.a("blank", "Specifies the id of a Menu widget used to display a context menu when the user right-clicks a grid row."),
                p: true,
                o: ["char", "varchar"]
            }, {
                name: "filter response",
                p: true,
                o: ["char"],
                help: pui.a("bind", "Specifies a response data structure to be received by your program for server-side filtering. Use only for page-at-a-time grids, not for database-driven grids nor load-all grids. The data structure should be defined as follows:<pre>Dcl-Ds filterinfo qualified;\n  colnum zoned(3:0) dim(c);\n  fltrtext char(s) dim(c);\nEnd-Ds;</pre>Where <b>c</b> is the value of the 'filter response column max' property, and <b>s</b> is the value of 'filter response text max'. The length should be c(3 + s); e.g. default length of 20 char with 3 column max filters is 69.",
                    [], ""),
                j: "dspf"
            }, {
                name: "filter response text max",
                format: "number",
                p: true,
                o: ["zoned"],
                help: pui.a("20", "The maximum number of characters to use from a filter expression when server-side filtering is setup by the 'filter response' property. The length of the 'fltrtext' array field in the filter response data structure should be this property's value."),
                j: "dspf"
            }, {
                name: "filter response column max",
                format: "number",
                p: true,
                o: ["zoned"],
                help: pui.a("3", "This is the maximum number of columns filtered at once when server-side filtering is setup by the 'filter response' property. This must be between 1 and than the 'number of columns' value, inclusive. Determines the size of the 'filter response' data structure."),
                j: "dspf"
            }, {name: "Paging Bar", category: true, j: "dspf"}, {
                name: "show paging controls",
                choices: ["true", "false"],
                p: true,
                o: ["indicator", "expression"],
                help: pui.a("false", "Displays links for navigating to the previous page and the next page of records.")
            }, {
                name: "show page number",
                choices: ["true", "false"],
                p: true,
                o: ["indicator", "expression"],
                help: pui.a("false", "This property determines whether the page number should display within the paging bar."),
                j: "dspf"
            }, {
                name: "initial page number",
                format: "number",
                p: true,
                o: ["zoned"],
                help: pui.a("1", "Specifies the initial page number to use when the page number is displayed within the paging bar. If not specified, page number 1 is used."),
                j: "dspf"
            }, {
                name: "show bar",
                choices: ["true", "false"],
                p: true,
                o: ["indicator", "expression"],
                help: pui.a("false", "Displays a bar at the bottom of the grid even if no paging bar elements are selected to be displayed. This can be used to show miscellaneous information such as column totals."),
                j: "dspf"
            }, {
                name: "page down condition",
                o: ["indicator",
                    "expression"],
                p: true,
                readOnly: true,
                format: "true / false",
                type: "boolean",
                help: pui.a("bind", "Determines if the next page link is enabled."),
                j: "dspf"
            }, {
                name: "page down response",
                format: "1 / 0",
                readOnly: true,
                p: true,
                o: ["indicator"],
                help: pui.a("bind", "Specifies a response indicator that is returned to your program when the next page link is clicked."),
                j: "dspf"
            }, {
                name: "page up condition",
                o: ["indicator", "expression"],
                p: true,
                readOnly: true,
                format: "true / false",
                type: "boolean",
                help: pui.a("bind", "Determines if the previous page link is enabled."),
                j: "dspf"
            }, {
                name: "page up response",
                format: "1 / 0",
                readOnly: true,
                p: true,
                o: ["indicator"],
                help: pui.a("bind", "Specifies a response indicator that is returned to your program when the previous page link is clicked."),
                j: "dspf"
            }, {
                name: "csv export",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Displays a link allowing the user to export grid data to Excel using the CSV format." + (Q == "genie" && !pui.Na ? " <br /><b>Note:</b> In 5250 mode, this option only works with SQL-driven subfiles." :
                    ""))
            }, {
                name: "xlsx export",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Displays a link allowing the user to export grid data to Excel using the XLSX format." + (Q == "genie" && !pui.Na ? " <br /><b>Note:</b> In 5250 mode, this option only works with SQL-driven subfiles." : ""))
            }, {
                name: "xlsx export pics",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Include pictures in the XLSX Export. This option only works for Load-All subfiles."),
                j: "dspf"
            }, {
                name: "export file name",
                help: pui.a("blank", "Defines the name of the download file used to export grid data to CSV or XLSX formats. The .xlsx or .csv extension is automatically appended to the name. If omitted, the grid name is used." + (Q == "genie" && !pui.Na ? " <br /><b>Note:</b> In 5250 mode, this option only works with SQL-driven subfiles." : "")),
                translate: true
            }, {
                name: "export with headings",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "Specifies whether subfile headings should be exported as the first row of the CSV file." +
                    (Q == "genie" && !pui.Na ? " <br /><b>Note:</b> In 5250 mode, this option only works with SQL-driven subfiles." : ""))
            }, {name: "Row Folding", category: true, j: "dspf"}, {
                name: "fold multiple",
                choices: ["2", "3", "4", "Other..."],
                help: pui.a("blank", "The property determines the height of a collapsed row, which is calculated at by taking the row height property and dividing it by the fold multiple.  The multiple represents the number of collapsed rows that can fit into one expanded row.", ["other"]),
                bind: false,
                j: "dspf"
            },
            {
                name: "expanded",
                choices: ["true", "false"],
                p: true,
                o: ["indicator", "expression"],
                help: pui.a("false", "Determines if the rows are first displayed in expanded (also known as folded) mode." + (pui.viewdesigner ? "" : "  This property is similar to the SFLFOLD keyword.")),
                j: "dspf"
            }, {
                name: "collapsed",
                choices: ["true", "false"],
                p: true,
                o: ["indicator", "expression"],
                help: pui.a("false", "Determines if the rows are first displayed in collapsed (also known as truncated) mode." + (pui.viewdesigner ? "" : "  This property is similar to the SFLDROP keyword.")),
                j: "dspf"
            }, {
                name: "return mode",
                format: "1 / 0",
                readOnly: true,
                p: true,
                o: ["char", "indicator"],
                help: pui.a("bind", "This property can be bound to a field that will provide an indication of whether the grid rows were in expanded (also known as folded) mode or in collapsed (also known as truncated) mode on input." + (pui.viewdesigner ? "" : "  It represents the SFLMODE keyword. The bound field will contain a value of 0 if the grid rows are in expanded mode and a value of 1 if the grid rows are in collapsed mode.")),
                j: "dspf"
            }, {
                name: "single row zoom",
                choices: ["true", "false"],
                p: true,
                o: ["indicator", "expression"],
                help: pui.a("false", "Determines if a zoom icon is shown on collapsed rows. Once the user clicks the icon, the row is expanded. All other rows remain collapsed."),
                j: "dspf"
            }, {name: "Grid Data", category: true}, {
                name: "database file",
                displayName: pui.nodedesigner ? "database table" : undefined,
                type: "file",
                uppercase: pui.nodedesigner !== true,
                help: pui.a("blank", "Database file to use for a grid that is tied directly to a database. You can specify a 'database file' or 'library/database file'. If library is omitted, the session's library list is used.")
            },
            {
                name: "database fields",
                type: "field",
                multiple: true,
                uppercase: pui.nodedesigner !== true,
                help: pui.a("blank", "A set of database field names to use to retrieve the data for a database-driven grid. The field names should be comma separated.", [], ""),
                pj: function (A) {
                    if (confirm("Update grid columns?")) {
                        m.setProperty("column headings", A);
                        var C = m.g.c;
                        c(C, "column headings", A);
                        C.designer.k.ea("column headings");
                        A = A.split(",").length;
                        m.setProperty("number of columns", A);
                        c(C, "number of columns", A);
                        C.designer.k.ea("number of columns")
                    }
                }
            },
            {
                name: "selection criteria",
                type: "long",
                help: pui.a("blank", "Optional expression identifying which records should be retrieved from the database file.")
            }, {
                name: "order by",
                type: "field",
                multiple: true,
                uppercase: true,
                help: pui.a("blank", "Optional expression identifying which fields determine the order of the records retrieved from the database file.")
            }, {
                name: "custom sql",
                type: "long",
                help: pui.a("blank", "Specifies a sql statement to use to retrieve the records for a database-driven grid."),
                jp: function (A) {
                    confirm("Adjust grid based on columns?") &&
                    pui.mG({customSql: A}, m.vF)
                }
            }, {
                name: "allow any select statement",
                type: "boolean",
                choices: ["true", "false"],
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", 'Allows any valid SELECT SQL statement.<p>If this is <b>false</b> (default), a row count is retrieved by running SELECT COUNT(*) FROM (<b><i>your-custom-sql-property</i></b>), so your "custom sql" property must work with that syntax. This prevents the use of common table expressions, the optimize clause, and a few other things.</p><p>If set to <b>true</b>, the row count will be determined by running your statment as-is and looping through all rows to count them.</p><p><b>Note:</b> False performs better, but true allows a wider variety of SQL statements.</p>')
            },
            {
                name: "parameter value",
                type: "long",
                br: 1,
                U: true,
                help: pui.a("blank", 'Value for parameter marker in "selection criteria" or "custom sql" property. Parameter markers are specified using a question mark. Profound UI will accept values from the client for any parameter marker values which are not bound to program fields. Parameter markers are numbered in order of occurence, from left to right. To specify multiple parameter marker values, right-click the property and select Add Another Parameter Value.')
            },
            {
                name: "data url",
                type: "long",
                help: pui.a("blank", "Sets the url to a Web service that returns JSON data for a database-driven grid.")
            }, {
                name: "data transform function",
                type: "long",
                help: pui.a("blank", 'The name of a JavaScript function to be called to process the results of the "data url" program. This can be used to transform data from the program into the format expected by the grid widget.')
            }, {name: "Grid Data from Screen", category: true, j: "genie-nohandler"}, {
                name: "starting row",
                help: pui.a("blank", "Specifies the starting subfile row for retrieving data from the screen."),
                j: "genie-nohandler"
            }, {
                name: "ending row",
                help: pui.a("blank", "Specifies the ending subfile row for retrieving data from the screen."),
                j: "genie-nohandler"
            }, {
                name: "data columns",
                type: "list",
                help: pui.a("blank", "Specifies a comma separated list of column numbers for retrieving data from the screen."),
                j: "genie-nohandler"
            }, {name: "Position", category: true}, {
                name: "left",
                format: "px",
                help: pui.a("position", "Represents the x-coordinate of the current element."),
                $a: false
            }, {
                name: "top", format: "px", help: pui.a("position",
                    "Represents the y-coordinate of the current element."), $a: false
            }, {
                name: "right",
                format: "px",
                help: pui.a("position", "Represents the x-coordinate of the current element."),
                $a: false
            }, {
                name: "bottom",
                format: "px",
                help: pui.a("position", "Represents the y-coordinate of the current element."),
                $a: false
            }, {name: "height", help: pui.a("css", "Height of the grid."), bind: false, $a: false}, {
                name: "width",
                help: pui.a("css", "Width of the grid."),
                bind: false,
                $a: false
            }, {
                name: "expand to layout",
                choices: ["true", "false"],
                help: pui.a("false",
                    "If set to true, the grid will automatically expand to the full size of a layout container."),
                j: "dspf",
                bind: false
            }, {
                name: "z index",
                format: "number",
                help: pui.a("css", "The stacking order of the current element, expressed as an integer value. The element with the higher z index will overlay lesser elements.")
            }, {
                name: "locked in place",
                choices: ["true", "false"],
                help: pui.a("false", "If set to true, the grid cannot be moved or sized in the Visual Designer."),
                bind: false
            }, {
                name: "Drag and Drop", category: true,
                j: "dspf"
            }, {
                name: "allow drag",
                choices: ["true", "false"],
                type: "boolean",
                o: ["indicator", "expression"],
                p: true,
                help: pui.a("false", "This property determines if rows within the grid can be drag and dropped."),
                j: "dspf"
            }, {
                name: "ondragstart",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the user first starts to drag a row within the grid. Information about the drag and drop operation is provided using the global pui.dragDropInfo object."),
                j: "dspf"
            }, {
                name: "drop targets", type: "list", help: pui.a("blank",
                    "Specifies a list of target element id's, which indentify where the row can be dropped."), j: "dspf"
            }, {
                name: "ondragenter",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the user drags a row over a valid drop target. Information about the drag and drop operation is provided using the global pui.dragDropInfo object."),
                j: "dspf"
            }, {
                name: "ondragleave",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the user moves a row out of a valid drop target during a drag operation. Information about the drag and drop operation is provided using the global pui.dragDropInfo object."),
                j: "dspf"
            }, {
                name: "ondrop",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the mouse is released during a drag and drop operation. Information about the drag and drop operation is provided using the global pui.dragDropInfo object."),
                j: "dspf"
            }, {name: "Tabs", category: true}, {
                name: "parent tab panel",
                help: pui.a("blank", "This property specifies the id of the Tab Panel to which this element belongs. The property is set automatically when you drag and drop the element onto a Tab Panel."),
                bind: false
            },
            {
                name: "parent tab",
                help: pui.a("blank", "This property specifies the tab index of the specific tab to which this element belongs. Each tab within a Tab Panel is identified by a sequential index, starting with 0 for the first tab, 1 for the second tab, and so on. The property is set automatically when you drag and drop the element onto a Tab Panel."),
                bind: false
            }, {
                name: "parent field set",
                help: pui.a("blank", "This property specifies the if of the Field Set Panel to which this element belongs. The property is set automatically when you drag and drop the element onto a Field Set Panel."),
                bind: false
            }, {name: "Borders", category: true}, {
                name: "border color",
                type: "color",
                help: pui.a("css", "The color of the grid's outer borders and inner separators.")
            }, {
                name: "border width",
                format: "px",
                choices: ["0px", "1px", "2px", "3px", "4px", "5px", "Other..."],
                help: pui.a("css", "The thickness of the grid's outer borders and inner separators.", ["other"])
            }, {name: "Padding", category: true}, {
                name: "padding bottom",
                format: "px",
                choices: ["0px", "1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "Other..."],
                help: pui.a("css",
                    "Sets the distance between the bottom edge of a grid cell and the cell's content.", ["other"])
            }, {
                name: "padding left",
                format: "px",
                choices: ["0px", "1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "Other..."],
                help: pui.a("css", "Sets the distance between the left edge of a grid cell and the cell's content.", ["other"])
            }, {
                name: "padding right",
                format: "px",
                choices: ["0px", "1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "Other..."],
                help: pui.a("css", "Sets the distance between the right edge of a grid cell and the cell's content.",
                    ["other"])
            }, {
                name: "padding top",
                format: "px",
                choices: ["0px", "1px", "2px", "3px", "4px", "5px", "6px", "7px", "8px", "9px", "Other..."],
                help: pui.a("css", "Sets the distance between the top edge of a grid cell and the cell's content.", ["other"])
            }, {name: "Misc", category: true}, {
                name: "css class",
                type: "cssClass",
                U: Q == "dspf" ? true : false,
                Oa: "class",
                help: pui.a("widget", "Defines a custom cascading style sheet class to assign to the element." + (Q == "dspf" ? "  To specify multiple classes, right-click the property and select Add Another CSS Class." :
                    ""))
            }, {
                name: "tool tip",
                type: "long",
                help: pui.a("blank", "Defines the text to appear in a tool tip when the user hovers the mouse over this element."),
                translate: true
            }, {
                name: "user defined data",
                U: true,
                help: pui.a("blank", "Specifies user-defined general purpose data associated with the widget. To provide multiple user defined data values, right-click the property and select Add Another User Defined Value.")
            }, {
                name: "visibility",
                format: "visible / hidden",
                choices: ["hidden", "visible"],
                help: pui.a("css", "Determines whether the element is visible or hidden.")
            },
            {name: "Events", category: true}, {
                name: "ondbload",
                type: "js",
                help: pui.a("blank", 'Initiates a client-side script when database data is loaded for a database-driven widget. An object named <b>response</b> will be defined that contains:<ul><li><b>success</b> - boolean true/false</li><li><b>id</b> - the widget id</li><li><b>error</b> - an object with "id", "text" and "text2" fields containing the error.</li></ul>')
            }, {
                name: "onfilterchange",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the filter has changed."),
                bind: false,
                j: "dspf"
            }, {
                name: "onrowclick",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when a row within the grid is clicked. The script can determine the row number using the <b>row</b> variable."),
                bind: false
            }, {
                name: "onrowdblclick",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when a row within the grid is double-clicked. The script can determine the row number using the <b>row</b> variable."),
                bind: false
            }, {
                name: "onrowmouseover",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the mouse is moved over a row within the grid. The script can determine the row number using the <b>row</b> variable."),
                bind: false
            }, {
                name: "onrowmouseout",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the mouse is moved off of a row within the grid. The script can determine the row number using the <b>row</b> variable."),
                bind: false
            }, {
                name: "onpagedown",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the user pages down using the grid's scrollbar or the grid's paging bar. To prevent the grid's default paging action, the script must evaluate to <i>false</i>."),
                bind: false
            }, {
                name: "onpageup",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the user pages up using the grid's scrollbar or the grid's paging bar. To prevent the grid's default paging action, the script must evaluate to <i>false</i>."),
                bind: false
            }, {
                name: "onscroll",
                type: "js",
                help: pui.a("blank", "Initiates a client-side script when the user scrolls using the grid's scrollbar. The <b>row</b> variable in the script provides the top row of the grid."),
                bind: false
            }]
    }
};
pui.widgets.add({
    name: "grid",
    nj: true,
    oe: false,
    defaults: {
        "number of rows": "7",
        "number of columns": "3",
        "column widths": "150,150,150",
        "column headings": "Heading 1,Heading 2,Heading 3"
    },
    eh: function (b) {
        if (b.dom.grid == null) {
            b.dom.grid = new pui.EC;
            b.dom.grid.b = b.dom.parentNode;
            b.dom.grid.g = b.dom;
            if (b.design && !b.dom.grid.designMode) {
                b.dom.grid.tp();
                b.dom.grid.setProperty("show paging controls", b.properties["show paging controls"]);
                b.dom.grid.setProperty("show page number", b.properties["show page number"]);
                b.dom.grid.setProperty("show bar", b.properties["show bar"]);
                b.dom.grid.setProperty("csv export", b.properties["csv export"]);
                b.dom.grid.setProperty("xlsx export", b.properties["xlsx export"])
            }
            if ((pui.is_old_ie || pui.is_opera) && !b.design && b.properties.scrollbar == "paging" && Q == "dspf") {
                b.dom.grid.Vx = true;
                setTimeout(function () {
                    b.dom.grid.Vx = false;
                    b.dom.grid.s != null && b.dom.grid.s.H()
                }, 0)
            }
            if (b.properties["css class"] != null && b.properties["css class"] != "") {
                b.dom.className = b.dom.grid.qg = b.properties["css class"];
                b.dom.grid.V = {};
                b.dom.grid.Wh = {}
            }
            if (!b.dom.style.top) b.dom.style.top = "0px";
            if (!b.dom.style.left) b.dom.style.left = "0px";
            b.dom.Jn = b.dom.grid.mi();
            b.dom.ff = qc(b.dom.Jn);
            b.dom.grid.setProperty("has header", b.properties["has header"]);
            if (b.design) {
                b.c.tn = false;
                b.dom.grid.setProperty("number of rows", b.properties["number of rows"]);
                b.dom.grid.setProperty("number of columns", b.properties["number of columns"]);
                b.dom.grid.setProperty("column widths", b.properties["column widths"]);
                b.dom.grid.setProperty("column headings",
                    b.properties["column headings"]);
                b.dom.grid.Tf();
                b.dom.grid.cc();
                b.dom.grid.ie()
            } else {
                if ((Q == "dspf" || pui.Na) && b.properties["cursor progression"] != "top to bottom") b.dom.grid.setProperty("number of columns", b.properties["number of columns"]);
                if ((Q == "dspf" || pui.Na) && b.properties["cursor progression"] == "top to bottom") b.dom.grid.setProperty("number of rows", b.properties["number of rows"])
            }
        }
        if (b.propertyName == "field type") {
            b.dom.sizeMe = function () {
                b.dom.grid.Tg && b.dom.grid.cd();
                b.dom.grid.alignColumnTotals()
            };
            if (b.design) {
                var a = parseInt(b.properties["row height"]);
                if (!isNaN(a) && a > 0) b.dom.grid.cb = a;
                b.dom.c = b.c;
                b.c.tn = false
            }
            b.dom.style.borderWidth = "0px";
            b.dom.style.padding = "0px";
            b.dom.oz = b.properties.top;
            var c = function (d) {
                b.properties[d] != null && b.properties[d] != "" && b.dom.grid.setProperty(d, b.properties[d])
            };
            c("header image");
            c("header background");
            c("header font color");
            c("header font size");
            c("header height");
            c("header font weight");
            c("header font family");
            c("odd row background");
            c("even row background");
            c("hover effect");
            c("hover image");
            c("hover background");
            c("hover font color");
            c("header text align");
            c("row height");
            c("border color");
            c("border width");
            b.design && setTimeout(function () {
                c("expand to layout")
            }, 0)
        }
        b.dom.grid.setProperty(b.propertyName, b.value)
    },
    initialize: function (b) {
        if (!b.design && b.dom != null && b.dom.grid != null) {
            b.dom.grid.Tf();
            b.dom.grid.cc();
            b.dom.grid.ie();
            if (b.dom.grid.A != null) {
                b.dom.grid.A.H();
                b.dom.grid.A.position()
            }
            if (b.properties["expand to layout"] == "true" || b.properties["expand to layout"] ==
                true) b.dom.grid.cd()
        }
        b.dom.oz && b.dom.grid.setProperty("top", b.dom.oz);
        b.dom.UL = b.properties.left;
        Q == "genie" && !pui.Na && !b.design && b.dom != null && b.dom.grid != null && b.dom.grid.eF(1, true)
    }
});
pui.widgets.add({
    name: "html container",
    rf: true,
    dependencies: [{
        script: "/ejs/ejs.min.js", condition: function (b, a, c) {
            if (c) return true;
            if (typeof b.html == "string") return b.html.indexOf("<%") >= 0;
            if (b.html != null && typeof b.html.fieldName == "string") {
                b = a[b.html.fieldName.toUpperCase()];
                if (b != null) return b.indexOf("<%") >= 0
            }
            return false
        }
    }],
    defaults: {html: "<i>HTML Content</i>", "white space": "normal", width: "200px", height: "100px"},
    propertySetters: {
        "field type": function (b) {
            b.dom.innerHTML = b.design ? b.evalProperty("html") :
                pui.sp(b.evalProperty("html"))
        }, html: function (b) {
            b.dom.innerHTML = b.design ? b.value : pui.sp(b.value)
        }
    }
});
pui["encode hyperlink spaces"] = null;
pui.ix = function (b, a, c, d, e) {
    b.innerHTML = "";
    var f = document.createElement("a"), h = false;
    if (c == true || d == null) {
        d = "javascript:void(0)";
        h = true
    }
    f.href = d;
    if (!c && e != null) f.target = e;
    a = a;
    if (Q == "genie" && pui["encode hyperlink spaces"] != false || pui["encode hyperlink spaces"] == true) a = a.replace(/ /g, "\u00a0");
    f.appendChild(document.createTextNode(a));
    if (pui.is_old_ie && h && (Q == "dspf" || Q == "genie")) gc(f, "click", function (g) {
        g.preventDefault && g.preventDefault();
        return g.returnValue = false
    });
    b.appendChild(f)
};
pui.widgets.add({
    name: "hyperlink", newValue: "Click Here", rf: true, defaults: {color: "#0066CC"}, eh: function (b) {
        switch (b.propertyName) {
            case "color":
            case "font family":
            case "font size":
            case "font style":
            case "font variant":
            case "font weight":
            case "letter spacing":
            case "text align":
            case "text decoration":
            case "text transform":
            case "word spacing":
            case "background color":
                var a = b.propertyName.split(" ");
                if (a.length == 2) a[1] = a[1].substr(0, 1).toUpperCase() + a[1].substr(1);
                a = a.join("");
                var c = b.dom;
                if (c.firstChild !=
                    null && c.firstChild.tagName == "A") c.firstChild.style[a] = b.value;
                break
        }
    }, propertySetters: {
        "field type": function (b) {
            pui.ix(b.dom, b.evalProperty("value"), b.design, b.properties["hyperlink reference"], b.properties.target);
            if (b.design) {
                S.W(b.dom, "mouseover", function () {
                    setTimeout(b.c.designer.selection.Fb, 0)
                });
                S.W(b.dom, "mouseout", function () {
                    setTimeout(b.c.designer.selection.Fb, 0)
                })
            }
        }, value: function (b) {
            pui.ix(b.dom, b.value, b.design, b.properties["hyperlink reference"], b.properties.target)
        }
    }
});

function sd(b) {
    var a = b.evalProperty("icon"), c = b.evalProperty("css class"), d = b.evalProperty("icon size"),
        e = b.evalProperty("cursor"), f = b.evalProperty("font family"), h = document.createElement("div");
    b.dom.innerHTML = "";
    var g = [{type: "material", title: "Material Icons", classList: {"": "pui-material-icons"}}, {
        type: "fontAwesome",
        title: "Font Awesome Icons",
        classList: {
            brands: "pui-fa-brands-icons fa-",
            solid: "pui-fa-solid-icons fa-",
            regular: "pui-fa-regular-icons fa-"
        }
    }, {
        type: "jQueryIcons", title: "jQuery Mobile Icons",
        classList: {"": "ui-icon ui-icon-"}
    }];
    if (a) a = Zb(a);
    if (pui.customIconList && pui.customIconList) if (Array.isArray(pui.customIconList.icons) && pui.customIconList.icons.length) g = pui.customIconList.icons;
    if (a.substr(0, 9) == "material:") {
        g = a.substr(9);
        h.innerText = Zb(g);
        h.className = "pui-material-icons";
        if (e) h.style.cursor = e
    } else if (a.substr(0, 12) == "fontAwesome:") {
        g = Zb(a.substr(12));
        h.className = "pui-fa-icons fa-" + g;
        h.innerText = ""
    } else {
        e = a.split(":");
        var l = e.shift().split("-"), n = l.pop();
        l = l.join("-");
        var o = e.pop();
        g.every(function (i) {
            var r = i.classList[n];
            if (l === i.type) {
                h.className = r + o;
                h.innerText = "";
                return false
            }
            return true
        })
    }
    if (c) h.className = h.className + " " + c;
    if (d) h.style.fontSize = d;
    if (f) h.style.fontFamily = f;
    b.dom.appendChild(h)
}

function td(b, a) {
    var c = b.dom.firstChild;
    c.style.fontSize = parseInt(b.value) <= parseInt(b.dom.style[a]) ? b.value : b.dom.style[a];
    b.properties["icon size"] = c.style.fontSize
}

pui.widgets.add({
    name: "icon",
    newId: "Icon",
    tag: "div",
    defaults: {icon: "material:face"},
    propertySetters: {
        "field type": function (b) {
            sd(b);
            b.dom.style.textAlign = "center"
        }, icon: function (b) {
            b.properties.icon = b.value;
            sd(b)
        }, width: function (b) {
            td(b, "height")
        }, height: function (b) {
            td(b, "width")
        }, "css class": function (b) {
            b.properties["css class"] = b.value;
            sd(b)
        }, cursor: function (b) {
            b.properties.cursor = b.value;
            sd(b)
        }, "font family": function (b) {
            b.properties["font family"] = b.value;
            sd(b)
        }
    }
});
pui.widgets.add({
    name: "iframe",
    newId: "IFrame",
    menuName: "IFrame",
    defaults: {width: "400px", height: "300px", "z index": "25", "background color": "#FFFFFF", "frame border": "true"},
    propertySetters: {
        "field type": function (b) {
            if (b.design) {
                b.dom.innerHTML = "IFrame content will appear here.";
                b.dom.style.overflow = "hidden"
            } else {
                b.dom.innerHTML = "";
                url = b.evalProperty("iframe url");
                if (url == null || url == "") b.dom.innerHTML = "IFrame URL property not specified."; else {
                    var a = "", c = parseInt(b.properties.width), d = parseInt(b.properties.height);
                    if (c > 0) a += ' width="' + b.properties.width + '"';
                    if (d > 0) a += ' height="' + b.properties.height + '"';
                    c = '<iframe src="' + url;
                    c += '" frameborder="';
                    c += b.properties["frame border"] == "true" ? "1" : "0";
                    c += '"' + a + ">";
                    b.dom.innerHTML = c
                }
            }
        }, visibility: function (b) {
            if (!b.design) {
                var a = b.dom.getElementsByTagName("iframe");
                if (a && a.length == 1) {
                    a = a[0];
                    if (b.value == "hidden") {
                        a.style.visibility = "hidden";
                        a.style.display = "none"
                    } else {
                        a.style.visibility = "";
                        a.style.display = ""
                    }
                }
            }
        }
    }
});
pui.kz = function (b) {
    b = vb(b);
    if (b.tagName == "IMG") if (b.ih != null && b.ih != "") {
        b.vz = true;
        if (b.ju != true) b.src = b.ih
    }
};
pui.jz = function (b) {
    b = vb(b);
    if (b.tagName == "IMG") {
        b.vz = false;
        if (b.wg != null) if (b.ju != true) b.src = b.wg
    }
};
pui.Sp = function (b) {
    b = vb(b);
    if (b.tagName == "IMG") if (b.Yh != null && b.Yh != "") {
        b.ju = true;
        b.src = b.Yh
    }
};
pui.Tp = function (b) {
    if (b.wg != null) {
        b.ju = false;
        b.src = b.vz == true ? b.ih : b.wg
    }
};
pui.lz = function (b) {
    if (b.design) return null;
    var a = b.evalProperty("blob table"), c = b.evalProperty("blob column");
    if (a != null && c != null && a != "" && c != "") {
        a = {};
        c = "?AUTH=" + encodeURIComponent(pui.appJob.auth) + "&q=" + encodeURIComponent(pui.jg(b.dom));
        pui.ig(b.properties, a);
        for (var d in a) c += "&" + encodeURIComponent(d) + "=" + a[d];
        c += "&rnd=" + String(Math.random()) + String((new Date).getTime());
        return cc("PUI0009119.PGM") + c
    }
    return null
};
pui.widgets.add({
    name: "image", tag: "img", propertySetters: {
        "field type": function (b) {
            b.dom.onselectstart = za(false);
            b.dom.ondragstart = za(false);
            b.dom.setAttribute("draggable", "false");
            if (typeof b.dom.style.MozUserSelect != "undefined") b.dom.style.MozUserSelect = "none";
            b.dom.wg = b.evalProperty("image source");
            var a = pui.lz(b);
            if (a) b.dom.wg = a;
            b.dom.src = b.dom.wg;
            a = b.evalProperty("hover image source");
            b.dom.ih = a;
            if (a != null && a != "") {
                b.dom.ih = pui.normalizeURL(b.dom.ih, true);
                gc(b.dom, "mouseover", pui.kz);
                gc(b.dom,
                    "mouseout", pui.jz);
                (new Image).src = a
            }
            a = b.evalProperty("click image source");
            b.dom.Yh = a;
            if (a != null && a != "") {
                b.dom.Yh = pui.normalizeURL(b.dom.Yh, true);
                gc(b.dom, "mousedown", pui.Sp);
                gc(document, "mouseup", function () {
                    pui.Tp(b.dom)
                });
                gc(b.dom, "touchstart", pui.Sp);
                gc(document, "touchend", function () {
                    pui.Tp(b.dom)
                });
                (new Image).src = a
            }
        }, "image source": function (b) {
            b.dom.wg = pui.normalizeURL(b.value, true);
            if (b.design && b.dom.wg.indexOf(".svg") != -1) if (!b.properties.width && !b.properties.height) {
                var a = rc();
                a = pui.Ye(a,
                    "width");
                b.dom = uc(a, b.properties, b.dom, "200px", b.design, b.c, b.pc);
                b.c.designer.k.Hg("width", "200px", true)
            }
        }, "blob column": function (b) {
            var a = pui.lz(b);
            if (a) b.dom.wg = a;
            b.dom.src = b.dom.wg
        }, "hover image source": function (b) {
            b.dom.ih = b.value;
            if (b.value != null && b.value != "") {
                b.dom.ih = pui.normalizeURL(b.dom.ih, true);
                gc(b.dom, "mouseover", pui.kz);
                gc(b.dom, "mouseout", pui.jz);
                (new Image).src = b.value
            }
        }, "click image source": function (b) {
            b.dom.Yh = b.value;
            if (b.value != null && b.value != "") {
                b.dom.Yh = pui.normalizeURL(b.dom.Yh,
                    true);
                gc(b.dom, "mousedown", pui.Sp);
                gc(document, "mouseup", function () {
                    pui.Tp(b.dom)
                });
                gc(b.dom, "touchstart", pui.Sp);
                gc(document, "touchend", function () {
                    pui.Tp(b.dom)
                });
                (new Image).src = b.value
            }
        }
    }
});
pui.NC = function () {
    function b(h) {
        var g = h.b, l = h.nI;
        if (g.po == undefined) g.po = true;
        g.innerHTML = "";
        pui.ya(g, "pui-menu");
        h.orientation == "horizontal" && pui.ya(g, "pui-horizontal");
        var n = document.createElement("table"), o = g.style.width;
        if (o != null && o != "" && h.orientation != "horizontal") n.style.width = "100%";
        n.cellPadding = 0;
        n.cellSpacing = 0;
        o = a(h.Dt);
        var i, r = e.borderColor;
        if (r != "" && r != null) {
            r = pui.wn(r);
            n.style.borderTop = "1px solid " + r;
            n.style.borderLeft = "1px solid " + r
        }
        for (var k = h.Dt; k <= h.aC; k++) if (a(k) == o) {
            for (var q =
                e.choices[k]; q.substr(0, 1) == "-";) q = q.substr(1);
            var s = e.tm[k];
            if (s == null) s = q;
            i = i == null || h.orientation == "vertical" ? n.insertRow(n.rows.length) : i;
            var t = i.insertCell(i.cells.length);
            if (q == null || q == "" || Zb(q) == "") q = "&nbsp;";
            t.innerHTML = q;
            t.Bk = s;
            t.oa = o;
            if (Ub()) t.sx = k;
            t.OH = e.b.id;
            t.orientation = h.orientation;
            if (e.padding != null && e.padding.length > 0) t.style.paddingTop = t.style.paddingBottom = t.style.paddingRight = e.padding;
            if (e.paddingLeft != null && e.paddingLeft.length > 0) t.style.paddingLeft = e.paddingLeft;
            if (r != "" &&
                r != null) {
                t.style.borderRight = "1px solid " + r;
                t.style.borderBottom = "1px solid " + r
            }
            if (e.animate) {
                t.style.filter = "alpha(opacity=100)";
                t.style.opacity = 1
            }
            if (e.fd != null && e.fd != "") {
                t.fd = e.fd;
                if (e.Cn.length > 1) t.fd = e.Cn[k] != null ? e.Cn[k] : "";
                if (t.fd != "") t.style.backgroundImage = "url('" + pui.normalizeURL(t.fd, true) + "')";
                if (e.repeat != null && e.repeat.length > 0) {
                    t.style.backgroundRepeat = e.repeat;
                    if (e.repeat == "no-repeat") t.style.backgroundPosition = "left center"
                }
            } else t.style.backgroundImage = "";
            if (c(k)) {
                t.wo = k + 1;
                t.yr =
                    k + 1;
                for (q = a(k + 1); t.yr < e.choices.length - 1 && a(t.yr + 1) >= q;) t.yr += 1;
                if (h.orientation == "vertical") {
                    q = document.createElement("img");
                    q.src = pui.normalizeURL("/profoundui/proddata/images/menus/submenu-arrow.gif");
                    q.style.position = "absolute";
                    q.style.right = "3px";
                    q.style.paddingTop = "3px";
                    q.lu = true;
                    s = document.createElement("span");
                    s.innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
                    s.lu = true;
                    t.appendChild(s);
                    t.appendChild(q)
                }
            }
            (function (u) {
                u.oncontextmenu = za(false);
                u.onmouseover = function () {
                    u.hm = true;
                    if (e.zj != null &&
                        e.zj != "") u.style.backgroundColor = e.zj; else u.className = "menu-hover";
                    if (e.Aj != null && e.Aj != "") u.style.color = e.Aj;
                    if (e.Bn != null && e.Bn != "") {
                        u.style.backgroundImage = "url('" + e.Bn + "')";
                        if (e.repeat != null && e.repeat.length > 0) {
                            u.style.backgroundRepeat = e.repeat;
                            if (e.repeat == "no-repeat") u.style.backgroundPosition = "left center"
                        }
                    } else u.style.backgroundImage = u.fd != null && u.fd != "" ? "url('" + u.fd + "')" : "";
                    for (var w = [], v = 0; v < f.length; v++) f[v].oa >= u.oa && w.push(f[v]);
                    for (v = 0; v < w.length; v++) e.kv(w[v]);
                    e.dK(u)
                };
                u.onmouseout =
                    function (w) {
                        if (!w) w = window.event;
                        var v = w.relatedTarget;
                        if (v == null) v = w.toElement;
                        for (; v != null && (v.tagName == "TABLE" || v.tagName == "TBODY" || v.tagName == "TR");) {
                            if (v.firstChild == null) break;
                            v = v.firstChild
                        }
                        if (v == null || v.oa == null || v.tagName != "TD" || v.OH != e.b.id) {
                            w = false;
                            if (v != null) {
                                if (v == n) w = true;
                                if (l != null && v == l) w = true;
                                if (v.lu) w = true;
                                if (!w) {
                                    v = d(v);
                                    var E = d(u);
                                    if (v && v === E) w = true
                                }
                            }
                            w || e.LA()
                        } else if (u.$c != null) {
                            for (w = true; v != null;) {
                                if (u.$c == v) {
                                    w = false;
                                    break
                                }
                                v = v.parentNode
                            }
                            w && e.kv(u)
                        }
                        if (e.Aj != null && e.Aj != "") u.style.color =
                            "";
                        if (u.fd != null && u.fd != "") {
                            u.style.backgroundImage = "url('" + u.fd + "')";
                            u.style.backgroundRepeat = e.repeat
                        } else u.style.backgroundImage = "";
                        if (e.zj != null && e.zj != "") {
                            u.hm = false;
                            if (e.animate) {
                                var y = function (F) {
                                    F -= 10;
                                    if (F < 40) {
                                        if (!u.hm) u.style.backgroundColor = "";
                                        u.hm = true
                                    }
                                    if (u.hm) F = 100;
                                    u.style.filter = "alpha(opacity=" + F + ")";
                                    u.style.opacity = F / 100;
                                    u.hm || setTimeout(function () {
                                        y(F)
                                    }, 60)
                                };
                                y(100)
                            } else u.style.backgroundColor = ""
                        } else u.className = ""
                    };
                u.onclick = function () {
                    u.oa > 0 && u.wo == null && e.LA();
                    if (e.b.onoptionclick !=
                        null) Ub() || u.wo == null && e.b.onoptionclick(u.Bk, tc(u)); else if (Q == "dspf") if (u.wo == null) {
                        var w = e.b;
                        if (w.Fa != null) if (w.disabled != true) {
                            w.Fa = u.Bk;
                            if (w.ia == "true" || w.ia == "send data") pui.ia = w.ia;
                            if (pui.Ld() == false) w.Fa = ""
                        }
                    }
                };
                u.ondblclick = function (w) {
                    if (Ub() && u.orientation == "vertical" && u.oa == 0) {
                        var v = S.getTarget(w);
                        for (w = v.parentNode; w.tagName != "DIV";) w = w.parentNode;
                        var E = R.designer.$d(w);
                        if (!pui.f(E.properties.choices) && !pui.Ia(E.properties.choices) && typeof v.sx === "number") {
                            E.designer.we.Oj = function (y) {
                                var F =
                                    E.properties.choices;
                                if (F == "") F = "Option 1,Option 2,Option 3";
                                F = F.split(",");
                                F[v.sx] = y;
                                F = F.join(",");
                                y = rc().choices;
                                E.designer.n.add(E, y.name);
                                uc(y, E.properties, E.dom, F, true, E, null);
                                E.m.choices = true;
                                E.ta = true;
                                E.designer.X[E.designer.i.l] = true;
                                E.designer.k.ea("choices")
                            };
                            E.designer.we.show(E, v, "menu")
                        }
                    }
                }
            })(t);
            i = i
        }
        g.appendChild(n)
    }

    function a(h) {
        h = e.choices[h];
        var g = 0;
        if (h == null) return g;
        for (var l = 0; l < h.length; l++) if (h.substr(l, 1) == "-") g += 1; else break;
        return g
    }

    function c(h) {
        if (h >= e.choices.length - 1) return false;
        if (a(h) + 1 == a(h + 1)) return true;
        return false
    }

    function d(h) {
        for (h = h; h;) {
            if (h.tagName == "TABLE") return h;
            h = h.parentElement
        }
        return false
    }

    var e = this, f = [];
    this.b = null;
    this.choices = [];
    this.tm = [];
    this.Aj = this.zj = null;
    this.animate = true;
    this.fd = this.paddingLeft = this.padding = this.borderColor = this.repeat = null;
    this.Cn = [];
    this.Bn = null;
    this.orientation = "vertical";
    this.H = function () {
        e.Oq > 0 && clearTimeout(e.Oq);
        e.Oq = setTimeout(function () {
                b({b: e.b, orientation: e.orientation, Dt: 0, aC: e.choices.length - 1});
                e.Oq = null;
                try {
                    delete e.Oq
                } catch (h) {
                }
            },
            0)
    };
    this.dK = function (h) {
        if (h.wo != null) {
            for (var g = h; g.tagName != "TABLE";) g = g.parentNode;
            var l = g.parentNode;
            if (h.$c == null) {
                h.$c = document.createElement("div");
                h.$c.className = l.className;
                var n = h.$c.style, o = l.style;
                n.backgroundColor = o.backgroundColor;
                n.letterSpacing = o.letterSpacing;
                n.wordSpacing = o.wordSpacing;
                n.textAlign = o.textAlign;
                n.textDecoration = o.textDecoration;
                n.textTransform = o.textTransform;
                n.fontVariant = o.fontVariant;
                n.fontWeight = o.fontWeight;
                n.fontSize = o.fontSize;
                n.fontFamily = o.fontFamily;
                n.color =
                    o.color;
                n.zIndex = o.zIndex;
                n.position = "absolute";
                if (!pui.pb) n.cursor = o.cursor;
                e.b.parentNode.appendChild(h.$c)
            }
            if (h.orientation == "vertical") {
                h.$c.style.top = l.offsetTop + h.offsetTop + "px";
                h.$c.style.left = l.offsetLeft + l.offsetWidth - 1 + "px"
            } else {
                h.$c.style.top = l.offsetTop + h.offsetTop + h.offsetHeight - 1 + "px";
                h.$c.style.left = l.offsetLeft + h.offsetLeft + "px"
            }
            h.$c.style.display = "";
            l.style.display = "";
            b({b: h.$c, orientation: "vertical", Dt: h.wo, aC: h.yr, nI: g});
            g = 100;
            if (h.orientation == "horizontal" && h.oa == 0 && h.offsetWidth >
                g) g = h.offsetWidth;
            if (h.$c.offsetWidth < g) {
                h.$c.style.width = g + "px";
                g = h.$c.firstChild;
                g.style.width = "100%"
            }
            g = true;
            for (l = 0; l < f.length; l++) if (f[l] == h) {
                g = false;
                break
            }
            g && f.push(h)
        }
    };
    this.kv = function (h) {
        if (h.$c != null) {
            for (var g = 0; g < f.length; g++) if (f[g] == h) {
                f.splice(g, 1);
                break
            }
            h.$c.parentNode.removeChild(h.$c);
            h.$c = null
        }
    };
    this.LA = function () {
        for (var h = [], g = 0; g < f.length; g++) h.push(f[g]);
        for (g = 0; g < h.length; g++) e.kv(h[g])
    }
};
pui.widgets.add({
    name: "menu",
    oe: false,
    defaults: {
        width: "200px",
        height: "200px",
        choices: "Option 1,Option 2,Option 3,Option 4,Option 5",
        color: "#333366",
        "border color": "#EEEEEE",
        "font family": "Arial",
        "font size": "12px",
        "background color": "#FFFFFF",
        "hover background color": "#6699FF",
        "hover text color": "#FFFFFF",
        animate: "true"
    },
    propertySetters: {
        "field type": function (b) {
            b.dom.Y = new pui.NC;
            var a = b.evalProperty("choices");
            b.dom.Y.choices = a != null && a != "" ? pui.Ta(a) : ["Option 1", "Option 2", "Option 3"];
            if (pui["onoptionclick value is text"] !==
                true) {
                a = b.evalProperty("choice values");
                b.dom.Y.tm = a != null && a != "" ? pui.Ta(a) : []
            }
            b.dom.Y.b = b.dom;
            b.dom.Y.Aj = b.properties["hover text color"];
            b.dom.Y.zj = b.properties["hover background color"];
            b.dom.Y.borderColor = b.properties["border color"];
            b.dom.Y.fd = b.properties["option image"];
            b.dom.Y.Cn = b.dom.Y.fd == null || b.dom.Y.fd == "" ? [] : pui.Ta(b.dom.Y.fd);
            b.dom.Y.Bn = b.properties["option hover image"];
            b.dom.Y.repeat = b.properties["background repeat"];
            b.dom.Y.padding = b.properties["menu option padding"];
            b.dom.Y.paddingLeft =
                b.properties["menu option indent"];
            b.dom.Y.animate = b.properties.animate != "false";
            a = b.properties.orientation;
            if (a != "horizontal" && a != "vertical") a = "vertical";
            b.dom.Y.orientation = a;
            b.dom.Y.H()
        }, choices: function (b) {
            if (b.dom.Y != null) {
                var a = b.value;
                b.dom.Y.choices = a != null && a != "" ? pui.Ta(a) : ["Option 1", "Option 2", "Option 3"];
                b.dom.Y.H()
            }
        }, "choice values": function (b) {
            if (b.dom.Y != null) {
                var a = b.value;
                b.dom.Y.tm = a != null && a != "" ? pui.Ta(a) : []
            }
        }, "hover background color": function (b) {
            if (b.dom.Y != null) b.dom.Y.zj = b.value
        },
        "hover text color": function (b) {
            if (b.dom.Y != null) b.dom.Y.Aj = b.value
        }, animate: function (b) {
            if (b.dom.Y != null) {
                b.dom.Y.animate = b.value == "false" ? false : true;
                b.dom.Y.H()
            }
        }, "border color": function (b) {
            if (b.dom.Y != null) {
                b.dom.Y.borderColor = b.value;
                b.dom.Y.H()
            }
        }, "menu option padding": function (b) {
            if (b.dom.Y != null) {
                b.dom.Y.padding = b.value;
                b.dom.Y.H()
            }
        }, "menu option indent": function (b) {
            if (b.dom.Y != null) {
                b.dom.Y.paddingLeft = b.value;
                b.dom.Y.H()
            }
        }, "option image": function (b) {
            if (b.dom.Y != null) {
                b.dom.Y.fd = b.value;
                b.dom.Y.Cn =
                    b.value == null || b.value == "" ? [] : pui.Ta(b.value);
                b.dom.Y.H()
            }
        }, "option hover image": function (b) {
            if (b.dom.Y != null) {
                b.dom.Y.Bn = b.value;
                b.dom.Y.H()
            }
        }, "background repeat": function (b) {
            if (b.dom.Y != null) {
                b.dom.Y.repeat = b.value;
                b.dom.Y.H()
            }
        }, orientation: function (b) {
            if (b.dom.Y != null) {
                var a = b.value;
                if (a != "horizontal" && a != "vertical") a = "vertical";
                b.dom.Y.orientation = a;
                b.dom.Y.H()
            }
        }
    },
    eh: function (b) {
        switch (b.propertyName) {
            case "color":
            case "font family":
            case "font size":
            case "font style":
            case "font variant":
            case "font weight":
            case "letter spacing":
            case "text align":
            case "text decoration":
            case "text transform":
            case "word spacing":
            case "background color":
            case "css class":
            case "css class 2":
            case "css class 3":
            case "css class 4":
                b.dom.Y !=
                null && b.dom.Y.H();
                break
        }
    }
});

function ud(b, a, c) {
    if (!b.design) {
        var d = tc(b.Jd);
        if (d != null && d != "" && b.dom.originalValue == null) b.dom.originalValue = d
    }
    b.dom.innerHTML = "";
    a = a;
    if (typeof a === "string") a = a.replace(/ /g, "\u00a0");
    if (c) {
        labelElem = document.createElement("label");
        labelElem.htmlFor = c;
        textNode = document.createTextNode(a);
        labelElem.appendChild(textNode);
        b.dom.appendChild(labelElem)
    } else b.dom.appendChild(document.createTextNode(a));
    if (Q == "dspf" && b.design) {
        c = b.properties["overflow x"];
        if (c == null) c = "";
        a = b.properties["overflow y"];
        if (a == null) a = "";
        if (b.propertyName == "value" && pui.f(b.newValue) || b.propertyName != "value" && pui.f(b.properties.value)) {
            if (c == "") b.dom.style.overflowX = "hidden";
            if (a == "") b.dom.style.overflowY = "hidden"
        } else b.dom.style.overflowX = c
    }
}

pui.widgets.add({
    name: "output field", rf: true, propertySetters: {
        "field type": function (b) {
            ud(b, b.evalProperty("value"), b.evalProperty("label for"))
        }, value: function (b) {
            if (b.design || b.properties.value != "script: value") ud(b, b.value, b.evalProperty("label for"))
        }, "overflow x": function (b) {
            if (Q == "dspf" && b.design && pui.f(b.properties.value) && (b.value == "" || b.value == null)) {
                b.properties["overflow x"] = "";
                b.dom.style.overflowX = "hidden";
                return false
            }
        }
    }
});
pui.widgets.add({
    name: "password field", tag: "input", inputType: "password", newId: "Password", propertySetters: {
        "field type": function (b) {
            b.dom.value = b.evalProperty("value");
            if (!b.design) {
                if (pui.pb && !pui.oi) {
                    gc(b.dom, "focus", function () {
                        Tb("ipadKeyboard").style.display = ""
                    });
                    gc(b.dom, "blur", function () {
                        Tb("ipadKeyboard").style.display = "none"
                    })
                }
                if (b.dom.getAttribute("autocomplete") == null && (Q != "genie" || !pui.J.config.zk)) {
                    b.dom.setAttribute("autocomplete", "off");
                    Q == "dspf" && b.dom.setAttribute("name", pui.yg())
                }
            }
        },
        value: function (b) {
            b.dom.value = b.value
        }, "browser auto complete": function (b) {
            if (!b.design) {
                b.dom.setAttribute("autocomplete", b.value);
                if (Q == "dspf") b.value == "off" ? b.dom.setAttribute("name", pui.yg()) : b.dom.removeAttribute("name")
            }
        }
    }
});
pui.widgets.add({
    name: "radio button",
    tag: "input",
    inputType: "radio",
    bq: "label",
    resizable: false,
    defaults: {label: "Radio Button"},
    propertySetters: {
        "field type": function (b) {
            if (b.design && !pui.is_quirksmode) if (!pui.is_old_ie) b.dom.style.margin = "2px";
            if (!b.design) {
                var a = b.evalProperty("label");
                if (a != "") {
                    if (b.properties.left != null) b.dom.style.left = b.properties.left;
                    if (b.properties.top != null) b.dom.style.top = b.properties.top;
                    Yb(b.dom, a)
                }
                if (Q == "dspf") {
                    var c = b.evalProperty("value");
                    a = b.evalProperty("radio button group");
                    if (c != null && a != null) if (c == a || !isNaN(Number(c)) && !isNaN(Number(a)) && Number(c) == Number(a)) {
                        if (pui.is_old_ie) b.dom.name = "radio";
                        b.dom.checked = true
                    }
                    gc(b.dom, "click", function () {
                        if (b.dom.readOnly) if (b.dom.checked == false) b.dom.checked = true; else if (b.dom.checked == true) b.dom.checked = false
                    })
                } else if (Q == "genie") {
                    a = b.evalProperty("related field");
                    var d = false;
                    if (b.dom.S) c = b.dom.S; else if (a != "") if (b.dom.NI) {
                        if (b.dom.NI.S) c = related.S
                    } else d = true;
                    if (c) if (c.bypass) {
                        b.dom.disabled = true;
                        c = c.attr;
                        d = c == "27" || c == "2F" ||
                            c == "37" || c == "3F"
                    }
                    if (d) {
                        b.dom.style.visibility = "hidden";
                        if (b.dom.ng) b.dom.ng.style.visibility = "hidden"
                    }
                }
            }
        }, visibility: function (b) {
            if (!b.design && b.dom.ng) b.dom.ng.style.visibility = b.value == "hidden" ? "hidden" : ""
        }, "css class": function (b) {
            if (b.design && b.c.label) {
                b.c.label.className = "label-for";
                var a = Zb(b.value.split(" ")[0]);
                a != "" && pui.ya(b.c.label, "label-for-" + a)
            }
        }
    }
});
pui.ru = function (b, a, c) {
    b = pui.Ta(b);
    var d = pui.Ta(a);
    c.choices = {};
    for (var e = 0; e < b.length; e++) {
        var f = b[e], h = d[e];
        if (h == null || a == "") h = f;
        if (c.tagName == "SELECT") {
            var g = new Option(f, h);
            c.options[c.options.length] = g
        }
        c.choices[h] = f
    }
};
pui.Kl = function (b, a) {
    if (a.S != null && a.S.shift != null) if (a.S.shift == "2" || a.S.shift == "3" || a.S.shift == "5" || a.S.shift == "7") {
        b = Zb(b);
        a.pui.properties.value = b
    }
    if (a.tagName == "INPUT") {
        a.value = a.choices != null && a.choices[b] != null ? a.choices[b] : b;
        a.pui.properties.value = b
    } else {
        var c = false;
        if (a.getAttribute("multiple") != null) c = true;
        if (!c) {
            a.value = b;
            a.pui.properties.value = b
        }
        if (c) {
            c = b.split(",");
            for (var d = 0; d < a.options.length; d++) for (var e = a.options[d], f = 0; f < c.length; f++) if (c[f] == e.value) {
                e.selected = true;
                break
            }
        }
    }
};
pui.widgets.add({
    name: "select box", tag: "select", menuName: ["Dropdown Box", "List Box"], propertySetters: {
        "field type": function (b) {
            if (b.dom.tagName == "SELECT") b.dom.options.length = 0;
            b.dom.choices = {};
            var a = b.evalProperty("choices url");
            if (a != "" && !b.design) {
                var c = new pui.Ajax(pui.ej(a));
                c.async = true;
                c.suppressAlert = true;
                c.onready = function () {
                    if (b.dom.tagName == "SELECT") b.dom.options.length = 0;
                    b.dom.choices = {};
                    var i = Vb(c, "Generate Dropdown Box Options");
                    if (i) {
                        for (var r = 0; r < i.length; r++) {
                            var k = i[r];
                            if (b.dom.tagName ==
                                "SELECT") try {
                                if (k != null && k.nodeType != "OPTION" && k.text != null && k.value != null) k = new Option(k.text, k.value);
                                b.dom.add(k)
                            } catch (q) {
                                b.dom.add(k, null)
                            }
                            b.dom.choices[k.value] = k.text
                        }
                        pui.Kl(b.evalProperty("value"), b.dom)
                    }
                };
                if (b.dom.tagName == "SELECT") {
                    b.dom.options.length = 0;
                    b.dom.options[0] = new Option(pui.getLanguageText("runtimeMsg", "loading"), "")
                }
                c.send()
            } else if (b.evalProperty("choices database file") != "") {
                if (!b.design) {
                    var d = b.evalProperty("max choices"), e = b.evalProperty("choices database file"),
                        f = pui.Ok(b.evalProperty("choice options field")),
                        h = b.evalProperty("choice values field");
                    if (h == null || h == "") h = f[0];
                    a = b.evalProperty("choices selection criteria");
                    var g = pui.Ok(b.evalProperty("order by"));
                    if (g[0] != "") for (var l = 0; l < g.length; l++) {
                        var n = g[l];
                        pui.ic(f, n) == -1 && f.push(n)
                    }
                    h = f[0] + ", " + h;
                    f.splice(0, 1);
                    if (f.length > 0) h += ", " + f.join();
                    e = "SELECT DISTINCT " + h + " FROM " + e;
                    if (a && a != "") e += " WHERE " + a;
                    if (g[0] != "") e += " ORDER BY " + g.join();
                    a = cc("PUI0009103.PGM");
                    var o = new pui.Ajax(a);
                    o.method = "post";
                    o.async = true;
                    o.suppressAlert = true;
                    if (Q == "genie") o.postData =
                        "AUTH=" + GENIE_AUTH;
                    if (Q == "dspf") o.postData = "AUTH=" + pui.appJob.auth;
                    if (pui.secLevel > 0) {
                        o.postData += "&q=" + encodeURIComponent(pui.jg(b.dom));
                        a = pui.ig(b.properties);
                        if (a != "") o.postData += "&" + a
                    } else o.postData += "&q=" + pui.ad.ci(e);
                    if (pui.isCloud) o.postData += "&workspace_id=" + pui.cloud.ws.id;
                    if (d != null && d != "") o.postData += "&maxcount=" + encodeURIComponent(d);
                    if (pui["read db driven data as ebcdic"] !== true) o.postData += "&UTF8=Y";
                    o.onsuccess = function () {
                        var i = b.evalProperty("ondbload");
                        if (typeof i != "string" || i == "") i =
                            null;
                        var r = Vb(o, "Generate Dropdown Box Options");
                        if (b.dom.tagName == "SELECT") b.dom.options.length = 0;
                        if (r) {
                            if (b.properties["blank option"] == "true") {
                                var k = b.evalProperty("blank option label");
                                if (k == null) k = "";
                                if (b.dom.tagName == "SELECT") b.dom.options[0] = new Option(k, "")
                            }
                            for (k = 0; k < r.length; k++) {
                                var q = r[k];
                                if (b.dom.tagName == "SELECT") try {
                                    if (q != null && q.nodeType != "OPTION" && q.text != null && q.value != null) q = new Option(q.text, q.value);
                                    b.dom.add(q)
                                } catch (s) {
                                    b.dom.add(q, null)
                                }
                                b.dom.choices[q.value] = q.text
                            }
                            pui.Kl(b.evalProperty("value"),
                                b.dom);
                            i && pui.di(i, true, b.dom.id)
                        } else i && pui.di(i, false, b.dom.id)
                    };
                    if (b.dom.tagName == "SELECT") {
                        b.dom.options.length = 0;
                        b.dom.options[0] = new Option(pui.getLanguageText("runtimeMsg", "loading"), "")
                    }
                    o.send()
                }
            } else {
                d = b.evalProperty("choices");
                a = b.evalProperty("choice values");
                pui.ru(d, a, b.dom);
                pui.Kl(b.evalProperty("value"), b.dom)
            }
        }, value: function (b) {
            pui.Kl(b.value, b.dom)
        }, choices: function (b) {
            var a = b.evalProperty("choices database file"), c = b.evalProperty("choices url");
            if (!(a != "" || c != "")) {
                if (b.dom.tagName ==
                    "SELECT") b.dom.options.length = 0;
                a = b.value;
                c = b.evalProperty("choice values");
                pui.ru(a, c, b.dom);
                pui.Kl(b.evalProperty("value"), b.dom)
            }
        }, "choice values": function (b) {
            var a = b.evalProperty("choices database file"), c = b.evalProperty("choices url");
            if (!(a != "" || c != "")) {
                if (b.dom.tagName == "SELECT") b.dom.options.length = 0;
                a = b.evalProperty("choices");
                pui.ru(a, b.value, b.dom);
                pui.Kl(b.evalProperty("value"), b.dom)
            }
        }, "select box height": function (b) {
            if (b.design && pui.is_old_ie && pui.ie_mode == 6) {
                var a = rc();
                uc(a["field type"],
                    b.properties, b.dom, "select box", b.design, b.c, b.pc)
            }
        }
    }
});
pui.Slider = function () {
    function b() {
        clearTimeout(f);
        f = setTimeout(a.H, 100)
    }

    this.h = null;
    this.orientation = "horizontal";
    this.value = 2;
    this.minValue = 0;
    this.maxValue = 10;
    this.ri = 1;
    this.disabled = this.readOnly = this.design = false;
    var a = this, c, d, e, f = null, h = pui.is_touch && !pui.is_mouse_capable || pui.pb;
    this.init = function () {
        function g(l) {
            function n(u) {
                var w = Kc(u) - q, v = Jc(u) - k, E = a.maxValue - a.minValue, y = 0;
                y = i ? c.clientHeight : c.clientWidth;
                var F = 0;
                F = i ? c.offsetTop : c.offsetLeft;
                var D = 0;
                D = i ? parseInt(d.style.height) / 2 : parseInt(d.style.width) /
                    2;
                w = E * (((i ? t + w : s + v) - F + D) / y) + a.minValue;
                if (w < a.minValue) w = a.minValue;
                if (w > a.maxValue) w = a.maxValue;
                w = a.lv(w);
                if (w != a.value) {
                    a.setValue(w);
                    a.h.modified = true;
                    pui.Kh(a.h);
                    if (Q == "genie" && a.h.S != null && a.h.S.idx != null) pui.response[a.h.S.idx] = a.h;
                    !a.design && typeof a.h.onchange == "function" && a.h.onchange(u)
                }
                r && u.preventDefault()
            }

            function o() {
                if (r) {
                    ic(document, "touchmove", n);
                    ic(document, "touchend", o)
                } else {
                    ic(document, "mousemove", n);
                    ic(document, "mouseup", o)
                }
            }

            if (!a.readOnly) if (!a.disabled) {
                var i = a.orientation ==
                    "vertical", r = false;
                if (l != null && l.touches != null) {
                    if (l.touches.length != 1) return;
                    r = true
                }
                var k = Jc(l), q = Kc(l), s = parseInt(d.style.left), t = parseInt(d.style.top);
                if (r) {
                    gc(document, "touchmove", n);
                    gc(document, "touchend", o)
                } else {
                    gc(document, "mousemove", n);
                    gc(document, "mouseup", o)
                }
                yb(l);
                return false
            }
        }

        c = document.createElement("div");
        c.style.backgroundColor = "#D7D7D7";
        c.style.position = "absolute";
        c.style.fontSize = "0px";
        c.style.border = "1px solid #898989";
        if (!a.design && Q == "genie") {
            e = ec("input", a.h.name);
            e.type = "hidden";
            document.forms.main.appendChild(e)
        }
        d = document.createElement("div");
        d.style.border = "1px solid #94c9ff";
        d.style.backgroundColor = "#d7f0ff";
        d.style.position = "absolute";
        d.style.fontSize = "0px";
        if (h && !a.design) {
            d.style.MozBorderRadius = "15px";
            d.style.borderRadius = "15px";
            d.style.WebkitBorderRadius = "15px"
        } else {
            d.style.MozBorderRadius = "5px";
            d.style.borderRadius = "5px";
            d.style.WebkitBorderRadius = "5px"
        }
        a.h.onselectstart = za(false);
        c.onselectstart = za(false);
        d.onselectstart = za(false);
        gc(d, "mousedown", g);
        gc(d, "touchstart",
            g);
        gc(window, "resize", b);
        a.h.appendChild(c);
        a.h.appendChild(d);
        a.H();
        pui.Eo.push(a)
    };
    this.lv = function (g, l) {
        var n = a.ri / 2;
        if (l == true) n = 0;
        n = parseInt((g + a.minValue + n) / a.ri) * a.ri - a.minValue;
        return n = Math.round(n * 1E6) / 1E6
    };
    this.H = function () {
        if (a.orientation == "vertical") {
            c.style.left = "6px";
            c.style.top = "10px";
            c.style.width = "5px";
            c.style.borderRight = "1px solid #B7B7B7";
            if (pui.da(a.h.style.height)) {
                var g = pui.round((1 - (c.offsetTop + 14) / a.h.clientHeight) * 100, 1);
                if (isNaN(g) || g < 0) g = 0;
                c.style.height = g + "%"
            } else {
                g =
                    parseInt(a.h.style.height, 10);
                if (isNaN(g)) g = a.h.clientHeight;
                g -= 24;
                if (g < 0) g = 0;
                c.style.height = g + "px"
            }
        } else {
            c.style.left = "10px";
            c.style.top = "6px";
            c.style.height = "5px";
            c.style.borderBottom = "1px solid #B7B7B7";
            if (pui.da(a.h.style.width)) {
                g = pui.round((1 - (c.offsetLeft + 14) / a.h.clientWidth) * 100, 1);
                if (isNaN(g) || g < 0) g = 0;
                c.style.width = g + "%"
            } else {
                g = parseInt(a.h.style.width, 10);
                if (isNaN(g)) g = a.h.clientWidth;
                g -= 24;
                if (g < 0) g = 0;
                c.style.width = g + "px"
            }
        }
        if (a.orientation == "vertical") if (h && !a.design) {
            d.style.height = "32px";
            d.style.width = "37px";
            d.style.left = "-11px"
        } else {
            d.style.height = "10px";
            d.style.width = "15px";
            d.style.left = "1px"
        } else if (h && !a.design) {
            d.style.height = "37px";
            d.style.width = "32px";
            d.style.top = "-11px"
        } else {
            d.style.height = "15px";
            d.style.width = "10px";
            d.style.top = "1px"
        }
        a.setValue(a.value)
    };
    this.cw = function () {
        if (isNaN(a.ri)) a.ri = 1;
        if (a.ri <= 0) a.ri = 1;
        if (isNaN(a.minValue)) a.minValue = 0;
        if (isNaN(a.maxValue)) a.maxValue = 10;
        if (isNaN(a.value)) a.value = 0;
        if (a.value < a.minValue) a.value = a.minValue;
        if (a.value > a.maxValue) a.value =
            a.maxValue;
        a.value = a.lv(a.value);
        a.h.value = a.value;
        if (!a.design && Q == "genie") e.value = a.value
    };
    this.setValue = function (g) {
        g = Number(g);
        if (isNaN(g)) g = a.minValue;
        if (g < a.minValue) g = a.minValue;
        if (g > a.maxValue) g = a.lv(a.maxValue, true);
        var l = a.maxValue - a.minValue, n = a.orientation == "vertical", o = 0, i = 0;
        o = n ? c.clientHeight : c.clientWidth;
        i = n ? parseInt(d.style.height) / 2 : parseInt(d.style.width) / 2;
        l = parseInt(o / l * (g - a.minValue) - i) + 10;
        if (isNaN(l)) l = 0;
        if (n) d.style.top = l + "px"; else d.style.left = l + "px";
        a.value = g;
        a.h.value = g;
        if (!a.design && Q == "genie") e.value = a.value
    };
    this.destroy = function () {
        ic(window, "resize", b);
        if (a != null) a = e = d = c = a.h = null
    }
};
pui.widgets.add({
    name: "slider", defaults: {width: "150px", height: "20px"}, propertySetters: {
        "field type": function (b) {
            if (b.dom.Ha == null) b.dom.Ha = new pui.Slider;
            b.dom.Ha.h = b.dom;
            b.dom.Ha.design = b.design;
            b.dom.Ha.value = b.evalProperty("value");
            b.dom.Ha.init()
        }, value: function (b) {
            b.dom.Ha != null && b.dom.Ha.setValue(b.value)
        }, orientation: function (b) {
            if (b.dom.Ha != null) {
                b.dom.Ha.orientation = b.value;
                b.dom.Ha.H()
            }
        }, "min value": function (b) {
            if (!b.design && b.dom.Ha != null) {
                b.dom.Ha.minValue = Number(b.value);
                b.dom.Ha.maxValue =
                    Number(b.evalProperty("min value"));
                b.dom.Ha.value = Number(b.evalProperty("value"));
                b.dom.Ha.cw();
                b.dom.Ha.H()
            }
        }, "max value": function (b) {
            if (!b.design && b.dom.Ha != null) {
                b.dom.Ha.maxValue = Number(b.value);
                b.dom.Ha.minValue = Number(b.evalProperty("min value"));
                b.dom.Ha.value = Number(b.evalProperty("value"));
                b.dom.Ha.cw();
                b.dom.Ha.H()
            }
        }, "increment value": function (b) {
            if (!b.design && b.dom.Ha != null) {
                b.dom.Ha.ri = Number(b.value);
                b.dom.Ha.value = Number(b.evalProperty("value"));
                b.dom.Ha.cw();
                b.dom.Ha.H()
            }
        }, "read only": function (b) {
            if (b.dom.Ha !=
                null && !b.design) b.dom.Ha.readOnly = b.value == true || b.value == "true" ? true : false
        }, disabled: function (b) {
            if (b.dom.Ha != null && !b.design) b.dom.Ha.disabled = b.value == true || b.value == "true" ? true : false
        }, width: function (b) {
            b.dom.style.width = b.value;
            b.dom.Ha != null && b.dom.Ha.H()
        }, height: function (b) {
            b.dom.style.height = b.value;
            b.dom.Ha != null && b.dom.Ha.H()
        }
    }
});
pui.OC = function () {
    function b() {
        var o = a.b.offsetWidth;
        if (o == 0) {
            o = parseInt(a.b.style.width);
            if (isNaN(o)) o = 0;
            o += 2
        }
        return onPoint = a.Kr ? parseInt((o + 3) / 2) : o - 6
    }

    this.b = null;
    this.readOnly = this.disabled = false;
    this.Kr = this.mg = true;
    this.designMode = false;
    var a = this, c = document.createElement("label"), d = document.createElement("span"),
        e = document.createElement("label"), f = document.createElement("span"), h = document.createElement("div"),
        g = document.createElement("div"), l = document.createElement("div"), n = false;
    this.init =
        function () {
            function o(i) {
                function r(w) {
                    n = true;
                    var v = u + Jc(w) - t;
                    if (v < 0) v = 0;
                    if (v > q) v = q;
                    a.Ru(v);
                    s && w.preventDefault()
                }

                function k(w) {
                    if (s) {
                        ic(document, "touchmove", r);
                        ic(document, "touchend", k)
                    } else {
                        ic(document, "mousemove", r);
                        ic(document, "mouseup", k)
                    }
                    var v = Math.abs(u - parseInt(h.style.left)), E = a.b.offsetWidth;
                    if (E == 0) {
                        E = parseInt(a.b.style.width);
                        if (isNaN(E)) E = 0;
                        E += 2
                    }
                    E = E / 2;
                    if (a.Kr) E = E / 2 - 4;
                    if (n) {
                        if (v <= 5 || v >= E) {
                            a.toggle(true);
                            a.ko(w)
                        } else a.refresh(true);
                        setTimeout(function () {
                            n = false
                        }, 0)
                    }
                }

                if (!a.readOnly) if (!a.disabled) if (!a.designMode) {
                    var q =
                        b(), s = false;
                    if (i != null && i.touches != null) {
                        if (i.touches.length != 1) return;
                        s = true
                    }
                    var t = Jc(i), u = parseInt(h.style.left);
                    if (s) {
                        gc(document, "touchmove", r);
                        gc(document, "touchend", k)
                    } else {
                        gc(document, "mousemove", r);
                        gc(document, "mouseup", k)
                    }
                    yb(i);
                    return false
                }
            }

            c.className = "off-label";
            c.style.background = "url('" + pui.normalizeURL("/profoundui/proddata/images/onoff/off.png") + "') no-repeat right 0";
            d.innerHTML = "OFF";
            c.appendChild(d);
            e.className = "on-label";
            e.style.background = "url('" + pui.normalizeURL("/profoundui/proddata/images/onoff/on.png") +
                "') no-repeat";
            f.innerHTML = "ON";
            e.appendChild(f);
            h.className = "onoff-handle-left";
            h.style.background = "url('" + pui.normalizeURL("/profoundui/proddata/images/onoff/handle_left.png") + "') no-repeat";
            g.className = "onoff-handle-right";
            g.style.background = "url('" + pui.normalizeURL("/profoundui/proddata/images/onoff/handle_right.png") + "') no-repeat right 0";
            l.className = "onoff-handle-center";
            l.style.background = "url('" + pui.normalizeURL("/profoundui/proddata/images/onoff/handle_center.png") + "')";
            g.appendChild(l);
            h.appendChild(g);
            pui.ya(a.b, "onoff-switch");
            a.b.appendChild(c);
            a.b.appendChild(e);
            a.b.appendChild(h);
            a.b.onclick = function (i) {
                if (!a.readOnly) if (!a.disabled) if (!a.designMode) if (!n) {
                    a.toggle(true);
                    a.ko(i)
                }
            };
            gc(a.b, "mousedown", o);
            gc(a.b, "touchstart", o);
            a.size()
        };
    this.size = function () {
        var o = a.b.offsetWidth;
        if (o == 0) {
            o = parseInt(a.b.style.width);
            if (isNaN(o)) o = 0;
            o += 2
        }
        offLabelWidth = o - 5;
        if (offLabelWidth < 0) offLabelWidth = 0;
        c.style.width = offLabelWidth + "px";
        a.vB(a.Kr)
    };
    this.vB = function (o) {
        if (o) {
            var i = a.b.offsetWidth;
            if (i == 0) {
                i = parseInt(a.b.style.width);
                if (isNaN(i)) i = 0;
                i += 2
            }
            i = parseInt((i - 14) / 2);
            if (i < 0) i = 0;
            h.style.width = i + "px"
        } else h.style.width = "";
        a.Kr = o;
        a.refresh()
    };
    this.Ru = function (o, i) {
        for (var r = ["transition", "MozTransition", "WebkitTransition", "msTransition", "OTransition"], k = " 0.3s ease", q = 0; q < r.length; q++) {
            var s = r[q];
            if (i) {
                k = " 0.2s ease";
                e.style[s] = "width" + k;
                f.style[s] = "margin-left" + k;
                d.style[s] = "margin-right" + k;
                h.style[s] = "left" + k
            } else {
                e.style[s] = "";
                f.style[s] = "";
                d.style[s] = "";
                h.style[s] = ""
            }
        }
        r = b();
        e.style.width =
            o + 4 + "px";
        f.style.marginLeft = o - r + "px";
        d.style.marginRight = -o + "px";
        h.style.left = o + "px"
    };
    this.RJ = function (o) {
        var i = b();
        a.Ru(i, o);
        a.mg = true
    };
    this.QJ = function (o) {
        a.Ru(0, o);
        a.mg = false
    };
    this.set = function (o, i) {
        o ? a.RJ(i) : a.QJ(i)
    };
    this.toggle = function (o) {
        a.set(!a.mg, o)
    };
    this.refresh = function (o) {
        a.set(a.mg, o)
    };
    this.WE = function (o) {
        f.innerHTML = o
    };
    this.VE = function (o) {
        d.innerHTML = o
    };
    this.disable = function () {
        a.disabled = true;
        pui.ya(a.b, "onoff-switch-disabled")
    };
    this.enable = function () {
        a.disabled = false;
        pui.La(a.b, "onoff-switch-disabled")
    };
    this.KJ = function (o, i) {
        var r = o.split(" "), k = o;
        if (r.length == 2) k = r[0] + r[1].substr(0, 1).toUpperCase() + r[1].substr(1);
        f.style[k] = i;
        d.style[k] = i
    };
    this.PJ = function (o) {
        a.b.style.cursor = o;
        e.style.cursor = o;
        c.style.cursor = o;
        h.style.cursor = o
    };
    this.ko = function (o) {
        a.b.modified = true;
        pui.Kh(a.b);
        if (Q == "genie" && a.b.S != null && a.b.S.idx != null) pui.response[a.b.S.idx] = a.b;
        !a.designMode && typeof a.b.onchange == "function" && a.b.onchange(o)
    }
};
pui.widgets.add({
    name: "on off switch", defaults: {width: "100px", height: "27px"}, propertySetters: {
        "field type": function (b) {
            if (b.dom.aa == null) b.dom.aa = new pui.OC;
            b.dom.style.border = "0px none";
            b.dom.aa.b = b.dom;
            b.dom.aa.designMode = b.design;
            b.dom.aa.init();
            b.dom.aa.set(b.evalProperty("value") == b.evalProperty("on value"));
            if (b.design) {
                b.dom.aa.PJ("default");
                var a = rc(), c;
                if (b.properties["on text"]) {
                    c = a["on text"];
                    uc(c, b.properties, b.c.dom, b.properties["on text"], true, b.c)
                }
                if (b.properties["off text"]) {
                    c = a["off text"];
                    uc(c, b.properties, b.c.dom, b.properties["off text"], true, b.c)
                }
            } else {
                b.dom.aa.gl = b.evalProperty("on value");
                b.dom.aa.fl = b.evalProperty("off value")
            }
            b.dom.sizeMe = function () {
                b.dom.aa.size()
            }
        }, value: function (b) {
            b.dom.aa != null && b.dom.aa.set(b.value == b.evalProperty("on value"))
        }, "on value": function (b) {
            b.dom.aa != null && b.dom.aa.set(b.evalProperty("value") == b.value)
        }, "read only": function (b) {
            if (b.dom.aa != null) b.dom.aa.readOnly = b.value == true || b.value == "true"
        }, disabled: function (b) {
            if (b.dom.aa != null) b.value == true ||
            b.value == "true" ? b.dom.aa.disable() : b.dom.aa.enable()
        }, "wide handle": function (b) {
            b.dom.aa != null && b.dom.aa.vB(b.value !== false && b.value !== "false")
        }, "on text": function (b) {
            b.dom.aa != null && b.dom.aa.WE(b.value)
        }, "off text": function (b) {
            b.dom.aa != null && b.dom.aa.VE(b.value)
        }, width: function (b) {
            if (b.dom.aa != null) {
                b.dom.style.width = b.value;
                b.dom.aa.size()
            }
        }, height: function (b) {
            if (b.dom.aa != null) {
                b.dom.style.height = b.value;
                b.dom.aa.size()
            }
        }
    }, MG: function (b) {
        b.propertyName.substr(0, 9) == "css class" && b.dom.aa != null &&
        pui.ya(b.dom, "onoff-switch");
        switch (b.propertyName) {
            case "color":
            case "font family":
            case "font size":
            case "font style":
            case "font variant":
            case "font weight":
            case "letter spacing":
            case "text align":
            case "text decoration":
            case "text transform":
            case "word spacing":
                b.dom.aa != null && b.dom.aa.KJ(b.propertyName, b.value);
                break
        }
    }
});
pui.bs = function (b, a, c, d, e) {
    var f = this, h = document.createElement("img"), g = document.createElement("img");
    if (a != null && a != "") {
        a = Number(a);
        if (isNaN(a)) a = null
    } else a = null;
    if (c != null && c != "") {
        c = Number(c);
        if (isNaN(c)) c = null
    } else c = null;
    if (d != null) {
        d = Number(d);
        if (isNaN(d)) d = 1;
        if (d == 0) d = 1
    } else d = 1;
    h.style.position = "absolute";
    h.className = "input";
    h.style.borderStyle = "none";
    h.style.backgroundColor = "transparent";
    h.src = pui.normalizeURL("/profoundui/proddata/images/up.gif");
    h.style.cursor = "pointer";
    h.onclick = function () {
        f.ur(d)
    };
    if (pui.is_old_ie) h.ondblclick = function () {
        f.ur(d)
    };
    g.style.position = "absolute";
    g.className = "input";
    g.style.borderStyle = "none";
    g.style.backgroundColor = "transparent";
    g.src = pui.normalizeURL("/profoundui/proddata/images/down.gif");
    g.style.cursor = "pointer";
    g.onclick = function () {
        f.ur(-d)
    };
    if (pui.is_old_ie) g.ondblclick = function () {
        f.ur(-d)
    };
    if (b.pui == null || b.pui.properties == null || b.pui.properties.visibility == null || b.pui.properties.visibility == "") if (Q == "genie" && b.S != null && b.S.attr != null) {
        var l = b.S.attr;
        if (l ==
            "27" || l == "2F" || l == "37" || l == "3F") f.hide()
    }
    if (e) {
        b.style.paddingRight = "16px";
        b.style.boxSizing = "border-box";
        b.style.MozBoxSizing = "border-box";
        b.style.WebkitBoxSizing = "border-box";
        if (pui.is_old_ie && pui.ie_mode == 7 && (typeof (document.documentMode == 7) == "undefined" || document.documentMode == 7)) {
            e = b.offsetWidth;
            e -= 36;
            if (e < 16) e = 16;
            b.style.width = e + "px"
        }
    }
    b.cg = [h, g];
    if (b.parentNode != null) {
        b.parentNode.appendChild(h);
        b.parentNode.appendChild(g)
    }
    this.kl = function () {
        var n;
        n = b.style.left;
        n = n != null && typeof n == "string" &&
        n.length >= 3 && n.substr(n.length - 2, 2) == "px" ? parseInt(n) : b.offsetLeft;
        if (isNaN(n)) n = 0;
        var o;
        o = b.style.top;
        o = o != null && typeof o == "string" && o.length >= 3 && o.substr(o.length - 2, 2) == "px" ? parseInt(o) : b.offsetTop;
        if (isNaN(o)) o = 0;
        h.style.left = n + b.offsetWidth - 15 + "px";
        o += parseInt((b.offsetHeight - 18) / 2);
        if (pui.is_quirksmode) o -= 1;
        h.style.top = o + "px";
        h.style.zIndex = b.style.zIndex;
        h.style.visibility = b.style.visibility;
        n = b.style.left;
        n = n != null && typeof n == "string" && n.length >= 3 && n.substr(n.length - 2, 2) == "px" ? parseInt(n) :
            b.offsetLeft;
        if (isNaN(n)) n = 0;
        o = b.style.top;
        o = o != null && typeof o == "string" && o.length >= 3 && o.substr(o.length - 2, 2) == "px" ? parseInt(o) : b.offsetTop;
        if (isNaN(o)) o = 0;
        g.style.left = n + b.offsetWidth - 15 + "px";
        o += 9;
        o += parseInt((b.offsetHeight - 18) / 2);
        if (b.offsetHeight % 2 == 1) if (b.offsetHeight < 18) o -= 1; else o += 1;
        g.style.top = o + "px";
        g.style.zIndex = b.style.zIndex;
        g.style.visibility = b.style.visibility
    };
    f.kl();
    this.hide = function () {
        h.style.visibility = "hidden";
        g.style.visibility = "hidden"
    };
    this.show = function () {
        h.style.visibility =
            "";
        g.style.visibility = ""
    };
    this.ur = function (n) {
        if (!b.disabled) if (!b.readOnly) {
            var o = Number(b.value);
            if (isNaN(o)) o = 0;
            o += n;
            o = Math.round(o * 1E4) / 1E4;
            if (a != null && o < a) o = a;
            if (c != null && o > c) o = c;
            var i = Number(b.getAttribute("maxLength"));
            if (i != null && !isNaN(i) && i > 0) {
                if (i == 1 && o < 0) o = 0;
                if (String(o).length > i) return
            }
            i = b.onspin;
            if (i != null) {
                n = i(b.value, n, b, o);
                if (typeof n == "string" || typeof n == "number") o = n
            }
            b.value = o;
            b.modified = true;
            pui.Kh(b);
            if (Q == "genie" && b.S != null && b.S.idx != null) pui.response[b.S.idx] = b;
            pui.Xh(b)
        }
    };
    this.bB =
        function (n) {
            h.className = "input spinner-up-arrow-" + n;
            g.className = "input spinner-down-arrow-" + n
        }
};
pui.widgets.add({
    name: "spinner",
    tag: "input",
    Bq: pui.normalizeURL("/profoundui/proddata/images/up.gif"),
    Qu: pui.normalizeURL("/profoundui/proddata/images/down.gif"),
    gz: "input spinner-up-arrow-input",
    cH: "input spinner-down-arrow-input",
    defaults: {"css class": "input"},
    propertySetters: {
        "field type": function (b) {
            b.dom.value = b.evalProperty("value");
            if (b.design) b.dom.sizeMe = function () {
                var a = b.c;
                a.Pc();
                a.Ib()
            }; else {
                setTimeout(function () {
                    b.dom.Ic = new pui.bs(b.dom, b.evalProperty("min value"), b.evalProperty("max value"),
                        b.evalProperty("increment value"), !b.design);
                    b.dom.sizeMe = function () {
                        b.dom.Ic.kl()
                    }
                }, 1);
                if (b.dom.getAttribute("autocomplete") == null && (Q != "genie" || !pui.J.config.zk)) {
                    b.dom.setAttribute("autocomplete", "off");
                    Q == "dspf" && b.dom.setAttribute("name", pui.yg())
                }
            }
            if (b.design) b.dom.readOnly = true
        }, value: function (b) {
            b.dom.value = b.value
        }, visibility: function (b) {
            if (!b.design && b.dom.Ic) b.value == "hidden" ? b.dom.Ic.hide() : b.dom.Ic.show()
        }, "css class": function (b) {
            var a = b.value.split(" ").shift();
            if (b.design) {
                var c = b.c.fb,
                    d = b.c.ob, e = "input spinner-up-arrow-" + a, f = "input spinner-down-arrow-" + a;
                b.dom["icon1 class"] = e;
                b.dom["icon2 class"] = f;
                c.className = e;
                d.className = f
            } else b.dom.Ic ? b.dom.Ic.bB(a) : setTimeout(function () {
                b.dom.Ic.bB(a)
            }, 1)
        }, "browser auto complete": function (b) {
            if (!b.design) {
                b.dom.setAttribute("autocomplete", b.value);
                if (Q == "dspf") b.value == "off" ? b.dom.setAttribute("name", pui.yg()) : b.dom.removeAttribute("name")
            }
        }
    }
});
pui.widgets.buttonStyles = {
    "Ice Blue": {
        left: 5,
        right: 5,
        top: 5,
        bottom: 5,
        hasOverState: true,
        hasClickState: true,
        editBackgroundColor: "#cee7ff"
    },
    Apricot: {
        left: 5,
        right: 5,
        top: 5,
        bottom: 5,
        hasOverState: true,
        hasClickState: true,
        editBackgroundColor: "#ffe7ce"
    },
    "Royal Blue": {
        left: 2,
        right: 2,
        top: 2,
        bottom: 2,
        hasOverState: false,
        hasClickState: false,
        textColor: "#000000",
        editBackgroundColor: "#a5c0ff"
    },
    "Bright Gold": {
        left: 2,
        right: 2,
        top: 2,
        bottom: 2,
        hasOverState: false,
        hasClickState: false,
        textColor: "#000000",
        editBackgroundColor: "#ffd880"
    },
    Glass: {
        left: 6,
        right: 6,
        top: 11,
        bottom: 11,
        hasOverState: false,
        hasClickState: false,
        editBackgroundColor: "#c9dff3"
    },
    "Black Marble": {
        left: 5,
        right: 5,
        top: 5,
        bottom: 5,
        hasOverState: true,
        hasClickState: true,
        clickStateIsNormalState: true,
        textColor: "#ffffff",
        editBackgroundColor: "#666666"
    },
    "Classic Style": {
        left: 5,
        right: 5,
        top: 5,
        bottom: 5,
        hasOverState: true,
        hasClickState: false,
        editBackgroundColor: "#d8dbd8"
    },
    Cherry: {
        left: 5,
        right: 5,
        top: 5,
        bottom: 5,
        hasOverState: true,
        hasClickState: false,
        editBackgroundColor: "#e3c9ec"
    },
    Simplistic: {
        left: 5,
        right: 5, top: 5, bottom: 5, hasOverState: true, hasClickState: true, editBackgroundColor: "#f6f2ed"
    },
    "Silver Accent": {
        left: 5,
        right: 5,
        top: 5,
        bottom: 5,
        hasOverState: true,
        hasClickState: true,
        editBackgroundColor: "#f7f7ff"
    },
    Caramel: {
        left: 5,
        right: 5,
        top: 10,
        bottom: 8,
        hasOverState: true,
        hasClickState: true,
        clickStateIsNormalState: true,
        textColor: "#ffffff",
        hiColor: "#000000",
        editBackgroundColor: "#c0a254"
    },
    "Lime Green": {
        left: 5,
        right: 5,
        top: 10,
        bottom: 8,
        hasOverState: true,
        hasClickState: true,
        clickStateIsNormalState: true,
        textColor: "#ffffff",
        hiColor: "#000000",
        editBackgroundColor: "#54c07e"
    },
    "Raspberry Red": {
        left: 5,
        right: 5,
        top: 10,
        bottom: 8,
        hasOverState: true,
        hasClickState: true,
        clickStateIsNormalState: true,
        textColor: "#ffffff",
        hiColor: "#000000",
        editBackgroundColor: "#c05469"
    },
    "Steel Blue": {
        left: 5,
        right: 5,
        top: 10,
        bottom: 8,
        hasOverState: true,
        hasClickState: true,
        clickStateIsNormalState: true,
        textColor: "#ffffff",
        hiColor: "#000000",
        editBackgroundColor: "#526fbf"
    },
    Violet: {
        left: 5, right: 5, top: 10, bottom: 8, hasOverState: true, hasClickState: true, clickStateIsNormalState: true,
        textColor: "#ffffff", hiColor: "#000000", editBackgroundColor: "#c054c0"
    },
    "Flash Style": {
        left: 5,
        right: 5,
        top: 5,
        bottom: 5,
        hasOverState: false,
        hasClickState: false,
        editBackgroundColor: "#efefef"
    },
    "Blue Gel": {
        left: 23,
        right: 23,
        top: 10,
        bottom: 10,
        hasOverState: false,
        hasClickState: false,
        textColor: "#ffffff",
        editBackgroundColor: "#3072ee",
        width: 125
    },
    "Red Gel": {
        left: 23,
        right: 23,
        top: 10,
        bottom: 10,
        hasOverState: false,
        hasClickState: false,
        textColor: "#ffffff",
        editBackgroundColor: "#ec352f",
        width: 125
    },
    "Brown Gel": {
        left: 23,
        right: 23,
        top: 10,
        bottom: 10,
        hasOverState: false,
        hasClickState: false,
        textColor: "#ffffff",
        editBackgroundColor: "#eca430",
        width: 125
    },
    "Purple Gel": {
        left: 23,
        right: 23,
        top: 10,
        bottom: 10,
        hasOverState: false,
        hasClickState: false,
        textColor: "#ffffff",
        editBackgroundColor: "#712be9",
        width: 125
    },
    "Green Gel": {
        left: 23,
        right: 23,
        top: 10,
        bottom: 10,
        hasOverState: false,
        hasClickState: false,
        textColor: "#ffffff",
        editBackgroundColor: "#6eec2f",
        width: 125
    }
};
pui.widgets.getStyledButtonProxy = function (b) {
    var a = b["button style"], c = {};
    c.dom = document.createElement("div");
    c.dom.style.position = "relative";
    c.dom.style.width = "100px";
    if (b.width != null) c.dom.style.width = b.width;
    c.dom.style.height = "23px";
    c.Ej = true;
    c.properties = {};
    c.properties.width = "100px";
    if (b.width != null) c.properties.width = b.width;
    c.properties.height = "23px";
    c.properties.value = "Click Here";
    c.properties["button style"] = a;
    c.evalProperty = function (d) {
        return c.properties[d]
    };
    pui.widgets["styled button"].propertySetters["field type"](c);
    a = pui.widgets.buttonStyles[a].textColor;
    if (a != null) c.dom.button.z.style.color = a;
    if (b["font size"] != null) c.dom.button.z.style.fontSize = b["font size"];
    if (b["font family"] != null) c.dom.button.z.style.fontFamily = b["font family"];
    if (b["font weight"] != null) c.dom.button.z.style.fontWeight = b["font weight"];
    if (b["text align"] != null) c.dom.button.z.style.textAlign = b["text align"];
    return c.dom
};
pui.widgets.oo = function (b, a, c) {
    var d = pui.normalizeURL("/profoundui/proddata/images/buttons/" + b + "/");
    a.Gb.style.backgroundImage = "url('" + d + "topleft" + c + ".png')";
    a.Lc.style.backgroundImage = "url('" + d + "topmiddle" + c + ".png')";
    a.hc.style.backgroundImage = "url('" + d + "topright" + c + ".png')";
    a.Cc.src = d + "left" + c + ".png";
    a.rg.src = d + "middle" + c + ".png";
    a.Hc.src = d + "right" + c + ".png";
    a.Cc.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + d + "left" + c + ".png', sizingMethod='scale')";
    a.rg.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" +
        d + "middle" + c + ".png', sizingMethod='scale')";
    a.Hc.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + d + "right" + c + ".png', sizingMethod='scale')";
    a.xc.style.backgroundImage = "url('" + d + "bottomleft" + c + ".png')";
    a.yc.style.backgroundImage = "url('" + d + "bottommiddle" + c + ".png')";
    a.zc.style.backgroundImage = "url('" + d + "bottomright" + c + ".png')";
    b = pui.widgets.buttonStyles[b];
    if (b != null && b.QE != true) {
        a = function (e) {
            (new Image).src = d + e + ".png"
        };
        if (b.hasOverState == true && c != "-hi") {
            a("topleft-hi");
            a("topmiddle-hi");
            a("topright-hi");
            a("left-hi");
            a("middle-hi");
            a("right-hi");
            a("bottomleft-hi");
            a("bottommiddle-hi");
            a("bottomright-hi")
        }
        if (b.hasClickState == true && b.clickStateIsNormalState != true && c != "-click") {
            a("topleft-click");
            a("topmiddle-click");
            a("topright-click");
            a("left-click");
            a("middle-click");
            a("right-click");
            a("bottomleft-click");
            a("bottommiddle-click");
            a("bottomright-click")
        }
        b.QE = true
    }
};
pui.widgets.Rq = function (b, a, c, d, e) {
    if (typeof c == "string") {
        if (c != "" && !isNaN(c)) c += "px";
        c = c.length >= 3 && c.substr(c.length - 2) == "px" ? parseInt(c) : b.Gb.parentNode.offsetWidth
    }
    if (typeof d == "string") {
        if (d != "" && !isNaN(d)) d += "px";
        d = d.length >= 3 && d.substr(d.length - 2) == "px" ? parseInt(d) : b.Gb.parentNode.offsetHeight
    }
    if (typeof c != "number") c = parseInt(c);
    if (isNaN(c)) c = 100;
    if (typeof d != "number") d = parseInt(d);
    if (isNaN(d)) d = 23;
    var f = false;
    if (d < a.top + a.bottom) {
        d = a.top + a.bottom;
        b.z.parentNode.style.height = d + "px";
        f = true
    }
    if (c <
        a.left + a.right) {
        c = a.left + a.right;
        b.z.parentNode.style.width = c + "px";
        f = true
    }
    f && e != null && e.design == true && e.c.designer.selection.Fb();
    b.Gb.style.width = a.left + "px";
    b.Gb.style.height = a.top + "px";
    b.Lc.style.left = a.left + "px";
    b.Lc.style.height = a.top + "px";
    b.Lc.style.width = c - a.left - a.right + "px";
    b.hc.style.left = c - a.right + "px";
    b.hc.style.height = a.top + "px";
    b.hc.style.width = a.right + "px";
    b.Cc.style.top = a.top + "px";
    b.Cc.style.width = a.left + "px";
    b.Cc.style.height = d - a.top - a.bottom + "px";
    b.rg.style.left = a.left + "px";
    b.rg.style.top =
        a.top + "px";
    b.rg.style.width = c - a.left - a.right + "px";
    b.rg.style.height = d - a.top - a.bottom + "px";
    b.Hc.style.left = c - a.right + "px";
    b.Hc.style.top = a.top + "px";
    b.Hc.style.width = a.right + "px";
    b.Hc.style.height = d - a.top - a.bottom + "px";
    b.xc.style.top = d - a.bottom + "px";
    b.xc.style.width = a.left + "px";
    b.xc.style.height = a.bottom + "px";
    b.yc.style.left = a.left + "px";
    b.yc.style.top = d - a.bottom + "px";
    b.yc.style.height = a.bottom + "px";
    b.yc.style.width = c - a.left - a.right + "px";
    b.zc.style.left = c - a.right + "px";
    b.zc.style.top = d - a.bottom + "px";
    b.zc.style.height = a.bottom + "px";
    b.zc.style.width = a.right + "px";
    b.z.style.left = a.left + "px";
    b.z.style.top = "0px";
    b.z.style.width = c - a.left - a.right + "px";
    b.z.style.height = d + "px";
    b.z.style.lineHeight = d + "px"
};
pui.widgets.add({
    name: "styled button",
    newValue: "Click Here",
    rf: true,
    defaults: {width: "100px", height: "23px", "button style": "Ice Blue"},
    propertySetters: {
        "field type": function (b) {
            function a() {
                if (!(b.dom.getAttribute != null && b.dom.getAttribute("disabled") == "true" || b.dom.disabled != null && b.dom.disabled == true)) {
                    b.dom.Rz = true;
                    if (b.dom.Ps != true) {
                        var g = b.dom.button.Uo, l = pui.widgets.buttonStyles[g];
                        if (l == null) {
                            g = pui.widgets.gg()[0];
                            l = pui.widgets.buttonStyles[g]
                        }
                        l.hasOverState && pui.widgets.oo(g, b.dom.button, "-hi");
                        if (l.hiColor != null) b.dom.button.z.style.color = l.hiColor
                    }
                }
            }

            function c(g) {
                b.dom.Rz = false;
                if (b.dom.Ps != true) {
                    if (pui.is_old_ie) {
                        if ((g = g.relatedTarget || g.toElement) && g != b.dom) g = g.parentNode;
                        if (g == b.dom) return
                    }
                    var l = b.dom.button.Uo;
                    g = pui.widgets.buttonStyles[l];
                    if (g == null) {
                        l = pui.widgets.gg()[0];
                        g = pui.widgets.buttonStyles[l]
                    }
                    g.hasOverState && pui.widgets.oo(l, b.dom.button, "");
                    if (g.hiColor != null) {
                        l = b.properties.color;
                        if (l == null) l = g.textColor;
                        b.dom.button.z.style.color = l
                    }
                }
            }

            function d(g) {
                if (!(b.dom.getAttribute !=
                    null && b.dom.getAttribute("disabled") == "true" || b.dom.disabled != null && b.dom.disabled == true)) if (!pui.Ae(g)) {
                    b.dom.Ps = true;
                    g = b.dom.button.Uo;
                    var l = pui.widgets.buttonStyles[g];
                    if (l == null) {
                        g = pui.widgets.gg()[0];
                        l = pui.widgets.buttonStyles[g]
                    }
                    b.dom.button.z.style.left = l.left + 1 + "px";
                    b.dom.button.z.style.top = "1px";
                    if (l.hasClickState) {
                        var n = "-click";
                        if (l.clickStateIsNormalState == true) n = "";
                        pui.widgets.oo(g, b.dom.button, n)
                    }
                }
            }

            function e() {
                b.dom.Ps = false;
                var g = b.dom.button.Uo, l = pui.widgets.buttonStyles[g];
                if (l ==
                    null) {
                    g = pui.widgets.gg()[0];
                    l = pui.widgets.buttonStyles[g]
                }
                b.dom.button.z.style.left = l.left + "px";
                b.dom.button.z.style.top = "0px";
                if (l.hasClickState) {
                    var n = "";
                    f.z.style.color = b.properties.color;
                    if (l.hasOverState && b.dom.Rz == true) {
                        n = "-hi";
                        if (l.hiColor != null) b.dom.button.z.style.color = l.hiColor
                    }
                    pui.widgets.oo(g, b.dom.button, n)
                }
            }

            b.dom.sizeMe = function () {
                var g = b.properties["button style"];
                g = pui.widgets.buttonStyles[g];
                if (g == null) {
                    g = pui.widgets.gg()[0];
                    g = pui.widgets.buttonStyles[g]
                }
                pui.widgets.Rq(b.dom.button,
                    g, b.dom.offsetWidth, b.dom.offsetHeight, b)
            };
            b.dom.style.textAlign = "center";
            if (b.properties.color != null) b.dom.style.color = b.properties.color;
            b.dom.innerHTML = "";
            var f = {};
            f.Gb = document.createElement("div");
            f.Lc = document.createElement("div");
            f.hc = document.createElement("div");
            f.Cc = document.createElement("img");
            f.rg = document.createElement("img");
            f.Hc = document.createElement("img");
            f.xc = document.createElement("div");
            f.yc = document.createElement("div");
            f.zc = document.createElement("div");
            f.z = document.createElement("div");
            f.Gb.style.position = "absolute";
            f.Gb.style.padding = "0px";
            f.Gb.style.margin = "0px";
            f.Lc.style.position = "absolute";
            f.Lc.style.padding = "0px";
            f.Lc.style.margin = "0px";
            f.hc.style.position = "absolute";
            f.hc.style.padding = "0px";
            f.hc.style.margin = "0px";
            f.Cc.style.position = "absolute";
            f.Cc.style.padding = "0px";
            f.Cc.style.margin = "0px";
            f.rg.style.position = "absolute";
            f.rg.style.padding = "0px";
            f.rg.style.margin = "0px";
            f.Hc.style.position = "absolute";
            f.Hc.style.padding = "0px";
            f.Hc.style.margin = "0px";
            f.xc.style.position = "absolute";
            f.xc.style.padding = "0px";
            f.xc.style.margin = "0px";
            f.yc.style.position = "absolute";
            f.yc.style.padding = "0px";
            f.yc.style.margin = "0px";
            f.zc.style.position = "absolute";
            f.zc.style.padding = "0px";
            f.zc.style.margin = "0px";
            f.Gb.style.top = "0px";
            f.Gb.style.left = "0px";
            f.Gb.style.backgroundRepeat = "no-repeat";
            f.Lc.style.top = "0px";
            f.Lc.style.backgroundRepeat = "repeat-x";
            f.hc.style.top = "0px";
            f.hc.style.backgroundRepeat = "no-repeat";
            f.Cc.style.left = "0px";
            f.xc.style.left = "0px";
            f.xc.style.backgroundRepeat = "no-repeat";
            f.yc.style.backgroundRepeat =
                "repeat-x";
            f.zc.style.backgroundRepeat = "no-repeat";
            f.z.style.position = "absolute";
            f.z.style.verticalAlign = "middle";
            f.z.style.display = "";
            f.z.style.overflow = "hidden";
            f.z.onselectstart = za(false);
            if (typeof f.z.style.MozUserSelect != "undefined") f.z.style.MozUserSelect = "none";
            f.z.style.textAlign = "center";
            if (b.properties["text align"] != null) f.z.style.textAlign = b.properties["text align"];
            if (b.properties["font family"] != null) f.z.style.fontFamily = b.properties["font family"];
            if (b.properties.color != null) f.z.style.color =
                b.properties.color;
            if (b.properties["font size"] != null) f.z.style.fontSize = b.properties["font size"];
            if (b.properties["font weight"] != null) f.z.style.fontWeight = b.properties["font weight"];
            b.Ej != true && gc(b.dom, "mouseover", a);
            b.Ej != true && gc(b.dom, "mouseout", c);
            b.Ej != true && gc(b.dom, "mousedown", d);
            b.Ej != true && gc(document, "mouseup", e);
            b.dom.appendChild(f.Gb);
            b.dom.appendChild(f.Lc);
            b.dom.appendChild(f.hc);
            b.dom.appendChild(f.Cc);
            b.dom.appendChild(f.rg);
            b.dom.appendChild(f.Hc);
            b.dom.appendChild(f.xc);
            b.dom.appendChild(f.yc);
            b.dom.appendChild(f.zc);
            b.dom.appendChild(f.z);
            b.dom.button = f;
            var h = b.value;
            b.value = b.properties["button style"];
            pui.widgets["styled button"].propertySetters["button style"](b);
            b.value = h;
            b.dom.button.z.innerHTML = b.evalProperty("value")
        }, "button style": function (b) {
            var a = b.value, c = pui.widgets.buttonStyles[a];
            if (c == null) {
                a = pui.widgets.gg()[0];
                c = pui.widgets.buttonStyles[a]
            }
            pui.normalizeURL("/profoundui/proddata/images/buttons/" + a + "/");
            b.dom.button.Uo = a;
            var d = b.dom.button;
            pui.widgets.oo(a, d, "");
            d.z.className =
                "styled-button " + a.split(" ").join("-").toLowerCase() + "-button";
            pui.widgets.Rq(d, c, b.properties.width, b.properties.height)
        }, value: function (b) {
            b.dom.button.z.innerHTML = b.value
        }, width: function (b) {
            b.dom.style.width = pui.cn(b.value) ? b.value + "px" : b.value;
            var a = b.properties["button style"];
            a = pui.widgets.buttonStyles[a];
            if (a == null) {
                a = pui.widgets.gg()[0];
                a = pui.widgets.buttonStyles[a]
            }
            pui.widgets.Rq(b.dom.button, a, b.value, b.properties.height, b)
        }, height: function (b) {
            b.dom.style.height = pui.cn(b.value) ? b.value +
                "px" : b.value;
            var a = b.properties["button style"];
            a = pui.widgets.buttonStyles[a];
            if (a == null) {
                a = pui.widgets.gg()[0];
                a = pui.widgets.buttonStyles[a]
            }
            pui.widgets.Rq(b.dom.button, a, b.properties.width, b.value, b)
        }, color: function (b) {
            b.dom.button.z.style.color = b.value
        }, "font family": function (b) {
            b.dom.button.z.style.fontFamily = b.value
        }, "font size": function (b) {
            b.dom.button.z.style.fontSize = b.value
        }, "font style": function (b) {
            b.dom.button.z.style.fontStyle = b.value
        }, "font variant": function (b) {
            b.dom.button.z.style.fontVariant =
                b.value
        }, "font weight": function (b) {
            b.dom.button.z.style.fontWeight = b.value
        }, "letter spacing": function (b) {
            b.dom.button.z.style.letterSpacing = b.value
        }, "text align": function (b) {
            var a = b.value;
            if (a == null || a == "") a = "center";
            b.dom.button.z.style.textAlign = a
        }, "text decoration": function (b) {
            b.dom.button.z.style.textDecoration = b.value
        }, "text transform": function (b) {
            b.dom.button.z.style.textTransform = b.value
        }, "word spacing": function (b) {
            b.dom.button.z.style.wordSpacing = b.value
        }
    }
});
pui.widgets.tabStyles = {
    Simple: {useImages: false, height: 15, defaultBackColor: "#eeeeff", hiColor: "#666699"},
    Classic: {useImages: true, hiImages: true, height: 19, leftWidth: 5, rightWidth: 5, defaultBackColor: "#fcfcfe"},
    Glass: {
        useImages: true,
        hiImages: true,
        height: 21,
        leftWidth: 3,
        rightWidth: 3,
        defaultBackColor: "#deecfd",
        hiColor: "#15428b",
        selColor: "#15428b",
        borderColor: "#8db2e3",
        leftMargin: 3
    },
    Angle: {
        useImages: true,
        hiImages: false,
        height: 21,
        leftWidth: 9,
        rightWidth: 25,
        defaultBackColor: "#ffffff",
        hiColor: "#ffffff",
        selColor: "#013572",
        hiUnderline: true,
        selBold: true,
        separated: true,
        borderColor: "#5977b3"
    },
    Glow: {
        useImages: true,
        hiImages: false,
        height: 19,
        leftWidth: 7,
        rightWidth: 7,
        defaultBackColor: "#ffffff",
        hiColor: "#666699"
    },
    Smooth: {
        useImages: true,
        hiImages: true,
        height: 25,
        leftWidth: 6,
        rightWidth: 6,
        defaultBackColor: "#f8f2e4",
        backBar: true
    },
    Delicate: {
        useImages: true,
        hiImages: false,
        height: 27,
        leftWidth: 2,
        rightWidth: 2,
        defaultBackColor: "#ffffff",
        hiColor: "#999999",
        borderColor: "#dedede",
        leftMargin: 0
    },
    Concrete: {
        useImages: true,
        hiImages: false,
        height: 23,
        leftWidth: 5,
        rightWidth: 5,
        defaultBackColor: "#ffffff",
        hiColor: "#666699",
        selColor: "#ffffff",
        separated: true,
        leftMargin: 2
    },
    Sky: {
        useImages: true,
        hiImages: true,
        height: 22,
        leftWidth: 4,
        rightWidth: 4,
        defaultBackColor: "#ffffff",
        hiColor: "#627ec1",
        selColor: "#627ec1",
        separated: true,
        backBar: true,
        backBarColor: "#f4f7fb",
        borderColor: "#bcd2e6",
        borderSize: 2
    },
    Block: {
        useImages: true,
        hiImages: true,
        height: 23,
        leftWidth: 4,
        rightWidth: 4,
        defaultBackColor: "#87c2f2",
        hiColor: "#ffffff",
        selColor: "#ffffff",
        borderColor: "#2763a5",
        separated: true
    },
    CSS: {useImages: false, DK: false}
};
pui.widgets.uI = function (b) {
    var a = pui.widgets.tabStyles[b];
    if (a != null) if (a.vI != true) {
        if (a.useImages) {
            var c = a.imageFileExtension;
            if (c == null) c = "gif";
            if (c.substr(0, 1) == ".") c = c.substr(1);
            var d = function (e) {
                (new Image).src = e
            };
            b = pui.normalizeURL("/profoundui/proddata/images/tabs/" + b.toLowerCase() + "/");
            if (a.hiImages) {
                d(b + "left-hi." + c);
                d(b + "middle-hi." + c);
                d(b + "right-hi." + c)
            }
            d(b + "left-sel." + c);
            d(b + "middle-sel." + c);
            d(b + "right-sel." + c)
        }
        a.vI = true
    }
};

function vd() {
    function b(B) {
        if (B.dom.rb != null && B.dom.rb != g) {
            B.dom.rb.selectedTab = g.selectedTab;
            B.dom.rb.OJ(t);
            B.dom.rb.Xj();
            B.dom.rb.rm()
        }
    }

    function a() {
        if (D.scrollLeft > 0) D.scrollLeft -= q; else {
            clearInterval(o);
            r.style.display = "none"
        }
        k.style.display = "inline-block";
        s++;
        if (s > 0 && s % 5 == 0) q += n
    }

    function c() {
        if (D.scrollLeft < D.scrollWidth - D.offsetWidth) try {
            D.scrollLeft += q
        } catch (B) {
        } else {
            clearInterval(i);
            k.style.display = "none"
        }
        r.style.display = "inline-block";
        s++;
        if (s > 0 && s % 5 == 0) q += n
    }

    function d() {
        q = l;
        s = 0;
        o = setInterval(a,
            42)
    }

    function e() {
        q = l;
        s = 0;
        i = setInterval(c, 42)
    }

    function f() {
        clearInterval(o)
    }

    function h() {
        clearInterval(i)
    }

    var g = this, l = Number(pui["tabpanel scroll speed"]);
    if (isNaN(l) || l < 1) l = 5;
    var n = Number(pui["tabpanel scroll acceleration"]);
    if (isNaN(n) || n < 0) n = 1;
    var o = null, i = null, r = null, k = null, q = 5, s = 0, t = null, u = {}, w, v, E, y, F = 0;
    this.defaults = {};
    this.defaults.fontFamily = "arial";
    this.defaults.fontSize = "12px";
    this.defaults.color = "#333366";
    this.Ne = [];
    this.selectedTab = 0;
    this.b = null;
    this.ld = "#eeeeff";
    this.Df = "Simple";
    this.bj =
        "Tab 1,Tab 2,Tab 3";
    var D = null;
    this.ez = function (B) {
        if (g.selectedTab == B) {
            g.selectedTab = 0;
            if (g.selectedTab == B) g.selectedTab = 1
        }
        u[B] = true;
        g.Xj()
    };
    this.KB = function (B) {
        u[B] = false;
        g.Xj()
    };
    this.isHidden = function (B) {
        return u[B]
    };
    this.setTab = function (B) {
        var I = g.selectedTab != B;
        g.selectedTab = B;
        I && g.yA(B)
    };
    this.getTab = function () {
        return g.selectedTab
    };
    this.refresh = function () {
        g.setTab(g.selectedTab)
    };
    this.gB = function () {
        var B = pui.widgets.tabStyles[g.Df];
        if (B != null && B.defaultBackColor != null) g.ld = B.defaultBackColor
    };
    this.Xj = function () {
        g.H()
    };
    this.$J = function (B) {
        D = B
    };
    this.H = function () {
        function B(V) {
            V = (Q == "dspf" && !O ? pui.runtimeContainer : document.getElementById(Ca)).getElementsByTagName(V);
            for (var X = 0; X < V.length; X++) {
                var ga = V[X];
                if (ga.Jb != null && ga.Yc != null && ga.Jb == g.b.id) {
                    if (ga.Yc == g.selectedTab) {
                        ga.style.visibility = "";
                        applyProperty(ga, "visibility", "");
                        if (ga.grid && ga.grid.setProperty) ga.grid.t || !ga.grid.Wi ? ga.grid.show() : ga.grid.hide();
                        !Ub() && ga.pui.properties["field type"] == "chart" && !ga.chart && applyProperty(ga,
                            "field type", "chart")
                    } else {
                        ga.style.visibility = "hidden";
                        applyProperty(ga, "visibility", "hidden");
                        ga.grid && ga.grid.setProperty && ga.grid.hide();
                        ga.ha != null && ga.ha.hide()
                    }
                    if (O && ga.tagName == "INPUT" && (ga.type == "text" || pui.$p(ga.type) || ga.type == "checkbox" || ga.type == "radio")) R.designer.$d(ga).Pc()
                }
            }
        }

        if (g.Df == null || g.Df == "") g.Df = "Simple";
        w = pui.widgets.tabStyles[g.Df];
        if (w == null) w = pui.widgets.tabStyles.Simple;
        v = pui.normalizeURL("/profoundui/proddata/images/tabs/" + g.Df.toLowerCase() + "/");
        E = w.imageFileExtension;
        if (E == null) E = "gif";
        if (E.substr(0, 1) == ".") E = E.substr(1);
        y = "#aaaaaa";
        if (w.borderColor != null) y = w.borderColor;
        g.b.innerHTML = "";
        g.b.style.backgroundColor = "";
        if (w.DK !== false) {
            if (!g.b.style.fontFamily) g.b.style.fontFamily = g.defaults.fontFamily;
            if (!g.b.style.fontSize) g.b.style.fontSize = g.defaults.fontSize;
            if (!g.b.style.color) g.b.style.color = g.defaults.color
        }
        var I = 7;
        if (w.useImages) I = 1;
        D = document.createElement("div");
        D.className = "header-area";
        D.style.position = "absolute";
        D.style.left = "0px";
        D.style.top = "0px";
        D.style.height = w.height + I + 1 + "px";
        D.style.padding = "0px";
        D.style.whiteSpace = "nowrap";
        D.style.overflow = "hidden";
        if (w.backBar) {
            g.b.style.overflowX = "hidden";
            g.b.style.overflowY = "hidden";
            if (w.backBarColor != null) D.style.backgroundColor = w.backBarColor; else {
                D.style.backgroundImage = "url(" + v + "middle." + E + ")";
                D.style.backgroundRepeat = "repeat-x"
            }
        }
        D.style.width = "100%";
        var z = document.createElement("div");
        z.style.position = "absolute";
        z.style.left = "0px";
        z.style.top = w.height + I + "px";
        z.className = "content-area";
        var H = g.b.style.width,
            J = 0;
        if (typeof H == "string" && H != "" && !isNaN(H)) H += "px";
        if (H != null && H != "" && H.length >= 3 && H.substr(H.length - 2) == "px") {
            J = parseInt(H);
            if (isNaN(J)) J = 0;
            J += 2
        } else J = g.b.offsetWidth;
        H = g.b.style.height;
        if (typeof H == "string" && H != "" && !isNaN(H)) H += "px";
        var K = 0;
        if (H != null && H != "" && H.length >= 3 && H.substr(H.length - 2) == "px") {
            K = parseInt(H);
            if (isNaN(K)) K = 0;
            K += 2
        } else K = g.b.offsetHeight;
        z.style.height = Math.abs(K - w.height - I - 4) + "px";
        z.style.width = Math.abs(J - 4) + "px";
        I = 1;
        if (w.borderSize) I = w.borderSize;
        z.style.border = I + "px solid " +
            y;
        z.style.backgroundColor = g.ld;
        for (I = 0; I < g.Ne.length; I++) {
            J = document.createElement("span");
            J.style.display = "inline-block";
            if (u[I]) J.style.display = "none";
            if (I == g.selectedTab) {
                if (g.b.className != "") J.className = g.b.className.split(" ")[0] + "-";
                J.className += "selected-tab"
            }
            if (w.leftWidth != null) {
                var L = document.createElement("span");
                L.style.backgroundImage = "url(" + v + "left" + (I == g.selectedTab ? "-sel" : "") + "." + E + ")";
                L.style.backgroundRepeat = "no-repeat";
                L.style.height = w.height + 2 + "px";
                L.style.width = w.leftWidth + "px";
                L.style.cssFloat = "left";
                L.style.styleFloat = "left";
                L.style.display = "inline-block"
            }
            if (w.rightWidth != null) {
                var N = document.createElement("span");
                N.style.backgroundImage = "url(" + v + "right" + (I == g.selectedTab ? "-sel" : "") + "." + E + ")";
                N.style.backgroundRepeat = "no-repeat";
                N.style.height = w.height + 2 + "px";
                N.style.width = w.rightWidth + "px";
                N.style.cssFloat = "left";
                N.style.styleFloat = "left";
                N.style.display = "inline-block"
            }
            H = document.createElement("span");
            H.Me = I;
            H.innerHTML = g.Ne[I];
            H.style.display = "block";
            H.style.cssFloat =
                "left";
            H.style.styleFloat = "left";
            H.style.height = w.height + "px";
            H.style.lineHeight = w.height + "px";
            H.setAttribute("isTab", "true");
            H.style.display = "inline-block";
            if (w.useImages) {
                H.style.backgroundImage = "url(" + v + "middle" + (I == g.selectedTab ? "-sel" : "") + "." + E + ")";
                H.style.backgroundRepeat = "repeat-x";
                K = 1;
                if (w.leftMargin) K = w.leftMargin;
                L.style.marginLeft = K + "px";
                L.style.paddingTop = "2px";
                H.style.padding = "2px 0.5em";
                N.style.paddingTop = "2px";
                if (I != g.selectedTab) H.style.cursor = "pointer"; else {
                    if (w.separated != true) {
                        L.style.backgroundColor =
                            g.ld;
                        N.style.backgroundColor = g.ld;
                        H.style.backgroundColor = g.ld
                    }
                    H.style.cursor = "default";
                    if (w.selColor != null) H.style.color = w.selColor;
                    if (w.selBold == true) H.style.fontWeight = "bold"
                }
            } else {
                H.style.marginLeft = "3px";
                H.style.padding = "3px 0.5em";
                H.style.borderTop = "1px solid " + y;
                H.style.borderLeft = "1px solid " + y;
                H.style.borderRight = "1px solid " + y;
                if (I != g.selectedTab) {
                    H.style.borderBottom = "1px solid " + y;
                    H.style.backgroundColor = w.defaultTabColor ? w.defaultTabColor : "#B7C8F6";
                    if (Q == "genie") H.style.filter = "progid:DXImageTransform.Microsoft.Gradient(gradientType=0,startColorStr=white,endColorStr=##B7C8F6)";
                    H.style.cursor = "pointer"
                } else {
                    H.style.backgroundColor = g.ld;
                    H.style.borderBottom = "1px solid " + g.ld;
                    H.style.cursor = "default"
                }
            }
            H.onmouseover = g.qK;
            H.onmouseout = g.pK;
            H.ondblclick = g.VB;
            H.onclick = g.UB;
            D.appendChild(J);
            w.leftWidth != null && J.appendChild(L);
            J.appendChild(H);
            w.rightWidth != null && J.appendChild(N)
        }
        g.b.appendChild(z);
        g.b.appendChild(D);
        k = r = null;
        D.scrollWidth - D.offsetWidth > 0 && g.Tw(D);
        var O = Ub();
        O && g.Cx();
        B("div");
        B("input");
        B("select");
        B("textarea");
        B("button");
        B("img")
    };
    this.Cx = function () {
        var B =
            S.Fk("plus", "Add New Tab", g.b), I = S.Fk("minus", "Remove Tab", g.b);
        B.style.right = "2px";
        I.style.right = "16px";
        I.style.top = B.style.top = "2px";
        B.onclick = g.fE;
        I.onclick = g.SI
    };
    this.yA = function (B) {
        var I = g.b;
        if (I.disabled != true) if (Q == "dspf" && I.fr == true) {
            I.Fa = B;
            if (I.ia == "true" || I.ia == "send data") pui.ia = I.ia;
            if (I.Sn) pui.Wc = I.Sn;
            if (pui.Ld() == false) {
                I.Fa = null;
                g.selectedTab = F
            }
        } else {
            g.Xj();
            if (Q == "dspf" && I.er == true) I.Fa = B
        }
    };
    this.qK = function (B) {
        B = vb(B);
        if (B.Me == null && B.parentNode.Me != null) B = B.parentNode;
        if (B.Me != g.selectedTab) {
            if (w.useImages &&
                w.hiImages) {
                B.style.backgroundImage = "url(" + v + "middle-hi." + E + ")";
                B.previousSibling.style.backgroundImage = "url(" + v + "left-hi." + E + ")";
                B.nextSibling.style.backgroundImage = "url(" + v + "right-hi." + E + ")"
            }
            if (w.hiColor != null) B.style.color = w.hiColor;
            if (w.hiUnderline == true) B.style.textDecoration = "underline"
        }
    };
    this.pK = function (B) {
        B = vb(B);
        if (B.Me == null && B.parentNode.Me != null) B = B.parentNode;
        if (B.Me != g.selectedTab) {
            if (w.useImages && w.hiImages) {
                B.style.backgroundImage = "url(" + v + "middle." + E + ")";
                B.previousSibling.style.backgroundImage =
                    "url(" + v + "left." + E + ")";
                B.nextSibling.style.backgroundImage = "url(" + v + "right." + E + ")"
            }
            if (w.hiColor != null) B.style.color = "";
            if (w.hiUnderline == true) B.style.textDecoration = ""
        }
    };
    this.UB = function (B) {
        B = vb(B);
        t = B.parentNode.parentNode.scrollLeft;
        if (B.Me == null && B.parentNode.Me != null) B = B.parentNode;
        B = B.Me;
        if (g.b.ontabclick != null) if (g.b.ontabclick(B) == false) return;
        if (g.b.TB != null) {
            var I = g.b.TB.split(",");
            if (I.length - 1 >= B) {
                I = I[B];
                I = Zb(I);
                if (I != "") {
                    Sc(I);
                    return
                }
            }
        }
        F = g.selectedTab;
        I = false;
        if (g.selectedTab != B) I = true;
        if (I) g.selectedTab = B;
        if (Ub()) {
            var z = R.designer.selection;
            z.e.length > 1 && z.clear()
        }
        I && g.yA(B)
    };
    this.VB = function (B) {
        if (Ub()) {
            var I = S.getTarget(B);
            if (I.Me == null && I.parentNode.Me != null) I = I.parentNode;
            var z = I.parentNode.parentNode.parentNode, H = R.designer.$d(z);
            if (!pui.f(H.properties["tab names"]) && !pui.Ia(H.properties["tab names"])) {
                H.designer.we.Oj = function (J) {
                    var K = I.Me, L = H.properties["tab names"];
                    if (L == "" || L == null) L = g.bj;
                    L = pui.Ta(L);
                    L[K] = J;
                    L = L.join(",");
                    J = rc()["tab names"];
                    H.designer.n.add(H, J.name);
                    uc(J, H.properties, H.dom, L, true, H, null);
                    H.m["tab names"] = true;
                    H.ta = true;
                    H.designer.X[H.designer.i.l] = true;
                    H.designer.k.ea("tab names");
                    I = z = H = H.designer.we.Oj = null
                };
                H.designer.we.show(H, I, "tab")
            }
        }
    };
    this.fE = function () {
        var B = R.designer.$d(g.b), I = B.properties["tab names"];
        if (!pui.Ia(I)) {
            if (pui.f(I)) {
                var z = I.designValue;
                if (z == null || z == "") z = g.bj;
                z = pui.Ta(z);
                z.push("Tab " + (z.length + 1));
                I.designValue = z.join(",")
            } else {
                if (I == "" || I == null) I = g.bj;
                I = pui.Ta(I);
                I.push("New Tab");
                I = I.join(",")
            }
            z = !pui.f(I) && !pui.Ia(I) ?
                pui.Ta(I) : pui.Ta(I.designValue);
            g.selectedTab = z.length - 1;
            if (D) t = D.scrollWidth;
            z = rc()["tab names"];
            B.designer.n.start("Add New Tab");
            B.designer.n.add(B, z.name);
            uc(z, B.properties, B.dom, I, true, B, null);
            B.m["tab names"] = true;
            B.ta = true;
            B.designer.X[B.designer.i.l] = true;
            B.designer.selection.clear();
            B.designer.selection.add(B);
            B.designer.k.refresh();
            b(B)
        }
    };
    this.SI = function () {
        var B = R.designer.$d(g.b), I = B.properties["tab names"], z;
        if (!pui.Ia(I)) {
            if (pui.f(I)) {
                var H = I.designValue;
                if (H == null || H == "") H = g.bj;
                I.designValue =
                    H;
                z = pui.Ta(H)
            } else {
                if (I == "" || I == null) I = g.bj;
                z = pui.Ta(I)
            }
            if (z.length > 1) {
                if (g.nx(z.length - 1, B)) {
                    B.designer.selection.clear();
                    B.designer.selection.add(B);
                    B.designer.k.refresh();
                    g.selectedTab = z.length - 1;
                    g.H();
                    pui.alert("The tab cannot be removed because it contains other elements that must be removed first.")
                } else {
                    z.pop();
                    H = g.selectedTab;
                    if (g.selectedTab > z.length - 1) g.selectedTab = z.length - 1;
                    if (pui.f(I) || pui.Ia(I)) I.designValue = z.join(","); else I = z.join(",");
                    z = rc()["tab names"];
                    B.designer.n.start("Remove Tab");
                    B.designer.n.add(B, z.name);
                    uc(z, B.properties, B.dom, I, true, B, null);
                    B.m["tab names"] = true;
                    B.ta = true;
                    B.designer.X[B.designer.i.l] = true;
                    B.designer.k.ea("tab names");
                    if (B.dom.rb != null && B.dom.rb == g) g.selectedTab = H
                }
                b(B)
            }
        }
    };
    this.OJ = function (B) {
        t = B
    };
    this.nx = function (B, I) {
        for (var z = 0; z < I.designer.items.length; z++) {
            var H = I.designer.items[z].dom;
            if (H.Jb != null && H.Yc != null && H.Jb == g.b.id) if (H.Yc == B) return true
        }
        return false
    };
    this.Tw = function () {
        r = g.$s("left");
        k = g.$s("right");
        if (Ub()) k.style.right = "35px";
        r.onmousedown =
            d;
        r.onmouseup = f;
        r.onmouseout = r.onmouseup;
        r.hI = r.onmouseup;
        k.onmousedown = e;
        k.onmouseup = h;
        k.onmouseout = k.onmouseup;
        k.hI = k.onmouseup;
        g.b.appendChild(r);
        g.b.appendChild(k);
        if (t === null) if (D.childNodes != null && g.selectedTab >= 0 && g.selectedTab < D.childNodes.length) {
            var B = D.childNodes[g.selectedTab];
            t = Math.round(B.offsetLeft - D.offsetWidth / 2 + B.offsetWidth / 2)
        } else t = 0;
        g.rm()
    };
    this.rm = function () {
        var B = D.scrollWidth - D.offsetWidth;
        if (B - t <= 3) t = B; else if (t <= 3) t = 0;
        try {
            D.scrollLeft = t
        } catch (I) {
        }
        r.style.display = D.scrollLeft >
        0 ? "inline-block" : "";
        k.style.display = D.scrollLeft < B ? "inline-block" : ""
    };
    this.$s = function (B) {
        var I = document.createElement("span");
        if (B) I.className = "pui-tscrbtn " + B;
        var z = "-sel.";
        if (pui["tabpanel scroll unsel style"] == true) z = ".";
        if (w.leftWidth != null) {
            var H = document.createElement("span");
            H.className = "edge";
            H.style.backgroundImage = "url(" + v + "left" + z + E + ")";
            H.style.height = w.height + 2 + "px";
            H.style.width = w.leftWidth + "px"
        }
        if (w.rightWidth != null) {
            var J = document.createElement("span");
            J.className = "edge";
            J.style.backgroundImage =
                "url(" + v + "right" + z + E + ")";
            J.style.height = w.height + 2 + "px";
            J.style.width = w.rightWidth + "px"
        }
        B = document.createElement("span");
        B.className = "mid";
        B.style.height = w.height + "px";
        if (w.useImages) {
            B.style.backgroundImage = "url(" + v + "middle" + z + E + ")";
            B.style.backgroundRepeat = "repeat-x";
            z = 1;
            if (w.leftMargin) z = w.leftMargin;
            H.style.marginLeft = z + "px";
            B.style.padding = w.height - 17 + "px 0.5em 0px";
            if (w.separated != true) {
                H.style.backgroundColor = g.ld;
                J.style.backgroundColor = g.ld;
                B.style.backgroundColor = g.ld
            }
            if (w.selColor != null) B.style.color =
                w.selColor;
            if (w.selBold == true) B.style.fontWeight = "bold"
        } else {
            B.style.marginLeft = "3px";
            B.style.padding = "3px 0.5em";
            B.style.borderTop = "1px solid " + y;
            B.style.borderLeft = "1px solid " + y;
            B.style.borderRight = "1px solid " + y;
            B.style.borderBottom = "1px solid " + g.ld;
            B.style.backgroundColor = pui["tabpanel scroll unsel style"] != true ? g.ld : w.defaultTabColor ? w.defaultTabColor : "#B7C8F6"
        }
        w.leftWidth != null && I.appendChild(H);
        I.appendChild(B);
        w.rightWidth != null && I.appendChild(J);
        return I
    }
}

pui.widgets.add({
    name: "tab panel",
    oe: false,
    b: true,
    defaults: {
        width: "300px",
        height: "200px",
        "tab names": "Tab 1,Tab 2,Tab 3",
        "z index": "8",
        color: "#333366",
        "font family": "Arial",
        "font size": "12px"
    },
    propertySetters: {
        "field type": function (b) {
            b.dom.sizeMe = function () {
                b.dom.tabPanel.H()
            };
            b.dom.tabPanel = new vd;
            var a = b.evalProperty("tab names");
            b.dom.tabPanel.Ne = a != null && a != "" ? pui.Ta(a) : ["Tab 1", "Tab 2", "Tab 3"];
            b.dom.tabPanel.selectedTab = 0;
            b.dom.tabPanel.b = b.dom;
            b.dom.tabPanel.Df = b.properties["tab panel style"];
            if (b.design && pui.f(b.dom.tabPanel.Df)) b.dom.tabPanel.Df = "Simple";
            if (b.properties["background color"] == null || b.properties["background color"] == "") b.dom.tabPanel.gB();
            if (Q == "genie" || b.design) b.dom.tabPanel.H();
            if (!b.design) {
                b.dom.setTab = b.dom.tabPanel.setTab;
                b.dom.getTab = b.dom.tabPanel.getTab;
                b.dom.refresh = b.dom.tabPanel.refresh;
                b.dom.hideTab = b.dom.tabPanel.ez;
                b.dom.showTab = b.dom.tabPanel.KB
            }
        }, "tab names": function (b) {
            if (b.dom.tabPanel != null) {
                var a = b.value;
                b.dom.tabPanel.Ne = a != null && a != "" ? pui.Ta(a) :
                    ["Tab 1", "Tab 2", "Tab 3"];
                if (Q == "genie" || b.design) b.dom.tabPanel.H()
            }
        }, "tab keys": function (b) {
            b.dom.TB = b.value
        }, "tab panel style": function (b) {
            b.dom.tabPanel.Df = b.value;
            if (b.properties["background color"] == null || b.properties["background color"] == "") b.dom.tabPanel.gB();
            if (Q == "genie" || b.design) b.dom.tabPanel.H();
            pui.widgets.uI(b.value)
        }, width: function (b) {
            b.design && pui.da(b.value) && b.dom.tabPanel.H()
        }, height: function (b) {
            b.design && pui.da(b.value) && b.dom.tabPanel.H()
        }, "response AID": function (b) {
            b.dom.Sn =
                b.value && b.value != "" ? b.value : null
        }
    }
});
pui.yo = function (b) {
    function a(B) {
        if (h.Ji[B].S.DBCSDataType && h.Ji[B].S.DBCSDataType == "G") return i[B].length;
        return Vc(i[B])
    }

    function c() {
        if (r >= g.length - 1) return false;
        r++;
        i.push("");
        return true
    }

    function d(B) {
        if (B >= 48 && B <= 90) return true;
        if (B >= 96 && B <= 111) return true;
        if (B >= 186 && B <= 192) return true;
        if (B >= 219 && B <= 222) return true;
        if (B == 32) return true;
        return false
    }

    function e(B, I, z) {
        if (B.setSelectionRange) {
            B.focus();
            B.setSelectionRange(I, z)
        } else if (B.createTextRange) {
            B = B.createTextRange();
            B.collapse(true);
            B.moveEnd("character", z);
            B.moveStart("character", I);
            B.select()
        }
    }

    function f() {
        for (var B = [], I = 0, z = 0; z < o; z++) {
            var H = n.charAt(z);
            if (H == "\n" || H == " ") {
                I < z && B.push(n.substring(I, z));
                I = z + 1;
                B.push(H)
            } else z == o - 1 && I < o && B.push(n.substring(I))
        }
        if (t != "paste") for (z = 0; z < B.length; z++) if (B.length > z + 2) if (B[z].length >= g[0] && B[z + 1] === "\n" && B[z + 2] !== " " && B[z + 2] !== "\n") {
            B[z] += B[z + 2];
            B.splice(z + 1, 2);
            z--
        }
        return B
    }

    var h = vb(b);
    if (h.ln != null) {
        for (var g = [], l = 0; l < h.ln.length; l++) {
            g[l] = parseInt(h.ln, 10);
            if (isNaN(g[l])) g[l] = 0
        }
        var n =
            h.value, o = n.length, i = [];
        i.push("");
        var r = 0, k = function (B) {
            if (typeof B.selectionStart == "number") return B.selectionStart; else if (document.selection) {
                var I = document.selection.createRange().duplicate();
                if (I.parentElement() == B) {
                    var z = document.body.createTextRange();
                    z.moveToElementText(B);
                    z.setEndPoint("EndToStart", I);
                    var H = document.body.createTextRange();
                    H.moveToElementText(B);
                    H.setEndPoint("StartToEnd", I);
                    var J = B = false, K = false, L, N, O, V, X, ga;
                    L = N = z.text;
                    O = V = I.text;
                    X = ga = H.text;
                    do {
                        if (!B) if (z.compareEndPoints("StartToEnd",
                            z) == 0) B = true; else {
                            z.moveEnd("character", -1);
                            if (z.text == L) N += "\r\n"; else B = true
                        }
                        if (!J) if (I.compareEndPoints("StartToEnd", I) == 0) J = true; else {
                            I.moveEnd("character", -1);
                            if (I.text == O) V += "\r\n"; else J = true
                        }
                        if (!K) if (H.compareEndPoints("StartToEnd", H) == 0) K = true; else {
                            H.moveEnd("character", -1);
                            if (H.text == X) ga += "\r\n"; else K = true
                        }
                    } while (!B || !J || !K);
                    return N.length
                }
            }
        }(h), q = k;
        if (!b) b = window.event;
        var s = b.which;
        if (!s) s = b.keyCode;
        var t = b.type;
        if (t == "keydown" && s == 17) h.Ek = true;
        if (t == "keyup") h.Ek = false;
        if (t == "paste") {
            b.preventDefault();
            b.stopPropagation();
            l = (b.clipboardData || window.clipboardData).getData("text");
            if (l == null || l.length == 0) return false;
            l = l.replace(/\r/g, "");
            l = l.replace(/\t/g, " ");
            if (l.length == 0) return;
            n = n.substr(0, h.selectionStart) + l + n.substr(h.selectionEnd);
            o = n.length;
            var u = f();
            l = 0;
            for (var w = true; l < u.length;) if (u[l] == "\n") {
                if (!c()) break;
                w = true;
                l++
            } else if (u[l] == " ") {
                if (a(r) < g[r]) {
                    i[r] += " ";
                    w = false
                } else {
                    if (!c()) break;
                    w = true
                }
                l++
            } else {
                var v = a(r);
                if (v + u[l].length <= g[r]) {
                    i[r] += u[l];
                    l++;
                    w = false
                } else if (w) {
                    var E = u[l];
                    u.splice(l,
                        1);
                    for (var y = 0, F = 0; y < E.length;) {
                        u.splice(l + F, 0, E.substr(y, g[r]));
                        y += g[r];
                        F++
                    }
                } else {
                    if (!c()) {
                        w = g[r] - v;
                        i[r] += u[l].substr(0, w);
                        break
                    }
                    w = true
                }
            }
        }
        if (!(s == 8 && t == "keyup")) {
            if (s == 8 && t == "keydown" && k > 0) {
                if (pui.is_ie && n.length < k) k = n.length;
                if (n.substr(k - 1, 1) == "\n") {
                    n = n.substr(0, k - 1) + n.substr(k);
                    k -= 1
                }
                if (n.substr(k - 1, 1) == "\r") {
                    n = n.substr(0, k - 1) + n.substr(k);
                    k -= 1
                }
                n = n.substr(0, k - 1) + n.substr(k);
                k -= 1;
                b.preventDefault && b.preventDefault();
                b.stopPropagation && b.stopPropagation();
                b.cancelBubble = true;
                b.returnValue = false;
                q =
                    k
            } else if (s == 46 && t == "keydown") h.Sx = true; else s == 46 && t == "keyup" && delete h.Sx;
            if (s == 13 && t == "keydown") {
                for (l = w = 0; l < o; l++) {
                    u = n.charAt(l);
                    u == "\n" && w++
                }
                if (w + 1 >= g.length) {
                    b.preventDefault && b.preventDefault();
                    b.returnValue = false
                } else {
                    b.stopPropagation && b.stopPropagation();
                    b.cancelBubble = true
                }
            }
            var D;
            F = h.Sx === true || s == 8;
            if (h.Ji != null && h.Ji[0] != null && h.Ji[0].S != null && h.Ji[0].S.wrapped !== true && (t == "input" || t == "keydown" && s == 8)) {
                u = f();
                l = 0;
                E = false;
                for (w = true; u.length > 0;) if (u[0] == "\n") {
                    if (!E) {
                        if (!c()) break;
                        w = true
                    }
                    E =
                        false;
                    l < k && k--;
                    u.shift()
                } else if (u[0] == " ") {
                    if (a(r) >= g[r]) {
                        if (!c()) break;
                        F || (E = true)
                    }
                    i[r] += " ";
                    w = false;
                    l++;
                    u.shift()
                } else {
                    v = a(r);
                    if (v + u[0].length == g[r] && u.length >= 3 && u[1] == "\n" && u[2] != " ") {
                        if (!c()) break;
                        w = E = true;
                        y = u.shift();
                        u.splice(1, 0, y, " ");
                        l < k && !F && k++
                    } else if (v + u[0].length == g[r] - 1 && u.length >= 3 && u[1] == "\n" && u[2] != " " && (!F || l >= k)) u.splice(1, 0, " "); else if (v + u[0].length <= g[r]) {
                        i[r] += u[0];
                        w = false;
                        l += u[0].length;
                        u.shift()
                    } else if (w) {
                        E = u.shift();
                        for (y = 0; y < E.length;) {
                            v = a(r);
                            w = g[r] - v;
                            i[r] += E.substr(y,
                                w);
                            y += w;
                            if (!c()) {
                                u = [];
                                break
                            }
                        }
                        E = w = true
                    } else {
                        if (!c()) break;
                        F || (E = true);
                        if (u.length >= 3 && u[1] == "\n") {
                            u[2] != " " && u.splice(1, 0, " ");
                            E = true
                        }
                        w = true
                    }
                }
                for (l = u = 0; l < i.length; l++) {
                    if (k >= u && k < u + i[l].length) {
                        D = l;
                        break
                    }
                    u += i[l].length
                }
                if (k == u) D = i.length - 1
            } else if (t != "paste") {
                E = false;
                for (l = 0; l < o; l++) {
                    u = n.charAt(l);
                    if (u == "\n" || u == "\r") {
                        if (l < q) k -= 1;
                        if (u == "\n") {
                            if (!E && !c()) break;
                            E = false
                        }
                    } else {
                        if (a(r) >= g[r]) {
                            if (!c()) break;
                            E = true
                        }
                        i[r] += u
                    }
                    if (q == l) D = r
                }
            }
            if (q == o) D = r;
            q = "";
            for (l = 0; l <= r; l++) {
                q += i[l];
                if (l != r) {
                    q += "\n";
                    if (q.length -
                        1 < k && t != "paste") k += 1
                }
            }
            u = h.value.replace(/\r/g, "");
            if (t == "keydown" && !h.Ek && d(s)) if (i.length >= g.length && D != null) {
                s = true;
                for (l = D; l < g.length; l++) if (i[l].length < g[l]) {
                    s = false;
                    break
                }
                if (s) {
                    b.preventDefault && b.preventDefault();
                    b.stopPropagation && b.stopPropagation();
                    b.cancelBubble = true;
                    b.returnValue = false;
                    return
                }
            }
            if (q != u) {
                h.value = q;
                e(h, k, k)
            }
        }
    }
};
pui.widgets.add({
    name: "text area", tag: "textarea", propertySetters: {
        "field type": function (b) {
            b.dom.value = b.evalProperty("value");
            if (b.Jd.maxLength && b.dom.maxLength != b.Jd.maxLength) b.dom.maxLength = b.Jd.maxLength;
            if (b.Jd.jA) b.dom.jA = b.Jd.jA;
            if (b.Jd.Ji) b.dom.Ji = b.Jd.Ji;
            if (b.Jd.ln) b.dom.ln = b.Jd.ln;
            Q == "dspf" && !b.design && gc(b.dom, "keydown", function (a) {
                a = a || window.event;
                if (a.keyCode == 13) a.cancelBubble = true
            });
            if (b.design) b.dom.Nv = false; else if (typeof pui["allow spellcheck"] == "boolean") b.dom.Nv = pui["allow spellcheck"]
        },
        value: function (b) {
            b.dom.value = b.value
        }
    }
});
pui.widgets.add({
    name: "textbox", tag: "input", newId: "TextBox", defaults: {"css class": "input"}, propertySetters: {
        "field type": function (b) {
            b.dom.value = b.evalProperty("value");
            if (!b.design) {
                Uc(b.properties, b.originalValue, b.dom);
                if (pui.pb && !pui.oi && b.dom.id.indexOf(".") == -1) {
                    gc(b.dom, "focus", function () {
                        Tb("ipadKeyboard").style.display = ""
                    });
                    gc(b.dom, "blur", function () {
                        Tb("ipadKeyboard").style.display = "none"
                    })
                }
                if (typeof pui["allow spellcheck"] == "boolean") b.dom.Nv = pui["allow spellcheck"];
                b.dom.calimg && pui.fv(b.dom);
                if (b.dom.getAttribute("autocomplete") == null && (Q != "genie" || !pui.J.config.zk)) {
                    b.dom.setAttribute("autocomplete", "off");
                    Q == "dspf" && b.dom.setAttribute("name", pui.yg())
                }
            }
            if (b.design) {
                b.dom.readOnly = true;
                b.dom.Nv = false
            }
        }, value: function (b) {
            if (b.dom.bx) b.dom.bx = false; else b.dom.value = b.value
        }, "input type": function (b) {
            if (!b.design) try {
                b.dom.setAttribute("type", b.value)
            } catch (a) {
            }
        }, "browser auto complete": function (b) {
            if (!b.design) {
                b.dom.setAttribute("autocomplete", b.value);
                if (Q == "dspf") b.value == "off" ? b.dom.setAttribute("name",
                    pui.yg()) : b.dom.removeAttribute("name")
            }
        }
    }
});
pui.widgets.panelStyles = {
    Simple: {
        left: 10,
        right: 10,
        top: 33,
        bottom: 9,
        background: "#bad3e9",
        textBackground: "#004eae",
        textTopPadding: "7px"
    },
    Evergreen: {
        left: 10,
        right: 10,
        top: 30,
        bottom: 30,
        background: "#edeef0",
        textBackground: "#288e28",
        textTopPadding: "7px"
    },
    Ruby: {
        left: 6,
        right: 6,
        top: 25,
        bottom: 25,
        background: "#e1e0e0",
        textBackground: "#cc3333",
        textTopPadding: "7px",
        fontSize: "14px"
    },
    Sapphire: {
        left: 9,
        right: 9,
        top: 30,
        bottom: 30,
        background: "#edeef0",
        textBackground: "#2570cb",
        textTopPadding: "7px"
    },
    Polished: {
        left: 10, right: 10,
        top: 30, bottom: 30, background: "#edeef0", textBackground: "#4f6592", textTopPadding: "7px"
    },
    Contemporary: {
        left: 6,
        right: 6,
        top: 28,
        bottom: 28,
        background: "#a7a9ac",
        textBackground: "#387adc",
        textTopPadding: "7px"
    },
    Slate: {
        left: 11,
        right: 11,
        top: 30,
        bottom: 30,
        background: "#a5a7ac",
        textBackground: "#3568ce",
        textTopPadding: "7px"
    },
    Smoke: {
        left: 11,
        right: 11,
        top: 34,
        bottom: 34,
        background: "#7a7a7b",
        textBackground: "#7479a0",
        textTopPadding: "10px"
    },
    Pine: {
        left: 6, right: 6, top: 25, bottom: 25, background: "#d2d2d2", textBackground: "#288e28",
        textTopPadding: "7px"
    },
    "Ice Blue": {
        left: 10,
        right: 10,
        top: 13,
        bottom: 13,
        background: "#92c0f4",
        textBackground: "#92c0f4",
        textTopPadding: "7px",
        noTitle: true
    },
    Glass: {
        left: 6,
        right: 6,
        top: 11,
        bottom: 11,
        background: "#c9dff3",
        textBackground: "#c9dff3",
        textTopPadding: "7px",
        noTitle: true
    },
    Navy: {
        left: 11,
        right: 11,
        top: 24,
        bottom: 24,
        background: "#1c325f",
        textBackground: "#1c325f",
        textTopPadding: "7px",
        noTitle: true
    },
    "Steel Blue": {
        left: 7, right: 7, top: 9, bottom: 9, background: "#5d7ac5", textBackground: "#5d7ac5", textTopPadding: "7px",
        noTitle: true
    },
    Harvest: {
        left: 8,
        right: 8,
        top: 18,
        bottom: 18,
        background: "#e68b2c",
        textBackground: "#e68b2c",
        textTopPadding: "7px",
        noTitle: true
    },
    "Professional Dialog": {
        left: 8,
        right: 8,
        top: 33,
        bottom: 33,
        background: "#d7e5f7",
        textBackground: "#0055e5",
        textTopPadding: "7px",
        width: 400,
        height: 200,
        dialog: true
    },
    "Classic Dialog": {
        left: 10,
        right: 10,
        top: 34,
        bottom: 34,
        background: "#ffffff",
        textBackground: "#0d89b8",
        textTopPadding: "7px",
        width: 400,
        height: 200,
        dialog: true
    },
    "Simple Dialog": {
        left: 4, right: 4, top: 30, bottom: 30, background: "#ebf0f5",
        textBackground: "#bad0ee", textTopPadding: "7px", width: 400, height: 200, dialog: true
    },
    "Polished Dialog": {
        left: 10,
        right: 10,
        top: 44,
        bottom: 44,
        background: "#ffffff",
        textBackground: "#f1f3f3",
        textTopPadding: "7px",
        width: 400,
        height: 200,
        dialog: true
    },
    "Modern Dialog": {
        left: 13,
        right: 13,
        top: 70,
        bottom: 70,
        background: "#e8e7e2",
        textBackground: "#7d9ccd",
        textTopPadding: "14px",
        width: 400,
        height: 300,
        dialog: true
    },
    "Glass Dialog": {
        left: 7, right: 7, top: 44, bottom: 44, background: "#ffffff", textBackground: "#d7e5f7", textTopPadding: "7px",
        width: 400, height: 250, dialog: true
    },
    "Crimson Dialog": {
        left: 2,
        right: 2,
        top: 32,
        bottom: 32,
        background: "#ffffff",
        textBackground: "#b83c3d",
        textTopPadding: "7px",
        width: 400,
        height: 200,
        dialog: true
    }
};
pui.widgets.Em = 200;
pui.widgets.Dm = 100;
pui.widgets.getPanelProxy = function (b) {
    b = b["panel style"];
    var a = pui.widgets.panelStyles[b], c = {};
    c.dom = document.createElement("div");
    c.dom.style.position = "relative";
    c.dom.style.width = pui.widgets.Em + "px";
    if (a.width != null) c.dom.style.width = a.width + "px";
    c.dom.style.height = pui.widgets.Dm + "px";
    if (a.height != null) c.dom.style.height = a.height + "px";
    c.Ej = true;
    c.properties = {};
    c.properties.width = pui.widgets.Em + "px";
    if (a.width != null) c.properties.width = a.width;
    c.properties.height = pui.widgets.Dm + "px";
    if (a.height !=
        null) c.properties.height = a.height;
    c.properties.value = "Panel Title";
    if (a.dialog == true) c.properties.value = "Dialog Title";
    if (a.noTitle == true) c.properties.value = "";
    c.properties["panel style"] = b;
    c.evalProperty = function (d) {
        return c.properties[d]
    };
    pui.widgets.panel.propertySetters["field type"](c);
    if (a.textColor != null) c.dom.panel.z.style.color = a.textColor;
    if (a.textAlign != null) c.dom.panel.z.style.textAlign = a.textAlign;
    if (a.fontSize != null) c.dom.panel.z.style.fontSize = a.fontSize;
    c.dom.style.color = c.dom.panel.z.style.color;
    c.dom.style.textAlign = c.dom.panel.z.style.textAlign;
    c.dom.style.fontSize = c.dom.panel.z.style.fontSize;
    return c.dom
};
pui.widgets.Qq = function (b, a, c, d, e) {
    if (typeof c == "string") {
        if (c != "" && !isNaN(c)) c += "px";
        c = c.length >= 3 && c.substr(c.length - 2) == "px" ? parseInt(c) : b.Gb.parentNode.offsetWidth
    }
    if (typeof d == "string") {
        if (d != "" && !isNaN(d)) d += "px";
        d = d.length >= 3 && d.substr(d.length - 2) == "px" ? parseInt(d) : b.Gb.parentNode.offsetHeight
    }
    if (typeof c != "number") c = parseInt(c);
    if (isNaN(c)) c = pui.widgets.Em;
    if (typeof d != "number") d = parseInt(d);
    if (isNaN(d)) d = pui.widgets.Dm;
    var f = 0, h = false;
    if (typeof e != "undefined" && typeof e.design != "undefined") h =
        e.design;
    if (pui.is_touch && !pui.is_mouse_capable && !h) f = 1;
    h = false;
    if (d < a.top + a.bottom) {
        d = a.top + a.bottom;
        b.z.parentNode.style.height = d + "px";
        h = true
    }
    if (c < a.left + a.right) {
        c = a.left + a.right;
        b.z.parentNode.style.width = c + "px";
        h = true
    }
    h && e != null && e.design == true && e.c.designer.selection.Fb();
    b.Gb.style.width = a.left + "px";
    b.Gb.style.height = a.top + "px";
    b.Lc.style.left = a.left - f + "px";
    b.Lc.style.height = a.top + "px";
    b.Lc.style.width = c - a.left - a.right + f * 2 + "px";
    b.hc.style.left = c - a.right + "px";
    b.hc.style.height = a.top + "px";
    b.hc.style.width =
        a.right + "px";
    b.Cc.style.top = a.top - f + "px";
    b.Cc.style.width = a.left + "px";
    b.Cc.style.height = d - a.top - a.bottom + f * 2 + "px";
    b.Id.style.left = a.left - f + "px";
    b.Id.style.top = a.top - f + "px";
    b.Id.style.width = c - a.left - a.right + f * 2 + "px";
    b.Id.style.height = d - a.top - a.bottom + f * 2 + "px";
    b.Hc.style.left = c - a.right + "px";
    b.Hc.style.top = a.top - f + "px";
    b.Hc.style.width = a.right + "px";
    b.Hc.style.height = d - a.top - a.bottom + f * 2 + "px";
    b.xc.style.top = d - a.bottom + "px";
    b.xc.style.width = a.left + "px";
    b.xc.style.height = a.bottom + "px";
    b.yc.style.left = a.left -
        f + "px";
    b.yc.style.top = d - a.bottom + "px";
    b.yc.style.height = a.bottom + "px";
    b.yc.style.width = c - a.left - a.right + f * 2 + "px";
    b.zc.style.left = c - a.right + "px";
    b.zc.style.top = d - a.bottom + "px";
    b.zc.style.height = a.bottom + "px";
    b.zc.style.width = a.right + "px";
    b.z.style.left = a.left + "px";
    b.z.style.top = "0px";
    b.z.style.width = c - a.left - a.right + "px";
    b.z.style.height = a.top < 15 ? "15px" : a.top + "px"
};
pui.widgets.add({
    name: "panel",
    newValue: "Panel Title",
    oe: false,
    rf: true,
    b: true,
    defaults: {width: pui.widgets.Em + "px", height: pui.widgets.Dm + "px", "panel style": "Simple", "z index": "8"},
    propertySetters: {
        "field type": function (b) {
            b.dom.sizeMe = function () {
                var d = b.properties["panel style"];
                d = pui.widgets.panelStyles[d];
                if (d == null) {
                    d = pui.widgets.Rk()[0];
                    d = pui.widgets.panelStyles[d]
                }
                pui.widgets.Qq(b.dom.panel, d, b.dom.offsetWidth, b.dom.offsetHeight, b)
            };
            if (b.properties.color != null) b.dom.style.color = b.properties.color;
            b.dom.innerHTML = "";
            if (typeof b.dom.style.MozUserSelect != "undefined") b.dom.style.MozUserSelect = "none";
            var a = {};
            a.Gb = document.createElement("div");
            a.Lc = document.createElement("div");
            a.hc = document.createElement("div");
            a.Cc = document.createElement("div");
            a.Id = document.createElement("div");
            a.Hc = document.createElement("div");
            a.xc = document.createElement("div");
            a.yc = document.createElement("div");
            a.zc = document.createElement("div");
            a.z = document.createElement("div");
            a.Gb.style.position = "absolute";
            a.Gb.style.padding =
                "0px";
            a.Gb.style.margin = "0px";
            a.Lc.style.position = "absolute";
            a.Lc.style.padding = "0px";
            a.Lc.style.margin = "0px";
            a.hc.style.position = "absolute";
            a.hc.style.padding = "0px";
            a.hc.style.margin = "0px";
            a.Cc.style.position = "absolute";
            a.Cc.style.padding = "0px";
            a.Cc.style.margin = "0px";
            a.Id.style.position = "absolute";
            a.Id.style.padding = "0px";
            a.Id.style.margin = "0px";
            a.Id.className = "content-area";
            a.Hc.style.position = "absolute";
            a.Hc.style.padding = "0px";
            a.Hc.style.margin = "0px";
            a.xc.style.position = "absolute";
            a.xc.style.padding =
                "0px";
            a.xc.style.margin = "0px";
            a.yc.style.position = "absolute";
            a.yc.style.padding = "0px";
            a.yc.style.margin = "0px";
            a.zc.style.position = "absolute";
            a.zc.style.padding = "0px";
            a.zc.style.margin = "0px";
            a.Gb.style.top = "0px";
            a.Gb.style.left = "0px";
            a.Gb.style.backgroundRepeat = "no-repeat";
            a.Lc.style.top = "0px";
            a.Lc.style.backgroundRepeat = "repeat-x";
            a.hc.style.top = "0px";
            a.hc.style.backgroundRepeat = "no-repeat";
            a.Cc.style.left = "0px";
            a.xc.style.left = "0px";
            a.xc.style.backgroundRepeat = "no-repeat";
            a.yc.style.backgroundRepeat =
                "repeat-x";
            a.zc.style.backgroundRepeat = "no-repeat";
            a.Cc.style.backgroundRepeat = "repeat-y";
            a.Hc.style.backgroundRepeat = "repeat-y";
            a.z.style.position = "absolute";
            a.z.style.verticalAlign = "middle";
            a.z.style.display = "";
            if (!pui.pb) a.z.style.cursor = "default";
            a.z.style.overflow = "hidden";
            a.z.style.IK = "rgba(0,0,0,0)";
            if (b.properties.color != null) a.z.style.color = b.properties.color;
            if (b.properties["text align"] != null) a.z.style.textAlign = b.properties["text align"];
            if (b.properties["font size"] != null) a.z.style.fontSize =
                b.properties["font size"];
            b.dom.style.fontFamily = a.z.style.fontFamily;
            b.dom.style.color = a.z.style.color;
            b.dom.style.fontSize = a.z.style.fontSize;
            b.dom.style.fontWeight = a.z.style.fontWeight;
            b.dom.style.textAlign = a.z.style.textAlign;
            b.dom.appendChild(a.Gb);
            b.dom.appendChild(a.Lc);
            b.dom.appendChild(a.hc);
            b.dom.appendChild(a.Cc);
            b.dom.appendChild(a.Id);
            b.dom.appendChild(a.Hc);
            b.dom.appendChild(a.xc);
            b.dom.appendChild(a.yc);
            b.dom.appendChild(a.zc);
            b.dom.appendChild(a.z);
            var c = b.dom.parentNode;
            if (!b.design &&
                c != null && c.ze == true) {
                pui.rd({wc: [a.z, a.Gb, a.hc], move: c, ex: "click"});
                gc(a.z, "touchstart", function (d) {
                    if (d.touches.length == 1) {
                        d = d.touches[0];
                        c.R = {};
                        c.R.startX = d.pageX;
                        c.R.startY = d.pageY;
                        c.R.Jc = parseInt(c.style.left);
                        c.R.Rb = parseInt(c.style.top)
                    }
                });
                gc(a.z, "touchmove", function (d) {
                    if (d.touches.length == 1) {
                        var e = d.touches[0], f = e.pageY;
                        c.style.left = c.R.Jc - c.R.startX + e.pageX + "px";
                        c.style.top = c.R.Rb - c.R.startY + f + "px";
                        d.preventDefault()
                    }
                });
                a.z.style.cursor = "move";
                a.Gb.style.cursor = "move";
                a.hc.style.cursor = "move"
            }
            b.dom.panel =
                a;
            a = b.value;
            b.value = b.properties["panel style"];
            pui.widgets.panel.propertySetters["panel style"](b);
            b.value = a;
            b.dom.panel.z.innerHTML = b.evalProperty("value")
        }, "panel style": function (b) {
            var a = b.value, c = pui.widgets.panelStyles[a];
            if (c == null) {
                a = pui.widgets.Rk()[0];
                c = pui.widgets.panelStyles[a]
            }
            var d = pui.normalizeURL("/profoundui/proddata/images/panels/" + a + "/");
            b.dom.panel.mM = a;
            var e = b.dom.panel;
            e.Gb.style.backgroundImage = "url('" + d + "topleft.png')";
            e.Lc.style.backgroundImage = "url('" + d + "topmiddle.png')";
            e.hc.style.backgroundImage = "url('" + d + "topright.png')";
            e.Cc.style.backgroundImage = "url('" + d + "left.png')";
            e.Id.style.backgroundColor = c.background;
            e.Hc.style.backgroundImage = "url('" + d + "right.png')";
            e.xc.style.backgroundImage = "url('" + d + "bottomleft.png')";
            e.yc.style.backgroundImage = "url('" + d + "bottommiddle.png')";
            e.zc.style.backgroundImage = "url('" + d + "bottomright.png')";
            e.z.style.paddingTop = c.textTopPadding;
            e.z.className = "panel " + a.split(" ").join("-").toLowerCase() + "-panel";
            pui.widgets.Qq(e, c, b.properties.width,
                b.properties.height)
        }, value: function (b) {
            b.dom.panel.z.innerHTML = b.value
        }, width: function (b) {
            b.dom.style.width = pui.cn(b.value) ? b.value + "px" : b.value;
            var a = b.properties["panel style"];
            a = pui.widgets.panelStyles[a];
            if (a == null) {
                a = pui.widgets.Rk()[0];
                a = pui.widgets.panelStyles[a]
            }
            pui.widgets.Qq(b.dom.panel, a, b.value, b.properties.height, b)
        }, height: function (b) {
            b.dom.style.height = pui.cn(b.value) ? b.value + "px" : b.value;
            var a = b.properties["panel style"];
            a = pui.widgets.panelStyles[a];
            if (a == null) {
                a = pui.widgets.Rk()[0];
                a = pui.widgets.panelStyles[a]
            }
            pui.widgets.Qq(b.dom.panel, a, b.properties.width, b.value, b)
        }, color: function (b) {
            b.dom.panel.z.style.color = b.value;
            b.dom.style.color = b.dom.panel.z.style.color
        }, "font family": function (b) {
            b.dom.panel.z.style.fontFamily = b.value;
            b.dom.style.fontFamily = b.dom.panel.z.style.fontFamily
        }, "font size": function (b) {
            b.dom.panel.z.style.fontSize = b.value;
            b.dom.style.fontSize = b.dom.panel.z.style.fontSize
        }, "font style": function (b) {
            b.dom.panel.z.style.fontStyle = b.value
        }, "font variant": function (b) {
            b.dom.panel.z.style.fontVariant =
                b.value
        }, "font weight": function (b) {
            b.dom.panel.z.style.fontWeight = b.value;
            b.dom.style.fontWeight = b.dom.panel.z.style.fontWeight
        }, "letter spacing": function (b) {
            b.dom.panel.z.style.letterSpacing = b.value
        }, "text align": function (b) {
            b.dom.panel.z.style.textAlign = b.value
        }, "text decoration": function (b) {
            b.dom.panel.z.style.textDecoration = b.value
        }, "text transform": function (b) {
            b.dom.panel.z.style.textTransform = b.value
        }, "word spacing": function (b) {
            b.dom.panel.z.style.wordSpacing = b.value
        }
    }
});
pui.layout = {};
pui.layout.template = {};
pui.layout.template.tF = function (b) {
    var a = b.properties, c = b.Kn, d = b.dom;
    if (b.Un) return pui.layout.nq([{
        name: "has header",
        choices: ["true", "false"],
        help: pui.a("theme", "Determines whether the panel has a header.")
    }, {
        name: "header height",
        format: "number",
        help: pui.a("theme", "Specifies the height of the panel header.")
    }, {
        name: "header text",
        help: pui.a("placeholder", "Specifies the text that will appear in the panel header."),
        translate: true
    }, {
        name: "header theme",
        choices: ["A - Black", "B - Blue", "C - Gray", "D - Light Gray",
            "E - Yellow", "F - Green", "G - Red", "Other..."],
        help: pui.a("theme", "Specifies the jQuery Mobile theme to use for the panel header. The theme is associated with a set of cascading style sheet rules.", ["other"], "When you enter a custom value, a CSS class is add to the body of the panel in the form of <code>ui-btn-up-YourCustomValue</code>, where YourCustomValue is the exact text that was entered, including special characters, such as ' ', '-', and '_', and regardless of their validity in a CSS class name. This will allow you to customize the styling of the header using that CSS class name.")
    },
        {
            name: "body theme",
            choices: ["A - Black", "B - Blue", "C - Gray", "D - Light Gray", "E - Yellow", "F - Green", "G - Red", "Other..."],
            help: pui.a("theme", "Specifies the jQuery Mobile theme to use for the panel body. The theme is associated with a set of cascading style sheet rules.", ["other"], "When you enter a custom value, a CSS class is add to the body of the panel in the form of <code>ui-btn-up-YourCustomValue</code>, where YourCustomValue is the exact text that was entered, including special characters, such as ' ', '-', and '_', and regardless of their validity in a CSS class name. This will allow you to customize the styling of the body using that CSS class name.")
        },
        {
            name: "straight edge",
            choices: ["all", "left", "right", "top", "bottom"],
            help: pui.a("theme", "Determines which parts of the element will have a straight edge instead of rounded corners.")
        }, pui.layout.sb("color"), pui.layout.sb("font family"), pui.layout.sb("font size"), pui.layout.sb("font style"), pui.layout.sb("font weight"), pui.layout.sb("text align"), pui.layout.sb("text decoration"), pui.layout.sb("text transform")]);
    var e;
    e = d != null ? d.cloneNode(false) : document.createElement("div");
    e.innerHTML = "";
    b = new pui.Tr;
    b.hi = true;
    b.b = e;
    b.init();
    e.panel = b;
    e.sizeMe = function () {
        e.panel.resize()
    };
    d = a["header text"];
    d != null && b.setText(d);
    d = a["header theme"];
    d != null && b.Pi(d);
    d = a["body theme"];
    d != null && b.Ni(d);
    b.Ba(a["straight edge"]);
    d = a["has header"];
    d = d !== "false" && d !== false;
    b.ho(d);
    d = a["header height"];
    d != null && b.jo(d);
    b.Dh(a);
    a = a.height;
    if (a == null) a = "300px";
    b.setHeight(a);
    if (c) e.style.position = "relative";
    return e
};
pui.qC = function () {
    function b() {
        var t = R.designer.$d(s.b), u = t.properties["section names"];
        if (!pui.Ia(u)) {
            if (pui.f(u)) {
                var w = u.designValue;
                if (w == null || w == "") w = q;
                w = pui.Ta(w);
                w.push("Section " + (w.length + 1));
                u.designValue = w.join(",")
            } else {
                if (u == "" || u == null) u = q;
                u = pui.Ta(u);
                u.push("Section " + (u.length + 1));
                u = u.join(",")
            }
            c(t, u)
        }
    }

    function a() {
        var t = R.designer.$d(s.b), u = t.properties["section names"];
        if (!pui.Ia(u)) {
            if (pui.f(u)) {
                var w = u.designValue;
                if (w == null || w == "") w = q;
                w = pui.Ta(w);
                w.pop();
                u.designValue = w.join(",")
            } else {
                if (u ==
                    "" || u == null) u = q;
                u = pui.Ta(u);
                u.pop();
                u = u.join(",")
            }
            c(t, u)
        }
    }

    function c(t, u) {
        var w = s.b.ff["section names"];
        t.designer.n.start("Add New Section");
        t.designer.n.add(t, w.name);
        uc(w, t.properties, t.dom, u, true, t, null);
        t.m["section names"] = true;
        t.ta = true;
        t.designer.X[t.designer.i.l] = true;
        t.designer.selection.clear();
        t.designer.selection.add(t);
        t.designer.k.refresh()
    }

    this.b = null;
    this.designMode = this.Ue = false;
    var d = [], e = [], f = [], h = [], g = "none", l = "b", n = "c", o = -1, i = false, r = null, k = null,
        q = pui.getLanguageText("runtimeText",
            "section") + " 1," + pui.getLanguageText("runtimeText", "section") + " 2," + pui.getLanguageText("runtimeText", "section") + " 3",
        s = this;
    this.init = function () {
        s.b.style.overflow = "hidden"
    };
    this.XJ = function (t) {
        if (t == null || t == "") t = q; else if (pui.f(t)) t = pui.Ta(t.designValue).length == 0 ? q : t.designValue;
        t = pui.Ta(t);
        if (t.length != d.length) {
            s.b.innerHTML = "";
            d = [];
            e = [];
            f = [];
            h = [];
            for (var u = 0; u < t.length; u++) {
                var w = document.createElement("div");
                w.style.width = "100%";
                w.style.padding = "0";
                w.sJ = u;
                w.onclick = function (F) {
                    F = vb(F);
                    for (var D =
                        null; D == null && F != null;) {
                        D = F.sJ;
                        F = F.parentNode
                    }
                    if (D != null) if (o == D) {
                        D = -1;
                        i && !s.designMode && s.Lk(D)
                    } else {
                        if (s.b.onsectionclickevent != null) if (s.b.onsectionclickevent(D) == false) return;
                        s.Lk(D)
                    }
                };
                var v = document.createElement("div");
                v.style.width = "100%";
                v.style.height = "175px";
                v.style.padding = "0";
                if (u < t.length - 1) v.style.overflow = "hidden";
                var E = new pui.Sr;
                E.b = w;
                E.Ue = s.Ue;
                E.init();
                E.Vf(l);
                E.setIcon("plus");
                E.kr("left");
                var y = new pui.Ur;
                y.type = "body";
                y.hi = true;
                y.b = v;
                y.init();
                y.Vf(n);
                y.setHeight("100%");
                s.b.appendChild(w);
                s.b.appendChild(v);
                d.push(w);
                e.push(v);
                f.push(E);
                h.push(y)
            }
        }
        for (u = 0; u < t.length; u++) f[u].setText(t[u]);
        s.Lk(0);
        if (s.designMode) {
            if (r == null) {
                r = S.Fk("plus", pui.getLanguageText("runtimeText", "add x", [pui.getLanguageText("runtimeText", "section")]), s.b);
                r.style.right = "2px";
                r.style.bottom = "2px";
                r.onclick = b
            } else r.parentNode == null && s.b.appendChild(r);
            if (t.length > 1) if (k == null) {
                k = S.Fk("minus", pui.getLanguageText("runtimeText", "delete x", [pui.getLanguageText("runtimeText", "section")]), s.b);
                k.style.right = "2px";
                k.style.bottom = "16px";
                k.onclick = a
            } else k.parentNode == null && s.b.appendChild(k)
        }
    };
    this.Lk = function (t) {
        for (var u = 0; u < e.length; u++) {
            var w = e[u], v = f[u];
            if (u == t) {
                v.setIcon("minus");
                v.setDisabled(!i);
                w.style.display = "";
                s.b.Fa = t;
                if (s.b.layout != null) {
                    s.designMode || s.b.layout.Nq([t]);
                    s.b.layout.cA()
                }
            } else {
                v.setIcon("plus");
                v.setDisabled(false);
                w.style.display = "none"
            }
        }
        s.Ba(g);
        o = t;
        s.resize()
    };
    this.vJ = function (t) {
        i = t == "true" || t == true;
        s.Lk(o)
    };
    this.Ba = function (t) {
        if (!(t == null || pui.f(t))) {
            g = t;
            var u = f.length;
            if (!(u <=
                0)) {
                for (var w = 0; w < u; w++) {
                    f[w].Ba("all");
                    h[w].Ba("all")
                }
                w = f[0];
                var v = h[u - 1];
                if (e[u - 1].style.display == "none") v = f[u - 1];
                if (w == v) w.Ba(t); else switch (t) {
                    case "left":
                        w.Ba("left");
                        w.hg().style.borderBottomRightRadius = "0";
                        w.ah().style.borderBottomRightRadius = "0";
                        v.Ba("left");
                        v.hg().style.borderTopRightRadius = "0";
                        v.ah().style.borderTopRightRadius = "0";
                        break;
                    case "right":
                        w.Ba("right");
                        w.hg().style.borderBottomLeftRadius = "0";
                        w.ah().style.borderBottomLeftRadius = "0";
                        v.Ba("right");
                        v.hg().style.borderTopLeftRadius =
                            "0";
                        v.ah().style.borderTopLeftRadius = "0";
                        break;
                    case "top":
                        w.Ba("all");
                        v.Ba("top");
                        break;
                    case "bottom":
                        w.Ba("bottom");
                        v.Ba("all");
                        break;
                    case "all":
                        w.Ba("all");
                        v.Ba("all");
                        break;
                    default:
                        w.Ba("bottom");
                        v.Ba("top");
                        break
                }
            }
        }
    };
    this.setStyle = function (t, u) {
        for (var w = 0; w < f.length; w++) f[w].setStyle(t, u)
    };
    this.Dh = function (t) {
        for (var u = 0; u < f.length; u++) f[u].Dh(t)
    };
    this.$j = function (t) {
        for (var u = 0; u < f.length; u++) f[u].$j(t);
        s.resize()
    };
    this.Pi = function (t) {
        for (var u = 0; u < f.length; u++) f[u].Vf(t);
        l = t
    };
    this.Ni = function (t) {
        for (var u =
            0; u < h.length; u++) h[u].Vf(t);
        n = t
    };
    this.resize = function (t) {
        if (typeof t == "string") if (t.length < 3 || t.substr(t.length - 2, 2) != "px") t = null;
        t = t != null && !isNaN(parseInt(t)) ? parseInt(t) : s.b.offsetHeight;
        var u = 0;
        if (d.length > 0) u = d[0].offsetHeight;
        if (u == 0) u = 42;
        t = t - u * d.length;
        if (t < 0) t = 0;
        u = e[o];
        if (u != null) u.style.height = t + "px";
        s.b.layout != null && s.b.layout.sr()
    };
    this.setHeight = function (t) {
        s.b.style.height = t;
        s.resize(t)
    };
    this.Ve = function () {
        return [o]
    }
};
pui.layout.template.WD = function (b) {
    var a = b.properties, c = b.designMode, d = b.Kn, e = b.dom;
    if (b.Un) return pui.layout.nq([{
        name: "section names",
        type: "list",
        help: pui.a("placeholder", "Specifies a comma separate list of section names for the accordion."),
        translate: true
    }, {
        name: "active section",
        format: "number",
        help: pui.a("0", "This property specifies the initial active section on an Accordion Layout. Each section within an Accordion is identified by a sequential index, starting with 0 for the first section, 1 for the second section, and so on. When this property is bound to a field, the currently-active section will be included in the response when the screen is submitted to the server-side program.")
    },
        {
            name: "header theme",
            choices: ["A - Black", "B - Blue", "C - Gray", "D - Light Gray", "E - Yellow", "F - Green", "G - Red", "Other..."],
            help: pui.a("theme", "Specifies the jQuery Mobile theme to use for the accordion headers.  The theme is associated with a set of cascading style sheet rules.", ["other"], "When you enter a custom value, a CSS class is add to the header the panel in the form of <code>ui-btn-up-YourCustomValue</code>, where YourCustomValue is the exact text that was entered, including special characters, such as ' ', '-', and '_', and regardless of their validity in a CSS class name. This will allow you to customize the styling of the header using that CSS class name.")
        },
        {
            name: "body theme",
            choices: ["A - Black", "B - Blue", "C - Gray", "D - Light Gray", "E - Yellow", "F - Green", "G - Red", "Other..."],
            help: pui.a("theme", "Specifies the jQuery Mobile theme to use for the content body of the accordion.  The theme is associated with a set of cascading style sheet rules.", ["other"], "When you enter a custom value, a CSS class is add to the body of the panel in the form of <code>ui-btn-up-YourCustomValue</code>, where YourCustomValue is the exact text that was entered, including special characters, such as ' ', '-', and '_', and regardless of their validity in a CSS class name. This will allow you to customize the styling of the body using that CSS class name.")
        },
        {
            name: "small sections",
            choices: ["true", "false"],
            help: pui.a("false", "This property uses CSS to provide a smaller, more compact version of the header sections.")
        }, {
            name: "allow collapse",
            choices: ["true", "false"],
            help: pui.a("true", "Determines if the accordion can be fully collapsed.")
        }, {
            name: "straight edge",
            choices: ["all", "left", "right", "top", "bottom"],
            help: pui.a("blank", "Determines which parts of the element will have a straight edge instead of rounded corners.")
        }, pui.layout.sb("color"), pui.layout.sb("font family"),
        pui.layout.sb("font size"), pui.layout.sb("font style"), pui.layout.sb("font weight"), pui.layout.sb("text align"), pui.layout.sb("text decoration"), pui.layout.sb("text transform"), {
            name: "onsectionclick",
            type: "js",
            help: pui.a("blank", 'Initiates a client-side script when an accordion section is expanded.  The section index is passed to the event as a parameter named "section".  If the client-side script evaluates to false, the section will not be expanded.')
        }, {
            name: "lazy load", choices: ["true", "false"],
            help: pui.a("false", "When true, render contents of section after the user expands it instead of rendering everything immediately (which can be slower).")
        }, {
            name: "onlazyload",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script after a container is rendered lazily. (See lazy load property.)")
        }]);
    var f;
    f = e != null ? e.cloneNode(false) : document.createElement("div");
    f.innerHTML = "";
    b = new pui.qC;
    if (d) b.Ue = true;
    b.b = f;
    b.designMode = c;
    b.init();
    f.Ef = b;
    f.sizeMe = function () {
        f.Ef.resize()
    };
    b.XJ(a["section names"]);
    e = a["header theme"];
    e != null && b.Pi(e);
    e = a["body theme"];
    e != null && b.Ni(e);
    b.Ba(a["straight edge"]);
    e = a["small sections"];
    e = e === "true" || e === true;
    b.$j(e);
    b.Dh(a);
    e = a.height;
    if (e == null) e = "300px";
    b.setHeight(e);
    if (!c) {
        a = a["active section"];
        if (a != null) {
            a = Number(a);
            !isNaN(a) && a != 0 && b.Lk(a)
        }
    }
    if (d) f.style.position = "relative";
    return f
};
pui.cj = function () {
    function b(k, q) {
        var s = k + 1 + (typeof f.nk[k] === "string" && f.nk[k].length > 0 ? " (" + f.nk[k] + ")" : "");
        if (f.Fq) q.innerHTML = s; else f.designMode && q.setAttribute("containername", s)
    }

    function a() {
        f.nb = document.createElement("style");
        f.nb.type = "text/css";
        if (f.nb.styleSheet) f.nb.cssText = o; else f.nb.appendChild(document.createTextNode(o));
        f.vc.appendChild(f.nb)
    }

    function c() {
        l++;
        if (d().offsetWidth > 0) f.nb.sheet != null && e(); else l < g ? setTimeout(c, 1) : console.log("Timed out waiting for parent width > 0.")
    }

    function d() {
        var k = f.b;
        if (f.designMode && h) k = Tb(Ca);
        return k
    }

    function e() {
        function k(E) {
            for (var y, F = 0; F < E.cssRules.length; F++) {
                var D = E.cssRules[F];
                if (D.type == D.SUPPORTS_RULE) {
                    v += "@supports " + D.conditionText + "{";
                    k(D);
                    v += "}"
                } else if (D.type == D.MEDIA_RULE) {
                    y = D.conditionText || D.media.mediaText;
                    var B = y.match(s);
                    if (B != null) {
                        B = B[2].match(t);
                        var I = true;
                        if (B != null) for (y = 0; y < B.length; y++) {
                            var z = B[y].match(u), H = B[y].match(w);
                            if (z != null) {
                                H = z[2];
                                var J = parseInt(z[3], 10);
                                if (z[1] == "min") {
                                    if (H == "width" && q.offsetWidth <
                                        J || H == "height" && q.offsetHeight < J) I = false
                                } else if (H == "width" && q.offsetWidth > J || H == "height" && q.offsetHeight > J) I = false
                            } else if (H != null) if (H[1] == "portrait" && q.offsetHeight < q.offsetWidth) I = false; else if (H[1] == "landscape" && q.offsetHeight > q.offsetWidth) I = false
                        }
                        I && k(D)
                    } else console.log("Unsupported media rule:", y)
                } else if (D.type == D.STYLE_RULE) {
                    B = D.selectorText + "{";
                    for (y = 0; y < D.style.length; y++) {
                        I = D.style[y];
                        B += I + ":" + D.style[I] + "; "
                    }
                    B += "} ";
                    v += B
                }
            }
        }

        var q = d(), s = /^(screen|all)\s*(.*)$/i, t = /and\s*\([^)]+\)/gi,
            u = /^and\s*\(\s*(min|max)-(width|height)\s*:\s*(\d+)\s*px\s*\)$/i,
            w = /^and\s*\(\s*orientation\s*:\s*(portrait|landscape)\s*\)/i, v = "";
        k(f.nb.sheet);
        f.nb.textContent = v
    }

    this.b = null;
    this.Zl = "puiresp";
    this.Fq = this.designMode = this.Ue = false;
    this.pk = 0;
    this.vc = this.nb = null;
    this.nk = [];
    var f = this, h = true, g = 500, l = 0, n = 0, o, i, r = pui.gJ++;
    this.Gl = function () {
        f.b.setAttribute("puirespbg", r);
        f.mo()
    };
    this.destroy = function () {
        if (f != null) {
            f.nb = null;
            f = f.vc = null
        }
    };
    this.Dv = function (k) {
        if (k == null || k === "") k = 8; else if (pui.f(k)) k =
            k.designValue != null && typeof k.designValue == "number" ? k.designValue : 8;
        if (f.vc == null || k != f.pk) {
            f.pk = k;
            f.b.innerHTML = "";
            f.vc = document.createElement("div");
            f.vc.className = f.Zl;
            f.b.appendChild(f.vc);
            for (k = 0; k < f.pk; k++) {
                var q = document.createElement("div");
                q.setAttribute("container", "true");
                b(k, q);
                f.vc.appendChild(q)
            }
        }
        f.designMode && !f.Ue && typeof f.Mw == "function" && f.Mw()
    };
    this.aK = function (k) {
        k == null || k === "" || pui.f(k) || (h = k)
    };
    this.Rn = function () {
        return h && f.designMode
    };
    this.mo = function (k) {
        if (k == null) k = i || "";
        else if (pui.f(k)) k = k.designValue != null && typeof k.designValue == "string" ? k.designValue : "@media screen { #_id_ > .puiresp { display:grid; } }";
        i = k;
        o = !f.Ue && f.b.id.length > 0 ? k.replace(/#_id_/g, "#" + f.b.id) : f.Ue ? k.replace(/#_id_ >/g, ".x-dd-drag-proxy") : k.replace(/#_id_/g, 'div[puirespbg="' + r + '"]');
        if (f.nb != null) {
            f.vc.contains(f.nb) && f.vc.removeChild(f.nb);
            f.nb = null
        }
        if (f.Fq) a(); else if (o != "") {
            a();
            if (!h || f.designMode) {
                l = 0;
                clearTimeout(n);
                n = setTimeout(c, 1)
            }
        }
    };
    this.resize = function () {
        if ((!h || f.designMode) && o !=
            "") {
            f.nb.textContent = o;
            e()
        }
        f.b.layout != null && f.b.layout.sr()
    };
    this.zv = function (k) {
        f.nk = [];
        if (k != null && k != "") if (pui.f(k)) {
            k = pui.Ta(k.designValue);
            f.nk = k.length == 0 ? [] : k
        } else f.nk = k instanceof Array ? k : pui.Ta(k);
        if ((f.Fq || f.designMode) && f.vc != null) for (k = 0; k < f.vc.childNodes.length; k++) {
            var q = f.vc.childNodes[k];
            q.tagName === "DIV" && b(k, q)
        }
    };
    this.Gn = function (k) {
        function q(E, y) {
            var F = y.match(/^repeat\(\s*(\d+|auto-fill|auto-fit),\s*(.+)\s*\)$/i);
            if (F != null) {
                var D = parseInt(F[1], 10);
                if (!isNaN(D)) for (var B = 0; B <
                D; B++) E.push(F[2])
            } else E.push(y)
        }

        for (var s = [], t = 0, u = 0, w = 0; w < k.length; w++) {
            var v = k.charAt(w);
            if (u == 0) if (v == " ") {
                q(s, k.substring(t, w));
                t = w + 1
            } else if (w + 1 == k.length) q(s, k.substring(t, w + 1)); else v == "(" && u++; else if (v == "(") u++; else if (v == ")") {
                u--;
                w + 1 == k.length && q(s, k.substring(t, w + 1))
            }
        }
        return s
    }
};
pui.layout.template.fJ = function (b) {
    var a = b.properties, c = b.designMode, d = b.Kn, e = b.dom;
    if (b.Un) return pui.layout.nq([{
        name: "layout items",
        help: pui.a("5", "The number of containers for this layout.", ["other"]),
        choices: ["1", "2", "3", "4", "5", "6", "Other..."]
    }, {
        name: "style rules",
        type: "responsive",
        help: pui.a("blank", 'String of CSS stylesheet rules, used to define positions and dimensions of containers. Leave empty when styles are expected to be defined in an external stylesheet. See <a target="_blank" href="http://www.profoundlogic.com/docs/display/PUI/Responsive+Layout">Responsive Layout</a> for more information.')
    },
        {
            name: "use viewport",
            help: pui.a("true", 'Determines how @media rules in &quot;style rules&quot; are interpreted. When &quot;use viewport&quot; is true, the page size determines which @media rules to apply. When false, the layout\'s height and width determine which @media rules to apply. <br><br>See <a href="http://www.profoundlogic.com/docs/display/PUI/Responsive+Layout" target="_blank">Responsive Layout</a> for more information.'),
            choices: ["true", "false"]
        }, {
            name: "container names", type: "list", help: pui.a("blank",
                "List of container names to aid in designing screens. Names appear only in Responsive Dialog preview and Designer canvas.")
        }]);
    var f;
    f = e != null ? e.cloneNode(false) : document.createElement("div");
    f.innerHTML = "";
    if (c) {
        b = new pui.designer.d.cj;
        b.designMode = true
    } else b = new pui.cj;
    if (d) b.Ue = true;
    b.b = f;
    f.Ie = b;
    f.sizeMe = function () {
        f.Ie.resize()
    };
    a["container names"] != null && b.zv(a["container names"]);
    a["layout items"] != null && b.Dv(a["layout items"]);
    a["use viewport"] != null && b.aK(a["use viewport"] != "false");
    a["style rules"] !=
    null && b.mo(a["style rules"]);
    return f
};
pui.Hw = function () {
    function b() {
        h++;
        if (a.b.offsetWidth > 0) a.rm(); else h < f && setTimeout(b, 1)
    }

    vd.call(this);
    this.b = null;
    this.designMode = this.Ue = false;
    var a = this, c = [], d = [], e = null, f = 500, h = 0, g = 0;
    this.init = function () {
        a.b.style.overflow = "hidden"
    };
    this.H = function () {
        a.b.innerHTML = "";
        e = document.createElement("div");
        e.className = "pui-tablayout-hdr";
        a.$J(e);
        c = [];
        for (var l = 0, n = a.Ne.length; l < n; l++) {
            var o = document.createElement("span");
            if (a.isHidden[l]) o.style.display = "none";
            if (l == a.selectedTab) o.className = "selected-tab";
            var i = document.createElement("span"), r = document.createElement("span"),
                k = document.createElement("span");
            k.Me = l;
            k.innerHTML = a.Ne[l];
            k.setAttribute("isTab", "true");
            k.ondblclick = a.VB;
            k.onclick = a.UB;
            o.appendChild(i);
            o.appendChild(k);
            o.appendChild(r);
            e.appendChild(o);
            c.push(k)
        }
        a.b.appendChild(e);
        d = [];
        o = document.createElement("div");
        o.className = "pui-tablayout-body";
        l = 0;
        for (n = a.Ne.length; l < n; l++) {
            i = document.createElement("div");
            i.setAttribute("container", "true");
            if (l != a.selectedTab) i.style.display = "none";
            i.Me = l;
            o.appendChild(i);
            d.push(i)
        }
        a.b.appendChild(o);
        a.designMode && a.Cx();
        a.Tw()
    };
    this.Xj = function () {
        for (var l = 0, n = a.Ne.length; l < n; l++) e.childNodes[l].style.display = a.isHidden(l) ? "none" : "";
        l = 0;
        for (n = a.Ne.length; l < n; l++) if (l == a.selectedTab) {
            d[l].style.display = "";
            c[l].parentNode.className = "selected-tab";
            if (a.b.layout != null) {
                a.designMode || a.b.layout.Nq([a.selectedTab]);
                a.b.layout.cA()
            }
        } else {
            d[l].style.display = "none";
            c[l].parentNode.className = ""
        }
    };
    this.YJ = function (l) {
        if (l == null || l == "") l = a.bj; else if (pui.f(l)) l =
            pui.Ta(l.designValue).length == 0 ? a.bj : l.designValue;
        l = pui.Ta(l);
        var n = a.Ne.length;
        a.Ne = l;
        if (l.length != n) {
            a.selectedTab = 0;
            a.H()
        } else {
            l = 0;
            for (n = a.Ne.length; l < n; l++) c[l].innerHTML = a.Ne[l]
        }
    };
    this.resize = function () {
        a.rm();
        a.b.layout != null && a.b.layout.sr()
    };
    this.setHeight = function (l) {
        a.b.style.height = l;
        a.resize(l)
    };
    this.SJ = function (l) {
        function n() {
            eval("var tab = arguments[0];");
            try {
                return eval(l)
            } catch (o) {
                pui.qc(o, "Ontabclick Error:\n")
            }
        }

        if (!a.designMode) a.b.ontabclick = n
    };
    this.setStyle = function (l, n) {
        if (pui.f(n)) n =
            "";
        var o = l.split(" ");
        if (o.length == 2) l = o[0] + o[1].substr(0, 1).toUpperCase() + o[1].substr(1);
        o = 0;
        for (var i = c.length; o < i; o++) c[o].style[l] = n
    };
    this.Dh = function (l) {
        for (var n = ["color", "font family", "font size", "font style", "font variant", "font weight", "letter spacing", "text align", "text decoration", "text transform", "word spacing"], o = 0, i = n.length; o < i; o++) {
            var r = n[o], k = l[r];
            k != null && a.setStyle(r, k)
        }
    };
    this.nx = za(false);
    this.$s = function (l) {
        var n = document.createElement("span");
        if (l) n.className = "pui-tscrbtn pui-tablayout " +
            l;
        l = document.createElement("span");
        l.className = "edge";
        var o = document.createElement("span");
        o.className = "mid";
        var i = document.createElement("span");
        i.className = "edge";
        n.appendChild(l);
        n.appendChild(o);
        n.appendChild(i);
        return n
    };
    this.fF = function () {
        if (a.b.offsetWidth > 0) {
            clearTimeout(g);
            a.rm()
        } else {
            h = 0;
            clearTimeout(g);
            g = setTimeout(b, 1)
        }
    };
    this.Ve = function () {
        return [Number(a.selectedTab)]
    }
};
pui.Hw.prototype = Object.create(vd.prototype);
pui.layout.template.rK = function (b) {
    var a = b.properties, c = b.designMode, d = b.Kn, e = b.dom;
    if (b.Un) return pui.layout.nq([pui.layout.sb("tab names"), pui.layout.sb("active tab"), pui.layout.sb("ontabclick"), pui.layout.sb("tab response"), pui.layout.sb("response AID"), pui.layout.sb("bypass validation"), pui.layout.sb("color"), pui.layout.sb("font family"), pui.layout.sb("font size"), pui.layout.sb("font style"), pui.layout.sb("font weight"), pui.layout.sb("text decoration"), pui.layout.sb("text transform"), {
        name: "lazy load",
        choices: ["true", "false"],
        help: pui.a("false", "When true, render contents of tab after the user clicks a tab instead of rendering everything immediately (which can be slower).")
    }, {
        name: "onlazyload",
        type: "js",
        help: pui.a("blank", "Initiates a client-side script after a container is rendered lazily. (See lazy load property.)")
    }]);
    b = e != null ? e.cloneNode(false) : document.createElement("div");
    b.innerHTML = "";
    e = new pui.Hw;
    if (d) e.Ue = true;
    e.b = b;
    e.designMode = c;
    e.init();
    b.rb = e;
    b.sizeMe = b.rb.resize;
    e.YJ(a["tab names"]);
    e.SJ(a.ontabclick);
    e.Dh(a);
    var f = a.height;
    if (f == null) f = "200px";
    e.setHeight(f);
    if (!c) {
        c = a["active tab"];
        if (c != null) {
            c = Number(c);
            !isNaN(c) && c != 0 && e.setTab(c);
            b.er = true
        }
        if (a["tab response"]) b.fr = true;
        a = a["response AID"];
        if (a != null && a != "") b.Sn = a
    }
    if (d) b.style.position = "relative";
    return b
};
pui.layout.Lf = function (b, a, c, d) {
    var e = "<hr><b>Default Value:</b> ";
    e += "<code>";
    if (["css", "blank", "false", "true", "placeholder", "browser", "theme", "skin", "id", "bind", "widget", "position"].indexOf(b) != -1) if (b === "true") e += "<span>true</span>"; else if (b === "blank") e += "<span>[blank]</span>"; else if (b === "css") e += "[<span>CSS value</span>]"; else if (b === "false") e += "<span>false</span>"; else if (b === "placeholder") e += "[<span>placeholder text</span>]"; else if (b === "browser") e += "[<span>browser setting</span>]"; else if (b ===
        "theme") e += "[<span>selected widget</span>]"; else if (b === "skin") e += "[<span>selected skin</span>]"; else if (b === "id") e += "[<span>WidgetName</span>][<span>number</span>]"; else if (b === "bind") e += "<span>[bound value]</span>"; else if (b === "widget") e += "[<span>selected widget</span>]"; else {
        if (b === "position") e += "[<span>user drop point</span>]"
    } else e += b;
    e += "</code>";
    e += "<hr><b>Description: </b>";
    e += a;
    if (c.indexOf("other") != -1) e += " The &apos;Other...&apos; option can be selected to write in a custom value.";
    if (c.indexOf("note") !=
        -1) e += "<br><br><b>Note: </b>" + d;
    e += "<hr><br>";
    return e
};
pui.layout.templates = {};
pui.layout.jJ = function (b) {
    var a = b;
    if (b.substr(0, 1) != "/" && b.substr(0, 5).toLowerCase() != "http:" && b.substr(0, 6).toLowerCase() != "https:") a = "/profoundui/userdata/layouts/" + b + ".html";
    a = new pui.Ajax({url: pui.normalizeURL(a), method: "post", suppressAlert: true});
    a.async = false;
    a.send();
    if (a.Fu()) pui.layout.templates[b] = a.jc(); else console.log("Failed to load custom layout template:", b)
};
pui.retrieveCustomLayoutTemplate = function (b) {
    pui.layout.jJ(b)
};
pui.maximizeLayout = function (b) {
    var a = vb(b).parentNode, c = R.designer, d = c.$d(a);
    c.n.start("Maximize Layout");
    c.n.add(d, "left");
    c.n.add(d, "top");
    c.n.add(d, "width");
    c.n.add(d, "height");
    a.style.left = "0px";
    d.properties.left = "0px";
    d.m.left = true;
    a.style.top = "0px";
    d.properties.top = "0px";
    d.m.top = true;
    a.style.width = "100%";
    d.properties.width = "100%";
    d.m.width = true;
    a.style.height = "100%";
    d.properties.height = "100%";
    d.m.height = true;
    c.X[c.i.l] = true;
    c.qb();
    c.selection.clear();
    a.layout.stretch();
    c.selection.add(d);
    c.k.refresh();
    yb(b)
};
pui.layout.Pz = '<div condition="{ designValue: \'true\', runtimeValue: \'false\', proxyValue: \'false\' }" title="Maximize" style="position: absolute; top: 2px; right: 2px; width: 16px; height: 16px; cursor: pointer; background-image: url(/profoundui/proddata/images/icons/maximize.png)" onmousedown="pui.maximizeLayout(event)" />';
pui.layout.templates["simple container"] = "<div style=\"position: relative; width: 100%; height: 100%; overflow: hidden; overflow-x: { property: 'overflow x', help: '" + pui.layout.Lf("hidden", "Determines whether a horizontal scrollbar should be displayed.", [], "") + "', choices: ['visible', 'hidden', 'scroll', 'auto'] }; overflow-y: { property: 'overflow y', help: '" + pui.layout.Lf("hidden", "Determines whether a vertical scrollbar should be displayed.", [], "") + "', choices: ['visible', 'hidden', 'scroll', 'auto'] };\"><div stretch=\"true\" container=\"true\" style=\"overflow: hidden; { designValue: 'border: 2px dashed #666666;' } { proxyValue: 'width: 97px; height: 97px;' } \"></div></div>";
pui.layout.templates.table = '<table style="empty-cells: show; overflow: hidden;" width="100%" height="100%"><tr repeat="{ property: \'rows\', help: \'' + pui.layout.Lf("2", "Specifies the number of table rows for this layout.", [], "") + "' }\"><td style=\"border: { designValue: '1', runtimeValue: 0 }px dashed #666666;\" repeat=\"{ property: 'columns', help: '" + pui.layout.Lf("2", "Specifies the number of table columns for this layout.", [], "") + '\' }"><div stretch="true" container="true" style="position: relative; width: 100%; overflow: hidden;"></div></td></tr></table>';
pui.layout.templates.table += pui.layout.Pz;
pui.layout.templates["mobile device"] = '<table cellpadding="0" cellspacing="0">';
pui.layout.templates["mobile device"] += "<tr condition=\"{ property: 'top bar', choices: ['true','false'], help: '" + pui.layout.Lf("true", "Determines whether the mobile layout should have a top bar.", [], "") + '\' }"><td class="top-bar"><div container="true" class="top-bar" style="position: relative; width: 100%; overflow: hidden;"></div></td></tr>';
pui.layout.templates["mobile device"] += '<tr><td class="content-section"><div class="content-section" stretch="true" container="true"></div></td></tr>';
pui.layout.templates["mobile device"] += "<tr condition=\"{ property: 'bottom bar', choices: ['true','false'], help: '" + pui.layout.Lf("true", "Determines whether the mobile layout should have a bottom bar.", [], "") + '\' }"><td class="bottom-bar"><div container="true" class="bottom-bar" style="position: relative; width: 100%; overflow: hidden;"></div></td></tr>';
pui.layout.templates["mobile device"] += "</table>";
pui.layout.templates["mobile device"] += pui.layout.Pz;
pui.layout.templates["css panel"] = pui.layout.template.tF;
pui.layout.templates.accordion = pui.layout.template.WD;
pui.layout.templates.fieldset = "<fieldset style=\"width:100%; height:100%; position:relative; border-style:{property:'border style', choices:['none', 'dotted', 'dashed', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset'], defaultValue:'solid', help:'" + pui.layout.Lf("solid", "The style of the element&apos;s border.", [], "") + "'}; border-width:{property:'border width', choices:['1px','2px','3px','Other...'], defaultValue:'1px', help:'" + pui.layout.Lf("1px", "The width of the element&apos;s border.",
    [], "") + "'}; border-color:{property:'border color', type:'color', defaultValue:'black', help:'" + pui.layout.Lf("black", "The color of the element&apos;s border.", [], "") + "'};\"><legend align=\"{property: 'legend align', choices:['left','right','center'], help:'" + pui.layout.Lf("left", "The width of the element&apos;s border.", [], "") + '\'}">{property: "legend", help:\'' + pui.layout.Lf("Field Set", "Text to display in the field set&apos;s legend.", [], "") + '\'}</legend><div container="true" style="width:100%; height:100%; position:absolute; overflow:hidden;"></div></fieldset>';
pui.layout.templates["responsive layout"] = pui.layout.template.fJ;
pui.layout.templates["tab panel"] = pui.layout.template.rK;
pui.layout.JG = function () {
    var b = pui.layout.templates, a = [];
    for (var c in b) a.push(c);
    return a
};
pui.layout.nq = function (b) {
    for (var a = [], c = pui.layout.mi(), d = 0; d < c.length; d++) if (c[d].YB == true) for (var e = 0; e < b.length; e++) a.push(b[e]); else a.push(c[d]);
    return a
};
pui.layout.sb = function (b) {
    if (pui.layout.Rh === null || typeof pui.layout.Rh != "object") pui.layout.Rh = {};
    if (pui.layout.Rh[b] == null) {
        pui.layout.Rh[b] = {name: b};
        var a = rc();
        if (a[b] != null && typeof a[b] == "object") try {
            for (var c in a[b]) pui.layout.Rh[b][c] = a[b][c];
            delete pui.layout.Rh[b].controls;
            delete pui.layout.Rh[b].selection
        } catch (d) {
            console.log("error adopting property:", d.message)
        }
    }
    return pui.layout.Rh[b]
};
pui.layout.template.Tu = function (b) {
    function a() {
        var q = f.indexOf("{");
        if (q == -1) return null;
        for (var s = null, t = false, u = false, w = 0, v = q; v < f.length; v++) {
            var E = f.substr(v, 1);
            if (E == "'") t = !t; else if (E == '"') u = !u; else if (!(t || u)) {
                if (E == "{") w += 1;
                if (E == "}") w -= 1;
                if (w == 0) {
                    s = v;
                    break
                }
            }
        }
        if (s == null) return null;
        return {start: q, end: s}
    }

    function c(q) {
        if (q == null) return "";
        if (typeof q == "string") return q;
        if (typeof q == "number" || typeof q == "boolean") return String(q);
        if (typeof q == "object") {
            var s = q.property;
            if (n) {
                if (s != null) {
                    q.name =
                        s;
                    q.bind = false;
                    o[s] = q
                }
                return ""
            }
            var t = null;
            if (s != null) t = h[s];
            if (t == null) t = q.defaultValue;
            if (t == null) t = "";
            if (typeof t == "object") return c(t);
            return t
        }
        return ""
    }

    function d(q) {
        var s = "(" + f.substring(q.start, q.end + 1) + ")";
        q = null;
        try {
            q = eval(s)
        } catch (t) {
        }
        if (q == null) return "";
        var u;
        q = q;
        if (q.designValue != null || q.runtimeValue != null || q.proxyValue != null) {
            var w;
            if (g || n) w = c(q.designValue);
            if (!g || n) w = c(q.runtimeValue);
            if (l && q.proxyValue != null) w = q.proxyValue;
            u = w
        } else if (q.property != null) u = c(q);
        return u
    }

    function e(q, s) {
        f =
            f.substr(0, q.start) + s + f.substr(q.end + 1)
    }

    var f = pui.layout.templates[b.template];
    if (typeof f == "function") return f(b);
    if (typeof f != "string") {
        console.log("Template,", b.template, ", did not exist. Reverting to simple container.");
        f = pui.layout.templates[b.template] = pui.layout.templates["simple container"]
    }
    var h = b.properties, g = b.designMode, l = b.Kn, n = b.Un;
    b = b.dom;
    for (var o = {}, i = a(); i != null;) {
        var r = d(i);
        e(i, r);
        i = a()
    }
    if (n) {
        b = [];
        i = pui.layout.mi();
        for (r = 0; r < i.length; r++) if (i[r].YB == true) for (var k in o) b.push(o[k]);
        else b.push(i[r]);
        return b
    } else {
        k = b != null ? b.cloneNode(false) : document.createElement("div");
        k.innerHTML = f;
        return k
    }
};
pui.layout.template.xA = function (b) {
    function a(d) {
        if (d != null) {
            if (d.getAttribute != null) {
                if (d.getAttribute("condition") == "false" && d.parentNode != null) {
                    d.parentNode.removeChild(d);
                    return
                }
                var e = d.getAttribute("repeat");
                if (e != null) {
                    d.removeAttribute("repeat");
                    e = parseInt(e);
                    if (!isNaN(e)) {
                        if (e <= 0) d.style.display = "none";
                        e > 1 && c.push({el: d, aJ: e})
                    }
                }
                if (d.getAttribute("container") == "true") if (d.innerHTML == null) d.removeAttribute("container"); else d.innerHTML = ""
            }
            d = d.childNodes;
            if (!(d == null || d.length == null)) for (e = 0; e <
            d.length; e++) a(d[e])
        }
    }

    var c = [];
    a(b);
    (function () {
        for (var d; (d = c.pop()) != null;) {
            var e = d.el;
            d = d.aJ - 1;
            for (var f = 0; f < d; f++) {
                var h = e.cloneNode(true);
                e.parentNode.insertBefore(h, e)
            }
        }
    })()
};
pui.layout.mi = function () {
    return [{name: "Identification", category: true}, {
        name: "id",
        maxLength: 75,
        Oa: "id",
        help: pui.a("id", "Sets the ID of the layout element."),
        bind: false,
        $a: false
    }, {
        name: "field type",
        displayName: "widget type",
        choices: ["layout"],
        Mg: false,
        help: pui.a("widget", "Determines the type of control that is used to render the element."),
        bind: false,
        $a: false
    }, {name: "Template Settings", category: true, j: "dspf"}, {
        name: "template",
        choices: pui.layout.JG(),
        Mg: false,
        help: pui.a("widget", "Specifies the name of the template used to render the layout."),
        bind: false,
        $a: false
    }, {YB: true}, {name: "Position", category: true}, {
        name: "left",
        format: "px",
        help: pui.a("position", "Represents the x-coordinate of the current layout.")
    }, {
        name: "top",
        format: "px",
        help: pui.a("position", "Represents the y-coordinate of the current layout.")
    }, {
        name: "right",
        format: "px",
        help: pui.a("blank", "Position of the layout from the right of the screen or another layout container.")
    }, {
        name: "bottom",
        format: "px",
        help: pui.a("blank", "Position of the layout from the bottom of the screen or another layout container.")
    },
        {
            name: "center horizontally",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Centers the layout horizontally within its parent container."),
            p: true,
            o: ["indicator", "expression"]
        }, {
            name: "center vertically",
            choices: ["true", "false"],
            type: "boolean",
            help: pui.a("false", "Centers the layout vertically within its parent container."),
            p: true,
            o: ["indicator", "expression"]
        }, {name: "height", HL: "px", help: pui.a("widget", "Height of the layout."), bind: false, $a: false}, {
            name: "width", format: "px", help: pui.a("widget",
                "Width of the layout."), bind: false, $a: false
        }, {name: "min height", format: "px", help: pui.a("css", "Minimum height of the layout.")}, {
            name: "min width",
            format: "px",
            help: pui.a("css", "Minimum width of the layout.")
        }, {name: "max height", format: "px", help: pui.a("css", "Maximum height of the layout.")}, {
            name: "max width",
            format: "px",
            help: pui.a("css", "Maximum width of the layout.")
        }, {
            name: "z index",
            format: "number",
            help: pui.a("css", "The stacking order of the current element, expressed as an integer value. The element with the higher z index will overlay lesser elements.")
        },
        {
            name: "locked in place",
            choices: ["true", "false"],
            help: pui.a("false", "If set to true, the element cannot be moved or sized."),
            bind: false
        }, {name: "Tabs", category: true}, {
            name: "parent tab panel",
            help: pui.a("blank", "This property specifies the id of the Tab Panel to which this element belongs. The property is set automatically when you drag and drop the element onto a Tab Panel."),
            bind: false
        }, {
            name: "parent tab",
            help: pui.a("blank", "This property specifies the tab index of the specific tab to which this element belongs. Each tab within a Tab Panel is identified by a sequential index, starting with 0 for the first tab, 1 for the second tab, and so on. The property is set automatically when you drag and drop the element onto a Tab Panel."),
            bind: false
        }, {
            name: "parent field set",
            help: pui.a("blank", "This property specifies the id of the Field Set Panel to which this element belongs. The property is set automatically when you drag and drop the element onto a Field Set Panel."),
            bind: false
        }, {name: "Misc", category: true}, {
            name: "css class",
            type: "cssClass",
            U: true,
            Oa: "class",
            help: pui.a("theme", "Defines a custom cascading style sheet class to assign to the element. To specify multiple classes, right-click the property and select Add Another CSS Class.")
        },
        {
            name: "tool tip",
            type: "long",
            help: pui.a("blank", "Defines the text to appear in a tool tip when the user hovers the mouse over this element."),
            translate: true
        }, {
            name: "user defined data",
            U: true,
            help: pui.a("blank", "Specifies user-defined general purpose data associated with the widget. To provide multiple user defined data values, right-click the property and select Add Another User Defined Value.")
        }, {
            name: "visibility",
            format: "visible / hidden",
            choices: ["hidden", "visible"],
            help: pui.a("css", "Determines whether the element is visible or hidden.")
        },
        {
            name: "inline style",
            type: "long",
            Oa: "style",
            help: pui.a("blank", 'This property lets you define CSS properties that will be applied to the widget. These properties are applied inline, and therefore take precedence over those defined in a CSS class. Multiple properties may be provided, separated by a semi-colon. You can learn more about CSS properties at the following link: http://www.w3schools.com/cssref/. If you define CSS properties that are defined by other widget properties, the widget properties overrule the CSS inline properties. These CSS properties are ignored and should be set using the widget properties: "position", "visibility", "display", "left", "right", "top", "bottom", "width", "height", "overflow"')
        },
        {name: "Events", category: true}, {
            name: "onclick",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the element is clicked.")
        }, {
            name: "ondblclick",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the element is double-clicked.")
        }, {
            name: "onmousedown",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse is pressed down on this element.")
        }, {
            name: "onmousemove",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse is moving within this element.")
        },
        {
            name: "onmouseout",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse is moved off this element.")
        }, {
            name: "onmouseover",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse is moved over this element.")
        }, {
            name: "onmouseup",
            type: "js",
            help: pui.a("blank", "Initiates a client-side script when the mouse button is released off this element.")
        }]
};
pui.layout.zG = function (b) {
    return pui.layout.template.Tu({template: b, Un: true})
};
pui.layout.template.Gt = function (b) {
    function a(d, e) {
        if (d != null) if (!(!e && d.layout != null)) {
            if (d.getAttribute != null) if (d.getAttribute("container") == "true") {
                c.push(d);
                d.gF = c.length
            }
            var f = d.childNodes;
            if (!(f == null || f.length == null)) for (var h = 0; h < f.length; h++) a(f[h], false)
        }
    }

    var c = [];
    a(b, true);
    return c
};
pui.layout.template.Nm = function (b) {
    var a = [], c = b.Nf;
    c = b.Nf.map(function (g, l) {
        return {index: l, value: g.Rm()}
    });
    c.sort(function (g, l) {
        if (g.value > l.value) return -1;
        if (g.value < l.value) return 1;
        return 0
    });
    c = c.map(function (g) {
        return b.Nf[g.index]
    });
    for (var d = 0; d < c.length; d++) for (var e = c[d], f = pui.layout.template.Gt(e.dom), h = 0; h < f.length; h++) a.push(pui.layout.Ly(e, f[h]));
    return b.Hz = a
};
pui.layout.Ly = function (b, a) {
    var c = pui.layout.ec(a), d = c.x;
    c = c.y;
    var e = a.offsetHeight, f = a.offsetWidth, h = c + e, g = d + f;
    e -= 2;
    if (e < 1) e = 1;
    f -= 2;
    if (f < 1) f = 1;
    return {layout: b, b: a, top: c, left: d, bottom: h, right: g, height: e, width: f}
};
pui.layout.ec = function (b) {
    for (var a = 0, c = 0, d = b; d != null && (d.layout == null || d.parentNode.getAttribute("container") == "true");) {
        a += d.offsetLeft + d.clientLeft - d.scrollLeft;
        c += d.offsetTop + d.clientTop - d.scrollTop;
        if (d == b.parentNode) {
            var e = pui.getComputedStyle(d);
            if (e) {
                if (e["padding-left"]) a -= parseInt(e["padding-left"], 10); else if (e.paddingLeft) a -= parseInt(e.paddingLeft, 10);
                if (e["padding-top"]) c -= parseInt(e["padding-top"], 10); else if (e.paddingTop) c -= parseInt(e.paddingTop, 10)
            }
        }
        d = d.offsetParent
    }
    if (d != null) {
        a +=
            d.offsetLeft + d.clientLeft - d.scrollLeft;
        c += d.offsetTop + d.clientTop - d.scrollTop;
        if (d == b.parentNode) if (e = pui.getComputedStyle(d)) {
            if (e["padding-left"]) a -= parseInt(e["padding-left"], 10); else if (e.paddingLeft) a -= parseInt(e.paddingLeft, 10);
            if (e["padding-top"]) c -= parseInt(e["padding-top"], 10); else if (e.paddingTop) c -= parseInt(e.paddingTop, 10)
        }
    }
    return {x: a, y: c}
};
pui.layout.template.applyTemplate = function (b) {
    var a = b.dom, c = pui.layout.template.Gt, d = pui.layout.template.Tu, e = pui.layout.template.xA, f = c(a);
    d = d(b);
    e(d);
    c = c(d);
    e = [];
    for (var h = f.length - 1; h >= 0; h -= 1) if (f[h].firstChild != null) break;
    h += 1;
    if (h > c.length) return {
        success: false,
        msg: "The property cannot be applied because it removes a layout section that contains other widgets.  \n\nYou must remove the contained widgets first."
    };
    for (var g = 0; g < h; g++) for (var l = f[g], n = c[g], o = l.firstChild; o != null;) {
        l.removeChild(o);
        n.appendChild(o);
        o = l.firstChild
    }
    for (g = 0; g < c.length; g++) {
        n = c[g];
        n.getAttribute("stretch") == "true" && e.push(n)
    }
    a.innerHTML = "";
    for (o = d.firstChild; o != null;) {
        a.appendChild(d.removeChild(o));
        o = d.firstChild
    }
    if (a.layout != null) a.layout.dl = a.layout.stretch;
    if (d.panel != null) {
        a.panel = d.panel;
        a.sizeMe = a.panel.resize;
        a.panel.b = a
    }
    if (d.Ef != null) {
        a.Ef = d.Ef;
        a.sizeMe = a.Ef.resize;
        a.Ef.b = a;
        a.layout.Ve = d.Ef.Ve
    }
    if (d.Ie != null) {
        a.Ie = d.Ie;
        a.sizeMe = a.Ie.resize;
        a.Gl = a.Ie.Gl;
        a.Rn = a.Ie.Rn;
        a.Ie.b = a
    }
    if (d.rb != null) {
        var i;
        if (a.rb !=
            null) i = a.rb.selectedTab;
        a.rb = d.rb;
        a.sizeMe = a.rb.resize;
        a.rb.b = a;
        a.layout.Ve = d.rb.Ve;
        a.layout.dl = d.rb.resize;
        if (i != null && !isNaN(i) && i >= 0 && i < a.rb.Ne.length && i != a.rb.selectedTab) {
            a.rb.selectedTab = i;
            a.rb.Xj()
        }
        a.rb.fF();
        a.fr = d.fr;
        a.er = d.er;
        a.Sn = d.Sn;
        if (!b.designMode) {
            a.setTab = a.rb.setTab;
            a.getTab = a.rb.getTab;
            a.refresh = a.rb.refresh;
            a.hideTab = a.rb.ez;
            a.showTab = a.rb.KB
        }
    }
    return {success: true, Dg: e, Ab: c}
};
pui.layout.template.getProxy = function (b) {
    var a = pui.layout.template.Tu({template: b.template, properties: b, designMode: true, Kn: true});
    pui.layout.template.xA(a);
    if (b.width != null) a.style.width = b.width;
    if (b.height != null) a.style.height = b.height;
    if (b["css class"] != null) a.className = b["css class"];
    return a
};
pui.layout.LC = function () {
    this.na = null;
    this.designMode = false;
    this.template = "test";
    this.ke = {};
    this.xi = false;
    this.Dg = [];
    this.Ab = [];
    this.px = this.ox = false;
    this.Ve = this.hl = this.dl = null;
    var b = this, a, c = {};
    this.tp = function () {
        b.designMode = true;
        b.na.destroy = b.destroy;
        b.na.onclick = function (d) {
            if (b.xi) {
                d = vb(d);
                if (d == b.na || d.getAttribute != null && d.getAttribute("container") == "true") {
                    d = b.c;
                    if (d != null) {
                        var e = d.designer.selection;
                        if (!(e.e.length == 1 && e.e[0].c == d)) {
                            e.clear();
                            e.add(d);
                            d.designer.k.refresh()
                        }
                    }
                }
            }
        }
    };
    this.ni =
        function () {
            for (var d = pui.layout.template.Gt(b.na), e = 0; e < d.length; e++) if (d[e].firstChild != null) return true;
            return false
        };
    this.Ft = function (d) {
        if (d == null) d = {};
        d.bz = false;
        d.$y = false;
        for (var e = [], f = b.na.c.designer.items, h = 0; h < f.length; h++) {
            var g = f[h];
            if (g.qf() == b) {
                if (g.properties["field type"] == "tab panel") d.bz = true;
                if (g.properties["field type"] == "field set panel") d.$y = true;
                e.push(g)
            }
        }
        return e
    };
    this.VJ = function () {
        b.na.Jn = pui.layout.zG(b.template);
        b.na.ff = qc(b.na.Jn)
    };
    this.applyTemplate = function () {
        var d =
            pui.layout.template.applyTemplate({
                dom: b.na,
                template: b.template,
                properties: b.ke,
                designMode: b.designMode
            });
        if (d.success) {
            b.Dg = d.Dg;
            b.Ab = d.Ab;
            b.stretch()
        } else {
            setTimeout(function () {
                pui.alert(d.msg)
            }, 0);
            return d
        }
        b.VJ();
        return d
    };
    this.Er = function (d, e) {
        if (!b.designMode) return false;
        var f = b.c;
        if (f.properties[d] != e) {
            if (pui.f(f.properties[d])) f.properties[d].designValue = e; else f.properties[d] = e;
            f.m[d] = true;
            f.ta = true;
            f.designer.X[f.designer.i.l] = true;
            f.designer.k.refresh();
            return true
        }
        return false
    };
    this.stretch =
        function () {
            for (var d = [], e = 0; e < b.Dg.length; e++) {
                var f = b.Dg[e];
                f.style.width = "";
                f.style.height = "";
                if (!pui.is_android) f.style.display = "none"
            }
            for (e = 0; e < b.Dg.length; e++) {
                f = b.Dg[e];
                var h = f.parentNode;
                d.push({width: h.offsetWidth, height: h.offsetHeight})
            }
            for (e = 0; e < b.Dg.length; e++) {
                f = b.Dg[e];
                var g = d[e], l = h.style.overflowX, n = h.style.overflowY;
                g.width -= b.designMode && b.template !== "mobile device" || l === "auto" || l === "scroll" || b.template == "table" ? 4 : 2;
                if (g.width < 0) g.width = 0;
                g.height -= b.designMode && b.template !== "mobile device" ||
                n === "auto" || n === "scroll" || b.template == "table" ? 4 : 2;
                if (g.height < 0) g.height = 0;
                f.style.width = g.width + "px";
                f.style.height = g.height + "px";
                f.style.display = ""
            }
            b.sr();
            b.center()
        };
    this.sr = function () {
        for (var d = 0; d < b.Ab.length; d++) for (var e = b.Ab[d], f = 0; f < e.childNodes.length; f++) {
            var h = e.childNodes[f];
            if (h.layout != null) {
                h.layout.stretch();
                h.layout.iScroll != null && h.layout.iScroll.refresh()
            }
            if (h.sizeMe != null && typeof h.sizeMe == "function") if (pui.da(h.style.width) || pui.da(h.style.height) || h.grid != null) h.sizeMe();
            h.Hi !=
            null && typeof h.Hi == "function" && h.Hi()
        }
    };
    this.cA = function () {
        if (typeof b.Ve == "function") for (var d = b.Ve(), e = 0; e < d.length; e++) if (d[e] >= 0 && b.Ab.length > d[e]) for (var f = b.Ab[d[e]], h = 0; h < f.childNodes.length; h++) {
            var g = f.childNodes[h];
            if (g.layout != null && typeof g.layout.dl == "function") {
                g.layout.dl();
                delete g.layout.dl
            }
        }
    };
    this.center = function () {
        var d = b.ox, e = b.px;
        if (d || e) {
            var f = {}, h = false, g = b.na.parentNode;
            if (g != null && g.tagName == "DIV" && g.offsetWidth > 0 && (g.parentNode != document.body || g.style.width != null && g.style.height !=
                null && g.style.width != "" && g.style.height != "")) {
                f.width = g.offsetWidth;
                f.height = g.offsetHeight
            } else {
                h = pui.getWindowSize();
                f.width = h.width;
                f.height = h.height;
                h = true
            }
            if (d) {
                d = parseInt((f.width - b.na.offsetWidth) / 2);
                if (d < 0) {
                    if (h) document.body.scrollLeft = Math.abs(d);
                    d = 0
                }
                b.na.style.left = d + "px"
            }
            if (e) {
                e = parseInt((f.height - b.na.offsetHeight) / 2);
                if (e < 0) e = 0;
                b.na.style.top = e + "px"
            }
        }
    };
    this.setProperty = function (d, e) {
        if (e == null) e = "";
        var f = b.na.panel, h = b.na.Ef, g = b.na.Ie, l = b.na.rb;
        switch (d) {
            case "id":
                b.na.id = e;
                g != null &&
                g.mo();
                break;
            case "field type":
                break;
            case "template":
                if (b.designMode) {
                    b.c.properties.template = e;
                    b.c.m.template = true;
                    b.c.ta = true;
                    b.c.designer.X[b.c.designer.i.l] = true;
                    b.c.designer.k.refresh();
                    f && f.resize();
                    h && h.resize();
                    g && g.resize();
                    l && l.resize()
                }
                break;
            case "left":
            case "top":
            case "right":
            case "bottom":
                b.na.style[d] = e;
                break;
            case "height":
            case "width":
            case "min height":
            case "min width":
            case "max height":
            case "max width":
                var n = d.split(" "), o = d;
                if (n.length > 1) o = n[0] + n[1].substr(0, 1).toUpperCase() + n[1].substr(1);
                b.na.style[o] = e;
                f != null && f.resize();
                h != null && h.resize();
                g != null && g.resize();
                l != null && l.resize();
                b.stretch();
                if (b.designMode) e.length == 0 ? pui.ev(b.na, o) : pui.Wo(b.na, o, e);
                break;
            case "z index":
                b.na.style.zIndex = e;
                if (b.designMode) e.length == 0 ? pui.ev(b.na, "z-index") : pui.Wo(b.na, "z-index", e);
                break;
            case "center horizontally":
                if (!b.designMode) b.ox = e == "true" || e == true;
                break;
            case "center vertically":
                if (!b.designMode) b.px = e == "true" || e == true;
                break;
            case "locked in place":
                b.xi = e == "true" || e == true;
                break;
            case "css class":
                break;
            case "overflow x":
                b.na.firstChild.style.overflowX = e;
                break;
            case "tool tip":
                b.na.title = e;
                break;
            case "visibility":
                if (!b.designMode) b.na.style.visibility = e;
                if (b.designMode) if (e == "hidden") {
                    b.na.style.filter = "alpha(opacity=30)";
                    b.na.style.opacity = 0.3
                } else {
                    b.na.style.filter = "";
                    b.na.style.opacity = ""
                }
                break;
            case "onclick":
            case "ondblclick":
            case "onmousedown":
            case "onmousemove":
            case "onmouseout":
            case "onmouseover":
            case "onmouseup":
                b.designMode || (b.na[d] = function (r) {
                    try {
                        var k = eval(e);
                        if (typeof k == "function") {
                            if (!r) r =
                                window.event;
                            k(r, this)
                        }
                    } catch (q) {
                        pui.qc(q, d.substr(0, 1).toUpperCase() + d.substr(1) + " Error:\n")
                    }
                });
                break;
            case "has header":
                f != null && f.ho(e != "false" && e != false);
                b.ke[d] = e;
                break;
            case "small sections":
                if (h != null) h.$j(e == "true" || e == true);
                b.ke[d] = e;
                break;
            case "allow collapse":
                h != null && h.vJ(e);
                b.ke[d] = e;
                break;
            case "header height":
                f != null && f.jo(e);
                b.ke[d] = e;
                break;
            case "header text":
                f != null && f.setText(e);
                b.ke[d] = e;
                break;
            case "header theme":
                f != null && f.Pi(e);
                h != null && h.Pi(e);
                b.ke[d] = e;
                break;
            case "body theme":
                f !=
                null && f.Ni(e);
                h != null && h.Ni(e);
                b.ke[d] = e;
                break;
            case "straight edge":
                f != null && f.Ba(e);
                h != null && h.Ba(e);
                b.ke[d] = e;
                break;
            case "color":
            case "font family":
            case "font size":
            case "font style":
            case "font weight":
            case "text align":
            case "text decoration":
            case "text transform":
                f != null && f.setStyle(d, e);
                if (h != null) {
                    h.setStyle(d, e);
                    if (d == "font family" || d == "font size") h.resize()
                }
                l != null && l.setStyle(d, e);
                b.ke[d] = e;
                break;
            case "onsectionclick":
                b.designMode || (b.na[d + "event"] = function () {
                    eval("var section = arguments[0];");
                    try {
                        return eval(e)
                    } catch (r) {
                        pui.qc(r, "Onexpand Error:\n")
                    }
                });
                break;
            case "onlazyload":
                if (!b.designMode && typeof e == "string" && e.length > 0) b.hl = e;
                break;
            default:
                var i = b.ke[d];
                b.ke[d] = e;
                if (b.designMode && !R.Of && !R.Pu) {
                    f = b.applyTemplate();
                    b.na.Ef != null && b.na.Ef.resize();
                    if (f.success == false) {
                        b.ke[d] = i;
                        setTimeout(function () {
                            b.Er(d, i)
                        }, 0)
                    }
                }
                break
        }
    };
    this.sE = function () {
        function d() {
            var h = b.na.parentNode;
            if (h != null && h.tagName == "DIV") {
                pui.is_ios && document.body.addEventListener("tap", function (l) {
                    l.preventDefault();
                    l.stopPropagation();
                    l.stopImmediatePropagation();
                    var n = new MouseEvent("click", {view: window, bubbles: true, cancelable: true}), o = vb(l);
                    if (o) if (!/^(INPUT|TEXTAREA|BUTTON|SELECT|IMG)$/.test(o.tagName)) {
                        if (pui.mu == null || new Date - pui.mu > 2E3) setTimeout(function () {
                            if (!o.dispatchEvent(n)) {
                                n.preventDefault();
                                n.stopPropagation()
                            }
                        }, 10);
                        pui.mu = new Date
                    }
                }, false);
                var g = {
                    scrollbars: true,
                    mouseWheel: true,
                    shrink: true,
                    tap: pui.is_ios,
                    disableMouse: pui.is_ios,
                    preventDefaultException: {tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT|IMG)$/},
                    onBeforeScrollStart: function (l) {
                        for (var n = vb(l); n.nodeType != 1;) n = n.parentNode;
                        for (; n.tagName == "SPAN";) n = n.parentNode;
                        n.tagName != "SELECT" && n.tagName != "INPUT" && n.tagName != "TEXTAREA" && n.tagName != "A" && l.preventDefault()
                    }
                };
                b.iScroll = typeof IScroll == "function" ? new IScroll(h, g) : new iScroll(h, g)
            }
        }

        function e() {
            f++;
            f > 100 || setTimeout(function () {
                typeof IScroll == "function" || typeof iScroll == "function" ? d() : e()
            }, 200)
        }

        var f = 0;
        if (typeof IScroll == "function" || typeof iScroll == "function") d(); else pui.loadJS({
            path: pui.normalizeURL("/iscroll/iscroll.js"),
            callback: function () {
                d()
            }
        }) == false && e()
    };
    this.onresize = function () {
        if (b.vE == true) {
            var d = window.orientation, e = window.screen.width;
            if (d == 0 || d == 180) e = window.screen.height;
            e -= 18;
            e += "px";
            b.na.parentNode.style.height = e;
            document.body.style.height = e;
            document.body.parentNode.style.height = e;
            b.na.style.height = e;
            b.setProperty("height", e)
        }
        b.stretch()
    };
    this.YA = function (d) {
        a = {
            active: d.active,
            data: d.data,
            designMode: d.designMode,
            errors: d.errors,
            file: d.file,
            fileId: d.fileId,
            cq: d.cq,
            Cz: d.Cz,
            library: d.library,
            metaData: {screen: {"record format name": d.metaData.screen["record format name"]}},
            msgInfo: d.msgInfo,
            name: d.name,
            ref: d.ref,
            Zn: d.Zn,
            subfiles: d.subfiles
        }
    };
    this.CF = function (d, e) {
        if (c[d] == null) c[d] = [];
        var f = b.na.id, h = {};
        for (var g in e) if (e.layout != f || g != "container" && g != "layout") if (typeof e[g] == "object" && e[g] != null) try {
            h[g] = JSON.parse(JSON.stringify(e[g]))
        } catch (l) {
        } else h[g] = e[g];
        c[d].push(h)
    };
    this.Nq = function (d) {
        if (a != null) {
            if (d == null || d.length < 1) if (typeof b.Ve == "function") d = b.Ve(); else return;
            for (var e = 0; e < d.length; e++) {
                var f = d[e];
                if (c[f] != null) {
                    a.b = b.Ab[f];
                    a.dq = f;
                    a.metaData.items =
                        c[f];
                    a.hl = b.hl;
                    pui.Pn(a);
                    delete c[f]
                }
            }
            if (typeof Object.keys == "function" && Object.keys(c).length == 0) a = null
        }
    };
    this.destroy = function () {
        ic(window, "resize", b.onresize);
        ic(document, "orientationchange", b.onresize);
        if (b.iScroll != null) {
            b.iScroll.destroy();
            b.iScroll = null;
            delete b.iScroll
        }
        b.na = null;
        b.ke = null;
        b.Dg = null;
        delete b.Ve;
        delete b.hl;
        delete b.dl;
        b = c = a = null
    }
};
pui.widgets.add({
    name: "layout", oe: false, defaults: {}, eh: function (b) {
        if (b.dom.layout == null) {
            b.dom.layout = new pui.layout.LC;
            b.dom.layout.na = b.dom;
            b.dom.layout.c = b.c;
            if (b.design) b.c.tn = false
        }
        if (!b.design && b.propertyName == "field type") {
            b.dom.layout.setProperty("center vertically", b.properties["center vertically"]);
            b.dom.layout.setProperty("center horizontally", b.properties["center horizontally"])
        }
        var a = true;
        if (b.propertyName == "field type" || b.propertyName == "template") {
            b.dom.style.padding = "0px";
            b.dom.style.borderWidth =
                "0px";
            if (!b.design && b.properties.height == "100%" && b.dom.parentNode.id == "pui") {
                var c = pui.getComputedStyle(b.dom.parentNode);
                if (c != null && (c.height == "0px" || c.height == "auto")) {
                    pui.wh.padding = document.body.style.padding;
                    document.body.style.padding = "0";
                    pui.wh.height = document.body.style.height;
                    document.body.style.height = "100%";
                    document.body.parentNode.style.padding = "0";
                    document.body.parentNode.style.height = "100%";
                    pui.wh.overflow = document.body.style.overflow;
                    document.body.style.overflow = "hidden";
                    b.dom.parentNode.style.padding =
                        "0";
                    b.dom.parentNode.style.height = "100%"
                }
                if (window.cordova && window.device.platform == "iOS") {
                    b.dom.layout.vE = true;
                    c = window.orientation;
                    var d = window.screen.width;
                    if (c == 0 || c == 180) d = window.screen.height;
                    d -= 18;
                    d += "px";
                    b.dom.parentNode.style.height = d;
                    b.dom.parentNode.style.overflowX = "hidden";
                    b.dom.parentNode.style.overflowY = "hidden";
                    document.body.style.height = d;
                    document.body.parentNode.style.height = d;
                    b.dom.style.height = d
                }
            } else if (!b.design && b.dom.parentNode.ze && (pui.da(b.properties.height) || pui.da(b.properties.width))) {
                b.dom.parentNode.style.width =
                    "100%";
                b.dom.parentNode.style.height = "100%"
            }
            if (b.design) {
                b.dom.layout.designMode || b.dom.layout.tp();
                b.dom.c = b.c;
                b.c.tn = false;
                if (b.propertyName == "field type") {
                    b.dom.layout.setProperty("width", b.properties.width);
                    b.dom.layout.setProperty("height", b.properties.height);
                    b.properties["inline style"] && yc(b.dom, b.properties["inline style"], true)
                }
            }
            b.dom.layout.template = b.properties.template;
            c = null;
            if (b.propertyName == "template") {
                c = b.dom.layout.template;
                b.dom.layout.template = b.value
            } else if (!b.design) {
                gc(window,
                    "resize", b.dom.layout.onresize);
                gc(document, "orientationchange", b.dom.layout.onresize)
            }
            d = qc(pui.layout.mi());
            for (var e in b.properties) d[e] || (b.dom.layout.ke[e] = b.properties[e]);
            e = b.dom.layout.applyTemplate();
            if (e.success == false && c != null) {
                b.dom.layout.template = c;
                b.dom.layout.Er("template", c);
                a = false
            }
            if (e.success == true && (!b.design || R.Of || R.Pu)) b.dom.layout.Ab = e.Ab
        }
        a && b.dom.layout.setProperty(b.propertyName, b.value)
    }, initialize: function (b) {
        if (!b.design) {
            b = b.dom;
            var a = b.id;
            if (a == null) a = "";
            var c = b.className;
            if (c == null) c = "";
            if (a.toLowerCase() == "scroller" || c.toLowerCase() == "scroller") pui.is_old_ie || b.layout.sE()
        }
    }
});
window.Atrium || (window.Atrium = {});
Atrium.launchURL = function (b, a, c) {
    var d = Atrium.getAtriumWindow();
    if (d != null) return d.Atrium.api.launchURL(b, a, c)
};
Atrium.closeTab = function (b) {
    var a = Atrium.getAtriumWindow();
    a != null && a.Atrium.api.closeTab(window, b)
};
Atrium.launchItem = function (b, a, c) {
    var d = Atrium.getAtriumWindow();
    if (d != null) return d.Atrium.api.launchItem(b, a, c)
};
Atrium.activateTab = function (b) {
    var a = Atrium.getAtriumWindow();
    a != null && a.Atrium.api.activateTab(b)
};
Atrium.closeAllTabs = function (b) {
    var a = Atrium.getAtriumWindow();
    a != null && a.Atrium.api.closeAllTabs(window, b)
};
Atrium.getCurrentTab = function () {
    var b = Atrium.getAtriumWindow();
    if (b != null) return b.Atrium.api.getCurrentTab(window)
};
Atrium.getToken = function () {
    var b = Atrium.getAtriumWindow();
    if (b != null) return b.Atrium.api.getToken()
};
Atrium.getUser = function () {
    var b = Atrium.getAtriumWindow();
    if (b != null) return b.Atrium.api.getUser()
};
Atrium.runPCCommand = function (b) {
    var a = Atrium.getAtriumWindow();
    a != null && a.Atrium.api.runPCCommand(b)
};
Atrium.refreshNavPanel = function () {
    var b = Atrium.getAtriumWindow();
    b != null && b.Atrium.api.refreshNavPanel()
};
Atrium.setMenuFilter = function (b) {
    var a = Atrium.getAtriumWindow();
    a != null && a.Atrium.api.setMenuFilter(b)
};
Atrium.breakMessagesShow = function (b, a) {
    var c = Atrium.getAtriumWindow();
    c != null && c.Atrium.api.breakMessagesShow(b, a)
};
Atrium.breakMessagesOnStorage = function (b) {
    var a = Atrium.getAtriumWindow();
    a != null && a.Atrium.api.breakMessagesOnStorage(b)
};
Atrium.getAtriumWindow = function () {
    for (var b = window.parent; b != null && b != b.parent && (b.Atrium == null || b.Atrium.api == null);) b = b.parent;
    if (b == null || b.Atrium == null || b.Atrium.api == null) return null;
    return b
};
Atrium.collapseNav = function () {
    Atrium.getAtriumWindow().Atrium.api.collapseNav()
};
Atrium.expandNav = function () {
    Atrium.getAtriumWindow().Atrium.api.expandNav()
};
Atrium.setTabTitle = function () {
    var b = Atrium.getAtriumWindow();
    if (b != null) if (arguments.length == 1) b.Atrium.api.setTabTitle(window, arguments[0]); else arguments.length == 2 && b.Atrium.api.setTabTitle(arguments[0], arguments[1])
};
window.hideElement = zc;
window.hideElements = Ac;
window.removeElement = Bc;
window.removeElements = Cc;
window.getElementValue = Dc;
window.get = Ec;
window.getObj = Tb;
window.postToNewWindow = function (b) {
    b || pui.alert("postToNewWindow Error: URL not specified.");
    var a = document.forms.postToForm;
    if (a == null) {
        a = document.createElement("form");
        document.body.appendChild(a)
    }
    a.innerHTML = "";
    a.action = b;
    a.method = "post";
    a.target = "_blank";
    for (var c = 1; c < arguments.length; c += 2) {
        var d = arguments[c], e = "";
        if (c + 1 < arguments.length) e = arguments[c + 1];
        d = ec("input", d);
        d.type = "hidden";
        d.value = e;
        a.appendChild(d)
    }
    a.submit()
};
window.postTo = function (b) {
    b || pui.alert("postTo Error: URL not specified.");
    var a = document.forms.postToForm;
    if (a == null) {
        a = document.createElement("form");
        document.body.appendChild(a)
    }
    a.innerHTML = "";
    a.action = b;
    a.method = "post";
    a.target = "";
    for (var c = 1; c < arguments.length; c += 2) {
        var d = arguments[c], e = "";
        if (c + 1 < arguments.length) e = arguments[c + 1];
        d = ec("input", d);
        d.type = "hidden";
        d.value = e;
        a.appendChild(d)
    }
    a.submit()
};
window.changeElementValue = Fc;
window.changeElementClass = function (b, a) {
    var c = document.getElementById(b);
    if (c == null) return "";
    c.className = a
};
window.newElement = Gc;
window.preventEvent = yb;
window.setTab = function (b, a) {
    var c = Tb(b);
    if (c == null || c.setTab == null) Hc[b] = a; else c.setTab(a)
};
window.ltrim = bc;
window.rtrim = $b;
window.trim = Zb;
window.attachCalendar = function (b, a) {
    var c = document.getElementById(b);
    c != null && pd(c, a)
};
window.createNamedElement = ec;
window.getInnerText = tc;
window.setDOMAttribute = function (b, a, c) {
    b = typeof b == "string" ? document.getElementById(b) : b;
    if (b != null) try {
        b[a] = c
    } catch (d) {
    }
};
window.getActualStyle = Ic;
window.addEvent = gc;
window.removeEvent = ic;
window.getMouseX = Jc;
window.getMouseY = Kc;
window.showErrors = function () {
    if (Oa.length == 0) alert("No errors have been reported."); else for (var b, a = 0; a < Oa.length; a++) {
        b = Oa[a];
        b = "Operation: " + b.wq + "\nId: " + b.id + "\n\nMessage: " + b.text + "\n" + b.Br;
        alert(b)
    }
};
window.presskey = function (b) {
    Sc(b)
};
window.pressKey = Sc;
window.pressKEY = function (b) {
    Sc(b)
};
window.Presskey = function (b) {
    Sc(b)
};
window.PressKey = function (b) {
    Sc(b)
};
window.PRESSKEY = function (b) {
    Sc(b)
};
window.applyProperty = sc;
window.show_calendar = fd;
window.hide_calendar = ad;
window.calendar_select = function () {
    pui.currentDateField.modified = true;
    pui.Kh(pui.currentDateField);
    if (pui.currentDateField.id != null && pui.currentDateField.id.indexOf(".") == -1 && pui.currentDateField.nf != null) pui.ai[pui.currentDateField.nf] = true;
    if (Q == "genie" && pui.currentDateField.S != null && pui.currentDateField.S.idx != null) pui.response[pui.currentDateField.S.idx] = pui.currentDateField;
    ad();
    var b = pui.currentDateField.ha;
    if (b != null) {
        b.hide();
        b.jb = true;
        pui.La(pui.currentDateField, b.vj())
    }
    try {
        pui.currentDateField.focus()
    } catch (a) {
    }
    pui.currentDateField.onchange !=
    null && pui.currentDateField.onchange();
    pui.currentDateField.Iu != null && pui.currentDateField.Iu();
    pui.Xh(pui.currentDateField)
};
window.currentDate = function (b, a) {
    if (b == null || b == "Y") slashes = true;
    if (Ub()) {
        var c;
        c = slashes ? "DD/DD/DD" : "DDDDDD";
        if (a) c += "DD";
        return c
    } else {
        c = "";
        if (pui && pui.appJob) {
            if (pui.appJob.sysTime == 0) return "";
            c = new Date(pui.appJob.sysTime * 1E3);
            var d = pui.appJob.dateFormat;
            if (a) {
                if (d == "*MDY") d = "*USA";
                if (d == "*DMY") d = "*EUR";
                if (d == "*YMD") d = "*ISO"
            }
            d = pui.formatting.keywords.DATFMT[d].Ec.replace(/\B/g, pui.appJob.dateSeparator);
            c = c.format(d, "en_US")
        } else {
            c = new Date;
            d = 2E3;
            if (a) d = 0;
            c = (parseInt(c.getMonth(), 10) + 1 < 10 ? "0" :
                "") + (parseInt(c.getMonth(), 10) + 1) + "/" + (parseInt(c.getDate(), 10) < 10 ? "0" : "") + c.getDate() + "/" + (parseInt(c.getFullYear(), 10) - d < 10 ? "0" : "") + (parseInt(c.getFullYear(), 10) - d)
        }
        if (b != null && b != "Y") {
            d = "/";
            if (pui != null && pui.appJob != null && pui.appJob.dateSeparator != null) d = pui.appJob.dateSeparator;
            c = c.replace(d, "");
            c = c.replace(d, "");
            if (c.substr(0, 1) == "0") c = " " + c.substr(1)
        }
        return c
    }
};
window.currentTime = function () {
    if (Ub()) return "TT:TT:TT"; else {
        var b;
        if (pui && pui.appJob) {
            if (pui.appJob.sysTime == 0) return "";
            b = new Date(pui.appJob.sysTime * 1E3);
            var a = pui.formatting.keywords.mk["*HMS"].Ec.replace(/\B/g, pui.appJob.timeSeparator);
            return b.format(a, "en_US")
        } else {
            b = new Date;
            return (b.getHours() < 10 ? "0" : "") + b.getHours() + ":" + (b.getMinutes() < 10 ? "0" : "") + b.getMinutes() + ":" + (b.getSeconds() < 10 ? "0" : "") + b.getSeconds()
        }
    }
};
window.currentUser = function () {
    return Ub() ? "UUUUUUUUUU" : pui.appJob == null || pui.appJob.user == null ? "" : pui.appJob.user
};
window.currentFormatNames = Oc;
window.getQueryStringParms = Pc;
window.setCursor = function (b, a) {
    if (arguments.length == 1) {
        var c = Tb(b);
        if (c) if (Q == "genie") {
            if (c.S) {
                pui.response.crow = c.S.row;
                pui.response.ccol = c.S.col
            }
        } else c.Bm && c.Gk && pui.xh(null, c)
    }
    if (arguments.length == 2) if (Q == "genie") {
        pui.response.crow = b;
        pui.response.ccol = a
    } else {
        pui.G.row = b;
        pui.G.column = a
    }
};
window.getTarget = vb;
window.inDesignMode = Ub;
window.loadPCCommandApplet = Rc;
window.runPCCommand = Qc;
window.copyToClipboard = function (b) {
    var a = document.getElementById("PCCommandApplet");
    if (a) a.copyToClipboard(b); else {
        pui.Ww = b;
        Rc("copyToClipboardCb")
    }
};
window.pui.UTF8 = pui.bm;
window.pui.UTF8.encode = pui.bm.encode;
window.pui.UTF8.decode = pui.bm.decode;
window.$ = ra();
window.id = window.id;
window.pui = pui;
window.pui.locales = pui.locales;
window.pui.formatting = pui.formatting;
window.pui.formatting.leftPad = pui.formatting.leftPad;
window.pui.formatting.Date = pui.formatting.Date;
window.pui.formatting.Date.y2k = pui.formatting.Date.NK;
window.pui.formatting.Date.getSuffix = pui.formatting.Date.getSuffix;
window.pui.formatting.Date.getMonthNum = pui.formatting.Date.vG;
window.pui.formatting.Date.isMidnight = pui.formatting.Date.vH;
window.getSystemName = function () {
    return Ub() ? "SSSSSSSS" : pui.appJob == null || pui.appJob.sysName == null ? "" : pui.appJob.sysName
};

function wd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "This will end your session.";
            a["no connection message"] = "Unable to reach server.  Check your connection and try again.";
            a["upload file limit"] = "Limit of &1 file(s) exceeded.";
            a["upload size limit"] = "Limit of &1MB per file exceeded";
            a["upload no files"] = "No files selected.";
            a["upload duplicate file"] = "Duplicate files selected.";
            a["upload file exists"] = "One or more files already exist on the file system.";
            a["upload prevented"] = "Operation prevented by exit program.";
            a["upload input limit"] = "Total input size limit exceeded.";
            a["upload no session"] = "Not connected to a valid session.";
            a["upload timeout"] = "Transaction timed out.";
            a["upload invalid response"] = "The server response is missing or invalid.";
            a["upload cancelled"] = "Upload canceled.";
            a["close browser text"] = "To complete the log off process, please close your browser window.";
            a["session ended text"] = "Your session has ended.";
            a["outside ucs2"] = "Characters are outside of UCS-2 range.";
            a["invalid number"] = "&1 is not a valid number.";
            a["invalid length"] = "&1 has an incorrect data length or decimal position.";
            a["invalid decimal"] = "&1 has too many decimal places. (max: &2)";
            a["invalid choice"] = '"&1" is invalid. Valid choices are: "&2" or "&3".';
            a["invalid date"] = '"&1" is not a valid date. Example format: &2';
            a["invalid time"] = '"&1" is not a valid time. Example format: &2';
            a["invalid time stamp"] = '"&1" is not a valid time stamp. Example format: &2';
            a["invalid percent"] = "&1 is not a valid decimal.";
            a["invalid digits"] = '"&1" contains too many digits. Max: &2';
            a["exceeds whole"] = '"&1" exceeds the maximum number of digits for the whole number portion (&2 digits).';
            a["exceeds decimal"] = '"&1" exceeds the maximum number of digits for the decimal portion (&2 digits).';
            a["zip too long"] = "Zip code is too long. (Maximum: &1 digits)";
            a["phone too long"] = "Phone number is too long. (Maximum: &1 digits)";
            a["ssno too long"] = "Social security number is too long. (Maximum: &1 digits)";
            a["invalid custom val"] = "Invalid custom validation function.";
            a["error custom val"] =
                "Error in custom validation function.";
            a.ME = "Mandatory entry field. You must enter data.";
            a.MF = "Mandatory fill field. You must fill the input box completely.";
            a.required = "The value cannot be blank. This field is required.";
            a["file required"] = "You must select at least one file.";
            a["signature overflow"] = "The signature drawing size exceeds the maximum number of bytes available for storing the signature. Please clear the signature pad and try again.";
            a.validValues = "Value entered is not valid. Valid values are: ";
            a["upload invalid type"] = "One or more files are of invalid type.";
            a["invalid email"] = "Invalid email address.";
            a["session timed out"] = "Your session has timed out.";
            a["invalid low range"] = "Value must be greater than or equal to &1.";
            a["invalid high range"] = "Value must be less than or equal to &1.";
            a["invalid range"] = "Valid range is &1 to &2.";
            a["unmonitored exception"] = "The program has encountered an unmonitored exception. Please contact the system administrator for assistance.";
            a["loading x"] = "Loading &1...";
            a["data src not specfd x"] = "Data source not specified for &1...";
            a["name fld not specfd x"] = "Name field not specified for &1...";
            a["val fld not specfd x"] = "Value field not specified for &1...";
            a["failed to load x"] = "Failed to load &1.";
            a["cannot rmv last col"] = "You cannot remove the last column.";
            a["cannot find col"] = "Cannot find the specified columnId.";
            a["subfile deletion"] = "Are you sure you want to delete the subfile?";
            a["downloading x"] = "Downloading &1";
            a["ie9 too low xlsxpics"] = "Images cannot be exported using IE9 or lower.";
            a["keyboard input inhibited"] = "Keyboard entry not allowed in this field.";
            a["num sessions exceeded"] = "Number of allowed sessions exceeded.";
            a["unable to load portal"] = "Unable to load portal settings or navigation items.";
            a["unable to load macr act"] = "Unable to load macro actions.";
            a["unable to load macr var"] = "Unable to load macro variables.";
            a["unable to load scrn lst"] = "Unable to load screen list.";
            a["unable to load new sett"] = "Unable to load new settings.";
            a["unable to load x"] = "Unable to load &1.";
            a["unable to add x"] = "Unable to add &1.";
            a["unable to rename x"] = "Unable to rename &1.";
            a["unable to delete x"] = "Unable to delete &1.";
            a["unable to update x"] = "Unable to update &1.";
            a["unable to reassn x"] = "Unable to reassign &1.";
            a["unable to reorder items"] = "Unable to reorder items.";
            a["unable to save theme"] = "Unable to save theme setting.";
            a["unable eval script url"] = "Unable to evaluate scripted web app URL.";
            a["close browser text AT"] = "Unsaved changes to the session(s) will be lost.";
            a["close all tabs"] =
                "Close all tabs?";
            a["close tab"] = "Do you want to close this tab?";
            a["invalid script url"] = "Invalid value for scripted web app URL.";
            a["unrecognized format"] = "Unrecognized format.";
            a["screen already defined"] = 'Screen "&1" is already defined.';
            a["macro already defined"] = 'Macro "&1" is already defined.';
            a["no screen ids"] = "There are no screen identifiers to display";
            a["confirm delete"] = "Confirm Delete";
            a["no actions"] = "There are no actions to display.";
            a["msg action input var"] = 'Enter the value in variable "&1" into the field at row &2 column &3.';
            a["msg action input user"] = "Enter the current user profile into the field at row &1 column &2.";
            a["msg action input js"] = "Enter the result of JavaScript expression <strong>&1</strong> into the field at row &2 column &3.";
            a["msg action input other"] = 'Enter the value "&1" into the field at row &2 column &3.';
            a["msg presskey var"] = 'Press the key defined in variable "&1".';
            a["msg presskey other"] = 'Press the "&1" key.';
            a["msg del scrn from macro"] = "Are you sure you want to delete the selected screen(s) from this macro?<br /> All associated actions will also be deleted.";
            a["choose scrn macro"] = "Choose a screen or macro to work with its properties.";
            a["choose a nav or toolbar"] = "Choose a navigation or toolbar item to work with its properties.";
            a["confirm del sel x"] = "Are you sure you want to delete the selected &1?";
            a["permission settings"] = "permission setting(s)";
            a["adding x"] = "Adding &1...";
            a["deleting x"] = "Deleting &1 ...";
            a["reassigning x"] = "Reassigning &1...";
            a.loading = "Loading...";
            a.saving = "Saving...";
            a["x added"] = "&1 added.";
            a["x deleted"] = "&1 deleted.";
            a["x reassigned"] =
                "&1 reassigned.";
            a["x updated"] = "&1 updated.";
            a["x saved"] = "&1 saved.";
            a["msg del group"] = 'Are you sure you want to delete group "&1"?<br /><br />Deleting groups also deletes any subgroups and any associated users.<br /><br />Are you sure you want to continue?';
            a["conf reassign users 1"] = "Are you sure you want to reassign ";
            a["conf reassign users 2a"] = 'user "&1" ';
            a["conf reassign users 2b"] = "the selected users ";
            a["conf reassign users 3"] = ' to group "&1"?';
            a["conf reassign group"] = 'Are you sure you want to reassign group "&1" to group "&2"?';
            a["conf delete users 1"] = "Are you sure you want to delete ";
            a["conf delete users 2a"] = 'user "&1"?';
            a["conf delete users 2b"] = "the selected users?";
            a["no users"] = "There are no users to display.";
            a["cannot delete own grp"] = "You cannot delete your own group.";
            a["cannot delete own usr"] = "You cannot delete your own user profile.";
            a["not auth reassign prf"] = "You are not authorized to reassign your own profile.";
            a["typeselect macro name"] = "Type or select macro name...";
            a["any child items will"] = "Any child items will also be deleted.";
            a["password must be"] = "Passwords must be at least 6 characters.";
            a["type or sel home page"] = "Type or select home page...";
            a["x is already in list"] = '"&1" is already in the list.';
            a["x is not valid libname"] = '"&1" is not a valid library name.';
            a["no libraries in list"] = "No libraries in the list";
            a["add libl entry"] = "Add library list entry";
            a["would you like add ano"] = "Would you like to add another?";
            a["already in suppl grp x"] = 'User is already in supplemental group "&1".';
            a["subfile full"] = "There are more than 9,999 records; only the first 9,999 records are displayed.";
            break;
        case "runtimeText":
            a["upload select text"] = "Select Files";
            a["upload clear text"] = "Clear";
            a["upload remove text"] = "Remove";
            a["upload upload text"] = "Upload";
            a["upload drophere text"] = "Drop files here";
            a["upload browser unsupported"] = "Drag/drop files requires Internet Explorer 10 or higher, Chrome, or Firefox";
            a["upload finished text"] = "Finished";
            a["excel export text"] = "Export to Excel";
            a["export to x"] = "Export to &1";
            a["filter text"] = "Filter";
            a["find text"] = "Find";
            a["reset data"] = "Reset";
            a["remove filters text"] =
                "Remove All Filters";
            a["displayed columns"] = "Displayed Columns";
            a["next link text"] = "Next";
            a["previous link text"] = "Previous";
            a["sort ascending text"] = "Sort Ascending";
            a["sort descending text"] = "Sort Descending";
            a["sort..."] = "Sort...";
            a.sort = "Sort";
            a["sort multiple"] = "Sort Multiple Columns";
            a.column = "Column";
            a.direction = "Direction";
            a.order = "Order";
            a.row = "row";
            a.rows = "rows";
            a.page = "Page";
            a.collapseAll = "Collapse All";
            a.expandAll = "Expand All";
            a.user = "User";
            a.password = "Password";
            a["sign on"] = "Sign On";
            a.pui = "Profound UI";
            a["pui sign on"] = a.pui + " " + a["sign on"];
            a.pjs = "Profound.js";
            a["pjs sign on"] = a.pjs + " " + a["sign on"];
            a["message id"] = "Message Id";
            a["ctlr job"] = "Controller Job";
            a["app job"] = "Application Job";
            a["joblog download"] = "Download Job Logs";
            a["curr user"] = "Current User";
            a["remote ip"] = "Remote IP Address";
            a["remote port"] = "Remote Port";
            a.severity = "Severity";
            a.date = "Date";
            a.time = "Time";
            a.program = "Program";
            a.procedure = "Procedure";
            a.lines = "Line(s)";
            a.message = "Message";
            a["new session"] = "New Session";
            a.close = "Close";
            a["current password"] = "Current Password";
            a["new password"] = "New Password";
            a["repeat new password"] = "Repeat New Password";
            a.submit = "Submit";
            a.exit = "Exit";
            a.warning = "Warning";
            a["change password"] = "Change Password";
            a.cancel = "Cancel";
            a["find text"] = "Find";
            a["remove filter"] = "Remove Filter";
            a.chart = "Chart";
            a.section = "Section";
            a.version = "Version";
            a.fixPack = "Fix Pack";
            a.yes = "Yes";
            a.no = "No";
            a.settings = "Settings";
            a.favorites = "Favorites";
            a["type query press en"] = "Type query, press Enter.";
            a["add to favorites"] =
                "Add to Favorites";
            a["rmv from favorites"] = "Remove from Favorites";
            a["please wait"] = "Please wait...";
            a["control panel"] = "Control Panel";
            a["my settings"] = "My Settings";
            a["about atrium"] = "About Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Warning: This computer program is protected by copyright law<br />and international treaties. Unauthorized reproduction or<br />distribution of this program, or any portion of it, may result in<br />severe civil and criminal penalties, and will be prosecuted to the<br />maximum extent possible under the law.<br /><br />Patented. &nbsp;U.S. Patent No. 8,667,405 B2.";
            a.item = "Item";
            a["open selected item"] = "Open Selected Item";
            a.of = "of";
            a["no results to dsp"] = "No results to display.";
            a["displaying results"] = "Displaying results";
            a["search results"] = "Search Results";
            a["new folder"] = "New Folder";
            a.rename = "Rename";
            a.description = "Description";
            a.ok = "OK";
            a.add = "Add";
            a["add x"] = "Add &1";
            a["delete"] = "Delete";
            a.screen = "Screen";
            a.screens = "Screens";
            a.macro = "Macro";
            a.macros = "Macros";
            a["screen id"] = "Screen Identifier";
            a["screen ids"] = "Screen Identifiers";
            a["field row"] = "Field Row";
            a["field column"] = "Field Column";
            a["field value"] = "Field Value";
            a.value = "Value";
            a.action = "Action";
            a.actions = "Actions";
            a["detect once"] = "Detect Once";
            a["delete screen"] = "Delete Screen";
            a["genie macros"] = "Genie Macros";
            a["screen name"] = "Screen name";
            a.identifier = "Identifier";
            a.identifiers = "Identifiers";
            a["macro name"] = "Macro name";
            a["close browser wintab"] = "Close the browser window or tab.";
            a.select = "Select";
            a["write value in field"] = "Write a value into a field";
            a["press a key"] = "Press a key";
            a["a literal value"] =
                "A literal value";
            a["a variable value"] = "A variable value";
            a["cur user profile"] = "The current user profile";
            a["result js expr"] = "The result of a JavaScript expression";
            a["action data"] = "Action data";
            a["data type"] = "Data type";
            a.users = "Users";
            a["all groups"] = "All Groups";
            a["supplemental groups"] = "Supplemental Groups";
            a["users w primary grp"] = 'Users whose Primary Group is "&1"';
            a["users w suppl grp"] = 'Users with Supplemental Group for "&1"';
            a.group = "Group";
            a.groups = "Groups";
            a.edit = "Edit";
            a["edit x"] =
                "Edit &1";
            a.manager = "Manager";
            a.administrator = "Administrator";
            a["primary group"] = "Primary Group";
            a["delete x"] = "Delete &1";
            a["reassign x"] = "Reassign &1";
            a["navigation item"] = "Navigation Item";
            a["navigation items"] = "Navigation Items";
            a["navigation panel"] = "Navigation Panel";
            a["home pages"] = "Home Pages";
            a["menu group"] = "Menu Group";
            a["menu item"] = "Menu Item";
            a["toolbar items"] = "Toolbar Items";
            a.toolbar = "Toolbar";
            a.button = "Button";
            a["pulldown menu"] = "Pulldown Menu";
            a["pulldown menu item"] = "Pulldown Menu Item";
            a["separator bar"] = "Separator Bar";
            a.spacer = "Spacer";
            a["item details"] = "Item Details";
            a["item number"] = "Item number";
            a["item type"] = "Item type";
            a["genie macro"] = "Genie Macro";
            a["rdf application"] = "Rich Display File Application";
            a["web application"] = "Web Application";
            a["pc command"] = "PC Command";
            a["dspf program library"] = "Display file program library";
            a["dspf program"] = "Display file program";
            a["variable name x"] = "Variable name &1";
            a["a tab in the portal"] = "A tab in the portal";
            a["a new browser wind"] =
                "A new browser window or tab";
            a.update = "Update";
            a.fill = "Fill";
            a.permissions = "Permissions";
            a["user/group name"] = "User/Group Name";
            a["all users groups"] = "All Users and Groups";
            a.type = "Type";
            a.access = "Access";
            a.allow = "Allow";
            a.disallow = "Disallow";
            a.navigation = "Navigation";
            a["add usrgrp perm"] = "Add User/Group Permissions";
            a.membership = "Membership";
            a.none = "None";
            a.remove = "Remove";
            a.appearance = "Appearance";
            a["home page"] = "Home page";
            a.tree = "Tree";
            a.accordion = "Accordion";
            a["min search chars"] = "Minimum search characters";
            a["libl for rdf apps"] = "Library List for Rich Display File Applications";
            a["library list"] = "Library list";
            a.library = "Library";
            a["use atrium def libl"] = "Use Atrium default library list";
            a["use jobd libl"] = "Use library list from JOBD";
            a["specify libl"] = "Specify library list";
            a.up = "Up";
            a.down = "Down";
            a["move up"] = "Move Up";
            a["move down"] = "Move Down";
            a["global settings"] = "Global settings";
            a.save = "Save";
            a["add usr to supp grp"] = "Add User to Supplemental Group";
            a["member of"] = "Member of";
            a["member of hlp"] =
                "The group that this user/group belongs to.";
            a["group name"] = "Group name";
            a["group name hlp"] = "The display name for this group.";
            a["inherit settings"] = "Inherit settings";
            a["inherit settings hlp"] = "When this option is checked, the user/group will inherit settings from its parent. When unchecked, the user/group will have its own settings data.";
            a["user name"] = "User Name";
            a["user name hlp"] = "The display name of this user profile.";
            a["access role"] = "Access Role";
            a["access role hlp"] = "Controls the access role of this user. Administrators can manage all groups and users, and can also control application authorities. Managers can configure user and group settings within their own group. Users have no special privileges.";
            a["can edit profile"] = "Can edit profile";
            a["can edit profile hlp"] = 'Allows the user to edit "appearance" and "navigation" settings, and to change the password. All other settings are never editable by the user.';
            a["user profile"] = "User Profile";
            a["user profile hlp"] = "The user profile name. User profile names are case sensitive, unless IBM i profiles are used.";
            a["password hlp"] = "Sets/resets the password. Passwords are case sensitive.";
            a["conf password"] = "Confirm Password";
            a["conf password hlp"] = "When setting/resetting the password, this field must match exactly to the new password given. Passwords are case sensitive.";
            a["browser title"] = "Browser title";
            a["browser title hlp"] = "Sets the text that will display in the browser's title bar.";
            a["show banner"] = "Show banner";
            a["show banner hlp"] = "Uncheck this option if you do not wish to show the banner at the top of the portal.";
            a["banner height"] = "Banner height";
            a["banner height hlp"] = "Sets the height of the banner at the top of the portal in pixels. This setting is ignored if you have chosen not to show the banner. Valid values are 0-600 pixels.";
            a["banner url"] = "Banner URL";
            a["banner url hlp"] = "Sets the URL where the banner content is located. Can be either an absolute or fully qualified URL.";
            a.theme = "Theme";
            a["theme hlp"] = 'Sets the default theme. This can be overridden by individual users if <strong>"Allow users to select theme"</strong> is enabled.';
            a["allow sel theme"] = "Allow user to select theme";
            a["allow sel theme hlp"] = "If checked, users will have the ability to select their desired theme using a control in the toolbar.";
            a["show menu search"] = "Show menu search";
            a["show menu search hlp"] = "Uncheck to disable the menu search feature.";
            a["show fav sys"] = "Show Favorites system";
            a["show fav sys hlp"] = "Uncheck to disable the Favorites system.";
            a["show fav start"] = "Show Favorites on startup";
            a["show fav start hlp"] = "If checked, the Favorites panel is shown on startup. Otherwise the Navigation panel will be shown (default). This option will only be available if Favorites system is enabled.";
            a["limit num sessn"] = "Limit number of sessions";
            a["limit num sessn hlp"] =
                "Number of Atrium sessions allowed for this user/group. A value of zero allows for unlimited sessions. The limitation is applied per web browser.";
            a["show hmpg start"] = "Show home page on startup";
            a["show hmpg start hlp"] = "If checked, a customizable home page will be launched in the portal on startup.";
            a["home page url"] = "Home page URL";
            a["home page url hlp"] = "Sets the URL where the home page content is located. Can be either an absolute or fully qualified URL.";
            a["navi pnl title"] = "Navigation panel title";
            a["navi pnl title hlp"] = "Sets the text that will display in the navigation panel's title bar.";
            a["navi pnl width"] = "Navigation panel start width";
            a["navi pnl width hlp"] = "Sets the starting width of the navigation panel in pixels. The user can resize or even hide the panel as desired. Valid values are 0-2000 pixels.";
            a["navi type"] = "Navigation type";
            a["navi type hlp"] = 'Controls the type of menu used in the navigation panel, "tree" or "accordion". This setting does not apply to the toolbar.';
            a["single click nav"] =
                "Single click navigation";
            a["single click nav hlp"] = "If checked, menu items in the navigation panel will launch on a single click. Otherwise, they will launch only on double click. This setting does not apply to the toolbar.";
            a["current library"] = "Current library";
            a["current library hlp"] = "Specify the current library, *USRPRF, or *CRTDFT.";
            a["job descr"] = "Job description";
            a["job descr hlp"] = "Specify a job description to set the library list from. *USRPRF can be specified if the Atrium users are IBM i user profiles.";
            a["job descr lib"] = "Job description library";
            a["job descr lib hlp"] = "Specify the library for the job description. *LIBL or *CURLIB can be specified.";
            a["item name"] = "Item name";
            a["item name hlp"] = "Sets the display name of the navigation or toolbar item.";
            a["action type"] = "Action type";
            a["action type hlp"] = "Sets the type of application that this item launches.";
            a.url = "URL";
            a["url hlp"] = "Sets the URL of the Web application. This can be specified either as an absolute path or a fully qualified URL. Query string parameters may be specified on the URL.";
            a["genie url"] = "Genie URL";
            a["genie url hlp"] = "Sets the URL that is used to launch Genie. If not specified, the default Genie URL /profoundui/auth/genie will be used. This field is useful if an alternate Genie URL or query string parameters are required. For example: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Open as";
            a["open as hlp"] = "Sets whether to launch the item as a new tab in the portal, or as a new browser window or tab. Whether the browser uses a new window or tab depends on the user's browser settings.";
            a["opens once only"] = "Opens once only";
            a["opens once only hlp"] = "By default, if the user launches this item when a tab is already open to it in the portal, another tab will be opened to the item. There is no limitation on the number of tabs the user can open in this way. When this option is checked, the user will not be able to open more than one tab to this item. If there is already a tab open for the item when the user selects it, the existing tab will be activated. This option is ignored when opening the item in a new browser window or tab.";
            a.icon = "Icon";
            a["icon hlp"] = "Optional. Sets an icon file to be used for the navigation or toolbar item. The icon file can be in GIF, JPG, or PNG format. Transparent GIFs are recommended. The path should be given as an absolute path from the root of the Atrium installation. If no icon is specified, Atrium will use a default icon for navigation items. No icon will be shown for toolbar items unless specified here.";
            a.parameter = "Parameter";
            a["parameter hlp"] = "Optional: Specifies a parameter that will be passed to your Rich Display program when it is launched.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function xd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "This will end your session.";
            a["no connection message"] = "Unable to reach server.  Check your connection and try again.";
            a["upload file limit"] = "Limit of &1 file(s) exceeded.";
            a["upload size limit"] = "Limit of &1MB per file exceeded";
            a["upload no files"] = "No files selected.";
            a["upload duplicate file"] = "Duplicate files selected.";
            a["upload file exists"] = "One or more files already exist on the file system.";
            a["upload prevented"] = "Operation prevented by exit program.";
            a["upload input limit"] = "Total input size limit exceeded.";
            a["upload no session"] = "Not connected to a valid session.";
            a["upload timeout"] = "Transaction timed out.";
            a["upload invalid response"] = "The server response is missing or invalid.";
            a["upload cancelled"] = "Upload cancelled.";
            a["close browser text"] = "To complete the log off process, please close your browser window.";
            a["session ended text"] = "Your session has ended.";
            a["outside ucs2"] = "Characters are outside of UCS-2 range.";
            a["invalid number"] =
                "&1 is not a valid number.";
            a["invalid length"] = "&1 has an incorrect data length or decimal position.";
            a["invalid decimal"] = "&1 has too many decimal places. (max: &2)";
            a["invalid choice"] = '"&1" is invalid. Valid choices are: "&2" or "&3".';
            a["invalid date"] = '"&1" is not a valid date. Example format: &2';
            a["invalid time"] = '"&1" is not a valid time. Example format: &2';
            a["invalid time stamp"] = '"&1" is not a valid time stamp. Example format: &2';
            a["invalid percent"] = "&1 is not a valid decimal.";
            a["invalid digits"] =
                '"&1" contains too many digits. Max: &2';
            a["exceeds whole"] = '"&1" exceeds the maximum number of digits for the whole number portion (&2 digits).';
            a["exceeds decimal"] = '"&1" exceeds the maximum number of digits for the decimal portion (&2 digits).';
            a["zip too long"] = "Zip code is too long. (Maximum: &1 digits)";
            a["phone too long"] = "Phone number is too long. (Maximum: &1 digits)";
            a["ssno too long"] = "Social security number is too long. (Maximum: &1 digits)";
            a["invalid custom val"] = "Invalid custom validation function.";
            a["error custom val"] = "Error in custom validation function.";
            a.ME = "Mandatory entry field. You must enter data.";
            a.MF = "Mandatory fill field. You must fill the input box completely.";
            a.required = "The value cannot be blank. This field is required.";
            a["file required"] = "You must select at least one file.";
            a["signature overflow"] = "The signature drawing size exceeds the maximum number of bytes available for storing the signature. Please clear the signature pad and try again.";
            a.validValues = "Value entered is not valid. Valid values are: ";
            a["upload invalid type"] = "One or more files are of invalid type.";
            a["invalid email"] = "Invalid email address.";
            a["session timed out"] = "Your session has timed out.";
            a["invalid low range"] = "Value must be greater than or equal to &1.";
            a["invalid high range"] = "Value must be less than or equal to &1.";
            a["invalid range"] = "Valid range is &1 to &2.";
            a["unmonitored exception"] = "The program has encountered an unmonitored exception. Please contact the system administrator for assistance.";
            a["loading x"] = "Loading &1...";
            a["data src not specfd x"] = "Data source not specified for &1...";
            a["name fld not specfd x"] = "Name field not specified for &1...";
            a["val fld not specfd x"] = "Value field not specified for &1...";
            a["failed to load x"] = "Failed to load &1.";
            a["cannot rmv last col"] = "You cannot remove the last column.";
            a["cannot find col"] = "Cannot find the specified columnId.";
            a["subfile deletion"] = "Are you sure you want to delete the subfile?";
            a["downloading x"] = "Downloading &1";
            a["ie9 too low xlsxpics"] = "Images cannot be exported using IE9 or lower.";
            a["keyboard input inhibited"] = "Keyboard entry not allowed in this field.";
            a["num sessions exceeded"] = "Number of allowed sessions exceeded.";
            a["unable to load portal"] = "Unable to load portal settings or navigation items.";
            a["unable to load macr act"] = "Unable to load macro actions.";
            a["unable to load macr var"] = "Unable to load macro variables.";
            a["unable to load scrn lst"] = "Unable to load screen list.";
            a["unable to load new sett"] = "Unable to load new settings.";
            a["unable to load x"] = "Unable to load &1.";
            a["unable to add x"] = "Unable to add &1.";
            a["unable to rename x"] = "Unable to rename &1.";
            a["unable to delete x"] = "Unable to delete &1.";
            a["unable to update x"] = "Unable to update &1.";
            a["unable to reassn x"] = "Unable to reassign &1.";
            a["unable to reorder items"] = "Unable to reorder items.";
            a["unable to save theme"] = "Unable to save theme setting.";
            a["unable eval script url"] = "Unable to evaluate scripted web app URL.";
            a["close browser text AT"] = "Unsaved changes to the session(s) will be lost.";
            a["close all tabs"] =
                "Close all tabs?";
            a["close tab"] = "Do you want to close this tab?";
            a["invalid script url"] = "Invalid value for scripted web app URL.";
            a["unrecognized format"] = "Unrecognized format.";
            a["screen already defined"] = 'Screen "&1" is already defined.';
            a["macro already defined"] = 'Macro "&1" is already defined.';
            a["no screen ids"] = "There are no screen identifiers to display";
            a["confirm delete"] = "Confirm Delete";
            a["no actions"] = "There are no actions to display.";
            a["msg action input var"] = 'Enter the value in variable "&1" into the field at row &2 column &3.';
            a["msg action input user"] = "Enter the current user profile into the field at row &1 column &2.";
            a["msg action input js"] = "Enter the result of JavaScript expression <strong>&1</strong> into the field at row &2 column &3.";
            a["msg action input other"] = 'Enter the value "&1" into the field at row &2 column &3.';
            a["msg presskey var"] = 'Press the key defined in variable "&1".';
            a["msg presskey other"] = 'Press the "&1" key.';
            a["msg del scrn from macro"] = "Are you sure you want to delete the selected screen(s) from this macro?<br /> All associated actions will also be deleted.";
            a["choose scrn macro"] = "Choose a screen or macro to work with its properties.";
            a["choose a nav or toolbar"] = "Choose a navigation or toolbar item to work with its properties.";
            a["confirm del sel x"] = "Are you sure you want to delete the selected &1?";
            a["permission settings"] = "permission setting(s)";
            a["adding x"] = "Adding &1...";
            a["deleting x"] = "Deleting &1 ...";
            a["reassigning x"] = "Reassigning &1...";
            a.loading = "Loading...";
            a.saving = "Saving...";
            a["x added"] = "&1 added.";
            a["x deleted"] = "&1 deleted.";
            a["x reassigned"] =
                "&1 reassigned.";
            a["x updated"] = "&1 updated.";
            a["x saved"] = "&1 saved.";
            a["msg del group"] = 'Are you sure you want to delete group "&1"?<br /><br />Deleting groups also deletes any subgroups and any associated users.<br /><br />Are you sure you want to continue?';
            a["conf reassign users 1"] = "Are you sure you want to reassign ";
            a["conf reassign users 2a"] = 'user "&1" ';
            a["conf reassign users 2b"] = "the selected users ";
            a["conf reassign users 3"] = ' to group "&1"?';
            a["conf reassign group"] = 'Are you sure you want to reassign group "&1" to group "&2"?';
            a["conf delete users 1"] = "Are you sure you want to delete ";
            a["conf delete users 2a"] = 'user "&1"?';
            a["conf delete users 2b"] = "the selected users?";
            a["no users"] = "There are no users to display.";
            a["cannot delete own grp"] = "You cannot delete your own group.";
            a["cannot delete own usr"] = "You cannot delete your own user profile.";
            a["not auth reassign prf"] = "You are not authorized to reassign your own profile.";
            a["typeselect macro name"] = "Type or select macro name...";
            a["any child items will"] = "Any child items will also be deleted.";
            a["password must be"] = "Passwords must be at least 6 characters.";
            a["type or sel home page"] = "Type or select home page...";
            a["x is already in list"] = '"&1" is already in the list.';
            a["x is not valid libname"] = '"&1" is not a valid library name.';
            a["no libraries in list"] = "No libraries in the list";
            a["add libl entry"] = "Add library list entry";
            a["would you like add ano"] = "Would you like to add another?";
            a["already in suppl grp x"] = 'User is already in supplemental group "&1".';
            break;
        case "runtimeText":
            a["upload select text"] =
                "Select Files";
            a["upload clear text"] = "Clear";
            a["upload remove text"] = "Remove";
            a["upload upload text"] = "Upload";
            a["upload drophere text"] = "Drop files here";
            a["upload browser unsupported"] = "Drag/drop files requires Internet Explorer 10 or higher, Chrome, or Firefox";
            a["upload finished text"] = "Finished";
            a["excel export text"] = "Export to Excel";
            a["export to x"] = "Export to &1";
            a["filter text"] = "Filter";
            a["find text"] = "Find";
            a["reset data"] = "Reset";
            a["remove filters text"] = "Remove All Filters";
            a["displayed columns"] =
                "Displayed Columns";
            a["next link text"] = "Next";
            a["previous link text"] = "Previous";
            a["sort ascending text"] = "Sort Ascending";
            a["sort descending text"] = "Sort Descending";
            a["sort..."] = "Sort...";
            a.sort = "Sort";
            a["sort multiple"] = "Sort Multiple Columns";
            a.column = "Column";
            a.direction = "Direction";
            a.order = "Order";
            a.row = "row";
            a.rows = "rows";
            a.page = "Page";
            a.collapseAll = "Collapse All";
            a.expandAll = "Expand All";
            a.user = "User";
            a.password = "Password";
            a["sign on"] = "Sign On";
            a.pui = "Profound UI";
            a["pui sign on"] = a.pui +
                " " + a["sign on"];
            a.pjs = "Profound.js";
            a["pjs sign on"] = a.pjs + " " + a["sign on"];
            a["message id"] = "Message Id";
            a["ctlr job"] = "Controller Job";
            a["app job"] = "Application Job";
            a["joblog download"] = "Download Job Logs";
            a["curr user"] = "Current User";
            a["remote ip"] = "Remote IP Address";
            a["remote port"] = "Remote Port";
            a.severity = "Severity";
            a.date = "Date";
            a.time = "Time";
            a.program = "Program";
            a.procedure = "Procedure";
            a.lines = "Line(s)";
            a.message = "Message";
            a["new session"] = "New Session";
            a.close = "Close";
            a["current password"] =
                "Current Password";
            a["new password"] = "New Password";
            a["repeat new password"] = "Repeat New Password";
            a.submit = "Submit";
            a.exit = "Exit";
            a.warning = "Warning";
            a["change password"] = "Change Password";
            a.cancel = "Cancel";
            a["find text"] = "Find";
            a["remove filter"] = "Remove Filter";
            a.chart = "Chart";
            a.section = "Section";
            a.version = "Version";
            a.fixPack = "Fix Pack";
            a.yes = "Yes";
            a.no = "No";
            a.settings = "Settings";
            a.favorites = "Favourites";
            a["type query press en"] = "Type query, press Enter.";
            a["add to favorites"] = "Add to Favourites";
            a["rmv from favorites"] = "Remove from Favourites";
            a["please wait"] = "Please wait...";
            a["control panel"] = "Control Panel";
            a["my settings"] = "My Settings";
            a["about atrium"] = "About Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Warning: This computer program is protected by copyright law<br />and international treaties. Unauthorized reproduction or<br />distribution of this program, or any portion of it, may result in<br />severe civil and criminal penalties, and will be prosecuted to the<br />maximum extent possible under the law.<br /><br />Patented. &nbsp;U.S. Patent No. 8,667,405 B2.";
            a.item = "Item";
            a["open selected item"] = "Open Selected Item";
            a.of = "of";
            a["no results to dsp"] = "No results to display.";
            a["displaying results"] = "Displaying results";
            a["search results"] = "Search Results";
            a["new folder"] = "New Folder";
            a.rename = "Rename";
            a.description = "Description";
            a.ok = "OK";
            a.add = "Add";
            a["add x"] = "Add &1";
            a["delete"] = "Delete";
            a.screen = "Screen";
            a.screens = "Screens";
            a.macro = "Macro";
            a.macros = "Macros";
            a["screen id"] = "Screen Identifier";
            a["screen ids"] = "Screen Identifiers";
            a["field row"] = "Field Row";
            a["field column"] = "Field Column";
            a["field value"] = "Field Value";
            a.value = "Value";
            a.action = "Action";
            a.actions = "Actions";
            a["detect once"] = "Detect Once";
            a["delete screen"] = "Delete Screen";
            a["genie macros"] = "Genie Macros";
            a["screen name"] = "Screen name";
            a.identifier = "Identifier";
            a.identifiers = "Identifiers";
            a["macro name"] = "Macro name";
            a["close browser wintab"] = "Close the browser window or tab.";
            a.select = "Select";
            a["write value in field"] = "Write a value into a field";
            a["press a key"] = "Press a key";
            a["a literal value"] =
                "A literal value";
            a["a variable value"] = "A variable value";
            a["cur user profile"] = "The current user profile";
            a["result js expr"] = "The result of a JavaScript expression";
            a["action data"] = "Action data";
            a["data type"] = "Data type";
            a.users = "Users";
            a["all groups"] = "All Groups";
            a["supplemental groups"] = "Supplemental Groups";
            a["users w primary grp"] = 'Users whose Primary Group is "&1"';
            a["users w suppl grp"] = 'Users with Supplemental Group for "&1"';
            a.group = "Group";
            a.groups = "Groups";
            a.edit = "Edit";
            a["edit x"] =
                "Edit &1";
            a.manager = "Manager";
            a.administrator = "Administrator";
            a["primary group"] = "Primary Group";
            a["delete x"] = "Delete &1";
            a["reassign x"] = "Reassign &1";
            a["navigation item"] = "Navigation Item";
            a["navigation items"] = "Navigation Items";
            a["navigation panel"] = "Navigation Panel";
            a["home pages"] = "Home Pages";
            a["menu group"] = "Menu Group";
            a["menu item"] = "Menu Item";
            a["toolbar items"] = "Toolbar Items";
            a.toolbar = "Toolbar";
            a.button = "Button";
            a["pulldown menu"] = "Pulldown Menu";
            a["pulldown menu item"] = "Pulldown Menu Item";
            a["separator bar"] = "Separator Bar";
            a.spacer = "Spacer";
            a["item details"] = "Item Details";
            a["item number"] = "Item number";
            a["item type"] = "Item type";
            a["genie macro"] = "Genie Macro";
            a["rdf application"] = "Rich Display File Application";
            a["web application"] = "Web Application";
            a["pc command"] = "PC Command";
            a["dspf program library"] = "Display file program library";
            a["dspf program"] = "Display file program";
            a["variable name x"] = "Variable name &1";
            a["a tab in the portal"] = "A tab in the portal";
            a["a new browser wind"] =
                "A new browser window or tab";
            a.update = "Update";
            a.fill = "Fill";
            a.permissions = "Permissions";
            a["user/group name"] = "User/Group Name";
            a["all users groups"] = "All Users and Groups";
            a.type = "Type";
            a.access = "Access";
            a.allow = "Allow";
            a.disallow = "Disallow";
            a.navigation = "Navigation";
            a["add usrgrp perm"] = "Add User/Group Permissions";
            a.membership = "Membership";
            a.none = "None";
            a.remove = "Remove";
            a.appearance = "Appearance";
            a["home page"] = "Home page";
            a.tree = "Tree";
            a.accordion = "Accordion";
            a["min search chars"] = "Minimum search characters";
            a["libl for rdf apps"] = "Library List for Rich Display File Applications";
            a["library list"] = "Library list";
            a.library = "Library";
            a["use atrium def libl"] = "Use Atrium default library list";
            a["use jobd libl"] = "Use library list from JOBD";
            a["specify libl"] = "Specify library list";
            a.up = "Up";
            a.down = "Down";
            a["move up"] = "Move Up";
            a["move down"] = "Move Down";
            a["global settings"] = "Global settings";
            a.save = "Save";
            a["add usr to supp grp"] = "Add User to Supplemental Group";
            a["member of"] = "Member of";
            a["member of hlp"] =
                "The group that this user/group belongs to.";
            a["group name"] = "Group name";
            a["group name hlp"] = "The display name for this group.";
            a["inherit settings"] = "Inherit settings";
            a["inherit settings hlp"] = "When this option is checked, the user/group will inherit settings from its parent. When unchecked, the user/group will have its own settings data.";
            a["user name"] = "User Name";
            a["user name hlp"] = "The display name of this user profile.";
            a["access role"] = "Access Role";
            a["access role hlp"] = "Controls the access role of this user. Administrators can manage all groups and users, and can also control application authorities. Managers can configure user and group settings within their own group. Users have no special privileges.";
            a["can edit profile"] = "Can edit profile";
            a["can edit profile hlp"] = 'Allows the user to edit "appearance" and "navigation" settings, and to change the password. All other settings are never editable by the user.';
            a["user profile"] = "User Profile";
            a["user profile hlp"] = "The user profile name. User profile names are case sensitive, unless IBM i profiles are used.";
            a["password hlp"] = "Sets/resets the password. Passwords are case sensitive.";
            a["conf password"] = "Confirm Password";
            a["conf password hlp"] = "When setting/resetting the password, this field must match exactly to the new password given. Passwords are case sensitive.";
            a["browser title"] = "Browser title";
            a["browser title hlp"] = "Sets the text that will display in the browser's title bar.";
            a["show banner"] = "Show banner";
            a["show banner hlp"] = "Uncheck this option if you do not wish to show the banner at the top of the portal.";
            a["banner height"] = "Banner height";
            a["banner height hlp"] = "Sets the height of the banner at the top of the portal in pixels. This setting is ignored if you have chosen not to show the banner. Valid values are 0-600 pixels.";
            a["banner url"] = "Banner URL";
            a["banner url hlp"] = "Sets the URL where the banner content is located. Can be either an absolute or fully qualified URL.";
            a.theme = "Theme";
            a["theme hlp"] = 'Sets the default theme. This can be overridden by individual users if <strong>"Allow users to select theme"</strong> is enabled.';
            a["allow sel theme"] = "Allow user to select theme";
            a["allow sel theme hlp"] = "If checked, users will have the ability to select their desired theme using a control in the toolbar.";
            a["show menu search"] = "Show menu search";
            a["show menu search hlp"] = "Uncheck to disable the menu search feature.";
            a["show fav sys"] = "Show Favourites system";
            a["show fav sys hlp"] = "Uncheck to disable the Favourites system.";
            a["show fav start"] = "Show Favourites on startup";
            a["show fav start hlp"] = "If checked, the Favourites panel is shown on startup. Otherwise the Navigation panel will be shown (default). This option will only be available if Favourites system is enabled.";
            a["limit num sessn"] = "Limit number of sessions";
            a["limit num sessn hlp"] =
                "Number of Atrium sessions allowed for this user/group. A value of zero allows for unlimited sessions. The limitation is applied per web browser.";
            a["show hmpg start"] = "Show home page on startup";
            a["show hmpg start hlp"] = "If checked, a customizable home page will be launched in the portal on startup.";
            a["home page url"] = "Home page URL";
            a["home page url hlp"] = "Sets the URL where the home page content is located. Can be either an absolute or fully qualified URL.";
            a["navi pnl title"] = "Navigation panel title";
            a["navi pnl title hlp"] = "Sets the text that will display in the navigation panel's title bar.";
            a["navi pnl width"] = "Navigation panel start width";
            a["navi pnl width hlp"] = "Sets the starting width of the navigation panel in pixels. The user can resize or even hide the panel as desired. Valid values are 0-2000 pixels.";
            a["navi type"] = "Navigation type";
            a["navi type hlp"] = 'Controls the type of menu used in the navigation panel, "tree" or "accordion". This setting does not apply to the toolbar.';
            a["single click nav"] =
                "Single click navigation";
            a["single click nav hlp"] = "If checked, menu items in the navigation panel will launch on a single click. Otherwise, they will launch only on double click. This setting does not apply to the toolbar.";
            a["current library"] = "Current library";
            a["current library hlp"] = "Specify the current library, *USRPRF, or *CRTDFT.";
            a["job descr"] = "Job description";
            a["job descr hlp"] = "Specify a job description to set the library list from. *USRPRF can be specified if the Atrium users are IBM i user profiles.";
            a["job descr lib"] = "Job description library";
            a["job descr lib hlp"] = "Specify the library for the job description. *LIBL or *CURLIB can be specified.";
            a["item name"] = "Item name";
            a["item name hlp"] = "Sets the display name of the navigation or toolbar item.";
            a["action type"] = "Action type";
            a["action type hlp"] = "Sets the type of application that this item launches.";
            a.url = "URL";
            a["url hlp"] = "Sets the URL of the Web application. This can be specified either as an absolute path or a fully qualified URL. Query string parameters may be specified on the URL.";
            a["genie url"] = "Genie URL";
            a["genie url hlp"] = "Sets the URL that is used to launch Genie. If not specified, the default Genie URL /profoundui/auth/genie will be used. This field is useful if an alternate Genie URL or query string parameters are required. For example: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Open as";
            a["open as hlp"] = "Sets whether to launch the item as a new tab in the portal, or as a new browser window or tab. Whether the browser uses a new window or tab depends on the user's browser settings.";
            a["opens once only"] = "Opens once only";
            a["opens once only hlp"] = "By default, if the user launches this item when a tab is already open to it in the portal, another tab will be opened to the item. There is no limitation on the number of tabs the user can open in this way. When this option is checked, the user will not be able to open more than one tab to this item. If there is already a tab open for the item when the user selects it, the existing tab will be activated. This option is ignored when opening the item in a new browser window or tab.";
            a.icon = "Icon";
            a["icon hlp"] = "Optional. Sets an icon file to be used for the navigation or toolbar item. The icon file can be in GIF, JPG, or PNG format. Transparent GIFs are recommended. The path should be given as an absolute path from the root of the Atrium installation. If no icon is specified, Atrium will use a default icon for navigation items. No icon will be shown for toolbar items unless specified here.";
            a.parameter = "Parameter";
            a["parameter hlp"] = "Optional: Specifies a parameter that will be passed to your Rich Display program when it is launched.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function yd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "Die Sitzung wird beendet.";
            a["no connection message"] = "System i5 ist nicht erreichbar, bitte die Kommunikation pr\u00fcfen und erneut versuchen.";
            a["upload file limit"] = "Maximum von &1 Datei(en) ist erreicht.";
            a["upload size limit"] = "Maximum von &1MB je Datei ist erreicht";
            a["upload no files"] = "Keine Datei(en) ausgew\u00e4hlt.";
            a["upload duplicate file"] = "Doppelte Dateien ausgew\u00e4hlt.";
            a["upload file exists"] = "Eine oder mehrere Datei(en) existieren bereits im Dateisystem.";
            a["upload prevented"] = "Operation untersagt durch Pr\u00fcfprogramm.";
            a["upload input limit"] = "Gesamte Eingabegr\u00f6\u00dfe ist \u00fcberschritten.";
            a["upload no session"] = "Keine Verbindung zu einer g\u00fcltigen Sitzung.";
            a["upload timeout"] = "Zeit\u00fcberschreitung Vorgang.";
            a["upload invalid response"] = "Die Server Antwort fehlt oder ist ung\u00fcltig.";
            a["upload cancelled"] = "Datei\u00fcbertragung abgebrochen.";
            a["close browser text"] = "Bitte das Browserfenster schlie\u00dfen, um die Abmeldung zu vervollst\u00e4ndigen.";
            a["session ended text"] = "Die Sitzung ist beendet.";
            a["outside ucs2"] = "Buchstaben au\u00dferhalb des UCS-2 Bereichs.";
            a["invalid number"] = "&1 ist keine g\u00fcltige Nummer.";
            a["invalid length"] = "&1 hat ung\u00fcltige Datenl\u00e4nge oder Dezimalstelle.";
            a["invalid decimal"] = "&1 hat zu viele Dezimalstellen. (max: &2)";
            a["invalid choice"] = '"&1" ist ung\u00fcltig. G\u00fcltige Werte sind "&2" oder "&3".';
            a["invalid date"] = '"&1" ist kein g\u00fcltiges Datum. Beispielformat: &2';
            a["invalid time"] = '"&1" ist keine g\u00fcltige Zeit. Beispielformat: &2';
            a["invalid time stamp"] = '"&1" ist kein g\u00fcltiger Zeitstempel. Beispielformat: &2';
            a["invalid percent"] = "&1 ist kein g\u00fcltige Zahl.";
            a["invalid digits"] = '"&1" enth\u00e4lt zu viele Ziffern. Max: &2';
            a["exceeds whole"] = '"&1" \u00fcberschreitet die maximale Anahl von Ziffern der gesamten Zahl (&2 Stellen).';
            a["exceeds decimal"] = '"&1" \u00fcberschreitet die maximale Anzahl von Ziffern f\u00fcr den Nachkommateil (&2 Stellen).';
            a["zip too long"] = "Postleitzahl ist zu lang. (Max.: &1 Ziffern)";
            a["phone too long"] =
                "Telefonnummer ist zu lang. (Max.: &1 Ziffern)";
            a["ssno too long"] = "Sozialversicherungsnummer ist zu lang. (Max.: &1 Ziffern)";
            a["invalid custom val"] = "Ung\u00fcltige benutzerdefinierte Pr\u00fcffunktion.";
            a["error custom val"] = "Fehler in benutzerdefinierter Pr\u00fcffunktion.";
            a.ME = "Pflichtfeld, bitte Daten eingeben.";
            a.MF = "Pflichtfeld, eine vollst\u00e4ndige Eingabe ist notwendig.";
            a.required = "Der Wert kann nicht leer sein, Eingabe erforderlich.";
            a["file required"] = "Bitte mindestens eine Datei ausw\u00e4hlen.";
            a["signature overflow"] = "Die Gr\u00f6\u00dfe der Signatur \u00fcberschreitet die maximale Speichergr\u00f6\u00dfe. Bitte l\u00f6schen und erneut versuchen.";
            a.validValues = "Eingegebener Wert ist nicht g\u00fcltig. G\u00fcltige Werte sind: ";
            a["upload invalid type"] = "Eine oder mehrere Dateien haben den falschen Typcode.";
            a["invalid email"] = "Ung\u00fcltige E-Mail-Adresse.";
            a["session timed out"] = "Ihre Sitzung ist abgelaufen.";
            a["invalid low range"] = "Wert muss gr\u00f6\u00dfer sein als &1";
            a["invalid high range"] =
                "Wert muss kleiner oder gleich &1 sein";
            a["invalid range"] = "G\u00fcltiger Bereich ist zwischen &1 und &2";
            a["unmonitored exception"] = "Das Programm hat einen nicht \u00fcberwachten Fehler gefunden. Bitte kontaktieren Sie ihren Systemadministrator.";
            a["loading x"] = "&1 wird geladen";
            a["data src not specfd x"] = "Die Datenquelle ist nicht angegeben f\u00fcr &1...";
            a["name fld not specfd x"] = "Das Namensfeld ist nicht angegeben f\u00fcr &1...";
            a["val fld not specfd x"] = "Das Wertfeld ist nicht angegeben f\u00fcr &1...";
            a["failed to load x"] = "Fehler beim Laden &1.";
            a["cannot rmv last col"] = "Die letzte Spalte kann nicht gel\u00f6scht werden.";
            a["cannot find col"] = "Die spezifische SpaltenId kann nicht gefunden werden.";
            a["subfile deletion"] = "Wollen Sie wirklich die Subfile l\u00f6schen?";
            a["downloading x"] = "&1 wird heruntergeladen.";
            a["ie9 too low xlsxpics"] = "Bilder k\u00f6nnen nicht exporiert werden mit einer Version unter IE9.";
            a["keyboard input inhibited"] = "Tastatureingabe ist in diesem Feld nicht erlaubt.";
            a["num sessions exceeded"] =
                "Anzahl der Sitzungen \u00fcberschritten.";
            a["unable to load portal"] = "Die Portaleinstellungen oder Navigationselemente konnten nicht geladen werden.";
            a["unable to load macr act"] = "Makroaktionen konnten nicht geladen werden.";
            a["unable to load macr var"] = "Makrovariablen konnten nicht geladen werden.";
            a["unable to load scrn lst"] = "Die Bildschirmliste konnte nicht geladen werden.";
            a["unable to load new sett"] = "Neue Einstellungen konnten nicht geladen werden.";
            a["unable to load x"] = "&1 kann nicht geladen werden.";
            a["unable to add x"] = "&1 kann nicht hinzugef\u00fcgt werden.";
            a["unable to rename x"] = "&1 kann nicht umbenannt werden.";
            a["unable to delete x"] = "&1 kann nicht gel\u00f6scht werden.";
            a["unable to update x"] = "&1 kann nicht aktualisiert werden.";
            a["unable to reassn x"] = "&1 kann nicht zugewiesen werden.";
            a["unable to reorder items"] = "Die Artikel k\u00f6nnen nicht neu sortiert werden.";
            a["unable to save theme"] = "Die Designeinstellung konnte nicht gespeichert werden.";
            a["unable eval script url"] = "Die URL der Skript-Webanwendung kann nicht ausgewertet werden.";
            a["close browser text AT"] = "Nicht gespeicherte \u00c4nderungen an den Sitzungen gehen verloren.";
            a["close all tabs"] = "Alle Fenster schlie\u00dfen?";
            a["close tab"] = "M\u00f6chten Sie diesen Tab schlie\u00dfen?";
            a["invalid script url"] = "Ung\u00fcltiger Wert f\u00fcr die URL der skriptgesteuerten Webanwendung.";
            a["unrecognized format"] = "Unbekanntes Format";
            a["screen already defined"] = 'Der Bildschirm "&1" ist bereits definiert.';
            a["macro already defined"] = 'Das Makro "&1" ist bereits definiert.';
            a["no screen ids"] =
                "Es gibt keine Bildschirm-IDs zum Anzeigen";
            a["confirm delete"] = "L\u00f6schen best\u00e4tigen";
            a["no actions"] = "Es gibt keine Aktionen zum Anzeigen.";
            a["msg action input var"] = 'Tragen Sie den Wert in die Variable "&1" in das Feld in Zeile &2 Spalte &3.';
            a["msg action input user"] = "Geben Sie das aktuelle Benutzerprofil in das Feld in Zeile &1 Spalte &2.";
            a["msg action input js"] = "Geben Sie das Ergebnis des JavaScript-Ausdrucks <strong>&1</strong> in das Feld in Zeile &2 Spalte &3 ein.";
            a["msg action input other"] =
                'Geben Sie den Wert "&1" in das Feld in Zeile &2 Spalte &3.';
            a["msg presskey var"] = 'Dr\u00fccken Sie die in der Variable "&1" definierte Taste.';
            a["msg presskey other"] = 'Dr\u00fccken Sie die "&1" Taste.';
            a["msg del scrn from macro"] = "M\u00f6chten Sie die ausgew\u00e4hlten Bildschirme wirklich aus diesem Makro l\u00f6schen?<br /> Alle zugeh\u00f6rigen Aktionen werden ebenfalls gel\u00f6scht";
            a["choose scrn macro"] = "W\u00e4hlen Sie einen Bildschirm oder ein Makro, um mit seinen Eigenschaften zu arbeiten..";
            a["choose a nav or toolbar"] = "W\u00e4hlen Sie ein Navigations- oder Toolbarelement, um mit seinen Eigenschaften zu arbeiten.";
            a["confirm del sel x"] = "M\u00f6chten Sie das ausgew\u00e4hlte &1 wirklich l\u00f6schen?";
            a["permission settings"] = "Berechtigungseinstellung (en)";
            a["adding x"] = "Hinzuf\u00fcgen von &1...";
            a["deleting x"] = "L\u00f6schen von &1 ...";
            a["reassigning x"] = "Neuzuweisung von &1...";
            a.loading = "Wird geladen...";
            a.saving = "Speichern...";
            a["x added"] = "&1 hinzugef\u00fcgt.";
            a["x deleted"] =
                "&1 gel\u00f6scht.";
            a["x reassigned"] = "&1 neu zugewiesen.";
            a["x updated"] = "&1 aktualisiert.";
            a["x saved"] = "&1 gespeichert.";
            a["msg del group"] = 'M\u00f6chten Sie die Gruppe "&1" wirklich l\u00f6schen?<br /><br />Durch das L\u00f6schen von Gruppen werden auch alle Untergruppen und alle zugeh\u00f6rigen Benutzer gel\u00f6scht.<br /><br />M\u00f6chten Sie wirklich fortfahren?';
            a["conf reassign users 1"] = "Sind Sie sicher, dass Sie neu zuweisen m\u00f6chten?";
            a["conf reassign users 2a"] = 'Benutzer "&1" ';
            a["conf reassign users 2b"] = "die ausgew\u00e4hlten Benutzer ";
            a["conf reassign users 3"] = ' gruppieren "&1"?';
            a["conf reassign group"] = 'Sind Sie sicher, dass Sie die Gruppe "&1" der Gruppe "&2"zuorndnen m\u00f6chten?';
            a["conf delete users 1"] = "Sind Sie sicher, dass Sie l\u00f6schen m\u00f6chten? ";
            a["conf delete users 2a"] = 'Benutzer "&1"?';
            a["conf delete users 2b"] = "die ausgew\u00e4hlten Benutzer?";
            a["no users"] = "Es sind keine Benutzer zum Anzeigen vorhanden.";
            a["cannot delete own grp"] = "Sie k\u00f6nnen Ihre eigene Gruppe nicht l\u00f6schen.";
            a["cannot delete own usr"] = "Sie k\u00f6nnen Ihr eigenes Benutzerprofil nicht l\u00f6schen.";
            a["not auth reassign prf"] = "Sie sind nicht berechtigt, Ihr eigenes Profil neu zuzuweisen.";
            a["typeselect macro name"] = "Tippen oder w\u00e4hlen Sie den Makronamen ...";
            a["any child items will"] = "Alle untergeordneten Elemente werden ebenfalls gel\u00f6scht.";
            a["password must be"] = "Passw\u00f6rter m\u00fcssen mindestens 6 Zeichen lang sein.";
            a["type or sel home page"] = "Geben oder w\u00e4hlen Sie die Startseite...";
            a["x is already in list"] = '"&1" ist bereits in der Liste.';
            a["x is not valid libname"] = '"&1" ist kein g\u00fcltiger Bibliotheksname.';
            a["no libraries in list"] = "Keine Bibliotheken in der Liste";
            a["add libl entry"] = "Bibliothekslisteneintrag hinzuf\u00fcgen";
            a["would you like add ano"] = "M\u00f6chten Sie ein anderes hinzuf\u00fcgen?";
            a["already in suppl grp x"] = 'Der Benutzer ist bereits in der Erg\u00e4nzungsgruppe "&1".';
            break;
        case "runtimeText":
            a["upload select text"] = "Dateiauswahl";
            a["upload clear text"] =
                "L\u00f6schen";
            a["upload remove text"] = "Entfernen";
            a["upload upload text"] = "Hochladen";
            a["upload drophere text"] = "Dateien hier ablegen";
            a["upload browser unsupported"] = "Ziehen / Ablegen von Dateien erfordert Internet Explorer 10 oder h\u00f6her, Chrome oder Firefox";
            a["upload finished text"] = "Fertig";
            a["excel export text"] = "Export nach Excel";
            a["export to x"] = "Export nach &1";
            a["filter text"] = "Filter";
            a["find text"] = "Finden";
            a["reset data"] = "Zur\u00fccksetzen";
            a["remove filters text"] = "Alle Filter entfernen";
            a["displayed columns"] = "Angezeigte Spalten";
            a["next link text"] = "N\u00e4chste";
            a["previous link text"] = "Vorheriige";
            a["sort ascending text"] = "Sortierung aufsteigend";
            a["sort descending text"] = "Sortierung absteigend";
            a["sort..."] = "Sort...";
            a.sort = "Sort";
            a["sort multiple"] = "Sort Multiple Columns";
            a.column = "Column";
            a.direction = "Direction";
            a.order = "Order";
            a.row = "Zeile";
            a.rows = "Zeilen";
            a.page = "Seite";
            a.collapseAll = "alles zuklappen";
            a.expandAll = "alles aufklappen";
            a.user = "Benutzer";
            a.password = "Passwort";
            a["sign on"] = "Anmeldung";
            a.pui = "Profound UI";
            a["pui sign on"] = a.pui + " " + a["sign on"];
            a.pjs = "Profound.js";
            a["pjs sign on"] = a.pjs + " " + a["sign on"];
            a["message id"] = "Nachrichten Id";
            a["ctlr job"] = "Steuernder Job";
            a["app job"] = "Anwendungsjob";
            a["joblog download"] = "Job Logs Herunterladen";
            a["curr user"] = "Aktueller Benutzer";
            a["remote ip"] = "Server IP Adresse";
            a["remote port"] = "Server Port";
            a.severity = "Schwere";
            a.date = "Datum";
            a.time = "Zeit";
            a.program = "Programm";
            a.procedure = "Prozedur";
            a.lines = "Zeile(n)";
            a.message =
                "Nachricht";
            a["new session"] = "Neue Sitzung";
            a.close = "Schlie\u00dfen";
            a["current password"] = "Aktuelles Passwort";
            a["new password"] = "Neues Passwort";
            a["repeat new password"] = "Wiederholung neues Passwort";
            a.submit = "Best\u00e4tigen";
            a.exit = "Ende";
            a.warning = "Warnung";
            a["change password"] = "Passwort \u00e4ndern";
            a.cancel = "Abbrechen";
            a["find text"] = "Finden";
            a["remove filter"] = "Filter entfernen";
            a.chart = "Diagramm";
            a.section = "Sektion";
            a.version = "Ausf\u00fchrung";
            a.fixPack = "Fixpack";
            a.yes = "Ja";
            a.no = "Nein";
            a.settings =
                "Einstellungen";
            a.favorites = "Favoriten";
            a["type query press en"] = "Geben Sie Abfrage ein und dr\u00fccken Sie die Eingabetaste";
            a["add to favorites"] = "Zu den Favoriten hinzuf\u00fcgen";
            a["rmv from favorites"] = "Von Favoriten entfernen";
            a["please wait"] = "Bitte warten...";
            a["control panel"] = "Steuerungspanel";
            a["my settings"] = "Meine Einstellungen";
            a["about atrium"] = "\u00dcber Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" +
                (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Warnung: Dieses Computerprogramm ist durch das Urheberrecht<br />und internationale Vertr\u00e4ge gesch\u00fctzt. Die unerlaubte Vervielf\u00e4ltigung<br />oder Verbreitung dieses Programms oder eines Teils davon kann zu schwerwiegenden<br />zivil- und strafrechtlichen Konsequenzen f\u00fchren und wird im gr\u00f6\u00dftm\u00f6glichen<br />gesetzlich zul\u00e4ssigen Umfang verfolgt.<br /><br />Patentiert. &nbsp;U.S. Patent No. 8,667,405 B2.";
            a.item = "Item";
            a["open selected item"] = "Ausgew\u00e4hltes Element \u00f6ffnen";
            a.of = "von";
            a["no results to dsp"] = "Keine Ergebnisse zur Anzeige";
            a["displaying results"] = "Ergebnisse werden angezeigt";
            a["search results"] = "Suchergebnisse";
            a["new folder"] = "Neuer Ordner";
            a.rename = "Umbenennen";
            a.description = "Beschreibung";
            a.ok = "OK";
            a.add = "Hinzuf\u00fcgen";
            a["add x"] = "F\u00fcge &1 hinzu";
            a["delete"] = "L\u00f6schen";
            a.screen = "Bildschirm";
            a.screens = "Bildschirme";
            a.macro = "Makro";
            a.macros = "Makros";
            a["screen id"] =
                "BildschirmId";
            a["screen ids"] = "BildschirmIds";
            a["field row"] = "Feldzeile";
            a["field column"] = "Feldspalte";
            a["field value"] = "Feldwert";
            a.value = "Wert";
            a.action = "Aktion";
            a.actions = "Aktionen";
            a["detect once"] = "Einmal erkennen";
            a["delete screen"] = "Bildschirm l\u00f6schen";
            a["genie macros"] = "Genie Makros";
            a["screen name"] = "Bildschirmname";
            a.identifier = "Identifikator";
            a.identifiers = "Identifikatoren";
            a["macro name"] = "Makro name";
            a["close browser wintab"] = "Schlie\u00dfen Sie das Browserfenster oder die Registerkarte.";
            a.select = "Ausw\u00e4hlen";
            a["write value in field"] = "Schreibe einen Wert in ein Feld";
            a["press a key"] = "dr\u00fccke eine Taste";
            a["a literal value"] = "Ein Literalwert";
            a["a variable value"] = "Ein variabler Wert";
            a["cur user profile"] = "Das aktuelle Benutzerprofil";
            a["result js expr"] = "Das Ergebnis eines JavaScript-Ausdrucks";
            a["action data"] = "Aktionsdaten";
            a["data type"] = "Datentyp";
            a.users = "Benutzer";
            a["all groups"] = "Alle Gruppen";
            a["supplemental groups"] = "Erg\u00e4nzende Gruppen";
            a["users w primary grp"] =
                'Benutzer, deren prim\u00e4re Gruppe "&1" ist';
            a["users w suppl grp"] = 'Benutzer mit Zusatzgruppe f\u00fcr "&1"';
            a.group = "Gruppe";
            a.groups = "Gruppen";
            a.edit = "Bearbeiten";
            a["edit x"] = "Bearbeiten &1";
            a.manager = "Manager";
            a.administrator = "Administrator";
            a["primary group"] = "Hauptgruppe";
            a["delete x"] = "&1 l\u00f6schen";
            a["reassign x"] = "&1 Neu zuweisen";
            a["navigation item"] = "Navigationselement";
            a["navigation items"] = "Navigationselemente";
            a["navigation panel"] = "Navigationsleiste";
            a["home pages"] = "Startseiten";
            a["menu group"] = "Men\u00fc Gruppen";
            a["menu item"] = "Men\u00fc Element";
            a["toolbar items"] = "Symbolleistenelemente";
            a.toolbar = "Symbolleiste";
            a.button = "Taste";
            a["pulldown menu"] = "Aufklappmen\u00fc";
            a["pulldown menu item"] = "PAufklappmen\u00fc Element";
            a["separator bar"] = "Trennleiste";
            a.spacer = "Abstandshalter";
            a["item details"] = "Item Details";
            a["item number"] = "Item Nummer";
            a["item type"] = "Item Typ";
            a["genie macro"] = "Genie Makro";
            a["rdf application"] = "Rich Display File Applikation";
            a["web application"] =
                "Web Applikation";
            a["pc command"] = "PC Befehl";
            a["dspf program library"] = "Display file Programm Bibliothek";
            a["dspf program"] = "Display file Program";
            a["variable name x"] = "Variablenname &1";
            a["a tab in the portal"] = "Ein Tab im Portal";
            a["a new browser wind"] = "Ein neues Browserfenster oder eine neue Registerkarte";
            a.update = "Aktualisieren";
            a.fill = "F\u00fcllen";
            a.permissions = "Berechtigungen";
            a["user/group name"] = "Benutzer- / Gruppenname";
            a["all users groups"] = "Alle Benutzer und Gruppen";
            a.type = "Typ";
            a.access =
                "Zugriff";
            a.allow = "zulassen";
            a.disallow = "Nicht zulassen";
            a.navigation = "Navigation";
            a["add usrgrp perm"] = "F\u00fcgen Sie Benutzer- / Gruppenberechtigungen hinzu";
            a.membership = "Mitgliedschaft";
            a.none = "Keiner";
            a.remove = "L\u00f6schen";
            a.appearance = "Aussehen";
            a["home page"] = "Startseite";
            a.tree = "Baum";
            a.accordion = "Akkordeon";
            a["min search chars"] = "Minimale Suchzeichen";
            a["libl for rdf apps"] = "Bibliotheksliste f\u00fcr Rich Display File Anwendungen";
            a["library list"] = "Bibliotheksliste";
            a.library = "Bibliothek";
            a["use atrium def libl"] = "Benutzung der Atrium Standardbibliotheksliste";
            a["use jobd libl"] = "Benutzung der Bibliotheksliste aus der Jobbeschreibung";
            a["specify libl"] = "Spezifizieren Sie die Bibliotheksliste";
            a.up = "Oben";
            a.down = "Nieder";
            a["move up"] = "Nach oben bewegen";
            a["move down"] = "Nach unten bewegen";
            a["global settings"] = "Globale Einstellungen";
            a.save = "Speichern";
            a["add usr to supp grp"] = "Benutzer zur Zusatzgruppe hinzuf\u00fcgen";
            a["member of"] = "Member von";
            a["member of hlp"] = "Die Gruppe, zu der dieser Benutzer / diese Gruppe geh\u00f6rt.";
            a["group name"] = "Gruppenname";
            a["group name hlp"] = "Der Anzeigename f\u00fcr diese Gruppe.";
            a["inherit settings"] = "Einstellungen \u00fcbernehmen";
            a["inherit settings hlp"] = "Wenn diese Option aktiviert ist, \u00fcbernimmt der Benutzer / die Gruppe die Einstellungen von ihrem \u00fcbergeordneten Element. Wenn sie deaktiviert ist, verf\u00fcgt der Benutzer / die Gruppe \u00fcber eigene Einstellungsdaten.";
            a["user name"] = "Benutzername";
            a["user name hlp"] = "Der Anzeigename dieses Benutzerprofils.";
            a["access role"] =
                "Zugriffsrolle";
            a["access role hlp"] = "Steuert die Zugriffsrolle dieses Benutzers. Administratoren k\u00f6nnen alle Gruppen und Benutzer verwalten und auch Anwendungsadministratoren steuern. Manager k\u00f6nnen Benutzer- und Gruppeneinstellungen in ihrer eigenen Gruppe konfigurieren. Benutzer haben keine besonderen Berechtigungen.";
            a["can edit profile"] = "Kann Profil bearbeiten";
            a["can edit profile hlp"] = 'Erm\u00f6glicht dem Benutzer, die Einstellung "appearance" und "navigation" zu bearbeiten und das Passwort zu \u00e4ndern. Alle anderen Einstellungen k\u00f6nnen vom Benutzer nie bearbeitet werden.';
            a["user profile"] = "Benutzerprofil";
            a["user profile hlp"] = "Der Name des Benutzerprofils. Benutzerprofilnamen unterscheiden zwischen Gro\u00df- und Kleinschreibung, sofern keine IBM i-Profile verwendet werden.";
            a["password hlp"] = "Setzen/Zur\u00fccksetzen das Passwort. Passw\u00f6rter unterscheiden zwischen Gro\u00df- und Kleinschreibung.";
            a["conf password"] = "Best\u00e4tige das Passwort";
            a["conf password hlp"] = "Beim Setzen / Zur\u00fccksetzen des Passworts muss dieses Feld genau mit dem neuen Passwort \u00fcbereinstimmen. Passw\u00f6rter unterscheiden zwischen Gro\u00df- und Kleinschreibung.";
            a["browser title"] = "Browsertitel";
            a["browser title hlp"] = "Legt den Text fest, der in der Titelleiste des Browsers angezeigt wird.";
            a["show banner"] = "Banner anzeigen";
            a["show banner hlp"] = "Deaktivieren Sie diese Option, wenn Sie das Banner nicht oben im Portal anzeigen m\u00f6chten.";
            a["banner height"] = "Bannerh\u00f6he";
            a["banner height hlp"] = "Legt die H\u00f6he des Banners am oberen Rand des Portals in Pixel fest. Diese Einstellung wird ignoriert, wenn Sie das Banner nicht anzeigen m\u00f6chten. G\u00fcltige Werte sind 0-600 Pixel.";
            a["banner url"] = "Banner URL";
            a["banner url hlp"] = "Legt die URL fest, in der sich der Bannerinhalt befindet. Kann entweder eine absolute oder eine vollqualifizierte URL sein.";
            a.theme = "Design";
            a["theme hlp"] = 'Legt das Standarddesign fest. Dies kann von einzelnen Benutzern au\u00dfer Kraft gesetzt werden, wenn <strong>"Benutzern das Ausw\u00e4hlen des Designs erlauben"</strong> aktiviert ist.';
            a["allow sel theme"] = "Benutzern das Ausw\u00e4hlen von Designs erlauben";
            a["allow sel theme hlp"] = "Wenn diese Option aktiviert ist, k\u00f6nnen Benutzer ihr gew\u00fcnschtes Design mithilfe eines Steuerelements in der Symbolleiste ausw\u00e4hlen.";
            a["show menu search"] = "Men\u00fcsuche anzeigen";
            a["show menu search hlp"] = "Deaktivieren Sie diese Option, um die Men\u00fcsuchfunktion zu deaktivieren.";
            a["show fav sys"] = "Favoriten System anzeigen";
            a["show fav sys hlp"] = "Deaktivieren Sie das Kontrollk\u00e4stchen, um das Favoriten-System zu deaktivieren.";
            a["show fav start"] = "Favoriten Anzeige in Startmaske";
            a["show fav start hlp"] = "Wenn ausgew\u00e4hlt, wird die Favoriten Anzeige in der Startmaske angezeigt. Ansonsten wird das Navigations Panel angezeigt (Standard). Diese Option ist nur verf\u00fcgbar, wenn Favoriten aktiviert sind.";
            a["limit num sessn"] = "Maximale Anzahl der Sitzungen";
            a["limit num sessn hlp"] = "Anzahl der erlaubten Atrium-Sitzungen f\u00fcr diesen Benutzer / diese Gruppe. Ein Wert von Null erm\u00f6glicht unbegrenzte Sitzungen. Die Beschr\u00e4nkung wird pro Webbrowser angewendet.";
            a["show hmpg start"] = "Homepage beim Start anzeigen";
            a["show hmpg start hlp"] = "Wenn diese Option aktiviert ist, wird beim Start eine anpassbare Startseite im Portal gestartet.";
            a["home page url"] = "Startseite URL";
            a["home page url hlp"] =
                "Legt die URL f\u00fcr den Inhalt der Startseite fest. Kann entweder eine absolute oder eine vollqualifizierte URL sein.";
            a["navi pnl title"] = "Titel des Navigationspanel";
            a["navi pnl title hlp"] = "Legt den Text fest, der in der Titelleiste des Navigationsfensters angezeigt wird.";
            a["navi pnl width"] = "Startbreite des Navigationspanels";
            a["navi pnl width hlp"] = "Legt die Startbreite der Navigationsleiste in Pixel fest. Der Benutzer kann die Gr\u00f6\u00dfe des Panels beliebig \u00e4ndern oder sogar ausblenden. G\u00fcltige Werte sind 0-2000 Pixel.";
            a["navi type"] = "Navigationstyp";
            a["navi type hlp"] = 'Steuert den Men\u00fctyp, der im Navigationsbereich "tree" oder "accordion" verwendet wird. Diese Einstellung gilt nicht f\u00fcr die Symbolleiste.';
            a["single click nav"] = "Einzelklick-Navigation";
            a["single click nav hlp"] = "Wenn diese Option aktiviert ist, werden Men\u00fcelemente im Navigationsbereich mit einem einzigen Klick gestartet. Andernfalls werden sie nur mit Doppelklick gestartet. Diese Einstellung gilt nicht f\u00fcr die Symbolleiste.";
            a["current library"] = "Aktuelle Bibliothek";
            a["current library hlp"] = "Geben Sie die aktuelle Bibliothek an, *USRPRF, oder *CRTDFT.";
            a["job descr"] = "Job Beschreibung";
            a["job descr hlp"] = "Geben Sie eine Jobbeschreibung an, aus der die Bibliotheksliste festgelegt werden soll. * USRPRF kann angegeben werden, wenn die Atrium-Benutzer IBM i-Benutzerprofile sind.";
            a["job descr lib"] = "Job Beschreibung Bibliothek";
            a["job descr lib hlp"] = "Geben Sie die Bibliothek f\u00fcr die Jobbeschreibung an. *LIBL oder *CURLIB kann angegeben werden.";
            a["item name"] = "Itemname";
            a["item name hlp"] = "Legt den Anzeigenamen des Navigations- oder Symbolleistenelements fest.";
            a["action type"] = "Aktionstyp";
            a["action type hlp"] = "Legt den Typ der Anwendung fest, die dieses Element startet.";
            a.url = "URL";
            a["url hlp"] = "Legt die URL der Webanwendung fest. Dies kann entweder als absoluter Pfad oder als vollst\u00e4ndig qualifizierte URL angegeben werden. Query Zeichenfolgen Parameter k\u00f6nnen in der URL angegeben werden.";
            a["genie url"] = "Genie URL";
            a["genie url hlp"] =
                "Gibt die URL an, die zum Starten von Genie verwendet wird. Wenn nicht angegeben, wird die Standard-Genie-URL /profoundui/auth/genie verwendet. Dieses Feld ist n\u00fctzlich, wenn alternative URL-URLs oder Abfragezeichenfolgen erforderlich sind. Beispielsweise: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "\u00d6ffnen als";
            a["open as hlp"] = "Legt fest, ob das Element als neue Registerkarte im Portal oder als neues Browserfenster oder als neue Registerkarte gestartet wird. Ob der Browser ein neues Fenster oder eine neue Registerkarte verwendet, h\u00e4ngt von den Browsereinstellungen des Benutzers ab.";
            a["opens once only"] = "\u00d6ffnet nur einmal";
            a["opens once only hlp"] = "Wenn der Benutzer dieses Element standardm\u00e4\u00dfig startet, obwohl im Portal bereits eine Registerkarte ge\u00f6ffnet ist, wird eine weitere Registerkarte f\u00fcr das Element ge\u00f6ffnet. Die Anzahl der Registerkarten, die der Benutzer auf diese Weise \u00f6ffnen kann, ist nicht begrenzt. Wenn dieses \u00d6ffnen aktiviert ist, kann der Benutzer nicht mehr als eine Registerkarte f\u00fcr dieses Element \u00f6ffnen. Wenn bereits ein Tab f\u00fcr das Objekt ge\u00f6ffnet ist, wenn der Benutzer es ausw\u00e4hlt, wird das vorhandene Tab aktiviert. Diese Option wird ignoriert, wenn das Element in einem neuen Browserfenster oder Tab ge\u00f6ffnet wird.";
            a.icon = "Symbol";
            a["icon hlp"] = "Wahlweise. Legt eine Symboldatei fest, die f\u00fcr den Navigations- oder Symbolleisteneintrag verwendet werden soll. Die Symboldatei kann im GIF-, JPG- oder PNG-Format vorliegen. Transparente GIFs werden empfohlen. Der Pfad sollte als absoluter Pfad vom Stamm der Atrium-Installation angegeben werden. Wenn kein Symbol angegeben ist, verwendet Atrium ein Standardsymbol f\u00fcr Navigationselemente. F\u00fcr Symbolleistenelemente wird kein Symbol angezeigt, es sei denn, sie sind hier angegeben.";
            a.parameter = "Parameter";
            a["parameter hlp"] = "Optional: Gibt einen Parameter an, der beim Starten an das Rich-Display-Programm \u00fcbergeben wird.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function zd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "Se cerrar\u00e1 su sesi\u00f3n.";
            a["no connection message"] = "No es posible establecer conexi\u00f3n al servidor. Verifique la conexi\u00f3n e int\u00e9ntelo de nuevo.";
            a["upload file limit"] = "L\u00edmite de &1 archivo(s) excedido.";
            a["upload size limit"] = "L\u00edmite de &1MB por archivo excedido";
            a["upload no files"] = "No hay archivos seleccionados.";
            a["upload duplicate file"] = "Archivos seleccionados duplicados.";
            a["upload file exists"] =
                "Uno o m\u00e1s archivos ya existen en el sistema de archivos.";
            a["upload prevented"] = "Operaci\u00f3n embargada por 'exit program'.";
            a["upload input limit"] = "El l\u00edmite del tama\u00f1o total del 'input' fue excedido.";
            a["upload no session"] = "No est\u00e1 conectado con una sesi\u00f3n v\u00e1lida.";
            a["upload timeout"] = "El tiempo l\u00edmite para la transacci\u00f3n fue excedido.";
            a["upload invalid response"] = "No hay respuesta del servidor o es inv\u00e1lida.";
            a["upload cancelled"] = "Carga cancelada.";
            a["close browser text"] = "Para terminar el proceso de cierre de la sesi\u00f3n, por favor cierre el navegador.";
            a["session ended text"] = "Su sesi\u00f3n fue cerrada.";
            a["outside ucs2"] = "Caracteres fuera de la gama UCS-2.";
            a["invalid number"] = "&1 no es un numero v\u00e1lido.";
            a["invalid length"] = "&1 tiene longitud o n\u00famero de decimales incorrectos.";
            a["invalid decimal"] = "&1 tiene excesivas n\u00fameros decimales. (max: &2)";
            a["invalid choice"] = '"&1" es inv\u00e1lido. Las opciones v\u00e1lidas son: "&2" ou "&3".';
            a["invalid date"] = '"&1" no es una fecha v\u00e1lida. Ejemplo del formato correcto: &2';
            a["invalid time"] = '"&1" no es un valor de tiempo correcto. Ejemplo del formato correcto: &2';
            a["invalid time stamp"] = '"&1" no es un Registro del tiempo v\u00e1lido. Ejemplo del formato correcto: &2';
            a["invalid percent"] = "&1 no es un valor decimal.";
            a["invalid digits"] = '"&1" contiene demasiados d\u00edgitos. Max: &2';
            a["exceeds whole"] = '"&1" excede el n\u00famero m\u00e1ximo de d\u00edgitos para la parte num\u00e9rica del campo (&2 digits).';
            a["exceeds decimal"] = '"&1" excede el n\u00famero m\u00e1ximo de d\u00edgitos para la parte decimal del campo (&2 digits).';
            a["zip too long"] = "El c\u00f3digo postal es demasiado grande. (M\u00e1ximo: &1 digits)";
            a["phone too long"] = "El n\u00famero de tel\u00e9fono es demasiado grande. (M\u00e1ximo: &1 digits)";
            a["ssno too long"] = "El c\u00f3digo de la Seguridad Social es demasiado grande. (M\u00e1ximo: &1 digits)";
            a["invalid custom val"] = "Validaci\u00f3n de funci\u00f3n custom inv\u00e1lida.";
            a["error custom val"] =
                "Error en la validaci\u00f3n de funci\u00f3n custom.";
            a.ME = "Campo de entrada obligatorio. Debe incorporar datos.";
            a.MF = "Campo de entrada total obligatoria. Debe rellenar el campo de texto totalmente.";
            a.required = "El valor no puede estar en blanco. Se requiere este campo.";
            a["file required"] = "Debe seleccionar al menos un archivo.";
            a["signature overflow"] = "La imagen de la firma excede el n\u00famero m\u00e1ximo de los bytes disponibles para su almacenaje. Por favor borre el campo de la firma e int\u00e9ntelo de nuevo.";
            a.validValues = "El valor introducido es inv\u00e1lido. Valores v\u00e1lidos son: ";
            a["upload invalid type"] = "Uno o m\u00e1s archivos son de tipo inv\u00e1lido.";
            a["invalid email"] = "Direcci\u00f3n de correo electr\u00f3nico no es v\u00e1lida.";
            a["session timed out"] = "El tiempo de su sesi\u00f3n ha expirado.";
            a["invalid low range"] = "El valor debe ser mayor o igual a &1";
            a["invalid high range"] = "El valor debe ser menor o igual a &1";
            a["invalid range"] = "El valor debe estar comprendido entre &1 y &2";
            a["unmonitored exception"] =
                "Este programa ha encontrado algunas excepciones no monitorizadas. Por Favor, contacte con el administrador del sistema para su ayuda.";
            a["loading x"] = "Cargando &1...";
            a["data src not specfd x"] = "Fuente de datos no especificada para &1...";
            a["name fld not specfd x"] = "Nombre de campo no especificado para &1...";
            a["val fld not specfd x"] = "Valor de campo no especificado para &1...";
            a["failed to load x"] = "Carga fallida de &1.";
            a["cannot rmv last col"] = "No se puede eliminar la \u00faltima columna.";
            a["cannot find col"] =
                "No se puede encontrar el id de columna especificado.";
            a["subfile deletion"] = "Est\u00e1 seguro que desea borrar el subarchivo ?";
            a["downloading x"] = "Cargando &1";
            a["ie9 too low xlsxpics"] = "Las im\u00e1genes no pueden ser exportadas usando IE9 o inferior.";
            a["keyboard input inhibited"] = "Entrada de teclado no permitida para este campo.";
            a["num sessions exceeded"] = "Se excedi\u00f3 el numero de sesiones permitido.";
            a["unable to load portal"] = "No es posible cargar la configuraci\u00f3n del portal o los \u00edtems de navegaci\u00f3n.";
            a["unable to load macr act"] = "No es posible cargar las acciones de macro.";
            a["unable to load macr var"] = "No es posible cargar las variables de macro.";
            a["unable to load scrn lst"] = "No es posible cargar la lista de pantallas.";
            a["unable to load new sett"] = "No es posible cargar los nuevos par\u00e1metros de configuraci\u00f3n.";
            a["unable to load x"] = "No es posible cargar &1.";
            a["unable to add x"] = "No es posible agregar &1.";
            a["unable to rename x"] = "No es posible renombrar &1.";
            a["unable to delete x"] =
                "No es posible borrar &1.";
            a["unable to update x"] = "No es posible actualizar &1.";
            a["unable to reassn x"] = "No es posible reasignar &1.";
            a["unable to reorder items"] = "No es posible reordenar \u00edtems.";
            a["unable to save theme"] = "No es posible salvar la configuraci\u00f3n de tema.";
            a["unable eval script url"] = "No es posible evaluar la URL de c\u00f3digo de aplicaci\u00f3n web.";
            a["close browser text AT"] = "Los cambios no salvados en las sesiones se perder\u00e1n.";
            a["close all tabs"] = "Desea cerrar todas las pesta\u00f1as ?";
            a["close tab"] = "Desea cerrar esta pesta\u00f1a ?";
            a["invalid script url"] = "Valor invalido para la URL de c\u00f3digo de aplicaci\u00f3n web.";
            a["unrecognized format"] = "Formato no reconocido.";
            a["screen already defined"] = 'La pantalla "&1" ya esta definida.';
            a["macro already defined"] = 'La Macro "&1" ya esta definida.';
            a["no screen ids"] = "No hay identificadores de pantalla para visualizar";
            a["confirm delete"] = "Confirme borrado";
            a["no actions"] = "NO hay acciones para visualizar.";
            a["msg action input var"] =
                'Ingrese el valor en la variable "&1" en el campo de la fila &2, columna &3.';
            a["msg action input user"] = "Ingrese el perfil de usuario actual en el campo de la fila &1, columna &2.";
            a["msg action input js"] = "Ingrese el resulta de la expresi\u00f3n de JavaScript <strong>&1</strong> en el campo de la fila &2, columna &3.";
            a["msg action input other"] = 'Ingrese el valor "&1" en el campo de la fila &2, columna &3.';
            a["msg presskey var"] = 'Presione la tecla definida en la variable "&1".';
            a["msg presskey other"] =
                'Presione la tecla "&1".';
            a["msg del scrn from macro"] = "Esta seguro que desea borrar la(s) pantalla(s) seleccionadas de esta macro ?<br /> Todas las acciones asociadas tambi\u00e9n ser\u00e1n borradas.";
            a["choose scrn macro"] = "Seleccione una pantalla o macro para trabajar con sus propiedades.";
            a["choose a nav or toolbar"] = "Seleccione un \u00edtem de navegaci\u00f3n o de la barra de herramientas para trabajar con sus propiedades.";
            a["confirm del sel x"] = "Est\u00e1 seguro que desea borrar el &1 seleccionado ?";
            a["permission settings"] = "Par\u00e1metros de configuraci\u00f3n de permisos";
            a["adding x"] = "Agregando &1...";
            a["deleting x"] = "Borrando &1 ...";
            a["reassigning x"] = "Reasignando &1...";
            a.loading = "Cargando...";
            a.saving = "Salvando...";
            a["x added"] = "&1 agregado.";
            a["x deleted"] = "&1 borrado.";
            a["x reassigned"] = "&1 reasignado.";
            a["x updated"] = "&1 actualizado.";
            a["x saved"] = "&1 salvado.";
            a["msg del group"] = 'Est\u00e1 seguro que desea borrar el grupo "&1" ?<br /><br />La eliminaci\u00f3n de grupos tambi\u00e9n elimina cualquier subgrupo y cualquier usuario asociado.<br /><br />Est\u00e1 seguro que desea continuar ?';
            a["conf reassign users 1"] = "Est\u00e1 seguro que desea reasignar ";
            a["conf reassign users 2a"] = 'usuario "&1" ';
            a["conf reassign users 2b"] = "los usuarios seleccionados ";
            a["conf reassign users 3"] = ' al grupo "&1" ?';
            a["conf reassign group"] = '\u00bfEst\u00e1 seguro que desea reasignar el grupo "&1" al grupo "&2" ?';
            a["conf delete users 1"] = "\u00bfEst\u00e1 seguro que desea borrar ";
            a["conf delete users 2a"] = 'usuario "&1" ?';
            a["conf delete users 2b"] = "los usuarios seleccionados ?";
            a["no users"] = "No hay usuarios para visualizar.";
            a["cannot delete own grp"] = "No puede borrar su propio grupo.";
            a["cannot delete own usr"] = "No puede borra su propio perfil de usuario.";
            a["not auth reassign prf"] = "No esta autorizado a reasignar su propio perfil.";
            a["typeselect macro name"] = "Teclee o seleccione el nombre de macro...";
            a["any child items will"] = "Cualquier \u00edtem hijo tambi\u00e9n ser\u00e1 borrado.";
            a["password must be"] = "Las contrase\u00f1as deben ser de al menos 6 caracteres.";
            a["type or sel home page"] = "Teclee o seleccione la p\u00e1gina de inicio...";
            a["x is already in list"] = '"&1" ya est\u00e1 en la lista.';
            a["x is not valid libname"] = '"&1" no es un nombre de biblioteca valido.';
            a["no libraries in list"] = "No hay bibliotecas en la lista";
            a["add libl entry"] = "Agregar entrada en la lista de bibliotecas";
            a["would you like add ano"] = "Desear\u00eda agregar otro ?";
            a["already in suppl grp x"] = 'El usuario ya est\u00e1 en un grupo suplementario "&1".';
            break;
        case "runtimeText":
            a["upload select text"] = "Archivos Seleccionados";
            a["upload clear text"] = "Borrar";
            a["upload remove text"] = "Remover";
            a["upload upload text"] = "Cargar";
            a["upload drophere text"] = "Soltar los archivos aqu\u00ed";
            a["upload browser unsupported"] = "Arrastrar/soltar archivos requiere Internet Explorer 10 o superior, Chrome, o Firefox";
            a["upload finished text"] = "Finalizado";
            a["excel export text"] = "Exportar para Excel";
            a["export to x"] = "Exportar para &1";
            a["filter text"] = "Filtrar";
            a["find text"] = "Buscar";
            a["reset data"] = "Restablecer";
            a["remove filters text"] = "Remover Todos os Filtros";
            a["displayed columns"] =
                "Columnas Mostradas";
            a["next link text"] = "Pr\u00f3ximo";
            a["previous link text"] = "Anterior";
            a["sort ascending text"] = "Ordenaci\u00f3n Ascendente";
            a["sort descending text"] = "Ordenaci\u00f3n Descendente";
            a["sort..."] = "Ordenar...";
            a.sort = "Ordenar";
            a["sort multiple"] = "Ordenar M\u00faltiples Columnas";
            a.column = "Columna";
            a.direction = "Direcci\u00f3n";
            a.order = "Orden";
            a.row = "l\u00ednea";
            a.rows = "l\u00edneas";
            a.page = "P\u00e1gina";
            a.collapseAll = "Contraer todo";
            a.expandAll = "Expandir todo";
            a.user = "Usuario";
            a.password =
                "Contrase\u00f1a";
            a["sign on"] = "Ingreso";
            a.pui = "Profound UI";
            a["pui sign on"] = a.pui + " " + a["sign on"];
            a.pjs = "Profound.js";
            a["pjs sign on"] = a.pjs + " " + a["sign on"];
            a["message id"] = "Identificacion de mensaje";
            a["ctlr job"] = "Trabajo Controlador";
            a["app job"] = "Trabajo de Aplicaci\u00f3n";
            a["joblog download"] = "Descargar pistas de auditoria del trabajo";
            a["curr user"] = "Usuario Actual";
            a["remote ip"] = "Direcci\u00f3n IP Remota";
            a["remote port"] = "Puerto Remoto";
            a.severity = "Severidad";
            a.date = "Fecha";
            a.time = "Hora";
            a.program = "Programa";
            a.procedure = "Procedimiento";
            a.lines = "Linea(s)";
            a.message = "Mensaje";
            a["new session"] = "Nueva sesi\u00f3n";
            a.close = "Cerrar";
            a["current password"] = "Contrase\u00f1a Actual";
            a["new password"] = "Nueva contrase\u00f1a";
            a["repeat new password"] = "Repetir nueva contrase\u00f1a";
            a.submit = "Enviar";
            a.exit = "Salir";
            a.warning = "Advertencia";
            a["change password"] = "Cambiar contrase\u00f1a";
            a.cancel = "Cancelar";
            a["find text"] = "Encontrar";
            a["remove filter"] = "Quitar filtro";
            a.chart = "Gr\u00e1fico";
            a.section =
                "Secci\u00f3n";
            a.version = "Versi\u00f3n";
            a.fixPack = "Paquete de arreglos";
            a.yes = "Si";
            a.no = "No";
            a.settings = "Ajustes";
            a.favorites = "Favoritos";
            a["type query press en"] = "Teclee la consulta, presione Enter.";
            a["add to favorites"] = "Agregar a Favoritos";
            a["rmv from favorites"] = "Remover de Favoritos";
            a["please wait"] = "Por favor espere...";
            a["control panel"] = "Panel de control";
            a["my settings"] = "Mis Ajustes";
            a["about atrium"] = "Sobre Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack +
                " " + window.pui.fixPackVersion + "<br /><br />Derechos de autor &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Advertencia: Este programa de computador est\u00e1 protegido por leyes de derecho de autor<br />y tratados internacionales. La reproducci\u00f3n no autorizada o<br />distribuci\u00f3n de este programa, o alguna porci\u00f3n de el puede resultar en <br />sanciones civiles y penales severas, y ser\u00e1 procesada<br />con la m\u00e1xima extensi\u00f3n posible permitida por la ley.<br /><br />Patentado. &nbsp;U.S. Patente No. 8,667,405 B2.";
            a.item = "\u00cdtem";
            a["open selected item"] = "Abrir \u00edtem seleccionado";
            a.of = "de";
            a["no results to dsp"] = "No hay resultados a visualizar.";
            a["displaying results"] = "Visualizando resultados";
            a["search results"] = "Buscar resultados";
            a["new folder"] = "Nueva carpeta";
            a.rename = "Renombrar";
            a.description = "Descripci\u00f3n";
            a.ok = "OK";
            a.add = "Agregar";
            a["add x"] = "Agregar &1";
            a["delete"] = "Borrar";
            a.screen = "Pantalla";
            a.screens = "Pantallas";
            a.macro = "Macro";
            a.macros = "Macros";
            a["screen id"] = "Identificador de pantalla";
            a["screen ids"] = "Identificadores de pantalla";
            a["field row"] = "Campo de fila";
            a["field column"] = "Campo de columna";
            a["field value"] = "Campo de valor";
            a.value = "Valor";
            a.action = "Acci\u00f3n";
            a.actions = "Acciones";
            a["detect once"] = "Detectar una vez";
            a["delete screen"] = "Borrar pantalla";
            a["genie macros"] = "Macros de Genie";
            a["screen name"] = "Nombre de pantalla";
            a.identifier = "Identificador";
            a.identifiers = "Identificadores";
            a["macro name"] = "Nombre de macro";
            a["close browser wintab"] = "Cierre la ventana o pesta\u00f1a del navegador.";
            a.select = "Seleccione";
            a["write value in field"] = "Escriba el valor en un campo";
            a["press a key"] = "Presione una tecla";
            a["a literal value"] = "Un valor literal";
            a["a variable value"] = "Un valor de variable";
            a["cur user profile"] = "El perfil de usuario actual";
            a["result js expr"] = "El resultado de una expresi\u00f3n de JavaScript";
            a["action data"] = "Datos de acci\u00f3n";
            a["data type"] = "Tipo de datos";
            a.users = "Usuarios";
            a["all groups"] = "Todos los grupos";
            a["supplemental groups"] = "Grupos suplementarios";
            a["users w primary grp"] =
                'Usuarios cuyo Grupo Primario es "&1"';
            a["users w suppl grp"] = 'Usuarios con Grupo Suplementario para "&1"';
            a.group = "Grupo";
            a.groups = "Grupos";
            a.edit = "Editar";
            a["edit x"] = "Editar &1";
            a.manager = "Gestor";
            a.administrator = "Administrador";
            a["primary group"] = "Grupo Primario";
            a["delete x"] = "Borrar &1";
            a["reassign x"] = "Reasignar &1";
            a["navigation item"] = "\u00cdtem de Navegaci\u00f3n";
            a["navigation items"] = "\u00cdtems de Navegaci\u00f3n";
            a["navigation panel"] = "Panel de Navegaci\u00f3n";
            a["home pages"] = "P\u00e1ginas de inicio";
            a["menu group"] = "Grupo de men\u00fas";
            a["menu item"] = "\u00cdtem de men\u00fa";
            a["toolbar items"] = "\u00cdtems de la barra de herramientas";
            a.toolbar = "Barra de herramientas";
            a.button = "Bot\u00f3n";
            a["pulldown menu"] = "Men\u00fa desplegable";
            a["pulldown menu item"] = "\u00cdtem de men\u00fa desplegable";
            a["separator bar"] = "Barra separadora";
            a.spacer = "Espaciador";
            a["item details"] = "Detalles del \u00edtem";
            a["item number"] = "Numero de \u00edtem";
            a["item type"] = "Tipo de \u00edtem";
            a["genie macro"] = "Macro de Genie";
            a["rdf application"] = "Aplicaci\u00f3n de archivo de pantalla enriquecido";
            a["web application"] = "Aplicaci\u00f3n Web";
            a["pc command"] = "Comando PC";
            a["dspf program library"] = "Biblioteca del programa de archivo de pantalla";
            a["dspf program"] = "Programa de archivo de pantalla";
            a["variable name x"] = "Nombre de variable &1";
            a["a tab in the portal"] = "Una pesta\u00f1a en el portal";
            a["a new browser wind"] = "Una nueva ventana o pesta\u00f1a de navegador";
            a.update = "Actualizar";
            a.fill = "Llenar";
            a.permissions = "Permisos";
            a["user/group name"] = "Nombre de usuario/grupo";
            a["all users groups"] = "Todos los usuarios y grupo ";
            a.type = "Tipo";
            a.access = "Acceso";
            a.allow = "Permitir";
            a.disallow = "Rechazar";
            a.navigation = "Navegaci\u00f3n";
            a["add usrgrp perm"] = "Agregar permisos de usuario/grupo";
            a.membership = "Membres\u00eda";
            a.none = "Ninguno";
            a.remove = "Remover";
            a.appearance = "Apariencia";
            a["home page"] = "P\u00e1gina de inicio";
            a.tree = "\u00c1rbol";
            a.accordion = "Acorde\u00f3n";
            a["min search chars"] = "Caracteres de b\u00fasqueda m\u00ednimos";
            a["libl for rdf apps"] = "Lista de bibliotecas para aplicaciones de archivos de pantalla enriquecidos";
            a["library list"] = "Lista de bibliotecas";
            a.library = "Biblioteca";
            a["use atrium def libl"] = "Usar la lista de bibliotecas por omisi\u00f3n de Atrium";
            a["use jobd libl"] = "Usar la lista de bibliotecas de la JOBD";
            a["specify libl"] = "Especificar lista de bibliotecas";
            a.up = "Arriba";
            a.down = "Abajo";
            a["move up"] = "Mover arriba";
            a["move down"] = "Mover abajo";
            a["global settings"] = "Ajustes globales";
            a.save = "Salvar";
            a["add usr to supp grp"] = "Agregar usuario o grupo suplementario";
            a["member of"] = "Miembro de ";
            a["member of hlp"] = "El grupo al cual este usuario/grupo pertenece.";
            a["group name"] = "Nombre de grupo";
            a["group name hlp"] = "El nombre a visualizar para este grupo.";
            a["inherit settings"] = "Heredar configuraciones";
            a["inherit settings hlp"] = "Cuando esta opci\u00f3n es seleccionada, el usuario/grupo heredar\u00e1 la configuraci\u00f3n de su ancestro. Cuando no es seleccionada, el usuario/grupo tendr\u00e1 si propios datos de configuraci\u00f3n.";
            a["user name"] = "Nombre de usuario";
            a["user name hlp"] = "El nombre a visualizar de este perfil de usuario.";
            a["access role"] = "Rol de acceso";
            a["access role hlp"] = "Controla el rol de acceso de este usuario. Los Administradores pueden gestionar todos los grupos y usuarios y tambi\u00e9n pueden controlar las autorizaciones de la aplicaci\u00f3n. Los gestores pueden configurar los par\u00e1metros de usuario y grupo dentro de su propio grupo. Los usuarios no tienen privilegios especiales.";
            a["can edit profile"] =
                "Puede editar el perfil";
            a["can edit profile hlp"] = 'Permite al usuario editar los par\u00e1metros de configuraci\u00f3n de "apariencia" y "navegaci\u00f3n", y cambiar la contrase\u00f1a. Los dem\u00e1s par\u00e1metros de configuraci\u00f3n no son editables por el usuario.';
            a["user profile"] = "Perfil de usuario";
            a["user profile hlp"] = "El nombre de perfil de usuario. Los nombres de perfil de usuario son sensibles a may\u00fasculas y min\u00fasculas, a no ser que se utilicen perfiles de IBM i.";
            a["password hlp"] =
                "Asignar/restablecer la contrase\u00f1a. Las contrase\u00f1as son sensibles a may\u00fasculas y min\u00fasculas.";
            a["conf password"] = "Confirmar contrase\u00f1a";
            a["conf password hlp"] = "Cuando se asigna/restablece la contrase\u00f1a, este campo debe coincidir exactamente con la nueva contrase\u00f1a asignada. Las contrase\u00f1as son sensibles a may\u00fasculas y min\u00fasculas.";
            a["browser title"] = "T\u00edtulo del navegador";
            a["browser title hlp"] = "Asigna el texto que ser\u00e1 mostrado en la barra de t\u00edtulos del navegador.";
            a["show banner"] = "Mostrar banner";
            a["show banner hlp"] = "Desmarque esta opci\u00f3n si no desea mostrar la banderola en la parte superior del portal.";
            a["banner height"] = "Altura del banner";
            a["banner height hlp"] = "Asigna la altura del banner en la parte superior del portal en pixeles. Este ajuste es ignorado si ha seleccionado no mostrar la banderola. Los valores validos est\u00e1n entre 0-600 pixeles.";
            a["banner url"] = "URL del banner";
            a["banner url hlp"] = "Asigna la URL donde se localiza el contenido del banner. Puede ser tanto una RUL absoluta como una totalmente cualificada.";
            a.theme = "Tema";
            a["theme hlp"] = 'Asigna el tema por omisi\u00f3n. Este puede ser anulado por los usuarios individuales si el atributo <strong>"Permitir a los usuarios seleccionar el tema"</strong> est\u00e1 activado.';
            a["allow sel theme"] = "Permitir al usuario seleccionar el tema";
            a["allow sel theme hlp"] = "Si est\u00e1 seleccionado, los usuarios tendr\u00e1n la habilidad de seleccionar su tema deseado usando un control en la barra de herramientas.";
            a["show menu search"] = "Mostrar men\u00fa de b\u00fasqueda";
            a["show menu search hlp"] = "Desmarque esta opci\u00f3n para desactivar la caracter\u00edstica de b\u00fasqueda en el men\u00fa.";
            a["show fav sys"] = "Mostrar sistema de favoritos";
            a["show fav sys hlp"] = "Desmarque esta opci\u00f3n para desactivar el sistema de favoritos.";
            a["show fav start"] = "Mostrar Favoritos en el arranque";
            a["show fav start hlp"] = "Si es seleccionado, el panel Favoritos se muestra en el arranque. De lo contrario el panel Navegaci\u00f3n ser\u00e1 el que se muestre (acci\u00f3n por omisi\u00f3n). Esta opci\u00f3n solo estar\u00e1 disponible si se habilita el sistema Favoritos.";
            a["limit num sessn"] = "Limitar el numero de sesiones";
            a["limit num sessn hlp"] = "Numero de sesiones Atrium permitidas para este usuario/grupo. Un valor de cero permite sesiones ilimitadas. La limitaci\u00f3n se aplica por navegador web.";
            a["show hmpg start"] = "Mostrar p\u00e1gina de inicio en el arranque";
            a["show hmpg start hlp"] = "Si es seleccionada esta opci\u00f3n, una p\u00e1gina de inicio personalizable ser\u00e1 lanzada in el portal al momento del arranque.";
            a["home page url"] = "URL de p\u00e1gina de inicio";
            a["home page url hlp"] = "Asigna el URL donde se localiza el contenido de la p\u00e1gina de inicio. Puede ser tanto una URL absoluta como totalmente cualificada.";
            a["navi pnl title"] = "T\u00edtulo del panel de navegaci\u00f3n";
            a["navi pnl title hlp"] = "Asigna el texto que ser\u00e1 mostrado en la barra de titulo del panel de navegaci\u00f3n.";
            a["navi pnl width"] = "Ancho de arranque del panel de navegaci\u00f3n";
            a["navi pnl width hlp"] = "Asigna el ancho de inicio del panel de navegaci\u00f3n en pixeles. El usuario puede ajuste o incluso ocultar el panel seg\u00fan su deseo. Los valores validos est\u00e1n entre 0-2000 pixeles.";
            a["navi type"] = "Tipo de navegaci\u00f3n";
            a["navi type hlp"] = 'Controla el tipo de men\u00fa usado en el panel de navegaci\u00f3n, "\u00e1rbol" o "acorde\u00f3n". Este ajuste no aplica a la barra de herramientas.';
            a["single click nav"] = "Navegaci\u00f3n de un solo clic";
            a["single click nav hlp"] = "Se es seleccionada esta opci\u00f3n, los \u00edtem de men\u00fa en el panel de navegaci\u00f3n se lanzaran en un solo clic. De lo contrario, se lanzaran \u00fanicamente con doble clic. Este ajuste no aplica para la barra de herramientas.";
            a["current library"] = "Biblioteca Actual";
            a["current library hlp"] = "Especifica la biblioteca actual, *USRPRF, o *CRTDFT.";
            a["job descr"] = "Descripci\u00f3n de trabajo";
            a["job descr hlp"] = "Especifica una descripci\u00f3n de trabajo desde la cual se asigna la lista de bibliotecas. *USRPRF puede ser especificado si los usuarios de Atrium son perfiles de usuario de IBM i.";
            a["job descr lib"] = "Biblioteca de descripci\u00f3n de trabajo";
            a["job descr lib hlp"] = "Especifique la biblioteca para la descripci\u00f3n de trabajo. *LIBL o *CURLIB pueden ser especificadas.";
            a["item name"] = "Nombre de \u00cdtem";
            a["item name hlp"] = "Asigna el nombre a mostrar del \u00edtem de navegaci\u00f3n o barra de herramientas.";
            a["action type"] = "Tipo de acci\u00f3n";
            a["action type hlp"] = "Asigna el tipo de aplicaci\u00f3n que lanza este \u00edtem.";
            a.url = "URL";
            a["url hlp"] = "Asigna el URL de la aplicaci\u00f3n Web. Esta puede ser especificada tanto en como una ruta absoluta o URL totalmente cualificada. Par\u00e1metros tipo Query string pueden ser especificados en el URL.";
            a["genie url"] =
                "URL de Genie";
            a["genie url hlp"] = "Asigna el URL que es usado para lanzar Genie. Si no se especifica esta opci\u00f2n, ser\u00e1 usada la URL por omisi\u00f3n de Genie /profoundui/auth/genie. Este valor es \u00fatil si se requiere una URL alternativa de Genie o par\u00e1metros en el query string. Por Ejemplo: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Abrir como";
            a["open as hlp"] = "Establece si lanzar el \u00edtem como una nueva pesta\u00f1a en el portal, o como una nueva ventana en el navegador. Si el navegador usa una nueva ventana o pesta\u00f1a depende de los par\u00e1metros de configuraci\u00f3n del navegador del usuario.";
            a["opens once only"] = "Abre \u00fanicamente una vez";
            a["opens once only hlp"] = "Por omisi\u00f3n, si el usuario lanza este \u00edtem cuando ya existe una pesta\u00f1a abierta para este en el portal, se abre otra pesta\u00f1a para el \u00edtem. No existe limitaci\u00f3n en el numero de pesta\u00f1as que el usuario puede abrir de esta manera. Cuando esta opci\u00f3n es seleccionada, el usuario no podr\u00e1 abrir mas de una pesta\u00f1a para este \u00edtem. Si ya existe una pesta\u00f1a abierta para el \u00edtem cuando el usuario la selecciona, la pesta\u00f1a existente se activar\u00e1. Esta opci\u00f3n se ignora cuando se abre el \u00edtem en una nueva ventana o pesta\u00f1a de navegador.";
            a.icon = "Icono";
            a["icon hlp"] = "Opcional. Asigna un archivo con el icono que ser\u00e1 usado para el \u00edtem de navegaci\u00f3n o barra de herramientas. El archivo del icono puede estar en formato TGIF, JPG, o PNG. Se recomiendan GIFs transparentes. La ruta deber\u00eda ser entregada como una ruta absoluta desde el directorio ra\u00edz de la instalaci\u00f3n Atrium. Si no se especifica icono, Atrium utilizar\u00e1 un icono de navegaci\u00f3n por omisi\u00f3n para los \u00edtems de navegaci\u00f3n. No se mostrar\u00e1 ning\u00fan icono para los \u00edtems de la barra de herramientas, a no ser que se especifique aqu\u00ed.";
            a.parameter = "Par\u00e1metro";
            a["parameter hlp"] = "Opcional: Especifica un par\u00e1metro que ser\u00e1 pasado a su programa de pantalla enriquecida cuando este se lanza.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Ad(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "Esto finalizar\u00e1 su sesi\u00f3n.";
            a["no connection message"] = "No se puede acceder al servidor. Verifique su conexi\u00f3n y trate de nuevo.";
            a["upload file limit"] = "L\u00edmite de &1 archivo(s) excedido.";
            a["upload size limit"] = "L\u00edmite de &1MB por archivo excedido";
            a["upload no files"] = "No hay archivos seleccionados.";
            a["upload duplicate file"] = "Archivos duplicados seleccionados.";
            a["upload file exists"] = "Uno a m\u00e1s archivos ya existen en el sistema de archivos.";
            a["upload prevented"] = "Operaci\u00f3n evitada por programa de salida.";
            a["upload input limit"] = "L\u00edmite de tama\u00f1o total de entrada excedido";
            a["upload no session"] = "No est\u00e1 conectado en una sesi\u00f3n v\u00e1lida.";
            a["upload timeout"] = "La transacci\u00f3n excedi\u00f3 el l\u00edmite de tiempo.";
            a["upload invalid response"] = "La respuesta del servidor es inv\u00e1lida o no se encuentra.";
            a["upload cancelled"] = "Carga cancelada.";
            a["close browser text"] = "Para completar el proceso de cierre de sesi\u00f3n, favor cerrar la ventana de su navegador.";
            a["session ended text"] = "Su sesi\u00f3n ha terminado.";
            a["outside ucs2"] = "Los caracteres est\u00e1n fuera del rango del UCS-2.";
            a["invalid number"] = "&1 no es un n\u00famero v\u00e1lido.";
            a["invalid length"] = "&1 tiene un largo de datos, o posici\u00f3n decimal incorrectos.";
            a["invalid decimal"] = "&1 tiene demasiadas posiciones decimales. (M\u00e1x.: &2)";
            a["invalid choice"] = '"&1" es inv\u00e1lido. Las opciones v\u00e1lidas son: "&2" o "&3".';
            a["invalid date"] = '"&1" no es una fecha v\u00e1lida. Ejemplo del formato : &2';
            a["invalid time"] = '"&1" no es una la Hora v\u00e1lida. Ejemplo del formato : &2';
            a["invalid time stamp"] = '"&1" no es una fecha-Hora v\u00e1lida. Ejemplo del formato: &2';
            a["invalid percent"] = "&1 no es un decimal v\u00e1lido.";
            a["invalid digits"] = '"&1"contiene demasiados d\u00edgitos. M\u00e1x.: &2';
            a["exceeds whole"] = '"&1" excede el n\u00famero m\u00e1ximo de d\u00edgitos para la porci\u00f3n del n\u00famero entero (&2 d\u00edgitos).';
            a["exceeds decimal"] = '"&1" excede el n\u00famero m\u00e1ximo de d\u00edgitos para la porci\u00f3n decimal (&2 d\u00edgitos).';
            a["zip too long"] = "C\u00f3digo de \u00e1rea es demasiado largo. (M\u00e1ximo: &1 d\u00edgitos)";
            a["phone too long"] = "N\u00famero de Tel\u00e9fono es demasiado largo. (M\u00e1ximo: &1 d\u00edgitos)";
            a["ssno too long"] = "N\u00famero de Seguro Social muy largo. (M\u00e1ximo: &1 d\u00edgitos)";
            a["invalid custom val"] = "Funci\u00f3n de validaci\u00f3n personalizada es inv\u00e1lida.";
            a["error custom val"] = "Error en la validaci\u00f3n de la funci\u00f3n personalizada.";
            a.ME = "Campo de entrada obligatorio. Debe ingresar los datos.";
            a.MF = "Campo de relleno obligatorio. Debe rellenar el cuadro de entrada completamente.";
            a.required = "El valor no puede ser blanco. Este campo es requerido.";
            a["file required"] = "Debe seleccionar al menos un archivo.";
            a["signature overflow"] = "El tama\u00f1o del dibujo de la firma excede el n\u00famero m\u00e1ximo de bytes disponible para almacenar la firma. Por favor borre el \u00e1rea de firma y trate de nuevo.";
            a.validValues = "El valor ingresado es invalido. Los valores v\u00e1lidos son: ";
            a["upload invalid type"] =
                "Uno o m\u00e1s archivos son de tipo inv\u00e1lido.";
            a["invalid email"] = "Direcci\u00f3n de correo electr\u00f3nico no es v\u00e1lida.";
            a["session timed out"] = "El tiempo de su sesi\u00f3n ha expirado.";
            a["invalid low range"] = "El valor debe ser mayor o igual a &1";
            a["invalid high range"] = "El valor debe ser menor o igual a &1";
            a["invalid range"] = "El valor debe estar comprendido entre &1 y &2";
            a["unmonitored exception"] = "Este programa ha encontrado algunas excepciones no monitorieadas. Favor contactar al administrador del sistema para su ayuda.";
            a["loading x"] = "Cargando &1...";
            a["data src not specfd x"] = "Fuente de datos no especificada para &1...";
            a["name fld not specfd x"] = "Nombre de campo no especificado para &1...";
            a["val fld not specfd x"] = "Valor de campo no especificado para &1...";
            a["failed to load x"] = "Carga fallida de &1.";
            a["cannot rmv last col"] = "No se puede remover la ultima columna.";
            a["cannot find col"] = "No se puede encontrar el id de columna especificado.";
            a["subfile deletion"] = "Esta seguro que desea borrar el subarchivo ?";
            a["downloading x"] = "Descargando &1";
            a["ie9 too low xlsxpics"] = "Las im\u00e1genes no pueden ser exportadas usando IE9 o inferior.";
            a["keyboard input inhibited"] = "No se permite entrada de teclado en este campo.";
            a["num sessions exceeded"] = "Se excedi\u00f3 el numero de sesiones permitido.";
            a["unable to load portal"] = "No es posible cargar la configuraci\u00f3n del portal o los \u00edtems de navegaci\u00f3n.";
            a["unable to load macr act"] = "No es posible cargar las acciones de macro.";
            a["unable to load macr var"] =
                "No es posible cargar las variables de macro.";
            a["unable to load scrn lst"] = "No es posible cargar la lista de pantallas.";
            a["unable to load new sett"] = "No es posible cargar los nuevos par\u00e1metros de configuraci\u00f3n.";
            a["unable to load x"] = "No es posible cargar &1.";
            a["unable to add x"] = "No es posible adicionar &1.";
            a["unable to rename x"] = "No es posible renombrar &1.";
            a["unable to delete x"] = "No es posible borrar &1.";
            a["unable to update x"] = "No es posible actualizar &1.";
            a["unable to reassn x"] =
                "No es posible reasignar &1.";
            a["unable to reorder items"] = "No es posible reordenar \u00edtems.";
            a["unable to save theme"] = "No es posible salvar la configuraci\u00f3n de tema.";
            a["unable eval script url"] = "No es posible evaluar la URL de c\u00f3digo de aplicaci\u00f3n web.";
            a["close browser text AT"] = "Los cambios no salvados en las sesiones se perder\u00e1.";
            a["close all tabs"] = "Desea cerrar todas las pesta\u00f1as ?";
            a["close tab"] = "Desea cerrar esta pesta\u00f1a ?";
            a["invalid script url"] = "Valor invalido para la URL de c\u00f3digo de aplicaci\u00f3n web.";
            a["unrecognized format"] = "Formato no reconocido.";
            a["screen already defined"] = 'La pantalla "&1" ya esta definida.';
            a["macro already defined"] = 'La Macro "&1" ya esta definida.';
            a["no screen ids"] = "No hay identificadores de pantalla para visualizar";
            a["confirm delete"] = "Confirma borrado";
            a["no actions"] = "NO hay acciones para visualizar.";
            a["msg action input var"] = 'Ingrese el valor en la variable "&1" en el campo de la fila &2, columna &3.';
            a["msg action input user"] = "Ingrese el perfil de usuario actual en el campo de la fila &1, columna &2.";
            a["msg action input js"] = "Ingrese el resulta de la expresi\u00f3n de JavaScript <strong>&1</strong> en el campo de la fila &2, columna &3.";
            a["msg action input other"] = 'Ingrese el valor "&1" en el campo de la fila &2, columna &3.';
            a["msg presskey var"] = 'Presione la tecla definida en la variable "&1".';
            a["msg presskey other"] = 'Presione la tecla "&1".';
            a["msg del scrn from macro"] = "Esta seguro que desea borrar la(s) pantalla(s) seleccionadas de esta macro ?<br /> Todas las acciones asociadas tambi\u00e9n ser\u00e1n borradas.";
            a["choose scrn macro"] = "Seleccione una pantalla o macro para trabajar con sus propiedades.";
            a["choose a nav or toolbar"] = "Seleccione un \u00edtem de navegaci\u00f3n o de la barra de herramientas para trabajar con sus propiedades.";
            a["confirm del sel x"] = "Est\u00e1 seguro que desea borrar el &1 seleccionado ?";
            a["permission settings"] = "Par\u00e1metros de configuraci\u00f3n de permisos";
            a["adding x"] = "Adicionando &1...";
            a["deleting x"] = "Borrando &1 ...";
            a["reassigning x"] = "Reasignando &1...";
            a.loading =
                "Cargando...";
            a.saving = "Salvando...";
            a["x added"] = "&1 adicionado.";
            a["x deleted"] = "&1 borrado.";
            a["x reassigned"] = "&1 reasignado.";
            a["x updated"] = "&1 actualizado.";
            a["x saved"] = "&1 salvado.";
            a["msg del group"] = 'Est\u00e1 seguro que desea borrar el grupo "&1" ?<br /><br />El borrar grupos tambienborra cualquier subgrupo y cualquier usuario asociado.<br /><br />Est\u00e1 seguro que desea continuar ?';
            a["conf reassign users 1"] = "Est\u00e1 seguro que desea reasignar ";
            a["conf reassign users 2a"] = 'usuario "&1" ';
            a["conf reassign users 2b"] = "los usuarios seleccionados ";
            a["conf reassign users 3"] = ' al grupo "&1" ?';
            a["conf reassign group"] = 'Est\u00e1 seguro que desea reasignar el grupo "&1" al grupo "&2" ?';
            a["conf delete users 1"] = "Est\u00e1 seguro que desea borrar ";
            a["conf delete users 2a"] = 'usuario "&1" ?';
            a["conf delete users 2b"] = "los usuarios seleccionados ?";
            a["no users"] = "No hay usuarios para visualizar.";
            a["cannot delete own grp"] = "No puede borrar su propio grupo.";
            a["cannot delete own usr"] = "No puede borra su propio perfil de usuario.";
            a["not auth reassign prf"] = "No esta autorizado a reasignar su propio perfil.";
            a["typeselect macro name"] = "Digite o seleccione el nombre de macro...";
            a["any child items will"] = "Cualquier \u00edtem hijo tambi\u00e9n ser\u00e1 borrado.";
            a["password must be"] = "Las contrase\u00f1as deben ser de al menos 6 caracteres.";
            a["type or sel home page"] = "Digite o seleccione la p\u00e1gina de inicio...";
            a["x is already in list"] = '"&1" ya est\u00e1 en la lista.';
            a["x is not valid libname"] = '"&1" no es un nombre de biblioteca valido.';
            a["no libraries in list"] = "No hay bibliotecas en la lista";
            a["add libl entry"] = "Adicionar entrada en la lista de bibliotecas";
            a["would you like add ano"] = "Desear\u00eda adicionar otro ?";
            a["already in suppl grp x"] = 'El usuario ya est\u00e1 en un grupo suplementario "&1".';
            break;
        case "runtimeText":
            a["upload select text"] = "Seleccionar Archivos";
            a["upload clear text"] = "Limpiar";
            a["upload remove text"] = "Eliminar";
            a["upload upload text"] = "Subir";
            a["upload drophere text"] = "Soltar los archivos aqu\u00ed";
            a["upload browser unsupported"] = "Arrastrar/soltar archivos requiere Internet Explorer 10 o superior, Chrome, o Firefox";
            a["upload finished text"] = "Finalizado";
            a["excel export text"] = "Exportar a Excel";
            a["export to x"] = "Exportar a &1";
            a["filter text"] = "Filtrar";
            a["find text"] = "Buscar";
            a["reset data"] = "Restablecer";
            a["remove filters text"] = "Eliminar todos los filtros";
            a["next link text"] = "Siguiente";
            a["displayed columns"] = "Columnas visualizadas";
            a["previous link text"] = "Anterior";
            a["sort ascending text"] =
                "Orden Ascendente";
            a["sort descending text"] = "Orden Descendente";
            a["sort..."] = "Ordenar...";
            a.sort = "Ordenar";
            a["sort multiple"] = "Ordenar M\u00faltiples Columnas";
            a.column = "Columna";
            a.direction = "Direcci\u00f3n";
            a.order = "Orden";
            a.row = "fila";
            a.rows = "filas";
            a.page = "P\u00e1gina";
            a.collapseAll = "Contraer todo";
            a.expandAll = "Expandir todo";
            a.user = "Usuario";
            a.password = "Contrase\u00f1a";
            a["sign on"] = "Ingreso";
            a.pui = "Profound UI";
            a["pui sign on"] = a.pui + " " + a["sign on"];
            a.pjs = "Profound.js";
            a["pjs sign on"] = a.pjs +
                " " + a["sign on"];
            a["message id"] = "Identificaci\u00f3n de mensaje";
            a["ctlr job"] = "Trabajo Controlador";
            a["app job"] = "Trabajo de Aplicaci\u00f3n";
            a["joblog download"] = "Descargar Job Logs";
            a["curr user"] = "Usuario Actual";
            a["remote ip"] = "Direcci\u00f3n IP Remota";
            a["remote port"] = "Puerto Remoto";
            a.severity = "Severidad";
            a.date = "Fecha";
            a.time = "Hora";
            a.program = "Programa";
            a.procedure = "Procedimiento";
            a.lines = "L\u00ednea(s)";
            a.message = "Mensaje";
            a["new session"] = "Nueva sesi\u00f3n";
            a.close = "Cerrar";
            a["current password"] =
                "Contrase\u00f1a Actual";
            a["new password"] = "Nueva contrase\u00f1a";
            a["repeat new password"] = "Repetir nueva contrase\u00f1a";
            a.submit = "Enviar";
            a.exit = "Salir";
            a.warning = "Advertencia";
            a["change password"] = "Cambiar contrase\u00f1a";
            a.cancel = "Cancelar";
            a["find text"] = "Encontrar";
            a["remove filter"] = "Quitar filtro";
            a.chart = "Gr\u00e1fico";
            a.section = "Secci\u00f3n";
            a.version = "Versi\u00f3n";
            a.fixPack = "Paquete de arreglos";
            a.yes = "Si";
            a.no = "No";
            a.settings = "Ajustes";
            a.favorites = "Favoritos";
            a["type query press en"] =
                "Digite la consulta, presione Enter.";
            a["add to favorites"] = "Adicionar a Favoritos";
            a["rmv from favorites"] = "Remover de Favoritos";
            a["please wait"] = "Por favor espere...";
            a["control panel"] = "Panel de control";
            a["my settings"] = "Mis Ajustes";
            a["about atrium"] = "Sobre Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Derechos de autor &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Advertencia: Este programa de computador est\u00e1 protegido por leyes de derecho de autor<br />y tratados internacionales. La reproducci\u00f3n no autorizada o<br />distribuci\u00f3n de este programa, o alguna porci\u00f3n de el puede resultar en<br />sanciones civiles y penales severas, y ser\u00e1 procesada<br />con la m\u00e1xima extensi\u00f3n posible permitida por la ley.<br /><br />Patentado. &nbsp;U.S. Patente No. 8,667,405 B2.";
            a.item = "\u00cdtem";
            a["open selected item"] = "Abrir \u00edtem seleccionado";
            a.of = "de";
            a["no results to dsp"] = "No hay resultados a visualizar.";
            a["displaying results"] = "Visualizando resultados";
            a["search results"] = "Buscar resultados";
            a["new folder"] = "Nueva carpeta";
            a.rename = "Renombrar";
            a.description = "Descripci\u00f3n";
            a.ok = "OK";
            a.add = "Adicionar";
            a["add x"] = "Adicionar &1";
            a["delete"] = "Borrar";
            a.screen = "Pantalla";
            a.screens = "Pantallas";
            a.macro = "Macro";
            a.macros = "Macros";
            a["screen id"] = "Identificador de pantalla";
            a["screen ids"] = "Identificadores de pantalla";
            a["field row"] = "Campo de fila";
            a["field column"] = "Campo de columna";
            a["field value"] = "Campo de valor";
            a.value = "Valor";
            a.action = "Acci\u00f3n";
            a.actions = "Acciones";
            a["detect once"] = "Detectar una vez";
            a["delete screen"] = "Borrar pantalla";
            a["genie macros"] = "Macros de Genie";
            a["screen name"] = "Nombre de pantalla";
            a.identifier = "Identificador";
            a.identifiers = "Identificadores";
            a["macro name"] = "Nombre de macro";
            a["close browser wintab"] = "Cierre la ventana o pesta\u00f1a del navegador.";
            a.select = "Seleccione";
            a["write value in field"] = "Escriba el valor en un campo";
            a["press a key"] = "Presione una tecla";
            a["a literal value"] = "Un valor literal";
            a["a variable value"] = "Un valor de variable";
            a["cur user profile"] = "El perfil de usuario actual";
            a["result js expr"] = "El resultado de una expresi\u00f3n de JavaScript";
            a["action data"] = "Datos de acci\u00f3n";
            a["data type"] = "Tipo de datos";
            a.users = "Usuarios";
            a["all groups"] = "Todos los grupos";
            a["supplemental groups"] = "Grupos suplementarios";
            a["users w primary grp"] =
                'Usuarios cuyo Grupo Primario es "&1"';
            a["users w suppl grp"] = 'Usuarios con Grupo Suplementario para "&1"';
            a.group = "Grupo";
            a.groups = "Grupos";
            a.edit = "Editar";
            a["edit x"] = "Editar &1";
            a.manager = "Gestor";
            a.administrator = "Administrador";
            a["primary group"] = "Grupo Primario";
            a["delete x"] = "Borrar &1";
            a["reassign x"] = "Reasignar &1";
            a["navigation item"] = "\u00cdtem de Navegaci\u00f3n";
            a["navigation items"] = "\u00cdtems de Navegaci\u00f3n";
            a["navigation panel"] = "Panel de Navegaci\u00f3n";
            a["home pages"] = "Paginas de inicio";
            a["menu group"] = "Grupo de men\u00fas";
            a["menu item"] = "\u00cdtem de men\u00fa";
            a["toolbar items"] = "\u00cdtems de la barra de herramientas";
            a.toolbar = "Barra de herramientas";
            a.button = "Bot\u00f3n";
            a["pulldown menu"] = "Men\u00fa desplegable";
            a["pulldown menu item"] = "\u00cdtem de men\u00fa desplegable";
            a["separator bar"] = "Barra separadora";
            a.spacer = "Espaciador";
            a["item details"] = "Detalles del \u00edtem";
            a["item number"] = "Numero de \u00edtem";
            a["item type"] = "Tipo de \u00edtem";
            a["genie macro"] = "Macro de Genie";
            a["rdf application"] = "Aplicaci\u00f3n de archivo de pantalla enriquecido";
            a["web application"] = "Aplicaci\u00f3n Web";
            a["pc command"] = "Comando PC";
            a["dspf program library"] = "Biblioteca del programa de archivo de pantalla";
            a["dspf program"] = "Programa de archivo de pantalla";
            a["variable name x"] = "Nombre de variable &1";
            a["a tab in the portal"] = "Una pesta\u00f1a en el portal";
            a["a new browser wind"] = "Una nueva ventana o pesta\u00f1a de navegador";
            a.update = "Actualizar";
            a.fill = "Llenar";
            a.permissions = "Permisos";
            a["user/group name"] = "Nombre de usuario/grupo";
            a["all users groups"] = "Todos los usuarios y grupo ";
            a.type = "Tipo";
            a.access = "Acceso";
            a.allow = "Permitir";
            a.disallow = "Rechazar";
            a.navigation = "Navegaci\u00f3n";
            a["add usrgrp perm"] = "Adicionar permisos de usuario/grupo";
            a.membership = "Membres\u00eda";
            a.none = "Ninguno";
            a.remove = "Remover";
            a.appearance = "Apariencia";
            a["home page"] = "P\u00e1gina de inicio";
            a.tree = "\u00c1rbol";
            a.accordion = "Acorde\u00f3n";
            a["min search chars"] = "Caracteres de b\u00fasqueda m\u00ednimos";
            a["libl for rdf apps"] = "Lista de bibliotecas para aplicaciones de archivos de pantalla enriquecidos";
            a["library list"] = "Lista de bibliotecas";
            a.library = "Biblioteca";
            a["use atrium def libl"] = "Usar la lista de bibliotecas por omisi\u00f3n de Atrium";
            a["use jobd libl"] = "Usar la lista de bibliotecas de la JOBD";
            a["specify libl"] = "Especificar lista de bibliotecas";
            a.up = "Arriba";
            a.down = "Abajo";
            a["move up"] = "Mover arriba";
            a["move down"] = "Mover abajo";
            a["global settings"] = "Ajustes globales";
            a.save = "Salvar";
            a["add usr to supp grp"] = "Adicionar usuario o grupo suplementario";
            a["member of"] = "Miembro de ";
            a["member of hlp"] = "El grupo al cual este usuario/grupo pertenece.";
            a["group name"] = "Nombre de grupo";
            a["group name hlp"] = "El nombre a visualizar para este grupo.";
            a["inherit settings"] = "Heredar configuraciones";
            a["inherit settings hlp"] = "Cuando esta opci\u00f3n es seleccionada, el usuario/grupo heredar\u00e1 la configuraci\u00f3n de su ancestro. Cuando no es seleccionada, el usuario/grupo tendr\u00e1 si propios datos de configuraci\u00f3n.";
            a["user name"] = "Nombre de usuario";
            a["user name hlp"] = "El nombre a visualizar de este perfil de usuario.";
            a["access role"] = "Rol de acceso";
            a["access role hlp"] = "Controla el rol de acceso de este usuario. Los Administradores pueden gestionar todos los grupos y usuarios y tambi\u00e9n pueden controlar las autorizaciones de la aplicaci\u00f3n. Los gestores pueden configurar los par\u00e1metros de usuario y grupo dentro de su propio grupo. Los usuarios no tienen privilegios especiales.";
            a["can edit profile"] =
                "Puede editar el perfil";
            a["can edit profile hlp"] = 'Permite al usuario editar los par\u00e1metros de configuraci\u00f3n de "apariencia" y "navegaci\u00f3n", y cambiar la contrase\u00f1a. Los dem\u00e1s par\u00e1metros de configuraci\u00f3n no son editables por el usuario.';
            a["user profile"] = "Perfil de usuario";
            a["user profile hlp"] = "El nombre de perfil de usuario. Los nombres de perfil de usuario son sensibles a may\u00fasculas y min\u00fasculas, a no ser que se utilicen perfiles de IBM i.";
            a["password hlp"] =
                "Asignar/restablecer la contrase\u00f1a. Las contrase\u00f1as son sensibles a may\u00fasculas y min\u00fasculas.";
            a["conf password"] = "Confirmar contrase\u00f1a";
            a["conf password hlp"] = "Cuando se asigna/restablece la contrase\u00f1a, este campo debe coincidir exactamente con la nueva contrase\u00f1a asignada. Las contrase\u00f1as son sensibles a may\u00fasculas y min\u00fasculas.";
            a["browser title"] = "Titulo del navegador";
            a["browser title hlp"] = "Asigna el texto que ser\u00e1 mostrado en la barra de t\u00edtulos del navegador.";
            a["show banner"] = "Mostrar banner";
            a["show banner hlp"] = "Desmarque esta opci\u00f3n si no desea mostrar la banderola en la parte superior del portal.";
            a["banner height"] = "Altura del banner";
            a["banner height hlp"] = "Asigna la altura del banner en la parte superior del portal en pixeles. Este ajuste es ignorado si ha seleccionado no mostrar la banderola. Los valores validos est\u00e1n entre 0-600 pixeles.";
            a["banner url"] = "URL del banner";
            a["banner url hlp"] = "Asigna la URL donde se localiza el contenido del banner. Puede ser tanto una RUL absoluta como una totalmente cualificada.";
            a.theme = "Tema";
            a["theme hlp"] = 'Asigna el tema por omisi\u00f3n. Este puede ser anulado por los usuarios individuales si el atributo <strong>"Permitir a los usuarios seleccionar el tema"</strong> est\u00e1 activado.';
            a["allow sel theme"] = "Permitir al usuario seleccionar el tema";
            a["allow sel theme hlp"] = "Si est\u00e1 seleccionado, los usuarios tendr\u00e1n la habilidad de seleccionar su tema deseado usando un control en la barra de herramientas.";
            a["show menu search"] = "Mostrar men\u00fa de b\u00fasqueda";
            a["show menu search hlp"] = "Desmarque esta opci\u00f3n para desactivar la caracter\u00edstica de b\u00fasqueda en el men\u00fa.";
            a["show fav sys"] = "Mostrar sistema de favoritos";
            a["show fav sys hlp"] = "Desmarque esta opci\u00f3n para desactivar el sistema de favoritos.";
            a["show fav start"] = "Mostrar Favoritos en el arranque";
            a["show fav start hlp"] = "Si es seleccionado, el panel Favoritos se muestra en el arranque. De lo contrario el panel Navegaci\u00f3n ser\u00e1 el que se muestre (acci\u00f3n por omisi\u00f3n). Esta opci\u00f3n solo estar\u00e1 disponible si se habilita el sistema Favoritos.";
            a["limit num sessn"] = "Limitar el numero de sesiones";
            a["limit num sessn hlp"] = "Numero de sesiones Atrium permitidas para este usuario/grupo. Un valor de cero permite sesiones ilimitadas. La limitaci\u00f3n se aplica por navegador web.";
            a["show hmpg start"] = "Mostrar p\u00e1gina de inicio en el arranque";
            a["show hmpg start hlp"] = "Si es seleccionada esta opci\u00f3n, una p\u00e1gina de inicio personalizable ser\u00e1 lanzada in el portal al momento del arranque.";
            a["home page url"] = "URL de p\u00e1gina de inicio";
            a["home page url hlp"] = "Asigna el URL donde se localiza el contenido de la p\u00e1gina de inicio. Puede ser tanto una URL absoluta como totalmente cualificada.";
            a["navi pnl title"] = "Titulo del panel de navegaci\u00f3n";
            a["navi pnl title hlp"] = "Asigna el texto que ser\u00e1 mostrado en la barra de titulo del panel de navegaci\u00f3n.";
            a["navi pnl width"] = "Ancho de arranque del panel de navegaci\u00f3n";
            a["navi pnl width hlp"] = "Asigna el ancho de inicio del panel de navegaci\u00f3n en pixeles. El usuario puede ajuste o incluso ocultar el panel seg\u00fan su deseo. Los valores validos est\u00e1n entre 0-2000 pixeles.";
            a["navi type"] = "Tipo de navegaci\u00f3n";
            a["navi type hlp"] = 'Controla el tipo de men\u00fa usado en el panel de navegaci\u00f3n, "\u00e1rbol" o "acorde\u00f3n". Este ajuste no aplica a la barra de herramientas.';
            a["single click nav"] = "Navegaci\u00f3n de un solo clic";
            a["single click nav hlp"] = "Se es seleccionada esta opci\u00f3n, los \u00edtem de men\u00fa en el panel de navegaci\u00f3n se lanzaran en un solo clic. De lo contrario, se lanzaran \u00fanicamente con doble clic. Este ajuste no aplica para la barra de herramientas.";
            a["current library"] = "Biblioteca Actual";
            a["current library hlp"] = "Especifica la biblioteca actual, *USRPRF, o *CRTDFT.";
            a["job descr"] = "Descripci\u00f3n de trabajo";
            a["job descr hlp"] = "Especifica una descripci\u00f3n de trabajo desde la cual se asigna la lista de bibliotecas. *USRPRF puede ser especificado si los usuarios de Atrium son perfiles de usuario de IBM i.";
            a["job descr lib"] = "Biblioteca de descripci\u00f3n de trabajo";
            a["job descr lib hlp"] = "Especifique la biblioteca para la descripci\u00f3n de trabajo. *LIBL o *CURLIB pueden ser especificadas.";
            a["item name"] = "Nombre de \u00cdtem";
            a["item name hlp"] = "Asigna el nombre a mostrar del \u00edtem de navegaci\u00f3n o barra de herramientas.";
            a["action type"] = "Tipo de acci\u00f3n";
            a["action type hlp"] = "Asigna el tipo de aplicaci\u00f3n que lanza este \u00edtem.";
            a.url = "URL";
            a["url hlp"] = "Asigna el URL de la aplicaci\u00f3n Web. Esta puede ser especificada tanto en como una ruta absoluta o URL totalmente cualificada. Par\u00e1metros tipo Query string pueden ser especificados en el URL.";
            a["genie url"] =
                "URL de Genie";
            a["genie url hlp"] = "Asigna el URL que es usado para lanzar Genie. Si no se especifica esta opci\u00f2n, ser\u00e1 usada la URL por omisi\u00f3n de Genie /profoundui/auth/genie. Este valor es \u00fatil si se requiere una URL alternativa de Genie o par\u00e1metros en el query string. Por Ejemplo: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Abrir como";
            a["open as hlp"] = "Establece si lanzar el \u00edtem como una nueva pesta\u00f1a en el portal, o como una nueva ventana en el navegador. Si el navegador usa una nueva ventana o pesta\u00f1a depende de los par\u00e1metros de configuraci\u00f3n del navegador del usuario.";
            a["opens once only"] = "Abre \u00fanicamente una vez";
            a["opens once only hlp"] = "Por omisi\u00f3n, si el usuario lanza este \u00edtem cuando ya existe una pesta\u00f1a abierta para este en el portal, se abre otra pesta\u00f1a para el \u00edtem. No existe limitaci\u00f3n en el numero de pesta\u00f1as que el usuario puede abrir de esta manera. Cuando esta opci\u00f3n es seleccionada, el usuario no podr\u00e1 abrir mas de una pesta\u00f1a para este \u00edtem. Si ya existe una pesta\u00f1a abierta para el \u00edtem cuando el usuario la selecciona, la pesta\u00f1a existente se activar\u00e1. Esta opci\u00f3n se ignora cuando se abre el \u00edtem en una nueva ventana o pesta\u00f1a de navegador.";
            a.icon = "Icono";
            a["icon hlp"] = "Opcional. Asigna un archivo con el icono que ser\u00e1 usado para el \u00edtem de navegaci\u00f3n o barra de herramientas. El archivo del icono puede estar en formato TGIF, JPG, o PNG. Se recomiendan GIFs transparentes. La ruta deber\u00eda ser entregada como una ruta absoluta desde el directorio ra\u00edz de la instalaci\u00f3n Atrium. Si no se especifica icono, Atrium utilizar\u00e1 un icono de navegaci\u00f3n por omisi\u00f3n para los \u00edtems de navegaci\u00f3n. No se mostrar\u00e1 ning\u00fan icono para los \u00edtems de la barra de herramientas, a no ser que se especifique aqu\u00ed.";
            a.parameter = "Par\u00e1metro";
            a["parameter hlp"] = "Opcional: Especifica un par\u00e1metro que ser\u00e1 pasado a su programa de pantalla enriquecida cuando este se lanza.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Bd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "Votre session sera ferm\u00e9e.";
            a["no connection message"] = "Impossible d'acc\u00e9der le serveur.  Veuillez v\u00e9rifier votre connexion et r\u00e9essayer.";
            a["upload file limit"] = "La limite de &1 fichier(s) est d\u00e9pass\u00e9e.";
            a["upload size limit"] = "La limite de &1MB par fichier est d\u00e9pass\u00e9e.";
            a["upload no files"] = "Aucun fichier s\u00e9lectionn\u00e9.";
            a["upload duplicate file"] = "Doublon(s) dans les fichiers s\u00e9lectionn\u00e9s.";
            a["upload file exists"] = "Un ou plusieurs fichier(s) existe d\u00e9j\u00e0 sur le syst\u00e8me.";
            a["upload prevented"] = "L'op\u00e9ration est bloqu\u00e9e par le programme de sortie.";
            a["upload input limit"] = "L'entr\u00e9e de donn\u00e9es d\u00e9passe la limite.";
            a["upload no session"] = "Il n'y a aucune connection \u00e0 une session valide.";
            a["upload timeout"] = "La transaction a expir\u00e9e.";
            a["upload invalid response"] = "La r\u00e9ponse du serveur est manquante ou invalide.";
            a["upload cancelled"] =
                "T\u00e9l\u00e9versement annul\u00e9";
            a["close browser text"] = "Veuillez fermer votre navigateur pour compl\u00e9ter le processus de d\u00e9connection.";
            a["session ended text"] = "Votre session s'est termin\u00e9e.";
            a["outside ucs2"] = "Caract\u00e8res non-permis parmi les valeurs permises dans le UCS-2.";
            a["invalid number"] = "&1 n'est pas un num\u00e9ro valide.";
            a["invalid length"] = "&1 n'a pas le bon nombre de caract\u00e8res ou de d\u00e9cimales.'";
            a["invalid decimal"] = "&1 contient trop de d\u00e9cimales. (max: &2)";
            a["invalid choice"] = '"&1" est invalide. Les choix valides sont: "&2" ou "&3".';
            a["invalid date"] = '"&1" est une date invalide. Exemple de format: &2';
            a["invalid time"] = '"&1" est une heure invalide. Exemple de format: &2';
            a["invalid time stamp"] = '"&1" est une date et heure invalide. Exemple de format: &2';
            a["invalid percent"] = "&1 n'est pas une d\u00e9cimale valide.";
            a["invalid digits"] = '"&1" contient trop de caract\u00e8res. Max: &2';
            a["exceeds whole"] = '"&1" d\u00e9passe le nombre de caract\u00e8res maximum pour le nombre avant les d\u00e9cimales (&2 caract\u00e8res).';
            a["exceeds decimal"] = '"&1" d\u00e9passe le nombre de caract\u00e8res maximum pour les d\u00e9cimales (&2 caract\u00e8res).';
            a["zip too long"] = "Le code postal est trop long. (Maximum: &1 caract\u00e8res)";
            a["phone too long"] = "Le num\u00e9ro de t\u00e9l\u00e9phone est trop long. (Maximum: &1 caract\u00e8res)";
            a["ssno too long"] = "Le num\u00e9ro d'assurance sociale est trop long. (Maximum: &1 caract\u00e8res)";
            a["invalid custom val"] = "La fonction de validation est invalide.";
            a["error custom val"] = "Erreur dans la fonction de validation.";
            a.ME = "Le champ est obligatoire.";
            a.MF = "Chaque caract\u00e8re doit \u00eatre remplit pour ce champ.";
            a.required = "Le champ doit \u00eatre remplit.";
            a["file required"] = "Au moins un fichier doit \u00eatre choisi.";
            a["signature overflow"] = "La grosseur de la signature d\u00e9passe l'espace de stockage permis. Veuillez effacer la signature et r\u00e9essayer.";
            a.validValues = "La valeur entr\u00e9e est invalide. Les valeurs valides sont: ";
            a["upload invalid type"] = "Un ou plusieurs fichiers sont de type invalide.";
            a["invalid email"] = "L'adresse courriel est invalide.";
            a["session timed out"] = "Votre session est expir\u00e9e.";
            a["invalid low range"] = "La valeur doit \u00eatre sup\u00e9rieure ou \u00e9gale \u00e0 &1";
            a["invalid high range"] = "La valeur doit \u00eatre inf\u00e9rieure ou \u00e9gale \u00e0 &1";
            a["invalid range"] = "La valeur doit se situer entre &1 et &2";
            a["unmonitored exception"] = "Le programme a rencontr\u00e9 une erreur non control\u00e9e. Veuillez contacter l'administrateur du syst\u00e8me.";
            a["loading x"] =
                "Chargement de &1...";
            a["data src not specfd x"] = "Source des donn\u00e9es non sp\u00e9cifi\u00e9e pour &1...";
            a["name fld not specfd x"] = "Nom du champ non sp\u00e9cifi\u00e9 pour &1...";
            a["val fld not specfd x"] = "Valeur du champ non sp\u00e9cifi\u00e9e pour &1...";
            a["failed to load x"] = "\u00c9chec du chargement de &1.";
            a["cannot rmv last col"] = "Vous ne pouvez pas supprimer la derni\u00e8re colonne.";
            a["cannot find col"] = "Impossible de trouver la colonne indiqu\u00e9e.";
            a["subfile deletion"] = "\u00cates-vous certain de vouloir supprimer le sous-fichier?";
            a["downloading x"] = "T\u00e9l\u00e9chargement de &1";
            a["ie9 too low xlsxpics"] = "Les images ne peuvent pas \u00eatre export\u00e9es sous IE9 ou version ant\u00e9rieure.";
            a["keyboard input inhibited"] = "Saisie interdite dans ce champ.";
            a["num sessions exceeded"] = "Nombre de sessions d\u00e9pass\u00e9.";
            a["unable to load portal"] = "Impossible de charger les param\u00e8tres ou les \u00e9l\u00e9ments de navigation du portail.";
            a["unable to load macr act"] = "Impossible de charger les actions des macros.";
            a["unable to load macr var"] =
                "Impossible de charger les variables des macros.";
            a["unable to load scrn lst"] = "Impossible de charger la liste des \u00e9crans.";
            a["unable to load new sett"] = "Impossible de charger les nouveaux param\u00e8tres.";
            a["unable to load x"] = "Impossible de charger &1.";
            a["unable to add x"] = "Impossible d'ajouter &1.";
            a["unable to rename x"] = "Impossible de renommer &1.";
            a["unable to delete x"] = "Impossible de supprimer &1.";
            a["unable to update x"] = "Impossible de mettre \u00e0 jour &1.";
            a["unable to reassn x"] =
                "Impossible de r\u00e9assigner &1.";
            a["unable to reorder items"] = "Impossible de r\u00e9ordonner les \u00e9l\u00e9ments.";
            a["unable to save theme"] = "Impossible d'enregistrer le param\u00e8tre du th\u00e8me.";
            a["unable eval script url"] = "Impossible d'\u00e9valuer le script d'URL de l'application Web.";
            a["close browser text AT"] = "Les modifications non enregistr\u00e9es de la session ou des sessions seront perdus.";
            a["close all tabs"] = "Fermer tous les onglets ?";
            a["close tab"] = "Voulez-vous fermer cet onglet ?";
            a["invalid script url"] = "Valeurs invalides dans le script d'URL de l'application Web.";
            a["unrecognized format"] = "Format non reconnu.";
            a["screen already defined"] = '\u00c9cran "&1" d\u00e9j\u00e0 d\u00e9fini.';
            a["macro already defined"] = 'Macro "&1" d\u00e9j\u00e0 d\u00e9finie.';
            a["no screen ids"] = "Il n'y a aucun identifiant d'\u00e9cran \u00e0 afficher";
            a["confirm delete"] = "Confirmer la suppression";
            a["no actions"] = "Il n'y a aucune action \u00e0 afficher";
            a["msg action input var"] = 'Entrer la valeur de la variable "&1" dans le champ en ligne &2 colonne &3.';
            a["msg action input user"] = "Entrer le profil de l'utilisateur en cours dans le champ en ligne &1 colonne &2.";
            a["msg action input js"] = "Entrer le r\u00e9sultat de l'expression JavaScript <strong>&1</strong> dans le champ en ligne &2 colonne &3.";
            a["msg action input other"] = 'Entrer la valeur "&1" dans le champ en ligne &2 colonne &3.';
            a["msg presskey var"] = 'Appuyer sur la touche d\u00e9finie dans la variable "&1".';
            a["msg presskey other"] = 'Appuyer sur la touche "&1".';
            a["msg del scrn from macro"] =
                "\u00cates-vous s\u00fbr(e) de vouloir supprimer le(s) \u00e9cran(s) s\u00e9lectionn\u00e9(s) de cette macro ?<br /> Toutes les actions associ\u00e9es seront aussi supprim\u00e9es.";
            a["choose scrn macro"] = "Choisir un \u00e9cran ou une macro pour d\u00e9finir ses propri\u00e9t\u00e9s.";
            a["choose a nav or toolbar"] = "Choisir un \u00e9l\u00e9ment de navigation ou de barre d'outils pour d\u00e9finir ses propri\u00e9t\u00e9s.";
            a["confirm del sel x"] = "\u00cates-vous s\u00fbr(e) de vouloir supprimer le/la &1 s\u00e9lectionn\u00e9(e) ?";
            a["permission settings"] = "param\u00e8tre(s) d'autorisation";
            a["adding x"] = "Ajout en cours de &1...";
            a["deleting x"] = "Suppession en cours de &1 ...";
            a["reassigning x"] = "R\u00e9assignement en cuors de &1...";
            a.loading = "En chargement...";
            a.saving = "Enregistrement en cours...";
            a["x added"] = "&1 ajout\u00e9(e).";
            a["x deleted"] = "&1 supprim\u00e9(e).";
            a["x reassigned"] = "&1 r\u00e9assign\u00e9(e).";
            a["x updated"] = "&1 mis(e) \u00e0 jour.";
            a["x saved"] = "&1 enregistr\u00e9(e).";
            a["msg del group"] = '\u00cates-vous s\u00fbr(e) de vouloir supprimer le groupe "&1" ?<br /><br />Supprimer des groupes entra\u00eene aussi la suppression de tous les sous-groupes et de toutes les associations d\'utilisateurs.<br /><br />\u00cates-vous s\u00fbr(e) de vouloir continuer ?';
            a["conf reassign users 1"] = "\u00cates-vous s\u00fbr(e) de vouloir r\u00e9assigner ";
            a["conf reassign users 2a"] = 'l\'utilisateur "&1" ';
            a["conf reassign users 2b"] = "les utilisateurs s\u00e9lectionn\u00e9s ";
            a["conf reassign users 3"] = ' au group "&1" ?';
            a["conf reassign group"] = '\u00cates-vous s\u00fbr(e) de vouloir r\u00e9assigner le group "&1" au group "&2" ?';
            a["conf delete users 1"] = "\u00cates-vous s\u00fbr(e) de vouloir supprimer ";
            a["conf delete users 2a"] = 'l\'utilisateur "&1" ?';
            a["conf delete users 2b"] =
                "les utilisateurs s\u00e9lectionn\u00e9s ?";
            a["no users"] = "Il n'y a aucun utilisateur \u00e0  afficher.";
            a["cannot delete own grp"] = "Vous ne pouvez pas supprimer votre propre groupe.";
            a["cannot delete own usr"] = "Vous ne pouvez pas supprimer votre propre profil.";
            a["not auth reassign prf"] = "Vous n'\u00eates pas autoris\u00e9(e) \u00e0 r\u00e9assigner votre propre profil.";
            a["typeselect macro name"] = "Saisir ou s\u00e9lectionner un nom de macro...";
            a["any child items will"] = "Tout \u00e9l\u00e9ment enfant sera aussi supprim\u00e9.";
            a["password must be"] = "Les mots de passe doivent comporter au moins 6 caract\u00e8res.";
            a["type or sel home page"] = "Saisir ou s\u00e9lectionner une page d'accueil...";
            a["x is already in list"] = '"&1" figure d\u00e9j\u00e0 dans la liste.';
            a["x is not valid libname"] = '"&1" n\'est pas un nom valide de biblioth\u00e8que.';
            a["no libraries in list"] = "Aucune biblioth\u00e8que dans la liste";
            a["add libl entry"] = "Ajouter une entr\u00e9e dans la liste de biblioth\u00e8que";
            a["would you like add ano"] = "Voulez-vous en ajouter une autre ?";
            a["already in suppl grp x"] = 'L\'utilisateur figure d\u00e9j\u00e0 dans le groupe suppl\u00e9mentaire "&1".';
            break;
        case "runtimeText":
            a["upload select text"] = "S\u00e9lection de fichiers";
            a["upload clear text"] = "Effacer";
            a["upload remove text"] = "Supprimer";
            a["upload upload text"] = "T\u00e9l\u00e9versement";
            a["upload drophere text"] = "D\u00e9poser les fichiers ici.";
            a["upload browser unsupported"] = "Glisser/d\u00e9poser des fichiers requiert Internet Explorer 10 ou plus r\u00e9cent, Chrome, ou Firefox";
            a["upload finished text"] = "Fini";
            a["excel export text"] = "Exporter vers Excel";
            a["export to x"] = "Exporter vers &1";
            a["filter text"] = "Filtrer";
            a["find text"] = "Trouver";
            a["reset data"] = "R\u00e9initialiser";
            a["remove filters text"] = "Enlever les filtres";
            a["displayed columns"] = "Colonnes affich\u00e9es";
            a["next link text"] = "Suivante";
            a["previous link text"] = "Pr\u00e9c\u00e9dente";
            a["sort ascending text"] = "Tri ascendant";
            a["sort descending text"] = "Tri descendant";
            a["sort..."] = "Trier...";
            a.sort = "Tri";
            a["sort multiple"] =
                "Trier Plusieurs Colonnes";
            a.column = "Colonne";
            a.direction = "Sens";
            a.order = "Ordre";
            a.row = "rang\u00e9e";
            a.rows = "rang\u00e9es";
            a.page = "Page";
            a.collapseAll = "R\u00e9duire tout";
            a.expandAll = "Ouvrir tout";
            a.user = "Utilisateur";
            a.password = "Mot de passe";
            a["sign on"] = "Connection";
            a.pui = "Profound UI";
            a["pui sign on"] = a["sign on"] + " " + a.pui;
            a.pjs = "Profound.js";
            a["pjs sign on"] = a["sign on"] + " " + a.pjs;
            a["message id"] = "Identifiant de message";
            a["ctlr job"] = "Travail Serveur";
            a["app job"] = "Travail";
            a["joblog download"] =
                "T\u00e9l\u00e9charger l'Historique du Travail";
            a["curr user"] = "Utilisateur Courant";
            a["remote ip"] = "Adresse IP Distante";
            a["remote port"] = "Port Distant";
            a.severity = "S\u00e9v\u00e9rit\u00e9";
            a.date = "Date";
            a.time = "Heure";
            a.program = "Programme";
            a.procedure = "Proc\u00e9dure";
            a.lines = "Ligne(s)";
            a.message = "Message";
            a["new session"] = "Nouvelle Session";
            a.close = "Fermer";
            a["current password"] = "Mot de passe actuel";
            a["new password"] = "Nouveau mot de passe";
            a["repeat new password"] = "R\u00e9p\u00e9ter le mot de passe";
            a.submit = "Soumettre";
            a.exit = "Quitter";
            a.warning = "Avertissement";
            a["change password"] = "Changer mot de passe";
            a.cancel = "Annuler";
            a["find text"] = "Trouver";
            a["remove filter"] = "Supprimer le filtre";
            a.chart = "Graphe";
            a.section = "Section";
            a.version = "Version";
            a.fixPack = "Fix Pack";
            a.yes = "Oui";
            a.no = "Non";
            a.settings = "Param\u00e8tres";
            a.favorites = "Favoris";
            a["type query press en"] = "Saisir une requ\u00eate, appuyer sur Entr\u00e9e.";
            a["add to favorites"] = "Ajouter aux Favoris";
            a["rmv from favorites"] = "Supprimer des Favoris";
            a["please wait"] = "Veuillez patienter...";
            a["control panel"] = "Panneau de contr\u00f4le";
            a["my settings"] = "Mes param\u00e8tres";
            a["about atrium"] = "\u00c0 propos d'Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Attention: Ce logiciel est prot\u00e9g\u00e9 par le code de la propri\u00e9t\u00e9 intellectuelle<br />et des trait\u00e9s internationaux. Toute reproduction non autoris\u00e9e ou<br />distribution de ce logiciel, m\u00eame partielle, peut entra\u00eener<br />de graves sanctions civiles ou p\u00e9nales, et entra\u00eenera<br />les poursuites maximales possibles pr\u00e9vues par la loi.<br /><br />Brevet\u00e9. &nbsp;U.S. Brevet No. 8,667,405 B2.";
            a.item = "\u00c9l\u00e9ment";
            a["open selected item"] = "Ouvrir l'\u00e9l\u00e9ment s\u00e9lectionn\u00e9";
            a.of = "de";
            a["no results to dsp"] = "Aucun r\u00e9sultat \u00e0 afficher.";
            a["displaying results"] = "R\u00e9sultats en cours d'affichage";
            a["search results"] = "Recherche en cours";
            a["new folder"] = "Nouveau dossier";
            a.rename = "Renommer";
            a.description = "Description";
            a.ok = "OK";
            a.add = "Ajouter";
            a["add x"] = "Ajouter &1";
            a["delete"] = "Supprimer";
            a.screen = "\u00c9cran";
            a.screens = "\u00c9crans";
            a.macro = "Macro";
            a.macros =
                "Macros";
            a["screen id"] = "Identifiant de l'\u00e9cran";
            a["screen ids"] = "Identifiants d'\u00e9cran";
            a["field row"] = "Champ Ligne";
            a["field column"] = "Champ Colonne";
            a["field value"] = "Valeur du champ";
            a.value = "Valeur";
            a.action = "Action";
            a.actions = "Actions";
            a["detect once"] = "D\u00e9tection unique";
            a["delete screen"] = "Supprimer \u00c9cran";
            a["genie macros"] = "Macros Genie";
            a["screen name"] = "Nom d'\u00e9cran";
            a.identifier = "Identifiant";
            a.identifiers = "Identifiants";
            a["macro name"] = "Nom de la macro";
            a["close browser wintab"] =
                "Fermer la fen\u00eatre ou l'onglet du navigateur.";
            a.select = "S\u00e9lectionner";
            a["write value in field"] = "Saisir une valeur dans un champ";
            a["press a key"] = "Appuyer sur une touche";
            a["a literal value"] = "Une constante";
            a["a variable value"] = "Une variable";
            a["cur user profile"] = "Le profil utilisateur en cours";
            a["result js expr"] = "Le r\u00e9sultat d'une expression JavaScript";
            a["action data"] = "Donn\u00e9e de l'action";
            a["data type"] = "Type de donn\u00e9e";
            a.users = "Utilisateurs";
            a["all groups"] = "Tous les groupes";
            a["supplemental groups"] = "Groupes suppl\u00e9mentaires";
            a["users w primary grp"] = 'Utilisateurs dont le groupe principal est "&1"';
            a["users w suppl grp"] = 'Utilisateurs ayant pour groupe suppl\u00e9mentaire "&1"';
            a.group = "Groupe";
            a.groups = "Groupes";
            a.edit = "Modifier";
            a["edit x"] = "Modifier &1";
            a.manager = "G\u00e9rer";
            a.administrator = "Administrateur";
            a["primary group"] = "Groupe principal";
            a["delete x"] = "Supprimer &1";
            a["reassign x"] = "R\u00e9assigner &1";
            a["navigation item"] = "\u00c9l\u00e9ment de Navigation";
            a["navigation items"] = "\u00c9l\u00e9ments de Navigation";
            a["navigation panel"] = "Panneau de Navigation";
            a["home pages"] = "Pages d'accueil";
            a["menu group"] = "Groupe de Menu";
            a["menu item"] = "\u00c9l\u00e9ment de Menu";
            a["toolbar items"] = "\u00c9l\u00e9ments de Barre d'outils";
            a.toolbar = "Barre d'outils";
            a.button = "Bouton";
            a["pulldown menu"] = "Menu d\u00e9roulant";
            a["pulldown menu item"] = "\u00c9l\u00e9ment de Menu d\u00e9roulant";
            a["separator bar"] = "Barre de s\u00e9paration";
            a.spacer = "Espace";
            a["item details"] =
                "D\u00e9tail de l'\u00e9l\u00e9ment";
            a["item number"] = "N\u00b0 de l'\u00e9l\u00e9ment";
            a["item type"] = "Type d'\u00e9l\u00e9ment";
            a["genie macro"] = "Macro Genie";
            a["rdf application"] = "Application Rich Display File";
            a["web application"] = "Application web";
            a["pc command"] = "Commande PC";
            a["dspf program library"] = "Biblioth\u00e8que du programme";
            a["dspf program"] = "Nom du programme";
            a["variable name x"] = "Nom de Variable &1";
            a["a tab in the portal"] = "Un onglet dans le portail";
            a["a new browser wind"] = "Une nouvelle fen\u00eatre ou onglet du navigateur";
            a.update = "Mettre \u00e0 jour";
            a.fill = "Remplir";
            a.permissions = "Autorisations";
            a["user/group name"] = "Nom Utilisateur/Groupe";
            a["all users groups"] = "Tous les Utilisateurs et Groupes";
            a.type = "Type";
            a.access = "Droit";
            a.allow = "Autoriser";
            a.disallow = "Interdire";
            a.navigation = "Navigation";
            a["add usrgrp perm"] = "Ajouter des Autorisations Utilisateur/Groupe";
            a.membership = "Appartenance";
            a.none = "Aucun";
            a.remove = "Supprimer";
            a.appearance = "Apparence";
            a["home page"] = "Page d'accueil";
            a.tree = "Ramification";
            a.accordion =
                "Accord\u00e9on";
            a["min search chars"] = "Caract\u00e8res minimum de recherche";
            a["libl for rdf apps"] = "Liste des biblioth\u00e8ques pour les applications Rich Display File";
            a["library list"] = "Liste des biblioth\u00e8ques";
            a.library = "Biblioth\u00e8que";
            a["use atrium def libl"] = "Utiliser la liste des biblioth\u00e8ques par d\u00e9faut de l'Atrium";
            a["use jobd libl"] = "Utiliser la liste des biblioth\u00e8ques de la JOBD";
            a["specify libl"] = "Sp\u00e9cifier la liste des biblioth\u00e8ques";
            a.up = "Haut";
            a.down =
                "Bas";
            a["move up"] = "D\u00e9placer vers le haut";
            a["move down"] = "D\u00e9placer vers le bas";
            a["global settings"] = "Param\u00e8tres g\u00e9n\u00e9raux";
            a.save = "Enregistrer";
            a["add usr to supp grp"] = "Ajouter un utilisateur \u00e0 un Groupe Suppl\u00e9mentaire";
            a["member of"] = "Membre de";
            a["member of hlp"] = "Le groupe auquel appartient cet utilisateur/groupe.";
            a["group name"] = "Nom du Groupe";
            a["group name hlp"] = "Le nom affich\u00e9 pour ce Groupe.";
            a["inherit settings"] = "H\u00e9riter des param\u00e8tres";
            a["inherit settings hlp"] = "Si cette option est coch\u00e9e, l'utilisateur/groupe h\u00e9ritera des param\u00e8tres de son parent. Si d\u00e9coch\u00e9e, l'utilisateur/groupe aura ses propres donn\u00e9es de param\u00e8tres.";
            a["user name"] = "Nom d'utilisateur";
            a["user name hlp"] = "Nom affich\u00e9 pour cet utilisateur.";
            a["access role"] = "R\u00f4le";
            a["access role hlp"] = "Contr\u00f4le le r\u00f4le de cet utilisateur. Les Administrateurs peuvent g\u00e9rer tous les groupes et utilisateurs, et peuvent aussi g\u00e9rer les droits des \u00e9l\u00e9ments. Les Managers peuvent configurer les param\u00e8tres des groupes et utilisateurs au sein de leur propre groupe. Les Utilisateurs n'ont aucun privil\u00e8ge.";
            a["can edit profile"] = "Peut modifier un profil";
            a["can edit profile hlp"] = "Autorise l'utilisateur \u00e0 modifier les param\u00e8tres \"d'apparence\" et \"de navigation\" , et \u00e0 modifier le mot de passe. Aucun autre param\u00e8tre n'est modifiable par l'utilisateur.";
            a["user profile"] = "Profil Utilisateur";
            a["user profile hlp"] = "Le nom du profil utilisateur. Les noms des profils utilisateurs sont sensibles \u00e0 la casse, sauf pour les profils IBM i.";
            a["password hlp"] = "D\u00e9finir/r\u00e9initialiser le mot de passe. Les mots de passe sont sensibles \u00e0 la casse.";
            a["conf password"] = "Confirmer le Mot de passe";
            a["conf password hlp"] = "Quand le Mot de passe est d\u00e9fini/r\u00e9initialis\u00e9, ce champ doit correspondre au nouveau Mot de passe. Les mots de passe sont sensibles \u00e0 la casse.";
            a["browser title"] = "Titre du Navigateur";
            a["browser title hlp"] = "D\u00e9finit le texte affich\u00e9 dans la barre de titre du navigateur.";
            a["show banner"] = "Afficher la banni\u00e8re";
            a["show banner hlp"] = "D\u00e9cocher cette option si vous ne souhaitez pas afficher la banni\u00e8re en haut du portail.";
            a["banner height"] = "Hauteur de la banni\u00e8re";
            a["banner height hlp"] = "D\u00e9finit en pixels la hauteur de la banni\u00e8re en haut du portail. Ce param\u00e8tre est ignor\u00e9 si vous avez choisi de ne pas afficher la banni\u00e8re. Plage des valeurs valides : 0 \u00e0 600 pixels.";
            a["banner url"] = "URL de la banni\u00e8re";
            a["banner url hlp"] = "D\u00e9finit l'URL du contenu de la banni\u00e8re. L'URL peut \u00eatre aboslue ou relative.";
            a.theme = "Th\u00e8me";
            a["theme hlp"] = 'D\u00e9finit le Th\u00e8me par d\u00e9faut. Ce param\u00e8tre peut \u00eatre \u00e9cras\u00e9 individuellement par chaque utilisateur si <strong>"Autoriser l\'utilisateur \u00e0 choisir le th\u00e8me"</strong> est activ\u00e9.';
            a["allow sel theme"] = "Autoriser l'utilisateur \u00e0 choisir le th\u00e8me";
            a["allow sel theme hlp"] = "Si coch\u00e9, les utilisateurs auront la possibilit\u00e9 de choisir le th\u00e8me via un menu d\u00e9roulant dans la barre d'outils.";
            a["show menu search"] = "Afficher la zone de recherche";
            a["show menu search hlp"] = "D\u00e9cocher pour masquer la zone de recherche.";
            a["show fav sys"] = "Afficher les Favoris";
            a["show fav sys hlp"] = "D\u00e9cocher pour masquer les Favoris.";
            a["show fav start"] = "Afficher les Favoris au d\u00e9marrage";
            a["show fav start hlp"] = "Si coch\u00e9, le panneau des Favoris sera affich\u00e9 au d\u00e9marrage. Sinon, le Panneau de navigation sera affich\u00e9 (par d\u00e9faut). Cette option n'est disponible que si le syst\u00e8me de Favoris est actifa \u00e9t\u00e9 activ\u00e9.";
            a["limit num sessn"] = "Limiter le nombre de sessions";
            a["limit num sessn hlp"] = "Nombre maximum de sessions autoris\u00e9 par l'Atrium pour cet utilisateur/groupe. Une valeur de z\u00e9ro correspond \u00e0 un nombre illimit\u00e9 de sessions. La limite est fix\u00e9e par navigateur.";
            a["show hmpg start"] = "Afficher la page d'accueil au d\u00e9marrage";
            a["show hmpg start hlp"] = "Si coch\u00e9, une page d'accueil personnalisable sera affich\u00e9e au d\u00e9marrage.";
            a["home page url"] = "URL de la page d'accueil";
            a["home page url hlp"] = "D\u00e9finit l'URL du contenu de la page d'accueil. L'URL peut \u00eatre aboslue ou relative.";
            a["navi pnl title"] = "Titre du panneau de Navigation";
            a["navi pnl title hlp"] = "D\u00e9finit le texte \u00e0 afficher dans la barre de titre du panneau de Navigation.";
            a["navi pnl width"] = "Largeur initiale du panneau de Navigation";
            a["navi pnl width hlp"] = "D\u00e9finit en pixels la largeur initiale du panneau de Navigation. L'utilisateur peut modifier ou m\u00eame masquer le panneau \u00e0 sa guise. Plage des valeurs valides : 0-2000 pixels.";
            a["navi type"] = "Type de Navigation";
            a["navi type hlp"] = 'Contr\u00f4le le type de menu utilis\u00e9 dans le panneau de Navigation, "ramification" ou "accord\u00e9on". Ce param\u00e8tre ne s\'applique pas aux barres d\'outils.';
            a["single click nav"] = "Navigation en un clic";
            a["single click nav hlp"] = "Si coch\u00e9, les \u00e9l\u00e9ments du menu dans le panneau de Navigation seront ex\u00e9cut\u00e9 sur un simple clic. Sinon, ils ne seront ex\u00e9cut\u00e9s qu'apr\u00e8s un double-clic. Ce param\u00e8tre ne s'applique pas aux barres d'outils.";
            a["current library"] = "Biblioth\u00e8que en cours";
            a["current library hlp"] = "Sp\u00e9cifie la biblioth\u00e8que en cours, *USRPRF or *CRTDFT.";
            a["job descr"] = "Description du job";
            a["job descr hlp"] =
                "Sp\u00e9cifie la description du job afin d'en d\u00e9duire la liste des biblioth\u00e8ques. *USRPRF peut \u00eatre sp\u00e9cifi\u00e9 si les utilisateurs de l'Atrium ont des profils IBM i.";
            a["job descr lib"] = "Biblioth\u00e8que de la description du job";
            a["job descr lib hlp"] = "Sp\u00e9cifie la biblioth\u00e8que pour la description du job. *LIBL ou *CURLIB peuvent \u00eatre sp\u00e9cifi\u00e9es.";
            a["item name"] = "Nom de l'\u00e9l\u00e9ment";
            a["item name hlp"] = "D\u00e9finit le nom d'affichage de l'\u00e9l\u00e9ment de navigation ou de la barre d'outils.";
            a["action type"] = "Type d'action";
            a["action type hlp"] = "D\u00e9finit le type de l'application lanc\u00e9e par cet \u00e9l\u00e9ment.";
            a.url = "URL";
            a["url hlp"] = "D\u00e9finit l'URL de l'application Web. L'URL peut \u00eatre aboslue ou relative. Des param\u00e8tres de requ\u00eate peuvent \u00eatre sp\u00e9cifi\u00e9s dans l'URL.";
            a["genie url"] = "URL Genie";
            a["genie url hlp"] = "D\u00e9finit l'URL utilis\u00e9e pour lancer le Genie. Si non sp\u00e9cifi\u00e9e, l'URL Genie par d\u00e9faut /profoundui/auth/genie sera utilis\u00e9e. Ce champ est utile dans le cas d'une URL Genie personnalis\u00e9e ou lorsque des param\u00e8tres de requ\u00eates sont n\u00e9cessaires. par exemple : /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Ouvrir en tant que";
            a["open as hlp"] = "D\u00e9finit si l'\u00e9l\u00e9ment doit \u00eatre ouvert dans un nouvel onglet du portail ou en tant que nouvelle fen\u00eatre/nouvel onglet du navigateur. L'utilisation d'une fen\u00eatre ou onglet du navigateur d\u00e9pend des r\u00e9glages de celui-ci.";
            a["opens once only"] = "Ex\u00e9cution unique";
            a["opens once only hlp"] = "Par d\u00e9faut, si l'utilisateur ex\u00e9cute l'\u00e9l\u00e9ment alors que celui-ci est d\u00e9j\u00e0 ouvert dans le portail, un nouvel onglet est utilis\u00e9. Il n'y a pas de limite du nombre d'onglets que l'utilisateur est capable d'ouvrir de cette fa\u00e7on. Quand cette option est coch\u00e9e, l'utilisateur ne pourra ouvrir qu'un seul onglet correspondant \u00e0 cet \u00e9l\u00e9ment. Si l'onglet est d\u00e9j\u00e0 ouvert, le fait d'ex\u00e9cuter l'\u00e9l\u00e9ment activera cet onglet. Cette option est ignor\u00e9e si l'\u00e9l\u00e9ment s'ouvre dans une nouvelle fen\u00eatre ou un nouvel onglet du navigateur.";
            a.icon = "Ic\u00f4ne";
            a["icon hlp"] = "Optionnel. D\u00e9finit l'ic\u00f4ne utilis\u00e9e dans le menu de navigation ou la barre d'outils. L'ic\u00f4ne peut \u00eatre au format GIF, JPG ou PNG. Les GIF transparents sont recommand\u00e9s. Le chemin devra \u00eatre sp\u00e9cifi\u00e9 en absolu depuis le r\u00e9pertoire racine d'installation de l'Atrium. Si aucune ic\u00f4ne n'est sp\u00e9cifi\u00e9e, l'Atrium utilisera l'ic\u00f4ne par d\u00e9faut pour les \u00e9l\u00e9ments de navigation. Aucune ic\u00f4ne ne sera affich\u00e9e pour les \u00e9l\u00e9ments de la barre d'outils sauf si sp\u00e9cifi\u00e9e ici.";
            a.parameter = "Param\u00e8tre";
            a["parameter hlp"] = "Optionnel: Sp\u00e9cifie un param\u00e8tre qui sera pass\u00e9 au program Rich Display lors de son ex\u00e9cution.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Cd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "Ceci terminera votre session.";
            a["no connection message"] = "Impossible d'\u00e9tablir une connexion au serveur. S'il vous pla\u00eet, v\u00e9rifiez la connexion et essayez \u00e0 nouveau.";
            a["upload file limit"] = "Limite de &1 fichier(s) d\u00e9pass\u00e9e.";
            a["upload size limit"] = "Limite de &1MB par fichier d\u00e9pass\u00e9e.";
            a["upload no files"] = "Pas de fichiers s\u00e9lectionn\u00e9s.";
            a["upload duplicate file"] = "Fichiers s\u00e9lectionn\u00e9s en double.";
            a["upload file exists"] = "Un ou plusieurs fichiers existent d\u00e9j\u00e0 dans le syst\u00e8me de fichiers.";
            a["upload prevented"] = "Op\u00e9ration emp\u00each\u00e9e par \u00abexit program\u00bb.";
            a["upload input limit"] = "Limite de taille totale des donn\u00e9es d\u00e9pass\u00e9e.";
            a["upload no session"] = "Vous n'\u00eates pas connect\u00e9(e) \u00e0 une session valide.";
            a["upload timeout"] = "Le temps limite pour la transaction a \u00e9t\u00e9 d\u00e9pass\u00e9.";
            a["upload invalid response"] = "Le serveur ne r\u00e9pond pas ou n'est pas joignable.";
            a["upload cancelled"] = "T\u00e9l\u00e9versement annul\u00e9";
            a["close browser text"] = "Pour terminer la session, veuillez fermez la fen\u00eatre du navigateur.";
            a["session ended text"] = "Votre session est termin\u00e9e.";
            a["outside ucs2"] = "Caract\u00e8res en dehors de la norme UCS-2.";
            a["invalid number"] = "&1 n'est pas un nombre valide.";
            a["invalid length"] = "&1 a une longueur ou une position de d\u00e9cimale incorrecte.";
            a["invalid decimal"] = "&1 comporte trop de d\u00e9cimales. (max: &2)";
            a["invalid choice"] =
                '"&1" est incorrect. Les choix possibles sont: "&2" ou "&3".';
            a["invalid date"] = '"&1" n\'est pas une date valide. Exemple de format correct: &2';
            a["invalid time"] = '"&1" n\'est pas une heure valide. Exemple de format correct: &2';
            a["invalid time stamp"] = '"&1" n\'est pas un horodatage valide. Exemple de format correct: &2';
            a["invalid percent"] = "&1 n'est pas une d\u00e9cimale valide.";
            a["invalid digits"] = '"&1" contient un nombre de chiffres trop \u00e9l\u00e9v\u00e9. Max: &2';
            a["exceeds whole"] = '"&1" d\u00e9passe le nombre maximum de chiffres pour la partie num\u00e9rique du champ (&2 digits).';
            a["exceeds decimal"] = '"&1" d\u00e9passe le nombre maximum de chiffres pour la partie d\u00e9cimale du champ (&2 digits).';
            a["zip too long"] = "Le code postal est trop long. (Maximum: &1 digits)";
            a["phone too long"] = "Le num\u00e9ro de t\u00e9l\u00e9phone est trop long. (Maximum: &1 digits)";
            a["ssno too long"] = "Le code de s\u00e9curit\u00e9 sociale est trop long. (Maximum: &1 digits)";
            a["invalid custom val"] = "La fonction de validation personnalis\u00e9e est invalide.";
            a["error custom val"] = "Erreur dans la fonction de validation personnalis\u00e9e.";
            a.ME = "Ce champ est obligatoire.";
            a.MF = "Tous les caract\u00e8res de ce champ doivent \u00eatre saisis.";
            a.required = "Ce champ est obligatoire et ne peut \u00eatre \u00e0 blanc.";
            a["file required"] = "Vous devez s\u00e9lectionner au moins un fichier.";
            a["signature overflow"] = "L'image de la signature d\u00e9passe le nombre maximum de bytes disponibles pour son stockage. S'il vous pla\u00eet, effacez la signature et essayez \u00e0 nouveau.";
            a.validValues = "La valeur saisie n'est pas valide. Les valeurs valides sont: ";
            a["upload invalid type"] = "Un ou plusieurs fichiers sont de type invalide.";
            a["invalid email"] = "Adresse email invalide.";
            a["session timed out"] = "Votre session a expir\u00e9.";
            a["invalid low range"] = "La valeur doit \u00eatre sup\u00e9rieure ou \u00e9gale \u00e0 &1";
            a["invalid high range"] = "La valeur doit \u00eatre inf\u00e9rieure ou \u00e9gale \u00e0 &1";
            a["invalid range"] = "La valeur doit \u00eatre comprise entre &1 et &2.";
            a["unmonitored exception"] = "Le programme a rencontr\u00e9 une erreur non pr\u00e9vue. Pri\u00e8re de contacter l'administrateur syst\u00e8me pour toute assistance.";
            a["loading x"] = "Chargement de &1...";
            a["data src not specfd x"] = "Source des donn\u00e9es non sp\u00e9cifi\u00e9e pour &1...";
            a["name fld not specfd x"] = "Nom du champ non sp\u00e9cifi\u00e9 pour &1...";
            a["val fld not specfd x"] = "Valeur du champ non sp\u00e9cifi\u00e9e pour &1...";
            a["failed to load x"] = "\u00c9chec du chargement de &1.";
            a["cannot rmv last col"] = "Vous ne pouvez pas supprimer la derni\u00e8re colonne.";
            a["cannot find col"] = "Impossible de trouver la colonne indiqu\u00e9e.";
            a["subfile deletion"] =
                "\u00cates-vous certain de vouloir supprimer le sous-fichier?";
            a["downloading x"] = "T\u00e9l\u00e9chargement de &1";
            a["ie9 too low xlsxpics"] = "Les images ne peuvent pas \u00eatre export\u00e9es sous IE9 ou version ant\u00e9rieure.";
            a["keyboard input inhibited"] = "Saisie interdite dans ce champ.";
            a["num sessions exceeded"] = "Nombre de sessions d\u00e9pass\u00e9.";
            a["unable to load portal"] = "Impossible de charger les param\u00e8tres ou les \u00e9l\u00e9ments de navigation du portail.";
            a["unable to load macr act"] =
                "Impossible de charger les actions des macros.";
            a["unable to load macr var"] = "Impossible de charger les variables des macros.";
            a["unable to load scrn lst"] = "Impossible de charger la liste des \u00e9crans.";
            a["unable to load new sett"] = "Impossible de charger les nouveaux param\u00e8tres.";
            a["unable to load x"] = "Impossible de charger &1.";
            a["unable to add x"] = "Impossible d'ajouter &1.";
            a["unable to rename x"] = "Impossible de renommer &1.";
            a["unable to delete x"] = "Impossible de supprimer &1.";
            a["unable to update x"] =
                "Impossible de mettre \u00e0 jour &1.";
            a["unable to reassn x"] = "Impossible de r\u00e9assigner &1.";
            a["unable to reorder items"] = "Impossible de r\u00e9ordonner les \u00e9l\u00e9ments.";
            a["unable to save theme"] = "Impossible d'enregistrer le param\u00e8tre du th\u00e8me.";
            a["unable eval script url"] = "Impossible d'\u00e9valuer le script d'URL de l'application Web.";
            a["close browser text AT"] = "Les modifications non enregistr\u00e9es de la session ou des sessions seront perdus.";
            a["close all tabs"] = "Fermer tous les onglets ?";
            a["close tab"] = "Voulez-vous fermer cet onglet ?";
            a["invalid script url"] = "Valeurs invalides dans le script d'URL de l'application Web.";
            a["unrecognized format"] = "Format non reconnu.";
            a["screen already defined"] = '\u00c9cran "&1" d\u00e9j\u00e0 d\u00e9fini.';
            a["macro already defined"] = 'Macro "&1" d\u00e9j\u00e0 d\u00e9finie.';
            a["no screen ids"] = "Il n'y a aucun identifiant d'\u00e9cran \u00e0 afficher";
            a["confirm delete"] = "Confirmer la suppression";
            a["no actions"] = "Il n'y a aucune action \u00e0 afficher";
            a["msg action input var"] = 'Entrer la valeur de la variable "&1" dans le champ en ligne &2 colonne &3.';
            a["msg action input user"] = "Entrer le profil de l'utilisateur en cours dans le champ en ligne &1 colonne &2.";
            a["msg action input js"] = "Entrer le r\u00e9sultat de l'expression JavaScript <strong>&1</strong> dans le champ en ligne &2 colonne &3.";
            a["msg action input other"] = 'Entrer la valeur "&1" dans le champ en ligne &2 colonne &3.';
            a["msg presskey var"] = 'Appuyer sur la touche d\u00e9finie dans la variable "&1".';
            a["msg presskey other"] = 'Appuyer sur la touche "&1".';
            a["msg del scrn from macro"] = "\u00cates-vous s\u00fbr(e) de vouloir supprimer le(s) \u00e9cran(s) s\u00e9lectionn\u00e9(s) de cette macro ?<br /> Toutes les actions associ\u00e9es seront aussi supprim\u00e9es.";
            a["choose scrn macro"] = "Choisir un \u00e9cran ou une macro pour d\u00e9finir ses propri\u00e9t\u00e9s.";
            a["choose a nav or toolbar"] = "Choisir un \u00e9l\u00e9ment de navigation ou de barre d'outils pour d\u00e9finir ses propri\u00e9t\u00e9s.";
            a["confirm del sel x"] = "\u00cates-vous s\u00fbr(e) de vouloir supprimer le/la &1 s\u00e9lectionn\u00e9(e) ?";
            a["permission settings"] = "param\u00e8tre(s) d'autorisation";
            a["adding x"] = "Ajout en cours de &1...";
            a["deleting x"] = "Suppession en cours de &1 ...";
            a["reassigning x"] = "R\u00e9assignement en cuors de &1...";
            a.loading = "Chargement...";
            a.saving = "Enregistrement en cours...";
            a["x added"] = "&1 ajout\u00e9(e).";
            a["x deleted"] = "&1 supprim\u00e9(e).";
            a["x reassigned"] = "&1 r\u00e9assign\u00e9(e).";
            a["x updated"] =
                "&1 mis(e) \u00e0 jour.";
            a["x saved"] = "&1 enregistr\u00e9(e).";
            a["msg del group"] = '\u00cates-vous s\u00fbr(e) de vouloir supprimer le groupe "&1" ?<br /><br />Supprimer des groupes entra\u00eene aussi la suppression de tous les sous-groupes et de toutes les associations d\'utilisateurs.<br /><br />\u00cates-vous s\u00fbr(e) de vouloir continuer ?';
            a["conf reassign users 1"] = "\u00cates-vous s\u00fbr(e) de vouloir r\u00e9assigner ";
            a["conf reassign users 2a"] = 'l\'utilisateur "&1" ';
            a["conf reassign users 2b"] =
                "les utilisateurs s\u00e9lectionn\u00e9s ";
            a["conf reassign users 3"] = ' au group "&1" ?';
            a["conf reassign group"] = '\u00cates-vous s\u00fbr(e) de vouloir r\u00e9assigner le group "&1" au group "&2" ?';
            a["conf delete users 1"] = "\u00cates-vous s\u00fbr(e) de vouloir supprimer ";
            a["conf delete users 2a"] = 'l\'utilisateur "&1" ?';
            a["conf delete users 2b"] = "les utilisateurs s\u00e9lectionn\u00e9s ?";
            a["no users"] = "Il n'y a aucun utilisateur \u00e0  afficher.";
            a["cannot delete own grp"] = "Vous ne pouvez pas supprimer votre propre groupe.";
            a["cannot delete own usr"] = "Vous ne pouvez pas supprimer votre propre profil.";
            a["not auth reassign prf"] = "Vous n'\u00eates pas autoris\u00e9(e) \u00e0 r\u00e9assigner votre propre profil.";
            a["typeselect macro name"] = "Saisir ou s\u00e9lectionner un nom de macro...";
            a["any child items will"] = "Tout \u00e9l\u00e9ment enfant sera aussi supprim\u00e9.";
            a["password must be"] = "Les mots de passe doivent comporter au moins 6 caract\u00e8res.";
            a["type or sel home page"] = "Saisir ou s\u00e9lectionner une page d'accueil...";
            a["x is already in list"] = '"&1" figure d\u00e9j\u00e0 dans la liste.';
            a["x is not valid libname"] = '"&1" n\'est pas un nom valide de biblioth\u00e8que.';
            a["no libraries in list"] = "Aucune biblioth\u00e8que dans la liste";
            a["add libl entry"] = "Ajouter une entr\u00e9e dans la liste de biblioth\u00e8que";
            a["would you like add ano"] = "Voulez-vous en ajouter une autre ?";
            a["already in suppl grp x"] = 'L\'utilisateur figure d\u00e9j\u00e0 dans le groupe suppl\u00e9mentaire "&1".';
            break;
        case "runtimeText":
            a["upload select text"] =
                "Fichiers s\u00e9lectionn\u00e9s";
            a["upload clear text"] = "Effacer";
            a["upload remove text"] = "Retirer";
            a["upload upload text"] = "Envoyer";
            a["upload drophere text"] = "D\u00e9poser les fichiers ici.";
            a["upload browser unsupported"] = "Glisser/d\u00e9poser des fichiers requiert Internet Explorer 10 ou plus r\u00e9cent, Chrome, ou Firefox";
            a["upload finished text"] = "Fini";
            a["excel export text"] = "Exporter vers Excel";
            a["export to x"] = "Exporter vers &1";
            a["filter text"] = "Filtrer ";
            a["find text"] = "Trouver";
            a["reset data"] =
                "R\u00e9initialiser";
            a["remove filters text"] = "Supprimer tous les filtres";
            a["displayed columns"] = "Colonnes affich\u00e9es";
            a["next link text"] = "Suivante";
            a["previous link text"] = "Pr\u00e9c\u00e9dente";
            a["sort ascending text"] = "Trier dans l'ordre croissant";
            a["sort descending text"] = "Trier dans l'ordre d\u00e9croissant";
            a["sort..."] = "Trier...";
            a.sort = "Tri";
            a["sort multiple"] = "Trier Plusieurs Colonnes";
            a.column = "Colonne";
            a.direction = "Sens";
            a.order = "Ordre";
            a.row = "ligne";
            a.rows = "lignes";
            a.page = "Page";
            a.collapseAll = "Tout replier";
            a.expandAll = "Tout d\u00e9plier";
            a.user = "Utilisateur";
            a.password = "Mot de passe";
            a["sign on"] = "Identification";
            a.pui = "Profound UI";
            a["pui sign on"] = a["sign on"] + " " + a.pui;
            a.pjs = "Profound.js";
            a["pjs sign on"] = a["sign on"] + " " + a.pjs;
            a["message id"] = "N\u00b0 du message";
            a["ctlr job"] = "Travail Serveur";
            a["app job"] = "Travail";
            a["joblog download"] = "T\u00e9l\u00e9charger l'Historique du Travail";
            a["curr user"] = "Utilisateur Courant";
            a["remote ip"] = "Adresse IP Distante";
            a["remote port"] =
                "Port Distant";
            a.severity = "S\u00e9v\u00e9rit\u00e9";
            a.date = "Date";
            a.time = "Heure";
            a.program = "Programme";
            a.procedure = "Proc\u00e9dure";
            a.lines = "Ligne(s)";
            a.message = "Message";
            a["new session"] = "Nouvelle Session";
            a.close = "Fermer";
            a["current password"] = "Mot de passe actuel";
            a["new password"] = "Nouveau mot de passe";
            a["repeat new password"] = "R\u00e9p\u00e9ter le nouveau mot de passe";
            a.submit = "Soumettre";
            a.exit = "Quitter";
            a.warning = "Avertissement";
            a["change password"] = "Modifier le mot de passe";
            a.cancel = "Annuler";
            a["find text"] = "Trouver";
            a["remove filter"] = "Supprimer le filtre";
            a.chart = "Graphe";
            a.section = "Section";
            a.version = "Version";
            a.fixPack = "Fix Pack";
            a.yes = "Oui";
            a.no = "Non";
            a.settings = "Param\u00e8tres";
            a.favorites = "Favoris";
            a["type query press en"] = "Saisir une requ\u00eate, appuyer sur Entr\u00e9e.";
            a["add to favorites"] = "Ajouter aux Favoris";
            a["rmv from favorites"] = "Supprimer des Favoris";
            a["please wait"] = "Veuillez patienter...";
            a["control panel"] = "Panneau de contr\u00f4le";
            a["my settings"] = "Mes param\u00e8tres";
            a["about atrium"] = "\u00c0 propos d'Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Attention: Ce logiciel est prot\u00e9g\u00e9 par le code de la propri\u00e9t\u00e9 intellectuelle<br />et des trait\u00e9s internationaux. Toute reproduction non autoris\u00e9e ou<br />distribution de ce logiciel, m\u00eame partielle, peut entra\u00eener<br />de graves sanctions civiles ou p\u00e9nales, et entra\u00eenera<br />les poursuites maximales possibles pr\u00e9vues par la loi.<br /><br />Brevet\u00e9. &nbsp;U.S. Brevet No. 8,667,405 B2.";
            a.item = "\u00c9l\u00e9ment";
            a["open selected item"] = "Ouvrir l'\u00e9l\u00e9ment s\u00e9lectionn\u00e9";
            a.of = "de";
            a["no results to dsp"] = "Aucun r\u00e9sultat \u00e0 afficher.";
            a["displaying results"] = "R\u00e9sultats en cours d'affichage";
            a["search results"] = "Recherche en cours";
            a["new folder"] = "Nouveau dossier";
            a.rename = "Renommer";
            a.description = "Description";
            a.ok = "OK";
            a.add = "Ajouter";
            a["add x"] = "Ajouter &1";
            a["delete"] = "Supprimer";
            a.screen = "\u00c9cran";
            a.screens = "\u00c9crans";
            a.macro = "Macro";
            a.macros =
                "Macros";
            a["screen id"] = "Identifiant de l'\u00e9cran";
            a["screen ids"] = "Identifiants d'\u00e9cran";
            a["field row"] = "Champ Ligne";
            a["field column"] = "Champ Colonne";
            a["field value"] = "Valeur du champ";
            a.value = "Valeur";
            a.action = "Action";
            a.actions = "Actions";
            a["detect once"] = "D\u00e9tection unique";
            a["delete screen"] = "Supprimer \u00c9cran";
            a["genie macros"] = "Macros Genie";
            a["screen name"] = "Nom d'\u00e9cran";
            a.identifier = "Identifiant";
            a.identifiers = "Identifiants";
            a["macro name"] = "Nom de la macro";
            a["close browser wintab"] =
                "Fermer la fen\u00eatre ou l'onglet du navigateur.";
            a.select = "S\u00e9lectionner";
            a["write value in field"] = "Saisir une valeur dans un champ";
            a["press a key"] = "Appuyer sur une touche";
            a["a literal value"] = "Une constante";
            a["a variable value"] = "Une variable";
            a["cur user profile"] = "Le profil utilisateur en cours";
            a["result js expr"] = "Le r\u00e9sultat d'une expression JavaScript";
            a["action data"] = "Donn\u00e9e de l'action";
            a["data type"] = "Type de donn\u00e9e";
            a.users = "Utilisateurs";
            a["all groups"] = "Tous les groupes";
            a["supplemental groups"] = "Groupes suppl\u00e9mentaires";
            a["users w primary grp"] = 'Utilisateurs dont le groupe principal est "&1"';
            a["users w suppl grp"] = 'Utilisateurs ayant pour groupe suppl\u00e9mentaire "&1"';
            a.group = "Groupe";
            a.groups = "Groupes";
            a.edit = "Modifier";
            a["edit x"] = "Modifier &1";
            a.manager = "G\u00e9rer";
            a.administrator = "Administrateur";
            a["primary group"] = "Groupe principal";
            a["delete x"] = "Supprimer &1";
            a["reassign x"] = "R\u00e9assigner &1";
            a["navigation item"] = "\u00c9l\u00e9ment de Navigation";
            a["navigation items"] = "\u00c9l\u00e9ments de Navigation";
            a["navigation panel"] = "Panneau de Navigation";
            a["home pages"] = "Pages d'accueil";
            a["menu group"] = "Groupe de Menu";
            a["menu item"] = "\u00c9l\u00e9ment de Menu";
            a["toolbar items"] = "\u00c9l\u00e9ments de Barre d'outils";
            a.toolbar = "Barre d'outils";
            a.button = "Bouton";
            a["pulldown menu"] = "Menu d\u00e9roulant";
            a["pulldown menu item"] = "\u00c9l\u00e9ment de Menu d\u00e9roulant";
            a["separator bar"] = "Barre de s\u00e9paration";
            a.spacer = "Espace";
            a["item details"] =
                "D\u00e9tail de l'\u00e9l\u00e9ment";
            a["item number"] = "N\u00b0 de l'\u00e9l\u00e9ment";
            a["item type"] = "Type d'\u00e9l\u00e9ment";
            a["genie macro"] = "Macro Genie";
            a["rdf application"] = "Application Rich Display File";
            a["web application"] = "Application web";
            a["pc command"] = "Commande PC";
            a["dspf program library"] = "Biblioth\u00e8que du programme";
            a["dspf program"] = "Nom du programme";
            a["variable name x"] = "Nom de Variable &1";
            a["a tab in the portal"] = "Un onglet dans le portail";
            a["a new browser wind"] = "Une nouvelle fen\u00eatre ou onglet du navigateur";
            a.update = "Mettre \u00e0 jour";
            a.fill = "Remplir";
            a.permissions = "Autorisations";
            a["user/group name"] = "Nom Utilisateur/Groupe";
            a["all users groups"] = "Tous les Utilisateurs et Groupes";
            a.type = "Type";
            a.access = "Droit";
            a.allow = "Autoriser";
            a.disallow = "Interdire";
            a.navigation = "Navigation";
            a["add usrgrp perm"] = "Ajouter des Autorisations Utilisateur/Groupe";
            a.membership = "Appartenance";
            a.none = "Aucun";
            a.remove = "Supprimer";
            a.appearance = "Apparence";
            a["home page"] = "Page d'accueil";
            a.tree = "Ramification";
            a.accordion =
                "Accord\u00e9on";
            a["min search chars"] = "Caract\u00e8res minimum de recherche";
            a["libl for rdf apps"] = "Liste des biblioth\u00e8ques pour les applications Rich Display File";
            a["library list"] = "Liste des biblioth\u00e8ques";
            a.library = "Biblioth\u00e8que";
            a["use atrium def libl"] = "Utiliser la liste des biblioth\u00e8ques par d\u00e9faut de l'Atrium";
            a["use jobd libl"] = "Utiliser la liste des biblioth\u00e8ques de la JOBD";
            a["specify libl"] = "Sp\u00e9cifier la liste des biblioth\u00e8ques";
            a.up = "Haut";
            a.down =
                "Bas";
            a["move up"] = "D\u00e9placer vers le haut";
            a["move down"] = "D\u00e9placer vers le bas";
            a["global settings"] = "Param\u00e8tres g\u00e9n\u00e9raux";
            a.save = "Enregistrer";
            a["add usr to supp grp"] = "Ajouter un utilisateur \u00e0 un Groupe Suppl\u00e9mentaire";
            a["member of"] = "Membre de";
            a["member of hlp"] = "Le groupe auquel appartient cet utilisateur/groupe.";
            a["group name"] = "Nom du Groupe";
            a["group name hlp"] = "Le nom affich\u00e9 pour ce Groupe.";
            a["inherit settings"] = "H\u00e9riter des param\u00e8tres";
            a["inherit settings hlp"] = "Si cette option est coch\u00e9e, l'utilisateur/groupe h\u00e9ritera des param\u00e8tres de son parent. Si d\u00e9coch\u00e9e, l'utilisateur/groupe aura ses propres donn\u00e9es de param\u00e8tres.";
            a["user name"] = "Nom d'utilisateur";
            a["user name hlp"] = "Nom affich\u00e9 pour cet utilisateur.";
            a["access role"] = "R\u00f4le";
            a["access role hlp"] = "Contr\u00f4le le r\u00f4le de cet utilisateur. Les Administrateurs peuvent g\u00e9rer tous les groupes et utilisateurs, et peuvent aussi g\u00e9rer les droits des \u00e9l\u00e9ments. Les Managers peuvent configurer les param\u00e8tres des groupes et utilisateurs au sein de leur propre groupe. Les Utilisateurs n'ont aucun privil\u00e8ge.";
            a["can edit profile"] = "Peut modifier un profil";
            a["can edit profile hlp"] = "Autorise l'utilisateur \u00e0 modifier les param\u00e8tres \"d'apparence\" et \"de navigation\" , et \u00e0 modifier le mot de passe. Aucun autre param\u00e8tre n'est modifiable par l'utilisateur.";
            a["user profile"] = "Profil Utilisateur";
            a["user profile hlp"] = "Le nom du profil utilisateur. Les noms des profils utilisateurs sont sensibles \u00e0 la casse, sauf pour les profils IBM i.";
            a["password hlp"] = "D\u00e9finir/r\u00e9initialiser le mot de passe. Les mots de passe sont sensibles \u00e0 la casse.";
            a["conf password"] = "Confirmer le Mot de passe";
            a["conf password hlp"] = "Quand le Mot de passe est d\u00e9fini/r\u00e9initialis\u00e9, ce champ doit correspondre au nouveau Mot de passe. Les mots de passe sont sensibles \u00e0 la casse.";
            a["browser title"] = "Titre du Navigateur";
            a["browser title hlp"] = "D\u00e9finit le texte affich\u00e9 dans la barre de titre du navigateur.";
            a["show banner"] = "Afficher la banni\u00e8re";
            a["show banner hlp"] = "D\u00e9cocher cette option si vous ne souhaitez pas afficher la banni\u00e8re en haut du portail.";
            a["banner height"] = "Hauteur de la banni\u00e8re";
            a["banner height hlp"] = "D\u00e9finit en pixels la hauteur de la banni\u00e8re en haut du portail. Ce param\u00e8tre est ignor\u00e9 si vous avez choisi de ne pas afficher la banni\u00e8re. Plage des valeurs valides : 0 \u00e0 600 pixels.";
            a["banner url"] = "URL de la banni\u00e8re";
            a["banner url hlp"] = "D\u00e9finit l'URL du contenu de la banni\u00e8re. L'URL peut \u00eatre aboslue ou relative.";
            a.theme = "Th\u00e8me";
            a["theme hlp"] = 'D\u00e9finit le Th\u00e8me par d\u00e9faut. Ce param\u00e8tre peut \u00eatre \u00e9cras\u00e9 individuellement par chaque utilisateur si <strong>"Autoriser l\'utilisateur \u00e0 choisir le th\u00e8me"</strong> est activ\u00e9.';
            a["allow sel theme"] = "Autoriser l'utilisateur \u00e0 choisir le th\u00e8me";
            a["allow sel theme hlp"] = "Si coch\u00e9, les utilisateurs auront la possibilit\u00e9 de choisir le th\u00e8me via un menu d\u00e9roulant dans la barre d'outils.";
            a["show menu search"] = "Afficher la zone de recherche";
            a["show menu search hlp"] = "D\u00e9cocher pour masquer la zone de recherche.";
            a["show fav sys"] = "Afficher les Favoris";
            a["show fav sys hlp"] = "D\u00e9cocher pour masquer les Favoris.";
            a["show fav start"] = "Afficher les Favoris au d\u00e9marrage";
            a["show fav start hlp"] = "Si coch\u00e9, le panneau des Favoris sera affich\u00e9 au d\u00e9marrage. Sinon, le Panneau de navigation sera affich\u00e9 (par d\u00e9faut). Cette option n'est disponible que si le syst\u00e8me de Favoris est actifa \u00e9t\u00e9 activ\u00e9.";
            a["limit num sessn"] = "Limiter le nombre de sessions";
            a["limit num sessn hlp"] = "Nombre maximum de sessions autoris\u00e9 par l'Atrium pour cet utilisateur/groupe. Une valeur de z\u00e9ro correspond \u00e0 un nombre illimit\u00e9 de sessions. La limite est fix\u00e9e par navigateur.";
            a["show hmpg start"] = "Afficher la page d'accueil au d\u00e9marrage";
            a["show hmpg start hlp"] = "Si coch\u00e9, une page d'accueil personnalisable sera affich\u00e9e au d\u00e9marrage.";
            a["home page url"] = "URL de la page d'accueil";
            a["home page url hlp"] = "D\u00e9finit l'URL du contenu de la page d'accueil. L'URL peut \u00eatre aboslue ou relative.";
            a["navi pnl title"] = "Titre du panneau de Navigation";
            a["navi pnl title hlp"] = "D\u00e9finit le texte \u00e0 afficher dans la barre de titre du panneau de Navigation.";
            a["navi pnl width"] = "Largeur initiale du panneau de Navigation";
            a["navi pnl width hlp"] = "D\u00e9finit en pixels la largeur initiale du panneau de Navigation. L'utilisateur peut modifier ou m\u00eame masquer le panneau \u00e0 sa guise. Plage des valeurs valides : 0-2000 pixels.";
            a["navi type"] = "Type de Navigation";
            a["navi type hlp"] = 'Contr\u00f4le le type de menu utilis\u00e9 dans le panneau de Navigation, "ramification" ou "accord\u00e9on". Ce param\u00e8tre ne s\'applique pas aux barres d\'outils.';
            a["single click nav"] = "Navigation en un clic";
            a["single click nav hlp"] = "Si coch\u00e9, les \u00e9l\u00e9ments du menu dans le panneau de Navigation seront ex\u00e9cut\u00e9 sur un simple clic. Sinon, ils ne seront ex\u00e9cut\u00e9s qu'apr\u00e8s un double-clic. Ce param\u00e8tre ne s'applique pas aux barres d'outils.";
            a["current library"] = "Biblioth\u00e8que en cours";
            a["current library hlp"] = "Sp\u00e9cifie la biblioth\u00e8que en cours, *USRPRF or *CRTDFT.";
            a["job descr"] = "Description du job";
            a["job descr hlp"] =
                "Sp\u00e9cifie la description du job afin d'en d\u00e9duire la liste des biblioth\u00e8ques. *USRPRF peut \u00eatre sp\u00e9cifi\u00e9 si les utilisateurs de l'Atrium ont des profils IBM i.";
            a["job descr lib"] = "Biblioth\u00e8que de la description du job";
            a["job descr lib hlp"] = "Sp\u00e9cifie la biblioth\u00e8que pour la description du job. *LIBL ou *CURLIB peuvent \u00eatre sp\u00e9cifi\u00e9es.";
            a["item name"] = "Nom de l'\u00e9l\u00e9ment";
            a["item name hlp"] = "D\u00e9finit le nom d'affichage de l'\u00e9l\u00e9ment de navigation ou de la barre d'outils.";
            a["action type"] = "Type d'action";
            a["action type hlp"] = "D\u00e9finit le type de l'application lanc\u00e9e par cet \u00e9l\u00e9ment.";
            a.url = "URL";
            a["url hlp"] = "D\u00e9finit l'URL de l'application Web. L'URL peut \u00eatre aboslue ou relative. Des param\u00e8tres de requ\u00eate peuvent \u00eatre sp\u00e9cifi\u00e9s dans l'URL.";
            a["genie url"] = "URL Genie";
            a["genie url hlp"] = "D\u00e9finit l'URL utilis\u00e9e pour lancer le Genie. Si non sp\u00e9cifi\u00e9e, l'URL Genie par d\u00e9faut /profoundui/auth/genie sera utilis\u00e9e. Ce champ est utile dans le cas d'une URL Genie personnalis\u00e9e ou lorsque des param\u00e8tres de requ\u00eates sont n\u00e9cessaires. par exemple : /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Ouvrir en tant que";
            a["open as hlp"] = "D\u00e9finit si l'\u00e9l\u00e9ment doit \u00eatre ouvert dans un nouvel onglet du portail ou en tant que nouvelle fen\u00eatre/nouvel onglet du navigateur. L'utilisation d'une fen\u00eatre ou onglet du navigateur d\u00e9pend des r\u00e9glages de celui-ci.";
            a["opens once only"] = "Ex\u00e9cution unique";
            a["opens once only hlp"] = "Par d\u00e9faut, si l'utilisateur ex\u00e9cute l'\u00e9l\u00e9ment alors que celui-ci est d\u00e9j\u00e0 ouvert dans le portail, un nouvel onglet est utilis\u00e9. Il n'y a pas de limite du nombre d'onglets que l'utilisateur est capable d'ouvrir de cette fa\u00e7on. Quand cette option est coch\u00e9e, l'utilisateur ne pourra ouvrir qu'un seul onglet correspondant \u00e0 cet \u00e9l\u00e9ment. Si l'onglet est d\u00e9j\u00e0 ouvert, le fait d'ex\u00e9cuter l'\u00e9l\u00e9ment activera cet onglet. Cette option est ignor\u00e9e si l'\u00e9l\u00e9ment s'ouvre dans une nouvelle fen\u00eatre ou un nouvel onglet du navigateur.";
            a.icon = "Ic\u00f4ne";
            a["icon hlp"] = "Optionnel. D\u00e9finit l'ic\u00f4ne utilis\u00e9e dans le menu de navigation ou la barre d'outils. L'ic\u00f4ne peut \u00eatre au format GIF, JPG ou PNG. Les GIF transparents sont recommand\u00e9s. Le chemin devra \u00eatre sp\u00e9cifi\u00e9 en absolu depuis le r\u00e9pertoire racine d'installation de l'Atrium. Si aucune ic\u00f4ne n'est sp\u00e9cifi\u00e9e, l'Atrium utilisera l'ic\u00f4ne par d\u00e9faut pour les \u00e9l\u00e9ments de navigation. Aucune ic\u00f4ne ne sera affich\u00e9e pour les \u00e9l\u00e9ments de la barre d'outils sauf si sp\u00e9cifi\u00e9e ici.";
            a.parameter = "Param\u00e8tre";
            a["parameter hlp"] = "Optionnel: Sp\u00e9cifie un param\u00e8tre qui sera pass\u00e9 au program Rich Display lors de son ex\u00e9cution.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Dd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = " \u05d6\u05d4 \u05de\u05e1\u05d9\u05d9\u05dd \u05d0\u05ea \u05d4\u05e4\u05e2\u05dc\u05ea \u05d4\u05de\u05d7\u05e9\u05d1 \u05e9\u05dc\u05da.";
            a["no connection message"] = " \u05d0\u05d9\u05df \u05d0\u05e4\u05e9\u05e8\u05d5\u05ea \u05dc\u05d4\u05d2\u05d9\u05e2 \u05dc\u05e9\u05e8\u05ea. \u05d1\u05d3\u05d5\u05e7 \u05d0\u05ea \u05d4\u05d7\u05d9\u05d1\u05d5\u05e8 \u05e9\u05dc\u05da \u05d5\u05e0\u05e1\u05d4 \u05e9\u05d5\u05d1.";
            a["upload file limit"] =
                " \u05de\u05d2\u05d1\u05dc\u05d4 \u05e9\u05dc &1 \u05e7\u05d5\u05d1\u05e5 (\u05d9\u05dd) \u05d7\u05e8\u05d2\u05d5.";
            a["upload size limit"] = ' \u05de\u05d2\u05d1\u05dc\u05d4 \u05e9\u05dc \u05de"\u05d1 &1 \u05dc\u05e7\u05d5\u05d1\u05e5 \u05d7\u05e8\u05d2\u05d5.';
            a["upload no files"] = " \u05dc\u05d0 \u05e0\u05d1\u05d7\u05e8\u05d5 \u05e7\u05d1\u05e6\u05d9\u05dd.";
            a["upload duplicate file"] = " \u05e7\u05d1\u05e6\u05d9\u05dd \u05db\u05e4\u05d5\u05dc\u05d9\u05dd \u05e0\u05d1\u05d7\u05e8\u05d5.";
            a["upload file exists"] =
                " \u05d0\u05d7\u05d3 \u05d0\u05d5 \u05d9\u05d5\u05ea\u05e8 \u05d4\u05e7\u05d1\u05e6\u05d9\u05dd \u05db\u05d1\u05e8 \u05e7\u05d9\u05d9\u05de\u05d9\u05dd \u05d1\u05de\u05e2\u05e8\u05db\u05ea \u05d4\u05e7\u05d1\u05e6\u05d9\u05dd.";
            a["upload prevented"] = " \u05d4\u05de\u05d1\u05e6\u05e2 \u05dc\u05de\u05e0\u05d5\u05e2 \u05e2\u05dc \u05d9\u05d3\u05d9 \u05ea\u05db\u05e0\u05d9\u05ea \u05d4\u05d9\u05e6\u05d9\u05d0\u05d4.";
            a["upload input limit"] = " \u05de\u05d2\u05d1\u05dc\u05ea \u05d2\u05d5\u05d3\u05dc \u05e7\u05dc\u05d8 \u05d4\u05db\u05d5\u05dc\u05dc \u05d7\u05e8\u05d2\u05d5.";
            a["upload no session"] = " \u05d0\u05d9\u05e0\u05d4 \u05de\u05d7\u05d5\u05d1\u05e8 \u05dc\u05d4\u05e4\u05e2\u05dc\u05ea \u05de\u05e1\u05d5\u05e3 \u05d1\u05ea\u05d5\u05e7\u05e3.";
            a["upload timeout"] = " \u05e2\u05e1\u05e7\u05d4 \u05ea\u05dd \u05d4\u05d6\u05de\u05df \u05e9\u05d4\u05d5\u05e7\u05e6\u05d1.";
            a["upload invalid response"] = " \u05ea\u05d2\u05d5\u05d1\u05ea \u05d4\u05e9\u05e8\u05ea \u05d4\u05d9\u05d0 \u05d7\u05e1\u05e8\u05d4 \u05d0\u05d5 \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9\u05ea.";
            a["upload cancelled"] =
                "Upload canceled.";
            a["close browser text"] = " \u05db\u05d3\u05d9 \u05dc\u05d4\u05e9\u05dc\u05d9\u05dd \u05d0\u05ea \u05ea\u05d4\u05dc\u05d9\u05da \u05d4\u05ea\u05e0\u05ea\u05e7\u05d5\u05ea, \u05d1\u05d1\u05e7\u05e9\u05d4 \u05dc\u05e1\u05d2\u05d5\u05e8 \u05d0\u05ea \u05d7\u05dc\u05d5\u05df \u05d4\u05d3\u05e4\u05d3\u05e4\u05df \u05e9\u05dc\u05da.";
            a["session ended text"] = " \u05d4\u05e4\u05e2\u05dc\u05ea \u05d4\u05de\u05e1\u05d5\u05e3 \u05e9\u05dc\u05da \u05d4\u05e1\u05ea\u05d9\u05d9\u05de\u05d4.";
            a["outside ucs2"] =
                " \u05d4\u05ea\u05d5\u05d5\u05d9\u05dd \u05d4\u05df \u05de\u05d7\u05d5\u05e5 \u05dc\u05d8\u05d5\u05d5\u05d7 \u05e9\u05dc UCS-2.";
            a["invalid number"] = " \u05de\u05e1\u05e4\u05e8 &1 \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9 ";
            a["invalid length"] = " \u05d0\u05d5\u05e8\u05da &1 \u05e0\u05ea\u05d5\u05e0\u05d9\u05dd \u05e9\u05d2\u05d5\u05d9 \u05d0\u05d5 \u05e2\u05de\u05d3\u05d4 \u05e2\u05e9\u05e8\u05d5\u05e0\u05d9\u05ea";
            a["invalid decimal"] = " \u05de\u05e7\u05d5\u05de\u05d5\u05ea \u05e2\u05e9\u05e8\u05d5\u05e0\u05d9\u05d9\u05dd \u05e8\u05d1\u05d9\u05dd \u05de\u05d3\u05d9 &1(\u05de\u05e7\u05e1 &2)";
            a["invalid choice"] = ' \u05d0\u05d9\u05e0\u05d5 \u05d7\u05d5\u05e7\u05d9\u05ea. \u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea \u05d7\u05d5\u05e7\u05d9\u05d5\u05ea \u05d4\u05df: "&2" \u05d0\u05d5 "&3" "&1"';
            a["invalid date"] = ' \u05ea\u05d0\u05e8\u05d9\u05da "&1" \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9. \u05e4\u05d5\u05e8\u05de\u05d8 \u05d3\u05d5\u05d2\u05de\u05d4: &2 ';
            a["invalid time"] = " \u05d6\u05de\u05df &1 \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9. \u05e4\u05d5\u05e8\u05de\u05d8 \u05d3\u05d5\u05d2\u05de\u05d4: &2";
            a["invalid time stamp"] = ' \u05d7\u05d5\u05ea\u05de\u05ea \u05d6\u05de\u05df \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9\u05ea. \u05e4\u05d5\u05e8\u05de\u05d8 \u05d3\u05d5\u05d2\u05de\u05d4: &2 "&1"';
            a["invalid percent"] = " \u05e2\u05e9\u05e8\u05d5\u05e0\u05d9 \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9\u05ea &1";
            a["invalid digits"] = " \u05d9\u05d5\u05ea\u05e8 \u05de\u05d3\u05d9 \u05e1\u05e4\u05e8\u05d5\u05ea \u05d1-&1. \u05de\u05e7\u05e1: 2&";
            a["exceeds whole"] = ' \u05e2\u05d5\u05dc\u05d4 \u05e2\u05dc \u05d4\u05de\u05e1\u05e4\u05e8 \u05d4\u05de\u05e8\u05d1\u05d9 \u05e9\u05dc \u05e1\u05e4\u05e8\u05d5\u05ea \u05dc\u05db\u05dc \u05d7\u05dc\u05e7 \u05d4\u05de\u05e1\u05e4\u05e8 "&1" (&2 \u05e1\u05e4\u05e8\u05d5\u05ea)';
            a["exceeds decimal"] = ' \u05e2\u05d5\u05dc\u05d4 \u05e2\u05dc \u05d4\u05de\u05e1\u05e4\u05e8 \u05d4\u05de\u05e8\u05d1\u05d9 \u05e9\u05dc \u05e1\u05e4\u05e8\u05d5\u05ea \u05dc\u05d7\u05dc\u05e7 \u05d4\u05e2\u05e9\u05e8\u05d5\u05e0\u05d9 "&1" (&2 \u05e1\u05e4\u05e8\u05d5\u05ea)';
            a["zip too long"] = " \u05d4\u05de\u05d9\u05e7\u05d5\u05d3 \u05d4\u05d5\u05d0 \u05d0\u05e8\u05d5\u05da \u05de\u05d3\u05d9. \u05de\u05e7\u05e1\u05d9\u05de\u05d5\u05dd: &1 \u05e1\u05e4\u05e8\u05d5\u05ea";
            a["phone too long"] = " \u05de\u05e1\u05e4\u05e8 \u05d8\u05dc\u05e4\u05d5\u05df \u05d0\u05e8\u05d5\u05da \u05de\u05d3\u05d9. \u05de\u05e7\u05e1\u05d9\u05de\u05d5\u05dd: &1 \u05e1\u05e4\u05e8\u05d5\u05ea";
            a["ssno too long"] = " \u05de\u05e1\u05e4\u05e8 \u05d4\u05d1\u05d9\u05d8\u05d5\u05d7 \u05d4\u05dc\u05d0\u05d5\u05de\u05d9 \u05d4\u05d5\u05d0 \u05d0\u05e8\u05d5\u05da \u05de\u05d3\u05d9. \u05de\u05e7\u05e1\u05d9\u05de\u05d5\u05dd: &1 \u05e1\u05e4\u05e8\u05d5\u05ea";
            a["invalid custom val"] = " \u05e4\u05d5\u05e0\u05e7\u05e6\u05d9\u05d4 \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9 \u05d4\u05ea\u05d9\u05e7\u05d5\u05e3 \u05de\u05d5\u05ea\u05d0\u05de\u05ea \u05d0\u05d9\u05e9\u05d9\u05ea";
            a["error custom val"] = " \u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05e4\u05d5\u05e0\u05e7\u05e6\u05d9\u05ea \u05d4\u05ea\u05d9\u05e7\u05d5\u05e3 \u05de\u05d5\u05ea\u05d0\u05de\u05ea \u05d0\u05d9\u05e9\u05d9\u05ea";
            a.ME = " \u05e9\u05d3\u05d4 \u05d4\u05d6\u05e0\u05ea \u05d7\u05d5\u05d1\u05d4. \u05e2\u05dc\u05d9\u05da \u05dc\u05d4\u05d6\u05d9\u05df \u05e0\u05ea\u05d5\u05e0\u05d9\u05dd";
            a.MF = " \u05e9\u05d3\u05d4 \u05de\u05d9\u05dc\u05d5\u05d9 \u05d7\u05d5\u05d1\u05d4. \u05e2\u05dc\u05d9\u05da \u05dc\u05de\u05dc\u05d0 \u05d0\u05ea \u05ea\u05d9\u05d1\u05ea \u05d4\u05e7\u05dc\u05d8 \u05dc\u05d7\u05dc\u05d5\u05d8\u05d9\u05df";
            a.required = " \u05d4\u05e2\u05e8\u05da \u05d0\u05d9\u05e0\u05d5 \u05d9\u05db\u05d5\u05dc \u05dc\u05d4\u05d9\u05d5\u05ea \u05e8\u05d9\u05e7. \u05e9\u05d3\u05d4 \u05d6\u05d4 \u05e0\u05d3\u05e8\u05e9";
            a["file required"] = " \u05e2\u05dc\u05d9\u05da \u05dc\u05d1\u05d7\u05d5\u05e8 \u05e7\u05d5\u05d1\u05e5 \u05d0\u05d7\u05d3 \u05dc\u05e4\u05d7\u05d5\u05ea";
            a["signature overflow"] = " \u05d2\u05d5\u05d3\u05dc \u05e6\u05d9\u05d5\u05e8 \u05d4\u05d7\u05ea\u05d9\u05de\u05d4 \u05d7\u05d5\u05e8\u05d2 \u05de\u05d4\u05e2\u05e8\u05da \u05d4\u05de\u05e8\u05d1\u05d9. \u05d0\u05e0\u05d0 \u05dc\u05e0\u05e7\u05d5\u05ea \u05d0\u05ea \u05de\u05e9\u05d8\u05d7 \u05d4\u05d7\u05ea\u05d9\u05de\u05d4 \u05d5\u05e0\u05e1\u05d4 \u05e9\u05d5\u05d1";
            a.validValues = " \u05e2\u05e8\u05da \u05d4\u05d6\u05e0\u05d4 \u05d0\u05d9\u05e0\u05d5 \u05d7\u05d5\u05e7\u05d9. \u05e2\u05e8\u05db\u05d9\u05dd \u05d7\u05d5\u05e7\u05d9\u05d9\u05dd \u05d4\u05dd";
            a["upload invalid type"] = "\u05d0\u05d7\u05d3 \u05d0\u05d5 \u05d9\u05d5\u05ea\u05e8 \u05de\u05d4\u05e7\u05d1\u05e6\u05d9\u05dd \u05de\u05e1\u05d5\u05d2 \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9";
            a["invalid email"] = '\u05db\u05ea\u05d5\u05d1\u05ea \u05d3\u05d5\u05d0"\u05dc \u05dc\u05d0 \u05d7\u05d5\u05e7\u05d9';
            a["session timed out"] =
                "\u05e1\u05d1\u05d9\u05d1\u05ea \u05d4\u05e2\u05d1\u05d5\u05d3\u05d4 \u05e9\u05dc\u05da \u05e0\u05e1\u05d2\u05e8\u05d4.";
            a["invalid low range"] = "\u05e2\u05e8\u05da \u05d7\u05d9\u05d9\u05d1 \u05dc\u05d4\u05d9\u05d5\u05ea \u05d2\u05d3\u05d5\u05dc \u05d0\u05d5 \u05e9\u05d5\u05d5\u05d4 \u05dc- &1";
            a["invalid high range"] = "\u05e2\u05e8\u05da \u05d7\u05d9\u05d9\u05d1 \u05dc\u05d4\u05d9\u05d5\u05ea \u05e7\u05d8\u05df \u05d0\u05d5 \u05e9\u05d5\u05d5\u05d4 \u05dc- &1";
            a["invalid range"] = "\u05d8\u05d5\u05d5\u05d7 \u05d7\u05d5\u05e7\u05d9 \u05d4\u05d5\u05d0 &1 \u05dc- &2.";
            a["unmonitored exception"] = "\u05d4\u05ea\u05db\u05e0\u05d9\u05ea \u05e0\u05ea\u05e7\u05dc\u05d4 \u05d1\u05d7\u05e8\u05d9\u05d2 \u05d1\u05dc\u05ea\u05d9 \u05de\u05d1\u05d5\u05e7\u05e8. \u05d0\u05e0\u05d0 \u05e6\u05d5\u05e8 \u05e7\u05e9\u05e8 \u05e2\u05dd \u05de\u05e0\u05d4\u05dc \u05d4\u05de\u05e2\u05e8\u05db\u05ea \u05dc\u05e2\u05d6\u05e8\u05d4";
            a["loading x"] = "Loading &1...";
            a["data src not specfd x"] = "Data source not specified for &1...";
            a["name fld not specfd x"] = "Name field not specified for &1...";
            a["val fld not specfd x"] = "Value field not specified for &1...";
            a["failed to load x"] = "Failed to load &1.";
            a["cannot rmv last col"] = "You cannot remove the last column.";
            a["cannot find col"] = "Cannot find the specified columnId.";
            a["subfile deletion"] = "Are you sure you want to delete the subfile?";
            a["downloading x"] = "Downloading &1";
            a["ie9 too low xlsxpics"] = "Images cannot be exported using IE9 or lower.";
            a["keyboard input inhibited"] = "Keyboard entry not allowed in this field.";
            a["num sessions exceeded"] =
                "Number of allowed sessions exceeded.";
            a["unable to load portal"] = "Unable to load portal settings or navigation items.";
            a["unable to load macr act"] = "Unable to load macro actions.";
            a["unable to load macr var"] = "Unable to load macro variables.";
            a["unable to load scrn lst"] = "Unable to load screen list.";
            a["unable to load new sett"] = "Unable to load new settings.";
            a["unable to load x"] = "Unable to load &1.";
            a["unable to add x"] = "Unable to add &1.";
            a["unable to rename x"] = "Unable to rename &1.";
            a["unable to delete x"] =
                "Unable to delete &1.";
            a["unable to update x"] = "Unable to update &1.";
            a["unable to reassn x"] = "Unable to reassign &1.";
            a["unable to reorder items"] = "Unable to reorder items.";
            a["unable to save theme"] = "Unable to save theme setting.";
            a["unable eval script url"] = "Unable to evaluate scripted web app URL.";
            a["close browser text AT"] = "Unsaved changes to the session(s) will be lost.";
            a["close all tabs"] = "Close all tabs?";
            a["close tab"] = "Do you want to close this tab?";
            a["invalid script url"] = "Invalid value for scripted web app URL.";
            a["unrecognized format"] = "Unrecognized format.";
            a["screen already defined"] = 'Screen "&1" is already defined.';
            a["macro already defined"] = 'Macro "&1" is already defined.';
            a["no screen ids"] = "There are no screen identifiers to display";
            a["confirm delete"] = "Confirm Delete";
            a["no actions"] = "There are no actions to display.";
            a["msg action input var"] = 'Enter the value in variable "&1" into the field at row &2 column &3.';
            a["msg action input user"] = "Enter the current user profile into the field at row &1 column &2.";
            a["msg action input js"] = "Enter the result of JavaScript expression <strong>&1</strong> into the field at row &2 column &3.";
            a["msg action input other"] = 'Enter the value "&1" into the field at row &2 column &3.';
            a["msg presskey var"] = 'Press the key defined in variable "&1".';
            a["msg presskey other"] = 'Press the "&1" key.';
            a["msg del scrn from macro"] = "Are you sure you want to delete the selected screen(s) from this macro?<br /> All associated actions will also be deleted.";
            a["choose scrn macro"] = "Choose a screen or macro to work with its properties.";
            a["choose a nav or toolbar"] = "Choose a navigation or toolbar item to work with its properties.";
            a["confirm del sel x"] = "Are you sure you want to delete the selected &1?";
            a["permission settings"] = "permission setting(s)";
            a["adding x"] = "Adding &1...";
            a["deleting x"] = "Deleting &1 ...";
            a["reassigning x"] = "Reassigning &1...";
            a.loading = "\u05d8\u05d5\u05e2\u05df";
            a.saving = "Saving...";
            a["x added"] = "&1 added.";
            a["x deleted"] = "&1 deleted.";
            a["x reassigned"] = "&1 reassigned.";
            a["x updated"] = "&1 updated.";
            a["x saved"] =
                "&1 saved.";
            a["msg del group"] = 'Are you sure you want to delete group "&1"?<br /><br />Deleting groups also deletes any subgroups and any associated users.<br /><br />Are you sure you want to continue?';
            a["conf reassign users 1"] = "Are you sure you want to reassign ";
            a["conf reassign users 2a"] = 'user "&1" ';
            a["conf reassign users 2b"] = "the selected users ";
            a["conf reassign users 3"] = ' to group "&1"?';
            a["conf reassign group"] = 'Are you sure you want to reassign group "&1" to group "&2"?';
            a["conf delete users 1"] =
                "Are you sure you want to delete ";
            a["conf delete users 2a"] = 'user "&1"?';
            a["conf delete users 2b"] = "the selected users?";
            a["no users"] = "There are no users to display.";
            a["cannot delete own grp"] = "You cannot delete your own group.";
            a["cannot delete own usr"] = "You cannot delete your own user profile.";
            a["not auth reassign prf"] = "You are not authorized to reassign your own profile.";
            a["typeselect macro name"] = "Type or select macro name...";
            a["any child items will"] = "Any child items will also be deleted.";
            a["password must be"] = "Passwords must be at least 6 characters.";
            a["type or sel home page"] = "Type or select home page...";
            a["x is already in list"] = '"&1" is already in the list.';
            a["x is not valid libname"] = '"&1" is not a valid library name.';
            a["no libraries in list"] = "No libraries in the list";
            a["add libl entry"] = "Add library list entry";
            a["would you like add ano"] = "Would you like to add another?";
            a["already in suppl grp x"] = 'User is already in supplemental group "&1".';
            break;
        case "runtimeText":
            a["upload select text"] =
                " \u05d1\u05d7\u05e8 \u05e7\u05d1\u05e6\u05d9\u05dd ";
            a["upload clear text"] = " \u05e0\u05e7\u05d4 ";
            a["upload remove text"] = " \u05d4\u05e1\u05e8 ";
            a["upload upload text"] = " \u05d4\u05e2\u05dc\u05d4 ";
            a["upload drophere text"] = "Drop files here";
            a["upload browser unsupported"] = "Drag/drop files requires Internet Explorer 10 or higher, Chrome, or Firefox";
            a["upload finished text"] = "Finished";
            a["excel export text"] = " \u05d9\u05e6\u05d5\u05d0 \u05dc\u05d0\u05e7\u05e1\u05dc ";
            a["export to x"] = "Export to &1";
            a["filter text"] = " \u05de\u05e1\u05e0\u05df ";
            a["find text"] = "Find";
            a["reset data"] = "Reset";
            a["remove filters text"] = " \u05d4\u05e1\u05e8 \u05d0\u05ea \u05db\u05dc \u05d4\u05de\u05e1\u05e0\u05e0\u05d9\u05dd ";
            a["displayed columns"] = "Displayed Columns";
            a["next link text"] = " \u05d4\u05d1\u05d0\u05d4 ";
            a["previous link text"] = " \u05d4\u05e7\u05d5\u05d3\u05dd ";
            a["sort ascending text"] = " \u05de\u05d9\u05d9\u05df \u05dc\u05e4\u05d9 \u05e1\u05d3\u05e8 \u05e2\u05d5\u05dc\u05d4 ";
            a["sort descending text"] =
                " \u05de\u05d9\u05d9\u05df \u05d1\u05e1\u05d3\u05e8 \u05d9\u05d5\u05e8\u05d3 ";
            a["sort..."] = "Sort...";
            a.sort = "Sort";
            a["sort multiple"] = "Sort Multiple Columns";
            a.column = "Column";
            a.direction = "Direction";
            a.order = "Order";
            a.row = " \u05e9\u05d5\u05e8\u05d4 ";
            a.rows = " \u05e9\u05d5\u05e8\u05d5\u05ea ";
            a.page = " \u05e2\u05de\u05d5\u05d3 ";
            a.collapseAll = "\u05dc\u05db\u05d5\u05d5\u05e5 \u05d4\u05db\u05dc";
            a.expandAll = "\u05dc\u05d4\u05e8\u05d7\u05d9\u05d1 \u05d4\u05db\u05dc";
            a.user = "\u05de\u05e9\u05ea\u05de\u05e9";
            a.password = "\u05e1\u05d9\u05e1\u05de\u05d0";
            a["sign on"] = "\u05dc\u05d4\u05d9\u05e8\u05e9\u05dd";
            a.pui = "Profound UI";
            a["pui sign on"] = a.pui + " " + a["sign on"];
            a.pjs = "Profound.js";
            a["pjs sign on"] = a.pjs + " " + a["sign on"];
            a["message id"] = "\u05d6\u05d9\u05d4\u05d5\u05d9 \u05d4\u05d5\u05d3\u05e2\u05d4";
            a["ctlr job"] = "Controller Job";
            a["app job"] = "Application Job";
            a["joblog download"] = "Download Job Logs";
            a["curr user"] = "Current User";
            a["remote ip"] = "Remote IP Address";
            a["remote port"] = "Remote Port";
            a.severity =
                "\u05e8\u05e6\u05d9\u05e0\u05d5\u05ea";
            a.date = "\u05ea\u05d0\u05e8\u05d9\u05da";
            a.time = "\u05d6\u05de\u05df";
            a.program = "\u05ea\u05db\u05e0\u05d9\u05ea";
            a.procedure = "\u05e4\u05e8\u05d5\u05e6\u05d3\u05d5\u05e8\u05d4";
            a.lines = "\u05e9\u05d5\u05e8\u05d4";
            a.message = "\u05d4\u05d5\u05d3\u05e2\u05d4";
            a["new session"] = "\u05de\u05d5\u05e9\u05d1 \u05d7\u05d3\u05e9";
            a.close = "\u05dc\u05e1\u05d2\u05d5\u05e8";
            a["current password"] = "\u05e1\u05d9\u05e1\u05de\u05d0 \u05e0\u05d5\u05db\u05d7\u05d9\u05ea";
            a["new password"] =
                "\u05e1\u05d9\u05e1\u05de\u05d0 \u05d7\u05d3\u05e9\u05d4";
            a["repeat new password"] = "\u05d7\u05d6\u05d5\u05e8 \u05e2\u05dc \u05e1\u05d9\u05e1\u05de\u05d0 \u05d7\u05d3\u05e9\u05d4";
            a.submit = "\u05e9\u05dc\u05d7";
            a.exit = "\u05d9\u05e6\u05d9\u05d0\u05d4";
            a.warning = "\u05d0\u05d6\u05d4\u05e8\u05d4";
            a["change password"] = "\u05e9\u05d9\u05e0\u05d5\u05d9 \u05e1\u05d9\u05e1\u05de\u05d0";
            a.cancel = "\u05dc\u05d1\u05d8\u05dc";
            a["find text"] = "\u05de\u05e6\u05d0";
            a["remove filter"] = "\u05d4\u05e1\u05e8 \u05e1\u05d9\u05e0\u05d5\u05df";
            a.chart = "Chart";
            a.section = "Section";
            a.version = "Version";
            a.fixPack = "Fix Pack";
            a.yes = "Yes";
            a.no = "No";
            a.settings = "Settings";
            a.favorites = "Favorites";
            a["type query press en"] = "Type query, press Enter.";
            a["add to favorites"] = "Add to Favorites";
            a["rmv from favorites"] = "Remove from Favorites";
            a["please wait"] = "Please wait...";
            a["control panel"] = "Control Panel";
            a["my settings"] = "My Settings";
            a["about atrium"] = "About Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion +
                "<br /><br />Copyright &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Warning: This computer program is protected by copyright law<br />and international treaties. Unauthorized reproduction or<br />distribution of this program, or any portion of it, may result in<br />severe civil and criminal penalties, and will be prosecuted to the<br />maximum extent possible under the law.<br /><br />Patented. &nbsp;U.S. Patent No. 8,667,405 B2.";
            a.item = "Item";
            a["open selected item"] =
                "Open Selected Item";
            a.of = "\u05e9\u05c1\u05b6\u05dc";
            a["no results to dsp"] = "No results to display.";
            a["displaying results"] = "Displaying results";
            a["search results"] = "Search Results";
            a["new folder"] = "New Folder";
            a.rename = "Rename";
            a.description = "Description";
            a.ok = "OK";
            a.add = "Add";
            a["add x"] = "Add &1";
            a["delete"] = "Delete";
            a.screen = "Screen";
            a.screens = "Screens";
            a.macro = "Macro";
            a.macros = "Macros";
            a["screen id"] = "Screen Identifier";
            a["screen ids"] = "Screen Identifiers";
            a["field row"] = "Field Row";
            a["field column"] =
                "Field Column";
            a["field value"] = "Field Value";
            a.value = "Value";
            a.action = "Action";
            a.actions = "Actions";
            a["detect once"] = "Detect Once";
            a["delete screen"] = "Delete Screen";
            a["genie macros"] = "Genie Macros";
            a["screen name"] = "Screen name";
            a.identifier = "Identifier";
            a.identifiers = "Identifiers";
            a["macro name"] = "Macro name";
            a["close browser wintab"] = "Close the browser window or tab.";
            a.select = "Select";
            a["write value in field"] = "Write a value into a field";
            a["press a key"] = "Press a key";
            a["a literal value"] = "A literal value";
            a["a variable value"] = "A variable value";
            a["cur user profile"] = "The current user profile";
            a["result js expr"] = "The result of a JavaScript expression";
            a["action data"] = "Action data";
            a["data type"] = "Data type";
            a.users = "Users";
            a["all groups"] = "All Groups";
            a["supplemental groups"] = "Supplemental Groups";
            a["users w primary grp"] = 'Users whose Primary Group is "&1"';
            a["users w suppl grp"] = 'Users with Supplemental Group for "&1"';
            a.group = "Group";
            a.groups = "Groups";
            a.edit = "Edit";
            a["edit x"] = "Edit &1";
            a.manager =
                "Manager";
            a.administrator = "Administrator";
            a["primary group"] = "Primary Group";
            a["delete x"] = "Delete &1";
            a["reassign x"] = "Reassign &1";
            a["navigation item"] = "Navigation Item";
            a["navigation items"] = "Navigation Items";
            a["navigation panel"] = "Navigation Panel";
            a["home pages"] = "Home Pages";
            a["menu group"] = "Menu Group";
            a["menu item"] = "Menu Item";
            a["toolbar items"] = "Toolbar Items";
            a.toolbar = "Toolbar";
            a.button = "Button";
            a["pulldown menu"] = "Pulldown Menu";
            a["pulldown menu item"] = "Pulldown Menu Item";
            a["separator bar"] =
                "Separator Bar";
            a.spacer = "Spacer";
            a["item details"] = "Item Details";
            a["item number"] = "Item number";
            a["item type"] = "Item type";
            a["genie macro"] = "Genie Macro";
            a["rdf application"] = "Rich Display File Application";
            a["web application"] = "Web Application";
            a["pc command"] = "PC Command";
            a["dspf program library"] = "Display file program library";
            a["dspf program"] = "Display file program";
            a["variable name x"] = "Variable name &1";
            a["a tab in the portal"] = "A tab in the portal";
            a["a new browser wind"] = "A new browser window or tab";
            a.update = "Update";
            a.fill = "Fill";
            a.permissions = "Permissions";
            a["user/group name"] = "User/Group Name";
            a["all users groups"] = "All Users and Groups";
            a.type = "Type";
            a.access = "Access";
            a.allow = "Allow";
            a.disallow = "Disallow";
            a.navigation = "Navigation";
            a["add usrgrp perm"] = "Add User/Group Permissions";
            a.membership = "Membership";
            a.none = "None";
            a.remove = "Remove";
            a.appearance = "Appearance";
            a["home page"] = "Home page";
            a.tree = "Tree";
            a.accordion = "Accordion";
            a["min search chars"] = "Minimum search characters";
            a["libl for rdf apps"] =
                "Library List for Rich Display File Applications";
            a["library list"] = "Library list";
            a.library = "Library";
            a["use atrium def libl"] = "Use Atrium default library list";
            a["use jobd libl"] = "Use library list from JOBD";
            a["specify libl"] = "Specify library list";
            a.up = "Up";
            a.down = "Down";
            a["move up"] = "Move Up";
            a["move down"] = "Move Down";
            a["global settings"] = "Global settings";
            a.save = "Save";
            a["add usr to supp grp"] = "Add User to Supplemental Group";
            a["member of"] = "Member of";
            a["member of hlp"] = "The group that this user/group belongs to.";
            a["group name"] = "Group name";
            a["group name hlp"] = "The display name for this group.";
            a["inherit settings"] = "Inherit settings";
            a["inherit settings hlp"] = "When this option is checked, the user/group will inherit settings from its parent. When unchecked, the user/group will have its own settings data.";
            a["user name"] = "User Name";
            a["user name hlp"] = "The display name of this user profile.";
            a["access role"] = "Access Role";
            a["access role hlp"] = "Controls the access role of this user. Administrators can manage all groups and users, and can also control application authorities. Managers can configure user and group settings within their own group. Users have no special privileges.";
            a["can edit profile"] = "Can edit profile";
            a["can edit profile hlp"] = 'Allows the user to edit "appearance" and "navigation" settings, and to change the password. All other settings are never editable by the user.';
            a["user profile"] = "User Profile";
            a["user profile hlp"] = "The user profile name. User profile names are case sensitive, unless IBM i profiles are used.";
            a["password hlp"] = "Sets/resets the password. Passwords are case sensitive.";
            a["conf password"] = "Confirm Password";
            a["conf password hlp"] = "When setting/resetting the password, this field must match exactly to the new password given. Passwords are case sensitive.";
            a["browser title"] = "Browser title";
            a["browser title hlp"] = "Sets the text that will display in the browser's title bar.";
            a["show banner"] = "Show banner";
            a["show banner hlp"] = "Uncheck this option if you do not wish to show the banner at the top of the portal.";
            a["banner height"] = "Banner height";
            a["banner height hlp"] = "Sets the height of the banner at the top of the portal in pixels. This setting is ignored if you have chosen not to show the banner. Valid values are 0-600 pixels.";
            a["banner url"] = "Banner URL";
            a["banner url hlp"] = "Sets the URL where the banner content is located. Can be either an absolute or fully qualified URL.";
            a.theme = "Theme";
            a["theme hlp"] = 'Sets the default theme. This can be overridden by individual users if <strong>"Allow users to select theme"</strong> is enabled.';
            a["allow sel theme"] = "Allow user to select theme";
            a["allow sel theme hlp"] = "If checked, users will have the ability to select their desired theme using a control in the toolbar.";
            a["show menu search"] = "Show menu search";
            a["show menu search hlp"] = "Uncheck to disable the menu search feature.";
            a["show fav sys"] = "Show Favorites system";
            a["show fav sys hlp"] = "Uncheck to disable the Favorites system.";
            a["show fav start"] = "Show Favorites on startup";
            a["show fav start hlp"] = "If checked, the Favorites panel is shown on startup. Otherwise the Navigation panel will be shown (default). This option will only be available if Favorites system is enabled.";
            a["limit num sessn"] = "Limit number of sessions";
            a["limit num sessn hlp"] =
                "Number of Atrium sessions allowed for this user/group. A value of zero allows for unlimited sessions. The limitation is applied per web browser.";
            a["show hmpg start"] = "Show home page on startup";
            a["show hmpg start hlp"] = "If checked, a customizable home page will be launched in the portal on startup.";
            a["home page url"] = "Home page URL";
            a["home page url hlp"] = "Sets the URL where the home page content is located. Can be either an absolute or fully qualified URL.";
            a["navi pnl title"] = "Navigation panel title";
            a["navi pnl title hlp"] = "Sets the text that will display in the navigation panel's title bar.";
            a["navi pnl width"] = "Navigation panel start width";
            a["navi pnl width hlp"] = "Sets the starting width of the navigation panel in pixels. The user can resize or even hide the panel as desired. Valid values are 0-2000 pixels.";
            a["navi type"] = "Navigation type";
            a["navi type hlp"] = 'Controls the type of menu used in the navigation panel, "tree" or "accordion". This setting does not apply to the toolbar.';
            a["single click nav"] =
                "Single click navigation";
            a["single click nav hlp"] = "If checked, menu items in the navigation panel will launch on a single click. Otherwise, they will launch only on double click. This setting does not apply to the toolbar.";
            a["current library"] = "Current library";
            a["current library hlp"] = "Specify the current library, *USRPRF, or *CRTDFT.";
            a["job descr"] = "Job description";
            a["job descr hlp"] = "Specify a job description to set the library list from. *USRPRF can be specified if the Atrium users are IBM i user profiles.";
            a["job descr lib"] = "Job description library";
            a["job descr lib hlp"] = "Specify the library for the job description. *LIBL or *CURLIB can be specified.";
            a["item name"] = "Item name";
            a["item name hlp"] = "Sets the display name of the navigation or toolbar item.";
            a["action type"] = "Action type";
            a["action type hlp"] = "Sets the type of application that this item launches.";
            a.url = "URL";
            a["url hlp"] = "Sets the URL of the Web application. This can be specified either as an absolute path or a fully qualified URL. Query string parameters may be specified on the URL.";
            a["genie url"] = "Genie URL";
            a["genie url hlp"] = "Sets the URL that is used to launch Genie. If not specified, the default Genie URL /profoundui/auth/genie will be used. This field is useful if an alternate Genie URL or query string parameters are required. For example: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Open as";
            a["open as hlp"] = "Sets whether to launch the item as a new tab in the portal, or as a new browser window or tab. Whether the browser uses a new window or tab depends on the user's browser settings.";
            a["opens once only"] = "Opens once only";
            a["opens once only hlp"] = "By default, if the user launches this item when a tab is already open to it in the portal, another tab will be opened to the item. There is no limitation on the number of tabs the user can open in this way. When this open is checked, the user will not be able to open more than one tab to this item. If there is already a tab open for the item when the user selects it, the existing tab will be activated. This option is ignored when opening the item in a new browser window or tab.";
            a.icon = "Icon";
            a["icon hlp"] = "Optional. Sets an icon file to be used for the navigation or toolbar item. The icon file can be in GIF, JPG, or PNG format. Transparent GIFs are recommended. The path should be given as an absolute path from the root of the Atrium installation. If no icon is specified, Atrium will use a default icon for navigation items. No icon will be shown for toolbar items unless specified here.";
            a.parameter = "Parameter";
            a["parameter hlp"] = "Optional: Specifies a parameter that will be passed to your Rich Display program when it is launched.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Ed(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "Questo terminer\u00e0 la sessione.";
            a["no connection message"] = "Impossibile raggiungere il server. Controllare la connessione e riprovare.";
            a["upload file limit"] = "Limite di &1 file superato.";
            a["upload size limit"] = "Limite di &1MB per file superato.";
            a["upload no files"] = "Nessun file selezionato.";
            a["upload duplicate file"] = "Sono stati selezionati file duplicati.";
            a["upload file exists"] = "Uno o pi\u00f9 file sono gi\u00e0 presenti nel file system.";
            a["upload prevented"] = "Operazione impedita da exit program.";
            a["upload input limit"] = "Superato limite della dimensione totale input.";
            a["upload no session"] = "Non collegato ad una sessione valida.";
            a["upload timeout"] = "Scaduto il tempo per la transazione.";
            a["upload invalid response"] = "La risposta del server \u00e8 mancante o non \u00e8 valida.";
            a["upload cancelled"] = "Caricamento cancellato.";
            a["close browser text"] = "Per completare la chiusura della sessione, chiudere la finestra del browser.";
            a["session ended text"] =
                "La sessione si \u00e8 conclusa.";
            a["outside ucs2"] = "Caratteri fuori dall'ambito UCS-2.";
            a["invalid number"] = "&1 non \u00e8 un numero valido.";
            a["invalid length"] = "&1 ha lunghezza dati o posizione decimale errata.";
            a["invalid decimal"] = "&1 ha troppe cifre decimali. (max: &2)";
            a["invalid choice"] = '"&1" non \u00e8 valido. Scelte valide sono: "&2" o "&3".';
            a["invalid date"] = '"&1" non \u00e8 una data valida. Esempio di formato corretto: &2';
            a["invalid time"] = '"&1" non \u00e8 un valore di tempo corretto. Esempio di formato corretto: &2';
            a["invalid time stamp"] = '"&1" non \u00e8 un riferimento di tempo valido.  Esempio di formato corretto: &2';
            a["invalid percent"] = "&1 non \u00e8 un decimale valido.";
            a["invalid digits"] = '"&1" contiene troppe cifre. Max: &2';
            a["exceeds whole"] = '"&1" supera il numero massimo di cifre per la parte intera del numero (&2 digits).';
            a["exceeds decimal"] = '"&1" supera il numero massimo di cifre per la parte decimale (&2 digits).';
            a["zip too long"] = "CAP \u00e8 troppo lungo. (Massimo: &1 cifre)";
            a["phone too long"] =
                "Numero di telefono \u00e8 troppo lungo. (Massimo: &1 cifre)";
            a["ssno too long"] = "Codice fiscale \u00e8 troppo lungo. (Massimo: &1 cifre)";
            a["invalid custom val"] = "Non valida funzione di validazione personalizzata.";
            a["error custom val"] = "Errore nella funzione di convalida personalizzata.";
            a.ME = "Campo con obbligo di riempimento. \u00c8 necessario immettere dati.";
            a.MF = "Campo con obbligo di riempimento. \u00c8 necessario riempire completamente la casella dati.";
            a.required = "Il valore non pu\u00f2 essere vuoto. Questo campo \u00e8 obbligatorio.";
            a["file required"] = "\u00c8 necessario selezionare almeno un file.";
            a["signature overflow"] = "La dimensione del testo firma supera il numero massimo di byte disponibili per memorizzare la firma. Si prega di cancellare la pad per la firma elettronica e provare di nuovo.";
            a.validValues = "Valore inserito non \u00e8 valido. I valori validi sono: ";
            a["upload invalid type"] = "Uno o pi\u00f9 file sono di tipo non valido.";
            a["invalid email"] = "mail non valido.";
            a["session timed out"] = "La tua sessione \u00e9 scaduta.";
            a["invalid low range"] = "Il valore deve essere maggiore o uguale a &1";
            a["invalid high range"] = "Il valore deve essere minore o uguale a &1";
            a["invalid range"] = "Intervallo valido da &1 a &2";
            a["unmonitored exception"] = "Il programma ha raggiunto un'eccezione non gestita. Per assistenza, si prega di contattare l'amministratore di sistema.";
            a["loading x"] = "Caricamento di &1 in corso...";
            a["data src not specfd x"] = "Risorsa non specificata per &1...";
            a["name fld not specfd x"] = "Campo Nome non specificato per &1...";
            a["val fld not specfd x"] = "Campo valore non specificato per &1...";
            a["failed to load x"] = "Caricamento di &1 non riuscito.";
            a["cannot rmv last col"] = "L'ultima colonna non pu\u00f2 essere rimossa.";
            a["cannot find col"] = "Id della colonna non trovato.";
            a["subfile deletion"] = "Sei sicuro di che voler eliminare il subfile?";
            a["downloading x"] = "Download di &1 in corso";
            a["ie9 too low xlsxpics"] = "Le immagini non possono essere esportate con IE9 o versioni precedenti.";
            a["keyboard input inhibited"] = "La voce della tastiera non \u00e8 consentita in questo campo.";
            a["num sessions exceeded"] = "\u00c8 stato superato il numero di sessioni consentite.";
            a["unable to load portal"] = "Impossibile caricare le impostazioni del portale o gli elementi della navigazione.";
            a["unable to load macr act"] = "Impossibile caricare le azioni della macro.";
            a["unable to load macr var"] = "Impossibile caricare le variabili della macro.";
            a["unable to load scrn lst"] = "Impossibile caricare la lista delle schermate.";
            a["unable to load new sett"] = "Impossibile caricare le nuove impostazioni.";
            a["unable to load x"] = "Impossibile caricare &1.";
            a["unable to add x"] = "Impossibile aggiungere &1.";
            a["unable to rename x"] = "Impossibile rinominare &1.";
            a["unable to delete x"] = "Impossibile cancellare &1.";
            a["unable to update x"] = "Impossibile aggiornare &1.";
            a["unable to reassn x"] = "Impossibile riassegnare &1.";
            a["unable to reorder items"] = "Impossibile riordinare gli elementi.";
            a["unable to save theme"] = "Impossibile salvare le impostazioni del tema.";
            a["unable eval script url"] = "Impossibile risolvere l'URL della web app.";
            a["close browser text AT"] = "I cambiamenti non salvati della sessione (o sessioni) andranno persi.";
            a["close all tabs"] = "Chiudere tutte le schede?";
            a["close tab"] = "Chiudere la scheda?";
            a["invalid script url"] = "Valore URL della web app non valido.";
            a["unrecognized format"] = "Formato non riconosciuto.";
            a["screen already defined"] = 'La schermata "&1" \u00e8 gi\u00e0 definita.';
            a["macro already defined"] = 'La macro "&1" \u00e8 gi\u00e0 definita.';
            a["no screen ids"] = "Non ci sono identificatori della schermata da mostrare";
            a["confirm delete"] = "Conferma cancellazione";
            a["no actions"] = "Non ci sono azioni da mostrare.";
            a["msg action input var"] = 'Inserire il valore della variabile "&1" nel campo alla riga &2 e colonna &3.';
            a["msg action input user"] = "Inserire il profilo utente attuale nel campo alla riga &1 e colonna &2.";
            a["msg action input js"] = "Inserire il risultato dell'espressione JavaScript <strong>&1</strong> nel campo alla riga &2 e colonna &3.";
            a["msg action input other"] = 'Inserire il valore "&1" nel campo alla riga &2 e colonna &3.';
            a["msg presskey var"] = 'Premere il tasto definito nella variabile "&1".';
            a["msg presskey other"] = 'Premere il tasto "&1".';
            a["msg del scrn from macro"] = "Sei sicuro di voler eliminare le schermate selezionate da questa macro?<br /> Anche tutte le azioni associate saranno eliminate.";
            a["choose scrn macro"] = "Seleziona una schermata o una macro per lavorare con le sue propriet\u00e0.";
            a["choose a nav or toolbar"] = "Seleziona un elemento di navigazione o della barra degli strumenti per lavorare con le sue propriet\u00e0.";
            a["confirm del sel x"] = "Sei sicuro di voler cancellare &1?";
            a["permission settings"] = "l'Impostazione/le Impostazioni di Autorizzazione";
            a["adding x"] = "Aggiunta di &1 in corso...";
            a["deleting x"] = "Eliminazione di &1 in corso...";
            a["reassigning x"] = "Riassegnamento di &1 in corso...";
            a.loading = "Caricamento in corso...";
            a.saving = "Salvataggio in corso...";
            a["x added"] = "&1 aggiunto.";
            a["x deleted"] = "&1 eliminato.";
            a["x reassigned"] = "&1 riassegnato.";
            a["x updated"] = "&1 aggiornato.";
            a["x saved"] = "&1 salvato.";
            a["msg del group"] = 'Sei sicuro di voler eliminare il gruppo "&1"?<br /><br />Cancellando un gruppo verranno eliminati anche tutti i suoi sottogruppi e gli utenti associati.<br /><br />Sei sicuro di voler continuare?';
            a["conf reassign users 1"] = "Sei sicuro di voler riassegnare ";
            a["conf reassign users 2a"] = 'l\'utente "&1" ';
            a["conf reassign users 2b"] = "gli utenti selezionati ";
            a["conf reassign users 3"] = ' al gruppo "&1"?';
            a["conf reassign group"] = 'Sei sicuro di voler riassegnare il gruppo "&1" al grupo "&2"?';
            a["conf delete users 1"] = "Sei sicuro di voler eliminare ";
            a["conf delete users 2a"] = 'l\'utente "&1"?';
            a["conf delete users 2b"] = "gli utenti selezionati?";
            a["no users"] = "Non ci sono utenti da mostrare.";
            a["cannot delete own grp"] = "Non puoi cancellare il tuo gruppo.";
            a["cannot delete own usr"] = "Non puoi cancellare il tuo profilo utente.";
            a["not auth reassign prf"] = "Non sei autorizzato a riassegnare il tuo profilo.";
            a["typeselect macro name"] = "Digita o seleziona il nome della macro...";
            a["any child items will"] =
                "Anche eventuali elementi figli verranno eliminati.";
            a["password must be"] = "La passwords deve essere lunga almeno 6 caratteri.";
            a["type or sel home page"] = "Digita o seleziona home page...";
            a["x is already in list"] = '"&1" \u00e8 gi\u00e0 nella lista.';
            a["x is not valid libname"] = '"&1" non \u00e8 un nome libreria valido.';
            a["no libraries in list"] = "Nella lista non \u00e8 presente nessuna libreria";
            a["add libl entry"] = "Aggiungi voce alla lista librerie";
            a["would you like add ano"] = "Vuoi aggiungerne un'altra?";
            a["already in suppl grp x"] = 'L\'utente \u00e8 gi\u00e0 nel gruppo supplementare "&1".';
            break;
        case "runtimeText":
            a["upload select text"] = "Seleziona File";
            a["upload clear text"] = "Cancella";
            a["upload remove text"] = "Rimuovi";
            a["upload upload text"] = "Carica";
            a["upload drophere text"] = "Rilascia qui i file";
            a["upload browser unsupported"] = "La funzione drag&drop richiede Internet Explorer 10 o pi\u00f9 recente, Chrome, o Firefox";
            a["upload finished text"] = "Upload completato";
            a["excel export text"] = "Esporta in Excel";
            a["export to x"] = "Esporta in &1";
            a["filter text"] = "Filtra";
            a["find text"] = "Cerca";
            a["reset data"] = "Ripristina i dati";
            a["remove filters text"] = "Rimuovi tutti i filtri";
            a["displayed columns"] = "Colonne Visualizzate";
            a["next link text"] = "Successivo";
            a["previous link text"] = "Precedente";
            a["sort ascending text"] = "Ordinare in Senso Ascendente";
            a["sort descending text"] = "Ordinare in Senso Discendente";
            a["sort..."] = "Ordina...";
            a.sort = "Ordina";
            a["sort multiple"] = "Ordina Colonne Multiple";
            a.column = "Colonna";
            a.direction = "Direzione";
            a.order = "Priorit\u00e0";
            a.row = "riga";
            a.rows = "righe";
            a.page = "Pagina";
            a.collapseAll = "Comprimi tutto";
            a.expandAll = "Espandi tutto";
            a.user = "Utente";
            a.password = "Password";
            a["sign on"] = "Accesso";
            a.pui = "Profound UI";
            a["pui sign on"] = a["sign on"] + " " + a.pui;
            a.pjs = "Profound.js";
            a["pjs sign on"] = a["sign on"] + " " + a.pjs;
            a["message id"] = "Id Messaggio";
            a["ctlr job"] = "Job di controllo";
            a["app job"] = "Application job";
            a["joblog download"] = "Scarica job log";
            a["curr user"] = "Utente corrente";
            a["remote ip"] =
                "Indirizzo IP remoto";
            a["remote port"] = "Porta remota";
            a.severity = "Gravit\u00e0";
            a.date = "Data";
            a.time = "Ora";
            a.program = "Programma";
            a.procedure = "Procedura";
            a.lines = "Linea(e)";
            a.message = "Messaggio";
            a["new session"] = "Nuova Sessione";
            a.close = "Chiudi";
            a["current password"] = "Password Attuale";
            a["new password"] = "Nuova Password";
            a["repeat new password"] = "Ripeti Nuova Password";
            a.submit = "Invia";
            a.exit = "Esci";
            a.warning = "Attenzione";
            a["change password"] = "Cambia Password";
            a.cancel = "Cancella";
            a["find text"] = "Trovare";
            a["remove filter"] = "Rimuovi Filtro";
            a.chart = "Grafico";
            a.section = "Sezione";
            a.version = "Versione";
            a.fixPack = "Fix Pack";
            a.yes = "S\u00ec";
            a.no = "No";
            a.settings = "Impostazioni";
            a.favorites = "Preferiti";
            a["type query press en"] = "Digita la query, premi Invio.";
            a["add to favorites"] = "Aggiungi ai Preferiti";
            a["rmv from favorites"] = "Rimuovi dai Preferiti";
            a["please wait"] = "Attendere...";
            a["control panel"] = "Pannello di controllo";
            a["my settings"] = "Le mie impostazioni";
            a["about atrium"] = "Informazioni su Atrium";
            a["about atrium msg"] =
                a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Attenzione: questo programma \u00e8 protetto dalla legge sul copyright<br />e nda trattati internazionali. La riproduzione o distribuzione non<br />autorizzata di questo programma, o parte di esso, pu\u00f2 comportare<br />gravi sanzioni civili e penali e sar\u00e0 perseguita nella misura massima<br />consentita dalla legge.<br /><br />Brevettato. &nbsp; Brevetto U.S. No. 8,667,405 B2.";
            a.item = "l'Elemento";
            a["open selected item"] = "Apri l'elemento selezionato";
            a.of = "di";
            a["no results to dsp"] = "Nessun risultato da mostrare.";
            a["displaying results"] = "Risultati";
            a["search results"] = "Risultati della ricerca";
            a["new folder"] = "Nuova cartella";
            a.rename = "Rinomina";
            a.description = "Descrizione";
            a.ok = "OK";
            a.add = "Aggiungi";
            a["add x"] = "Aggiungi &1";
            a["delete"] = "Elimina";
            a.screen = "la Schermata";
            a.screens = "le Schermate";
            a.macro = "la Macro";
            a.macros = "le Macro";
            a["screen id"] = "l'Identificatore della schermata";
            a["screen ids"] = "gli Identificatori della schermata";
            a["field row"] = "Riga del campo";
            a["field column"] = "Colonna del campo";
            a["field value"] = "Valore del campo";
            a.value = "Valore";
            a.action = "Action";
            a.actions = "Action";
            a["detect once"] = "Individua una sola volta";
            a["delete screen"] = "Elimina schermata";
            a["genie macros"] = "Macro di Genie";
            a["screen name"] = "Nome della schermata";
            a.identifier = "l'Identificatore";
            a.identifiers = "gli Identificatori";
            a["macro name"] = "Nome della macro";
            a["close browser wintab"] = "Chiudi la finestra o la scheda del browser.";
            a.select = "Seleziona";
            a["write value in field"] = "Scrivi un valore in un campo";
            a["press a key"] = "Premi un tasto";
            a["a literal value"] = "Un valore letterale";
            a["a variable value"] = "Il valore di una variabile";
            a["cur user profile"] = "Il profilo utente attuale";
            a["result js expr"] = "Il risultato dell'espressione JavaScript";
            a["action data"] = "Action data";
            a["data type"] = "Tipo di dato";
            a.users = "Utenti";
            a["all groups"] = "Tutti i gruppi";
            a["supplemental groups"] = "Gruppi supplementari";
            a["users w primary grp"] =
                'Utenti il cui gruppo primario \u00e8 "&1"';
            a["users w suppl grp"] = 'Utenti con gruppo supplementare "&1"';
            a.group = "Gruppo";
            a.groups = "Gruppi";
            a.edit = "Modifica";
            a["edit x"] = "Modifica &1";
            a.manager = "Manager";
            a.administrator = "Amministratore";
            a["primary group"] = "Gruppo primario";
            a["delete x"] = "Elimina &1";
            a["reassign x"] = "Riassegna &1";
            a["navigation item"] = "Elemento di Navigazione";
            a["navigation items"] = "Elementi di Navigazione";
            a["navigation panel"] = "Pannello di Navigazione";
            a["home pages"] = "Home Page";
            a["menu group"] = "Gruppo del menu";
            a["menu item"] = "Elemento del menu";
            a["toolbar items"] = "Elementi della barra degli strumenti";
            a.toolbar = "Barra degli strumenti";
            a.button = "Bottone";
            a["pulldown menu"] = "Menu a tendina";
            a["pulldown menu item"] = "Elemento del menu a tendina";
            a["separator bar"] = "Barra di separazione";
            a.spacer = "Spaziatore";
            a["item details"] = "Dettagli dell'elemento";
            a["item number"] = "Numero dell'elemento";
            a["item type"] = "Tipo dell'elemento";
            a["genie macro"] = "Macro di Genie";
            a["rdf application"] =
                "Rich Display File Application";
            a["web application"] = "Web Application";
            a["pc command"] = "PC Command";
            a["dspf program library"] = "Libreria del programma del display file";
            a["dspf program"] = "Programma del display file";
            a["variable name x"] = "Nome della variabile &1";
            a["a tab in the portal"] = "Una scheda nel portale";
            a["a new browser wind"] = "Una nuova finestra o scheda nel browser";
            a.update = "Aggiorna";
            a.fill = "Riempi";
            a.permissions = "Permessi";
            a["user/group name"] = "Nome Utente/Gruppo";
            a["all users groups"] =
                "Tutti gli utenti e i gruppi";
            a.type = "Tipo";
            a.access = "Accesso";
            a.allow = "Permetti";
            a.disallow = "Non permettere";
            a.navigation = "Navigazione";
            a["add usrgrp perm"] = "Aggiungi permessi a utente/gruppo";
            a.membership = "di appartenenza";
            a.none = "Nessuno";
            a.remove = "Rimuovi";
            a.appearance = "Aspetto";
            a["home page"] = "Home page";
            a.tree = "Albero";
            a.accordion = "Accordion";
            a["min search chars"] = "Numero minimo di caratteri per la ricerca";
            a["libl for rdf apps"] = "Lista librerie per le applicazioni Rich Display File";
            a["library list"] =
                "Lista librerie";
            a.library = "Libreria";
            a["use atrium def libl"] = "Usa la lista librerie predefinita di Atrium";
            a["use jobd libl"] = "Usa la lista librerie dal JOBD";
            a["specify libl"] = "Specifica lista librerie";
            a.up = "Su";
            a.down = "Gi\u00f9";
            a["move up"] = "Muovi su";
            a["move down"] = "Muovi gi\u00f9";
            a["global settings"] = "Impostazioni globali";
            a.save = "Salva";
            a["add usr to supp grp"] = "Aggiungi utente al gruppo supplementale";
            a["member of"] = "Membro di";
            a["member of hlp"] = "Il gruppo a cui questo utente/gruppo appartiene.";
            a["group name"] = "Nome del gruppo";
            a["group name hlp"] = "Il nome visualizzato per questo gruppo.";
            a["inherit settings"] = "Eredita impostazioni";
            a["inherit settings hlp"] = "Quando questa opzione \u00e8 selezionata, l'utente o il gruppo erediteranno le impostazioni dal gruppo genitore. Quando non \u00e8 selezionata, l'utente o il gruppo avranno le proprie impostazioni.";
            a["user name"] = "Nome utente";
            a["user name hlp"] = "Il nome visualizzato per questo profilo utente.";
            a["access role"] = "Ruolo";
            a["access role hlp"] =
                "Controlla il ruolo di quest'utente. Gli amministratori possono gestire tutti gli utenti e i gruppi, e possono anche controllare le autorizzazioni delle applicazioni. I manager possono configurare le impostazioni di utenti e gruppi all'interno del loro gruppo. Gli utenti non hanno privilegi speciali.";
            a["can edit profile"] = "Pu\u00f2 modificare il profilo";
            a["can edit profile hlp"] = 'Permette all\'utente di modificare le impostazioni di "Aspetto" and "Navigazione", e di cambiare la password. Tutte le altre impostazioni non sono mai modificabili dall\'utente.';
            a["user profile"] = "Profilo utente";
            a["user profile hlp"] = "Il nome del profilo utente. I nomi dei profili utente fanno distinzione fra maiuscole e minuscole, a meno che non vengano usati i profili IBM i.";
            a["password hlp"] = "Imposta/reimposta la password. Le passwords fanno distinzione fra maiuscole e minuscole.";
            a["conf password"] = "Conferma la password";
            a["conf password hlp"] = "Quando si remposta la password, questo campo deve esattamente combaciare esattamente con la nuova password. Le passwords fanno distinzione fra maiuscole e minuscole.";
            a["browser title"] = "Titolo del browser";
            a["browser title hlp"] = "Imposta il testo che comparir\u00e0 nella barra del titolo del browser.";
            a["show banner"] = "Mostra banner";
            a["show banner hlp"] = "Deseleziona questa opzione se non vuoi mostrare il banner in cima al portale.";
            a["banner height"] = "Altezza del banner";
            a["banner height hlp"] = "Imposta l'altezza in pixel del banner in cima al portale. Questa impostazione sar\u00e0 ignorata se si \u00e8 scelto di non mostrare il banner. I valori accettati sono da 0 a 600 pixel.";
            a["banner url"] = "URL del banner";
            a["banner url hlp"] = "Imposta l'URL dove si trova contenuto del banner. Pu\u00f2 essere un URL assoluto o completo.";
            a.theme = "Tema";
            a["theme hlp"] = 'Imposta il tema predefinito. Questa impostazione pu\u00f2 essere sovrascritta dagli utenti se <strong>"Permetti all\'utente di scegliere il tema"</strong> \u00e8 selezionato.';
            a["allow sel theme"] = "Permetti all'utente di scegliere il tema";
            a["allow sel theme hlp"] = "Se \u00e8 selezionato, gli utenti avranno la possibilit\u00e0 di impostare il tema attraverso un comando nella barra degli strumenti.";
            a["show menu search"] = "Mostra ricerca del menu";
            a["show menu search hlp"] = "Deseleziona per disabilitare la funzione di ricerca nel menu.";
            a["show fav sys"] = "Mostra il sistema dei preferiti";
            a["show fav sys hlp"] = "Deseleziona per disattivare il sistema dei preferiti.";
            a["show fav start"] = "Mostra preferiti all'apertura del portale";
            a["show fav start hlp"] = "Se selezionato, il pannello dei preferiti viene mostrato all'apertura del portale. Altrimenti verr\u00e0 mostrato il pannello di navigazione (predefinito). Quest'opzione sar\u00e0 disponibile solo se il sistema dei Preferiti \u00e8 attivo.";
            a["limit num sessn"] = "Limita il numero delle sessioni";
            a["limit num sessn hlp"] = "Numero di sessioni di Atrium permesse a questo utente/gruppo. Il valore zero permette sessioni infinite. Il limite \u00e8 applicato per browser.";
            a["show hmpg start"] = "Mostra home page all'apertura del portale";
            a["show hmpg start hlp"] = "Se \u00e8 selezionato, all'apertura del portale verr\u00e0 lanciata una home page personalizzabile.";
            a["home page url"] = "URL dell'home page";
            a["home page url hlp"] = "Imposta l'URL dov'\u00e8 situata la home page. Pu\u00f2 essere sia un persorso assoluto che un URL completo.";
            a["navi pnl title"] = "Titolo del pannello di navigazione";
            a["navi pnl title hlp"] = "Imposta il testo che apparir\u00e0 nella barra del titolo del pannello di navigazione.";
            a["navi pnl width"] = "Larghezza iniziale del pannello di navigazione";
            a["navi pnl width hlp"] = "Imposta la larghezza iniziale del pannello di navigazione, in pixel. L'utente pu\u00f2 ridimensionare o nascondere il pannello a piacere. I valori accettati sono da 0 a 2000 pixel.";
            a["navi type"] = "Tipo di navigazione";
            a["navi type hlp"] =
                'Controlla il tipo di menu usato nel pannello di navigazione, "albero" o "accordion". Quest\'impostazione non si applica alla barra degli strumenti.';
            a["single click nav"] = "Navigazione a click singolo";
            a["single click nav hlp"] = "Se selezionato, gli elementi di navigazione verranno lanciati al click singolo, altrimenti verranno lanciati con doppio click. Quest'impostazione non si applica alla barra degli strumenti.";
            a["current library"] = "Libreria attuale";
            a["current library hlp"] = "Specifica la libreria attuale, *USRPRF, o *CRTDFT.";
            a["job descr"] = "Descrizione del lavoro";
            a["job descr hlp"] = "Specifica una descrizione del lavoro da cui impostare la lista di librerie. *USRPRF pu\u00f2 essere usato se gli utenti di Atrium sono profili utente su IBM i.";
            a["job descr lib"] = "Libreria della descrizione del lavoro";
            a["job descr lib hlp"] = "Specifica la libreria della descrizione del lavoro. Possono essere usati *LIBL o *CURLIB.";
            a["item name"] = "Nome dell'elemento";
            a["item name hlp"] = "Imposta il nome mostrato dell'elemento di navigazione o della barra degli strumenti.";
            a["action type"] = "Tipo di azione";
            a["action type hlp"] = "Imposta il tipo di applicazione lanciata da questo elemento.";
            a.url = "URL";
            a["url hlp"] = "Imposta l'URL della Web application. Pu\u00f2 essere specificato sia come percorso assoluto sia come URL completo. I parametri di query possono essere specificati dell'URL.";
            a["genie url"] = "Genie URL";
            a["genie url hlp"] = "Imposta l'URL da usare per lanciare Genie. Se non \u00e8 specificato, verr\u00e0 usato l'ULR predefinito /profoundui/auth/genie. Questo campo \u00e8 utile se sono necessari un URL alternativo o dei parametri di query per Genie. Per esempio: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Apri come";
            a["open as hlp"] = "Sceglie se aprire l'elemento come una nuova scheda nel portale, o come una nuova scheda o finestra del browser. Il fatto che il browser usi una nuova scheda o una nuova finestra dipende dalle impostazioni del browser dell'utente.";
            a["opens once only"] = "Apri una sola volta";
            a["opens once only hlp"] = "Di default, se l'utente lancia un elemento, questo verr\u00e0 aperto in un'altra scheda, anche se c'\u00e8 gi\u00e0 una scheda aperta nel portale per questo stesso elemento. Non c'\u00e8 un limite al numero di schede che l'utente pu\u00f2 aprire per uno stesso elemento. Quando questa opzione \u00e8 selezionata, l'utente potr\u00e0 aprire una sola scheda per questo elemento. Se c'\u00e8 gi\u00e0 una scheda aperta, verr\u00e0 selezionata. Questa opzione verr\u00e0 ignorata quando si apre l'elemento in una nuova finestra o scheda del browser.";
            a.icon = "Icona";
            a["icon hlp"] = "Opzionale. Imposta un file icona da usare per l'elemento della barra degli strumenti. Il file pu\u00f2 essere in formato GIF, JPG, o PNG. Si consiglia di usare GIF trasparenti. Il percorso del file deve essere specificato come percorso assoluto rispetto alla root dell'installazione di Atrium. Se non \u00e8 specificata nessuna icona, Atrium user\u00e0 un'icona predefinita per gli elementi di navigazione, mentre per gli elementi della barra degli strumenti non verr\u00e0 mostrata nessuna icona.";
            a.parameter = "Parametro";
            a["parameter hlp"] = "Opzionale: specifica un parametro che verr\u00e0 inviato al Rich Display program quando viene lanciato.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Fd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7d42\u4e86";
            a["no connection message"] = "\u30b5\u30fc\u30d0\u30fc\u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3002\u63a5\u7d9a\u3092\u78ba\u8a8d\u3057\u3001\u3082\u3046\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002";
            a["upload file limit"] = "&1\u30d5\u30a1\u30a4\u30eb\u306e\u5236\u9650\u3092\u8d85\u3048\u307e\u3057\u305f\u3002";
            a["upload size limit"] = "1\u30d5\u30a1\u30a4\u30eb\u3042\u305f\u308a&1MB\u306e\u5236\u9650\u3092\u8d85\u3048\u307e\u3057\u305f\u3002";
            a["upload no files"] = "\u30d5\u30a1\u30a4\u30eb\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002";
            a["upload duplicate file"] = "\u91cd\u8907\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u9078\u629e\u3055\u308c\u307e\u3057\u305f\u3002";
            a["upload file exists"] = "1\u3064\u4ee5\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u65e2\u306b\u30b7\u30b9\u30c6\u30e0\u4e0a\u306b\u5b58\u5728\u3057\u307e\u3059\u3002";
            a["upload prevented"] = "EXIT\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u308a\u64cd\u4f5c\u304c\u4e2d\u65ad\u3055\u308c\u307e\u3057\u305f\u3002";
            a["upload input limit"] = "\u5408\u8a08\u5165\u529b\u30b5\u30a4\u30ba\u306e\u5236\u9650\u3092\u8d85\u3048\u307e\u3057\u305f\u3002";
            a["upload no session"] = "\u6709\u52b9\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002";
            a["upload timeout"] = "\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002";
            a["upload invalid response"] = "\u30b5\u30fc\u30d0\u30fc\u306e\u5fdc\u7b54\u304c\u7121\u3044\u304b\u3001\u7121\u52b9\u3067\u3059\u3002";
            a["upload cancelled"] = "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304c\u4e2d\u65ad\u3055\u308c\u307e\u3057\u305f\u3002";
            a["close browser text"] = "\u30ed\u30b0\u30aa\u30d5\u30d7\u30ed\u30bb\u30b9\u3092\u5b8c\u4e86\u3059\u308b\u306b\u306f\u3001\u30d6\u30e9\u30a6\u30b6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u3066\u304f\u3060\u3055\u3044\u3002";
            a["session ended text"] = "\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002";
            a["outside ucs2"] = "\u6587\u5b57\u306fUCS-2\u306e\u7bc4\u56f2\u5916\u3067\u3059\u3002";
            a["invalid number"] = "&1\u306f\u6709\u52b9\u306a\u756a\u53f7\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002";
            a["invalid length"] = "&1\u306e\u30c7\u30fc\u30bf\u9577\u307e\u305f\u306f\u5c0f\u6570\u70b9\u4f4d\u7f6e\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002";
            a["invalid decimal"] = "&1\u306f\u5c0f\u6570\u70b9\u4ee5\u4e0b\u6841\u6570\u304c\u591a\u3059\u304e\u307e\u3059\u3002(\u6700\u5927:&2)";
            a["invalid choice"] = '"&1"\u306f\u7121\u52b9\u3067\u3059\u3002\u6709\u52b9\u306a\u9078\u629e\u80a2\u306f"&2"\u304b"&3"\u3067\u3059\u3002';
            a["invalid date"] = '"&1"\u306f\u7121\u52b9\u306a\u65e5\u4ed8\u3067\u3059\u3002\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4f8b : &2';
            a["invalid time"] = '"&1"\u306f\u7121\u52b9\u306a\u6642\u523b\u3067\u3059\u3002\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4f8b : &2';
            a["invalid time stamp"] = '"&1"\u306f\u7121\u52b9\u306a\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3067\u3059\u3002\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4f8b : &2';
            a["invalid percent"] = "&1\u306f\u6709\u52b9\u306a\u5c0f\u6570\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002";
            a["invalid digits"] = '"&1"\u306b\u306f\u6570\u5b57\u304c\u591a\u3059\u304e\u307e\u3059\u3002\u6700\u5927 : &2';
            a["exceeds whole"] = '"&1"\u306f\u6574\u6570\u90e8\u5206\u306e\u6700\u5927\u6841\u6570(&2\u6841)\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\u3002';
            a["exceeds decimal"] = '"&1"\u306f\u5c0f\u6570\u70b9\u90e8\u5206\u306e\u4e0a\u9650(&2\u6841)\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\u3002';
            a["zip too long"] = "\u90f5\u4fbf\u756a\u53f7\u304c\u9577\u3059\u304e\u307e\u3059\u3002(\u6700\u5927:&2\u6841)";
            a["phone too long"] = "\u96fb\u8a71\u756a\u53f7\u304c\u9577\u3059\u304e\u307e\u3059\u3002(\u6700\u5927:&2\u6841)";
            a["ssno too long"] = "\u793e\u4f1a\u4fdd\u969c\u756a\u53f7\u304c\u9577\u3059\u304e\u307e\u3059\u3002(\u6700\u5927:&1\u6841)";
            a["invalid custom val"] = "\u30ab\u30b9\u30bf\u30e0\u691c\u8a3c\u6a5f\u80fd\u304c\u7121\u52b9\u3067\u3059\u3002";
            a["error custom val"] = "\u30ab\u30b9\u30bf\u30e0\u691c\u8a3c\u6a5f\u80fd\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002";
            a.ME = "\u5165\u529b\u5fc5\u9808\u9805\u76ee\u3067\u3059\u3002\u30c7\u30fc\u30bf\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002";
            a.MF = "\u9078\u629e\u5fc5\u9808\u9805\u76ee\u3067\u3059\u3002\u30dc\u30c3\u30af\u30b9\u306b\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002";
            a.required = "\u7a7a\u767d\u3092\u5165\u529b\u3067\u304d\u307e\u305b\u3093\u3002\u5165\u529b\u5fc5\u9808\u9805\u76ee\u3067\u3059\u3002";
            a["file required"] = "\u5c11\u306a\u304f\u3068\u3082\u4e00\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002";
            a["signature overflow"] = "\u7f72\u540d\u306e\u63cf\u753b\u30b5\u30a4\u30ba\u304c\u683c\u7d0d\u3067\u304d\u308b\u30b5\u30a4\u30ba\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\u3002\u7f72\u540d\u6b04\u3092\u30af\u30ea\u30a2\u3057\u3066\u3082\u3046\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002";
            a.validValues = "\u5165\u529b\u3055\u308c\u305f\u5024\u306f\u7121\u52b9\u3067\u3059\u3002\u6709\u52b9\u306a\u5024\u306f\u6b21\u306e\u901a\u308a\u3067\u3059 : ";
            a["upload invalid type"] = "1\u3064\u4ee5\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u7121\u52b9\u306a\u30bf\u30a4\u30d7\u3067\u3059\u3002";
            a["invalid email"] = "\u7121\u52b9\u306a\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002";
            a["session timed out"] = "\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002";
            a["invalid low range"] = "\u5024\u306f&1\u4ee5\u4e0a\u3067\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002";
            a["invalid high range"] = "\u5024\u306f&1\u4ee5\u4e0b\u3067\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002";
            a["invalid range"] = "\u6709\u52b9\u306a\u7bc4\u56f2\u306f&1\u304b\u3089&2\u3067\u3059\u3002";
            a["unmonitored exception"] = "\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u76e3\u8996\u3055\u308c\u3066\u3044\u306a\u3044\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u30b7\u30b9\u30c6\u30e0\u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u304f\u3060\u3055\u3044\u3002";
            a["loading x"] = "Loading &1...";
            a["data src not specfd x"] = "&1\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093...";
            a["name fld not specfd x"] = "&1\u306e\u540d\u524d\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093...";
            a["val fld not specfd x"] = "&1\u306e\u5024\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093...";
            a["failed to load x"] = "&1\u306e\u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002";
            a["cannot rmv last col"] = "\u6700\u5f8c\u306e\u5217\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002";
            a["cannot find col"] = "\u6307\u5b9a\u3055\u308c\u305f\u30ab\u30e9\u30e0ID\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002";
            a["subfile deletion"] = "\u30b5\u30d6\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u304b\uff1f";
            a["downloading x"] = "Downloading &1";
            a["ie9 too low xlsxpics"] = "IE9\u4ee5\u4e0b\u3067\u306f\u753b\u50cf\u3092\u66f8\u304d\u51fa\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002";
            a["keyboard input inhibited"] = "\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u306f\u3067\u304d\u307e\u305b\u3093";
            a["num sessions exceeded"] = "\u8a31\u53ef\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4e0a\u9650\u3092\u8d85\u3048\u307e\u3057\u305f\u3002";
            a["unable to load portal"] = "\u30dd\u30fc\u30bf\u30eb\u8a2d\u5b9a\u3001\u307e\u305f\u306f\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u9805\u76ee\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\u3002";
            a["unable to load macr act"] = "\u30de\u30af\u30ed\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\u3002";
            a["unable to load macr var"] = "\u30de\u30af\u30ed\u5909\u6570\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\u3002";
            a["unable to load scrn lst"] = "\u753b\u9762\u30ea\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\u3002";
            a["unable to load new sett"] = "\u65b0\u3057\u3044\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\u3002";
            a["unable to load x"] =
                "&1\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\u3002";
            a["unable to add x"] = "&1\u3092\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093\u3002";
            a["unable to rename x"] = "&1\u3092\u30ea\u30cd\u30fc\u30e0\u3067\u304d\u307e\u305b\u3093\u3002";
            a["unable to delete x"] = "&1\u3092\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002";
            a["unable to update x"] = "&1\u3092\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3002";
            a["unable to reassn x"] = "&1\u3092\u518d\u5272\u308a\u5f53\u3066\u3067\u304d\u307e\u305b\u3093\u3002";
            a["unable to reorder items"] = "\u30a2\u30a4\u30c6\u30e0\u3092\u4e26\u3073\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002";
            a["unable to save theme"] = "\u30c6\u30fc\u30de\u8a2d\u5b9a\u3092\u4fdd\u5b58\u3067\u304d\u307e\u305b\u3093\u3002";
            a["unable eval script url"] = "\u30b9\u30af\u30ea\u30d7\u30c8\u5316\u3055\u308c\u305fWeb\u30a2\u30d7\u30ea\u306eURL\u3092\u8a55\u4fa1\u3067\u304d\u307e\u305b\u3093\u3002";
            a["close browser text AT"] = "\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u306a\u3044\u5909\u66f4\u306f\u5931\u308f\u308c\u307e\u3059\u3002";
            a["close all tabs"] = "\u5168\u3066\u306e\u30bf\u30d6\u3092\u9589\u3058\u307e\u3059\u304b\uff1f";
            a["close tab"] = "\u3053\u306e\u30bf\u30d6\u3092\u9589\u3058\u307e\u3059\u304b\uff1f";
            a["invalid script url"] = "\u30b9\u30af\u30ea\u30d7\u30c8\u5316\u3055\u308c\u305fWeb\u30a2\u30d7\u30ea\u306eURL\u306e\u5024\u304c\u7121\u52b9\u3067\u3059\u3002";
            a["unrecognized format"] = "\u8a8d\u8b58\u3067\u304d\u306a\u3044\u5f62\u5f0f\u3067\u3059\u3002";
            a["screen already defined"] = '\u753b\u9762 "&1" \u306f\u65e2\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002';
            a["macro already defined"] = '\u30de\u30af\u30ed "&1" \u306f\u65e2\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002';
            a["no screen ids"] = "\u8868\u793a\u3059\u308b\u753b\u9762\u8b58\u5225\u5b50\u306f\u3042\u308a\u307e\u305b\u3093\u3002";
            a["confirm delete"] = "\u524a\u9664\u306e\u78ba\u8a8d";
            a["no actions"] = "\u8868\u793a\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u3042\u308a\u307e\u305b\u3093\u3002";
            a["msg action input var"] = '\u884c&2\u5217&3\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5909\u6570 "&1" \u306e\u5024\u3092\u5165\u529b\u3057\u307e\u3059\u3002';
            a["msg action input user"] = "\u884c&1\u5217&2\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u73fe\u5728\u306e\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u5165\u529b\u3057\u307e\u3059\u3002";
            a["msg action input js"] = "\u884c&2\u5217&3\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306bJavaScript\u5f0f<strong>&1</strong>\u306e\u7d50\u679c\u3092\u5165\u529b\u3057\u307e\u3059\u3002";
            a["msg action input other"] = '\u884c&2\u5217&3\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5024 "&1" \u3092\u5165\u529b\u3057\u307e\u3059\u3002';
            a["msg presskey var"] = '\u5909\u6570 "&1" \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30ad\u30fc\u3092\u62bc\u3057\u307e\u3059\u3002';
            a["msg presskey other"] = '"&1" \u30ad\u30fc\u3092\u62bc\u3057\u307e\u3059\u3002';
            a["msg del scrn from macro"] = "\u3053\u306e\u30de\u30af\u30ed\u304b\u3089\u9078\u629e\u3057\u305f\u753b\u9762\u3092\u524a\u9664\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u304b\uff1f<br /> \u95a2\u9023\u3059\u308b\u5168\u3066\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3082\u524a\u9664\u3055\u308c\u307e\u3059\u3002";
            a["choose scrn macro"] = "\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u64cd\u4f5c\u3059\u308b\u753b\u9762\u307e\u305f\u306f\u30de\u30af\u30ed\u3092\u9078\u629e\u3057\u307e\u3059\u3002";
            a["choose a nav or toolbar"] = "\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u64cd\u4f5c\u3059\u308b\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u307e\u305f\u306f\u30c4\u30fc\u30eb\u30d0\u30fc\u9805\u76ee\u3092\u9078\u629e\u3057\u307e\u3059\u3002";
            a["confirm del sel x"] = "\u9078\u629e\u3057\u305f&1\u3092\u524a\u9664\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u304b\uff1f";
            a["permission settings"] = "\u8a31\u53ef\u8a2d\u5b9a";
            a["adding x"] = "&1\u3092\u8ffd\u52a0\u4e2d...";
            a["deleting x"] = "&1\u3092\u524a\u9664\u4e2d ...";
            a["reassigning x"] = "&1\u3092\u518d\u5272\u308a\u5f53\u3066\u4e2d...";
            a.loading = "\u8aad\u307f\u8fbc\u307f\u4e2d...";
            a.saving = "\u4fdd\u7ba1\u4e2d...";
            a["x added"] = "&1\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002";
            a["x deleted"] = "&1\u3092\u524a\u9664\u3057\u307e\u3057\u305f\u3002";
            a["x reassigned"] = "&1\u3092\u518d\u5272\u308a\u5f53\u3066\u3057\u307e\u3057\u305f\u3002";
            a["x updated"] = "&1\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002";
            a["x saved"] = "&1\u3092\u4fdd\u7ba1\u3057\u307e\u3057\u305f\u3002";
            a["msg del group"] = '\u30b0\u30eb\u30fc\u30d7 "&1"\u3092\u524a\u9664\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u304b\uff1f?<br /><br />\u30b0\u30eb\u30fc\u30d7\u3092\u524a\u9664\u3059\u308b\u3068\u3001\u30b5\u30d6\u30b0\u30eb\u30fc\u30d7\u3084\u95a2\u9023\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u3082\u524a\u9664\u3055\u308c\u307e\u3059\u3002<br /><br />\u7d9a\u884c\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u304b\uff1f';
            a["conf reassign users 1"] = "\u518d\u5272\u308a\u5f53\u3066\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u304b\u3002";
            a["conf reassign users 2a"] = '\u30e6\u30fc\u30b6\u30fc "&1" ';
            a["conf reassign users 2b"] = "\u9078\u629e\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc ";
            a["conf reassign users 3"] = '"&1"\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\uff1f';
            a["conf reassign group"] = '\u30b0\u30eb\u30fc\u30d7"&1"\u3092\u30b0\u30eb\u30fc\u30d7"&2"\u306b\u518d\u5272\u308a\u5f53\u3066\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u304b\uff1f';
            a["conf delete users 1"] = "\u524a\u9664\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u304b\u3002";
            a["conf delete users 2a"] = '\u30e6\u30fc\u30b6\u30fc "&1"\uff1f';
            a["conf delete users 2b"] = "\u9078\u629e\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc\u3067\u3059\u304b\u30fb";
            a["no users"] = "\u8868\u793a\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306f\u3042\u308a\u307e\u305b\u3093\u3002";
            a["cannot delete own grp"] = "\u81ea\u8eab\u306e\u30b0\u30eb\u30fc\u30d7\u3092\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002";
            a["cannot delete own usr"] =
                "\u81ea\u8eab\u306e\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002";
            a["not auth reassign prf"] = "\u81ea\u8eab\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u518d\u5272\u308a\u5f53\u3066\u3059\u308b\u6a29\u9650\u306f\u3042\u308a\u307e\u305b\u3093\u3002";
            a["typeselect macro name"] = "\u30de\u30af\u30ed\u540d\u3092\u5165\u529b\u307e\u305f\u306f\u9078\u629e...";
            a["any child items will"] = "\u5168\u3066\u306e\u5b50\u30a2\u30a4\u30c6\u30e0\u3082\u524a\u9664\u3055\u308c\u307e\u3059\u3002";
            a["password must be"] = "\u30d1\u30b9\u30ef\u30fc\u30c9\u306f6\u6587\u5b57\u4ee5\u4e0a\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002";
            a["type or sel home page"] = "\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3092\u5165\u529b\u307e\u305f\u306f\u9078\u629e...";
            a["x is already in list"] = '"&1" \u306f\u65e2\u306b\u30ea\u30b9\u30c8\u306b\u5b58\u5728\u3057\u307e\u3059\u3002';
            a["x is not valid libname"] = '"&1" \u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u540d\u3068\u3057\u3066\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002';
            a["no libraries in list"] = "\u30ea\u30b9\u30c8\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308a\u307e\u305b\u3093\u3002";
            a["add libl entry"] = "\u30e9\u30a4\u30d6\u30e9\u30ea\u30ea\u30b9\u30c8\u30a8\u30f3\u30c8\u30ea\u30fc\u306b\u8ffd\u52a0";
            a["would you like add ano"] = "\u5225\u306e\u3082\u306e\u3092\u8ffd\u52a0\u3057\u307e\u3059\u304b\uff1f";
            a["already in suppl grp x"] = '\u30e6\u30fc\u30b6\u30fc\u306f\u65e2\u306b\u88dc\u8db3\u30b0\u30eb\u30fc\u30d7 "&1"\u306b\u3042\u308a\u307e\u3059\u3002';
            break;
        case "runtimeText":
            a["upload select text"] = "\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e";
            a["upload clear text"] = "\u30af\u30ea\u30a2";
            a["upload remove text"] = "\u79fb\u52d5";
            a["upload upload text"] = "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9";
            a["upload drophere text"] = "\u3053\u3053\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30ed\u30c3\u30d7";
            a["upload browser unsupported"] = "\u30c9\u30e9\u30c3\u30b0/\u30c9\u30ed\u30c3\u30d7\uff57\u3059\u308b\u306b\u306fInternet Explorer 10\u4ee5\u964d\u3001Chrome\u3001Firefox\u304c\u5fc5\u8981\u3067\u3059\u3002";
            a["upload finished text"] = "\u7d42\u4e86\u3057\u307e\u3057\u305f";
            a["excel export text"] = "Excel\u3078\u30a8\u30af\u30b9\u30dd\u30fc\u30c8";
            a["export to x"] = "&1\u3078\u30a8\u30af\u30b9\u30dd\u30fc\u30c8";
            a["filter text"] = "\u30d5\u30a3\u30eb\u30bf\u30fc";
            a["find text"] = "\u691c\u7d22";
            a["reset data"] = "\u30ea\u30bb\u30c3\u30c8";
            a["remove filters text"] = "\u5168\u3066\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u9664\u53bb";
            a["displayed columns"] = "\u8868\u793a\u5217";
            a["next link text"] = "\u6b21\u3078";
            a["previous link text"] =
                "\u524d\u3078";
            a["sort ascending text"] = "\u6607\u9806\u306b\u4e26\u3073\u66ff\u3048";
            a["sort descending text"] = "\u964d\u9806\u306b\u4e26\u3073\u66ff\u3048";
            a["sort..."] = "Sort...";
            a.sort = "Sort";
            a["sort multiple"] = "Sort Multiple Columns";
            a.column = "Column";
            a.direction = "Direction";
            a.order = "Order";
            a.row = "\u884c";
            a.rows = "\u884c";
            a.page = "\u30da\u30fc\u30b8";
            a.collapseAll = "\u5168\u3066\u3092\u6298\u308a\u305f\u305f\u3080";
            a.expandAll = "\u5168\u3066\u3092\u5c55\u958b\u3059\u308b";
            a.user = "\u30e6\u30fc\u30b6\u30fc";
            a.password = "\u30d1\u30b9\u30ef\u30fc\u30c9";
            a["sign on"] = "\u30b5\u30a4\u30f3\u30aa\u30f3";
            a.pui = "Profound UI";
            a["pui sign on"] = a.pui + " " + a["sign on"];
            a.pjs = "Profound.js";
            a["pjs sign on"] = a.pjs + " " + a["sign on"];
            a["message id"] = "\u30e1\u30c3\u30bb\u30fc\u30b8ID";
            a["ctlr job"] = "\u5236\u5fa1\u30b8\u30e7\u30d6";
            a["app job"] = "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b8\u30e7\u30d6";
            a["joblog download"] = "\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30b8\u30e7\u30d6\u306e\u30ed\u30b0";
            a["curr user"] =
                "\u73fe\u884c\u30e6\u30fc\u30b6\u30fc";
            a["remote ip"] = "\u30ea\u30e2\u30fc\u30c8IP\u30a2\u30c9\u30ec\u30b9";
            a["remote port"] = "\u30ea\u30e2\u30fc\u30c8\u30dd\u30fc\u30c8";
            a.severity = "\u91cd\u5927\u5ea6";
            a.date = "\u65e5\u4ed8";
            a.time = "\u6642\u523b";
            a.program = "\u30d7\u30ed\u30b0\u30e9\u30e0";
            a.procedure = "\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3";
            a.lines = "\u884c";
            a.message = "\u30e1\u30c3\u30bb\u30fc\u30b8";
            a["new session"] = "\u65b0\u898f\u30bb\u30c3\u30b7\u30e7\u30f3";
            a.close = "\u9589\u3058\u308b";
            a["current password"] =
                "\u73fe\u884c\u30d1\u30b9\u30ef\u30fc\u30c9";
            a["new password"] = "\u65b0\u898f\u30d1\u30b9\u30ef\u30fc\u30c9";
            a["repeat new password"] = "\u65b0\u898f\u30d1\u30b9\u30ef\u30fc\u30c9(\u518d\u5165\u529b)";
            a.submit = "\u6295\u5165";
            a.exit = "Exit";
            a.warning = "\u8b66\u544a";
            a["change password"] = "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4";
            a.cancel = "\u53d6\u308a\u6d88\u3057";
            a["find text"] = "\u691c\u7d22";
            a["remove filter"] = "\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u9664\u53bb";
            a.chart = "\u30c1\u30e3\u30fc\u30c8";
            a.section = "\u30bb\u30af\u30b7\u30e7\u30f3";
            a.version = "\u30d0\u30fc\u30b8\u30e7\u30f3";
            a.fixPack = "\u30d5\u30a3\u30c3\u30af\u30b9\u30d1\u30c3\u30af";
            a.yes = "Yes";
            a.no = "No";
            a.settings = "\u8a2d\u5b9a";
            a.favorites = "\u304a\u6c17\u306b\u5165\u308a";
            a["type query press en"] = "\u30af\u30a8\u30ea\u3092\u5165\u529b\u3057Enter\u30ad\u30fc\u3092\u62bc\u3059";
            a["add to favorites"] = "\u304a\u6c17\u306b\u5165\u308a\u306b\u8ffd\u52a0";
            a["rmv from favorites"] = "\u304a\u6c17\u306b\u5165\u308a\u304b\u3089\u9664\u53bb";
            a["please wait"] =
                "\u304a\u5f85\u3061\u304f\u3060\u3055\u3044...";
            a["control panel"] = "\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d1\u30cd\u30eb";
            a["my settings"] = "\u8a2d\u5b9a";
            a["about atrium"] = "Atrium\u306b\u3064\u3044\u3066";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />\u8b66\u544a\uff1a\u3053\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u8457\u4f5c\u6a29\u6cd5\u304a\u3088\u3073\u56fd\u969b\u6761\u7d04\u306b\u3088\u3063\u3066\u4fdd\u8b77\u3055\u308c\u3066\u3044\u307e\u3059\u3002<br />\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u307e\u305f\u306f\u305d\u306e\u4e00\u90e8\u306e\u7121\u65ad\u8ee2\u8f09\u307e\u305f\u306f\u914d\u5e03\u306f\u3001<br />\u91cd\u5927\u306a\u6c11\u4e8b\u5211\u6cd5\u9055\u53cd\u306e\u7f70\u91d1\u3092\u79d1\u3059\u53ef\u80fd\u6027\u304c\u3042\u308a\u3001\u6cd5\u5f8b\u306b\u3088\u308a\u53ef\u80fd\u306a\u9650\u308a\u544a\u767a\u3055\u308c\u307e\u3059\u3002<br /><br />\u7279\u8a31\u53d6\u5f97\u6e08\u307f &nbsp;\u7c73\u56fd\u7279\u8a31\u7b2c8,667,405\u53f7B2";
            a.item = "\u30a2\u30a4\u30c6\u30e0";
            a["open selected item"] = "\u9078\u629e\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u958b\u304f";
            a.of = "of";
            a["no results to dsp"] = "\u8868\u793a\u3059\u308b\u7d50\u679c\u304c\u3042\u308a\u307e\u305b\u3093\u3002";
            a["displaying results"] = "\u7d50\u679c\u306e\u8868\u793a";
            a["search results"] = "\u7d50\u679c\u306e\u691c\u7d22";
            a["new folder"] = "\u65b0\u898f\u30d5\u30a9\u30eb\u30c0";
            a.rename = "\u30ea\u30cd\u30fc\u30e0";
            a.description = "\u8aac\u660e";
            a.ok = "OK";
            a.add = "\u8ffd\u52a0";
            a["add x"] = "&1\u3092\u8ffd\u52a0";
            a["delete"] = "\u524a\u9664";
            a.screen = "\u753b\u9762";
            a.screens = "\u753b\u9762";
            a.macro = "\u30de\u30af\u30ed";
            a.macros = "\u30de\u30af\u30ed";
            a["screen id"] = "\u753b\u9762\u8b58\u5225\u5b50";
            a["screen ids"] = "\u753b\u9762\u8b58\u5225\u5b50";
            a["field row"] = "\u30d5\u30a3\u30fc\u30eb\u30c9\u884c";
            a["field column"] = "\u30d5\u30a3\u30fc\u30eb\u30c9\u5217";
            a["field value"] = "\u30d5\u30a3\u30fc\u30eb\u30c9\u5024";
            a.value = "\u5024";
            a.action = "\u30a2\u30af\u30b7\u30e7\u30f3";
            a.actions =
                "\u30a2\u30af\u30b7\u30e7\u30f3";
            a["detect once"] = "\u4e00\u5ea6\u3060\u3051\u691c\u51fa";
            a["delete screen"] = "\u753b\u9762\u306e\u524a\u9664";
            a["genie macros"] = "Genie \u30de\u30af\u30ed";
            a["screen name"] = "\u753b\u9762\u540d";
            a.identifier = "\u8b58\u5225\u5b50";
            a.identifiers = "\u8b58\u5225\u5b50";
            a["macro name"] = "\u30de\u30af\u30ed\u540d";
            a["close browser wintab"] = "\u30d6\u30e9\u30a6\u30b6\u307e\u305f\u306f\u30bf\u30d6\u3092\u9589\u3058\u307e\u3059\u3002";
            a.select = "\u9078\u629e";
            a["write value in field"] =
                "\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080";
            a["press a key"] = "\u30ad\u30fc\u3092\u62bc\u3059";
            a["a literal value"] = "\u56fa\u5b9a\u5024";
            a["a variable value"] = "\u53ef\u5909\u5024";
            a["cur user profile"] = "\u73fe\u884c\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb";
            a["result js expr"] = "JavaScript\u5f0f\u306e\u7d50\u679c";
            a["action data"] = "\u30a2\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf";
            a["data type"] = "\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7";
            a.users = "\u30e6\u30fc\u30b6\u30fc";
            a["all groups"] = "\u5168\u3066\u306e\u30b0\u30eb\u30fc\u30d7";
            a["supplemental groups"] = "\u88dc\u8db3\u30b0\u30eb\u30fc\u30d7";
            a["users w primary grp"] = '\u30d7\u30e9\u30a4\u30de\u30ea\u30b0\u30eb\u30fc\u30d7\u304c"&1"\u306e\u30e6\u30fc\u30b6\u30fc';
            a["users w suppl grp"] = '\u88dc\u8db3\u30b0\u30eb\u30fc\u30d7"&1"\u3092\u6301\u3064\u30e6\u30fc\u30b6\u30fc';
            a.group = "\u30b0\u30eb\u30fc\u30d7";
            a.groups = "\u30b0\u30eb\u30fc\u30d7";
            a.edit = "\u7de8\u96c6";
            a["edit x"] = "&1\u3092\u7de8\u96c6";
            a.manager = "\u30de\u30cd\u30fc\u30b8\u30e3\u30fc";
            a.administrator = "\u30a2\u30c9\u30df\u30cb\u30b9\u30c8\u30ec\u30fc\u30bf\u30fc";
            a["primary group"] = "\u30d7\u30e9\u30a4\u30de\u30ea\u30b0\u30eb\u30fc\u30d7";
            a["delete x"] = "&1\u3092\u524a\u9664";
            a["reassign x"] = "&1\u3092\u518d\u5272\u308a\u5f53\u3066";
            a["navigation item"] = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30a2\u30a4\u30c6\u30e0";
            a["navigation items"] = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30a2\u30a4\u30c6\u30e0";
            a["navigation panel"] = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30d1\u30cd\u30eb";
            a["home pages"] = "\u30db\u30fc\u30e0\u30da\u30fc\u30b8";
            a["menu group"] = "\u30e1\u30cb\u30e5\u30fc\u30b0\u30eb\u30fc\u30d7";
            a["menu item"] = "\u30e1\u30cb\u30e5\u30fc\u30a2\u30a4\u30c6\u30e0";
            a["toolbar items"] = "\u30c4\u30fc\u30eb\u30d0\u30fc\u30a2\u30a4\u30c6\u30e0";
            a.toolbar = "\u30c4\u30fc\u30eb\u30d0\u30fc";
            a.button = "\u30dc\u30bf\u30f3";
            a["pulldown menu"] = "\u30d7\u30eb\u30c0\u30a6\u30f3\u30e1\u30cb\u30e5\u30fc";
            a["pulldown menu item"] = "\u30d7\u30eb\u30c0\u30a6\u30f3\u30e1\u30cb\u30e5\u30fc\u30a2\u30a4\u30c6\u30e0";
            a["separator bar"] = "\u30bb\u30d1\u30ec\u30fc\u30bf\u30fc\u30d0\u30fc";
            a.spacer = "\u30b9\u30da\u30fc\u30b5\u30fc";
            a["item details"] = "\u30a2\u30a4\u30c6\u30e0\u8a73\u7d30";
            a["item number"] = "\u30a2\u30a4\u30c6\u30e0\u756a\u53f7";
            a["item type"] = "\u30a2\u30a4\u30c6\u30e0\u30bf\u30a4\u30d7";
            a["genie macro"] = "Genie\u30de\u30af\u30ed";
            a["rdf application"] = "\u30ea\u30c3\u30c1\u753b\u9762\u30d5\u30a1\u30a4\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3";
            a["web application"] = "Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3";
            a["pc command"] = "PC\u30b3\u30de\u30f3\u30c9";
            a["dspf program library"] = "\u753b\u9762\u30d5\u30a1\u30a4\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea";
            a["dspf program"] = "\u753b\u9762\u30d5\u30a1\u30a4\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0";
            a["variable name x"] = "\u5909\u6570\u540d &1";
            a["a tab in the portal"] = "\u30dd\u30fc\u30bf\u30eb\u5185\u306e\u30bf\u30d6";
            a["a new browser wind"] = "\u65b0\u898f\u30d6\u30e9\u30a6\u30b6\u30a6\u30a3\u30f3\u30c9\u30a6\u307e\u305f\u306f\u30bf\u30d6";
            a.update = "\u66f4\u65b0";
            a.fill = "\u5857\u308a\u3064\u3076\u3057";
            a.permissions = "\u30a2\u30af\u30bb\u30b9\u8a31\u53ef";
            a["user/group name"] = "\u30e6\u30fc\u30b6\u30fc/\u30b0\u30eb\u30fc\u30d7\u540d";
            a["all users groups"] = "\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u3068\u30b0\u30eb\u30fc\u30d7";
            a.type = "\u30bf\u30a4\u30d7";
            a.access = "\u30a2\u30af\u30bb\u30b9";
            a.allow = "\u8a31\u53ef";
            a.disallow = "\u7981\u6b62";
            a.navigation = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3";
            a["add usrgrp perm"] = "\u30e6\u30fc\u30b6\u30fc/\u30b0\u30eb\u30fc\u30d7\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u8ffd\u52a0";
            a.membership = "\u30e1\u30f3\u30d0\u30fc\u30b7\u30c3\u30d7";
            a.none = "\u7121\u3057";
            a.remove = "\u79fb\u52d5";
            a.appearance = "\u5916\u89b3";
            a["home page"] = "\u30db\u30fc\u30e0\u30da\u30fc\u30b8";
            a.tree = "\u30c4\u30ea\u30fc";
            a.accordion = "\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3";
            a["min search chars"] = "\u6700\u5c0f\u691c\u7d22\u6587\u5b57";
            a["libl for rdf apps"] = "\u30ea\u30c3\u30c1\u753b\u9762\u30d5\u30a1\u30a4\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30ea\u30b9\u30c8";
            a["library list"] = "\u30e9\u30a4\u30d6\u30e9\u30ea\u30ea\u30b9\u30c8";
            a.library = "\u30e9\u30a4\u30d6\u30e9\u30ea";
            a["use atrium def libl"] = "Atrium\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u30ea\u30b9\u30c8\u3092\u4f7f\u7528";
            a["use jobd libl"] = "JOBD\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30ea\u30b9\u30c8\u3092\u4f7f\u7528";
            a["specify libl"] = "\u30e9\u30a4\u30d6\u30e9\u30ea\u30ea\u30b9\u30c8\u3092\u6307\u5b9a";
            a.up = "Up";
            a.down = "Down";
            a["move up"] = "Move Up";
            a["move down"] = "Move Down";
            a["global settings"] = "\u5168\u4f53\u8a2d\u5b9a";
            a.save = "\u4fdd\u7ba1";
            a["add usr to supp grp"] = "\u88dc\u8db3\u30b0\u30eb\u30fc\u30d7\u306b\u30e6\u30fc\u30b6\u30fc\u3092\u8ffd\u52a0";
            a["member of"] = "\u30e1\u30f3\u30d0\u30fc";
            a["member of hlp"] = "\u3053\u306e\u30e6\u30fc\u30b6\u30fc/\u30b0\u30eb\u30fc\u30d7\u304c\u6240\u5c5e\u3059\u308b\u30b0\u30eb\u30fc\u30d7";
            a["group name"] = "\u30b0\u30eb\u30fc\u30d7\u540d";
            a["group name hlp"] = "\u3053\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u8868\u793a\u540d";
            a["inherit settings"] =
                "\u8a2d\u5b9a\u3092\u7d99\u627f\u3059\u308b";
            a["inherit settings hlp"] = "\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092ON\u306b\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc/\u30b0\u30eb\u30fc\u30d7\u306f\u305d\u306e\u89aa\u304b\u3089\u8a2d\u5b9a\u3092\u7d99\u627f\u3057\u307e\u3059\u3002\u3053\u306e\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3092OFF\u306b\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc/\u30b0\u30eb\u30fc\u30d7\u306b\u500b\u5225\u306e\u8a2d\u5b9a\u304c\u3042\u308a\u307e\u3059\u3002";
            a["user name"] = "\u30e6\u30fc\u30b6\u30fc\u540d";
            a["user name hlp"] = "\u3053\u306e\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u8868\u793a\u540d";
            a["access role"] = "\u30a2\u30af\u30bb\u30b9\u30ed\u30fc\u30eb";
            a["access role hlp"] = "\u3053\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30af\u30bb\u30b9\u30ed\u30fc\u30eb\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\u7ba1\u7406\u8005\u306f\u5168\u3066\u306e\u30b0\u30eb\u30fc\u30d7\u3068\u30e6\u30fc\u30b6\u30fc\u3092\u7ba1\u7406\u3067\u304d\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u6a29\u9650\u3082\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306f\u3001\u81ea\u5206\u306e\u30b0\u30eb\u30fc\u30d7\u5185\u3067\u30e6\u30fc\u30b6\u30fc\u3068\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a\u3092\u69cb\u6210\u3067\u304d\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306b\u7279\u5225\u306a\u6a29\u9650\u306f\u3042\u308a\u307e\u305b\u3093\u3002";
            a["can edit profile"] = "\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3067\u304d\u307e\u3059";
            a["can edit profile hlp"] = '\u30e6\u30fc\u30b6\u30fc\u304c "\u5916\u89b3" \u53ca\u3073 "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3"\u8a2d\u5b9a\u3092\u7de8\u96c6\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u4ed6\u306e\u5168\u3066\u306e\u8a2d\u5b9a\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u7de8\u96c6\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002';
            a["user profile"] = "\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb";
            a["user profile hlp"] = "\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u3002\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u306fIBMi\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u4f7f\u7528\u3055\u308c\u306a\u3044\u9650\u308a\u3001\u5927\u6587\u5b57\u5c0f\u6587\u5b57\u304c\u533a\u5225\u3055\u308c\u307e\u3059\u3002";
            a["password hlp"] = "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u30bb\u30c3\u30c8/\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u304c\u533a\u5225\u3055\u308c\u307e\u3059\u3002";
            a["conf password"] = "\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u78ba\u8a8d";
            a["conf password hlp"] = "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u30bb\u30c3\u30c8/\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u5834\u5408\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u6307\u5b9a\u3055\u308c\u305f\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u6b63\u78ba\u306b\u4e00\u81f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u304c\u533a\u5225\u3055\u308c\u307e\u3059\u3002";
            a["browser title"] = "\u30d6\u30e9\u30a6\u30b6\u30bf\u30a4\u30c8\u30eb";
            a["browser title hlp"] = "\u30d6\u30e9\u30a6\u30b6\u306e\u30bf\u30a4\u30c8\u30eb\u30d0\u30fc\u306b\u8868\u793a\u3055\u308c\u308b\u30c6\u30ad\u30b9\u30c8\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002";
            a["show banner"] = "\u30d0\u30ca\u30fc\u3092\u8868\u793a";
            a["show banner hlp"] = "\u30dd\u30fc\u30bf\u30eb\u306e\u4e0a\u90e8\u306b\u30d0\u30ca\u30fc\u3092\u8868\u793a\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u307e\u3059\u3002";
            a["banner height"] = "\u30d0\u30ca\u30fc\u306e\u9ad8\u3055";
            a["banner height hlp"] = "\u30dd\u30fc\u30bf\u30eb\u306e\u4e0a\u90e8\u306b\u3042\u308b\u30d0\u30ca\u30fc\u306e\u9ad8\u3055\u3092\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u3001\u30d0\u30ca\u30fc\u3092\u8868\u793a\u3057\u306a\u3044\u3088\u3046\u306b\u9078\u629e\u3057\u305f\u5834\u5408\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\u6709\u52b9\u306a\u5024\u306f0\u304b\u3089600\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002";
            a["banner url"] = "\u30d0\u30ca\u30fcURL";
            a["banner url hlp"] = "\u30d0\u30ca\u30fc\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u308bURL\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u7d76\u5bfeURL\u3067\u3082\u5b8c\u5168\u4fee\u98fe\u8077URL\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002";
            a.theme = "\u30c6\u30fc\u30de";
            a["theme hlp"] = '\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c6\u30fc\u30de\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002<strong>"\u30e6\u30fc\u30b6\u30fc\u304c\u30c6\u30fc\u30de\u3092\u9078\u629e\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b"</strong>\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u500b\u3005\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u3053\u308c\u3092\u4e0a\u66f8\u304d\u3067\u304d\u307e\u3059\u3002';
            a["allow sel theme"] = "\u30e6\u30fc\u30b6\u30fc\u304c\u30c6\u30fc\u30de\u3092\u9078\u629e\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b";
            a["allow sel theme hlp"] = "ON\u306b\u3059\u308b\u3068\u3001\u30c4\u30fc\u30eb\u30d0\u30fc\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u30c6\u30fc\u30de\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002";
            a["show menu search"] = "\u691c\u7d22\u306e\u8868\u793a";
            a["show menu search hlp"] = "\u30e1\u30cb\u30e5\u30fc\u306e\u691c\u7d22\u6a5f\u80fd\u3092\u7121\u52b9\u306b\u3059\u308b\u5834\u5408\u306f\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u307e\u3059\u3002";
            a["show fav sys"] = "\u304a\u6c17\u306b\u5165\u308a\u30b7\u30b9\u30c6\u30e0\u306e\u8868\u793a";
            a["show fav sys hlp"] = "\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3059\u3068\u304a\u6c17\u306b\u5165\u308a\u30b7\u30b9\u30c6\u30e0\u304c\u7121\u52b9\u306b\u306a\u308a\u307e\u3059\u3002";
            a["show fav start"] = "\u8d77\u52d5\u6642\u306e\u304a\u6c17\u306b\u5165\u308a\u306e\u8868\u793a";
            a["show fav start hlp"] = "ON\u306b\u3059\u308b\u3068\u3001\u8d77\u52d5\u6642\u306b\u304a\u6c17\u306b\u5165\u308a\u30d1\u30cd\u30eb\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u3042\u3001\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30d1\u30cd\u30eb\u304c\u8868\u793a\u3055\u308c\u307e\u3059(\u30c7\u30d5\u30a9\u30eb\u30c8)\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u304a\u6c17\u306b\u5165\u308a\u30b7\u30b9\u30c6\u30e0\u304c\u6709\u52b9\u306a\u5834\u5408\u306b\u306e\u307f\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002";
            a["limit num sessn"] = "\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u5236\u9650";
            a["limit num sessn hlp"] = "\u3053\u306e\u30e6\u30fc\u30b6\u30fc/\u30b0\u30eb\u30fc\u30d7\u306b\u8a31\u53ef\u3055\u308c\u3066\u3044\u308bAtrium\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6570\u30020\u306f\u7121\u5236\u9650\u3092\u8868\u3057\u307e\u3059\u3002Web\u30d6\u30e9\u30a6\u30b6\u6bce\u306b\u5236\u9650\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002";
            a["show hmpg start"] = "\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306e\u8868\u793a";
            a["show hmpg start hlp"] = "ON\u306b\u3059\u308b\u3068\u3001\u8d77\u52d5\u6642\u306b\u30dd\u30fc\u30bf\u30eb\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\u306a\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002";
            a["home page url"] = "\u30db\u30fc\u30e0\u30da\u30fc\u30b8URL";
            a["home page url hlp"] = "\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u308bURL\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u7d76\u5bfeURL\u3067\u3082k\u5b89\u5168\u4fee\u98feURL\u3067\u3082\u304b\u307e\u3044\u307e\u305b\u3093\u3002";
            a["navi pnl title"] = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30d1\u30cd\u30eb\u30bf\u30a4\u30c8\u30eb";
            a["navi pnl title hlp"] = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30d1\u30cd\u30eb\u306e\u30bf\u30a4\u30c8\u30eb\u30d0\u30fc\u306b\u8868\u793a\u3055\u308c\u308b\u30c6\u30ad\u30b9\u30c8\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002";
            a["navi pnl width"] = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30d1\u30cd\u30eb\u306e\u958b\u59cb\u5e45";
            a["navi pnl width hlp"] = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30d1\u30cd\u30eb\u306e\u958b\u59cb\u5e45\u3092\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306f\u30d1\u30cd\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3057\u305f\u308a\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u975e\u8868\u793a\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u6709\u52b9\u306a\u5024\u306f0\uff5e2000\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002";
            a["navi type"] = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30bf\u30a4\u30d7";
            a["navi type hlp"] = '\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30d1\u30cd\u30eb\u3067\u4f7f\u3055\u308c\u308b\u30e1\u30cb\u30e5\u30fc\u306e\u30bf\u30a4\u30d7\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002"\u30c4\u30ea\u30fc"\u307e\u305f\u306f"\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3"\u3067\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u30c4\u30fc\u30eb\u30d0\u30fc\u306b\u306f\u9069\u7528\u3055\u308c\u307e\u305b\u3093\u3002';
            a["single click nav"] =
                "\u30b7\u30f3\u30b0\u30eb\u30af\u30ea\u30c3\u30af\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3";
            a["single click nav hlp"] = "ON\u306b\u3059\u308b\u3068\u3001\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30d1\u30cd\u30eb\u306e\u30e1\u30cb\u30e5\u30fc\u9805\u76ee\u304c\u30ef\u30f3\u30af\u30ea\u30c3\u30af\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u306e\u307f\u8d77\u52d5\u3057\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u30c4\u30fc\u30eb\u30d0\u30fc\u306b\u306f\u9069\u7528\u3055\u308c\u307e\u305b\u3093\u3002";
            a["current library"] = "\u73fe\u884c\u30e9\u30a4\u30d6\u30e9\u30ea";
            a["current library hlp"] = "\u73fe\u884c\u30e9\u30a4\u30d6\u30e9\u30ea\u3092*USRPRF\u3001\u3082\u3057\u304f\u306f*CRTDFT\u306e\u3044\u305a\u308c\u304b\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002";
            a["job descr"] = "\u30b8\u30e7\u30d6\u8a18\u8ff0";
            a["job descr hlp"] = "\u30e9\u30a4\u30d6\u30e9\u30ea\u30ea\u30b9\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u30b8\u30e7\u30d6\u8a18\u8ff0\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002Atrium\u30e6\u30fc\u30b6\u30fc\u304cIBM i\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u3001*USRPRF\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002";
            a["job descr lib"] = "\u30b8\u30e7\u30d6\u8a18\u8ff0\u30e9\u30a4\u30d6\u30e9\u30ea";
            a["job descr lib hlp"] = "\u30b8\u30e7\u30d6\u8a18\u8ff0\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002*LIBL\u307e\u305f\u306f*CURLIB\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002";
            a["item name"] = "\u30a2\u30a4\u30c6\u30e0\u540d";
            a["item name hlp"] = "\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u307e\u305f\u306f\u30c4\u30fc\u30eb\u30d0\u30fc\u9805\u76ee\u306e\u8868\u793a\u540d\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002";
            a["action type"] = "\u30a2\u30af\u30b7\u30e7\u30f3\u30bf\u30a4\u30d7";
            a["action type hlp"] = "\u3053\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u8d77\u52d5\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bf\u30a4\u30d7\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002";
            a.url = "URL";
            a["url hlp"] = "Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306eURL\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u7d76\u5bfe\u30d1\u30b9\u307e\u305f\u306f\u5b8c\u5168\u4fee\u98fe\u30d1\u30b9\u3068\u3057\u3066\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u30af\u30a8\u30ea\u6587\u5b57\u5217\u30d1\u30e9\u30e1\u30fc\u30bf\u306fURL\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002";
            a["genie url"] = "Genie URL";
            a["genie url hlp"] = "Genie\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308bURL\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306eGenie URL /profoundui/auth/genie\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u4ee3\u66ff\u306eGenie URL\u307e\u305f\u306f\u30af\u30a8\u30ea\u6587\u5b57\u5217\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u306f\u4fbf\u5229\u3067\u3059\u3002\u4f8b : /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "\u958b\u304f";
            a["open as hlp"] = "\u30a2\u30a4\u30c6\u30e0\u3092\u30dd\u30fc\u30bf\u30eb\u306e\u65b0\u3057\u3044\u30bf\u30d6\u3068\u3057\u3066\u8d77\u52d5\u3059\u308b\u304b\u3001\u65b0\u3057\u3044\u30d6\u30e9\u30a6\u30b6\u3068\u3057\u3066\u8d77\u52d5\u3059\u308b\u304b\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30d6\u30e9\u30a6\u30b6\u304c\u65b0\u3057\u3044\u30a6\u30a3\u30f3\u30c9\u30a6\u307e\u305f\u306f\u30bf\u30d6\u3092\u4f7f\u7528\u3059\u308b\u304b\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u30d6\u30e9\u30a6\u30b6\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002";
            a["opens once only"] = "1\u56de\u306e\u307f\u958b\u304f";
            a["opens once only hlp"] = "\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30dd\u30fc\u30bf\u30eb\u3067\u3059\u3067\u306b\u30bf\u30d6\u304c\u958b\u3044\u3066\u3044\u308b\u72b6\u614b\u3067\u30e6\u30fc\u30b6\u30fc\u304c\u3053\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u8d77\u52d5\u3059\u308b\u3068\u3001\u30a2\u30a4\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u5225\u306e\u30bf\u30d6\u304c\u958b\u304b\u308c\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u30e6\u30fc\u30b6\u30fc\u304c\u958b\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u30bf\u30d6\u306e\u6570\u306b\u5236\u9650\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u30aa\u30f3\u306b\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u3053\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u8907\u6570\u306e\u30bf\u30d6\u3092\u958b\u304f\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u304c\u9805\u76ee\u3092\u9078\u629e\u3057\u305f\u3068\u304d\u306b\u30a2\u30a4\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30bf\u30d6\u304c\u3042\u308b\u5834\u5408\u3001\u65e2\u5b58\u306e\u30bf\u30d6\u304c\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u65b0\u3057\u3044\u30d6\u30e9\u30a6\u30b6\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u307e\u305f\u306f\u30bf\u30d6\u3067\u30a2\u30a4\u30c6\u30e0\u3092\u958b\u304f\u3068\u304d\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002";
            a.icon = "\u30a2\u30a4\u30b3\u30f3";
            a["icon hlp"] = "\u30aa\u30d7\u30b7\u30e7\u30f3\u3002\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u307e\u305f\u306f\u30c4\u30fc\u30eb\u30d0\u30fc\u9805\u76ee\u306b\u4f7f\u7528\u3059\u308b\u30a2\u30a4\u30b3\u30f3\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30a2\u30a4\u30b3\u30f3\u30d5\u30a1\u30a4\u30eb\u306f GIF\u3001JPG\u3001\u307e\u305f\u306fPNG\u5f62\u5f0f\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u900f\u904eGIF\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\u30d1\u30b9\u306fAtrium\u5c0e\u5165\u306e\u30eb\u30fc\u30c8\u304b\u3089\u7d76\u5bfe\u30d1\u30b9\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30a2\u30a4\u30b3\u30f3\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001Atrium\u306f\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u9805\u76ee\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a2\u30a4\u30b3\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u3053\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u9650\u308a\u3001\u30c4\u30fc\u30eb\u30d0\u30fc\u9805\u76ee\u306e\u30a2\u30a4\u30b3\u30f3\u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002";
            a.parameter = "\u30d1\u30e9\u30e1\u30fc\u30bfr";
            a["parameter hlp"] = "\u30aa\u30d7\u30b7\u30e7\u30f3: \u30ea\u30c3\u30c1\u753b\u9762\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u8d77\u52d5\u3055\u308c\u305f\u3068\u304d\u306b\u30ea\u30c3\u30c1\u753b\u9762\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6e21\u3055\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Gd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "Hiermee wordt uw sessie afgesloten.";
            a["no connection message"] = "Geen contact met de server mogelijk. Controleer de verbinding en probeer opnieuw.";
            a["upload file limit"] = "Limiet van &1 bestand(en) overschreden.";
            a["upload size limit"] = "Limiet van &1MB per bestand overschreden";
            a["upload no files"] = "Geen bestanden geselecteerd.";
            a["upload duplicate file"] = "Identieke bestanden geselecteerd.";
            a["upload file exists"] = "Een of meerdere bestanden staan al in het file systeem.";
            a["upload prevented"] = "Handeling geblokkeerd door het exit programma.";
            a["upload input limit"] = "Limiet van totale input grootte overschreden.";
            a["upload no session"] = "Geen verbinding met een geldige sessie.";
            a["upload timeout"] = "Timeout van de transactie.";
            a["upload invalid response"] = "Geen(geldig) antwoord van de server.";
            a["upload cancelled"] = "Upload geannuleerd.";
            a["close browser text"] = "Sluit het browser scherm om het logoff proces te voltooien.";
            a["session ended text"] = "Sessie is be\u00ebindigd.";
            a["outside ucs2"] = "Tekens niet UCS-2.";
            a["invalid number"] = "&1 is geen geldig nummer.";
            a["invalid length"] = "Lengte of aantal decimalen van &1 is ongeldig.";
            a["invalid decimal"] = "Aantal decimalen van &1 ongeldig. (max: &2)";
            a["invalid choice"] = '"&1" is ongeldig. Geldige keuzes zijn: "&2" of "&3".';
            a["invalid date"] = '"&1" is geen geldige datum. Voorbeeld opmaak: &2';
            a["invalid time"] = '"&1" is geen geldige tijd. Voorbeeld opmaak: &2';
            a["invalid time stamp"] = '"&1" is geen geldige time stamp. Voorbeeld opmaak: &2';
            a["invalid percent"] = "&1 is geen geldige decimaal.";
            a["invalid digits"] = '"&1" heeft teveel cijfers. Max: &2';
            a["exceeds whole"] = '"&1" overschrijd het maximaal aantal cijfers voor het totale veld (&2 cijfers).';
            a["exceeds decimal"] = '"&1" overschrijd het maximaal aantal cijfers voor het decimale deel (&2 cijfers).';
            a["zip too long"] = "Postcode te lang. (Maximum: &1 cijfers)";
            a["phone too long"] = "Telefoonnummer te lang. (Maximum: &1 cijfers)";
            a["ssno too long"] = "Sofinummer te lang. (Maximum: &1 cijfers)";
            a["invalid custom val"] = "Ongeldige maatwerk controle routine.";
            a["error custom val"] = "Fout in maatwerk controle routine.";
            a.ME = "Verplicht veld. Hier iets ingeven.";
            a.MF = "Verplicht opvullen van veld. Alle posities van het veld vullen.";
            a.required = "Blanco is een ongeldige waarde. Dit veld is vereist.";
            a["file required"] = "Selecteer minstens \u00e9\u00e9n bestand.";
            a["signature overflow"] = "De afbeelding van de handtekening overschrijdt het maximale aantal bytes. Verwijder de handtekening en probeer opnieuw.";
            a.validValues = "Ongeldige waarde. Geldige waarden zijn: ";
            a["upload invalid type"] = "E\u00e9n of meerdere bestandstypes zijn ongeldig.";
            a["invalid email"] = "Ongeldig email addres.";
            a["session timed out"] = "Uw sessie is verlopen.";
            a["invalid low range"] = "Waarde moet zijn groter of gelijk aan &1";
            a["invalid high range"] = "Waarde moet zijn kleiner of gelijk aan &1";
            a["invalid range"] = "Waarde moet liggen tussen &1 en &2.";
            a["unmonitored exception"] = "Het programma heeft een fout ontdekt. Voor hulp neem contact op met de systeembeheerder.";
            a["loading x"] = "Laden &1...";
            a["data src not specfd x"] = "Data source niet gespecificeerd voor &1...";
            a["name fld not specfd x"] = "Veldnaam niet gespecificeerd voor &1...";
            a["val fld not specfd x"] = "Waarde voor veld niet gespecificeerd voor &1...";
            a["failed to load x"] = "Laden &1 mislukt.";
            a["cannot rmv last col"] = "U kunt de laatste kolom niet verwijderen.";
            a["cannot find col"] = "Kan de gespecificeerde kolom-id niet vinden.";
            a["subfile deletion"] = "Weet je het zeker dat je de subfile wilt verwijderen?";
            a["downloading x"] = "Downloaden &1.";
            a["ie9 too low xlsxpics"] = "Afbeeldingen kunnen niet worden ge\u00ebxporteerd met IE9 of eerdere versies.";
            a["keyboard input inhibited"] = "Toetsenbord invoer niet toegestaan in dit veld.";
            a["num sessions exceeded"] = "Aantal toegestane sessies is overschreden.";
            a["unable to load portal"] = "Kan de portal instellingen of onderdelen van de navigatie niet laden.";
            a["unable to load macr act"] = "Kan de macro acties niet laden.";
            a["unable to load macr var"] = "Kan de macro variabelen niet laden.";
            a["unable to load scrn lst"] = "Kan de lijst met schermen niet laden.";
            a["unable to load new sett"] = "Kan de nieuwe instellingen niet laden.";
            a["unable to load x"] = "Kan &1 niet laden.";
            a["unable to add x"] = "Kan &1 niet toevoegen. ";
            a["unable to rename x"] = "Kan de naam van &1 niet wijzigen.";
            a["unable to delete x"] = "Kan &1 niet verwijderen.";
            a["unable to update x"] = "Kan &1 niet bijwerken.";
            a["unable to reassn x"] = "Kan &1 niet opnieuw toewijzen.";
            a["unable to reorder items"] = "Kan de volgorde van de items niet wijzigen.";
            a["unable to save theme"] = "Kan de themainstelling niet veiligstellen.";
            a["unable eval script url"] = "Kan het web app URL script niet uitvoeren.";
            a["close browser text AT"] = "Sessie wijzigingen die niet zijn veiliggesteld, zijn verloren.";
            a["close all tabs"] = "Alle tabs sluiten?";
            a["close tab"] = "Wilt u deze tab sluiten?";
            a["invalid script url"] = "Ongeldige waarde voor een web app URL script.";
            a["unrecognized format"] = "Opmaak wordt niet herkend.";
            a["screen already defined"] = 'Scherm "&1" is reeds gedefinieerd.';
            a["macro already defined"] = 'Macro "&1" is reeds gedefinieerd.';
            a["no screen ids"] = "Er zijn geen scherm identifiers om af te beelden";
            a["confirm delete"] = "Bevestig verwijderen";
            a["no actions"] = "Er zijn geen acties om af te beelden.";
            a["msg action input var"] = 'Geef de waarde van variabele "&1" in het veld op regel &2 positie &3.';
            a["msg action input user"] = "Geef het huidige gebruikers profiel in het veld op regel &1 positie &2.";
            a["msg action input js"] = "Geef het resultaat van de JavaScript expression <strong>&1</strong> in het veld op regel &2 positie &3.";
            a["msg action input other"] = 'Geef de waarde "&1" in het veld op regel &2 positie &3.';
            a["msg presskey var"] = 'Druk op de toets die is gedefinieerd in variabele "&1".';
            a["msg presskey other"] = 'Druk op de "&1" toets.';
            a["msg del scrn from macro"] = "Wilt u werkelijk de geselecteerde schermen uit deze macro verwijderen?<br /> Alle gekoppelde acties worden ook verwijderd.";
            a["choose scrn macro"] = "Kies een scherm of macro om daarvan de eigenschappen te bewerken.";
            a["choose a nav or toolbar"] = "Kies een navigatie of toolbar om daarvan de eigenschappen te bewerken.";
            a["confirm del sel x"] = "Weet u het zeker dat u de geselecteerde &1 wilt verwijderen?";
            a["permission settings"] = "instellen machtiging(en)";
            a["adding x"] = "Bezig met toevoegen &1...";
            a["deleting x"] = "Bezig met verwijderen &1 ...";
            a["reassigning x"] = "Opnieuw toewijzen van &1...";
            a.loading = "Bezig met laden...";
            a.saving = "Bezig met veiligstellen...";
            a["x added"] = "&1 toegevoegd.";
            a["x deleted"] = "&1 verwijderd.";
            a["x reassigned"] = "&1 opnieuw toegewezen.";
            a["x updated"] = "&1 bijgewerkt.";
            a["x saved"] = "&1 veiliggesteld.";
            a["msg del group"] = 'Wilt u groep "&1" echt verwijderen?<br /><br />Na het verwijderen van een groep worden ook de subgroepen en bijhorende gebruikers verwijderd.<br /><br />Wilt u verder gaan?';
            a["conf reassign users 1"] = "Wilt u echt opnieuw toewijzen ";
            a["conf reassign users 2a"] = 'gebruiker "&1" ';
            a["conf reassign users 2b"] = "de geselecteerde gebruikers ";
            a["conf reassign users 3"] = ' naar groep "&1"?';
            a["conf reassign group"] = 'Wilt u echt groep "&1" aan groep "&2" toewijzen?';
            a["conf delete users 1"] =
                "Wilt u deze gebruiker(s) echt verwijderen  ";
            a["conf delete users 2a"] = 'gebruiker "&1"?';
            a["conf delete users 2b"] = "de geselecteerde gebruikers?";
            a["no users"] = "Er zijn geen gebruikers.";
            a["cannot delete own grp"] = "U kunt uw eigen groep niet verwijderen.";
            a["cannot delete own usr"] = "U kunt uw eigen profiel niet verwijderen.";
            a["not auth reassign prf"] = "U bent niet bevoegd tot het opnieuw toewijzen van uw eigen profiel.";
            a["typeselect macro name"] = "Type of selecteer een macro naam...";
            a["any child items will"] =
                "De onderliggende items worden ook verwijderd.";
            a["password must be"] = "Wachtwoorden moeten bestaan uit tenminste 6 characters.";
            a["type or sel home page"] = "Type of selecteer een home page...";
            a["x is already in list"] = '"&1" staat al in de lijst.';
            a["x is not valid libname"] = '"&1" is geen geldige bibliotheeknaam.';
            a["no libraries in list"] = "Geen bibliotheken in de lijst";
            a["add libl entry"] = "Voeg een entry toe aan de lijst met bibliotheken";
            a["would you like add ano"] = "Wilt u een nog een toevoegen?";
            a["already in suppl grp x"] = 'Gebruiker is reeds opgenomen in de aanvullende groep "&1".';
            break;
        case "runtimeText":
            a["upload select text"] = "Selecteer bestanden";
            a["upload clear text"] = "Wissen";
            a["upload remove text"] = "Verwijder";
            a["upload upload text"] = "Upload tekst";
            a["upload drophere text"] = "Zet bestanden hier neer";
            a["upload browser unsupported"] = "Drag/drop van bestanden vereist Internet Explorer 10 of recentere versies, Chrome, of Firefox";
            a["upload finished text"] = "Upload gereed";
            a["excel export text"] =
                "Export naar Excel";
            a["export to x"] = "Export naar &1";
            a["filter text"] = "Filter";
            a["find text"] = "Zoek";
            a["reset data"] = "Reset";
            a["remove filters text"] = "Verwijder alle filters";
            a["displayed columns"] = "Getoonde Kolommen";
            a["next link text"] = "Volgende";
            a["previous link text"] = "Vorige";
            a["sort ascending text"] = "Sorteer oplopend";
            a["sort descending text"] = "Sorteer afdalend";
            a["sort..."] = "Sort...";
            a.sort = "Sorteren";
            a["sort multiple"] = "Sorteer Meerdere Kolommen";
            a.column = "Kolom";
            a.direction = "Richting";
            a.order =
                "Volgorde";
            a.row = "rij";
            a.rows = "rijen";
            a.page = "Pagina";
            a.collapseAll = "Inklappen";
            a.expandAll = "Uitklappen";
            a.user = "Gebruiker";
            a.password = "Wachtwoord";
            a["sign on"] = "Aanmelding";
            a.pui = "Profound UI";
            a["pui sign on"] = a["sign on"] + " " + a.pui;
            a.pjs = "Profound.js";
            a["pjs sign on"] = a["sign on"] + " " + a.pjs;
            a["message id"] = "Bericht-Id";
            a["ctlr job"] = "Controle Taak";
            a["app job"] = "Applicatie Taak";
            a["joblog download"] = "Download Taak Logboeken";
            a["curr user"] = "Huidige Gebruiker";
            a["remote ip"] = "IP adres op Afstand";
            a["remote port"] = "Poortnummer op Afstand";
            a.severity = "Ernst";
            a.date = "Datum";
            a.time = "Tijd";
            a.program = "Programma";
            a.procedure = "Procedure";
            a.lines = "Regel(s)";
            a.message = "Boodschap";
            a["new session"] = "Nieuwe Sessie";
            a.close = "Sluiten";
            a["current password"] = "Huidig wachtwoord";
            a["new password"] = "Nieuw wachtwoord";
            a["repeat new password"] = "Herhaal nieuw wachtwoord";
            a.submit = "Aanbieden";
            a.exit = "Einde";
            a.warning = "Waarschuwing";
            a["change password"] = "Wijzig wachtwoord";
            a.cancel = "Afbreken";
            a["find text"] = "Vinden";
            a["remove filter"] = "Verwijderen Filter";
            a.chart = "Grafiek";
            a.section = "Sectie";
            a.version = "Versie";
            a.fixPack = "Fix Pack";
            a.yes = "Ja";
            a.no = "Nee";
            a.settings = "Instellingen";
            a.favorites = "Favorieten";
            a["type query press en"] = "Type vraag, druk op enter.";
            a["add to favorites"] = "Voeg toe aan Favorieten";
            a["rmv from favorites"] = "Verwijder uit Favorieten";
            a["please wait"] = "Wachten aub...";
            a["control panel"] = "Controle Venster";
            a["my settings"] = "Mijn instellingen";
            a["about atrium"] = "Info Atrium";
            a["about atrium msg"] =
                a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Warning: This computer program is protected by copyright law<br />and international treaties. Unauthorized reproduction or<br />distribution of this program, or any portion of it, may result in<br />severe civil and criminal penalties, and will be prosecuted to the<br />maximum extent possible under the law.<br /><br />Patented. &nbsp;U.S. Patent No. 8,667,405 B2.";
            a.item = "Item";
            a["open selected item"] = "Open het geselecteerde item";
            a.of = "van";
            a["no results to dsp"] = "Geen resultaten";
            a["displaying results"] = "Toon resultaat";
            a["search results"] = "Zoek resultaat";
            a["new folder"] = "Nieuwe folder";
            a.rename = "Hernoem";
            a.description = "Omschrijving";
            a.ok = "OK";
            a.add = "Voeg toe";
            a["add x"] = "Voeg &1 toe";
            a["delete"] = "Verwijder";
            a.screen = "Scherm";
            a.screens = "Schermen";
            a.macro = "Macro";
            a.macros = "Macros";
            a["screen id"] = "Scherm identificatie";
            a["screen ids"] = "Scherm identificaties";
            a["field row"] = "Veld rij";
            a["field column"] = "Veld kolom";
            a["field value"] = "Veld waarde";
            a.value = "Waarde";
            a.action = "Actie";
            a.actions = "Acties";
            a["detect once"] = "Eenmalige detectie";
            a["delete screen"] = "Verwijder scherm";
            a["genie macros"] = "Genie macros";
            a["screen name"] = "Schermnaam";
            a.identifier = "Identificatie";
            a.identifiers = "Identificaties";
            a["macro name"] = "Naam macro";
            a["close browser wintab"] = "Sluit het browser scherm of de tab.";
            a.select = "Selecteer";
            a["write value in field"] = "Geef het veld een waarde";
            a["press a key"] = "Druk op een toets";
            a["a literal value"] = "Een vaste waarde";
            a["a variable value"] = "Een variabele waarde";
            a["cur user profile"] = "Het huidige gebruikersprofiel";
            a["result js expr"] = "Het resultaat van een JavaScript expressie";
            a["action data"] = "Gegevens van de actie";
            a["data type"] = "Data type";
            a.users = "Gebruikers";
            a["all groups"] = "Alle groepen";
            a["supplemental groups"] = "Aanvullende groepen";
            a["users w primary grp"] = 'Gebruikers met primaire groep "&1"';
            a["users w suppl grp"] = 'Gebruikers met aanvullende groep "&1"';
            a.group = "Groep";
            a.groups = "Groepen";
            a.edit = "Wijzigen";
            a["edit x"] = "Wijzigen &1";
            a.manager = "Manager";
            a.administrator = "Beheerder";
            a["primary group"] = "Primaire groep";
            a["delete x"] = "Verwijder &1";
            a["reassign x"] = "Wijs &1 opnieuw toe";
            a["navigation item"] = "Navigatie item";
            a["navigation items"] = "Navigatie items";
            a["navigation panel"] = "Navigatie panel";
            a["home pages"] = "Home pagina's";
            a["menu group"] = "Menu groep";
            a["menu item"] = "Menu item";
            a["toolbar items"] = "Eenheden werkbalk";
            a.toolbar = "Werkbalk";
            a.button =
                "Knop";
            a["pulldown menu"] = "Afrolmenu";
            a["pulldown menu item"] = "item afrolmenu";
            a["separator bar"] = "Scheidingsteken";
            a.spacer = "Spatie";
            a["item details"] = "Detail item";
            a["item number"] = "Item nummer";
            a["item type"] = "Item type";
            a["genie macro"] = "Genie macro";
            a["rdf application"] = "Rich Display File toepassing";
            a["web application"] = "Web toepassing";
            a["pc command"] = "PC commando";
            a["dspf program library"] = "Display file programma bibliotheek";
            a["dspf program"] = "Display file programma";
            a["variable name x"] =
                "Naam variabele &1";
            a["a tab in the portal"] = "Een tab in de portal";
            a["a new browser wind"] = "Een nieuwe browser window of tab";
            a.update = "Bijwerken";
            a.fill = "Vullen";
            a.permissions = "Permissies";
            a["user/group name"] = "Gebruiker-/groepsnaam";
            a["all users groups"] = "Alle gebruikers en groepen";
            a.type = "Type";
            a.access = "Toegang";
            a.allow = "Toestaan";
            a.disallow = "Weigeren";
            a.navigation = "Navigatie";
            a["add usrgrp perm"] = "Toevoegen gebruikers-/groepsmachtigingen";
            a.membership = "Lid van";
            a.none = "Geen";
            a.remove = "Verwijder";
            a.appearance = "Vorm";
            a["home page"] = "Home pagina";
            a.tree = "Tree";
            a.accordion = "Accordeon";
            a["min search chars"] = "Minimum aantal zoek lettertekens";
            a["libl for rdf apps"] = "Lijst van bibliotheken voor de Rich Display File toepassingen";
            a["library list"] = "Lijst van bibliotheken";
            a.library = "Bibliotheek";
            a["use atrium def libl"] = "Gebruik de standaard Atrium lijst van bibliotheken";
            a["use jobd libl"] = "Gebruik de lijst van bibliotheken van de JOBD";
            a["specify libl"] = "Geef de lijst van bibliotheken op";
            a.up =
                "Op";
            a.down = "Neer";
            a["move up"] = "Omhoog";
            a["move down"] = "Naar beneden";
            a["global settings"] = "Globale instellingen";
            a.save = "Stel veilig";
            a["add usr to supp grp"] = "Voeg gebruiker toe aan aanvullende groep";
            a["member of"] = "Lid van";
            a["member of hlp"] = "De groep waarvan deze gebruiker/groep lid is.";
            a["group name"] = "Groepsnaam";
            a["group name hlp"] = "De schermnaam voor deze groep.";
            a["inherit settings"] = "Neem instellingen over";
            a["inherit settings hlp"] = "Als deze optie wordt aangevinkt, neemt de gebruiker/groep de instellingen over van de bovenliggende gebruiker. Indien niet aangevinkt heeft de gebruiker/groep zijn eigen instellingen.";
            a["user name"] = "Naam gebruiker";
            a["user name hlp"] = "De schermnaam van dit gebruikersprofiel.";
            a["access role"] = "Toegangs bevoegdheden";
            a["access role hlp"] = "Beheert de toegang van deze gebruiker. Administrators kunnen alle groepen en gebruikers beheren en daarnaast ook de bevoegdheden binnen de toepassing. Managers kunnen de gebruikers- en groepssettings binnen hun eigen groep aanpassen. Eindgebruikers hebben geen speciale bevoegdheden.";
            a["can edit profile"] = "Kan profiel bijwerken";
            a["can edit profile hlp"] =
                'Geeft de gebruiker het recht om de "appearance" en "navigation" instellingen aan te passen, en ook het wachtwoord. De overige instellingen kunnen nooit door een gebruiker worden gewijzigd.';
            a["user profile"] = "Gebruikersprofiel";
            a["user profile hlp"] = "De naam van het gebruikersprofiel. Namen van gebruikersprofielen zijn hoofdlettergevoelig, tenzij de IBM i profielen worden gebruikt.";
            a["password hlp"] = "Set/reset het wachtwoord. Wachtwoorden zijn hoofdlettergevoelig.";
            a["conf password"] = "Bevestig wachtwoord";
            a["conf password hlp"] = "Bij set/reset van het wachtwoord moet de waarde van dit veld exact overeenkomen met het nieuwe wachtwoord. Wachtwoorden zijn hoofdlettergevoelig.";
            a["browser title"] = "Titel van de browser";
            a["browser title hlp"] = "Instellen van de tekst die wordt getoond in de titelbar van de browser.";
            a["show banner"] = "Toon banner";
            a["show banner hlp"] = "Haal het vinkje weg bij deze optie als u de banner aan de bovenkant van de portal wilt verbergen.";
            a["banner height"] = "Banner hoogte";
            a["banner height hlp"] =
                "Stelt de hoogte in pixels in van de banner aan de bovenkant van de portal. Deze instelling wordt overgeslagen als de banner niet wordt getoond. Geldige waarden: 0-600 pixels.";
            a["banner url"] = "URL van de banner";
            a["banner url hlp"] = "Stelt de URL in waar de banneropmaak is opgeslagen. URL kan absoluut of gekwalificeerd worden opgegeven.";
            a.theme = "Thema";
            a["theme hlp"] = 'Stelt het standaard thema in. Dit kan worden gewijzigd door individuele gebruikers als <strong>"Sta gebruikers toe om een thema te selecteren"</strong> actief is.';
            a["allow sel theme"] = "Sta gebruikers toe om een thema te selecteren";
            a["allow sel theme hlp"] = "Als dit is aangevinkt, is het voor gebruikers mogelijk een eigen thema te selecteren met behulp van de control in de toolbar.";
            a["show menu search"] = "Toon zoekmenu";
            a["show menu search hlp"] = "Haal vinkje weg om de menu zoekfaciliteit uit te schakelen.";
            a["show fav sys"] = "Toon de Favorieten";
            a["show fav sys hlp"] = "Haal vinkje weg om de Favorieten uit te schakelen.";
            a["show fav start"] = "Toon tab Favorieten bij het opstarten";
            a["show fav start hlp"] = "Indien aangevinkt, wordt de tab Favorieten weergegeven bij het opstarten. Anders wordt (standaard) de tab Navigatie getoond. Deze optie is alleen beschikbaar als Favorieten tonen is ingeschakeld.";
            a["limit num sessn"] = "Beperk het aantal sessies";
            a["limit num sessn hlp"] = "Het aantal toegestane Atrium sessies voor deze gebruiker/groep. De waarde nul staat voor een onbeperkt aantal sessies. De beperking geldt per web browser.";
            a["show hmpg start"] = "Toon home pagina na start";
            a["show hmpg start hlp"] = "Indien aangevinkt wordt er bij het starten van de portal een eigen home page getoond.";
            a["home page url"] = "URL home pagina";
            a["home page url hlp"] = "Stelt de URL in met de locatie van de home page. URL kan absoluut of gekwalificeerd worden opgegeven.";
            a["navi pnl title"] = "Title van het navigatie panel";
            a["navi pnl title hlp"] = "Deze tekst wordt getoond in de titel bar van het navigatie panel.";
            a["navi pnl width"] = "Breedte van navigatie panel na het opstarten";
            a["navi pnl width hlp"] =
                "Stelt de breedte in pixels in van het navigatie panel na het opstarten. De gebruiker kan de grootte van het panel aanpassen of het panel, indien nodig, verbergen. Geldige waarden: 0-2000 pixels.";
            a["navi type"] = "Type navigatie";
            a["navi type hlp"] = 'Stelt binnen de navigatie het type menu in, "tree" of "accordion". Deze instelling is niet van invloed op de toolbar.';
            a["single click nav"] = "Enkele muisklik navigatie";
            a["single click nav hlp"] = "Als deze optie is aangevinkt wordt een menu optie opgestart met een enkele muisklik. Anders wordt een menu optie opgestart met een dubbele klik. Deze instelling is niet van invloed op de toolbar.";
            a["current library"] = "Huidige bibliotheek";
            a["current library hlp"] = "Geef de huidige bibliotheek op, *USRPRF, or *CRTDFT.";
            a["job descr"] = "Taak beschrijving";
            a["job descr hlp"] = "Geef een job description op voor de lijst met bibliotheken. *USRPRF kan worden opgegeven als de Atrium gebruikers gelijk zijn aan de IBM i gebruikers profielen.";
            a["job descr lib"] = "Job description bibliotheek";
            a["job descr lib hlp"] = "Geef de bibliotheek op met de job description. Hier kan *LIBL of *CURLIB worden opgegeven.";
            a["item name"] = "Naam item";
            a["item name hlp"] = "Stelt de naam in van het display voor het navigatie of toolbar item.";
            a["action type"] = "Actie type";
            a["action type hlp"] = "Stelt het type toepassing in dat door dit item wordt gestart.";
            a.url = "URL";
            a["url hlp"] = "Stelt de URL in van de Web toepassing. De URL kan worden opgegeven als een absoluut pad of als een volledig gekwalificeerde URL. In de URL kunnen Query string parameters worden meegegeven.";
            a["genie url"] = "Genie URL";
            a["genie url hlp"] = "Stelt de URL in die wordt gebruikt om Genie te starten. Als hier niets wordt ingevuld wordt de standaard Genie URL /profoundui/auth/genie gebruikt. Dit veld is handig als er een andere Genie URL nodig is of als er met query string parameters wordt  gewerkt. Bijvoorbeeld: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Openen als";
            a["open as hlp"] = "Keuze of de toepassing onder een nieuwe tab in de portal wordt gestart, of in een afzonderlijke browser window of een tab. Of de browser een nieuwe window gebruikt of een tab is afhankelijk van de gebruikersinstelling in de browser.";
            a["opens once only"] = "Open eenmalig";
            a["opens once only hlp"] = "Standaard wordt er een nieuwe tab geopend met het opstarten van een item. Als er al een tab is geopend in de portal wordt er een nieuwe toegevoegd. Er is geen limiet aan het aantal tabs dat op deze manier kan worden geopend. Als deze optie wordt aangevinkt kan de gebruiker niet meer dan 1 tab per item openen. Als er al een tab is geopend voor dit item zal deze na de selectie worden gebruikt. Deze optie is niet actief als er is gekozen voor het openen van het item in een afzonderlijk browser window of tab.";
            a.icon = "Icoon";
            a["icon hlp"] = "Optioneel. Geef de naam op van een icon file voor gebruik door het navigatie of toolbar item. Geldige icon file formaten zijn GIF, JPG, or PNG. Het wordt aanbevolen om transparente GIFs te gebruiken. Gebruik het absolute pad van de root van de Atrium installatie. Als er geen icon is opgegeven gebruikt Atrium een default icon voor de navigatie. Mits hier opgegeven, worden er geen icons voor de toolbar items getoond.";
            a.parameter = "Parameter";
            a["parameter hlp"] = "Optioneel: Geef een parameter mee die bij het starten aan het Rich Display programma wordt doorgegeven.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Hd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "A sua sess\u00e3o ir\u00e1 terminar.";
            a["no connection message"] = "N\u00e3o \u00e9 poss\u00edvel estabelecer liga\u00e7\u00e3o com o servidor. Verifique a liga\u00e7\u00e3o e tente de novo.";
            a["upload file limit"] = "Limite de &1 arquivo(s) excedido.";
            a["upload size limit"] = "Limite de &1MB por arquivo excedido";
            a["upload no files"] = "N\u00e3o h\u00e1 arquivos selecionados.";
            a["upload duplicate file"] = "Foram selecionados arquivos em duplicado.";
            a["upload file exists"] = "Um ou mais arquivos j\u00e1 existem no sistema de arquivos.";
            a["upload prevented"] = "Opera\u00e7\u00e3o impedida por 'exit program'.";
            a["upload input limit"] = "Foi excedido o limite do tamanho total do 'input'.";
            a["upload no session"] = "N\u00e3o est\u00e1 conectado a uma sess\u00e3o v\u00e1lida.";
            a["upload timeout"] = "Foi excedido o tempo limite para a transac\u00e7\u00e3o.";
            a["upload invalid response"] = "N\u00e3o existe resposta do servidor ou a mesma \u00e9 inv\u00e1lida.";
            a["upload cancelled"] =
                "Upload cancelado.";
            a["close browser text"] = "A fim de completar o processo de encerramento da sess\u00e3o, por favor feche a janela do browser.";
            a["session ended text"] = "A sua sess\u00e3o foi encerrada.";
            a["outside ucs2"] = "Caract\u00e9res fora do \u00e2mbito UCS-2.";
            a["invalid number"] = "&1 n\u00e3o \u00e9 um n\u00famero v\u00e1lido.";
            a["invalid length"] = "&1 tem comprimento ou n\u00famero de casas decimais incorrectos.";
            a["invalid decimal"] = "&1 tem demasiadas casas decimais. (max: &2)";
            a["invalid choice"] =
                '"&1" \u00e9 inv\u00e1lido. Escolhas v\u00e1lidas s\u00e3o: "&2" ou "&3".';
            a["invalid date"] = '"&1" n\u00e3o \u00e9 uma data v\u00e1lida. Exemplo de formato correcto: &2';
            a["invalid time"] = '"&1" n\u00e3o \u00e9 uma Hora v\u00e1lida. Exemplo de formato correcto: &2';
            a["invalid time stamp"] = '"&1" n\u00e3o \u00e9 um formato de data e Hora v\u00e1lido. Exemplo de formato correcto: &2';
            a["invalid percent"] = "&1 n\u00e3o \u00e9 um valor decimal.";
            a["invalid digits"] = '"&1" cont\u00e9m demasiados d\u00edgitos. Max: &2';
            a["exceeds whole"] = '"&1" excede o n\u00famero m\u00e1ximo de d\u00edgitos para a parte num\u00e9rica do campo (&2 digits).';
            a["exceeds decimal"] = '"&1" excede o n\u00famero m\u00e1ximo de d\u00edgitos para a parte decimal do campo (&2 digits).';
            a["zip too long"] = "O c\u00f3digo postal \u00e9 demasiado grande. (Maximum: &1 digits)";
            a["phone too long"] = "O n\u00famero de telefone \u00e9 demasiado grande. (Maximum: &1 digits)";
            a["ssno too long"] = "O c\u00f3digo da seguran\u00e7a social \u00e9 demasiado grande. (Maximum: &1 digits)";
            a["invalid custom val"] = "Valida\u00e7\u00e3o de fun\u00e7\u00e3o customizada inv\u00e1lida.";
            a["error custom val"] = "Erro na valida\u00e7\u00e3o de fun\u00e7\u00e3o costumizada.";
            a.ME = "Campo obrigat\u00f3rio. Tem que introduzir dados.";
            a.MF = "Campo de preenchimento total obrigat\u00f3rio. Deve preencher o campo na sua totalidade.";
            a.required = "O valor n\u00e3o pode estar a branco. Este campo \u00e9 obrigat\u00f3rio.";
            a["file required"] = "Deve seleccionar pelo menos um arquivo.";
            a["signature overflow"] =
                "A imagem da assinatura excede o n\u00famero m\u00e1ximo de bytes dispon\u00edveis para o seu armazenamento. Por favor limpe a caixa da assinatura e tente de novo.";
            a.validValues = "O valor introduzido n\u00e3o \u00e9 v\u00e1lido. Valores v\u00e1lidos: ";
            a["upload invalid type"] = "Um ou mais arquivos s\u00e3o de tipo inv\u00e1lido.";
            a["invalid email"] = "e-mail Inv\u00e1lido.";
            a["session timed out"] = "A sua sess\u00e3o expirou.";
            a["invalid low range"] = "O valor deve ser maior ou igual a &1";
            a["invalid high range"] =
                "O valor deve ser menor ou igual a &1";
            a["invalid range"] = "O Intervalo v\u00e1lido \u00e9 de &1 a &2";
            a["unmonitored exception"] = "A aplica\u00e7\u00e3o encontrou uma excep\u00e7\u00e3o n\u00e3o monitorizada. Por favor contacte o administrador de sistema.";
            a["loading x"] = "A carregar &1...";
            a["data src not specfd x"] = "Origem dos dados n\u00e3o especificada para &1...";
            a["name fld not specfd x"] = "Nome do campo n\u00e3o especificado para &1...";
            a["val fld not specfd x"] = "Valor do campo n\u00e3o especificado para &1...";
            a["failed to load x"] = "Falha ao carregar &1.";
            a["cannot rmv last col"] = "N\u00e3o pode eliminar a \u00faltima coluna.";
            a["cannot find col"] = "ID da coluna especificada n\u00e3o encontrado.";
            a["subfile deletion"] = "Tem certeza que deseja excluir o subarquivo?";
            a["downloading x"] = "Downloading &1";
            a["ie9 too low xlsxpics"] = "Imagens n\u00e3o podem ser exportadas utilizando o IE9 ou inferior.";
            a["keyboard input inhibited"] = "Entrada por teclado n\u00e3o permitida neste campo.";
            a["num sessions exceeded"] = "Excedido o n\u00famero de sess\u00f5es autorizadas.";
            a["unable to load portal"] = "N\u00e3o foi poss\u00edvel carregar as configura\u00e7\u00f5es do portal ou items de navega\u00e7\u00e3o.";
            a["unable to load macr act"] = "N\u00e3o foi poss\u00edvel carregar as ac\u00e7\u00f5es macro.";
            a["unable to load macr var"] = "N\u00e3o foi poss\u00edvel carregar as vari\u00e1veis macro.";
            a["unable to load scrn lst"] = "N\u00e3o foi poss\u00edvel carregar a lista de ecr\u00e3.";
            a["unable to load new sett"] = "N\u00e3o foi poss\u00edvel carregar novas defini\u00e7\u00f5es.";
            a["unable to load x"] = "N\u00e3o foi poss\u00edvel carregar &1.";
            a["unable to add x"] = "N\u00e3o foi poss\u00edvel adicionar &1.";
            a["unable to rename x"] = "N\u00e3o foi poss\u00edvel mudar o nome a &1.";
            a["unable to delete x"] = "N\u00e3o foi poss\u00edvel apagar &1.";
            a["unable to update x"] = "N\u00e3o foi poss\u00edvel alterar &1.";
            a["unable to reassn x"] = "N\u00e3o foi poss\u00edvel reasignar &1.";
            a["unable to reorder items"] = "N\u00e3o foi poss\u00edvel reordenar os items.";
            a["unable to save theme"] = "N\u00e3o foi poss\u00edvel gravar as defini\u00e7\u00f5es do tema.";
            a["unable eval script url"] = "N\u00e3o foi poss\u00edvel avaliar o URL da scripted web app.";
            a["close browser text AT"] = "As altera\u00e7\u00f5es n\u00e3o gravadas na sess\u00e3o ou sess\u00f5es ser\u00e3o perdidas.";
            a["close all tabs"] = "Fechar todos os separadores?";
            a["close tab"] = "Deseja fechar este seperador?";
            a["invalid script url"] = "Valor inv\u00e1lido para o URL da scripted web app.";
            a["unrecognized format"] = "Formato n\u00e3o reconhecido.";
            a["screen already defined"] = 'Ecr\u00e3"&1" j\u00e1 definido.';
            a["macro already defined"] = 'Macro "&1" j\u00e1 definida.';
            a["no screen ids"] = "N\u00e3o existem identificadores do ecr\u00e3 para mostrar";
            a["confirm delete"] = "Deseja eliminar";
            a["no actions"] = "N\u00e3o existem ac\u00e7\u00f5es para mostar.";
            a["msg action input var"] = 'Introduza o valor na vari\u00e1vel"&1" no campo da linha &2 coluna &3.';
            a["msg action input user"] = "Introduza o perfil de utilizador actual no campo da linha &1 coluna &2.";
            a["msg action input js"] = "Introduza o resultado da express\u00e3o de JavaScript <strong>&1</strong> no campo da linha &2 coluna &3.";
            a["msg action input other"] = 'Introduza o valor "&1" no campo da linha &2 coluna &3.';
            a["msg presskey var"] = 'Pressione a tecla definida na vari\u00e1vel "&1".';
            a["msg presskey other"] = 'Pressione a tecla "&1".';
            a["msg del scrn from macro"] = "Tem a certeza que quer eliminar o(s) ecr\u00e3(s) seleccionados desta macro?<br /> Todas as ac\u00e7\u00f5es associadas tamb\u00e9m ser\u00e3o eliminadas.";
            a["choose scrn macro"] = "Escolha um ecr\u00e3 ou macro para trabalhar com as suas propriedades.";
            a["choose a nav or toolbar"] =
                "Escolha um item de navega\u00e7\u00e3o ou de barra de ferramentas para trabalhar com as suas propriedades.";
            a["confirm del sel x"] = "Tem a certeza que quer eliminar o(a) &1?";
            a["permission settings"] = "Defini\u00e7\u00e3o de permiss\u00f5es";
            a["adding x"] = "Adicionando &1...";
            a["deleting x"] = "Eliminando &1 ...";
            a["reassigning x"] = "Reasignando &1...";
            a.loading = "Carregando...";
            a.saving = "Gravando...";
            a["x added"] = "&1 adicionado(s).";
            a["x deleted"] = "&1 eliminado(s).";
            a["x reassigned"] = "&1 re-assignado(s).";
            a["x updated"] = "&1 alterado(s).";
            a["x saved"] = "&1 gravado(s).";
            a["msg del group"] = 'Tem a certeza que quer eliminar o grupo "&1"?<br /><br />Apagar o(s) grupo(s) ir\u00e1 apagar tamb\u00e9m qualquer subgrupo e utilizador(es) associado(s).<br /><br />Tem a certeza que quer continuar?';
            a["conf reassign users 1"] = "Tem a certeza que quer re-assignar ";
            a["conf reassign users 2a"] = 'Utilizador "&1" ';
            a["conf reassign users 2b"] = "Os utilizadores seleccionados ";
            a["conf reassign users 3"] = ' para o grupo "&1"?';
            a["conf reassign group"] = 'Tem a certeza que quer re-assignar o grupo "&1" ao grupo "&2"?';
            a["conf delete users 1"] = "Tem a certeza que quer eliminar";
            a["conf delete users 2a"] = 'utilizador "&1"?';
            a["conf delete users 2b"] = "os utilizadores seleccionados?";
            a["no users"] = "N\u00e3o existem utilziadores para mostrar.";
            a["cannot delete own grp"] = "N\u00e3o pode eliminar o seu pr\u00f3prio grupo.";
            a["cannot delete own usr"] = "N\u00e3o pode eliminar o seu pr\u00f3prio perfil de utilizador.";
            a["not auth reassign prf"] =
                "N\u00e3o est\u00e1 autorizado a re-assignar o seu pr\u00f3prio perfil de utilizador.";
            a["typeselect macro name"] = "Escreva ou seleccione o nome da macro...";
            a["any child items will"] = "Quaisquer itens dependente tamb\u00e9m ser\u00e1 eliminado.";
            a["password must be"] = "As Passwords t\u00eam que ter pelo menos 6 caracteres.";
            a["type or sel home page"] = "Escreva ou seleccione a p\u00e1gina principal...";
            a["x is already in list"] = '"&1" j\u00e1 est\u00e1 na lista.';
            a["x is not valid libname"] = '"&1" n\u00e3o \u00e9 um nome de biblioteca v\u00e1lido.';
            a["no libraries in list"] = "N\u00e3o existem bibliotecas na lista";
            a["add libl entry"] = "Adicionar uma entrada na lista de bibliotecas";
            a["would you like add ano"] = "Deseja adicionar outra(o)?";
            a["already in suppl grp x"] = 'Utilizador j\u00e1 existe no grupo suplementar "&1".';
            break;
        case "runtimeText":
            a["upload select text"] = "Arquivos Selecionados";
            a["upload clear text"] = "Limpar";
            a["upload remove text"] = "Remover";
            a["upload upload text"] = "Enviar";
            a["upload drophere text"] = "Colocar os ficheiros aqui";
            a["upload browser unsupported"] =
                "Para efectuar o Drag/drop de ficheiros necessita do Internet Explorer 10 ou superior , Chrome, ou Firefox";
            a["upload finished text"] = "Terminado";
            a["excel export text"] = "Exportar para Excel";
            a["export to x"] = "Exportar para &1";
            a["filter text"] = "Filtrar";
            a["find text"] = "Procurar";
            a["reset data"] = "Reset";
            a["remove filters text"] = "Remover Todos os Filtros";
            a["displayed columns"] = "Colunas Mostradas";
            a["next link text"] = "Pr\u00f3ximo";
            a["previous link text"] = "Anterior";
            a["sort ascending text"] = "Ordenar Ascendentemente";
            a["sort descending text"] = "Ordenar Descendentemente";
            a["sort..."] = "Filtrar...";
            a.sort = "Filtrar";
            a["sort multiple"] = "Filtrar V\u00e1rias Colunas";
            a.column = "Coluna";
            a.direction = "Dire\u00e7\u00e3o";
            a.order = "Ordena\u00e7\u00e3o";
            a.row = "fileira";
            a.rows = "fileiras";
            a.page = "P\u00e1gina";
            a.collapseAll = "Recolher tudo";
            a.expandAll = "Expandir tudo";
            a.user = "Utilizador";
            a.password = "Palavra Passe";
            a["sign on"] = "Entrar";
            a.pui = "Profound UI";
            a["pui sign on"] = a["sign on"] + " em " + a.pui;
            a.pjs = "Profound.js";
            a["pjs sign on"] =
                a["sign on"] + " em " + a.pjs;
            a["message id"] = "Id da mensagem";
            a["ctlr job"] = "Controlador do trabalho";
            a["app job"] = "Aplica\u00e7\u00e3o do trabalho";
            a["joblog download"] = "Download Logs do trabalho";
            a["curr user"] = "Utilizador actual";
            a["remote ip"] = "IP Address Remoto";
            a["remote port"] = "Porta Remota";
            a.severity = "Severidade";
            a.date = "Data";
            a.time = "Hora";
            a.program = "Programa";
            a.procedure = "Procedimento";
            a.lines = "Fileira(s)";
            a.message = "Mensagem";
            a["new session"] = "Nova Sess\u00e3o";
            a.close = "Fechar";
            a["current password"] =
                "Palavra Chave Actual";
            a["new password"] = "Palavra Chave Nova";
            a["repeat new password"] = "Repetir Palavra Chave";
            a.submit = "Submeter";
            a.exit = "Sair";
            a.warning = "Aviso";
            a["change password"] = "Alterar Palavra Chave";
            a.cancel = "Cancelar";
            a["find text"] = "Encontrar";
            a["remove filter"] = "Retirar filtro";
            a.chart = "Gr\u00e1fico";
            a.section = "Sec\u00e7\u00e3o";
            a.version = "Vers\u00e3o";
            a.fixPack = "Pacote de corre\u00e7\u00e3o";
            a.yes = "Sim";
            a.no = "N\u00e3o";
            a.settings = "Defini\u00e7\u00f5es";
            a.favorites = "Favoritos";
            a["type query press en"] =
                "Digite query, e prima Enter.";
            a["add to favorites"] = "Adicionar aos Favoritos";
            a["rmv from favorites"] = "Remover dos Favoritos";
            a["please wait"] = "Aguarde por favor...";
            a["control panel"] = "Painel de Controlo";
            a["my settings"] = "AS minhas Defini\u00e7\u00f5es";
            a["about atrium"] = "Acerca de Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Aviso: Este programa de computador est\u00e1 protegido por copyright por lei<br />e tratados internacionais. Qualquer reprodu\u00e7\u00e3o ou distribui\u00e7\u00e3o n\u00e3o autorizada ou qualquer parte do mesmo pode reseultar em<br />severas penaliza\u00e7\u00f5es e processos criminais at\u00e9 ao limite m\u00e1ximo da lei.<br /><br />Patenteado. &nbsp;U.S. Patente No. 8,667,405 B2.";
            a.item = "Item";
            a["open selected item"] = "Abrir o Item seleccionado";
            a.of = "de";
            a["no results to dsp"] = "N\u00e3o existem resultados para mostrar.";
            a["displaying results"] = "Mostrando os resultados";
            a["search results"] = "Resultados da pesquisa";
            a["new folder"] = "Nova Pasta";
            a.rename = "Mudar o nome";
            a.description = "Descri\u00e7\u00e3o";
            a.ok = "OK";
            a.add = "Adicionar";
            a["add x"] = "Adicionar &1";
            a["delete"] = "Eliminar";
            a.screen = "Ecr\u00e3";
            a.screens = "Ecrans";
            a.macro = "Macro";
            a.macros = "Macros";
            a["screen id"] = "Identificador de Ecr\u00e3";
            a["screen ids"] = "Identificadores de Ecrans";
            a["field row"] = "Campo de Linha";
            a["field column"] = "Campo de Coluna";
            a["field value"] = "Campo de Valor";
            a.value = "Valor";
            a.action = "Ac\u00e7\u00e3o";
            a.actions = "Ac\u00e7\u00f5es";
            a["detect once"] = "Eliminar uma vez";
            a["delete screen"] = "Eliminar Ecr\u00e3";
            a["genie macros"] = "Genie Macros";
            a["screen name"] = "Nome do Ecr\u00e3";
            a.identifier = "Identificador";
            a.identifiers = "Identificadores";
            a["macro name"] = "Nome da Macro";
            a["close browser wintab"] = "Fechar a janela ou seprador do browser.";
            a.select = "Seleccionar";
            a["write value in field"] = "Escreva um valor num campo";
            a["press a key"] = "Prima uma tecla";
            a["a literal value"] = "Um valor literal";
            a["a variable value"] = "Um valor variavel";
            a["cur user profile"] = "O perfil de utilizador actual";
            a["result js expr"] = "O resultado de uma express\u00e3o de JavaScript";
            a["action data"] = "Action data";
            a["data type"] = "Tipo dos Dados";
            a.users = "Utilizadores";
            a["all groups"] = "Todos os Grupos";
            a["supplemental groups"] = "Grupos Suplementares";
            a["users w primary grp"] =
                'Utilizadores cujo Grupo Prim\u00e1rio \u00e9"&1"';
            a["users w suppl grp"] = 'Utilizaodres cujo Grupo Suplementar \u00e9"&1"';
            a.group = "Grupo";
            a.groups = "Grupos";
            a.edit = "Editar";
            a["edit x"] = "Editar &1";
            a.manager = "Gerir";
            a.administrator = "Administrador";
            a["primary group"] = "Grupo Prim\u00e1rio";
            a["delete x"] = "Eliminar &1";
            a["reassign x"] = "Re-assignar &1";
            a["navigation item"] = "Item de Navega\u00e7\u00e3o";
            a["navigation items"] = "Itens de Navega\u00e7\u00e3o";
            a["navigation panel"] = "Painel de Navega\u00e7\u00e3o";
            a["home pages"] = "P\u00e1ginas Principais";
            a["menu group"] = "Grupo de Menu";
            a["menu item"] = "Item de Menu";
            a["toolbar items"] = "Items da Barra de Ferramentas";
            a.toolbar = "Barra de Ferramentas";
            a.button = "Bot\u00e3o";
            a["pulldown menu"] = "Menu de Pulldown";
            a["pulldown menu item"] = "Item de Menu de Pulldown";
            a["separator bar"] = "Barra de Separa\u00e7\u00e3o";
            a.spacer = "Espacejador";
            a["item details"] = "Detalhes do Item";
            a["item number"] = "N\u00famero do Item";
            a["item type"] = "Tipo do Item";
            a["genie macro"] = "Genie Macro";
            a["rdf application"] = "Aplica\u00e7\u00e3o Rich Display File";
            a["web application"] = "Apliaca\u00e7\u00e3o Web";
            a["pc command"] = "Comando de PC";
            a["dspf program library"] = "Biblioteca de programa de ficheiro de ecr\u00e3";
            a["dspf program"] = "Programa de ficheiro de ecr\u00e3";
            a["variable name x"] = "Nome da vari\u00e1vel &1";
            a["a tab in the portal"] = "Um separador no portal";
            a["a new browser wind"] = "Nova janela ou separador do browser";
            a.update = "Alterar";
            a.fill = "Preencher";
            a.permissions = "Permiss\u00f5es";
            a["user/group name"] = "Nome do Utilizador/Grupo";
            a["all users groups"] = "Todos os Utilizadores e Grupos";
            a.type = "Tipo";
            a.access = "Accesso";
            a.allow = "Permitir";
            a.disallow = "N\u00e3o Permitir";
            a.navigation = "Navega\u00e7\u00e3o";
            a["add usrgrp perm"] = "Adicionar Permiss\u00f5es de Utilizador/Grupo";
            a.membership = "Associa\u00e7\u00e3o";
            a.none = "Nenhum";
            a.remove = "Remover";
            a.appearance = "Apar\u00eancia";
            a["home page"] = "P\u00e1gina Principal";
            a.tree = "\u00c1rvore";
            a.accordion = "Acordi\u00e3o";
            a["min search chars"] =
                "Minimo de caracteres de pesquisa";
            a["libl for rdf apps"] = "Lista de Bibliotecas para Aplica\u00e7\u00f5es Rich Display File";
            a["library list"] = "Lista de Bibliotecas";
            a.library = "Biblioteca";
            a["use atrium def libl"] = "Utilizar a lista de bibliotecas padar\u00e3o do Atrium";
            a["use jobd libl"] = "Utilizar a lista de bibliotecas da JOBD";
            a["specify libl"] = "Especifique a lista de bibliotecas";
            a.up = "Cima";
            a.down = "Baixo";
            a["move up"] = "Mover para Cima";
            a["move down"] = "Mover para Baixo";
            a["global settings"] = "Defini\u00e7\u00f5es Globais";
            a.save = "Gravar";
            a["add usr to supp grp"] = "Adicionar o Utilizador ao Grupo Suplementar";
            a["member of"] = "Membro de";
            a["member of hlp"] = "O grupo a que este utilizador/grupo pertence.";
            a["group name"] = "Nome do Grupo";
            a["group name hlp"] = "O nome do ecr\u00e3 para este grupo.";
            a["inherit settings"] = "Defini\u00e7\u00f5es herdadas";
            a["inherit settings hlp"] = "Quando esta op\u00e7\u00e3o est\u00e1 seleccionada, o utilizador/grupo ir\u00e1 gerdar as defini\u00e7\u00f5es do seu 'Pai'. Quando n\u00e3o est\u00e1 seleccionada, o utilizador/grupo ter\u00e1 as suas pr\u00f3prias defini\u00e7\u00f5es.";
            a["user name"] = "Nome do Utilizador";
            a["user name hlp"] = "O nome do ecr\u00e3 deste perfil de utilizador.";
            a["access role"] = "Fun\u00e7\u00e3o de Acesso";
            a["access role hlp"] = "Controla a fun\u00e7\u00e3o de acesso deste utilizador. Administradores podem gerir todos os grupos e utilizadores, e podem tamb\u00e9m controlar as autoridades da aplica\u00e7\u00e3o. Gestores podem configurar as defini\u00e7\u00f5es de utilizadores e grupos dentro do seu pr\u00f3prio grupo. Utilizadores n\u00e3o t\u00eam previl\u00e9gios especiais.";
            a["can edit profile"] = "Pode editar o perfil";
            a["can edit profile hlp"] = 'Permite ao utilizador editar defini\u00e7\u00f5es de "apar\u00eancia" e "navega\u00e7\u00e3o", e alterar a password. Todas as outras defini\u00e7\u00f5es nunca s\u00e3o edit\u00e1veis pelo utilizador.';
            a["user profile"] = "Perfil de Utilizador";
            a["user profile hlp"] = "O nome do perfil de utilizador. Perfis de utilizadorUser s\u00e3o case sensitive, excepto se forem utilizados perfis de IBM i.";
            a["password hlp"] = "Define/limpa a password. Passwords s\u00e3o case sensitive.";
            a["conf password"] = "Confirmar a Password";
            a["conf password hlp"] = "Quando define/limpa a password, este campo tem que ser exactamente igual \u00e1 nova password definida. Passwords s\u00e3o case sensitive.";
            a["browser title"] = "Titulo do Browser";
            a["browser title hlp"] = "Define o texto que ir\u00e1 aparecer na barra de titulo do browser.";
            a["show banner"] = "Mostra banner";
            a["show banner hlp"] = "N\u00e3o seleccione esta op\u00e7\u00e3o se n\u00e3o quiser mostar o banner no topo do portal.";
            a["banner height"] =
                "Altura do Banner";
            a["banner height hlp"] = "Define a altura do banner em pixels no topo do portal. Esta defini\u00e7\u00e3o \u00e9 ignorada se tiver escolhido n\u00e3o mostrar o banner. Valores v\u00e1lidos s\u00e3o 0-600 pixels.";
            a["banner url"] = "URL do Banner";
            a["banner url hlp"] = "Define o URL onde o conte\u00fado do banner est\u00e1 localizado. O URL pode ser absoluto ou definido na sua totalidade.";
            a.theme = "Tema";
            a["theme hlp"] = 'Definie o tema por defeito. Pode ser substituido por utilizadores individuais se <strong>"Permite utilizadores seleccionar o tema"</strong> est\u00e1 activo.';
            a["allow sel theme"] = "Permite ao utilizador seleccionar o tema";
            a["allow sel theme hlp"] = "Se seleccionado, os utilizadores poder\u00e3o seleccionar o tema por eles desejado utilizando um control na barra de ferramentas.";
            a["show menu search"] = "mostra pesquisa de menu";
            a["show menu search hlp"] = "N\u00e3o seleccione se n\u00e3o quiser activar a funcionalidade de pesquisa de menu.";
            a["show fav sys"] = "Mostra Favoritos do sistema";
            a["show fav sys hlp"] = "Desmarque para desactivar os Favoritos do sistema.";
            a["show fav start"] = "Mostar Favoritos no arranque";
            a["show fav start hlp"] = "Se seleciconado, o painel de Favoritos ser\u00e1 mostrado no arranque. Se n\u00e3o, ser\u00e1 mostrado o painel de Navega\u00e7\u00e3o (por defeito). Esta op\u00e7\u00e3o apenas estar\u00e1 disponivel se a op\u00e7\u00e3o Favoritos do sistema estiver activa.";
            a["limit num sessn"] = "Limitar n\u00famero de sess\u00f5es";
            a["limit num sessn hlp"] = "N\u00famero de sess\u00f5es de Atrium permitidas para este utilizador/grupo. Um valor de zero permite n\u00famero de sess\u00f5es ilimitadas. A limita\u00e7\u00e3o \u00e9 aplicada por web browser.";
            a["show hmpg start"] = "Mostra p\u00e1gina principal no arranque";
            a["show hmpg start hlp"] = "Se seleccionado, no arranque ser\u00e1 mostrada uma p\u00e1gina principal customiz\u00e1vel.";
            a["home page url"] = "URL da p\u00e1gina principal";
            a["home page url hlp"] = "Define o URL onde o conte\u00fado da p\u00e1gina principal est\u00e1 localizado. O URL pode ser absoluto ou definido na sua totalidade.";
            a["navi pnl title"] = "Titulo do painel de Navega\u00e7\u00e3o";
            a["navi pnl title hlp"] = "Define o texto que ser\u00e1 mostrado na barra de titulo do painel de navega\u00e7\u00e3o.";
            a["navi pnl width"] = "Largura inicial do painel de Navega\u00e7\u00e3o";
            a["navi pnl width hlp"] = "Define a largura inicial do painel de Navega\u00e7\u00e3o em pixels. O utilizador pode redimensionar ou esconder o painel se desejado. Valores v\u00e1lidos s\u00e3o 0-2000 pixels.";
            a["navi type"] = "Tipo de Naviga\u00e7\u00e3o";
            a["navi type hlp"] = 'Controla o tipo de menu utilizado no painel de navega\u00e7\u00e3o, "tree" or "accordion". Esta defini\u00e7\u00e3o n\u00e3o se aplica \u00e1 barra de ferramentas.';
            a["single click nav"] = "Navega\u00e7\u00e3o com apenas um click";
            a["single click nav hlp"] = "Se seleccionado, os items no painel de navega\u00e7\u00e3o ir\u00e3o arrancar apenas com um click. De outra forma, ir\u00e3o arrancar apenas com duplo click. Esta defini\u00e7\u00e3o n\u00e3o se aplica \u00e1 barra de ferramentas.";
            a["current library"] = "biblioteca actual";
            a["current library hlp"] = "Especifica a biblioteca actual, *USRPRF, ou *CRTDFT.";
            a["job descr"] = "Descri\u00e7\u00e3o do Trabalho";
            a["job descr hlp"] =
                "Especifica a descri\u00e7\u00e3o do Trabalho para definir a lista de bibliotecas de origem. *USRPRF pode ser especificada  se os utilizadores do Atrium forem perfis de utilizadores de IBM i.";
            a["job descr lib"] = "Biblioteca da descri\u00e7\u00e3o do Trabalho";
            a["job descr lib hlp"] = "SEspecifica a biblioteca para a descri\u00e7\u00e3o do Trabalho. *LIBL ou *CURLIB podem ser especificadas.";
            a["item name"] = "nome do Item";
            a["item name hlp"] = "Define o nome do ecr\u00e3 do item de navega\u00e7\u00e3o ou barra de ferramentas.";
            a["action type"] = "Tipo de Ac\u00e7\u00e3o.";
            a["action type hlp"] = "Define o tipo de aplica\u00e7\u00e3o que este Item lan\u00e7a.";
            a.url = "URL";
            a["url hlp"] = "Define o URL da aplica\u00e7\u00e3o Web. Pode ser especificado como um caminho absoluto ou um URL definido na sua totalidade. Parametros de Query podem ser especificados no URL.";
            a["genie url"] = "URL de Genie";
            a["genie url hlp"] = "Define o URL que \u00e9 utilizado para lan\u00e7ar o Genie. Se n\u00e3o for especificado, ser\u00e1 utilizado o URL Default do Genie /profoundui/auth/genie . Este campo \u00e9 util se um URL alternativo do Genie ou parametros de qwery forem requeridos. Por exemplo: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Abrir como";
            a["open as hlp"] = "Define se abre o item como um novo separador no portal ou como uma nova janela ou separador do browser. Se o browser utiliza a defini\u00e7\u00e3o de nova janela ou separador, depende das defini\u00e7\u00f5es do utilizador no browser.";
            a["opens once only"] = "Abre apenas uma vez";
            a["opens once only hlp"] = "Por defeito, se o utilizador lan\u00e7ar este item quando este j\u00e1 tem um separador aberto no portal, um outro separador ser\u00e1 aberto para o item. N\u00e3o existe limita\u00e7\u00e3o no n\u00famero de separadores que o utilizador pode abrir desta forma. Quando 'this open' est\u00e1 seleccionado, o utilzador n\u00e3o poder\u00e1 abrir mais que um separador para o item. Se j\u00e1 estiver aberto um separador para este item, o separador existente ser\u00e1 activado. Esta op\u00e7\u00e3o \u00e9 ignorada quando o se abre o item numa nova janela ou separador do browser.";
            a.icon = "Icon";
            a["icon hlp"] = "Opcional. Definie o ficheiro de icon a ser utilizado na navega\u00e7\u00e3o ou barra de ferramentas. O ficheiro do icon pode ser dos formatos GIF, JPG, or PNG. GIFs transparentes s\u00e3o recomendados. O caminho deve ser dado com absoluto desde a raiz da instala\u00e7\u00e3o do Atrium. Se nenhum icon for especificado, Atrium ir\u00e1 utilizar o icon por defeito para os itens de navega\u00e7\u00e3o. Nenhum icon ser\u00e1 mostrado para a barra de ferramentas, a n\u00e3o ser que seja especificado aqui.";
            a.parameter = "Par\u00e2metro";
            a["parameter hlp"] = "Opcional: Define o par\u00e2metro que ir\u00e1 ser passado para o Rich Display do programa quando este \u00e9 lan\u00e7ado.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Id(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "A sua sess\u00e3o ir\u00e1 terminar.";
            a["no connection message"] = "N\u00e3o \u00e9 poss\u00edvel estabelecer liga\u00e7\u00e3o com o servidor. Verifique a liga\u00e7\u00e3o e tente de novo.";
            a["upload file limit"] = "Limite de &1 ficheiro(s) excedido.";
            a["upload size limit"] = "Limite de &1MB por ficheiro excedido";
            a["upload no files"] = "N\u00e3o h\u00e1 ficheiros selecionados.";
            a["upload duplicate file"] = "Foram selecionados ficheiros em duplicado.";
            a["upload file exists"] = "Um ou mais ficheiros j\u00e1 existem no sistema de ficheiros.";
            a["upload prevented"] = "Opera\u00e7\u00e3o impedida por 'exit program'.";
            a["upload input limit"] = "Foi excedido o limite do tamanho total do 'input'.";
            a["upload no session"] = "N\u00e3o est\u00e1 conectado a uma sess\u00e3o v\u00e1lida.";
            a["upload timeout"] = "Foi excedido o tempo limite para a transac\u00e7\u00e3o.";
            a["upload invalid response"] = "N\u00e3o existe resposta do servidor ou a mesma \u00e9 inv\u00e1lida.";
            a["upload cancelled"] = "Upload cancelado.";
            a["close browser text"] = "A fim de completar o processo de encerramento da sess\u00e3o, por favor feche a janela do browser.";
            a["session ended text"] = "A sua sess\u00e3o foi encerrada.";
            a["outside ucs2"] = "Caract\u00e9res fora do \u00e2mbito UCS-2.";
            a["invalid number"] = "&1 n\u00e3o \u00e9 um n\u00famero v\u00e1lido.";
            a["invalid length"] = "&1 tem comprimento ou n\u00famero de casas decimais incorrectos.";
            a["invalid decimal"] = "&1 tem demasiadas casas decimais. (max: &2)";
            a["invalid choice"] = '"&1" \u00e9 inv\u00e1lido. Escolhas v\u00e1lidas s\u00e3o: "&2" ou "&3".';
            a["invalid date"] = '"&1" n\u00e3o \u00e9 uma data v\u00e1lida. Exemplo de formato correcto: &2';
            a["invalid time"] = '"&1" n\u00e3o \u00e9 uma Hora v\u00e1lida. Exemplo de formato correcto: &2';
            a["invalid time stamp"] = '"&1" n\u00e3o \u00e9 um formato de data e Hora v\u00e1lido. Exemplo de formato correcto: &2';
            a["invalid percent"] = "&1 n\u00e3o \u00e9 um valor decimal.";
            a["invalid digits"] = '"&1" cont\u00e9m demasiados d\u00edgitos. Max: &2';
            a["exceeds whole"] = '"&1" excede o n\u00famero m\u00e1ximo de d\u00edgitos para a parte num\u00e9rica do campo (&2 digits).';
            a["exceeds decimal"] = '"&1" excede o n\u00famero m\u00e1ximo de d\u00edgitos para a parte decimal do campo (&2 digits).';
            a["zip too long"] = "O c\u00f3digo postal \u00e9 demasiado grande. (Maximum: &1 digits)";
            a["phone too long"] = "O n\u00famero de telefone \u00e9 demasiado grande. (Maximum: &1 digits)";
            a["ssno too long"] = "O c\u00f3digo da seguran\u00e7a social \u00e9 demasiado grande. (Maximum: &1 digits)";
            a["invalid custom val"] = "Valida\u00e7\u00e3o de fun\u00e7\u00e3o customizada inv\u00e1lida.";
            a["error custom val"] = "Erro na valida\u00e7\u00e3o de fun\u00e7\u00e3o costumizada.";
            a.ME = "Campo obrigat\u00f3rio. Tem que introduzir dados.";
            a.MF = "Campo de preenchimento total obrigat\u00f3rio. Deve preencher o campo na sua totalidade.";
            a.required = "O valor n\u00e3o pode estar a branco. Este campo \u00e9 obrigat\u00f3rio.";
            a["file required"] = "Deve seleccionar pelo menos um ficheiro.";
            a["signature overflow"] =
                "A imagem da assinatura excede o n\u00famero m\u00e1ximo de bytes dispon\u00edveis para o seu armazenamento. Por favor limpe a caixa da assinatura e tente de novo.";
            a.validValues = "O valor introduzido n\u00e3o \u00e9 v\u00e1lido. Valores v\u00e1lidos: ";
            a["upload invalid type"] = "Um ou mais ficheiros s\u00e3o de tipo inv\u00e1lido.";
            a["invalid email"] = "e-mail Inv\u00e1lido.";
            a["session timed out"] = "A sua sess\u00e3o expirou.";
            a["invalid low range"] = "O valor deve ser maior ou igual a &1";
            a["invalid high range"] =
                "O valor deve ser menor ou igual a &1";
            a["invalid range"] = "O Intervalo v\u00e1lido \u00e9 de &1 a &2";
            a["unmonitored exception"] = "A aplica\u00e7\u00e3o encontrou uma excep\u00e7\u00e3o n\u00e3o monitorizada. Por favor contacte o administrador de sistema.";
            a["loading x"] = "A carregar &1...";
            a["data src not specfd x"] = "Origem dos dados n\u00e3o especificada para &1...";
            a["name fld not specfd x"] = "Nome do campo n\u00e3o especificado para &1...";
            a["val fld not specfd x"] = "Valor do campo n\u00e3o especificado para &1...";
            a["failed to load x"] = "Falha ao carregar &1.";
            a["cannot rmv last col"] = "N\u00e3o pode eliminar a \u00faltima coluna.";
            a["cannot find col"] = "ID da coluna especificada n\u00e3o encontrado.";
            a["subfile deletion"] = "Tem certeza que deseja excluir o subarquivo?";
            a["downloading x"] = "Downloading &1";
            a["ie9 too low xlsxpics"] = "Imagens n\u00e3o podem ser exportadas utilizando o IE9 ou inferior.";
            a["keyboard input inhibited"] = "Entrada por teclado n\u00e3o permitida neste campo.";
            a["num sessions exceeded"] = "Excedido o n\u00famero de sess\u00f5es autorizadas.";
            a["unable to load portal"] = "N\u00e3o foi poss\u00edvel carregar as configura\u00e7\u00f5es do portal ou items de navega\u00e7\u00e3o.";
            a["unable to load macr act"] = "N\u00e3o foi poss\u00edvel carregar as ac\u00e7\u00f5es macro.";
            a["unable to load macr var"] = "N\u00e3o foi poss\u00edvel carregar as vari\u00e1veis macro.";
            a["unable to load scrn lst"] = "N\u00e3o foi poss\u00edvel carregar a lista de ecr\u00e3.";
            a["unable to load new sett"] = "N\u00e3o foi poss\u00edvel carregar novas defini\u00e7\u00f5es.";
            a["unable to load x"] = "N\u00e3o foi poss\u00edvel carregar &1.";
            a["unable to add x"] = "N\u00e3o foi poss\u00edvel adicionar &1.";
            a["unable to rename x"] = "N\u00e3o foi poss\u00edvel mudar o nome a &1.";
            a["unable to delete x"] = "N\u00e3o foi poss\u00edvel apagar &1.";
            a["unable to update x"] = "N\u00e3o foi poss\u00edvel alterar &1.";
            a["unable to reassn x"] = "N\u00e3o foi poss\u00edvel reasignar &1.";
            a["unable to reorder items"] = "N\u00e3o foi poss\u00edvel reordenar os items.";
            a["unable to save theme"] = "N\u00e3o foi poss\u00edvel gravar as defini\u00e7\u00f5es do tema.";
            a["unable eval script url"] = "N\u00e3o foi poss\u00edvel avaliar o URL da scripted web app.";
            a["close browser text AT"] = "As altera\u00e7\u00f5es n\u00e3o gravadas na sess\u00e3o ou sess\u00f5es ser\u00e3o perdidas.";
            a["close all tabs"] = "Fechar todos os separadores?";
            a["close tab"] = "Deseja fechar este seperador?";
            a["invalid script url"] = "Valor inv\u00e1lido para o URL da scripted web app.";
            a["unrecognized format"] = "Formato n\u00e3o reconhecido.";
            a["screen already defined"] = 'Ecr\u00e3"&1" j\u00e1 definido.';
            a["macro already defined"] = 'Macro "&1" j\u00e1 definida.';
            a["no screen ids"] = "N\u00e3o existem identificadores do ecr\u00e3 para mostrar";
            a["confirm delete"] = "Deseja eliminar";
            a["no actions"] = "N\u00e3o existem ac\u00e7\u00f5es para mostar.";
            a["msg action input var"] = 'Introduza o valor na vari\u00e1vel"&1" no campo da linha &2 coluna &3.';
            a["msg action input user"] = "Introduza o perfil de utilizador actual no campo da linha &1 coluna &2.";
            a["msg action input js"] = "Introduza o resultado da express\u00e3o de JavaScript <strong>&1</strong> no campo da linha &2 coluna &3.";
            a["msg action input other"] = 'Introduza o valor "&1" no campo da linha &2 coluna &3.';
            a["msg presskey var"] = 'Pressione a tecla definida na vari\u00e1vel "&1".';
            a["msg presskey other"] = 'Pressione a tecla "&1".';
            a["msg del scrn from macro"] = "Tem a certeza que quer eliminar o(s) ecr\u00e3(s) seleccionados desta macro?<br /> Todas as ac\u00e7\u00f5es associadas tamb\u00e9m ser\u00e3o eliminadas.";
            a["choose scrn macro"] = "Escolha um ecr\u00e3 ou macro para trabalhar com as suas propriedades.";
            a["choose a nav or toolbar"] =
                "Escolha um item de navega\u00e7\u00e3o ou de barra de ferramentas para trabalhar com as suas propriedades.";
            a["confirm del sel x"] = "Tem a certeza que quer eliminar o(a) &1?";
            a["permission settings"] = "Defini\u00e7\u00e3o de permiss\u00f5es";
            a["adding x"] = "Adicionando &1...";
            a["deleting x"] = "Eliminando &1 ...";
            a["reassigning x"] = "Reasignando &1...";
            a.loading = "A carregar...";
            a.saving = "Gravando...";
            a["x added"] = "&1 adicionado(s).";
            a["x deleted"] = "&1 eliminado(s).";
            a["x reassigned"] = "&1 re-assignado(s).";
            a["x updated"] = "&1 alterado(s).";
            a["x saved"] = "&1 gravado(s).";
            a["msg del group"] = 'Tem a certeza que quer eliminar o grupo "&1"?<br /><br />Apagar o(s) grupo(s) ir\u00e1 apagar tamb\u00e9m qualquer subgrupo e utilizador(es) associado(s).<br /><br />Tem a certeza que quer continuar?';
            a["conf reassign users 1"] = "Tem a certeza que quer re-assignar ";
            a["conf reassign users 2a"] = 'Utilizador "&1" ';
            a["conf reassign users 2b"] = "Os utilizadores seleccionados ";
            a["conf reassign users 3"] = ' para o grupo "&1"?';
            a["conf reassign group"] = 'Tem a certeza que quer re-assignar o grupo "&1" ao grupo "&2"?';
            a["conf delete users 1"] = "Tem a certeza que quer eliminar";
            a["conf delete users 2a"] = 'utilizador "&1"?';
            a["conf delete users 2b"] = "os utilizadores seleccionados?";
            a["no users"] = "N\u00e3o existem utilziadores para mostrar.";
            a["cannot delete own grp"] = "N\u00e3o pode eliminar o seu pr\u00f3prio grupo.";
            a["cannot delete own usr"] = "N\u00e3o pode eliminar o seu pr\u00f3prio perfil de utilizador.";
            a["not auth reassign prf"] =
                "N\u00e3o est\u00e1 autorizado a re-assignar o seu pr\u00f3prio perfil de utilizador.";
            a["typeselect macro name"] = "Escreva ou seleccione o nome da macro...";
            a["any child items will"] = "Quaisquer itens dependente tamb\u00e9m ser\u00e1 eliminado.";
            a["password must be"] = "As Passwords t\u00eam que ter pelo menos 6 caracteres.";
            a["type or sel home page"] = "Escreva ou seleccione a p\u00e1gina principal...";
            a["x is already in list"] = '"&1" j\u00e1 est\u00e1 na lista.';
            a["x is not valid libname"] = '"&1" n\u00e3o \u00e9 um nome de biblioteca v\u00e1lido.';
            a["no libraries in list"] = "N\u00e3o existem bibliotecas na lista";
            a["add libl entry"] = "Adicionar uma entrada na lista de bibliotecas";
            a["would you like add ano"] = "Deseja adicionar outra(o)?";
            a["already in suppl grp x"] = 'Utilizador j\u00e1 existe no grupo suplementar "&1".';
            break;
        case "runtimeText":
            a["upload select text"] = "Ficheiros Selecionados";
            a["upload clear text"] = "Limpar";
            a["upload remove text"] = "Remover";
            a["upload upload text"] = "Enviar";
            a["upload drophere text"] = "Colocar os ficheiros aqui";
            a["upload browser unsupported"] = "Para efectuar o Drag/drop de ficheiros necessita do Internet Explorer 10 ou superior , Chrome, ou Firefox";
            a["upload finished text"] = "Terminado";
            a["excel export text"] = "Exportar para Excel";
            a["export to x"] = "Exportar para &1";
            a["filter text"] = "Filtrar";
            a["find text"] = "Procurar";
            a["reset data"] = "Reset";
            a["remove filters text"] = "Remover Todos os Filtros";
            a["displayed columns"] = "Colunas Mostradas";
            a["next link text"] = "Pr\u00f3ximo";
            a["previous link text"] = "Anterior";
            a["sort ascending text"] = "Ordenar Ascendentemente";
            a["sort descending text"] = "Ordenar Descendentemente";
            a["sort..."] = "Filtrar...";
            a.sort = "Filtrar";
            a["sort multiple"] = "Filtrar V\u00e1rias Colunas";
            a.column = "Coluna";
            a.direction = "Dire\u00e7\u00e3o";
            a.order = "Ordena\u00e7\u00e3o";
            a.row = "linha";
            a.rows = "linhas";
            a.page = "P\u00e1gina";
            a.collapseAll = "Recolher tudo";
            a.expandAll = "Expandir tudo";
            a.user = "Utilizador";
            a.password = "Palavra Passe";
            a["sign on"] = "Entrar";
            a.pui = "Profound UI";
            a["pui sign on"] = a["sign on"] +
                " em " + a.pui;
            a.pjs = "Profound.js";
            a["pjs sign on"] = a["sign on"] + " em " + a.pjs;
            a["message id"] = "Id da mensagem";
            a["ctlr job"] = "Controlador do trabalho";
            a["app job"] = "Aplica\u00e7\u00e3o do trabalho";
            a["joblog download"] = "Download Logs do trabalho";
            a["curr user"] = "Utilizador actual";
            a["remote ip"] = "IP Address Remoto";
            a["remote port"] = "Porta Remota";
            a.severity = "Severidade";
            a.date = "Data";
            a.time = "Hora";
            a.program = "Programa";
            a.procedure = "Procedimento";
            a.lines = "Linha(s)";
            a.message = "Mensagem";
            a["new session"] =
                "Nova Sess\u00e3o";
            a.close = "Fechar";
            a["current password"] = "Palavra Chave Actual";
            a["new password"] = "Palavra Chave Nova";
            a["repeat new password"] = "Repetir Palavra Chave";
            a.submit = "Submeter";
            a.exit = "Sair";
            a.warning = "Aviso";
            a["change password"] = "Alterar Palavra Chave";
            a.cancel = "Cancelar";
            a["find text"] = "Encontrar";
            a["remove filter"] = "Retirar filtro";
            a.chart = "Gr\u00e1fico";
            a.section = "Sec\u00e7\u00e3o";
            a.version = "Vers\u00e3o";
            a.fixPack = "Pacote de corre\u00e7\u00e3o";
            a.yes = "Sim";
            a.no = "N\u00e3o";
            a.settings =
                "Defini\u00e7\u00f5es";
            a.favorites = "Favoritos";
            a["type query press en"] = "Digite query, e prima Enter.";
            a["add to favorites"] = "Adicionar aos Favoritos";
            a["rmv from favorites"] = "Remover dos Favoritos";
            a["please wait"] = "Aguarde por favor...";
            a["control panel"] = "Painel de Controlo";
            a["my settings"] = "AS minhas Defini\u00e7\u00f5es";
            a["about atrium"] = "Acerca de Atrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />Copyright &copy 1999-" +
                (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />Aviso: Este programa de computador est\u00e1 protegido por copyright por lei<br />e tratados internacionais. Qualquer reprodu\u00e7\u00e3o ou distribui\u00e7\u00e3o n\u00e3o autorizada ou qualquer parte do mesmo pode reseultar em<br />severas penaliza\u00e7\u00f5es e processos criminais at\u00e9 ao limite m\u00e1ximo da lei.<br /><br />Patenteado. &nbsp;U.S. Patente No. 8,667,405 B2.";
            a.item = "Item";
            a["open selected item"] = "Abrir o Item seleccionado";
            a.of = "de";
            a["no results to dsp"] = "N\u00e3o existem resultados para mostrar.";
            a["displaying results"] = "Mostrando os resultados";
            a["search results"] = "Resultados da pesquisa";
            a["new folder"] = "Nova Pasta";
            a.rename = "Mudar o nome";
            a.description = "Descri\u00e7\u00e3o";
            a.ok = "OK";
            a.add = "Adicionar";
            a["add x"] = "Adicionar &1";
            a["delete"] = "Eliminar";
            a.screen = "Ecr\u00e3";
            a.screens = "Ecrans";
            a.macro = "Macro";
            a.macros = "Macros";
            a["screen id"] = "Identificador de Ecr\u00e3";
            a["screen ids"] = "Identificadores de Ecrans";
            a["field row"] =
                "Campo de Linha";
            a["field column"] = "Campo de Coluna";
            a["field value"] = "Campo de Valor";
            a.value = "Valor";
            a.action = "Ac\u00e7\u00e3o";
            a.actions = "Ac\u00e7\u00f5es";
            a["detect once"] = "Eliminar uma vez";
            a["delete screen"] = "Eliminar Ecr\u00e3";
            a["genie macros"] = "Genie Macros";
            a["screen name"] = "Nome do Ecr\u00e3";
            a.identifier = "Identificador";
            a.identifiers = "Identificadores";
            a["macro name"] = "Nome da Macro";
            a["close browser wintab"] = "Fechar a janela ou seprador do browser.";
            a.select = "Seleccionar";
            a["write value in field"] =
                "Escreva um valor num campo";
            a["press a key"] = "Prima uma tecla";
            a["a literal value"] = "Um valor literal";
            a["a variable value"] = "Um valor variavel";
            a["cur user profile"] = "O perfil de utilizador actual";
            a["result js expr"] = "O resultado de uma express\u00e3o de JavaScript";
            a["action data"] = "Action data";
            a["data type"] = "Tipo dos Dados";
            a.users = "Utilizadores";
            a["all groups"] = "Todos os Grupos";
            a["supplemental groups"] = "Grupos Suplementares";
            a["users w primary grp"] = 'Utilizadores cujo Grupo Prim\u00e1rio \u00e9"&1"';
            a["users w suppl grp"] = 'Utilizaodres cujo Grupo Suplementar \u00e9"&1"';
            a.group = "Grupo";
            a.groups = "Grupos";
            a.edit = "Editar";
            a["edit x"] = "Editar &1";
            a.manager = "Gerir";
            a.administrator = "Administrador";
            a["primary group"] = "Grupo Prim\u00e1rio";
            a["delete x"] = "Eliminar &1";
            a["reassign x"] = "Re-assignar &1";
            a["navigation item"] = "Item de Navega\u00e7\u00e3o";
            a["navigation items"] = "Itens de Navega\u00e7\u00e3o";
            a["navigation panel"] = "Painel de Navega\u00e7\u00e3o";
            a["home pages"] = "P\u00e1ginas Principais";
            a["menu group"] =
                "Grupo de Menu";
            a["menu item"] = "Item de Menu";
            a["toolbar items"] = "Items da Barra de Ferramentas";
            a.toolbar = "Barra de Ferramentas";
            a.button = "Bot\u00e3o";
            a["pulldown menu"] = "Menu de Pulldown";
            a["pulldown menu item"] = "Item de Menu de Pulldown";
            a["separator bar"] = "Barra de Separa\u00e7\u00e3o";
            a.spacer = "Espacejador";
            a["item details"] = "Detalhes do Item";
            a["item number"] = "N\u00famero do Item";
            a["item type"] = "Tipo do Item";
            a["genie macro"] = "Genie Macro";
            a["rdf application"] = "Aplica\u00e7\u00e3o Rich Display File";
            a["web application"] = "Apliaca\u00e7\u00e3o Web";
            a["pc command"] = "Comando de PC";
            a["dspf program library"] = "Biblioteca de programa de ficheiro de ecr\u00e3";
            a["dspf program"] = "Programa de ficheiro de ecr\u00e3";
            a["variable name x"] = "Nome da vari\u00e1vel &1";
            a["a tab in the portal"] = "Um separador no portal";
            a["a new browser wind"] = "Nova janela ou separador do browser";
            a.update = "Alterar";
            a.fill = "Preencher";
            a.permissions = "Permiss\u00f5es";
            a["user/group name"] = "Nome do Utilizador/Grupo";
            a["all users groups"] =
                "Todos os Utilizadores e Grupos";
            a.type = "Tipo";
            a.access = "Accesso";
            a.allow = "Permitir";
            a.disallow = "N\u00e3o Permitir";
            a.navigation = "Navega\u00e7\u00e3o";
            a["add usrgrp perm"] = "Adicionar Permiss\u00f5es de Utilizador/Grupo";
            a.membership = "Associa\u00e7\u00e3o";
            a.none = "Nenhum";
            a.remove = "Remover";
            a.appearance = "Apar\u00eancia";
            a["home page"] = "P\u00e1gina Principal";
            a.tree = "\u00c1rvore";
            a.accordion = "Acordi\u00e3o";
            a["min search chars"] = "Minimo de caracteres de pesquisa";
            a["libl for rdf apps"] = "Lista de Bibliotecas para Aplica\u00e7\u00f5es Rich Display File";
            a["library list"] = "Lista de Bibliotecas";
            a.library = "Biblioteca";
            a["use atrium def libl"] = "Utilizar a lista de bibliotecas padar\u00e3o do Atrium";
            a["use jobd libl"] = "Utilizar a lista de bibliotecas da JOBD";
            a["specify libl"] = "Especifique a lista de bibliotecas";
            a.up = "Cima";
            a.down = "Baixo";
            a["move up"] = "Mover para Cima";
            a["move down"] = "Mover para Baixo";
            a["global settings"] = "Defini\u00e7\u00f5es Globais";
            a.save = "Gravar";
            a["add usr to supp grp"] = "Adicionar o Utilizador ao Grupo Suplementar";
            a["member of"] =
                "Membro de";
            a["member of hlp"] = "O grupo a que este utilizador/grupo pertence.";
            a["group name"] = "Nome do Grupo";
            a["group name hlp"] = "O nome do ecr\u00e3 para este grupo.";
            a["inherit settings"] = "Defini\u00e7\u00f5es herdadas";
            a["inherit settings hlp"] = "Quando esta op\u00e7\u00e3o est\u00e1 seleccionada, o utilizador/grupo ir\u00e1 gerdar as defini\u00e7\u00f5es do seu 'Pai'. Quando n\u00e3o est\u00e1 seleccionada, o utilizador/grupo ter\u00e1 as suas pr\u00f3prias defini\u00e7\u00f5es.";
            a["user name"] =
                "Nome do Utilizador";
            a["user name hlp"] = "O nome do ecr\u00e3 deste perfil de utilizador.";
            a["access role"] = "Fun\u00e7\u00e3o de Acesso";
            a["access role hlp"] = "Controla a fun\u00e7\u00e3o de acesso deste utilizador. Administradores podem gerir todos os grupos e utilizadores, e podem tamb\u00e9m controlar as autoridades da aplica\u00e7\u00e3o. Gestores podem configurar as defini\u00e7\u00f5es de utilizadores e grupos dentro do seu pr\u00f3prio grupo. Utilizadores n\u00e3o t\u00eam previl\u00e9gios especiais.";
            a["can edit profile"] = "Pode editar o perfil";
            a["can edit profile hlp"] = 'Permite ao utilizador editar defini\u00e7\u00f5es de "apar\u00eancia" e "navega\u00e7\u00e3o", e alterar a password. Todas as outras defini\u00e7\u00f5es nunca s\u00e3o edit\u00e1veis pelo utilizador.';
            a["user profile"] = "Perfil de Utilizador";
            a["user profile hlp"] = "O nome do perfil de utilizador. Perfis de utilizadorUser s\u00e3o case sensitive, excepto se forem utilizados perfis de IBM i.";
            a["password hlp"] = "Define/limpa a password. Passwords s\u00e3o case sensitive.";
            a["conf password"] = "Confirmar a Password";
            a["conf password hlp"] = "Quando define/limpa a password, este campo tem que ser exactamente igual \u00e1 nova password definida. Passwords s\u00e3o case sensitive.";
            a["browser title"] = "Titulo do Browser";
            a["browser title hlp"] = "Define o texto que ir\u00e1 aparecer na barra de titulo do browser.";
            a["show banner"] = "Mostra banner";
            a["show banner hlp"] = "N\u00e3o seleccione esta op\u00e7\u00e3o se n\u00e3o quiser mostar o banner no topo do portal.";
            a["banner height"] =
                "Altura do Banner";
            a["banner height hlp"] = "Define a altura do banner em pixels no topo do portal. Esta defini\u00e7\u00e3o \u00e9 ignorada se tiver escolhido n\u00e3o mostrar o banner. Valores v\u00e1lidos s\u00e3o 0-600 pixels.";
            a["banner url"] = "URL do Banner";
            a["banner url hlp"] = "Define o URL onde o conte\u00fado do banner est\u00e1 localizado. O URL pode ser absoluto ou definido na sua totalidade.";
            a.theme = "Tema";
            a["theme hlp"] = 'Definie o tema por defeito. Pode ser substituido por utilizadores individuais se <strong>"Permite utilizadores seleccionar o tema"</strong> est\u00e1 activo.';
            a["allow sel theme"] = "Permite ao utilizador seleccionar o tema";
            a["allow sel theme hlp"] = "Se seleccionado, os utilizadores poder\u00e3o seleccionar o tema por eles desejado utilizando um control na barra de ferramentas.";
            a["show menu search"] = "mostra pesquisa de menu";
            a["show menu search hlp"] = "N\u00e3o seleccione se n\u00e3o quiser activar a funcionalidade de pesquisa de menu.";
            a["show fav sys"] = "Mostra Favoritos do sistema";
            a["show fav sys hlp"] = "Desmarque para desactivar os Favoritos do sistema.";
            a["show fav start"] = "Mostar Favoritos no arranque";
            a["show fav start hlp"] = "Se seleciconado, o painel de Favoritos ser\u00e1 mostrado no arranque. Se n\u00e3o, ser\u00e1 mostrado o painel de Navega\u00e7\u00e3o (por defeito). Esta op\u00e7\u00e3o apenas estar\u00e1 disponivel se a op\u00e7\u00e3o Favoritos do sistema estiver activa.";
            a["limit num sessn"] = "Limitar n\u00famero de sess\u00f5es";
            a["limit num sessn hlp"] = "N\u00famero de sess\u00f5es de Atrium permitidas para este utilizador/grupo. Um valor de zero permite n\u00famero de sess\u00f5es ilimitadas. A limita\u00e7\u00e3o \u00e9 aplicada por web browser.";
            a["show hmpg start"] = "Mostra p\u00e1gina principal no arranque";
            a["show hmpg start hlp"] = "Se seleccionado, no arranque ser\u00e1 mostrada uma p\u00e1gina principal customiz\u00e1vel.";
            a["home page url"] = "URL da p\u00e1gina principal";
            a["home page url hlp"] = "Define o URL onde o conte\u00fado da p\u00e1gina principal est\u00e1 localizado. O URL pode ser absoluto ou definido na sua totalidade.";
            a["navi pnl title"] = "Titulo do painel de Navega\u00e7\u00e3o";
            a["navi pnl title hlp"] = "Define o texto que ser\u00e1 mostrado na barra de titulo do painel de navega\u00e7\u00e3o.";
            a["navi pnl width"] = "Largura inicial do painel de Navega\u00e7\u00e3o";
            a["navi pnl width hlp"] = "Define a largura inicial do painel de Navega\u00e7\u00e3o em pixels. O utilizador pode redimensionar ou esconder o painel se desejado. Valores v\u00e1lidos s\u00e3o 0-2000 pixels.";
            a["navi type"] = "Tipo de Naviga\u00e7\u00e3o";
            a["navi type hlp"] = 'Controla o tipo de menu utilizado no painel de navega\u00e7\u00e3o, "tree" or "accordion". Esta defini\u00e7\u00e3o n\u00e3o se aplica \u00e1 barra de ferramentas.';
            a["single click nav"] = "Navega\u00e7\u00e3o com apenas um click";
            a["single click nav hlp"] = "Se seleccionado, os items no painel de navega\u00e7\u00e3o ir\u00e3o arrancar apenas com um click. De outra forma, ir\u00e3o arrancar apenas com duplo click. Esta defini\u00e7\u00e3o n\u00e3o se aplica \u00e1 barra de ferramentas.";
            a["current library"] = "biblioteca actual";
            a["current library hlp"] = "Especifica a biblioteca actual, *USRPRF, ou *CRTDFT.";
            a["job descr"] = "Descri\u00e7\u00e3o do Trabalho";
            a["job descr hlp"] =
                "Especifica a descri\u00e7\u00e3o do Trabalho para definir a lista de bibliotecas de origem. *USRPRF pode ser especificada  se os utilizadores do Atrium forem perfis de utilizadores de IBM i.";
            a["job descr lib"] = "Biblioteca da descri\u00e7\u00e3o do Trabalho";
            a["job descr lib hlp"] = "SEspecifica a biblioteca para a descri\u00e7\u00e3o do Trabalho. *LIBL ou *CURLIB podem ser especificadas.";
            a["item name"] = "nome do Item";
            a["item name hlp"] = "Define o nome do ecr\u00e3 do item de navega\u00e7\u00e3o ou barra de ferramentas.";
            a["action type"] = "Tipo de Ac\u00e7\u00e3o.";
            a["action type hlp"] = "Define o tipo de aplica\u00e7\u00e3o que este Item lan\u00e7a.";
            a.url = "URL";
            a["url hlp"] = "Define o URL da aplica\u00e7\u00e3o Web. Pode ser especificado como um caminho absoluto ou um URL definido na sua totalidade. Parametros de Query podem ser especificados no URL.";
            a["genie url"] = "URL de Genie";
            a["genie url hlp"] = "Define o URL que \u00e9 utilizado para lan\u00e7ar o Genie. Se n\u00e3o for especificado, ser\u00e1 utilizado o URL Default do Genie /profoundui/auth/genie . Este campo \u00e9 util se um URL alternativo do Genie ou parametros de qwery forem requeridos. Por exemplo: /profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "Abrir como";
            a["open as hlp"] = "Define se abre o item como um novo separador no portal ou como uma nova janela ou separador do browser. Se o browser utiliza a defini\u00e7\u00e3o de nova janela ou separador, depende das defini\u00e7\u00f5es do utilizador no browser.";
            a["opens once only"] = "Abre apenas uma vez";
            a["opens once only hlp"] = "Por defeito, se o utilizador lan\u00e7ar este item quando este j\u00e1 tem um separador aberto no portal, um outro separador ser\u00e1 aberto para o item. N\u00e3o existe limita\u00e7\u00e3o no n\u00famero de separadores que o utilizador pode abrir desta forma. Quando 'this open' est\u00e1 seleccionado, o utilzador n\u00e3o poder\u00e1 abrir mais que um separador para o item. Se j\u00e1 estiver aberto um separador para este item, o separador existente ser\u00e1 activado. Esta op\u00e7\u00e3o \u00e9 ignorada quando o se abre o item numa nova janela ou separador do browser.";
            a.icon = "Icon";
            a["icon hlp"] = "Opcional. Definie o ficheiro de icon a ser utilizado na navega\u00e7\u00e3o ou barra de ferramentas. O ficheiro do icon pode ser dos formatos GIF, JPG, or PNG. GIFs transparentes s\u00e3o recomendados. O caminho deve ser dado com absoluto desde a raiz da instala\u00e7\u00e3o do Atrium. Se nenhum icon for especificado, Atrium ir\u00e1 utilizar o icon por defeito para os itens de navega\u00e7\u00e3o. Nenhum icon ser\u00e1 mostrado para a barra de ferramentas, a n\u00e3o ser que seja especificado aqui.";
            a.parameter = "Par\u00e2metro";
            a["parameter hlp"] = "Opcional: Define o par\u00e2metro que ir\u00e1 ser passado para o Rich Display do programa quando este \u00e9 lan\u00e7ado.";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};

function Jd(b) {
    var a = {};
    switch (b) {
        case "runtimeMsg":
            a.closeMessage = "\u9019\u6703\u7d50\u675f\u4f60\u7684\u968e\u6bb5\u4f5c\u696d";
            a["no connection message"] = "\u7121\u6cd5\u9023\u63a5\u670d\u52d9\u5668\uff0c\u8acb\u6aa2\u67e5\u60a8\u7684\u9023\u63a5\u4e26\u91cd\u8a66";
            a["upload file limit"] = "\u8d85\u51fa&1\u500b\u6a94\u6848\u7684\u9650\u5236";
            a["upload size limit"] = "\u8d85\u51fa\u6bcf\u500b\u6a94\u6848&1MB\u7684\u9650\u5236";
            a["upload no files"] = "\u6c92\u6709\u9078\u4e0a\u6a94\u6848";
            a["upload duplicate file"] =
                "\u91cd\u8907\u9078\u4e0a\u76f8\u540c\u6a94\u6848";
            a["upload file exists"] = "\u7cfb\u7d71\u4e0a\u5df2\u5b58\u5728\u4e00\u500b\u6216\u591a\u500b\u76f8\u540c\u6a94\u6848";
            a["upload prevented"] = "\u9000\u51fa\u7a0b\u5e8f\u5df2\u963b\u6b62\u4e0a\u50b3\u64cd\u4f5c";
            a["upload input limit"] = "\u8d85\u51fa\u7e3d\u4e0a\u50b3\u6a94\u6848\u7684\u5bb9\u91cf\u9650\u5236";
            a["upload no session"] = "\u6c92\u6709\u9023\u4e0a\u6709\u6548\u968e\u6bb5\u4f5c\u696d";
            a["upload timeout"] = "\u8d85\u51fa\u4e0a\u50b3\u53ef\u7528\u6642\u9593";
            a["upload invalid response"] = "\u670d\u52d9\u5668\u6c92\u6709\u56de\u61c9\u6216\u56de\u61c9\u7121\u6548";
            a["upload cancelled"] = "\u4e0a\u50b3\u5df2\u53d6\u6d88";
            a["close browser text"] = "\u8acb\u95dc\u9589\u700f\u89bd\u5668\u5df2\u5b8c\u6210\u767b\u51fa\u7a0b\u5e8f";
            a["session ended text"] = "\u4f60\u7684\u968e\u6bb5\u4f5c\u696d\u5df2\u7d50\u675f";
            a["outside ucs2"] = "\u5b57\u7b26\u5df2\u8d85\u51faUCS-2\u7bc4\u570d";
            a["invalid number"] = "&1\u4e0d\u662f\u6709\u6548\u7684\u865f\u78bc";
            a["invalid length"] = "&1\u7684\u6578\u64da\u9577\u5ea6\u6216\u5c0f\u6578\u4f4d\u6578\u4e0d\u6b63\u78ba";
            a["invalid decimal"] = "&1\u5df2\u8d85\u51fa\u5c0f\u6578\u4f4d\u6578\u3002 (\u6700\u5927\uff1a &2)";
            a["invalid choice"] = '\u9078\u64c7" &1"\u7121\u6548,\u6709\u6548\u7684\u9078\u64c7\u662f\uff1a" &2" \u6216" &3"';
            a["invalid date"] = '"&1"\u4e0d\u662f\u6709\u6548\u65e5\u671f\u683c\u5f0f.\u6709\u6548\u65e5\u671f\u683c\u5f0f\uff1a &2';
            a["invalid time"] = '"&1"\u4e0d\u662f\u6709\u6548\u6642\u9593\u683c\u5f0f.\u6709\u6548\u6642\u9593\u683c\u5f0f\uff1a &2';
            a["invalid time stamp"] = '"&1"\u4e0d\u662f\u6709\u6548\u7684\u6642\u9593\u6233\u683c\u5f0f.\u6709\u6548\u6642\u9593\u6233\u683c\u5f0f\uff1a &2';
            a["invalid percent"] = "&1 \u4e0d\u662f\u6709\u6548\u7684\u5c0f\u6578";
            a["invalid digits"] = '"&1" \u5305\u542b\u592a\u591a\u6578\u5b57.\u6700\u5927\uff1a &2';
            a["exceeds whole"] = '"&1" \u8d85\u904e\u6574\u6578\u90e8\u5206\uff08 &2\u4f4d\uff09\u7684\u6700\u5927\u4f4d\u6578';
            a["exceeds decimal"] = '"&1" \u8d85\u904e\u4e86\u5c0f\u6578\u90e8\u5206\uff08 &2\u4f4d\uff09\u7684\u6700\u5927\u4f4d\u6578';
            a["zip too long"] = "\u90f5\u653f\u7de8\u78bc\u592a\u9577.\uff08\u6700\u5927\uff1a &1 \u4f4d\u6578\uff09";
            a["phone too long"] =
                "\u96fb\u8a71\u865f\u78bc\u592a\u9577.\uff08\u6700\u5927\uff1a &1 \u4f4d\u6578\uff09";
            a["ssno too long"] = "\u793e\u6703\u5b89\u5168\u865f\u78bc\u592a\u9577.\uff08\u6700\u5927\uff1a &1\u4f4d\u6578\uff09";
            a["invalid custom val"] = "\u81ea\u5b9a\u9a57\u8b49\u529f\u80fd\u7121\u6548";
            a["error custom val"] = "\u81ea\u5b9a\u9a57\u8b49\u529f\u80fd\u6709\u932f\u8aa4";
            a.ME = "\u5fc5\u9808\u8f38\u5165\u6578\u64da";
            a.MF = "\u60a8\u5fc5\u9808\u5b8c\u6210\u8f38\u5165\u6846\u7684\u6578\u64da\u8f38\u5165";
            a.required = "\u6b64\u6b04\u4f4d\u5fc5\u9808\u8f38\u5165";
            a["file required"] = "\u60a8\u5fc5\u9808\u81f3\u5c11\u9078\u64c7\u4e00\u500b\u6a94\u6848";
            a["signature overflow"] = "\u7c3d\u540d\u5716\u5df2\u8d85\u51fa\u4e86\u53ef\u5132\u5b58\u7684\u6700\u5927\u5bb9\u91cf,\u8acb\u6e05\u9664\u7c3d\u540d\u677f\u4e26\u91cd\u8a66";
            a.validValues = "\u8f38\u5165\u7684\u503c\u7121\u6548\uff0c\u6709\u6548\u503c\u70ba\uff1a";
            a["upload invalid type"] = "\u4e00\u500b\u6216\u591a\u500b\u6a94\u6848\u7684\u985e\u578b\u7121\u6548";
            a["invalid email"] = "\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u7121\u6548";
            a["session timed out"] = "\u60a8\u7684\u968e\u6bb5\u4f5c\u696d\u5df2\u8d85\u6642";
            a["invalid low range"] = "\u503c\u5fc5\u9808\u5927\u65bc\u6216\u7b49\u65bc &1";
            a["invalid high range"] = "\u503c\u5fc5\u9808\u5c0f\u65bc\u6216\u7b49\u65bc &1";
            a["invalid range"] = "\u6709\u6548\u7bc4\u570d\u662f &1\u5230 &2";
            a["unmonitored exception"] = "\u7a0b\u5f0f\u9047\u5230\u4e86\u7570\u5e38\u7684\u554f\u984c\uff0c\u8acb\u806f\u7d61\u7cfb\u7d71\u7ba1\u7406\u54e1\u5354\u52a9";
            a["loading x"] = "\u8f09\u5165 &1...";
            a["data src not specfd x"] =
                "\u6578\u64da\u6e90\u672a\u6307\u5b9a\u7d66 &1\u2026";
            a["name fld not specfd x"] = "\u540d\u7a31\u6b04\u4f4d\u6c92\u6709\u6307\u5b9a\u7d66 &1\u2026";
            a["val fld not specfd x"] = "\u6307\u5b9a\u503c\u6b04\u4f4d\u672a\u6307\u5b9a\u7d66 &1\u2026";
            a["failed to load x"] = "\u672a\u80fd\u8f09\u5165 &1\u2026";
            a["cannot rmv last col"] = "\u4f60\u4e0d\u80fd\u522a\u9664\u6700\u5f8c\u4e00\u5217";
            a["cannot find col"] = "\u627e\u4e0d\u5230\u7279\u5b9a\u7684columnId";
            a["subfile deletion"] = "\u4f60\u78ba\u5b9a\u8981\u522a\u9664\u5b50\u6a94\u6848\u55ce\uff1f";
            a["downloading x"] = "\u6b63\u5728\u4e0b\u8f09 &1";
            a["ie9 too low xlsxpics"] = "\u4e0d\u80fd\u5728IE9\u6216\u66f4\u4f4e\u7248\u672c\u4e4b\u4e0b\u5c0e\u51fa\u5716\u50cf";
            a["keyboard input inhibited"] = "\u9019\u4f4d\u7f6e\u4e0d\u6dee\u9375\u76e4\u8f38\u5165";
            a["num sessions exceeded"] = "\u5df2\u8d85\u51fa\u5141\u8a31\u7684\u968e\u6bb5\u4f5c\u696d\u7e3d\u6578";
            a["unable to load portal"] = "\u4e0d\u80fd\u8f09\u5165\u5165\u53e3\u8a2d\u7f6e\u6216\u5c0e\u822a\u9805\u76ee";
            a["unable to load macr act"] = "\u4e0d\u80fd\u8f09\u5165\u5de8\u96c6\u64cd\u4f5c";
            a["unable to load macr var"] = "\u4e0d\u80fd\u8f09\u5165\u5de8\u96c6\u8b8a\u6578\u503c";
            a["unable to load scrn lst"] = "\u4e0d\u80fd\u8f09\u5165\u5c4f\u5e55\u5217\u8868";
            a["unable to load new sett"] = "\u4e0d\u80fd\u8f09\u5165\u65b0\u7684\u8a2d\u7f6e";
            a["unable to load x"] = "\u4e0d\u80fd\u8f09\u5165 &1";
            a["unable to add x"] = "\u4e0d\u80fd\u589e\u52a0 &1";
            a["unable to rename x"] = "\u4e0d\u80fd\u91cd\u65b0\u547d\u540d &1";
            a["unable to delete x"] = "\u4e0d\u80fd\u522a\u9664 &1";
            a["unable to update x"] = "\u4e0d\u80fd\u66f4\u65b0 &1";
            a["unable to reassn x"] = "\u4e0d\u80fd\u91cd\u65b0\u5206\u914d &1";
            a["unable to reorder items"] = "\u4e0d\u80fd\u91cd\u65b0\u6392\u5217\u9805\u76ee";
            a["unable to save theme"] = "\u4e0d\u80fd\u5132\u5b58\u4e3b\u984c\u8a2d\u7f6e";
            a["unable eval script url"] = "\u4e0d\u80fd\u8a55\u4f30\u7db2\u7d61\u61c9\u7528\u7a0b\u5e8fURL";
            a["close browser text AT"] = "\u672a\u5132\u5b58\u7684\u8cc7\u6599\u6703\u5728\u7d50\u675f\u968e\u6bb5\u4f5c\u696d\u6642\u800c\u4e1f\u5931";
            a["close all tabs"] = "\u95dc\u9589\u6240\u6709\u6a19\u7c64\uff1f";
            a["close tab"] = "\u4f60\u60f3\u95dc\u9589\u9019\u500b\u6a19\u7c64\u55ce\uff1f";
            a["invalid script url"] = "\u7db2\u7d61\u61c9\u7528\u7a0b\u5e8fURL\u7684\u8f38\u5165\u503c\u7121\u6548";
            a["unrecognized format"] = "\u7121\u6cd5\u8b58\u5225\u7684\u683c\u5f0f";
            a["screen already defined"] = '\u5c4f\u5e55 "&1" \u5df2\u88ab\u5b9a\u7fa9';
            a["macro already defined"] = '\u5de8\u96c6 "&1" \u5df2\u88ab\u5b9a\u7fa9';
            a["no screen ids"] = "\u6c92\u6709\u986f\u793a\u5c4f\u5e55\u6a19\u7c64\u865f\u78bc";
            a["confirm delete"] = "\u78ba\u8a8d\u522a\u9664";
            a["no actions"] = "\u6c92\u6709\u8981\u986f\u793a\u7684\u52d5\u4f5c";
            a["msg action input var"] = '\u5728\u884c &2\u5217 &3\u7684\u6b04\u4f4d\u4e2d\u8f38\u5165\u8b8a\u6578"&1"\u7684\u5167\u503c';
            a["msg action input user"] = "\u5728\u884c &1\u5217 &2\u7684\u6b04\u4f4d\u4e2d\u8f38\u5165\u7576\u524d\u7528\u6236\u5e33\u865f";
            a["msg action input js"] = "\u5728\u884c &2\u5217 &3\u8655\u8f38\u5165JavaScript\u8868\u9054\u5f0f<strong>&1</strong>\u7684\u7d50\u679c";
            a["msg action input other"] = '\u5728\u884c &2\u5217 &3\u7684\u5b57\u6bb5\u4e2d\u8f38\u5165"&1"\u7684\u5167\u503c';
            a["msg presskey var"] = '\u8acb\u6309\u4e0b\u5728\u8b8a\u91cf"&1"\u5df2\u5b9a\u7fa9\u7684\u9375';
            a["msg presskey other"] = '\u6309\u4e0b"&1"\u9375';
            a["msg del scrn from macro"] = "\u4f60\u78ba\u5b9a\u8981\u5f9e\u9019\u500b\u5de8\u96c6\u4e2d\u522a\u9664\u5df2\u9078\u7684\u5c4f\u5e55\uff1f<br />\u6240\u6709\u76f8\u95dc\u7684\u64cd\u4f5c\u4e5f\u5c07\u88ab\u522a\u9664";
            a["choose scrn macro"] = "\u9078\u64c7\u4e00\u500b\u5c4f\u5e55\u6216\u5de8\u96c6\u7684\u5c6c\u6027";
            a["choose a nav or toolbar"] = "\u9078\u64c7\u5c0e\u822a\u6216\u5de5\u5177\u6b04\u9805\u76ee\u7684\u5c6c\u6027";
            a["confirm del sel x"] = "\u4f60\u78ba\u5b9a\u8981\u522a\u9664\u6240\u9078\u7684 &1\u55ce\uff1f";
            a["permission settings"] = "\u6b0a\u9650\u8a2d\u7f6e";
            a["adding x"] = "&1 \u589e\u52a0\u4e2d\u2026";
            a["deleting x"] = "&1 \u522a\u9664\u4e2d\u2026";
            a["reassigning x"] = "&1 \u91cd\u65b0\u5206\u914d\u4e2d\u2026";
            a.loading = "\u6b63\u5728\u8f09\u5165\u4e2d\u2026";
            a.saving = "\u6b63\u5728\u5132\u5b58\u4e2d\u2026";
            a["x added"] = "&1 \u5df2\u589e\u52a0";
            a["x deleted"] = "&1 \u5df2\u522a\u9664";
            a["x reassigned"] = "&1 \u5df2\u91cd\u65b0\u5206\u914d";
            a["x updated"] = "&1 \u5df2\u66f4\u65b0";
            a["x saved"] = "&1 \u5df2\u5132\u5b58";
            a["msg del group"] = '\u4f60\u78ba\u5b9a\u8981\u522a\u9664\u7d44\u5225"&1"\u55ce\uff1f<br /><br />\u522a\u9664\u7d44\u5225\u4e5f\u6703\u522a\u9664\u4efb\u4f55\u5b50\u7d44\u5225\u548c\u4efb\u4f55\u95dc\u806f\u7684\u7528\u6236\u3002<br /><br />\u4f60\u78ba\u5b9a\u8981\u7e7c\u7e8c\u55ce\uff1f';
            a["conf reassign users 1"] = "\u4f60\u78ba\u5b9a\u8981\u91cd\u65b0\u5206\u914d\u55ce ";
            a["conf reassign users 2a"] = '\u7528\u6236 "&1" ';
            a["conf reassign users 2b"] =
                "\u5df2\u9078\u5b9a\u7684\u7528\u6236 ";
            a["conf reassign users 3"] = ' \u81f3\u7d44\u5225 "&1"\uff1f';
            a["conf reassign group"] = '\u4f60\u78ba\u5b9a\u8981\u5c07\u7d44\u5225 "&1" \u91cd\u65b0\u5206\u914d\u7d66\u7d44\u5225 "&2" \u55ce\uff1f';
            a["conf delete users 1"] = "\u4f60\u78ba\u5b9a\u8981\u522a\u9664\u55ce ";
            a["conf delete users 2a"] = '\u7528\u6236 "&1"\uff1f';
            a["conf delete users 2b"] = "\u5df2\u9078\u5b9a\u7684\u7528\u6236\uff1f";
            a["no users"] = "\u6c92\u6709\u7528\u6236\u53ef\u4ee5\u986f\u793a";
            a["cannot delete own grp"] =
                "\u4f60\u4e0d\u80fd\u522a\u9664\u81ea\u5df1\u7684\u7d44\u5225.";
            a["cannot delete own usr"] = "\u60a8\u4e0d\u80fd\u522a\u9664\u81ea\u5df1\u7684\u7528\u6236\u5e33\u865f.";
            a["not auth reassign prf"] = "\u60a8\u6c92\u6709\u5141\u8a31\u53ef\u4ee5\u91cd\u65b0\u5206\u914d\u5e33\u865f\u7d66\u81ea\u5df1.";
            a["typeselect macro name"] = "\u8f38\u5165\u6216\u9078\u64c7\u5de8\u96c6\u540d\u7a31\u2026";
            a["any child items will"] = "\u6240\u6709\u5b50\u9805\u76ee\u4e5f\u5c07\u88ab\u522a\u9664.";
            a["password must be"] = "\u5bc6\u78bc\u5fc5\u9808\u81f3\u5c11\u70ba6\u500b\u5b57\u7b26.";
            a["type or sel home page"] = "\u8f38\u5165\u6216\u9078\u64c7\u4e3b\u9801\u2026";
            a["x is already in list"] = '"&1" \u5df2\u7d93\u5728\u5217\u8868\u4e2d.';
            a["x is not valid libname"] = '"&1" \u4e0d\u662f\u6709\u6548\u7684\u6a94\u6848\u5eab\u540d\u7a31.';
            a["no libraries in list"] = "\u6c92\u6709\u5217\u51fa\u6a94\u6848\u5eab";
            a["add libl entry"] = "\u6a94\u6848\u5eab\u5217\u8868\u6dfb\u52a0\u5167\u5bb9";
            a["would you like add ano"] = "\u4f60\u60f3\u6dfb\u52a0\u53e6\u4e00\u500b\u55ce\uff1f";
            a["already in suppl grp x"] =
                '\u7528\u6236\u5df2\u5b58\u5728\u88dc\u5145\u7d44\u5225"&1".';
            break;
        case "runtimeText":
            a["upload select text"] = "\u9078\u64c7\u6a94\u6848";
            a["upload clear text"] = "\u6e05\u9664";
            a["upload remove text"] = "\u522a\u9664";
            a["upload upload text"] = "\u4e0a\u50b3";
            a["upload drophere text"] = "\u5728\u6b64\u653e\u4e0b\u6a94\u6848";
            a["upload browser unsupported"] = "\u62d6/\u653e\u6a94\u6848\u529f\u80fd\u53ea\u9069\u7528\u5728Internet Explorer 10\u6216\u66f4\u9ad8\u7248\u672c\uff0cChrome\u6216Firefox \u700f\u89bd\u5668\u4e0a\u57f7\u884c.";
            a["upload finished text"] = "\u5b8c\u6210";
            a["excel export text"] = "\u5c0e\u51fa\u81f3Excel";
            a["export to x"] = "\u5c0e\u51fa\u81f3 &1";
            a["filter text"] = "\u7be9\u9078";
            a["find text"] = "\u5c0b\u627e";
            a["reset data"] = "\u91cd\u7f6e";
            a["remove filters text"] = "\u79fb\u9664\u6240\u6709\u7be9\u9078";
            a["displayed columns"] = "\u986f\u793a\u683c\u5167\u9805\u76ee\u5167\u5bb9";
            a["next link text"] = "\u4e0b\u4e00\u500b";
            a["previous link text"] = "\u4e0a\u4e00\u500b";
            a["sort ascending text"] = "\u6309\u7531\u5c0f\u800c\u5927\u9806\u5e8f";
            a["sort descending text"] = "\u6309\u7531\u5927\u800c\u5c0f\u9806\u5e8f";
            a["sort..."] = "Sort...";
            a.sort = "Sort";
            a["sort multiple"] = "Sort Multiple Columns";
            a.column = "Column";
            a.direction = "Direction";
            a.order = "Order";
            a.row = "\u4e00\u884c";
            a.rows = "\u4e00\u6392";
            a.page = "\u9801";
            a.collapseAll = "\u5168\u90e8\u6298\u56de";
            a.expandAll = "\u5168\u90e8\u5c55\u958b";
            a.user = "\u7528\u6236";
            a.password = "\u5bc6\u78bc";
            a["sign on"] = "\u767b\u9304";
            a.pui = "Profound UI";
            a["pui sign on"] = a.pui + " " + a["sign on"];
            a.pjs = "Profound.js";
            a["pjs sign on"] = a.pjs + " " + a["sign on"];
            a["message id"] = "\u8a0a\u606f\u865f\u78bc";
            a["ctlr job"] = "\u63a7\u5236\u5668\u4f5c\u696d";
            a["app job"] = "\u61c9\u7528\u7a0b\u5e8f\u4f5c\u696d";
            a["joblog download"] = "\u4e0b\u8f09\u5de5\u4f5c\u65e5\u8a8c";
            a["curr user"] = "\u7576\u524d\u7528\u6236";
            a["remote ip"] = "\u9060\u7aefIP\u5730\u5740";
            a["remote port"] = "\u9060\u7aef\u9023\u63a5\u57e0";
            a.severity = "\u56b4\u91cd\u6027";
            a.date = "\u65e5\u671f";
            a.time = "\u6642\u9593";
            a.program = "\u7a0b\u5f0f";
            a.procedure = "\u7a0b\u5e8f";
            a.lines = "\u7dda(S)";
            a.message = "\u8a0a\u606f";
            a["new session"] = "\u65b0\u7684\u968e\u6bb5\u4f5c\u696d";
            a.close = "\u95dc\u9589";
            a["current password"] = "\u7576\u524d\u5bc6\u78bc";
            a["new password"] = "\u65b0\u5bc6\u78bc";
            a["repeat new password"] = "\u91cd\u8907\u65b0\u5bc6\u78bc";
            a.submit = "\u63d0\u4ea4";
            a.exit = "\u9000\u51fa";
            a.warning = "\u8b66\u544a";
            a["change password"] = "\u66f4\u6539\u5bc6\u78bc";
            a.cancel = "\u53d6\u6d88";
            a["find text"] = "\u5c0b\u627e";
            a["remove filter"] = "\u79fb\u9664\u7be9\u9078";
            a.chart = "\u5716\u8868";
            a.section = "\u90e8\u4efd";
            a.version = "\u539f\u7248\u672c";
            a.fixPack = "\u4fee\u5fa9\u7248";
            a.yes = "\u662f";
            a.no = "\u5426";
            a.settings = "\u8a2d\u7f6e";
            a.favorites = "\u6536\u85cf\u593e";
            a["type query press en"] = "\u9375\u5165\u67e5\u8a62\u4e4b\u5f8c\u6309\u4e0bEnter\u9375";
            a["add to favorites"] = "\u6dfb\u52a0\u5230\u6536\u85cf\u593e";
            a["rmv from favorites"] = "\u5f9e\u6536\u85cf\u593e\u4e2d\u79fb\u9664";
            a["please wait"] = "\u8acb\u7a0d\u5019\u2026";
            a["control panel"] = "\u63a7\u5236\u9762\u677f";
            a["my settings"] = "\u6211\u7684\u8a2d\u7f6e";
            a["about atrium"] = "\u95dc\u65bcAtrium";
            a["about atrium msg"] = a.version + " " + window.pui.baseVersion + ", " + a.fixPack + " " + window.pui.fixPackVersion + "<br /><br />\u7248\u6b0a &copy 1999-" + (new Date).getFullYear() + " Profound Logic Software, Inc.<br /><br />\u8b66\u544a\uff1a\u6b64\u8a08\u7b97\u6a5f\u7a0b\u5e8f\u53d7\u7248\u6b0a\u6cd5\u4fdd\u8b77<br />\u548c\u570b\u969b\u689d\u7d04\u3002\u672a\u7d93\u6388\u6b0a\u7684\u8907\u88fd\u6216<br />\u8a72\u7a0b\u5e8f\u4efb\u4f55\u90e8\u5206\u7684\u5206\u767c\u53ef\u80fd\u5c0e\u81f4<br />\u56b4\u91cd\u7684\u6c11\u4e8b\u548c\u5211\u4e8b\u8655\u7f70\uff0c\u4e26\u53ef\u80fd\u6839\u64da\u5c08\u5229\u6cd5\u5f8b\u898f\u5b9a\u88ab\u8d77\u8a34<br />\u3002<br /><br />\u3002\u201d\u7f8e\u570b\u5c08\u5229\u865f8,667,405 B2\u3002";
            a.item = "\u9805\u76ee";
            a["open selected item"] = "\u6253\u958b\u5df2\u9078\u7684\u9805\u76ee";
            a.of = "\u7684";
            a["no results to dsp"] = "\u6c92\u6709\u7d50\u679c\u986f\u793a";
            a["displaying results"] = "\u7d50\u679c\u986f\u793a\u4e2d";
            a["search results"] = "\u641c\u7d22\u7d50\u679c";
            a["new folder"] = "\u65b0\u5efa\u6587\u4ef6\u593e";
            a.rename = "\u91cd\u65b0\u547d\u540d";
            a.description = "\u8aaa\u660e";
            a.ok = "\u78ba\u5b9a";
            a.add = "\u589e\u52a0";
            a["add x"] = "\u589e\u52a0 &1";
            a["delete"] = "\u522a\u9664";
            a.screen = "\u5c4f\u5e55";
            a.screens = "\u5c4f\u5e55";
            a.macro = "\u5de8\u96c6";
            a.macros = "\u5de8\u96c6";
            a["screen id"] = "\u5c4f\u5e55\u8b58\u5225\u865f\u78bc";
            a["screen ids"] = "\u5c4f\u5e55\u8b58\u5225\u865f\u78bc";
            a["field row"] = "\u6b04\u4f4d\u884c";
            a["field column"] = "\u6b04\u4f4d\u5217";
            a["field value"] = "\u6b04\u4f4d\u503c";
            a.value = "\u6578\u503c";
            a.action = "\u52d5\u4f5c";
            a.actions = "\u52d5\u4f5c";
            a["detect once"] = "\u6aa2\u6e2c\u4e00\u6b21";
            a["delete screen"] = "\u522a\u9664\u5c4f\u5e55";
            a["genie macros"] = "Genie \u5de8\u96c6";
            a["screen name"] =
                "\u5c4f\u5e55\u540d\u7a31";
            a.identifier = "\u8b58\u5225";
            a.identifiers = "\u8b58\u5225";
            a["macro name"] = "\u5de8\u96c6\u540d\u7a31";
            a["close browser wintab"] = "\u95dc\u9589\u700f\u89bd\u5668\u6216\u700f\u89bd\u5668\u6a19\u7c64";
            a.select = "\u9078\u64c7";
            a["write value in field"] = "\u5728\u6b04\u4f4d\u4e2d\u5beb\u5165\u6578\u64da\u503c";
            a["press a key"] = "\u6309\u4e00\u500b\u9375";
            a["a literal value"] = "\u4e00\u500b\u6587\u5b57\u503c";
            a["a variable value"] = "\u4e00\u500b\u53ef\u8b8a\u6578\u503c";
            a["cur user profile"] =
                "\u7576\u524d\u7528\u6236";
            a["result js expr"] = "JavaScript\u8868\u793a\u7684\u7d50\u679c";
            a["action data"] = "\u57f7\u884c\u6578\u64da";
            a["data type"] = "\u6578\u64da\u985e\u578b";
            a.users = "\u7528\u6236";
            a["all groups"] = "\u5168\u90e8\u7d44\u5225";
            a["supplemental groups"] = "\u88dc\u5145\u7d44\u5225";
            a["users w primary grp"] = '\u7528\u6236\u7684\u4e3b\u8981\u7d44\u5225\u662f"&1"';
            a["users w suppl grp"] = '\u88dc\u5145\u7d44\u5225\u7684\u7528\u6236\u662f\u70ba"&1"';
            a.group = "\u7d44\u5225";
            a.groups = "\u7d44\u5225";
            a.edit = "\u7de8\u8f2f";
            a["edit x"] = "\u7de8\u8f2f &1";
            a.manager = "\u7d93\u7406";
            a.administrator = "\u7ba1\u7406\u54e1";
            a["primary group"] = "\u4e3b\u8981\u7d44\u5225";
            a["delete x"] = "\u522a\u9664 &1";
            a["reassign x"] = "\u91cd\u65b0\u5206\u914d &1";
            a["navigation item"] = "\u5c0e\u822a\u9805\u76ee";
            a["navigation items"] = "\u5c0e\u822a\u9805\u76ee";
            a["navigation panel"] = "\u5c0e\u822a\u9762\u677f";
            a["home pages"] = "\u4e3b\u9801";
            a["menu group"] = "\u83dc\u55ae\u7d44\u5225";
            a["menu item"] = "\u83dc\u55ae\u9805\u76ee";
            a["toolbar items"] =
                "\u5de5\u5177\u6b04\u9805\u76ee";
            a.toolbar = "\u5de5\u5177\u6b04";
            a.button = "\u6309\u9215";
            a["pulldown menu"] = "\u4e0b\u62c9\u83dc\u55ae";
            a["pulldown menu item"] = "\u4e0b\u62c9\u83dc\u55ae\u9805\u76ee";
            a["separator bar"] = "\u5206\u9694\u6b04";
            a.spacer = "\u5206\u9694\u7269";
            a["item details"] = "\u8ca8\u54c1\u660e\u7d30";
            a["item number"] = "\u8ca8\u54c1\u865f\u78bc";
            a["item type"] = "\u8ca8\u54c1\u985e\u578b";
            a["genie macro"] = "Genie \u5de8\u96c6";
            a["rdf application"] = "Rich Display \u6a94\u6848\u61c9\u7528";
            a["web application"] =
                "\u7db2\u9801\u61c9\u7528\u7a0b\u5f0f";
            a["pc command"] = "PC\u547d\u4ee4";
            a["dspf program library"] = "\u986f\u793a\u6a94\u6848\u7684\u7a0b\u5f0f\u5eab";
            a["dspf program"] = "\u986f\u793a\u6a94\u6848\u7a0b\u5f0f";
            a["variable name x"] = "\u8b8a\u6578\u540d\u7a31 &1";
            a["a tab in the portal"] = "\u5165\u53e3\u7684\u6a19\u7c64";
            a["a new browser wind"] = "\u65b0\u7684\u700f\u89bd\u5668\u8996\u7a97\u6216\u6a19\u7c64";
            a.update = "\u66f4\u65b0";
            a.fill = "\u586b\u5165";
            a.permissions = "\u6b0a\u9650";
            a["user/group name"] = "\u7528\u6236/\u7d44\u5225\u540d\u7a31";
            a["all users groups"] = "\u6240\u6709\u7528\u6236\u548c\u7d44\u5225";
            a.type = "\u985e\u578b";
            a.access = "\u9032\u5165";
            a.allow = "\u5141\u8a31";
            a.disallow = "\u7981\u6b62";
            a.navigation = "\u5c0e\u822a";
            a["add usrgrp perm"] = "\u6dfb\u52a0\u7528\u6236/\u7d44\u5225\u7684\u6b0a\u9650";
            a.membership = "\u6703\u54e1";
            a.none = "\u6c92\u6709";
            a.remove = "\u79fb\u9664";
            a.appearance = "\u5916\u89c0";
            a["home page"] = "\u4e3b\u9801";
            a.tree = "\u6a39";
            a.accordion = "\u6298\u53e0\u7684";
            a["min search chars"] = "\u6700\u5c0f\u641c\u7d22\u5b57\u7b26";
            a["libl for rdf apps"] = "RICH Display \u6a94\u6848\u6240\u9700\u8981\u7684\u6a94\u6848\u5eab\u5217\u8868";
            a["library list"] = "\u6a94\u6848\u5eab\u5217\u8868";
            a.library = "\u6a94\u6848\u5eab";
            a["use atrium def libl"] = "\u4f7f\u7528Atrium\u9ed8\u8a8d\u6a94\u6848\u5eab";
            a["use jobd libl"] = "\u4f7f\u7528\u4f86\u81eaJOBD\u7684\u6a94\u6848\u5eab";
            a["specify libl"] = "\u6307\u5b9a\u7684\u6a94\u6848\u5eab\u5217\u8868";
            a.up = "\u5411\u4e0a";
            a.down = "\u5411\u4e0b";
            a["move up"] = "\u79fb\u4e0a";
            a["move down"] = "\u79fb\u4e0b";
            a["global settings"] = "\u7d9c\u5408\u7684\u8a2d\u7f6e";
            a.save = "\u5132\u5b58";
            a["add usr to supp grp"] = "\u6dfb\u52a0\u7528\u6236\u5230\u88dc\u5145\u7d44\u5225";
            a["member of"] = "\u6210\u54e1";
            a["member of hlp"] = "\u8a72\u7528\u6236\u6240\u5c6c\u7684\u7d44\u5225";
            a["group name"] = "\u7d44\u5225\u540d\u7a31";
            a["group name hlp"] = "\u8a72\u7d44\u5225\u7684\u986f\u793a\u540d\u7a31";
            a["inherit settings"] = "\u7e7c\u627f\u8a2d\u7f6e";
            a["inherit settings hlp"] = "\u7576\u6b64\u9078\u9805\u6210\u7acb\uff0c\u8a72\u7528\u6236/\u7d44\u5225\u5c07\u7e7c\u627f\u5176\u4e0a\u4e00\u5c64\u8a2d\u7f6e\u3002\u7576\u6b64\u9078\u9805\u4e0d\u6210\u7acb\uff0c\u7528\u6236/\u7d44\u5225\u5c07\u64c1\u6709\u81ea\u5df1\u7684\u8a2d\u7f6e\u6578\u64da";
            a["user name"] = "\u7528\u6236\u540d\u7a31";
            a["user name hlp"] = "\u6b64\u7528\u6236\u7684\u986f\u793a\u540d\u7a31";
            a["access role"] = "\u8a2a\u554f\u7684\u8eab\u4efd";
            a["access role hlp"] = "\u63a7\u5236\u6b64\u7528\u6236\u7684\u8a2a\u554f\u89d2\u8272\uff0c\u7ba1\u7406\u54e1\u80fd\u5920\u7ba1\u7406\u6240\u6709\u7d44\u5225\u548c\u7528\u6236\uff0c\u4e5f\u53ef\u4ee5\u63a7\u5236\u61c9\u7528\u7a0b\u5e8f\u6b0a\u9650\uff0c\u7ba1\u7406\u54e1\u80fd\u5920\u5728\u81ea\u5df1\u7684\u7d44\u5225\u4e2d\u914d\u7f6e\u7528\u6236\u548c\u7d44\u5225\u8a2d\u7f6e\uff0c\u7136\u800c\u7528\u6236\u662f\u6c92\u6709\u6b64\u7279\u6b0a\u7684.";
            a["can edit profile"] = "\u80fd\u5920\u7de8\u8f2f\u7528\u6236\u5e33\u865f";
            a["can edit profile hlp"] = '\u5141\u8a31\u7528\u6236\u7de8\u8f2f"\u5916\u89c0"\u548c"\u5c0e\u822a"\u7684\u8a2d\u7f6e\uff0c\u4e26\u53ef\u66f4\u6539\u5bc6\u78bc\uff0c\u4f46\u7528\u6236\u4e0d\u53ef\u7de8\u8f2f\u5176\u4ed6\u8a2d\u7f6e';
            a["user profile"] = "\u7528\u6236\u5e33\u865f";
            a["user profile hlp"] = "\u7528\u6236\u540d\u7a31\u3002\u7528\u6236\u540d\u7a31\u6709\u5340\u5206\u5927\u5c0f\u5beb\uff0c\u9664\u975e\u4f7f\u7528IBM i\u5e33\u865f.\u3002";
            a["password hlp"] = "\u8a2d\u7f6e/\u91cd\u7f6e\u5bc6\u78bc\u3002\u5bc6\u78bc\u6709\u5340\u5206\u5927\u5c0f\u5beb";
            a["conf password"] = "\u78ba\u8a8d\u5bc6\u78bc";
            a["conf password hlp"] = "\u7576\u8a2d\u7f6e/\u91cd\u7f6e\u5bc6\u78bc\u6642\uff0c\u78ba\u5b9a\u5bc6\u78bc\u5fc5\u9808\u8207\u65b0\u5bc6\u78bc\u5b8c\u5168\u76f8\u540c\uff0c\u5bc6\u78bc\u6709\u5340\u5206\u5927\u5c0f\u5beb";
            a["browser title"] = "\u700f\u89bd\u5668\u6a19\u984c";
            a["browser title hlp"] = "\u8a2d\u7f6e\u5c07\u6703\u5728\u700f\u89bd\u5668\u986f\u793a\u7684\u6587\u5b57";
            a["show banner"] = "\u986f\u793a\u6a19\u8a9e";
            a["show banner hlp"] = "\u5982\u679c\u4f60\u4e0d\u5e0c\u671b\u5728\u5165\u53e3\u7db2\u7ad9\u9802\u90e8\u986f\u793a\u6a19\u8a9e\uff0c\u8acb\u4e0d\u8981\u9078\u6b64\u9078\u9805";
            a["banner height"] = "\u6a19\u8a9e\u9ad8\u5ea6";
            a["banner height hlp"] = "\u4ee5\u50cf\u7d20\u70ba\u55ae\u4f4d\u8a2d\u7f6e\u5165\u53e3\u7db2\u7ad9\u9802\u90e8\u6a19\u8a9e\u7684\u9ad8\u5ea6,\u5982\u679c\u60a8\u9078\u64c7\u4e0d\u986f\u793a\u6a19\u8a9e,\u5247\u4e0d\u7528\u7406\u6703\u6b64\u8a2d\u7f6e.\u6709\u6548\u503c\u70ba0-600\u50cf\u7d20";
            a["banner url"] = "\u6a19\u8a9e\u7db2\u5740";
            a["banner url hlp"] = "\u8a2d\u7f6e\u6a19\u8a9e\u5167\u5bb9\u6240\u5728\u7684\u7db2\u5740\uff0c\u53ef\u4ee5\u662f\u7d55\u5c0d\u6216\u5b8c\u5168\u6709\u6548\u7684\u7db2\u5740";
            a.theme = "\u4e3b\u984c";
            a["theme hlp"] = '\u8a2d\u7f6e\u9ed8\u8a8d\u4e3b\u984c\uff0c\u5982\u679c"<strong>\u5141\u8a31\u7528\u6236\u9078\u64c7\u4e3b\u984c"</strong>\u5df2\u555f\u7528\uff0c\u5247\u500b\u4eba\u7528\u6236\u53ef\u4ee5\u66f4\u6539\u4e3b\u984c\u3002';
            a["allow sel theme"] = "\u5141\u8a31\u7528\u6236\u9078\u64c7\u4e3b\u984c";
            a["allow sel theme hlp"] = "\u5982\u679c\u9078\u6b64\u9805\u76ee\uff0c\u7528\u6236\u5c07\u80fd\u5920\u4f7f\u7528\u5de5\u5177\u6b04\u4e2d\u7684\u63a7\u5236\u9078\u9805\u4f86\u9078\u64c7\u6240\u9700\u7684\u4e3b\u984c\u3002";
            a["show menu search"] = "\u986f\u793a\u83dc\u55ae\u641c\u7d22";
            a["show menu search hlp"] = "\u4e0d\u9078\u986f\u793a\u83dc\u55ae\u641c\u7d22\u9078\u9805,\u4ee5\u4f7f\u83dc\u55ae\u4e2d\u7684\u641c\u7d22\u529f\u80fd\u7121\u6548.";
            a["show fav sys"] = "\u986f\u793a\u6536\u85cf\u593e\u7cfb\u7d71";
            a["show fav sys hlp"] = "\u53d6\u6d88\u5f67\u7981\u7528\u6536\u85cf\u593e\u7cfb\u7d71";
            a["show fav start"] = "\u5728\u555f\u52d5\u6642\u986f\u793a\u6536\u85cf\u593e";
            a["show fav start hlp"] = "\u5982\u679c\u9078\u6b64\u9805\u76ee\uff0c\u6536\u85cf\u593e\u9762\u677f\u6703\u5728\u555f\u52d5\u6642\u986f\u793a\uff0c\u5426\u5247\u6703\u986f\u793a\u5c0e\u822a\u9762\u677f\uff08\u9ed8\u8a8d\uff09\u3002\u6b64\u9078\u9805\u50c5\u5728\u5df2\u555f\u7528\u6536\u85cf\u593e\u7cfb\u7d71\u6642\u53ef\u7528";
            a["limit num sessn"] =
                "\u9650\u5236\u968e\u6bb5\u4f5c\u6578\u6578\u91cf";
            a["limit num sessn hlp"] = "\u6b64\u7528\u6236/\u7d44\u5225\u5df2\u7d66\u5141\u8a31\u4f7f\u7528\u9019\u500b\u6578\u91cf\u7684Atrium\u968e\u6bb5\u4f5c\u696d\uff0c\u5982\u6578\u503c\u70ba\u96f6\u8868\u793a\u5141\u8a31\u7121\u9650\u5236\u7684\u968e\u6bb5\u4f5c\u696d\uff0c\u8a72\u9650\u5236\u9069\u7528\u65bc\u6bcf\u500bWeb\u700f\u89bd\u5668";
            a["show hmpg start"] = "\u5728\u555f\u52d5\u6642\u986f\u793a\u4e3b\u9801";
            a["show hmpg start hlp"] = "\u5982\u679c\u9078\u6b64\u9805\u76ee\uff0c\u5c07\u5728\u555f\u52d5\u6642\u5728\u5165\u53e3\u7db2\u7ad9\u57f7\u884c\u81ea\u5b9a\u7fa9\u7684\u4e3b\u9801\u3002";
            a["home page url"] = "\u4e3b\u9801\u7db2\u5740";
            a["home page url hlp"] = "\u8a2d\u7f6e\u4e3b\u9801\u5167\u5bb9\u6240\u5728\u7684\u7db2\u5740\uff0c\u53ef\u4ee5\u662f\u7d55\u5c0d\u6216\u5b8c\u5168\u6709\u6548\u7684\u7db2\u5740";
            a["navi pnl title"] = "\u5c0e\u822a\u9762\u677f\u6a19\u984c";
            a["navi pnl title hlp"] = "\u8a2d\u7f6e\u5c07\u5728\u5c0e\u822a\u9762\u677f\u6a19\u984c\u6b04\u4e2d\u986f\u793a\u7684\u6587\u5b57";
            a["navi pnl width"] = "\u5c0e\u822a\u9762\u677f\u958b\u59cb\u5bec\u5ea6";
            a["navi pnl width hlp"] =
                "\u4ee5\u50cf\u7d20\u70ba\u55ae\u4f4d\u8a2d\u7f6e\u5c0e\u822a\u9762\u677f\u7684\u8d77\u59cb\u5bec\u5ea6\uff0c\u7528\u6236\u53ef\u6839\u64da\u9700\u8981\u8abf\u6574\u9762\u677f\u5927\u5c0f\u6216\u96b1\u85cf\u9762\u677f\uff0c\u6709\u6548\u503c\u70ba0-2000\u50cf\u7d20";
            a["navi type"] = "\u5c0e\u822a\u985e\u578b";
            a["navi type hlp"] = '\u63a7\u5236\u5c0e\u822a\u9762\u677f\u4e2d\u4f7f\u7528\u7684\u83dc\u55ae\u985e\u578b "\u6a39"\u6216"\u53ef\u6298\u53e0\u7684"\u3002\u6b64\u8a2d\u7f6e\u4e0d\u9069\u7528\u65bc\u5de5\u5177\u6b04';
            a["single click nav"] = "\u55ae\u64ca\u5c0e\u822a";
            a["single click nav hlp"] = "\u5982\u679c\u9078\u6b64\u9805\u76ee\uff0c\u5c0e\u822a\u9762\u677f\u4e2d\u7684\u83dc\u55ae\u9805\u76ee\u5c07\u53ef\u55ae\u64ca\u555f\u52d5\uff0c\u5426\u5247\u53ea\u6703\u96d9\u64ca\u555f\u52d5\uff0c\u6b64\u8a2d\u7f6e\u4e0d\u9069\u7528\u65bc\u5de5\u5177\u6b04";
            a["current library"] = "\u7576\u524d\u6a94\u6848\u5eab";
            a["current library hlp"] = "\u6307\u5b9a\u7576\u524d\u6a94\u6848\u5eab\uff0c*USRPRF\u6216*CRTDFT";
            a["job descr"] =
                "\u4f5c\u696d\u63cf\u8ff0\u6a94";
            a["job descr hlp"] = "\u6307\u5b9a\u4f5c\u696d\u63cf\u8ff0\u6a94\u4ee5\u8a2d\u7f6e\u6a94\u6848\u5eab\u5217\u8868\u3002*\u5982\u679cAtrium\u7528\u6236\u662fIBM i\u7528\u6236\uff0c\u5247\u53ef\u4ee5\u6307\u5b9a\u7528\u6236\u5e33\u865f";
            a["job descr lib"] = "\u4f5c\u696d\u63cf\u8ff0\u6a94\u7684\u6a94\u6848\u5eab";
            a["job descr lib hlp"] = "\u6307\u5b9a\u4f5c\u696d\u63cf\u8ff0\u6a94\u7684\u6a94\u6848\u5eab\u3002*\u53ef\u4ee5\u6307\u5b9aLIBL\u6216*CURLIB\u3002";
            a["item name"] =
                "\u9805\u76ee\u540d\u7a31";
            a["item name hlp"] = "\u8a2d\u7f6e\u5c0e\u822a\u6216\u5de5\u5177\u6b04\u9805\u76ee\u7684\u986f\u793a\u540d\u7a31";
            a["action type"] = "\u904b\u4f5c\u985e\u578b";
            a["action type hlp"] = "\u8a2d\u7f6e\u6b64\u9805\u76ee\u555f\u52d5\u6642\u61c9\u7528\u7a0b\u5e8f\u7684\u985e\u578b";
            a.url = "\u7db2\u5740";
            a["url hlp"] = "\u8a2d\u7f6eWeb\u61c9\u7528\u7a0b\u5e8f\u7684\u7db2\u5740\uff0c\u53ef\u4ee5\u6307\u5b9a\u70ba\u7d55\u5c0d\u8def\u5f91\u6216\u5b8c\u5168\u6709\u6548\u7684\u7db2\u5740\uff0c\u53ef\u4ee5\u5728\u7db2\u5740\u4e2d\u6307\u5b9a\u67e5\u8a62\u5b57\u7b26\u7684\u53c3\u6578";
            a["genie url"] = "Genie \u7db2\u5740";
            a["genie url hlp"] = "\u8a2d\u7f6e\u7528\u65bc\u555f\u52d5Genie\u7684\u7db2\u5740\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5c07\u4f7f\u7528\u9ed8\u8a8d\u7684Genie \u7db2\u5740 /profoundui/auth/genie \u3002\u5982\u679c\u80fd\u63d0\u4f9b\u5099\u7528Genie \u7db2\u5740\u6216\u67e5\u8a62\u5b57\u7b26\u7684\u53c3\u6578\u90a3\u5c31\u5f88\u6709\u7528\u4e86\uff0c\u4f8b\u5982\uff1a/profoundui/auth/genie?skin=MyCompany";
            a["open as"] = "\u6253\u958b\u70ba";
            a["open as hlp"] = "\u8a2d\u7f6e\u662f\u5426\u5728\u5165\u53e3\u7db2\u7ad9\u4e2d\u4ee5\u65b0\u7684\u9078\u9805\u5361\u53bb\u555f\u52d5\u9019\u500b\u9805\u76ee\uff0c\u6216\u8005\u4f5c\u70ba\u65b0\u7684\u700f\u89bd\u5668\u8996\u7a97\u6216\u9078\u9805\u5361\u3002\u700f\u89bd\u5668\u662f\u5426\u4f7f\u7528\u65b0\u8996\u7a97\u6216\u9078\u9805\u5361\u53d6\u6c7a\u65bc\u7528\u6236\u7684\u700f\u89bd\u5668\u8a2d\u7f6e\u3002";
            a["opens once only"] = "\u50c5\u6253\u958b\u4e00\u6b21";
            a["opens once only hlp"] = "\u5728\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u7528\u6236\u5728\u5165\u53e3\u7db2\u7ad9\u4e2d\u5df2\u7d93\u6253\u958b\u4e00\u500b\u9078\u9805\u5361\u540c\u4e8b\u555f\u52d5\u6b64\u9805\u76ee\uff0c\u90a3\u9ebc\u6703\u6253\u958b\u53e6\u4e00\u500b\u9078\u9805\u5361\u3002\u7531\u65bc\u5c0d\u9078\u9805\u5361\u6578\u91cf\u6c92\u6709\u9650\u5236,\u6240\u4ee5\u7528\u6236\u53ef\u4ee5\u7528\u9019\u7a2e\u65b9\u5f0f\u6253\u958b\uff0c\u7576\u6253\u958b\u9019\u500b\u9078\u9805\u6642\uff0c\u7528\u6236\u5c07\u7121\u6cd5\u6253\u958b\u591a\u500b\u9078\u9805\u5361\uff0c\u5982\u679c\u7528\u6236\u9078\u64c7\u8a72\u9078\u9805\u5361\u6642\u5df2\u7d93\u6253\u958b\u4e86\u53e6\u4e00\u500b\u9078\u9805\u5361\uff0c\u73fe\u6709\u7684\u9078\u9805\u5361\u5c07\u6703\u5728\u65b0\u7684\u700f\u89bd\u5668\u8996\u7a97\u6216\u6a19\u7c64\u4e2d\u6253\u958b\u8a72\u9805\u76ee\u6642\uff0c\u8a72\u9078\u9805\u5c07\u88ab\u5ffd\u7565\u3002";
            a.icon = "\u5716\u6a19";
            a["icon hlp"] = "\u53ef\u9078\u64c7\u7684: \u8a2d\u7f6e\u5c0e\u822a\u6216\u5de5\u5177\u6b04\u9805\u76ee\u4f7f\u7528\u7684\u5716\u6a19\u6a94\u6848\uff0c\u5716\u6a19\u6a94\u6848\u53ef\u4ee5\u662fGIF\uff0cJPG\u6216PNG\u683c\u5f0f\uff0c\u63a8\u85a6\u4f7f\u7528\u6e05\u695a\u6613\u61c2\u7684GIF\uff0c\u8def\u5f91\u61c9\u8a72\u70baAtrium\u5b89\u88dd\u76ee\u9304\u7684\u7d55\u5c0d\u8def\u5f91\uff0c\u5982\u679c\u6c92\u6709\u6307\u5b9a\u5716\u6a19\uff0cAtrium\u5c07\u4f7f\u7528\u5c0e\u822a\u9805\u76ee\u7684\u9ed8\u8a8d\u5716\u6a19\uff0c\u9664\u975e\u5728\u6b64\u6307\u5b9a\uff0c\u5426\u5247\u5de5\u5177\u6b04\u9805\u76ee\u4e0d\u6703\u986f\u793a\u4efb\u4f55\u5716\u6a19\u3002";
            a.parameter = "\u53c3\u6578";
            a["parameter hlp"] = "\u53ef\u9078\u64c7\u7684: \u6307\u5b9a\u5728\u555f\u52d5\u6642\u5c07\u50b3\u905e\u7d66Rich Display\u7a0b\u5f0f\u7684\u53c3\u6578";
            break;
        default:
            console.log("Unknown Dictionary Type : '" + b + "'")
    }
    return a
};
if (pui.runtimeMsg == null) pui.runtimeMsg = {};
if (pui.runtimeText == null) pui.runtimeText = {};
if (pui.runtimeMessages == null) pui.runtimeMessages = {};
pui.getLanguageText = function (b, a, c) {
    var d = pui.language || "en_US", e = pui[b][d][a];
    if (typeof e == "undefined") e = pui[b].en_US[a];
    if (b == "runtimeMsg" && typeof pui.runtimeMessages[a] != "undefined") e = pui.runtimeMessages[a];
    if ((b == "runtimeMsg" || b == "runtimeText") && a.substr(0, 7) == "upload " && pui.fileupload != null && typeof pui.fileupload[a.substr(8)] != "undefined") {
        e = pui.fileupload[a.substr(8)];
        if (a == "upload file limit") e = e.replace("{FILE_LIMIT}", "&1")
    }
    if (a == "excel export text" && typeof pui.runtimeText[d]["csv export text"] !=
        "undefined") e = pui.runtimeText[d]["csv export text"];
    if (b == "runtimeText") {
        var f = a;
        if (a == "excel export text") f = "csv export text";
        var h = ["close browser text", "csv export text", "filter text", "reset data", "next link text", "previous link text", "remove filters text", "session ended text", "sort ascending text", "sort descending text"];
        for (d = 0; d < h.length; d++) if (f == h[d] && typeof pui[h[d]] != "undefined") e = pui[h[d]]
    }
    if (b == "runtimeMsg") {
        b = ["closeMessage", "no connection message"];
        for (d = 0; d < b.length; d++) if (a == b[d] &&
            typeof pui[b[d]] != "undefined") e = pui[b[d]]
    }
    if (c != null) for (d = 1; d <= c.length; d++) e = e.replace("&" + d, c[d - 1]);
    return e
};
pui.runtimeMsg.en_US = wd("runtimeMsg");
pui.runtimeText.en_US = wd("runtimeText");
pui.runtimeMsg.en_UK = xd("runtimeMsg");
pui.runtimeText.en_UK = xd("runtimeText");
pui.runtimeMsg.de_DE = yd("runtimeMsg");
pui.runtimeText.de_DE = yd("runtimeText");
pui.runtimeMsg.es_ES = zd("runtimeMsg");
pui.runtimeText.es_ES = zd("runtimeText");
pui.runtimeMsg.es_MX = Ad("runtimeMsg");
pui.runtimeText.es_MX = Ad("runtimeText");
pui.runtimeMsg.fr_CA = Bd("runtimeMsg");
pui.runtimeText.fr_CA = Bd("runtimeText");
pui.runtimeMsg.fr_FR = Cd("runtimeMsg");
pui.runtimeText.fr_FR = Cd("runtimeText");
pui.runtimeMsg.he_IL = Dd("runtimeMsg");
pui.runtimeText.he_IL = Dd("runtimeText");
pui.runtimeMsg.it_IT = Ed("runtimeMsg");
pui.runtimeText.it_IT = Ed("runtimeText");
pui.runtimeMsg.ja_JP = Fd("runtimeMsg");
pui.runtimeText.ja_JP = Fd("runtimeText");
pui.runtimeMsg.nl_NL = Gd("runtimeMsg");
pui.runtimeText.nl_NL = Gd("runtimeText");
pui.runtimeMsg.pt_BR = Hd("runtimeMsg");
pui.runtimeText.pt_BR = Hd("runtimeText");
pui.runtimeMsg.pt_PT = Id("runtimeMsg");
pui.runtimeText.pt_PT = Id("runtimeText");
pui.runtimeMsg.zh_HK = Jd("runtimeMsg");
pui.runtimeText.zh_HK = Jd("runtimeText");
if (typeof window.pui == "undefined") window.pui = {};
window.pui.Timer = function () {
    var b = (new Date).getTime(), a = false, c, d = this;
    this.timeout = 600;
    this.showDebugInfo = false;
    this.action = null;
    this.checkFrequency = 1E3;
    this.resetOnUserActivity = false;
    this.start = function () {
        if (!a) {
            if (d.resetOnUserActivity) if (document.body.addEventListener) {
                document.body.addEventListener("keydown", d.reset, false);
                document.body.addEventListener("mousemove", d.reset, false);
                document.body.addEventListener("click", d.reset, false);
                document.body.addEventListener("touchstart", d.reset, false);
                document.body.addEventListener("touchmove", d.reset, false)
            } else if (document.body.attachEvent) {
                document.body.attachEvent("onkeydown", d.reset);
                document.body.attachEvent("onmousemove", d.reset);
                document.body.attachEvent("onclick", d.reset)
            }
            d.reset();
            c = setInterval(d.check, d.checkFrequency);
            a = true
        }
    };
    this.stop = function () {
        if (a) {
            clearInterval(c);
            if (d.resetOnUserActivity) if (document.body.removeEventListener) {
                document.body.removeEventListener("keydown", d.reset, false);
                document.body.removeEventListener("mousemove",
                    d.reset, false)
            } else if (document.body.detachEvent) {
                document.body.detachEvent("onkeydown", d.reset);
                document.body.detachEvent("onmousemove", d.reset)
            }
            a = false
        }
    };
    this.reset = function () {
        b = (new Date).getTime()
    };
    this.check = function () {
        var e = (new Date).getTime() - b;
        if (d.showDebugInfo) document.title = parseInt(e / 1E3);
        if (e >= d.timeout * 1E3) {
            d.action != null && typeof d.action == "function" && d.action();
            d.reset()
        }
    }
};
pui.Kc = {};
pui.Kc.ek = new pui.Timer;
pui.Kc.ek.action = function () {
    var b = true;
    if (pui.onbeforetimeout != null && typeof pui.onbeforetimeout == "function") b = pui.onbeforetimeout();
    b !== false && pui.Kc.eK();
    pui.Kc.ek.stop();
    pui.Kc.Zk.stop()
};
pui.Kc.Zk = new pui.Timer;
pui.Kc.Zk.action = function () {
    pui.keepAlive()
};
pui.Kc.eK = function () {
    function b(d) {
        document.body.style.backgroundColor = "#ffffff";
        document.body.style.backgroundImage = "none";
        d.innerHTML = '<div style="font-family: Trebuchet MS; width: 95%; text-align: center; font-size: 200%;"><br/>' + pui.getLanguageText("runtimeMsg", "session timed out") + "</div>"
    }

    b(pui.runtimeContainer);
    pui.Yf();
    var a = cc("PUI0001200.pgm");
    if (pui.J != null) a = cc("PUI0002110.pgm");
    if (pui.psid != null && pui.psid != "") a += "/" + pui.psid;
    var c = {timeout: "1"};
    if (pui.isCloud) c.workspace_id = pui.cloud.ws.id;
    jc({
        url: a, method: "post", sendAsBinary: false, suppressAlert: true, params: c, handler: function (d) {
            if (pui.J != null) {
                pui.confirmOnClose = false;
                pui.shutdownOnClose = false;
                b(document.body)
            } else {
                d.b = pui.runtimeContainer;
                pui.handler = ra();
                pui.render(d)
            }
            pui.ontimeout != null && typeof pui.ontimeout == "function" && pui.ontimeout();
            pui.J != null && pui.J["close atrium tab on timeout"] == true && window.parent != window && pui.jj(window.parent) && window.Atrium.closeTab()
        }, onfail: function () {
            b(document.body)
        }
    })
};
pui.Kc.start = function () {
    pui.Kc.ek.stop();
    pui.Kc.Zk.stop();
    if (pui.timeout != null) {
        var b = pui.timeout - 10;
        if (!(b < 3)) {
            pui.Kc.ek.timeout = pui.timeout;
            pui.Kc.Zk.timeout = b;
            pui.Kc.ek.start();
            pui.Kc.Zk.start()
        }
    }
};
pui.Kc.end = function () {
    pui.Kc.ek.stop();
    pui.Kc.Zk.stop()
};
pui.viewdesigner = false;
pui.nodedesigner = false;
pui.Gr = location.href.split("?")[0].split("/");
if (pui.Gr[pui.Gr.length - 1] == "viewdesigner") pui.viewdesigner = true;
if (pui.Gr[pui.Gr.length - 1] == "nodedesigner") pui.nodedesigner = true;
pui.Gq = Pc();
if (pui.Gq.viewdesigner == "1" || pui.Gq.php == "1") pui.viewdesigner = true;
if (pui.Gq.nodedesigner == "1" || pui.Gq.node == "1") pui.nodedesigner = true;
if (window.pui_cloud_designer) pui.nodedesigner = true;
pui.ja = false;
pui.designer.jk = function (b) {
    function a(r, k) {
        var q = r;
        if (document.getElementById(q) != null || k != null && k[q] != null) {
            if (q.indexOf("_copy") < 0) q += "_copy";
            var s = q.match(/^(.*_copy)\d+$/);
            if (q.length > 6 && s != null) q = s[1];
            s = 0;
            var t;
            do {
                s++;
                t = q + (s == 1 ? "" : s)
            } while (document.getElementById(t) != null || k != null && k[t] != null);
            q = t
        }
        if (k != null) k[q] = true;
        return q
    }

    function c(r, k, q, s, t) {
        function u(B, I, z, H) {
            if (pui.da(r)) if (q != null) {
                r = I - z + s;
                r = r < 0 ? 0 : r;
                r = B > 0 ? H(r, B) + "%" : r + "px"
            } else r = parseFloat(r) + 5 + "%"; else {
                if (q != null) {
                    r = I - z + s;
                    r = r < 0 ?
                        0 : r;
                    if (H == v && B > 0) r = B - r
                } else r = parseInt(r, 10) + 30;
                r += "px"
            }
        }

        function w(B, I) {
            return pui.round(100 * B / I, 1)
        }

        function v(B, I) {
            return pui.round(100 * (1 - B / I), 1)
        }

        function E(B) {
            for (var I = B.offsetHeight; I == 0 && B != null;) {
                I = B.offsetHeight;
                B = B.parentNode
            }
            return I
        }

        var y = pui.Qk(q), F, D;
        if (t == null) {
            F = [i.li(), i.yj()];
            D = i.b.offsetWidth;
            t = E(i.b)
        } else {
            F = pui.Xe(t);
            D = t.offsetWidth;
            t = E(t)
        }
        if (k === "left") u(D, y.x, F[0], w); else if (k === "top") u(t, y.y, F[1], w); else if (k === "right") u(D, y.x, F[0], v); else k === "bottom" && u(t, y.y, F[1], v);
        return r
    }

    function d(r, k) {
        var q = i.items[r];
        i.items[r] = i.items[k];
        i.items[k] = q
    }

    this.b = document.body;
    this.active = true;
    this.items = [];
    this.eu = {};
    var e = this.selection = null;
    if (Q == "dspf") e = document.getElementById("ideProps").childNodes[1].firstChild;
    this.k = b == null ? new pui.designer.ww(e) : b;
    this.Ga = {};
    this.Nd = {};
    this.Xd = false;
    this.Nb = this.Qa = null;
    this.i = Q == "dspf" ? {name: "[Unnamed Screen]", oc: false, l: 0} : Va[0];
    this.X = {};
    this.n = new pui.designer.OD;
    if (Q == "dspf") this.D = new pui.designer.Wr; else {
        this.D = {};
        this.D.Yg = false;
        this.D.Tc =
            ra();
        this.D.vh = ra();
        this.D.Tj = ra();
        this.D.uh = ra()
    }
    this.kb = [];
    this.Nf = [];
    this.Z = this.Aa = null;
    this.Kb = [];
    this.nd = this.se = null;
    this.Wx = this.Xx = 0;
    this.we = new pui.designer.KC;
    this.dirty = this.disabled = false;
    if (Q == "genie") {
        if (pui.Et == null) {
            pui.Et = new pui.designer.iL;
            this.Do = pui.Et;
            b = pui.toolbox.ny();
            for (var f = 0; f < b.length; f++) {
                e = pui.toolbox.oy(b[f]);
                this.Do.$D({name: b[f], expanded: f == 0});
                for (var h = 0; h < e.length; h++) {
                    var g = e[h];
                    g.expanded = f == 0;
                    this.Do.lL(g)
                }
            }
        } else this.Do = pui.Et;
        this.Do.show()
    }
    var l = null, n,
        o = -1, i = this;
    i.k.zu = oc();
    i.k.designer = i;
    i.we.designer = i;
    this.init = function () {
        i.Aa = document.createElement("div");
        i.Aa.style.position = "absolute";
        i.Aa.style.display = "none";
        i.Aa.style.border = "3px solid red";
        i.Aa.style.zIndex = S.iw;
        i.Aa.style.backgroundColor = "#cccccc";
        i.Aa.style.filter = "alpha(opacity=30)";
        i.Aa.style.opacity = 0.3;
        Q == "genie" ? i.b.appendChild(i.Aa) : Tb(Ha).appendChild(i.Aa);
        i.Z = document.createElement("div");
        i.Z.style.position = "absolute";
        i.Z.style.display = "none";
        i.Z.style.border = "1px dashed #666666";
        i.Z.style.zIndex = S.iw;
        i.b.appendChild(i.Z);
        if (Q == "genie" && showAsWindowFlag) {
            document.lq.innerHTML = showAsWindowDiv.innerHTML;
            showAsWindow(null, true)
        }
        n = document.getElementById(Ca);
        n.className += " design";
        i.Nb = new pui.designer.am;
        i.Nb.Qf = "context";
        i.Nb.handler = function (w, v) {
            if (typeof w !== "string") w = "";
            w = w.toLowerCase();
            if (w.substr(0, 4) == "undo" || w.substr(0, 4) == "redo") w = w.substr(0, 4);
            switch (w) {
                case "undo":
                    i.n.n();
                    break;
                case "redo":
                    i.n.Hq();
                    break;
                case "paste":
                    var E = R.Uc;
                    if (pui.nc()) {
                        var y = localStorage.getItem("pui-designer-clipboard");
                        if (y) E = JSON.parse(y)
                    }
                    o = -1;
                    i.bi(E, i.Nb.clickEvent || v);
                    break;
                case "enable empty elements":
                    i.ay();
                    break;
                case "toggle snap to grid":
                    i.selection.fc ? i.Ri(0, 0) : i.Ri(5, 5);
                    break;
                case "save and exit design":
                    i.Xd = true;
                    R.nv.onclick();
                    break;
                case "exit design":
                    R.If.onclick();
                    break
            }
        };
        i.Nb.init();
        i.selection = new pui.designer.as;
        l = new pui.designer.eD(i);
        document.body.oncontextmenu = function (w) {
            if (Ub()) {
                if (!w) w = window.event;
                if (S.getTarget(w).className != "xterm-cursor-layer") {
                    w.preventDefault && w.preventDefault();
                    w.stopPropagation &&
                    w.stopPropagation();
                    w.cancelBubble = true;
                    return w.returnValue = false
                }
            }
        };
        for (var r = i.b.getElementsByTagName("div"), k = 0, q, s = [], t = 0; t < r.length; t++) {
            var u = r[t];
            if (u.tH) s.push(u); else if (u.id.substr(0, 6) == "window") {
                for (q = 0; q < Va.length; q++) if (Va[q].oc && Va[q].Zi == u) {
                    u.setAttribute("screenId", Va[q].l);
                    break
                }
                if (u.getAttribute("screenId") == null) {
                    k++;
                    Va.push({name: "[Unnamed Window " + k + "]", oc: true, fields: [], Zi: u, l: Va.length});
                    u.setAttribute("screenId", Va.length - 1)
                }
            } else if (u.id != null && u.id != "" && u.id != "hiDiv") if (u.getAttribute("empty") ==
                null) {
                q = i.addItem(u);
                i.ij(q)
            } else if (u.parentNode.getAttribute("screenId") != null) u.setAttribute("screenId", u.parentNode.getAttribute("screenId")); else {
                if (u.getAttribute("parentWindow") != null) for (q = 0; q < Va.length; q++) if (Va[q].name == u.getAttribute("parentWindow")) {
                    u.setAttribute("screenId", Va[q].l);
                    break
                }
            } else if (u.style.cursor == null || u.style.cursor.indexOf("resize") < 0) u.style.cursor = "default"
        }
        for (t = 0; t < s.length; t++) s[t].parentNode.removeChild(s[t]);
        r = i.b.getElementsByTagName("input");
        for (t = 0; t < r.length; t++) {
            u =
                r[t];
            if (u.id != null && u.id != "" && u.type != "hidden") {
                q = i.addItem(u);
                i.ij(q);
                u.readOnly = true
            }
        }
        r = i.b.getElementsByTagName("img");
        for (t = 0; t < r.length; t++) {
            u = r[t];
            if (u.id != null && u.id != "") {
                q = i.addItem(u);
                i.ij(q)
            }
        }
        r = i.b.getElementsByTagName("select");
        for (t = 0; t < r.length; t++) {
            u = r[t];
            if (u.id != null && u.id != "") {
                q = i.addItem(u);
                i.ij(q)
            }
        }
        r = i.b.getElementsByTagName("textarea");
        for (t = 0; t < r.length; t++) {
            u = r[t];
            if (u.id != null && u.id != "") {
                q = i.addItem(u);
                i.ij(q)
            }
        }
        r = i.b.getElementsByTagName("button");
        for (t = 0; t < r.length; t++) {
            u =
                r[t];
            if (u.id != null && u.id != "") {
                q = i.addItem(u);
                i.ij(q)
            }
        }
        r = i.b.getElementsByTagName("fieldset");
        for (t = 0; t < r.length; t++) {
            u = r[t];
            if (u.id != null && u.id != "") {
                q = i.addItem(u);
                i.ij(q)
            }
        }
        if (ed != null && ed != 0 && dd != null) for (t = 0; t < ed; t++) {
            u = dd[t].calimg;
            if (u != null && u.parentNode != null) {
                u.parentNode.getAttribute("screenId") != null && u.setAttribute("screenId", u.parentNode.getAttribute("screenId"));
                u.style.visibility = "hidden";
                u.style.display = "none"
            }
        }
        for (t = 0; t < Va.length; t++) {
            i.Ga[Va[t].l] = {};
            i.Nd[Va[t].l] = {}
        }
        i.b.style.cursor =
            "default";
        t = i.b.parentNode;
        if (t != null) t.style.cursor = "default";
        stopHiLite = true;
        menuDiv = null;
        if (Q == "dspf") {
            t = Kd.get("snapToGrid", 5);
            u = Kd.get("showGrid", 20);
            i.Ri(t, t);
            i.Hh(u, u)
        }
    };
    this.Uf = function (r, k, q) {
        if (q) pui.designer.fa = q.fa;
        var s = Tb(Ha);
        if (r != null && k != null) {
            if (pui.designer.fa == null) {
                pui.designer.fa = document.createElement("div");
                pui.designer.fa.style.position = "absolute";
                pui.designer.fa.gu = true;
                pui.designer.fa.style.border = "2px solid #999999";
                pui.designer.fa.style.backgroundColor = "#333333";
                pui.designer.fa.style.borderRadius =
                    "15px";
                pui.designer.fa.style.boxShadow = "6px 6px 12px rgba(50, 66, 64, 0.67)";
                s.parentNode.onmousedown = function () {
                    if (pui.designer.fa != null && i != null) {
                        i.selection.clear();
                        i.k.refresh()
                    }
                }
            }
            if (i.b.parentNode == s) {
                s.removeChild(i.b);
                pui.designer.fa.appendChild(i.b)
            }
            pui.designer.fa.parentNode != s && s.appendChild(pui.designer.fa);
            s.parentNode.style.backgroundColor = "#dfe8f6";
            pui.designer.fa.style.width = r + 40 + "px";
            pui.designer.fa.style.height = k + 50 + "px";
            i.b.style.position = "absolute";
            i.b.style.left = "19px";
            i.b.style.top =
                "24px";
            i.b.style.border = "1px solid #999999";
            i.b.style.overflow = "auto";
            i.b.style.backgroundColor = "#ffffff";
            i.b.style.width = r + "px";
            i.b.style.height = k + "px";
            i.b.onscroll = function () {
                pui.designer.fa != null && i != null && i.selection.Fb()
            };
            r = Kd.get("showGrid", 20);
            i.Hh(r, r, true)
        } else if (pui.designer.fa != null) {
            if (i.active) {
                pui.designer.fa.removeChild(i.b);
                s.removeChild(pui.designer.fa);
                s.appendChild(i.b)
            }
            i.b.style.position = "";
            i.b.style.left = "";
            i.b.style.top = "";
            i.b.style.border = "";
            i.b.style.overflow = "";
            i.b.style.backgroundColor =
                "";
            i.b.style.width = "";
            i.b.style.height = "";
            i.b.style.backgroundImage = "";
            s.parentNode.style.backgroundColor = "";
            r = Kd.get("showGrid", 20);
            i.Hh(r, r, false)
        }
        q || (q = Ext.getCmp("centerPanel").getActiveTab());
        q.fa = pui.designer.fa
    };
    this.OE = function () {
        for (var r = 0; r < i.items.length; r++) {
            var k = i.items[r];
            if (typeof k === "object" && typeof k.dom === "object" && typeof k.dom.id === "string") i.eu[k.dom.id] = k
        }
    };
    this.clear = function () {
        i.selection.clear();
        i.kb = [];
        i.Nf = [];
        i.items = [];
        for (var r = 0; r < Va.length; r++) {
            i.Ga[Va[r].l] = {};
            i.Nd[Va[r].l] =
                {}
        }
        i.Kb = [];
        i.eu = {};
        i.b.innerHTML = "";
        Q === "dspf" && i.D.clear();
        i.b.appendChild(i.Aa);
        i.b.appendChild(i.Z)
    };
    this.load = function (r) {
        i.clear();
        if (typeof r === "string") r = JSON.parse(r);
        R.Of = true;
        pui.Pn({metaData: r, designMode: true, designer: i});
        R.Of = false
    };
    this.ay = function () {
        for (var r = !i.i.oc, k, q = i.b.getElementsByTagName("div"), s = 0, t = "s", u = 0; u < q.length; u++) {
            var w = q[u];
            k = r && w.getAttribute("screenId") == null || !r && Number(w.getAttribute("screenId")) == i.i.l ? true : false;
            if (w.id == null || w.id == "") {
                var v = w.getAttribute("rowcol");
                if (v == null || v == "") v = w.getAttribute("stripeid");
                if (v == null || v == "") v = w.getAttribute("backgroundid");
                if (v != null && v != "" && document.getElementById(v) == null && k == true) {
                    w.id = v;
                    k = i.addItem(w);
                    k.properties.cI = "true";
                    k.m.cI = true;
                    if (!r) {
                        k.dom.setAttribute("parentWindow", i.i.name);
                        k.properties["parent window"] = i.i.name;
                        k.m["parent window"] = true;
                        k.l = i.i.l;
                        i.i.fields.push(k)
                    }
                    s++
                }
            } else if (w.getAttribute("empty") != null && k == true) {
                k = i.addItem(w);
                if (!r) {
                    k.dom.setAttribute("parentWindow", i.i.name);
                    k.properties["parent window"] =
                        i.i.name;
                    k.m["parent window"] = true;
                    k.l = i.i.l;
                    i.i.fields.push(k)
                }
                s++
            }
        }
        if (s == 1) t = "";
        pui.J.config.HE || pui.alert(s + " empty element" + t + " enabled for design.")
    };
    this.ij = function (r) {
        var k;
        k = r.dom.parentNode.getAttribute("screenId");
        if (k != null) {
            k = Number(k);
            r.dom.setAttribute("screenId", k);
            r.l = k;
            r.dom.setAttribute("parentWindow", Va[k].name);
            r.properties["parent window"] = Va[k].name;
            r.m["parent window"] = true;
            Va[k].fields.push(r)
        } else {
            k = r.dom.getAttribute("parentWindow");
            if (k != null) for (var q = 0; q < Va.length; q++) if (Va[q].name ==
                k) {
                r.dom.setAttribute("screenId", Va[q].l);
                r.l = Va[q].l;
                Va[q].fields.push(r);
                break
            }
        }
    };
    this.qB = function (r) {
        i.n.clear();
        i.hh();
        if (Number(r) != i.i.l) {
            i.i = Va[Number(r)];
            r = false;
            if (i.i.oc == false) r = true;
            for (var k = i.b.getElementsByTagName("div"), q, s = 0; s < k.length; s++) {
                q = k[s];
                if (!(q.id == null || q.id == "" || q.id == "hiDiv")) q.style.display = r == true && q.getAttribute("screenId") == null || q.getAttribute("screenId") != null && Number(q.getAttribute("screenId")) == i.i.l ? "" : "none"
            }
            for (s = 0; s < i.items.length; s++) {
                k = i.items[s];
                q = k.dom;
                if (r == true && k.l == null || k.l != null && k.l == i.i.l) {
                    q.style.display = "";
                    k.Pc();
                    if (k.fb) k.fb.style.display = "";
                    if (k.ob) k.ob.style.display = "";
                    if (k.label) k.label.style.display = "";
                    q.refresh != null && q.refresh();
                    q.grid != null && q.grid.show != null && q.grid.show()
                } else {
                    q.style.display = "none";
                    if (k.fb) k.fb.style.display = "none";
                    if (k.ob) k.ob.style.display = "none";
                    if (k.label) k.label.style.display = "none";
                    q.grid != null && q.grid.hide != null && q.grid.hide()
                }
            }
            R.cv();
            i.selection.clear();
            i.k.refresh()
        }
    };
    this.addItem = function (r, k, q) {
        if (q ==
            null) q = true;
        r.Ic && r.Ic.hide();
        var s = new pui.designer.pw(i);
        s.dom = r;
        if (r.tagName == "DIV" && r.grid == null) {
            s.originalValue = r.originalValue != null ? r.originalValue : tc(r);
            for (var t in s.properties) s.Qn[t] = s.properties[t]
        } else if (r.value) s.originalValue = r.value;
        i.items.push(s);
        r.onclick = null;
        r.onchange = null;
        r.ondblclick = null;
        r.onmouseover = null;
        r.onmouseout = null;
        r.onmousedown = null;
        r.onmousemove = null;
        r.onmouseup = null;
        r.onkeydown = null;
        r.onkeypress = null;
        r.onkeyup = null;
        r.onfocus = null;
        r.onblur = null;
        r.ontabclick =
            null;
        if (Q == "genie") {
            ic(r, "keydown", Pb);
            ic(r, "keydown", Fb);
            ic(r, "keydown", Qb);
            ic(r, "keydown", Rb);
            ic(r, "focus", gotFocusField);
            ic(r, "blur", lostFocusField);
            ic(r, "change", changedField);
            ic(r, "mouseover", mouseOverField);
            ic(r, "mouseout", mouseOutField);
            ic(r, "mousedown", setMouseDown);
            ic(r, "mouseup", clearMouseDown);
            ic(r, "keyup", doKeyUp);
            ic(r, "click", setPos);
            ic(r, "click", clickSubfile);
            ic(r, "dblclick", dblClickSubfile);
            ic(r, "blur", Wc);
            ic(r, "click", structFieldAutoEnter);
            ic(r, "click", pushButton);
            ic(r, "focus", setPos);
            ic(r, "keyup", autoEnter);
            if (r.tagName == "TEXTAREA") {
                ic(r, "keydown", pui.yo);
                ic(r, "keyup", pui.yo);
                ic(r, "change", pui.yo);
                ic(r, "paste", pui.yo);
                ic(r, "input", pui.yo)
            }
        }
        var u = "";
        if (r.tagName == "DIV" && r.grid == null && r.layout == null && r.comboBoxWidget == null && r.button == null && r.panel == null && r.aa == null) {
            var w;
            if (Q == "genie") w = "#cccccc";
            if (Q == "dspf") w = "#15428b";
            r.style.borderLeftStyle = "dotted";
            r.style.borderLeftColor = w;
            r.style.borderLeftWidth = "1px";
            r.style.borderRightStyle = "dotted";
            r.style.borderRightColor = w;
            r.style.borderRightWidth =
                "1px";
            r.style.borderTopStyle = "dotted";
            r.style.borderTopColor = w;
            r.style.borderTopWidth = "1px";
            if (!(r.currentStyle && r.currentStyle.borderBottomWidth && parseInt(r.currentStyle.borderBottomWidth) > 0 || window.getComputedStyle && document.defaultView.getComputedStyle(r, null).getPropertyValue("border-bottom-width") != "0px")) {
                r.style.borderBottomStyle = "dotted";
                r.style.borderBottomColor = w;
                r.style.borderBottomWidth = "1px"
            }
            if (r.firstChild != null && r.firstChild.tagName == "A") {
                u = r.firstChild.href;
                S.W(r.firstChild, "click",
                    function (E) {
                        S.ua(E)
                    })
            } else if (r.firstChild != null && r.firstChild.nextSibling != null && r.firstChild.nextSibling.tagName == "A") {
                u = r.firstChild.nextSibling.href;
                S.W(r.firstChild.nextSibling, "click", function (E) {
                    S.ua(E)
                })
            }
        }
        r.style.cursor = "default";
        i.vs(r, s);
        s.properties.id = r.id;
        s.m.id = true;
        s.properties["screen identifier"] = "false";
        s.properties["field type"] = "output field";
        s.m["field type"] = true;
        if (Q == "genie") if (r.tagName == "DIV" && r.grid != null) {
            s.properties["field type"] = "grid";
            for (var v in r.grid.dataProps) s.properties[v] =
                r.grid.dataProps[v];
            r.grid.tp();
            r.c = s;
            s.tn = false
        } else if (r.tagName == "DIV" && r.comboBoxWidget != null) {
            r.comboBoxWidget.design = true;
            s.properties["field type"] = "combo box";
            if (r.comboBoxWidget.pL == true) {
                s.properties.onselect = 'pressKey("Enter");';
                s.properties.choices = r.comboBoxWidget.choices.join(",");
                s.properties["choice values"] = r.comboBoxWidget["choice values"].join(",")
            }
            r.comboBoxWidget.sB("cursor", "default")
        } else if (r.pui != null && r.pui.properties != null && r.pui.properties["field type"] != null) for (v in r.pui.properties) s.properties[v] =
            r.pui.properties[v];
        if (u != "") {
            s.properties["field type"] = "hyperlink";
            if (u.substr(0, 11).toLowerCase() == "javascript:") {
                s.properties.onclick = u.substr(11);
                s.m.onclick = true
            }
        }
        if (r.style.visibility == "hidden" && !r.Jb) {
            r.style.visibility = "visible";
            r.style.filter = "alpha(opacity=30)";
            r.style.opacity = 0.3;
            s.properties.visibility = "hidden"
        }
        if (Q == "genie") if (r.tagName != "INPUT" || r.type != "checkbox" && r.type != "radio") {
            s.properties.value = "script: value";
            s.m.value = true
        }
        if (r.tagName == "INPUT") s.properties["field type"] = r.type ==
        "password" ? "password field" : r.type == "button" || r.type == "submit" || r.type == "reset" ? "button" : r.type == "radio" ? "radio button" : r.type == "checkbox" ? "checkbox" : "textbox";
        if (r.tagName == "IMG") s.properties["field type"] = "image";
        if (r.tagName == "SELECT") s.properties["field type"] = "select box";
        if (r.disabled) r.disabled = false;
        if (Q == "genie" && !k && q && r.button == null && r.panel == null && r.grid == null && r.comboBoxWidget == null && !(r.tagName == "INPUT" && (r.type == "checkbox" || r.type == "radio"))) {
            s.Bf("color");
            s.Bf("font family");
            s.Bf("font size");
            s.Bf("font style");
            s.Bf("font variant");
            s.Bf("letter spacing");
            s.Bf("text decoration");
            s.Bf("text transform");
            s.Bf("word spacing");
            s.Bf("top");
            s.Bf("left");
            s.Bf("z index")
        }
        s.properties["css class"] = r.className;
        if (r.tagName == "INPUT" && r.type == "submit") {
            s.m.color = true;
            s.m["font family"] = true;
            s.m["font size"] = true;
            s.m.top = true;
            s.m.left = true;
            if (r.name == "quit" || r.name == "disconnect") {
                s.properties.onclick = "pressKey('quit')";
                s.m.onclick = true
            }
        }
        if (r.tagName == "INPUT" && r.type == "button" && r.name == "quit" || r.name ==
            "disconnect") {
            s.properties.onclick = "pressKey('quit')";
            s.m.onclick = true
        }
        r = "";
        if (s.dom.currentStyle) r = s.dom.currentStyle.visibility; else if (window.getComputedStyle) r = document.defaultView.getComputedStyle(s.dom, null).getPropertyValue("visibility");
        if (r == "hidden" && !s.dom.Jb) {
            k = s.bb();
            q = s.qf();
            if ((k == null || !k.g.Jb) && (q == null || !q.na.Jb)) {
                s.dom.style.visibility = "visible";
                s.dom.style.filter = "alpha(opacity=30)";
                s.dom.style.opacity = 0.3;
                s.properties.visibility = r
            }
        }
        s.ta = false;
        for (t in s.properties) s.Qn[t] = s.properties[t];
        return s
    };
    this.vs = function (r, k) {
        S.W(r, "click", function (q) {
            var s = S.getTarget(q);
            if (s.tagName == "INPUT" && (s.type == "checkbox" || s.type == "radio")) {
                S.ua(q);
                q.stopPropagation && q.stopPropagation()
            }
        });
        S.W(r, "mousedown", function (q) {
            i.Nb.hide();
            if (k.isSelected()) {
                if (l.sf(q)) {
                    i.k.rs();
                    for (var s = 0; s < i.selection.e.length; s++) if (i.selection.e[s].c == k) {
                        i.selection.e[s].destroy();
                        i.selection.e.splice(s, 1);
                        break
                    }
                    Q == "dspf" && pui.ide.refreshRibbon();
                    i.k.refresh()
                }
            } else {
                i.k.rs();
                if (k.properties["field type"] == "layout") i.selection.clear();
                else if (l.sf(q)) {
                    if (i.selection.e.length == 1) {
                        s = pui.widgets[i.selection.e[0].c.properties["field type"]];
                        if (s.nj || s.name == "layout") i.selection.clear()
                    }
                } else i.selection.clear();
                s = i.selection.add(k);
                if (pui.Ae(q)) {
                    i.rr(q);
                    S.ua(q);
                    q.stopPropagation && q.stopPropagation()
                } else {
                    i.Qa != null && i.Qa.hide();
                    s.kK(q)
                }
                i.k.refresh()
            }
            l.sf(q) && pui.is_old_ie && r.tagName == "INPUT" && pui.vi(r) && r.createTextRange != null && setTimeout(function () {
                    try {
                        var u = r.createTextRange();
                        if (u) {
                            u.moveStart("character", 0);
                            u.collapse();
                            u.select()
                        }
                    } catch (w) {
                    }
                },
                1);
            s = S.getTarget(q);
            var t = k.properties["locked in place"] == "true";
            if (s && s.tagName == "SPAN" && s.getAttribute("isTab") == "true") t = false;
            if (!t) {
                S.ua(q);
                q.stopPropagation && q.stopPropagation()
            }
        })
    };
    this.cJ = function () {
        i.n.start("Reset Selection");
        for (var r = 0; r < i.selection.e.length; r++) {
            for (var k = i.selection.e[r].c, q = oc(), s, t = 0; t < q.length; t++) {
                s = q[t];
                if (k.m[s.name]) {
                    var u = k.Qn[s.name];
                    if (u == null) u = "";
                    i.n.add(k, s.name);
                    uc(s, k.properties, k.dom, u, true, k, i.selection.e[r]);
                    k.m[s.name] = false
                }
            }
            k.ta = false
        }
        i.k.refresh()
    };
    this.Uy = function () {
        var r = null, k = null;
        for (f = 0; f < i.items.length; f++) {
            var q = i.items[f], s = q.properties["z index"];
            if (pui.f(s)) s = s.designValue;
            if (s == null || s == "") {
                s = q.dom.style.zIndex;
                if (s == null || s == "") if (q.dom.currentStyle) s = q.dom.currentStyle.zIndex; else if (window.getComputedStyle) s = document.defaultView.getComputedStyle(q.dom, null).getPropertyValue("z-index"); else {
                    q = q.dom.tagName;
                    s = q == "INPUT" || q == "BUTTON" || q == "SELECT" || q == "TEXTAREA" ? 20 : q == "IMG" || q == "DIV" ? 10 : 0
                }
            }
            s = Number(s);
            if (r == null || r < s) r = s;
            if (k == null ||
                k > s) k = s
        }
        q = [];
        q[0] = k;
        q[1] = r;
        return q
    };
    this.rB = function (r, k) {
        i.n.start(k);
        for (var q = 0; q < i.selection.e.length; q++) {
            var s = i.selection.e[q].c;
            i.n.add(s, "z index");
            s.dom.style.zIndex = r;
            if (pui.f(s.properties["z index"])) s.properties["z index"].designValue = r; else s.properties["z index"] = r;
            s.m["z index"] = true;
            s.ta = true;
            s.dom.grid != null && s.dom.grid.setProperty("z index", r)
        }
        i.k.ea("z index");
        i.X[i.i.l] = true;
        i.qb()
    };
    this.Sk = function (r) {
        var k;
        if (i.selection.e.length >= 1) {
            var q = i.selection.e[0].c;
            k = q.properties[r];
            if (k == null) return;
            if (pui.f(k)) return null;
            if (k.length < 2) return null;
            if (k.substr(k.length - 1) != "%") return null
        } else return null;
        for (var s = 1; s < i.selection.e.length; s++) {
            q = i.selection.e[s].c;
            if (q.properties[r] != k) return null
        }
        k = parseInt(k);
        if (isNaN(k)) return null;
        return k
    };
    this.Jl = function (r, k) {
        i.n.start("Set " + r + " to " + k + "%");
        var q = k + "%", s = null;
        if (r == "width") s = "left";
        if (r == "height") s = "top";
        if (r == "left") s = "right";
        if (r == "top") s = "bottom";
        if (r == "right") s = "left";
        if (r == "bottom") s = "top";
        for (var t = r == "width" ||
        r == "height" ? (100 - k) / 2 + "%" : "", u = 0; u < i.selection.e.length; u++) {
            var w = i.selection.e[u].c;
            i.n.add(w, r);
            w.dom.style[r] = q;
            if (pui.f(w.properties[r])) w.properties[r].designValue = q; else w.properties[r] = q;
            w.m[r] = true;
            if (s != null) {
                i.n.add(w, s);
                w.dom.style[s] = t;
                if (pui.f(w.properties[s])) w.properties[s].designValue = t; else w.properties[s] = t;
                w.m[s] = t != ""
            }
            w.ta = true;
            var v = w.bb();
            v != null && v.Ib(w.dom.parentNode.col);
            w.dom.sizeMe != null && typeof w.dom.sizeMe == "function" && w.dom.sizeMe()
        }
        i.selection.ne(r);
        i.selection.ne(s);
        i.k.ea(r);
        i.k.ea(s);
        i.selection.Fb();
        i.X[i.i.l] = true;
        i.qb()
    };
    this.anchor = function (r) {
        i.n.start("Anchor " + r);
        var k;
        if (r == "left") k = "right";
        if (r == "right") k = "left";
        if (r == "top") k = "bottom";
        if (r == "bottom") k = "top";
        for (var q = 0; q < i.selection.e.length; q++) {
            var s = i.selection.e[q].c;
            i.n.add(s, r);
            s.dom.style[r] = "0px";
            if (pui.f(s.properties[r])) s.properties[r].designValue = "0px"; else s.properties[r] = "0px";
            s.m[r] = true;
            i.n.add(s, k);
            s.dom.style[k] = "";
            if (pui.f(s.properties[k])) s.properties[k].designValue = ""; else s.properties[k] =
                "";
            s.m[k] = false;
            s.ta = true;
            var t = s.bb();
            t != null && t.Ib(s.dom.parentNode.col)
        }
        i.k.ea(r);
        i.k.ea(k);
        i.selection.Fb();
        i.X[i.i.l] = true;
        i.qb()
    };
    this.xF = function () {
        if (i.zm()) {
            i.n.Nc("Cut " + i.selection.ve(), i);
            i.yf()
        }
    };
    this.kF = function (r, k) {
        if (Q !== "dspf") return false;
        R.Uc = [];
        R.Uc.push(i.ry(r, k));
        if (pui.nc()) {
            localStorage.setItem("pui-designer-clipboard", "");
            localStorage.setItem("pui-designer-clipboard", JSON.stringify(R.Uc))
        }
        return true
    };
    this.ry = function (r, k) {
        function q(F) {
            var D = F.id, B = F["field type"], I, z;
            if (E[D] !=
                null) {
                if (F.children == null) F.children = [];
                I = 0;
                for (z = E[D].length; I < z; I++) {
                    var H = E[D][I];
                    F.children.push(H);
                    if (B == "layout") if (H["field type"] == "grid" || H["field type"] == "layout") q(H)
                }
            }
        }

        var s = JSON.parse(i.bh(i.i, false)).items, t = null, u = [], w, v, E = {};
        w = 0;
        for (v = s.length; w < v; w++) {
            var y = s[w];
            if (typeof y.layout == "string" && y.layout.length > 0) {
                if (E[y.layout] == null) E[y.layout] = [];
                E[y.layout].push(y)
            } else if (typeof y.grid == "string" && y.grid.length > 0) {
                if (E[y.grid] == null) E[y.grid] = [];
                E[y.grid].push(y)
            }
        }
        w = 0;
        for (v = s.length; w <
        v; w++) {
            y = s[w];
            if (y.id === r) t = y; else if (y[k] === r) {
                u.push(y);
                if (y["field type"] == "layout" || y["field type"] == "grid") q(y)
            }
        }
        return {containerType: k, b: t, children: u}
    };
    this.oA = function (r, k, q, s) {
        function t(B, I, z) {
            for (var H = 0; H < B.length; H++) {
                var J = B[H];
                J.id = a(J.id, v);
                J[z] = I;
                y.items.push(J);
                if (J.children != null && (J["field type"] == "layout" || J["field type"] == "grid")) {
                    t(J.children, J.id, J["field type"]);
                    delete J.children
                }
            }
        }

        function u() {
            try {
                delete w.grid;
                delete w.layout;
                delete w.container;
                delete w.column
            } catch (B) {
            }
        }

        o = -1;
        if (Q !== "genie") {
            r = r[0];
            var w = JSON.parse(JSON.stringify(r.b));
            r = JSON.parse(JSON.stringify(r.children));
            var v = {}, E = a(w.id, v);
            w.id = E;
            var y = JSON.parse(i.bh(i.i, false));
            y.items.push(w);
            i.n.Nc(s + (q == "grid" ? "Grid" : "Layout"), i);
            t(r, E, q);
            var F;
            if (k != null && k === i.Nb.clickEvent) u(); else if (i.selection.e.length === 1) {
                s = i.selection.e[0].c;
                if (q = s.dom.layout) {
                    u();
                    w.layout = s.properties.id;
                    if (o >= 0 && q.Ab[o]) {
                        w.container = String(o + 1);
                        F = q.Ab[o]
                    } else {
                        F = i.Jp(q);
                        for (r = s = 0; r < q.Ab.length; r++) if (q.Ab[r] == F) {
                            s = r;
                            break
                        }
                        w.container =
                            String(s + 1);
                        w.left = w.top = "0px";
                        try {
                            delete w.right;
                            delete w.bottom
                        } catch (D) {
                        }
                    }
                }
            }
            ["left", "top", "right", "bottom"].forEach(function (B) {
                if (w[B] != null) w[B] = c(w[B], B, k, 0, F)
            });
            i.load(y);
            rd.refresh()
        }
    };
    this.zm = function () {
        if (i.selection.e.length == 0) return false;
        if (i.selection.e.length == 1) {
            var r = i.selection.e[0].c.properties, k = r["field type"];
            if (k === "grid" || k === "layout") return i.kF(r.id, k);
            if (pui.widgets[k].nj) return false
        }
        R.Uc = [];
        r = R.Uc;
        for (k = 0; k < i.selection.e.length; k++) {
            var q = i.selection.e[k].c, s = {};
            for (var t in q.properties) if (!(Q !=
                "genie" && q.m[t] != true && t != "left" && t != "top")) if (!(Q == "genie" && t == "screen identifier")) {
                var u = q.properties[t];
                if (t == "value" && u == "script: value") switch (q.properties["field type"]) {
                    case "output field":
                    case "hyperlink":
                        u = tc(q.dom);
                        break;
                    case "button":
                        u = q.dom.value;
                        break
                }
                s[t] = u
            }
            if (Q == "genie") {
                if (!s.width) {
                    s.width = q.va.width || q.dom.style.width;
                    if (typeof s.width === "number") s.width += "px"
                }
                if (!s.height) {
                    s.height = q.va.height || q.dom.style.height;
                    if (typeof s.height === "number") s.height += "px"
                }
            } else {
                u = q.Ap();
                var w =
                    q.bb(), v = q.qf();
                if (w && q.dom.parentNode.T != null && q.dom.parentNode.T >= 0) {
                    s.grid = w.g.pui.properties.id;
                    s.column = String(q.dom.parentNode.T)
                } else if (v && u > 0) {
                    s.container = String(u);
                    s.layout = v.c.properties.id
                }
            }
            r.push(s)
        }
        if (pui.nc()) {
            localStorage.setItem("pui-designer-clipboard", "");
            localStorage.setItem("pui-designer-clipboard", JSON.stringify(r))
        }
        return true
    };
    this.yf = function () {
        for (var r = [], k = [], q = [], s, t = [], u = 0; u < i.selection.e.length; u++) {
            s = i.selection.e[u].c;
            if (s.properties.newitem == "true") {
                r.push(s);
                if (s.properties["field type"] ==
                    "tab panel") for (var w = 0; w < i.items.length; w++) {
                    var v = i.items[w];
                    if (v.properties["parent tab panel"] == s.properties.id && v.properties.newitem == "true") {
                        if (v.properties["field type"] == "layout") {
                            pui.alert("You must remove the layout(s) contained within the tab panel first.");
                            return
                        }
                        k.push(v)
                    }
                }
                if (s.properties["field type"] == "field set panel") for (w = 0; w < i.items.length; w++) {
                    v = i.items[w];
                    if (v.properties["parent field set"] == s.properties.id && v.properties.newitem == "true") {
                        if (v.properties["field type"] == "layout") {
                            pui.alert("You must remove the layout(s) contained within the field set panel first.");
                            return
                        }
                        k.push(v)
                    }
                }
            } else {
                pui.alert("You can only remove new elements you added.  To hide existing application elements, set the visibility property to hidden.");
                return
            }
            s.dom.layout != null && t.push(s)
        }
        if (i.selection.e.length == 1) {
            w = i.selection.e[0].c;
            u = w.dom.grid;
            if (u != null) {
                if (u.ni != null) if (u.ni()) {
                    r = u.Ft();
                    r.push(i.selection.e[0].c)
                }
                for (u = 0; u < i.kb.length; u++) if (i.kb[u] == w) {
                    i.kb.splice(u, 1);
                    Q == "dspf" && rd.refresh();
                    break
                }
            }
        }
        if (t.length > 0) for (s = 0; s < t.length; s++) {
            v = t[s];
            u = null;
            if (v.dom && v.dom.layout) u = v.dom.layout;
            if (u != null && u.ni != null) if (u.ni()) {
                w = {};
                u = u.Ft(w);
                if (w.bz) {
                    pui.alert("You must remove the tab panel(s) within the layout container first.");
                    return
                }
                if (w.$y) {
                    pui.alert("You must remove the field set panel(s) within the layout container first.");
                    return
                }
                for (w = 0; w < u.length; w++) {
                    var E = u[w];
                    if (E != null && E.dom != null && E.dom.parentNode != null) {
                        i.selection.clear();
                        i.selection.add(u[w]);
                        i.yf()
                    }
                }
            }
            for (u = 0; u < i.Nf.length; u++) if (i.Nf[u] == v) {
                i.Nf.splice(u, 1);
                break
            }
        }
        i.selection.clear();
        for (u = 0; u < r.length; u++) {
            s = r[u];
            if (s.OA !=
                true) {
                i.D.Tj(s);
                s.OA = true
            }
            for (w = 0; w < i.items.length; w++) if (i.items[w] == s) {
                i.items.splice(w, 1);
                break
            }
            if (i.i.oc == true) for (t = 0; t < i.i.fields.length; t++) if (i.i.fields[t] == s) {
                i.i.fields.splice(t, 1);
                break
            }
            if (kc[i.i.l] && kc[i.i.l].items) for (w = 0; w < kc[i.i.l].items.length; w++) kc[i.i.l].items[w].id == s.dom.id && kc[i.i.l].items.splice(w, 1);
            if (s.Qx != true) {
                s.destroy();
                s.Qx = true
            }
        }
        r = true;
        for (u = 0; u < k.length; u++) {
            s = k[u];
            if (!(s == null || s.dom == null)) {
                r = false;
                s.properties["field type"] == "grid" ? q.push(s) : i.selection.add(s)
            }
        }
        i.selection.e.length >
        0 && i.yf();
        for (u = 0; u < q.length; u++) {
            i.selection.add(q[u]);
            i.yf()
        }
        if (r) {
            i.k.refresh();
            i.X[i.i.l] = true;
            Q == "dspf" && pui.ide.He();
            i.qb();
            Q == "dspf" && pui.ide.refreshRibbon()
        }
    };
    this.bi = function (r, k) {
        function q(O, V, X) {
            O = O.cells[O.t ? 1 : 0];
            if (V < O.length) X = O[V];
            return X
        }

        function s(O, V) {
            var X;
            if (pui.da(O.left)) O.left = "0%"; else {
                X = v > 1 && t() ? E[F].left : 0;
                O.left = String(X) + "px"
            }
            if (pui.da(O.top)) O.top = String(V * 5) + "%"; else {
                X = v > 1 && t() ? E[F].top : 0;
                O.top = String(X) + "px"
            }
            try {
                delete O.right;
                delete O.bottom
            } catch (ga) {
            }
        }

        function t() {
            if (E ==
                null || E.length == 0) {
                E = [];
                for (var O = /^(\d+)px/, V = -1, X = -1, ga = 0; ga < v; ga++) {
                    var U = {top: ga * 20, left: 0, right: 0, bottom: ga * 20};
                    if (r != null) {
                        var Z = {};
                        ["top", "left", "right", "bottom", "width", "height"].forEach(function (la) {
                            if (r[ga][la]) {
                                var Y = O.exec(r[ga][la]);
                                if (Y) Z[la] = parseInt(Y[1], 10)
                            }
                        });
                        if (Z.left == null && Z.right != null && Z.width != null) Z.left = Z.right - Z.width;
                        if (Z.top == null && Z.bottom != null && Z.height != null) Z.top = Z.bottom - Z.height;
                        if (ga == 0) {
                            if (Z.left != null) X = Z.left;
                            if (Z.top != null) V = Z.top
                        } else if (V >= 0 && X >= 0) {
                            U.left =
                                Z.left - X;
                            U.top = Z.top - V
                        }
                    }
                    E.push(U)
                }
            }
            return true
        }

        var u;
        if (Array.isArray(r) && r.length === 1) {
            u = r[0].containerType;
            if (u === "grid" || u === "layout") {
                i.oA(r, k, u, "Paste ");
                return
            }
        }
        if (r == null && i.selection.e.length == 1) {
            u = i.selection.e[0].c.properties["field type"];
            if (u === "grid" || u === "layout") {
                var w = i.ry(i.selection.e[0].c.properties.id, u);
                i.oA([w], k, u, "Duplicate ");
                return
            }
        }
        u = "Duplicate " + i.selection.ve();
        if (u === "Selection") u = "";
        if (r != null) u = "Paste";
        i.n.Nc(u, i);
        u = [];
        var v = i.selection.e.length;
        if (r != null) v = r.length;
        for (var E, y, F = 0; F < v; F++) {
            var D;
            if (r != null) D = r[F]; else {
                w = i.selection.e[F].c;
                D = w.properties
            }
            var B = document.createElement("div");
            B.style.position = "absolute";
            B.id = a(D.id);
            if (r != null) {
                var I = i.b;
                if (Q === "dspf") {
                    var z, H, J;
                    H = i.Nb && i.Nb.clickEvent != null && k != null && i.Nb.clickEvent == k;
                    if (o >= 0 && i.selection.e.length === 1) {
                        H = i.selection.e[0].c.dom.layout;
                        J = i.selection.e[0].c.dom.grid;
                        if (H && H.Ab[o]) I = H.Ab[o]; else if (J && o < J.cells[0].length) I = q(J, o, I)
                    } else if (!H) {
                        if (i.selection.e.length == 1) {
                            H = i.selection.e[0].c.dom.layout;
                            J = i.selection.e[0].c.dom.grid;
                            if (H) {
                                I = i.Jp(H);
                                s(D, F)
                            } else if (J) {
                                H = i.selection.e[0].c.dom.grid.cells[i.selection.e[0].c.dom.grid.t ? 1 : 0];
                                if (H.length > 0) {
                                    I = H[0];
                                    s(D, F)
                                }
                            }
                        }
                        if (I == i.b) if (D.layout && (z = parseInt(D.container, 10)) > 0) {
                            if ((H = Tb(D.layout)) && H.layout && H.layout.Ab && H.layout.Ab[z - 1]) I = H.layout.Ab[z - 1]
                        } else if (D.grid && (z = parseInt(D.column, 10)) >= 0) if ((J = Tb(D.grid)) && J.grid && z < J.grid.cells[0].length) I = q(J.grid, z, I)
                    }
                }
                I.appendChild(B)
            } else w.dom.parentNode.appendChild(B);
            I = i.addItem(B, true);
            if (D["field type"] ==
                "styled button" || D["field type"] == "css button" || D["field type"] == "panel" || D["field type"] == "css panel" || D["field type"] == "layout") I.dom.style.borderStyle = "none";
            if (i.i.oc == true) {
                I.dom.setAttribute("parentWindow", i.i.name);
                I.properties["parent window"] = i.i.name;
                I.m["parent window"] = true;
                I.l = i.i.l;
                i.i.fields.push(I)
            }
            u.push(I);
            I.properties.newitem = "true";
            I.m.newitem = true;
            if (Q == "genie") {
                if (B.style.borderLeftStyle == "dotted") B.style.borderLeftColor = "#15428b";
                if (B.style.borderRightStyle == "dotted") B.style.borderRightColor =
                    "#15428b";
                if (B.style.borderTopStyle == "dotted") B.style.borderTopColor = "#15428b";
                if (B.style.borderBottomStyle == "dotted") B.style.borderBottomColor = "#15428b"
            }
            H = oc();
            for (var K = 0; K < H.length; K++) {
                J = H[K];
                if (!(Q == "genie" && J.j == "dspf" || Q == "dspf" && (J.j == "genie" || J.j == "genie-nohandler") || Q == "genie" && !pui.Na && J.j == "genie-nohandler")) if (!(r != null && (J.name == "parent tab panel" || J.name == "parent tab" || J.name == "parent field set"))) {
                    var L = D[J.name];
                    y = J.name === "left" || J.name === "top" || J.name === "right" || J.name === "bottom";
                    if (Q == "genie" && (pui.f(L) && J.bind != true || pui.Ia(L))) {
                        var N = L.designValue;
                        if (N == null) {
                            N = L.fieldName;
                            N = N == null ? "" : "[" + N + "]"
                        }
                        L = N;
                        D[J.name] = N
                    }
                    if (I.dom.parentNode == i.b || o >= 0) {
                        if (y && L != null) {
                            y = v > 1 && t() ? E[F][J.name] : 0;
                            L = c(L, J.name, k, y, I.dom.parentNode)
                        }
                    } else if (J.name === "left") L = pui.da(L) ? pui.Rc(L) + 10 + "%" : pui.Rc(L) + 50 + "px"; else if (J.name === "right" && L != null) L = pui.da(L) ? pui.Rc(L) - 10 + "%" : pui.Rc(L) - 50 + "px";
                    if (r == null && J.name == "value" && L == "script: value") switch (D["field type"]) {
                        case "output field":
                        case "hyperlink":
                            L =
                                tc(w.dom);
                            break;
                        case "button":
                            L = w.dom.value;
                            break
                    }
                    if (J.name == "id") L = B.id;
                    if (r == null && (J.name == "font weight" || J.name == "text align")) if (w.dom.currentStyle) {
                        L = "";
                        if (J.name == "font weight") L = "fontWeight";
                        if (J.name == "text align") L = "textAlign";
                        L = w.dom.currentStyle[L]
                    } else if (window.getComputedStyle) L = document.defaultView.getComputedStyle(w.dom, null).getPropertyValue(J.name.replace(" ", "-"));
                    if (L != null && L != "" && J.name != "newitem") if (r != null || w.m[J.name] == true) {
                        if (Q != "genie" && L.longName) L.fieldName = i.D.Tk(L.longName);
                        uc(J, I.properties, I.dom, L, true, I);
                        pui.f(L) && i.D.Tc({
                            fieldName: L.fieldName,
                            dataType: L.dataType,
                            dataLength: L.dataLength,
                            decPos: L.decPos,
                            refField: L.refField,
                            keywords: L.keywords,
                            c: I,
                            property: J.name,
                            fg: true,
                            longName: L.longName
                        }, i);
                        if (J.U == true) {
                            y = J.name;
                            N = 2;
                            J.name = y + " " + N;
                            for (L = D[J.name]; L != null;) {
                                if (Q != "genie" && L.longName) L.fieldName = i.D.Tk(L.longName);
                                uc(J, I.properties, I.dom, L, true, I);
                                pui.f(L) && i.D.Tc({
                                    fieldName: L.fieldName,
                                    dataType: L.dataType,
                                    dataLength: L.dataLength,
                                    decPos: L.decPos,
                                    refField: L.refField,
                                    keywords: L.keywords,
                                    c: I,
                                    property: J.name,
                                    fg: true,
                                    longName: L.longName
                                }, i);
                                N++;
                                J.name = y + " " + N;
                                L = D[J.name]
                            }
                            J.name = y
                        }
                    }
                }
            }
            I.Pc();
            I.dom.sizeMe != null && typeof I.dom.sizeMe == "function" && I.dom.sizeMe()
        }
        i.selection.clear();
        for (F = 0; F < u.length; F++) i.selection.add(u[F]);
        i.X[i.i.l] = true;
        i.k.refresh();
        o = -1
    };
    this.ga = function (r, k, q) {
        if (!(i.selection.e.length <= 0)) {
            if (k == null) k = i.selection.e[0].c.dom;
            var s = r.toLowerCase(), t = false;
            if (s.substr(0, 6) == "clear ") {
                t = true;
                s = s.substr(6)
            }
            var u, w, v = false, E = false, y = false, F = "normal",
                D = 99999, B = 99999, I = 0, z = 0, H = 0, J = "";
            r != "paste formatting" && i.n.start(r);
            switch (s) {
                case "mark as identifier":
                    u = "screen identifier";
                    w = "true";
                    if (i.Ga[i.i.l]["screen name"] == "" || i.Ga[i.i.l]["screen name"] == null) {
                        var K = i.selection.e[0].c;
                        if (K.originalValue != null) {
                            var L = "";
                            for (r = 0; r < K.originalValue.length; r++) {
                                var N = K.originalValue.substr(r, 1), O = false;
                                if (N >= "A" && N <= "Z") O = true;
                                if (N >= "a" && N <= "z") O = true;
                                if (N >= "0" && N <= "9") O = true;
                                if (N == "_") O = true;
                                if (N == " ") O = true;
                                if (O) L += N
                            }
                            L = Zb(L);
                            if (L != "") {
                                i.Ga[i.i.l]["screen name"] =
                                    L;
                                i.Nd[i.i.l]["screen name"] = true;
                                i.X[i.i.l] = true;
                                if (i.i.oc == true) for (r = 0; r < i.i.fields.length; r++) {
                                    N = i.i.fields[r];
                                    N.dom.setAttribute("parentWindow", L);
                                    N.properties["parent window"] = L;
                                    N.m["parent window"] = true
                                }
                                i.i.name = L;
                                R.cv();
                                i.k.refresh();
                                i.n.clear()
                            }
                        }
                    }
                    break;
                case "remove identifier":
                    u = "screen identifier";
                    w = "false";
                    break;
                case "duplicate":
                    if (Q == "genie") {
                        i.zm();
                        i.bi(R.Uc)
                    } else {
                        i.bi();
                        i.Ff()
                    }
                    break;
                case "set original properties":
                    i.cJ();
                    break;
                case "cut":
                    i.xF();
                    break;
                case "copy":
                    i.zm();
                    Q == "dspf" && pui.ide.refreshRibbon();
                    break;
                case "paste":
                    if (o >= 0) {
                        r = R.Uc;
                        if (pui.nc()) if (L = localStorage.getItem("pui-designer-clipboard")) r = JSON.parse(L);
                        i.bi(r, i.Qa.clickEvent)
                    }
                    break;
                case "remove grid":
                    i.selection.e.forEach(function (oa) {
                        for (var qa = 0; qa < pui.kc.length;) {
                            if (oa.c.dom.grid == pui.kc[qa]) {
                                pui.kc.splice(qa, 1);
                                break
                            }
                            qa++
                        }
                    });
                case "remove":
                case "remove layout":
                case "remove tab panel":
                    r = r;
                    if (r === "Remove") r += " " + i.selection.ve();
                    i.n.Nc(r, i);
                    i.yf();
                    break;
                case "remove header":
                    K = i.selection.e[0].c;
                    L = K.dom.grid;
                    O = parseInt(K.dom.style.top);
                    i.n.start("Remove Header");
                    i.n.add(K, "top");
                    i.n.add(K, "has header");
                    i.n.add(K, "number of rows");
                    L.setProperty("has header", "false");
                    K.properties["has header"] = "false";
                    K.m["has header"] = true;
                    i.k.ea("has header");
                    L.vl();
                    O += L.be;
                    O += "px";
                    L.setProperty("top", O);
                    K.properties.top = O;
                    K.m.top = true;
                    i.k.ea("top");
                    i.X[i.i.l] = true;
                    L.cd();
                    break;
                case "add header":
                    K = i.selection.e[0].c;
                    L = K.dom.grid;
                    O = parseInt(K.dom.style.top);
                    i.n.start("Add Header");
                    i.n.add(K, "top");
                    i.n.add(K, "has header");
                    i.n.add(K, "number of rows");
                    L.setProperty("has header", "true");
                    K.properties["has header"] = "true";
                    K.m["has header"] = true;
                    i.k.ea("has header");
                    L.Kg();
                    L.Kj();
                    O -= L.be;
                    O += "px";
                    L.setProperty("top", O);
                    K.properties.top = O;
                    K.m.top = true;
                    i.k.ea("top");
                    i.X[i.i.l] = true;
                    L.cd();
                    break;
                case "remove column":
                    i.n.Nc("Remove Column", i);
                    L = i.selection.e[0].c.dom.grid;
                    if (L.ni(L.cr)) {
                        r = L.dA(L.cr);
                        if (r != null) {
                            if (!String.prototype.trim) String.prototype.trim = function () {
                                return this.replace(/^\s+|\s+$/gm, "")
                            };
                            pui.alert("The column cannot be removed because it contains other elements that must be removed first.\n\nTo remove column elements, go to the Elements tab. Then, search the element list for the ID(s) listed below:\n" +
                                r.join("\n") + "\n\nSelect each element and click the Remove Element icon.")
                        }
                    } else {
                        L.removeColumn(L.cr);
                        L.cd()
                    }
                    break;
                case "hide":
                    u = "visibility";
                    w = "hidden";
                    i.n.start("Hide");
                    break;
                case "lock in place":
                    u = "locked in place";
                    w = "true";
                    i.n.start("Lock in Place");
                    break;
                case "unlock":
                    u = "locked in place";
                    w = "false";
                    i.n.start("Unlock");
                    break;
                case "set font":
                    u = "font family";
                    w = q;
                    i.n.start("Set Font Family");
                    break;
                case "grow font":
                    u = "font size";
                    w = "14px";
                    E = true;
                    i.n.start("Grow Font");
                    break;
                case "shrink font":
                    u = "font size";
                    w = "14px";
                    y = true;
                    i.n.start("Shrink Font");
                    break;
                case "bold":
                    u = "font weight";
                    w = "bold";
                    v = true;
                    i.n.start("Bold");
                    break;
                case "italicize":
                    u = "font style";
                    w = "italic";
                    v = true;
                    i.n.start("Italicize");
                    break;
                case "underline":
                    u = "text decoration";
                    w = "underline";
                    v = true;
                    F = "none";
                    i.n.start("Underline");
                    break;
                case "align left":
                    u = "text align";
                    w = "left";
                    i.n.start("Align Left");
                    break;
                case "center":
                    u = "text align";
                    w = "center";
                    i.n.start("Center");
                    break;
                case "align right":
                    u = "text align";
                    w = "right";
                    i.n.start("Align Right");
                    break;
                case "set color":
                    u = "color";
                    w = q;
                    i.n.start("Set Color");
                    break;
                case "paste formatting":
                    u = q.N;
                    w = q.value;
                    if (w == "") t = true;
                    break;
                case "combine into text area":
                    i.n.clear();
                    for (r = I = 0; r < i.selection.e.length; r++) {
                        K = i.selection.e[r].c;
                        z = K.dom;
                        L = Number(z.style.zIndex);
                        if (L == null || isNaN(L) || L == 0) L = Number(K.properties["z index"]);
                        if (L == null || isNaN(L) || L == 0) L = 20;
                        L++;
                        if (L > H) H = L;
                        if (parseInt(z.style.left) < D) D = parseInt(z.style.left);
                        if (parseInt(z.style.top) < B) B = parseInt(z.style.top);
                        u = parseInt(z.style.left) + z.offsetWidth;
                        if (u > I) I = u;
                        if (J != "") J += ",";
                        J += z.id
                    }
                    I = I - D;
                    if (I < 0) I = 100;
                    I += 20;
                    z = i.selection.e.length * pui.Ob;
                    u = "visibility";
                    w = "hidden";
                    break;
                case "show":
                    i.n.start("Show");
                    u = "visibility";
                    w = "visible";
                    break;
                case "bring to front":
                    r = i.Uy();
                    L = r[1];
                    if (L != null) {
                        L = Number(L) + 1;
                        i.rB(L, "Bring to Front")
                    }
                    break;
                case "send to back":
                    r = i.Uy();
                    L = r[0];
                    if (L != null) {
                        L = Number(L) - 1;
                        i.rB(L, "Send to Back")
                    }
                    break;
                case "align tops":
                    i.n.start("Align Tops");
                    N = L = null;
                    for (r = 0; r < i.selection.e.length; r++) {
                        K = i.selection.e[r].c;
                        if (K.properties["locked in place"] !=
                            "true" && K.dom.style.top != k.style.top) {
                            i.n.add(K, "top");
                            K.dom.style.top = k.style.top;
                            if (pui.f(K.properties.top)) K.properties.top.designValue = k.style.top; else K.properties.top = k.style.top;
                            K.m.top = true;
                            K.ta = true;
                            K.designer.X[K.designer.i.l] = true;
                            i.qb();
                            i.selection.e[r].Fb();
                            L = K.bb();
                            N = K.dom.parentNode;
                            K.Pc()
                        }
                    }
                    L != null && L.Ib(N.col);
                    break;
                case "align lefts":
                    i.n.start("Align Lefts");
                    N = L = null;
                    for (r = 0; r < i.selection.e.length; r++) {
                        K = i.selection.e[r].c;
                        if (K.properties["locked in place"] != "true" && K.dom.style.left !=
                            k.style.left) {
                            i.n.add(K, "left");
                            K.dom.style.left = k.style.left;
                            if (pui.f(K.properties.left)) K.properties.left.designValue = k.style.left; else K.properties.left = k.style.left;
                            K.m.left = true;
                            K.ta = true;
                            K.designer.X[K.designer.i.l] = true;
                            i.qb();
                            i.selection.e[r].Fb();
                            L = K.bb();
                            N = K.dom.parentNode;
                            K.Pc()
                        }
                    }
                    L != null && L.Ib(N.col);
                    break;
                case "align rights":
                    i.n.start("Align Rights");
                    var V;
                    V = k.style.width ? parseInt(k.style.width) : k.offsetWidth;
                    q = parseInt(k.style.left);
                    if (isNaN(q)) q = 0;
                    N = L = null;
                    for (r = 0; r < i.selection.e.length; r++) {
                        K =
                            i.selection.e[r].c;
                        O = q + V - (K.dom.style.width ? parseInt(K.dom.style.width) : K.dom.offsetWidth) + "px";
                        if (K.properties["locked in place"] != "true" && K.dom.style.left != O) {
                            i.n.add(K, "left");
                            K.dom.style.left = O;
                            if (pui.f(K.properties.left)) K.properties.left.designValue = O; else K.properties.left = O;
                            K.m.left = true;
                            K.ta = true;
                            K.designer.X[K.designer.i.l] = true;
                            i.qb();
                            i.selection.e[r].Fb();
                            L = K.bb();
                            N = K.dom.parentNode;
                            K.Pc()
                        }
                    }
                    L != null && L.Ib(N.col);
                    break;
                case "align bottoms":
                    i.n.start("Align Bottoms");
                    V = k.style.height ? parseInt(k.style.height) :
                        k.offsetHeight;
                    var X = parseInt(k.style.top);
                    if (isNaN(X)) q = 0;
                    N = L = null;
                    for (r = 0; r < i.selection.e.length; r++) {
                        K = i.selection.e[r].c;
                        O = X + V - (K.dom.style.height ? parseInt(K.dom.style.height) : K.dom.offsetHeight) + "px";
                        if (K.properties["locked in place"] != "true" && K.dom.style.top != O) {
                            i.n.add(K, "top");
                            K.dom.style.top = O;
                            if (pui.f(K.properties.top)) K.properties.top.designValue = O; else K.properties.top = O;
                            K.m.top = true;
                            K.ta = true;
                            K.designer.X[K.designer.i.l] = true;
                            i.qb();
                            i.selection.e[r].Fb();
                            L = K.bb();
                            N = K.dom.parentNode;
                            K.Pc()
                        }
                    }
                    L !=
                    null && L.Ib(N.col);
                    break;
                case "make same width":
                    i.n.start("Make Same Width");
                    q = k.style.width ? k.style.width : window.getComputedStyle(k).getPropertyValue("width");
                    for (r = 0; r < i.selection.e.length; r++) {
                        K = i.selection.e[r].c;
                        N = L = null;
                        if (K.properties["locked in place"] != "true" && K.dom.style.width != q) {
                            i.n.add(K, "width");
                            K.dom.style.width = q;
                            if (pui.f(K.properties.width)) K.properties.width.designValue = q; else K.properties.width = q;
                            K.m.width = true;
                            K.ta = true;
                            K.designer.X[K.designer.i.l] = true;
                            i.qb();
                            i.selection.e[r].Fb();
                            L = K.bb();
                            N = K.dom.parentNode;
                            K.Pc();
                            K.dom.tabPanel != null && K.properties["field type"] == "tab panel" && K.dom.tabPanel.H()
                        }
                    }
                    i.selection.ne("width");
                    L != null && L.Ib(N.col);
                    break;
                case "make same height":
                    i.n.start("Make Same Height");
                    q = k.style.height ? k.style.height : window.getComputedStyle(k).getPropertyValue("height");
                    for (r = 0; r < i.selection.e.length; r++) {
                        K = i.selection.e[r].c;
                        N = L = null;
                        if (K.properties["locked in place"] != "true" && K.dom.style.height != q) {
                            i.n.add(K, "height");
                            K.dom.style.height = q;
                            if (pui.f(K.properties.height)) K.properties.height.designValue =
                                q; else K.properties.height = q;
                            K.m.height = true;
                            K.ta = true;
                            K.designer.X[K.designer.i.l] = true;
                            i.qb();
                            i.selection.e[r].Fb();
                            L = K.bb();
                            N = K.dom.parentNode;
                            K.Pc();
                            K.dom.tabPanel != null && K.properties["field type"] == "tab panel" && K.dom.tabPanel.H()
                        }
                    }
                    i.selection.ne("height");
                    L != null && L.Ib(N.col);
                    break;
                case "equal space horizontally":
                    if (i.selection.e.length < 3) break;
                    i.n.start("Equal Space");
                    L = [];
                    for (r = 0; r < i.selection.e.length; r++) L.push(i.selection.e[r]);
                    L.sort(function (oa, qa) {
                        var ma = qa.c.dom;
                        return parseInt(oa.c.dom.style.left) -
                            parseInt(ma.style.left)
                    });
                    r = L[0].c.dom;
                    N = L[1].c.dom;
                    O = parseInt(r.style.left);
                    N = parseInt(N.style.left) - (O + (r.style.width ? parseInt(r.style.width) : r.offsetWidth));
                    if (N < 0) N = 0;
                    O = O;
                    for (r = 1; r < L.length; r++) {
                        K = L[r].c;
                        q = L[r - 1].c;
                        q = q.dom.style.width ? parseInt(q.dom.style.width) : q.dom.offsetWidth;
                        O += q + N;
                        if (K.properties["locked in place"] != "true" && K.dom.style.left != O + "px") {
                            i.n.add(K, "left");
                            K.dom.style.left = O + "px";
                            if (pui.f(K.properties.left)) K.properties.left.designValue = O + "px"; else K.properties.left = O + "px";
                            K.m.left =
                                true;
                            K.ta = true;
                            K.designer.X[K.designer.i.l] = true;
                            i.qb();
                            L[r].Fb();
                            K.Pc();
                            K.dom.tabPanel != null && K.properties["field type"] == "tab panel" && K.dom.tabPanel.H()
                        }
                    }
                    i.selection.ne("left");
                    break;
                case "equal space vertically":
                    if (i.selection.e.length < 3) break;
                    i.n.start("Equal Space");
                    L = [];
                    for (r = 0; r < i.selection.e.length; r++) L.push(i.selection.e[r]);
                    L.sort(function (oa, qa) {
                        var ma = qa.c.dom;
                        return parseInt(oa.c.dom.style.top) - parseInt(ma.style.top)
                    });
                    r = L[0].c.dom;
                    N = L[1].c.dom;
                    O = parseInt(r.style.top);
                    N = parseInt(N.style.top) -
                        (O + (r.style.height ? parseInt(r.style.height) : r.offsetHeight));
                    if (N < 0) N = 0;
                    O = O;
                    for (r = 1; r < L.length; r++) {
                        K = L[r].c;
                        q = L[r - 1].c;
                        q = q.dom.style.height ? parseInt(q.dom.style.height) : q.dom.offsetHeight;
                        O += q + N;
                        if (K.properties["locked in place"] != "true" && K.dom.style.top != O + "px") {
                            i.n.add(K, "top");
                            K.dom.style.top = O + "px";
                            if (pui.f(K.properties.top)) K.properties.top.designValue = O + "px"; else K.properties.top = O + "px";
                            K.m.top = true;
                            K.ta = true;
                            K.designer.X[K.designer.i.l] = true;
                            i.qb();
                            L[r].Fb();
                            K.Pc();
                            K.dom.tabPanel != null && K.properties["field type"] ==
                            "tab panel" && K.dom.tabPanel.H()
                        }
                    }
                    i.selection.ne("top");
                    break;
                case "center horizontally":
                    var ga = false;
                    i.selection.e.forEach(function (oa) {
                        var qa = oa.c, ma = qa.dom.getBoundingClientRect().width;
                        if (qa.label) ma += qa.label.getBoundingClientRect().width;
                        if (qa.properties["locked in place"] != "true" && ma) {
                            i.n.Nc("center horizontally", i);
                            ma = "calc(50% - " + Math.floor(ma / 2) + "px)";
                            qa.dom.style.left = ma;
                            if (pui.f(qa.properties.left)) qa.properties.left.designValue = ma; else qa.properties.left = ma;
                            qa.m.left = true;
                            qa.ta = true;
                            qa.designer.X[qa.designer.i.l] = true;
                            i.qb();
                            Q == "dspf" && pui.ide.refreshRibbon();
                            oa.Fb();
                            qa.Pc();
                            oa = qa.bb();
                            var ka = qa.dom.parentNode;
                            oa && oa.Ib(ka.col);
                            qa.dom.tabPanel != null && qa.properties["field type"] == "tab panel" && qa.dom.tabPanel.H();
                            if (qa.properties["field type"] === "layout" && !qa.xe()) {
                                qa.dom.layout.Er("center horizontally", "true");
                                qa.designer.k.Hg("center horizontally", "true", true);
                                ga = true
                            } else qa.designer.k.Hg("left", ma, true)
                        }
                    });
                    ga || i.selection.ne("left");
                    break;
                case "center vertically":
                    ga = false;
                    i.selection.e.forEach(function (oa) {
                        var qa = oa.c, ma = qa.dom.getBoundingClientRect().height;
                        if (qa.properties["locked in place"] != "true" && ma) {
                            i.n.Nc("center vertically", i);
                            ma = "calc(50% - " + Math.floor(ma / 2) + "px)";
                            qa.dom.style.top = ma;
                            if (pui.f(qa.properties.top)) qa.properties.top.designValue = ma; else qa.properties.top = ma;
                            qa.m.top = true;
                            qa.ta = true;
                            qa.designer.X[qa.designer.i.l] = true;
                            i.qb();
                            Q == "dspf" && pui.ide.refreshRibbon();
                            oa.Fb();
                            qa.Pc();
                            oa = qa.bb();
                            var ka = qa.dom.parentNode;
                            oa && oa.Ib(ka.col);
                            qa.dom.tabPanel !=
                            null && qa.properties["field type"] == "tab panel" && qa.dom.tabPanel.H();
                            if (qa.properties["field type"] === "layout" && !qa.xe()) {
                                qa.dom.layout.Er("center vertically", "true");
                                qa.designer.k.Hg("center vertically", "true", true);
                                ga = true
                            } else qa.designer.k.Hg("top", ma, true)
                        }
                    });
                    ga || i.selection.ne("top");
                    break;
                case "make window":
                    i.n.clear();
                    L = 1;
                    for (N = false; N == false;) {
                        O = "[Unnamed Window " + L + "]";
                        q = false;
                        for (r = 0; r < Va.length; r++) if (Va[r].name == O) {
                            q = true;
                            break
                        }
                        if (q == false) N = true; else L++
                    }
                    Va.push({
                        name: O, oc: true, fields: [],
                        l: Va.length
                    });
                    L = Va[Va.length - 1];
                    for (r = 0; r < i.selection.e.length; r++) {
                        N = i.selection.e[r].c;
                        N.dom.setAttribute("parentWindow", O);
                        N.properties["parent window"] = O;
                        N.m["parent window"] = true;
                        N.l = L.l;
                        N.dom.setAttribute("screenId", L.l);
                        L.fields.push(N)
                    }
                    i.Ga[L.l] = {};
                    i.Nd[L.l] = {};
                    i.qB(L.l);
                    break;
                case "add to set":
                    var U = Ext.getCmp("widgetSets"), Z = [];
                    U.items.each(function (oa, qa) {
                        Z.push([String(qa), oa.title])
                    });
                    var la = new Ext.form.ComboBox({
                            fieldLabel: "Set",
                            store: Z,
                            editable: false,
                            triggerAction: "all",
                            value: 0
                        }),
                        Y = new Ext.Window({
                            title: "Add to Set",
                            resizable: false,
                            modal: true,
                            constrain: true,
                            width: 250,
                            layout: "form",
                            layoutConfig: {labelWidth: 25},
                            bodyStyle: {padding: "5px"},
                            items: [la],
                            buttons: [{
                                text: "OK", handler: function () {
                                    for (var oa = U.items.itemAt(la.getValue()), qa = [], ma = 0; ma < i.selection.e.length; ma++) qa.push({properties: JSON.parse(JSON.stringify(i.selection.e[ma].c.properties))});
                                    pui.ide.Uw(qa, oa);
                                    Y.close()
                                }
                            }, {
                                text: "Cancel", handler: function () {
                                    Y.close()
                                }
                            }]
                        });
                    Y.show();
                    break
            }
            if (s.substr(0, 10) == "change to ") {
                if (k.grid !=
                    null) return;
                u = "field type";
                w = s.substr(10, s.length - 10);
                if (w == "dropdown") w = "select box"
            }
            if (u != null && w != null) {
                L = rc()[u];
                for (r = 0; r < i.selection.e.length; r++) {
                    K = i.selection.e[r].c;
                    pui.f(K.properties[u]) && i.D.vh({c: K, fieldName: K.properties[u].fieldName, property: u});
                    newValue = K.properties[u] == w && v ? F : w;
                    if (E) {
                        k = K.properties[u];
                        k = parseInt(k);
                        if (isNaN(k)) k = 14;
                        if (k < 100) {
                            k += 1;
                            if (k > 15) if (k % 2 == 1) k += 1
                        }
                        newValue = k + "px"
                    }
                    if (y) {
                        k = K.properties[u];
                        k = parseInt(k);
                        if (isNaN(k)) k = 12;
                        if (k > 8) {
                            k -= 1;
                            if (k > 15) if (k % 2 == 1) k -= 1
                        }
                        newValue =
                            k + "px"
                    }
                    if (t) newValue = "";
                    if (K.properties[u] != newValue || t) {
                        i.n.add(K, u);
                        uc(L, K.properties, K.dom, newValue, true, K, i.selection.e[r]);
                        if (t) {
                            K.properties[u] = "";
                            K.m[u] = false
                        }
                    }
                }
                if (s == "unlock") K.m[u] = false;
                u == "field type" ? i.k.refresh() : i.k.ea(u)
            }
            if (s != "copy") i.X[i.i.l] = true;
            if (s == "combine into text area") {
                R.addElement("Text Area");
                K = i.selection.e[0].c;
                t = K.dom;
                t.style.left = D + "px";
                t.style.top = B + "px";
                t.style.width = I + "px";
                t.style.height = z + "px";
                K.properties.left = D + "px";
                K.properties.top = B + "px";
                K.properties.width =
                    I + "px";
                K.properties.height = z;
                K.m.left = true;
                K.m.top = true;
                K.m.width = true;
                K.m.height = true;
                t.style.zIndex = H;
                K.properties["z index"] = String(H);
                K.m["z index"] = true;
                K.properties["related field"] = J;
                K.m["related field"] = true;
                i.selection.e[0].Fb();
                i.k.refresh()
            }
            if (s == "lock in place" || s == "unlock") i.selection.e[0].Fb()
        }
    };
    this.rr = function (r) {
        var k = i.Qa == null;
        if (k) i.Qa = new pui.designer.am;
        var q = S.getTarget(r);
        if (q.tagName == "A" && q.parentNode != null) q = q.parentNode;
        if (q.parentNode != null && (q.parentNode.button != null ||
            q.parentNode.panel != null)) q = q.parentNode;
        if (q.parentNode != null && q.parentNode.parentNode != null && (q.parentNode.parentNode.button != null || q.parentNode.parentNode.panel != null)) q = q.parentNode.parentNode;
        if (q.parentNode != null && q.parentNode.parentNode != null && q.parentNode.parentNode.parentNode != null && (q.parentNode.parentNode.parentNode.button != null || q.parentNode.parentNode.parentNode.panel != null)) q = q.parentNode.parentNode.parentNode;
        if (q.lH == true) q = q.parentNode;
        if (q.id == "" && q.parentNode != null && q.parentNode.id !=
            "" && q.parentNode.tagName == "BUTTON") q = q.parentNode;
        for (var s = [], t = [], u = true, w = false, v = true, E = true, y = true, F = true, D = false, B = 0; B < i.selection.e.length; B++) {
            var I = i.selection.e[B].c;
            if (I.properties.newitem != "true") u = false; else w = true;
            if (I.properties.visibility != "hidden") v = false;
            if (I.properties["screen identifier"] != "true") E = false;
            if (I.properties["field type"] != "textbox") y = false;
            if (I.properties["field type"] != "output field" && I.properties["field type"] != "hyperlink" && I.properties["field type"] != "button") I.properties["field type"] ==
            "textbox" && I.properties["css class"] != null && !pui.f(I.properties["css class"]) && I.properties["css class"].indexOf("readOnly") != -1 || (F = false);
            if (I.originalValue == null || Zb(I.originalValue) == "") D = true
        }
        if (!w && F && !D) {
            E ? s.push("Remove Identifier") : s.push("Mark as Identifier");
            t.push("identifier")
        }
        var z = D = F = I = E = B = false, H = false;
        if (i.selection.e.length == 1) {
            B = i.selection.e[0].c.properties["field type"];
            if (B == "tab panel") F = true;
            if (B == "layout") I = true;
            if (B == "grid") {
                E = true;
                var J = q;
                if (J.row == null || J.col == null) J =
                    J.parentNode;
                if (J != null && J.row != null && J.col != null) {
                    var K = J.parentNode.grid;
                    if (K.t && J.row == 0) {
                        z = D = true;
                        K.cr = J.col
                    } else K.t || (H = true);
                    J = i.selection.e[0].c.properties;
                    if (pui.f(J["has header"]) || pui.f(J.top)) H = z = false
                }
            }
            if (pui.widgets[B].nj) B = true
        }
        if (!E || Q == "dspf") {
            s.push("Duplicate");
            t.push("duplicate")
        }
        if (u && (!E || Q == "dspf")) {
            s.push("Cut");
            t.push("cut")
        }
        if (!E || Q == "dspf") {
            s.push("Copy");
            t.push("copy")
        }
        if (Q == "dspf" && (E || I)) {
            K = true;
            o = -1;
            if (E) {
                J = i.selection.e[0].c.dom.grid.cells[i.selection.e[0].c.dom.grid.t ?
                    1 : 0];
                B = R.Uc;
                if (pui.nc()) {
                    var L = localStorage.getItem("pui-designer-clipboard");
                    if (L) B = JSON.parse(L)
                }
                if (!B || !B[0] || B[0]["field type"] == null || B[0]["field type"] == "grid" || B[0]["field type"] == "layout") K = false
            } else J = i.selection.e[0].c.dom.layout.Ab;
            for (B = 0; K && B < J.length; B++) {
                L = pui.Qk(r);
                var N = pui.Xe(J[B]), O = N[0];
                N = N[1];
                var V = O + J[B].offsetWidth, X = N + J[B].offsetHeight;
                if (L.x >= O && L.x <= V && L.y >= N && L.y <= X) {
                    o = B;
                    break
                }
            }
            if (o >= 0) {
                s.push("Paste");
                t.push("paste")
            }
        }
        if (!w) {
            s.push("Set Original Properties");
            t.push("default")
        }
        if (z) {
            s.push("Remove Header");
            t.push("remove_header")
        }
        if (H) {
            s.push("Add Header");
            t.push("add_header")
        }
        if (D && Q == "dspf") {
            s.push("Remove Column");
            t.push("remove_column")
        }
        if (u) {
            w = "";
            if (E) w = " Grid";
            if (I) w = " Layout";
            if (F) w = " Tab Panel";
            s.push("Remove" + w);
            t.push("remove")
        }
        if (!u || Q == "dspf") if (v) {
            s.push("Show");
            t.push("show")
        } else {
            s.push("Hide");
            t.push("hide")
        }
        if (i.selection.e.length == 1) if (i.selection.e[0].c.properties["locked in place"] == "true") {
            s.push("Unlock");
            t.push("unlock")
        } else {
            s.push("Lock in Place");
            t.push("lock")
        }
        s.push("Bring to Front");
        t.push("bring_to_front");
        s.push("Send to Back");
        t.push("send_to_back");
        if (i.selection.e.length == 1) {
            I = i.selection.e[0].c;
            var ga = I.properties["field type"];
            u = function (U, Z) {
                for (var la = false, Y = 0; Y < U.length; Y++) {
                    if (U[Y].toLowerCase() == ga) la = true;
                    if (U[Y] == "Dropdown" && ga === "select box") la = true
                }
                if (la) for (Y = 0; Y < U.length; Y++) if (U[Y].toLowerCase() != ga) if (!(ga == "select box" && U[Y] == "Dropdown")) {
                    s.push("Change to " + U[Y]);
                    t.push(Z[Y])
                }
            };
            u(["Output Field", "Button", "Hyperlink"], ["output_field", "button", "hyperlink"]);
            u(["Textbox", "Date Field", "Spinner", "Checkbox", "Dropdown", "Text Area"], ["textbox", "date_field", "spinner", "checkbox", "dropdown_box", "text_area"])
        }
        if (i.selection.e.length > 1 && y && Q == "genie") {
            s.push("Combine into Text Area");
            t.push("text_area")
        }
        if (i.selection.e.length > 1 && q.id != null && q.id != "" && q.id != Ca) if (Q == "genie" || !i.selection.wH()) {
            s.push("Align Tops");
            t.push("align_tops");
            s.push("Align Bottoms");
            t.push("align_bottoms");
            s.push("Align Lefts");
            t.push("align_lefts");
            s.push("Align Rights");
            t.push("align_rights");
            if (i.selection.e.length > 2) {
                s.push("Equal Space Horizontally");
                t.push("equal_space_h");
                s.push("Equal Space Vertically");
                t.push("equal_space_v")
            }
            s.push("Make Same Width");
            t.push("make_same_width");
            s.push("Make Same Height");
            t.push("make_same_height")
        }
        if (!E) {
            s.push("Center Horizontally");
            t.push("center_horizontally");
            s.push("Center Vertically");
            t.push("center_vertically")
        }
        if (i.selection.e.length > 1 && i.i.oc == false && Q == "genie") {
            s.push("Make Window");
            t.push("window")
        }
        if (i.selection.e.length > 0 && Q == "dspf") if (Ext.getCmp("widgetSets").items.getCount() >
            0) {
            s.push("Add to Set");
            t.push("add")
        }
        i.Qa.Qf = "context";
        i.Qa.Hd = s;
        i.Qa.Jj = t;
        i.Qa.clickEvent = r;
        i.Qa.handler = function (U) {
            i.ga(U, q)
        };
        k && i.Qa.init();
        k || i.Qa.Yu();
        i.Qa.show()
    };
    this.Ff = function () {
        for (var r = 0, k = 0, q = 0, s = [], t = 0; t < i.items.length; t++) {
            var u = i.items[t];
            k = r = 0;
            if (u.properties["field type"] == "tab panel" && (u.properties["locked in place"] == "true" || !u.isSelected())) for (var w = i.selection.e, v = 0; v < w.length; v++) {
                var E = w[v].c;
                if (E.properties["field type"] != "tab panel" && E.properties["field type"] != "field set panel") if (!E.de() &&
                    E.uz(u.dom)) {
                    E.properties["parent tab panel"] != u.properties.id && r++;
                    E.properties["parent tab panel"] = u.properties.id;
                    E.dom.Jb = u.properties.id;
                    E.m["parent tab panel"] = true;
                    i.k.ea("parent tab panel");
                    E.properties["parent tab"] = u.dom.tabPanel.selectedTab;
                    E.dom.Yc = u.dom.tabPanel.selectedTab;
                    E.m["parent tab"] = true;
                    i.k.ea("parent tab")
                } else if (E.properties["parent tab panel"] == u.properties.id) {
                    k++;
                    E.properties["parent tab panel"] = "";
                    E.dom.Jb = null;
                    E.m["parent tab panel"] = false;
                    i.k.ea("parent tab panel");
                    E.properties["parent tab"] = "";
                    E.m["parent tab"] = false;
                    i.k.ea("parent tab")
                }
            }
            if (u.properties["field type"] == "field set panel" && !u.isSelected()) {
                w = i.selection.e;
                for (v = 0; v < w.length; v++) {
                    E = w[v].c;
                    if (E.properties["field type"] != "tab panel" && E.properties["field type"] != "field set panel") if (E.uz(u.dom)) {
                        E.properties["parent field set"] != u.properties.id && r++;
                        E.properties["parent field set"] = u.properties.id;
                        E.m["parent field set"] = true;
                        i.k.ea("parent field set")
                    } else if (E.properties["parent field set"] == u.properties.id) {
                        k++;
                        E.properties["parent field set"] = "";
                        E.m["parent field set"] = false;
                        i.k.ea("parent field set")
                    }
                }
            }
            if (r > 0) {
                w = "";
                if (r > 1) w += String(r) + " ";
                w += "element";
                if (r > 1) w += "s";
                w += " added to panel";
                s[q] = new pui.designer.Rr;
                s[q].b = u.dom;
                s[q].oq = w;
                s[q].init();
                s[q].animate();
                q++
            }
            if (k > 0) {
                w = "";
                if (k > 1) w += String(k) + " ";
                w += "element";
                if (k > 1) w += "s";
                w += " removed from panel";
                s[q] = new pui.designer.Rr;
                s[q].b = u.dom;
                s[q].oq = w;
                s[q].ld = "#990000";
                if (r > 0) setTimeout(function () {
                    s[q].init();
                    s[q].animate()
                }, 1500); else {
                    s[q].init();
                    s[q].animate()
                }
                q++
            }
        }
    };
    this.bh = function (r, k) {
        function q(z, H) {
            var J = "{" + (k ? " " : ""), K = 0, L = rc(), N = z["field type"];
            for (var O in z) {
                var V = z[O], X = true;
                if (V == null || String(V) == "") X = false;
                if (H != null && H[O] != true) X = false;
                if (O == "screen identifier" && V == "false") X = false;
                if (O == "newitem" && Q == "dspf") X = false;
                if (X && N != null && N != "grid") {
                    var ga = L[O];
                    if (ga != null) {
                        ga = ga.controls;
                        if (ga != null) {
                            X = false;
                            for (var U = 0; U < ga.length; U++) if (ga[U] == N || ga[U] == "tab panel" && N == "layout" && z.template == "tab panel" || N == "layout" && z.template == "fieldset" && O == "border color") {
                                X =
                                    true;
                                break
                            }
                        }
                    }
                }
                if (X) {
                    if (O == "id" && i.i.oc == true && V.indexOf("_W") != -1) {
                        X = V.indexOf("_W");
                        V = V.substr(0, X + 2)
                    }
                    if (K != 0) J += "," + (k ? " " : "");
                    if (Q == "genie") O = O.replace(/ /g, "_");
                    O = '"' + O + '"';
                    if (pui.f(V) || pui.Ia(V)) {
                        V = S.MH(V, k);
                        J += O + ":" + (k ? " " : "") + V
                    } else {
                        V = String(V);
                        V = V.replace(/\\/g, "\\\\");
                        V = V.replace(/"/g, '\\"');
                        V = V.replace(/\r/g, "\\r");
                        V = V.replace(/\n/g, "\\n");
                        V = V.replace(/\t/g, "\\t");
                        J += O + ":" + (k ? " " : "") + '"' + V + '"'
                    }
                    K++
                }
            }
            J += (k ? " " : "") + "}";
            return J
        }

        if (k == null) k = true;
        var s = !r.oc, t;
        t = k ? '{\n  "screen": ' : '{"screen":';
        t += q(i.Ga[i.i.l], i.Nd[i.i.l]);
        t += k ? ',\n  "items": [' : ',"items":[';
        var u = 0, w = [], v, E = [], y = {}, F = [];
        v = s ? i.items : r.fields;
        if (Q == "dspf") {
            for (var D = 0; D < v.length; D++) {
                var B = v[D];
                if (B.de()) F.push(B); else if (B.xe()) {
                    var I = "level " + B.Rm();
                    if (y[I] == null) y[I] = [];
                    y[I].push(B)
                } else E.push(B)
            }
            for (D = 1; D < 9999; D++) {
                I = "level " + D;
                B = y[I];
                if (B == null) break;
                E = E.concat(B)
            }
            E = E.concat(F)
        } else E = v;
        for (D = 0; D < E.length; D++) {
            B = E[D];
            if (s && B.l == null || !s && B.l == r.l) {
                y = B.properties.id;
                if (y != null) {
                    y = y;
                    if (r.Zi != null && y.indexOf("_W") != -1) y =
                        y.substr(0, y.indexOf("_W") + 2);
                    w[y] = true
                }
                if (B.ta || r.oc && r.Zi == null && B.properties["parent window"] != "") {
                    if (u != 0) t += "," + (k ? " " : "");
                    if (k) t += "\n    ";
                    if (Q == "dspf" && B.de()) {
                        B.properties.grid = B.dom.parentNode.parentNode.id;
                        B.properties.column = B.dom.parentNode.col;
                        B.m.grid = true;
                        B.m.column = true
                    }
                    if (Q == "dspf" && B.xe()) {
                        B.properties.layout = B.qf().na.id;
                        B.properties.container = String(B.Ap());
                        B.m.layout = true;
                        B.m.container = true
                    }
                    y = false;
                    if (Q == "genie" && B.properties["screen identifier"] == "true" && B.m["screen identifier"] ==
                        true) y = true;
                    if (y) {
                        B.properties["identifier value"] = B.originalValue;
                        B.m["identifier value"] = true
                    }
                    t += q(B.properties, B.m);
                    if (y) {
                        delete B.properties["identifier value"];
                        delete B.m["identifier value"]
                    }
                    if (Q == "dspf" && B.de()) {
                        delete B.properties.grid;
                        delete B.properties.column;
                        delete B.m.grid;
                        delete B.m.column
                    }
                    if (Q == "dspf" && B.xe()) {
                        delete B.properties.layout;
                        delete B.properties.container;
                        delete B.m.layout;
                        delete B.m.container
                    }
                    u++
                }
            }
        }
        if (kc[i.i.l] != null && kc[i.i.l].items != null) for (D = 0; D < kc[i.i.l].items.length; D++) {
            s =
                kc[i.i.l].items[D];
            y = s.id;
            if (y != null && s.fM != "true" && w[y] != true) {
                if (u != 0) t += "," + (k ? " " : "");
                if (k) t += "\n    ";
                t += q(s, null);
                u++;
                w[y] = true
            }
        }
        t += k ? "\n  ]\n}" : "]}";
        return t
    };
    this.rG = function () {
        var r = !i.i.oc, k = {};
        k.screen = i.Ga[i.i.l]["screen name"];
        k.qi = [];
        k.modified = String((new Date).getTime());
        for (var q = 0; q < i.items.length; q++) {
            var s = i.items[q];
            if (r && s.l == null || !r && s.l == i.i.l) if (s.properties["screen identifier"] == "true") {
                var t = k.qi.length;
                k.qi[t] = {};
                var u = s.originalValue;
                k.qi[t].id = s.properties.id;
                k.qi[t].value =
                    u
            }
        }
        return k
    };
    this.$d = function (r) {
        for (var k = 0; k < i.items.length; k++) {
            var q = i.items[k];
            if (q.dom == r) return q
        }
        return null
    };
    this.vy = function (r) {
        for (var k = 0; k < i.items.length; k++) {
            var q = i.items[k];
            if (q.dom != null && q.dom.id == r) return q
        }
        return null
    };
    this.Cj = function (r) {
        for (var k = 0; k < i.items.length; k++) if (i.items[k].Cj(r)) return true;
        return false
    };
    this.mask = function (r) {
        var k = document.body.clientWidth, q = document.body.clientHeight;
        if (!pui.is_old_ie) {
            k -= 2;
            q -= 2
        }
        if (i.Zb == null) {
            i.Zb = document.createElement("div");
            document.body.appendChild(i.Zb)
        }
        i.Zb.style.position =
            "absolute";
        i.Zb.style.left = "0px";
        i.Zb.style.top = "0px";
        i.Zb.style.width = k + "px";
        i.Zb.style.height = q + "px";
        i.Zb.style.backgroundColor = "#CCCCCC";
        i.Zb.style.zIndex = 5E5;
        i.Zb.style.opacity = 0.5;
        i.Zb.style.filter = "alpha(opacity=50)";
        var s = parseInt((q - 130) / 2);
        if (s < 10) s = 10;
        var t = parseInt((k - 235) / 2);
        if (i.Yb == null) {
            i.Yb = document.createElement("div");
            document.body.appendChild(i.Yb)
        }
        i.Yb.style.position = "absolute";
        i.Yb.style.top = s + "px";
        i.Yb.style.left = t + "px";
        i.Yb.style.height = "65px";
        i.Yb.style.width = "235px";
        i.Yb.style.backgroundColor =
            "white";
        i.Yb.style.border = "4px solid #6593CF";
        i.Yb.style.cursor = "wait";
        i.Yb.style.fontSize = "12px";
        i.Yb.style.fontWeight = "bold";
        i.Yb.style.fontFamily = "tahoma, arial, helvetica, sans-serif";
        i.Yb.style.color = "#555555";
        i.Yb.style.zIndex = 500001;
        i.Yb.style.overflow = "hidden";
        if (i.ee == null) {
            i.ee = document.createElement("div");
            i.Yb.appendChild(i.ee)
        }
        i.ee.style.marginTop = "16px";
        i.ee.style.marginLeft = "15px";
        i.ee.style.paddingLeft = "45px";
        i.ee.style.paddingTop = "7px";
        i.ee.style.width = "100%";
        i.ee.style.height = "32px";
        i.ee.innerHTML = r;
        i.ee.style.backgroundImage = "url(/profoundui/proddata/images/saving.gif)";
        i.ee.style.backgroundRepeat = "no-repeat";
        S.W(window, "resize", function () {
            if (i != null) {
                k = document.body.clientWidth;
                q = document.body.clientHeight;
                if (!pui.is_old_ie) {
                    k -= 2;
                    q -= 2
                }
                s = (q - 130) / 2;
                t = (k - 235) / 2;
                if (i.Yb != null) {
                    i.Yb.style.top = s + "px";
                    i.Yb.style.left = t + "px"
                }
                if (i.Zb != null) {
                    i.Zb.style.height = q + "px";
                    i.Zb.style.width = k + "px"
                }
            }
        })
    };
    this.unmask = function () {
        if (i.ee != null) {
            i.ee.parentNode.removeChild(i.ee);
            i.ee = null
        }
        if (i.Yb !=
            null) {
            i.Yb.parentNode.removeChild(i.Yb);
            i.Yb = null
        }
        if (i.Zb != null) {
            i.Zb.parentNode.removeChild(i.Zb);
            i.Zb = null
        }
    };
    this.hh = function () {
        i.k.Ad.hide();
        i.k.Ij.hide();
        i.k.za != null && i.k.za.hide();
        i.k.Ca != null && i.k.Ca.hide();
        i.k.lg != null && i.k.lg.hide();
        i.k.Cd != null && i.k.Cd.hide();
        i.k.dg.hide();
        i.cz()
    };
    this.cz = function () {
        i.Nb != null && i.Nb.hide();
        i.Qa != null && i.Qa.hide();
        i.k.Qa != null && i.k.Qa.hide()
    };
    this.sf = function (r) {
        return l.sf(r)
    };
    this.destroy = function () {
        i.selection.clear();
        i.n.clear();
        i.Aa.parentNode.removeChild(i.Aa);
        i.Aa = null;
        i.b.removeChild(i.Z);
        i.Z = null;
        i.se = null;
        i.nd = null;
        i.items = null;
        i.n = null;
        Q == "dspf" && i.b.parentNode && i.b.parentNode.removeChild(i.b);
        i.selection = null;
        i.k = null;
        i.Ga = null;
        i.Nd = null;
        i.Qa != null && i.Qa.destroy != null && i.Qa.destroy();
        i.Qa = null;
        i.Nb != null && i.Nb.destroy != null && i.Nb.destroy();
        i.Nb = null;
        i.i = null;
        i.X = null;
        i.kb = null;
        i.Nf = null;
        l != null && l.destroy != null && l.destroy();
        l = null;
        if (Q == "dspf") {
            i.D.destroy();
            i.D = null;
            i.b.innerHTML = ""
        }
        i = i.b = null
    };
    this.li = function () {
        if (Q == "dspf") {
            var r = 0, k = i.b.parentNode;
            if (k.gu) {
                r += k.offsetLeft + k.firstChild.offsetLeft;
                k = k.parentNode;
                r -= i.b.scrollLeft
            }
            var q = Ext.get(k).up("div.x-tab-panel");
            r += q.dom.offsetLeft - k.parentNode.scrollLeft;
            return r
        } else return pui.Xe(i.b)[0]
    };
    this.yj = function () {
        if (Q == "dspf") {
            var r = 0, k = i.b.parentNode;
            if (k.gu) {
                r += k.offsetTop + k.firstChild.offsetTop;
                k = k.parentNode;
                r -= i.b.scrollTop
            }
            var q = Ext.get(k).up("div.x-tab-panel");
            r += q.dom.offsetTop - k.parentNode.scrollTop;
            k = q.down("div.x-tab-panel-header");
            r += k.dom.offsetHeight;
            return r
        } else return pui.Xe(i.b)[1]
    };
    this.Ri = function (r, k) {
        r = Number(r);
        if (isNaN(r)) r = 0;
        k = Number(k);
        if (isNaN(k)) k = 0;
        if (r > 0 && k > 0) {
            pui.ac = r;
            pui.Ob = k;
            i.selection.fc = true
        } else {
            pui.ac = 5;
            pui.Ob = 5;
            i.selection.fc = false
        }
    };
    this.Hh = function (r, k, q) {
        function s(u) {
            pui.La(u, "pui-design-canvas");
            for (var w = 10; w <= 50; w += 10) pui.La(u, "pui-design-grid-" + w)
        }

        r = Number(r);
        if (isNaN(r)) r = 0;
        k = Number(k);
        if (isNaN(k)) k = 0;
        var t = i.b.parentNode;
        if (t != null) {
            if (q == null) q = pui.designer.fa != null;
            if (q) {
                q = i.b;
                t != null && t.parentNode != null && s(t.parentNode.parentNode)
            } else q = t.parentNode;
            if (q != null) {
                s(q);
                pui.ya(q, "pui-design-canvas");
                r > 0 && k > 0 && pui.ya(q, "pui-design-grid-" + r)
            }
        }
    };
    this.selectAll = function () {
        i.selection.clear();
        for (var r = 0; r < i.items.length; r++) {
            var k = i.items[r];
            k.properties["field type"] != "grid" && i.selection.add(k)
        }
        i.k.refresh()
    };
    this.Wa = function (r) {
        i.items.sort(function (k, q) {
            if (k.bb() == q.bb()) {
                var s = k.dom.parentNode.col, t = q.dom.parentNode.col;
                if (s < t) return -1;
                if (s > t) return 1
            }
            if (k.xe() && k.qf() == q.qf()) {
                s = k.Ap();
                t = q.Ap();
                if (s < t) return -1;
                if (s > t) return 1
            }
            if (r == true) {
                if (k.properties["auto arrange"] !=
                    "true" && q.properties["auto arrange"] == "true") return -1;
                if (k.properties["auto arrange"] == "true" && q.properties["auto arrange"] != "true") return 1
            }
            var u = k.dom, w = q.dom;
            s = parseInt(u.style.left);
            if (isNaN(s)) s = u.offsetLeft;
            if (s == null) s = 0;
            t = parseInt(u.style.top);
            if (isNaN(t)) t = u.offsetTop;
            if (t == null) t = 0;
            var v = t < 0 || s < 0 ? true : false;
            if (k.properties["field type"] == "grid" && k.properties["has header"] != "false") {
                u = k.properties["header height"];
                if (u == null) u = 0;
                u = Number(u);
                if (isNaN(u)) u = 0;
                t += u
            }
            var E = parseInt(w.style.left);
            if (isNaN(E)) E = w.offsetLeft;
            if (E == null) E = 0;
            var y = parseInt(w.style.top);
            if (isNaN(y)) y = w.offsetTop;
            if (y == null) y = 0;
            w = y < 0 || E < 0 ? true : false;
            if (q.properties["field type"] == "grid" && q.properties["has header"] != "false") {
                u = q.properties["header height"];
                if (u == null) u = 0;
                u = Number(u);
                if (isNaN(u)) u = 0;
                y += u
            }
            if (v && !w) return 1;
            if (w && !v) return -1;
            return t < y || t == y && s < E ? -1 : 1
        })
    };
    this.Cu = function (r) {
        function k() {
            var y = i.items[E], F = y.qf(), D = y.bb();
            F = F != w || D != u;
            D = y.properties["field type"] == "grid";
            if (y.properties["field type"] ==
                "layout" || D) v = true;
            return F
        }

        var q = i.items[r], s = q.properties["field type"] == "grid", t = q.properties["field type"] == "layout",
            u = q.bb(), w = q.qf(), v = false;
        if (s || t) v = true;
        var E = r - 1;
        if (E < 0) return false;
        for (; k();) {
            E -= 1;
            if (E < 0) return false
        }
        d(r, E);
        if (v) return "refresh";
        return true
    };
    this.Au = function (r) {
        function k() {
            var y = i.items[E], F = y.qf(), D = y.bb();
            F = F != w || D != u;
            D = y.properties["field type"] == "grid";
            if (y.properties["field type"] == "layout" || D) v = true;
            return F
        }

        var q = i.items[r], s = q.properties["field type"] == "grid", t =
            q.properties["field type"] == "layout", u = q.bb(), w = q.qf(), v = false;
        if (s || t) v = true;
        var E = r + 1;
        if (E > i.items.length - 1) return false;
        for (; k();) {
            E += 1;
            if (E > i.items.length - 1) return false
        }
        d(r, E);
        if (v) return "refresh";
        return true
    };
    this.qb = function () {
        var r = i.dirty;
        i.dirty = true;
        !r && Q == "dspf" && pui.ide.Qb()
    };
    this.Ce = function () {
        var r = !i.dirty;
        i.dirty = false;
        !r && Q == "dspf" && pui.ide.Qb()
    };
    this.Fy = function (r) {
        for (var k = 0; k < i.items.length; k++) {
            var q = i.items[k].properties.value;
            if (pui.f(q) && q.fieldName == r) return k
        }
        return null
    };
    this.NA = function () {
        for (var r = i.b, k = [], q = r.firstChild; q != null && q.xH == true;) {
            k.push(q);
            q = q.nextSibling
        }
        for (var s = 0; s < k.length; s++) {
            q = k[s];
            r.removeChild(q)
        }
    };
    this.tf = function (r) {
        var k = false;
        if (i.selection != null) for (var q = 0; q < i.selection.e.length; q++) if (pui.f(i.selection.e[q].c.properties[r]) === true) {
            k = true;
            break
        }
        return k
    };
    this.qF = function (r) {
        i.jv();
        for (var k = 0; k < i.selection.e.length; k++) {
            var q = i.selection.e[k].c;
            if (q !== r) {
                q = {h: document.createElement("div"), item: q, x: 0, y: 0};
                q.h.style.position = "absolute";
                q.h.style.display = "none";
                q.h.style.border = "1px dashed #666666";
                q.h.style.zIndex = S.iw;
                i.b.appendChild(q.h);
                i.Kb.push(q)
            }
        }
    };
    this.dz = function () {
        for (var r = 0; r < i.Kb.length; r++) i.Kb[r].h.style.display = "none"
    };
    this.IB = function () {
        for (var r = 0; r < i.Kb.length; r++) {
            var k = i.Kb[r], q = k.h, s = k.item.dom;
            q.style.left = k.x + "px";
            q.style.top = k.y + "px";
            q.style.width = s.offsetWidth + "px";
            q.style.height = s.offsetHeight + "px";
            q.style.display = ""
        }
    };
    this.jv = function () {
        for (; i.Kb.length > 0;) {
            var r = i.Kb[i.Kb.length - 1];
            r.h.parentNode.removeChild(r.h);
            r.h = null;
            r.item = null;
            i.Kb.pop()
        }
    };
    this.disable = function () {
        i.disabled = true;
        i.b.style.display = "none";
        i.b.parentNode && i.b.parentNode.removeChild(i.b);
        i.k.hide()
    };
    this.enable = function (r) {
        i.disabled = false;
        if (!r) i.b.style.display = "";
        document.getElementById(Ha).appendChild(i.b);
        i.k.refresh();
        i.k.show()
    };
    this.Jp = function (r) {
        var k = r.Ab[0];
        if (r.template == "mobile device" && r.c.properties["top bar"] != "false") k = r.Ab[1]; else if (r.template == "accordion") for (var q = 0; q < r.Ab.length; q++) {
            if (r.Ab[q].offsetHeight > 0) {
                k =
                    r.Ab[q];
                break
            }
        } else if (r.template == "tab panel" && typeof r.Ve === "function") {
            q = r.Ve();
            if (q.length > 0) k = r.Ab[q[0]]
        }
        return k
    }
};
pui.ide.K = {};
pui["allowed ifs extensions"] = [".json"];
pui.ide.K.GK = function (b) {
    var a = pui["allowed ifs extensions"], c = Zb(b.getValue());
    if (c != "") {
        for (var d = false, e = 0; e < a.length; e++) {
            var f = a[e];
            if (c.length >= f.length && c.substr(c.length - f.length).toLowerCase() == f) d = true
        }
        if (!d) {
            c += ".json";
            b.setValue(c)
        }
    }
};
pui.ide.K.iE = function (b, a) {
    var c = Zb(b.getValue());
    if (c != "") {
        var d = false;
        if (c.length >= a.length && c.substr(c.length - a.length).toLowerCase() == a) d = true;
        if (!d) {
            c += a;
            b.setValue(c)
        }
    }
};
pui.ide.K.openDialog = function (b, a) {
    var c = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 70,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 50, width: 150, style: "text-transform: uppercase;", msgTarget: "side"},
        items: [{
            name: "_file",
            id: "_file",
            anchor: "70%",
            fieldLabel: "Source File",
            autoCreate: {tag: "input", type: "text", maxlength: 10},
            value: Kd.get("file", "QDDSSRC")
        }, {
            name: "_library",
            anchor: "70%",
            fieldLabel: "Library",
            autoCreate: {tag: "input", type: "text", maxlength: 10},
            value: Kd.get("library",
                "")
        }, new Ext.form.TriggerField({
            triggerClass: "x-form-search-trigger",
            name: "_member",
            anchor: "70%",
            fieldLabel: "Member",
            autoCreate: {tag: "input", type: "text", maxlength: 10},
            onTriggerClick: function () {
                var g = $b(c.form.findField("_library").getValue().toUpperCase()),
                    l = $b(c.form.findField("_file").getValue().toUpperCase()),
                    n = $b(c.form.findField("_member").getValue().toUpperCase());
                if (n.length < 1 || n.substr(n.length - 1, 1) != "*") n = "*ALL";
                var o;
                o = S.wa(l, "object");
                if (o != "") {
                    pui.alert("Source file " + o);
                    c.form.findField("_file").focus()
                } else {
                    o =
                        S.wa(g, "library");
                    if (o != "") {
                        pui.alert("Library name " + o);
                        c.form.findField("_library").focus()
                    } else pui.ide.K.picker.create("member", {Lj: this}, g + "/" + l, g, l, n)
                }
            }
        })]
    }), d = pui.nodedesigner ? pui.PROFOUNDJS_DIR : pui.DOCUMENT_ROOT;
    if (d.substr(d.length - 1, 1) != pui.dirSeparator) d += pui.dirSeparator;
    if (pui.nodedesigner) {
        d = d.split(pui.dirSeparator);
        d.pop();
        d.pop();
        d = d.join(pui.dirSeparator) + pui.dirSeparator + "modules"
    }
    var e = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 70,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 50, width: 150, msgTarget: "side"},
        items: [{
            name: "_ifsPath",
            id: "_ifsPath",
            anchor: "95%",
            fieldLabel: "Directory",
            autoCreate: {tag: "input", type: "text"},
            value: Kd.get("ifsPath", d)
        }, new Ext.form.TriggerField({
            triggerClass: "x-form-search-trigger",
            name: "_ifsFile",
            id: "_ifsFile",
            anchor: "95%",
            fieldLabel: "File Name",
            autoCreate: {tag: "input", type: "text"},
            listeners: {},
            onTriggerClick: function () {
                var g = e.form.findField("_ifsPath"), l = $b(g.getValue());
                if (l == "") {
                    pui.alert("Directory cannot be blank.");
                    g.focus()
                } else pui.ide.K.picker.create("file", {Lj: this, pA: g}, l, null, null, null, b)
            }
        })]
    }), f = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 70,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 50, width: 150, msgTarget: "side"},
        items: [{
            name: "_localFile",
            id: "_localFile",
            anchor: "95%",
            fieldLabel: "Local File",
            autoCreate: {tag: "input", type: "file"}
        }]
    });
    d = [];
    !pui.viewdesigner && !pui.nodedesigner && !b && d.push({title: "Source Member", layout: "fit", items: c});
    d.push({
        title: pui.nodedesigner ?
            "Server File" : "IFS File", layout: "fit", items: e
    });
    window.FileReader && d.push({title: "Local File", layout: "fit", items: f});
    d = new Ext.TabPanel({
        frame: false,
        id: "_OpenFileTabPanel",
        border: false,
        defaults: {hideBorders: true},
        tabWidth: 100,
        region: "north",
        deferredRender: true,
        height: 300,
        tabPosition: "top",
        enableTabScroll: true,
        activeTab: 0,
        split: true,
        listeners: {
            tabchange: function (g, l) {
                if (l.title == "Source Member") {
                    h.setTitle("Open Rich Display File Source");
                    c.form.findField("_member").focus(true, 1)
                }
                if (l.title == "IFS File" ||
                    l.title == "Server File") {
                    h.setTitle("Open File");
                    e.form.findField("_ifsFile").focus(true, 1)
                }
                l.title == "Local File" && h.setTitle("Open File")
            }
        },
        items: d
    });
    var h = new Ext.Window({
        title: b ? "Import File" : "Open Rich Display File Source",
        width: 440,
        height: 200,
        minWidth: 440,
        minHeight: 200,
        layout: "fit",
        modal: true,
        buttonAlign: "center",
        defaultButton: 0,
        keys: [{
            key: 13, fn: function () {
                h.buttons[0].handler()
            }
        }],
        listeners: {
            show: function () {
                if (pui.viewdesigner || pui.nodedesigner || b) setTimeout(function () {
                    e.form.findField("_ifsFile").focus(true,
                        1)
                }, 1); else for (var g = 0; g <= 2; g++) {
                    var l = c.form.findField(g);
                    if (l.getValue() == "") {
                        l.focus(true, 450);
                        break
                    }
                }
            }, beforeclose: function () {
                if (R && R.designer) R.designer.disabled = true
            }
        },
        buttons: [{
            text: "Open", handler: function () {
                var g = Ext.getCmp("_OpenFileTabPanel").getActiveTab().title;
                if (g == "IFS File" || g == "Server File") {
                    if (!e.form.isValid()) return;
                    var l = true, n = e.form.findField("_ifsFile"), o = $b(n.getValue());
                    if (o == "") {
                        n.markInvalid("File name cannot be blank.");
                        l = false
                    }
                    if (!o.match(pui["text file name pattern"])) {
                        n.markInvalid("Cannot open filetype of file selected");
                        l = false
                    }
                    var i = e.form.findField("_ifsPath");
                    n = $b(i.getValue());
                    if (n == "") {
                        i.markInvalid("Directory cannot be blank.");
                        l = false
                    }
                    if (!l) return;
                    l = n;
                    if (l.substr(l.length - 1) != pui.dirSeparator) l += pui.dirSeparator;
                    l += o;
                    i = n;
                    if (i.substr(i.length - 1) != pui.dirSeparator) i += pui.dirSeparator;
                    i += o;
                    a({url: l, ifsFile: i, hH: b, path: n});
                    h.close()
                }
                if (g == "Local File") {
                    if (!f.form.isValid()) return;
                    if (!window.FileReader) {
                        pui.alert("Your browser does not support the File Reader API.");
                        return
                    }
                    n = f.form.findField("_localFile");
                    o = n.el.dom.files;
                    if (o == null || o.length != 1) {
                        n.markInvalid("Please select a file.");
                        return
                    }
                    o = o[0];
                    l = new window.FileReader;
                    var r = n.getValue();
                    n = r.split("/");
                    if (r.match(pui["text file name pattern"])) {
                        i = r.split(".").pop();
                        var k = i === "json" || i === "txt";
                        r = n[n.length - 1];
                        n = r.split("\\");
                        r = n[n.length - 1];
                        l.onload = function (q) {
                            h.close();
                            a({Eb: r, $e: q.target.result, hH: b, isJSON: k})
                        };
                        l.readAsText(o)
                    }
                }
                if (g == "Source Member") if (c.form.isValid()) {
                    g = $b(c.form.findField("_library").getValue().toUpperCase());
                    o = $b(c.form.findField("_file").getValue().toUpperCase());
                    n = $b(c.form.findField("_member").getValue().toUpperCase());
                    l = true;
                    i = S.wa(g, "library");
                    if (i != "") {
                        c.form.findField("_library").markInvalid("Library name " + i);
                        l = false
                    }
                    i = S.wa(o, "object");
                    if (i != "") {
                        c.form.findField("_file").markInvalid("File name " + i);
                        l = false
                    }
                    i = S.wa(n, "member");
                    if (i != "") {
                        c.form.findField("_member").markInvalid("Member name " + i);
                        l = false
                    }
                    if (l) {
                        h.close();
                        a({library: g, file: o, member: n})
                    }
                }
            }
        }, {
            text: "Cancel", handler: function () {
                h.close()
            }
        }],
        items: [d]
    });
    if (R && R.designer) R.designer.disabled = true;
    h.show()
};
pui.ide.K.Mi = function (b, a) {
    function c(q) {
        if (!a) if (!d || !d.fileTab) pui.ide.K.GK(q); else d && d.wp != null && d.wp.length > 0 && pui.ide.K.iE(q, "." + d.wp)
    }

    var d;
    pui.ja || (d = Ext.getCmp("centerPanel").getActiveTab());
    var e = pui.designer.currentDisplay.member;
    if (e == null) {
        if (pui.designer.currentDisplay.lj == true) e = pui.designer.currentDisplay.gp;
        if (e == null) e = ""
    }
    var f = pui.designer.currentDisplay.text;
    if (f == null) {
        if (pui.designer.currentDisplay.lj == true) f = pui.designer.currentDisplay.Zs;
        if (f == null) f = ""
    }
    var h = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 70,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 50, width: 200, msgTarget: "side"},
        items: [{
            id: "_file",
            anchor: "70%",
            fieldLabel: "Source File",
            maxLength: 10,
            autoCreate: {tag: "input", type: "text", maxlength: 10},
            style: "text-transform: uppercase;",
            value: pui.designer.currentDisplay.file == null ? Kd.get("file", "QDDSSRC") : pui.designer.currentDisplay.file
        }, {
            id: "_library",
            anchor: "70%",
            fieldLabel: "Library",
            maxLength: 10,
            autoCreate: {tag: "input", type: "text", maxlength: 10},
            style: "text-transform: uppercase;",
            value: pui.designer.currentDisplay.library == null ? Kd.get("library", "") : pui.designer.currentDisplay.library
        }, new Ext.form.TriggerField({
            triggerClass: "x-form-search-trigger",
            name: "_member",
            anchor: "70%",
            fieldLabel: "Member",
            autoCreate: {tag: "input", type: "text", maxlength: 10},
            style: "text-transform: uppercase;",
            value: e,
            onTriggerClick: function () {
                var q = $b(h.form.findField("_library").getValue().toUpperCase()),
                    s = $b(h.form.findField("_file").getValue().toUpperCase()),
                    t = $b(h.form.findField("_member").getValue().toUpperCase());
                if (t.length < 1 || t.substr(t.length - 1, 1) != "*") t = "*ALL";
                var u;
                u = S.wa(s, "object");
                if (u != "") {
                    pui.alert("Source file " + u);
                    h.form.findField("_file").focus()
                } else {
                    u = S.wa(q, "library");
                    if (u != "") {
                        pui.alert("Library name " + u);
                        h.form.findField("_library").focus()
                    } else pui.ide.K.picker.create("member", {Lj: this}, q + "/" + s, q, s, t)
                }
            }
        }), {
            id: "_text",
            anchor: "95%",
            fieldLabel: "Text",
            maxLength: 50,
            autoCreate: {tag: "input", type: "text", maxlength: 50},
            width: 300,
            value: f
        }]
    });
    if (pui.designer.currentDisplay.ifsFile) {
        e = pui.designer.currentDisplay.ifsFile.split(pui.dirSeparator);
        e.pop();
        e = e.join(pui.dirSeparator);
        if (e == "") e = "/"
    } else if (d && d.fileTab) {
        e = d.root;
        if (d.ma != null) e += d.ma.substr(0, d.ma.lastIndexOf(pui.dirSeparator))
    } else {
        e = pui.nodedesigner ? pui.PROFOUNDJS_DIR : pui.DOCUMENT_ROOT;
        if (e.substr(e.length - 1, 1) != pui.dirSeparator) e += pui.dirSeparator;
        e += pui.nodedesigner ? "modules" : "profoundui/userdata/dspf";
        e = Kd.get("ifsPath", e);
        if (pui.isCloud) e = g = pui.cloud.ws.SERVER_DIR
    }
    e = e;
    if (pui.isCloud) {
        var g = pui.cloud.ws.SERVER_DIR;
        if (e.substr(0, g.length).toUpperCase() === g.toUpperCase()) e =
            "Workspace Files" + e.substr(g.length)
    }
    var l;
    if (d && d.fileTab) {
        if (d.ma != null) l = d.ma.substr(d.ma.lastIndexOf(pui.dirSeparator) + 1)
    } else l = pui.designer.currentDisplay.ifsFile;
    if (l == null) l = "";
    l = l.split(pui.dirSeparator);
    var n = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 70,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 50, width: 150, msgTarget: "side"},
        items: [{
            name: "_ifsPath",
            id: "_ifsPath",
            anchor: "95%",
            fieldLabel: "Directory",
            autoCreate: {tag: "input", type: "text"},
            value: e
        },
            new Ext.form.TriggerField({
                triggerClass: "x-form-search-trigger",
                name: "_ifsFile",
                id: "_ifsFile",
                anchor: "95%",
                fieldLabel: "File Name",
                autoCreate: {tag: "input", type: "text"},
                value: l[l.length - 1],
                listeners: {blur: c},
                onTriggerClick: function () {
                    var q = n.form.findField("_ifsPath"), s = $b(q.getValue());
                    if (s == "") {
                        pui.alert("Directory cannot be blank.");
                        q.focus()
                    } else pui.ide.K.picker.create("file", {
                        Lj: this,
                        pA: q
                    }, s, null, null, null, a, d && d.fileTab == true)
                }
            })]
    });
    l = pui.designer.currentDisplay.Eb;
    if (l == null) l = "";
    var o = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 70,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 50, width: 150, msgTarget: "side"},
        items: [{
            name: "_localFile",
            id: "_localFile",
            anchor: "95%",
            fieldLabel: "File Name",
            autoCreate: {tag: "input"},
            value: l,
            listeners: {blur: c}
        }]
    });
    l = [];
    if (!pui.viewdesigner && !pui.nodedesigner && !a && (!d || !d.fileTab)) l.push({
        id: "_sourceMemberTab",
        title: "Source Member",
        layout: "fit",
        items: h
    });
    l.push({id: "_ifsFileTab", title: pui.nodedesigner ? "Server File" : "IFS File", layout: "fit", items: n});
    l.push({
        id: "_localFileTab",
        title: "Local File", layout: "fit", items: o
    });
    var i = "_sourceMemberTab";
    if (pui.viewdesigner || pui.nodedesigner || a || d && d.fileTab) i = "_ifsFileTab";
    if (pui.designer.currentDisplay.ifsFile != null) i = "_ifsFileTab";
    if (pui.designer.currentDisplay.Eb != null) i = "_localFileTab";
    var r = new Ext.TabPanel({
        frame: false,
        id: "_SaveAsTabPanel",
        border: false,
        activeTab: i,
        defaults: {hideBorders: true},
        tabWidth: 100,
        region: "north",
        deferredRender: true,
        height: 300,
        tabPosition: "top",
        enableTabScroll: true,
        split: true,
        listeners: {
            tabchange: function (q,
                                 s) {
                s.title == "Source Member" && h.form.findField("_member").focus(true, 1);
                if (s.title == "IFS File" || s.title == "Server File") n.form.findField("_ifsFile").focus(true, 1);
                s.title == "Local File" && o.form.findField("_localFile").focus(true, 1)
            }
        },
        items: l
    }), k = new Ext.Window({
        title: a ? "Export" : "Save As",
        width: 440,
        height: pui.nodedesigner || a ? 200 : pui.flatlook ? 235 : 225,
        minWidth: 440,
        minHeight: pui.nodedesigner || a ? 200 : pui.flatlook ? 235 : 225,
        layout: "fit",
        modal: true,
        buttonAlign: "center",
        defaultButton: 0,
        keys: [{
            key: 13, fn: function () {
                k.buttons[0].handler()
            }
        }],
        listeners: {
            show: function () {
                r.setActiveTab(i);
                var q;
                if (i == "_sourceMemberTab") {
                    q = h.form.findField(0);
                    if (q.getValue() != "") {
                        q = h.form.findField(1);
                        if (q.getValue() != "") q = h.form.findField(2)
                    }
                }
                if (i == "_ifsFileTab") q = n.form.findField("_ifsFile");
                if (i == "_localFileTab") q = o.form.findField("_localFile");
                q.focus.defer(300, q)
            }, beforeclose: function () {
                if (R) R.designer.disabled = false
            }
        },
        buttons: [{
            text: "Save", handler: function () {
                var q = S.si(), s = Ext.getCmp("_SaveAsTabPanel").getActiveTab().title;
                if (s == "IFS File" || s == "Server File") {
                    if (!n.form.isValid()) return;
                    var t = true, u = n.form.findField("_ifsFile");
                    c(u);
                    var w = $b(u.getValue());
                    if (w == "") {
                        u.markInvalid("File name cannot be blank.");
                        t = false
                    }
                    u = n.form.findField("_ifsPath");
                    var v = $b(u.getValue());
                    if (v == "") {
                        u.markInvalid("Directory cannot be blank.");
                        t = false
                    }
                    if (!t) return;
                    if (pui.isCloud) if (v.substr(0, 15) === "Workspace Files") v = pui.cloud.ws.SERVER_DIR + v.substr(15);
                    var E = v;
                    if (E.substr(E.length - 1, 1) != pui.dirSeparator) E += pui.dirSeparator;
                    E += w;
                    if (d && d.fileTab) {
                        k.close();
                        b(E);
                        return
                    }
                    var y = f;
                    if (y == null) y = "";
                    t = a ? R.designer.hG() :
                        rd.Qm(y, q);
                    R.save({
                        ifsFile: E, $e: t, fileName: w, text: y, onsuccess: function () {
                            if (a) k.close(); else {
                                Kd.set("ifsPath", v);
                                Kd.save();
                                pui.designer.currentDisplay.library = null;
                                pui.designer.currentDisplay.file = null;
                                pui.designer.currentDisplay.member = null;
                                pui.designer.currentDisplay.ifsFile = E;
                                pui.designer.currentDisplay.Eb = null;
                                pui.designer.currentDisplay.text = y;
                                rd.Ce();
                                pui.ide.Qb();
                                pui.designer.Bl();
                                k.close();
                                var B = {ifsFile: E, path: v};
                                pui.ja || pui.ide.pd(B, function (I) {
                                    if (d) if (I.success) {
                                        I = I.data;
                                        if (I.changed) d.lastModified =
                                            I.changed; else if (I.mtime) d.lastModified = I.mtime;
                                        d.Vb = B
                                    }
                                });
                                b != null && b();
                                pui.ja || pui.ide.Rl()
                            }
                        }
                    })
                }
                if (s == "Local File") {
                    if (!o.form.isValid()) return;
                    u = o.form.findField("_localFile");
                    c(u);
                    w = $b(u.getValue());
                    if (w == "") {
                        u.markInvalid("File name cannot be blank.");
                        return
                    }
                    if (d && d.fileTab) {
                        q = d.editor;
                        if (q.getModifiedEditor) q = q.getModifiedEditor();
                        y = q.getValue();
                        pui.Jf("text/plain", w, y);
                        k.close();
                        return
                    }
                    y = f;
                    if (y == null) y = "";
                    t = a ? R.designer.hG() : rd.Qm(y, q);
                    k.close();
                    pui.Jf("text/plain", w, t);
                    if (!a) {
                        pui.designer.currentDisplay.library =
                            null;
                        pui.designer.currentDisplay.file = null;
                        pui.designer.currentDisplay.member = null;
                        pui.designer.currentDisplay.ifsFile = null;
                        pui.designer.currentDisplay.Eb = w;
                        pui.designer.currentDisplay.text = y;
                        rd.Ce();
                        pui.ide.Qb();
                        b != null && b()
                    }
                }
                if (s == "Source Member") if (h.form.isValid()) {
                    var F = $b(h.form.findField("_library").getValue().toUpperCase());
                    w = $b(h.form.findField("_file").getValue().toUpperCase());
                    var D = $b(h.form.findField("_member").getValue().toUpperCase());
                    y = $b(h.form.findField("_text").getValue());
                    t = true;
                    q = S.wa(F, "library");
                    if (q != "") {
                        h.form.findField("_library").markInvalid("Library name " + q);
                        t = false
                    }
                    q = S.wa(w, "object");
                    if (q != "") {
                        h.form.findField("_file").markInvalid("File name " + q);
                        t = false
                    }
                    q = S.wa(D, "member");
                    if (q != "") {
                        h.form.findField("_member").markInvalid("Member name " + q);
                        t = false
                    }
                    t && R.save({
                        library: F,
                        file: w,
                        member: D,
                        text: y,
                        comments: pui.designer.currentDisplay.comments,
                        onsuccess: function () {
                            Kd.set("file", w);
                            Kd.set("library", F);
                            Kd.save();
                            pui.designer.currentDisplay.library = F;
                            pui.designer.currentDisplay.file =
                                w;
                            pui.designer.currentDisplay.member = D;
                            pui.designer.currentDisplay.text = y;
                            pui.designer.currentDisplay.ifsFile = null;
                            pui.designer.currentDisplay.Eb = null;
                            pui.designer.currentDisplay.wf = null;
                            pui.designer.currentDisplay.cf = null;
                            rd.Ce();
                            pui.ide.Qb();
                            pui.designer.Bl();
                            k.close();
                            var B = {library: F, file: w, member: D};
                            pui.ja || pui.ide.pd(B, function (I) {
                                if (d && I.success) {
                                    d.lastModified = I.data.changed;
                                    d.Vb = B
                                }
                            });
                            b != null && b()
                        }
                    })
                }
            }
        }, {
            text: "Cancel", handler: function () {
                k.close()
            }
        }],
        items: [r]
    });
    if (R) R.designer.disabled = true;
    k.show()
};
pui.ide.K.Yq = function (b, a) {
    var c, d = "Save/Compile Errors", e = 800;
    if (b.compilelisting == null) {
        items = [{
            region: "center",
            frame: true,
            layout: "fit",
            bodyStyle: "white-space: normal;",
            autoScroll: true,
            html: b.msg
        }];
        var f = 150;
        c = [{
            text: "Close", handler: function () {
                h.close()
            }
        }]
    } else {
        items = [{
            region: "north",
            frame: true,
            height: 70,
            bodyStyle: "white-space: normal;",
            autoScroll: true,
            html: b.msg
        }, {
            title: "Compile Listing",
            region: "center",
            layout: "fit",
            autoScroll: true,
            html: "<pre>" + b.compilelisting + "</pre>"
        }];
        f = 450;
        c = [{
            text: "Download Listing",
            handler: function () {
                var g = b.compilelisting.replace(/<br>/g, "\n");
                pui.Jf("text/plain", pui.designer.currentDisplay.member + ".txt", g)
            }
        }, {
            text: "Close", handler: function () {
                h.close()
            }
        }]
    }
    if (b.step == "PUI0001101:MEMBER EXISTS" || b.errorId == "FILE EXISTS") {
        d = "Confirm Save As";
        e = 550;
        f = 175;
        c = [{
            text: "Yes", handler: function () {
                h.close();
                if (a.jf) {
                    if (a.Da.Dj) a.Da.Dj = false;
                    pui.ide.jf(a.Da, false, a.callback, a.path, a.root)
                } else {
                    a.replace = true;
                    R.save(a)
                }
            }
        }, {
            text: "No", handler: function () {
                h.close()
            }
        }]
    }
    if (b.errorId == "FILE MODIFIED") {
        d =
            "Confirm Save As";
        e = 650;
        f = 175;
        c = [{
            text: "Overwrite File", handler: function () {
                h.close();
                if (a.jf) pui.ide.jf(a.Da, false, a.callback, a.path, a.root, true); else {
                    var g = Ext.getCmp("centerPanel").getActiveTab();
                    a.replace = true;
                    R.save(a, g)
                }
            }
        }, {
            text: "Discard Your Changes", handler: function () {
                h.close();
                var g = Ext.getCmp("centerPanel");
                if (a.jf) {
                    var l = a.Da, n = l.Vb, o = null;
                    g.items.each(function (k, q) {
                        if (k === l) o = q
                    });
                    g.remove(l, true);
                    var i = n.ifsFile, r = n.path || n.root;
                    r || (r = "");
                    i = r ? i.replace(r, "") : i;
                    pui.ide.Td(i, r, function (k) {
                        o !==
                        null ? g.setActiveTab(g.insert(o, k)) : g.setActiveTab(g.add(k));
                        pui.ide.pd(n, function (q) {
                            if (q.success) {
                                k.lastModified = q.data.mtime;
                                k.Vb = n
                            }
                        })
                    })
                } else {
                    l = g.getActiveTab();
                    o = null;
                    g.items.each(function (k, q) {
                        if (k === l) o = q
                    });
                    if (!R) {
                        R = new pui.designer.ik;
                        R.hide()
                    }
                    if (a.$e) a.$e = null;
                    if (a.ifsFile) a.url = a.ifsFile;
                    R.uj(a, function () {
                        var k = pui.ide.Bd();
                        a.onsuccess = function () {
                            k.ka = pui.ka;
                            k.C = {
                                formats: pui.designer.C.formats,
                                comments: pui.designer.C.comments,
                                global: pui.designer.C.global
                            };
                            if (a.path) {
                                Kd.set("ifsPath", a.path);
                                Kd.save()
                            } else if (a.library && a.file) {
                                Kd.set("file", a.file);
                                Kd.set("library", a.library);
                                Kd.save()
                            }
                            pui.ide.pd(a, function (q) {
                                if (q.success) {
                                    q = q.data;
                                    k.lastModified = q.changed !== undefined ? q.changed : q.mtime;
                                    k.Vb = a
                                }
                            })
                        };
                        a.sd = function () {
                            g.remove(k, true)
                        };
                        if (o !== null) {
                            g.remove(l, true);
                            g.setActiveTab(g.insert(o, k))
                        } else g.setActiveTab(g.add(k));
                        R.open(a)
                    })
                }
            }
        }, {
            text: "Cancel", handler: function () {
                h.close()
            }
        }]
    }
    var h = new Ext.Window({
        title: d, width: e, height: f, minWidth: e, minHeight: f, layout: "border", modal: true, buttonAlign: "center",
        items: items, keys: [{
            key: 13, fn: function () {
                h.buttons[0].handler()
            }
        }], buttons: c
    });
    h.show()
};
pui.ide.K.zx = function () {
    var b = pui.designer.currentDisplay.wf;
    if (b == null) b = pui.designer.currentDisplay.member;
    var a = pui.designer.currentDisplay.cf;
    if (a == null) a = pui.designer.currentDisplay.library;
    var c = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 70,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 50, width: 150, style: "text-transform: uppercase;", msgTarget: "side"},
        items: [{
            name: "_file", id: "_file", anchor: "95%", fieldLabel: "Display File", autoCreate: {
                tag: "input", type: "text",
                maxlength: 10
            }, value: b
        }, {
            name: "_library",
            anchor: "95%",
            fieldLabel: "Library",
            autoCreate: {tag: "input", type: "text", maxlength: 10},
            value: a
        }]
    }), d = new Ext.Window({
        title: "Create " + (pui.ja ? "Universal" : "Rich") + " Display File",
        width: 380,
        height: 150,
        minWidth: 380,
        minHeight: 175,
        layout: "fit",
        modal: true,
        buttonAlign: "center",
        defaultButton: 0,
        keys: [{
            key: 13, fn: function () {
                d.buttons[0].handler()
            }
        }],
        listeners: {
            show: function () {
                var e = c.form.findField(0);
                e.focus.defer(300, e)
            }, beforeclose: function () {
                R.designer.disabled = false
            }
        },
        buttons: [{
            text: "Compile", handler: function () {
                if (c.form.isValid()) {
                    var e = c.form.findField("_library").getValue().toUpperCase(),
                        f = c.form.findField("_file").getValue().toUpperCase(), h, g = true;
                    h = S.wa(e, "library");
                    if (h != "") {
                        c.form.findField("_library").markInvalid("Libary name " + h);
                        g = false
                    }
                    h = S.wa(f, "object");
                    if (h != "") {
                        c.form.findField("_file").markInvalid("File name " + h);
                        g = false
                    }
                    if (g) {
                        d.close();
                        pui.designer.currentDisplay.wf = f;
                        pui.designer.currentDisplay.cf = e;
                        h = Ext.getCmp("centerPanel");
                        h = h != null && typeof h.getActiveTab ==
                        "function" ? h.getActiveTab() : null;
                        R.save({
                            library: pui.designer.currentDisplay.library,
                            file: pui.designer.currentDisplay.file,
                            member: pui.designer.currentDisplay.member,
                            text: pui.designer.currentDisplay.text,
                            comments: pui.designer.currentDisplay.comments,
                            replace: true,
                            wf: f,
                            cf: e,
                            compile: "Y",
                            onsuccess: function () {
                                rd.Ce();
                                pui.ide.Qb()
                            }
                        }, h)
                    }
                }
            }
        }, {
            text: "Cancel", handler: function () {
                d.close()
            }
        }],
        items: [c]
    });
    R.designer.disabled = true;
    d.show()
};
pui.ide.K.IH = function () {
    var b = new Ext.form.FormPanel({
            defaultType: "textfield",
            labelWidth: 70,
            header: false,
            bodyStyle: "padding: 3px",
            frame: true,
            defaults: {labelWidth: 50, width: 150, style: "text-transform: uppercase;", msgTarget: "side"},
            items: [{
                name: "_program",
                id: "_program",
                anchor: "95%",
                fieldLabel: "Program",
                autoCreate: {tag: "input", type: "text", maxlength: 10},
                value: Kd.get("prog", "")
            }, {
                name: "_library",
                anchor: "95%",
                fieldLabel: "Library",
                autoCreate: {tag: "input", type: "text", maxlength: 10},
                value: Kd.get("proglib", "")
            }]
        }),
        a = new Ext.Window({
            title: "Launch Program",
            width: 380,
            height: 150,
            minWidth: 380,
            minHeight: 175,
            layout: "fit",
            modal: true,
            buttonAlign: "center",
            defaultButton: 0,
            listeners: {
                show: function () {
                    var c = b.form.findField(0);
                    c.focus.defer(300, c)
                }, beforeclose: function () {
                    if (R) R.designer.disabled = false
                }, render: function (c) {
                    new Ext.KeyMap(c.getEl(), {
                        key: Ext.EventObject.ENTER,
                        handler: c.buttons[0].handler,
                        stopEvent: true
                    }, "keypress")
                }
            },
            buttons: [{
                text: "Launch", handler: function () {
                    if (b.form.isValid()) {
                        var c = b.form.findField("_library").getValue().toUpperCase(),
                            d = b.form.findField("_program").getValue().toUpperCase(), e, f = true;
                        e = S.wa(d, "object");
                        if (e != "") {
                            b.form.findField("_program").markInvalid("Program name " + e);
                            f = false
                        }
                        e = S.wa(c, "library");
                        if (e != "") {
                            b.form.findField("_library").markInvalid("Library name " + e);
                            f = false
                        }
                        if (f) {
                            a.close();
                            Kd.set("prog", d);
                            Kd.set("proglib", c);
                            Kd.save();
                            e = location.href;
                            e = e.split("?")[0];
                            urlParts = e.split("/");
                            urlParts[urlParts.length - 1] = "start?pgm=" + encodeURIComponent(c) + "/" + encodeURIComponent(d);
                            if (rd) {
                                c = rd.$g();
                                if (c.width != null &&
                                    c.height != null) urlParts[urlParts.length - 1] += "&canvasSize=" + c.width + "x" + c.height
                            }
                            e = urlParts.join("/");
                            window.open(e)
                        }
                    }
                }
            }, {
                text: "Cancel", handler: function () {
                    a.close()
                }
            }],
            items: [b]
        });
    if (R) R.designer.disabled = true;
    a.show()
};
pui.ide.K.Gz = function () {
    var b = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 90,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 50, width: 300, msgTarget: "side"},
        items: [{
            name: "_controller",
            id: "_controller",
            anchor: "95%",
            fieldLabel: pui.nodedesigner ? "Module Alias" : "Controller Path",
            value: Kd.get("controller", "")
        }]
    }), a = new Ext.Window({
        title: pui.nodedesigner ? "Launch Profound.js Module" : "Launch Controller",
        width: 470,
        height: 120,
        minWidth: 470,
        minHeight: 120,
        layout: "fit",
        modal: true,
        buttonAlign: "center",
        defaultButton: 0,
        listeners: {
            show: function () {
                var c = b.form.findField(0);
                c.focus.defer(300, c)
            }, beforeclose: function () {
                if (R) R.designer.disabled = false
            }, render: function (c) {
                new Ext.KeyMap(c.getEl(), {
                    key: Ext.EventObject.ENTER,
                    handler: c.buttons[0].handler,
                    stopEvent: true
                }, "keypress")
            }
        },
        buttons: [{
            text: "Launch", handler: function () {
                if (b.form.isValid()) {
                    var c = Zb(b.form.findField("_controller").getValue());
                    if (c == "") b.form.findField("_controller").markInvalid(pui.nodedesigner ? "Module Alias is required" :
                        "Controller Path is required"); else {
                        a.close();
                        Kd.set("controller", c);
                        Kd.save();
                        var d = location.href;
                        d = d.split("?")[0];
                        urlParts = d.split("/");
                        urlParts[urlParts.length - 1] = "start?controller=" + c;
                        if (pui.nodedesigner) {
                            if (c.substr(0, 1) === "/") c = c.substr(1);
                            urlParts[urlParts.length - 1] = c
                        }
                        if (rd) {
                            c = rd.$g();
                            if (c.width != null && c.height != null) urlParts[urlParts.length - 1] += "&canvasSize=" + c.width + "x" + c.height
                        }
                        d = urlParts.join("/");
                        window.open(d)
                    }
                }
            }
        }, {
            text: "Cancel", handler: function () {
                a.close()
            }
        }],
        items: [b]
    });
    if (R) R.designer.disabled =
        true;
    a.show()
};
pui.ide.K.yx = function (b) {
    var a = pui.cnv.Ra.oG(pui.designer.Rs);
    b = a.list;
    var c = a.VH;
    a = a.HK;
    if (b.length != null && b.length > 0) {
        var d = new Ext.data.JsonStore({
            autoDestroy: true,
            fields: ["severity", "text", "keyword", "line"],
            sortInfo: {field: "severity", direction: "DESC"}
        });
        b = Ext.util.JSON.encode(b);
        d.loadData(Ext.util.JSON.decode(b));
        b = new Ext.grid.GridPanel({
            id: "_warningsGrid",
            autoScroll: true,
            stripeRows: true,
            loadMask: true,
            height: 200,
            store: d,
            viewConfig: {forceFit: true},
            sm: new Ext.grid.RowSelectionModel({singleSelect: true}),
            tbar: [{
                text: "Export to Excel", icon: "/profoundui/proddata/images/grids/excel.gif", handler: function () {
                    var g = "Severity,Message,Keyword,Line No.";
                    g += "\n";
                    for (var l, n, o, i = 0; i < d.getTotalCount(); i++) {
                        l = d.getAt(i).data;
                        n = l.text;
                        o = l.keyword;
                        g += l.severity + ",";
                        g += n.replace('"/g', '"') + ",";
                        g += o.replace('"/g', '"') + ",";
                        g += l.line;
                        g += "\n"
                    }
                    pui.Jf("text/csv", "results.csv", g)
                }
            }, "-", {
                text: "Supported Keywords", icon: "/profoundui/proddata/images/cog.png", handler: function () {
                    window.open("http://www.profoundlogic.com/ddskwlist.rpgsp")
                }
            }],
            columns: [{header: "Severity", width: 70, sortable: true, dataIndex: "severity"}, {
                id: "warningMsg",
                header: "Message",
                width: 280,
                sortable: true,
                dataIndex: "text"
            }, {
                header: "Keyword", width: 90, sortable: true, dataIndex: "keyword", renderer: function (g) {
                    var l = g.indexOf("(");
                    return '<a target="_blank" href="http://www.profoundlogic.com/ddskwlist.rpgsp?keyword=' + (l > 0 ? g.substring(0, l) : g) + '&pui=1">' + g + "</a>"
                }
            }, {header: "Line No.", width: 60, sortable: true, dataIndex: "line"}],
            autoExpandColumn: "warningMsg"
        });
        var e = "The display file converted successfully.";
        if (c > 0) {
            var f = c > 1;
            e += " There ";
            if (f) e += "are";
            f || (e += "is");
            e += " " + c + " informational message";
            if (f) e += "s"
        }
        if (a > 0) {
            f = a > 1;
            if (c > 0) e += " and "; else {
                e += " There ";
                if (f) e += "are";
                f || (e += "is")
            }
            e += " " + a + " warning";
            if (f) e += "s";
            e += "."
        } else if (c > 0) e += ".";
        c = [{
            region: "north",
            height: 50,
            bodyStyle: "white-space: normal; padding: 10px 10px 10px 10px",
            autoScroll: true,
            html: e
        }, {
            xtype: "fieldset",
            region: "center",
            title: "View Conversion Warnings",
            collapsed: true,
            collapsible: true,
            autoHeight: true,
            items: b,
            listeners: {
                expand: function (g) {
                    h.setHeight(350);
                    g.setTitle("Hide Details")
                }, collapse: function (g) {
                    h.setHeight(150);
                    g.setTitle("Show Details")
                }
            }
        }]
    } else c = [{
        region: "center",
        layout: "fit",
        bodyStyle: "white-space: normal; padding: 10px 10px 10px 10px",
        autoScroll: true,
        html: "The display file converted successfully."
    }];
    var h = new Ext.Window({
        modal: true,
        title: "Conversion Results",
        bodyStyle: "padding:5px 5px 0",
        layout: "border",
        width: 500,
        height: 150,
        minWidth: 500,
        minHeight: 150,
        buttonAlign: "center",
        defaultButton: 0,
        items: c,
        listeners: {
            beforeclose: function () {
                R.designer.disabled =
                    false
            }, render: function (g) {
                new Ext.KeyMap(g.getEl(), {
                    key: Ext.EventObject.ENTER,
                    handler: g.buttons[0].handler,
                    stopEvent: true
                }, "keypress")
            }
        },
        buttons: [{
            text: "OK", handler: function () {
                h.close()
            }
        }]
    });
    R.designer.disabled = true;
    h.show()
};
pui.ide.K.Bx = function () {
    var b = pui.cnv.themes.Qt(), a = pui.cnv.themes.Qt()[0][0], c = Kd.get("cnvtheme", "Hybrid");
    if (c != "") for (var d = 0; d < b.length; d++) if (b[d][0] == c) {
        a = c;
        break
    }
    b = [{
        name: "_file",
        id: "_file",
        anchor: "95%",
        fieldLabel: "Source File",
        autoCreate: {tag: "input", type: "text", maxlength: 10},
        value: Kd.get("cnvfile", "QDDSSRC")
    }, {
        name: "_library",
        anchor: "95%",
        fieldLabel: "Library",
        autoCreate: {tag: "input", type: "text", maxlength: 10},
        value: Kd.get("cnvlibrary", "")
    }, new Ext.form.TriggerField({
        triggerClass: "x-form-search-trigger",
        name: "_member",
        anchor: "95%",
        fieldLabel: "Member",
        autoCreate: {tag: "input", type: "text", maxlength: 10},
        onTriggerClick: function () {
            var h = $b(e.form.findField("_library").getValue().toUpperCase()),
                g = $b(e.form.findField("_file").getValue().toUpperCase()),
                l = $b(e.form.findField("_member").getValue().toUpperCase());
            if (l.length < 1 || l.substr(l.length - 1, 1) != "*") l = "*ALL";
            var n;
            n = S.wa(g, "object");
            if (n != "") {
                pui.alert("Source file " + n);
                e.form.findField("_file").focus()
            } else {
                n = S.wa(h, "library");
                if (n != "") {
                    pui.alert("Library name " +
                        n);
                    e.form.findField("_library").focus()
                } else pui.ide.K.picker.create("member", {Lj: this}, h + "/" + g, h, g, l)
            }
        }
    }), {
        xtype: "combo",
        id: "_theme",
        anchor: "95%",
        editable: false,
        mode: "local",
        fieldLabel: "Theme",
        hiddenName: "theme",
        displayField: "theme",
        style: {"z-index": 5E3, "text-transform": "none"},
        store: new Ext.data.ArrayStore({fields: ["theme"], data: pui.cnv.themes.Qt()}),
        triggerAction: "all",
        value: a,
        selectOnFocus: true
    }];
    if (pui["enable retain gs"] === true || pui["enable retain gs"] === "true") b.push({
        xtype: "checkbox",
        name: "_retain",
        anchor: "95%",
        fieldLabel: "Retain Green Screens",
        checked: pui.nc() && localStorage["pui-designer-retain-gs"] == "true" ? true : false,
        value: ""
    });
    var e = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 130,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 130, width: 150, style: "text-transform: uppercase;", msgTarget: "side"},
        items: b
    }), f = new Ext.Window({
        title: "Convert Green Screen Display File",
        width: 460,
        height: pui.flatlook ? 230 : 210,
        minWidth: 460,
        minHeight: pui.flatlook ? 230 : 210,
        layout: "fit",
        modal: true,
        buttonAlign: "center",
        keys: [{
            key: 13, fn: function () {
                f.buttons[0].handler()
            }
        }],
        listeners: {
            show: function () {
                for (var h = 0; h <= 3; h++) {
                    var g = e.form.findField(h);
                    if (g.getValue() == "") {
                        g.focus(true, 450);
                        break
                    }
                }
            }, beforeclose: function () {
                if (R) R.designer.disabled = false
            }
        },
        buttons: [{
            text: "Convert", handler: function () {
                if (e.form.isValid()) {
                    var h = $b(e.form.findField("_library").getValue().toUpperCase()),
                        g = $b(e.form.findField("_file").getValue().toUpperCase()),
                        l = $b(e.form.findField("_member").getValue().toUpperCase()),
                        n = e.form.findField("_theme").getValue(), o = false;
                    if (pui["enable retain gs"] === true || pui["enable retain gs"] === "true") {
                        o = e.form.findField("_retain").getValue();
                        if (pui.nc()) localStorage["pui-designer-retain-gs"] = o
                    }
                    var i, r = true;
                    i = S.wa(h, "library");
                    if (i != "") {
                        e.form.findField("_library").markInvalid("Library name " + i);
                        r = false
                    }
                    i = S.wa(g, "object");
                    if (i != "") {
                        e.form.findField("_file").markInvalid("File name " + i);
                        r = false
                    }
                    i = S.wa(l, "member");
                    if (i != "") {
                        e.form.findField("_member").markInvalid("Member name " + i);
                        r =
                            false
                    }
                    if (n == "") {
                        e.form.findField("_theme").markInvalid("You must select a theme.");
                        r = false
                    }
                    if (r) {
                        screenMask.msg = "Converting...";
                        screenMask.show();
                        jc({
                            url: cc("PUI0001107.pgm"),
                            method: "post",
                            params: {library: h, file: g, member: l, dds: o ? "Y" : "N"},
                            handler: function (k, q) {
                                if (k == null) {
                                    var s = "Server response is invalid.";
                                    if (q != null && q.description != null) s += " " + q.description + "."; else if (q != null && q.message != null) s += " " + q.message + ".";
                                    screenMask.hide();
                                    pui.alert(s)
                                } else if (k.success != true && k.success != "true") {
                                    screenMask.hide();
                                    pui.alert(k.msg)
                                } else {
                                    s = true;
                                    if (k.formats != null) for (var t in k.formats) {
                                        s = false;
                                        break
                                    }
                                    if (s) {
                                        screenMask.hide();
                                        pui.alert("There are no record formats defined in this DDS source.")
                                    } else {
                                        s = Ext.getCmp("centerPanel");
                                        t = pui.ide.od();
                                        var u = pui.ide.Bd();
                                        if (t.Da) {
                                            s.remove(t.Da, true);
                                            s.setActiveTab(s.insert(t.index, u))
                                        } else s.setActiveTab(s.add(u));
                                        pui.cnv.themes.setTheme(n);
                                        pui.cnv.greenScreenDisplay = k;
                                        pui.cnv.mh = l;
                                        pui.cnv.Tn = o;
                                        pui.cnv.Xs();
                                        o && pui.cnv.Ja.dj("ALLINONE");
                                        Ext.getCmp("RecFormatsTabPanel").setActiveTab(0);
                                        var w = pui.cnv.Ja.Om();
                                        R.JA(w, function () {
                                            R.nn(w);
                                            rd.zs();
                                            pui.cnv.Ud.qs();
                                            pui.ka = pui.cnv.Ja.Jt();
                                            S.ak();
                                            pui.designer.Ea = false;
                                            if (pui.cnv.Ea) pui.designer.Ea = true;
                                            pui.designer.currentDisplay.library = null;
                                            pui.designer.currentDisplay.file = null;
                                            pui.designer.currentDisplay.member = null;
                                            pui.designer.currentDisplay.ifsFile = null;
                                            pui.designer.currentDisplay.Eb = null;
                                            pui.designer.currentDisplay.text = null;
                                            pui.designer.currentDisplay.comments = null;
                                            pui.designer.currentDisplay.wf = null;
                                            pui.designer.currentDisplay.cf =
                                                null;
                                            pui.designer.currentDisplay.lj = true;
                                            pui.designer.currentDisplay.gp = l;
                                            pui.designer.currentDisplay.Zs = k.text;
                                            pui.designer.C.formats = {};
                                            if (o) if (k.dds != null && k.dds.length > 0) {
                                                pui.designer.C.split(k.dds);
                                                if (pui.designer.C.comments.length > 0) {
                                                    pui.designer.currentDisplay.comments = [];
                                                    for (var v = 0; v < pui.designer.C.comments.length; v++) pui.designer.currentDisplay.comments.push(pui.designer.C.comments[v])
                                                }
                                                setTimeout(function () {
                                                    rd.gm()
                                                }, 10)
                                            }
                                            rd.Ce();
                                            pui.ide.Qb();
                                            f.close();
                                            screenMask.hide();
                                            pui.ide.K.yx();
                                            Kd.set("cnvfile",
                                                g);
                                            Kd.set("cnvlibrary", h);
                                            Kd.set("cnvtheme", n);
                                            Kd.save();
                                            u.ka = pui.ka;
                                            u.C = {
                                                formats: pui.designer.C.formats,
                                                comments: pui.designer.C.comments,
                                                global: pui.designer.C.global
                                            }
                                        })
                                    }
                                }
                            }
                        })
                    }
                }
            }
        }, {
            text: "Cancel", handler: function () {
                f.close()
            }
        }],
        items: [e]
    });
    if (R) R.designer.disabled = true;
    f.show()
};
pui.ide.K.iH = function () {
    var b = new Ext.form.FormPanel({
        height: 93,
        defaultType: "textfield",
        labelWidth: 70,
        region: "north",
        bodyStyle: "padding: 6px 6px 6px 6px;",
        frame: false,
        tbar: [new Ext.Toolbar.TextItem({text: "Default Program:", style: "font-weight: bold;"})],
        defaults: {labelWidth: 50, width: 150, style: "text-transform: uppercase;", msgTarget: "side"},
        items: [{
            name: "_program",
            id: "_program",
            anchor: "95%",
            fieldLabel: "Program",
            autoCreate: {tag: "input", type: "text", maxlength: 10},
            value: ""
        }, {
            name: "_library", anchor: "95%",
            fieldLabel: "Library", autoCreate: {tag: "input", type: "text", maxlength: 10}, value: ""
        }]
    }), a = new Ext.data.JsonStore({
        autoDestroy: true,
        url: cc("PUI0001106.pgm"),
        root: "programs",
        successProperty: "success",
        idProperty: "userid",
        fields: ["userid", "userprofile", "program", "library"]
    }), c = new Ext.grid.EditorGridPanel({
        autoScroll: true,
        stripeRows: true,
        region: "center",
        layout: "fit",
        clicksToEdit: 2,
        loadMask: false,
        store: a,
        viewConfig: {forceFit: true},
        sm: new Ext.grid.RowSelectionModel({singleSelect: true}),
        tbar: [new Ext.Toolbar.TextItem({
            text: "User Programs:",
            style: "font-weight: bold;"
        }), "->", {
            tooltip: "Add",
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/add.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/add.png",
            handler: function () {
                var e = new (Ext.data.Record.create([{name: "userid", type: "string"}, {
                    name: "userprofile",
                    type: "string"
                }, {name: "program", type: "string"}, {name: "library", type: "string"}]))({
                    userid: "",
                    userprofile: "",
                    program: "",
                    library: ""
                });
                c.stopEditing();
                a.insert(0, e);
                c.startEditing(0, 0)
            }
        }, "-", {
            tooltip: "Edit",
            icon: pui.flatlook ?
                "/profoundui/proddata/images/FlatIcons/16x16/edit.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/edit.png",
            handler: function () {
                c.stopEditing();
                var e = 0;
                if (c.getSelectionModel().hasSelection()) {
                    e = c.getSelectionModel().getSelected();
                    e = a.indexOf(e)
                }
                c.startEditing(e, 0)
            }
        }, "-", {
            tooltip: "Delete",
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/remove-1.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/delete.png",
            handler: function () {
                c.stopEditing();
                if (c.getSelectionModel().hasSelection()) {
                    var e =
                        c.getSelectionModel().getSelected();
                    a.remove(e)
                } else Ext.MessageBox.alert("Delete Error", "Please select a record to delete.")
            }
        }],
        columns: [{
            header: "User",
            sortable: true,
            width: 100,
            dataIndex: "userprofile",
            renderer: function (e) {
                return e.toUpperCase()
            },
            editor: new Ext.form.TextField({
                allowBlank: false,
                style: "text-transform: uppercase;",
                autoCreate: {tag: "input", type: "text", maxlength: 10}
            })
        }, {
            header: "Program", sortable: true, width: 100, dataIndex: "program", renderer: function (e) {
                return e.toUpperCase()
            }, editor: new Ext.form.TextField({
                allowBlank: false,
                style: "text-transform: uppercase;", autoCreate: {tag: "input", type: "text", maxlength: 10}
            })
        }, {
            header: "Library",
            sortable: true,
            width: 100,
            dataIndex: "library",
            renderer: function (e) {
                return e.toUpperCase()
            },
            editor: new Ext.form.TextField({
                allowBlank: false,
                style: "text-transform: uppercase;",
                autoCreate: {tag: "input", type: "text", maxlength: 10}
            })
        }]
    }), d = new Ext.Window({
        title: "Maintain Initial Programs",
        width: 380,
        height: 325,
        minWidth: 380,
        minHeight: 325,
        layout: "border",
        modal: true,
        buttonAlign: "center",
        keys: [{
            key: 13, fn: function () {
                d.buttons[0].handler()
            }
        }],
        listeners: {
            beforeshow: function () {
                screenMask.msg = "Loading...";
                screenMask.show();
                a.load({
                    params: {mode: "LOAD"}, callback: function () {
                        var e = a.findExact("userid", "0");
                        if (e >= 0) {
                            e = a.getAt(e);
                            b.form.findField("_program").setValue(e.data.program);
                            b.form.findField("_library").setValue(e.data.library);
                            a.remove(e)
                        }
                        screenMask.hide()
                    }
                })
            }, beforeclose: function () {
                if (R) R.designer.disabled = false
            }
        },
        buttons: [{
            text: "Save", handler: function () {
                if (b.form.isValid()) {
                    var e = b.form.findField("_library").getValue().toUpperCase(),
                        f = b.form.findField("_program").getValue().toUpperCase(), h = true, g = S.wa(f, "object");
                    if (g != "") {
                        b.form.findField("_program").markInvalid("Program name " + g);
                        h = false
                    }
                    g = S.wa(e, "library");
                    if (g != "") {
                        b.form.findField("_library").markInvalid("Library name " + g);
                        h = false
                    }
                    if (h) {
                        e = {mode: "Save", defaultPgm: f, defaultLib: e};
                        f = a.data.items;
                        for (var l = d.items.items[1], n = d.items.items[1].getColumnModel(), o = 2; o < a.getCount() + 2; o++) {
                            e["userprofile" + o] = f[o - 2].data.userprofile;
                            e["program" + o] = f[o - 2].data.program;
                            e["library" + o] =
                                f[o - 2].data.library;
                            g = S.wa(f[o - 2].data.userprofile, "object");
                            if (g != "") {
                                l.startEditing(o - 2, 0);
                                n.getCellEditor(0, o - 2).field.markInvalid("User profile " + g);
                                h = false;
                                break
                            }
                            g = S.wa(f[o - 2].data.program, "object");
                            if (g != "") {
                                l.startEditing(o - 2, 1);
                                n.getCellEditor(1, o - 2).field.markInvalid("Program name " + g);
                                h = false;
                                break
                            }
                            g = S.wa(f[o - 2].data.library, "library");
                            if (g != "") {
                                l.startEditing(o - 2, 2);
                                n.getCellEditor(2, o - 2).field.markInvalid("Library name " + g);
                                h = false;
                                break
                            }
                        }
                        if (h) {
                            screenMask.msg = "Saving...";
                            screenMask.show();
                            Ext.Ajax.request({
                                url: cc("PUI0001106.pgm"), params: e, success: function (i) {
                                    d.close();
                                    screenMask.hide();
                                    i = eval("(" + i.responseText + ")");
                                    i.success || alert(i.msg)
                                }, failure: function (i) {
                                    alert("http code " + i.status + " occurred")
                                }
                            })
                        }
                    }
                }
            }
        }, {
            text: "Cancel", handler: function () {
                c.stopEditing();
                d.close()
            }
        }],
        items: [b, c]
    });
    if (R) R.designer.disabled = true;
    d.show()
};
pui.ide.K.gH = function (b, a) {
    var c = new Ext.form.FormPanel({
        defaultType: "textfield",
        labelWidth: 125,
        header: false,
        bodyStyle: "padding: 3px",
        frame: true,
        defaults: {labelWidth: 50, width: 150, msgTarget: "side"},
        items: [{
            name: "_importFile",
            id: "_importFile",
            anchor: "95%",
            fieldLabel: "Import Widget Sets",
            autoCreate: {tag: "input", type: "file", multiple: "true"}
        }]
    }), d = [], e = 0, f = localStorage.getItem("pui-widget-sets");
    f ? JSON.parse(f).sets.forEach(function (n) {
        n = {
            name: n.name, id: "_exportSet_" + e, anchor: "95%", fieldLabel: n.name, autoCreate: {
                tag: "input",
                type: "checkbox", cls: "import-export-widget-set-checkbox"
            }
        };
        e++;
        d.push(n)
    }) : d.push({
        name: "_noWidgetSet",
        id: "_noWidgetSet",
        xtype: "displayfield",
        anchor: "95%",
        hideLabel: true,
        value: "No widget set data. Please reload sets from server and try again."
    });
    f = new Ext.form.FormPanel({
        id: "_exportFileForm",
        defaultType: "textfield",
        labelWidth: 50,
        header: false,
        bodyStyle: "padding: 3px",
        boxMaxHeight: 140,
        height: 125,
        autoScroll: true,
        frame: true,
        defaults: {labelWidth: 50, width: 150, msgTarget: "side"},
        items: d
    });
    var h = [];
    window.FileReader &&
    h.push({id: "_importFileTab", title: "Import Widget Set(s)", layout: "fit", items: c});
    h.push({id: "_exportFileTab", title: "Export Widget Set(s)", layout: "fit", items: f});
    var g = new Ext.TabPanel({
        frame: false,
        id: "_WidgetSetTabPanel",
        border: false,
        activeTab: "_importFileTab",
        defaults: {hideBorders: true},
        tabWidth: 100,
        region: "north",
        deferredRender: true,
        height: 300,
        tabPosition: "top",
        enableTabScroll: true,
        activeTab: 0,
        split: true,
        listeners: {
            tabchange: function (n, o) {
                if (l && l.buttons[0]) {
                    o.title == "Export Widget Set(s)" && l.buttons[0].setText("Export");
                    o.title == "Import Widget Set(s)" && l.buttons[0].setText("Import")
                }
            }
        },
        items: h
    }), l = new Ext.Window({
        title: "Import/Export Widget Sets",
        width: 440,
        height: pui.nodedesigner || a ? 200 : pui.flatlook ? 235 : 225,
        minWidth: 440,
        minHeight: pui.nodedesigner || a ? 200 : pui.flatlook ? 235 : 225,
        modal: true,
        buttonAlign: "center",
        defaultButton: 0,
        resizable: false,
        listeners: {
            show: function () {
                g.setActiveTab("_importFileTab")
            }, beforeclose: function () {
                if (R) R.designer.disabled = false
            }
        },
        buttons: [{
            text: "Import", handler: function () {
                var n = Ext.getCmp("_WidgetSetTabPanel").getActiveTab().title;
                if (n == "Export Widget Set(s)") {
                    var o = {sets: []}, i = [];
                    Ext.getCmp("_exportFileForm").items.each(function (v) {
                        v = v.el.dom;
                        v.checked && i.push([v.name, Number(v.id[v.id.length - 1])])
                    });
                    if (i.length === 0) {
                        Ext.MessageBox.show({
                            title: "Export Error",
                            msg: "Please select a widget set to export",
                            width: 400,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        });
                        return
                    }
                    var r = JSON.parse(localStorage.getItem("pui-widget-sets"));
                    i.forEach(function (v) {
                        var E = v[0];
                        (v = r.sets[v[1]]) && v.name === E && o.sets.push(v)
                    });
                    o = JSON.stringify(o);
                    l.close();
                    pui.Jf("text/plain", "widgetSets.json", o)
                }
                if (n === "Import Widget Set(s)") {
                    n = c.form.findField("_importFile");
                    var k = n.el.dom.files;
                    if (!k || k.length === 0) n.markInvalid("Please select a file."); else {
                        var q = new window.FileReader, s = [], t = [], u, w = function () {
                            if (s.length > 0) {
                                u = s.pop();
                                q.readAsText(u)
                            } else {
                                if (t.length > 0) {
                                    var v = t.reduce(function (E, y) {
                                        var F = "<span>File: " + y[0] + " , Reason: " + y[1] + "</span><br />";
                                        return E ? E + F : F
                                    }, "");
                                    Ext.MessageBox.show({
                                        title: "Following file(s) failed to import", msg: v, width: 400,
                                        buttons: Ext.MessageBox.OK, icon: Ext.MessageBox.ERROR
                                    })
                                }
                                l.close()
                            }
                        };
                        q.onload = function (v) {
                            try {
                                var E = JSON.parse(v.target.result)
                            } catch (y) {
                                t.push([u.name, "Error parsing JSON"]);
                                w();
                                return
                            }
                            if (E.sets === undefined) t.push([u.name, "Invalid widget set data"]); else {
                                E.sets.forEach(function (F) {
                                    F.name && F.widgets && pui.ide.Po(F.name, F.widgets)
                                });
                                pui.ide.saveWidgetSets()
                            }
                            w()
                        };
                        (function (v) {
                            s = Array.from(v).filter(function (E) {
                                if (E.type) {
                                    if (E.type === "application/json" || E.type === "text/plain") return true
                                } else if (E.name.indexOf("json") !==
                                    -1 || E.name.indexOf(".txt") !== -1) return true;
                                t.push([E.name, "Invalid file type"]);
                                return false
                            });
                            w()
                        })(k)
                    }
                }
            }
        }, {
            text: "Cancel", handler: function () {
                l.close()
            }
        }],
        items: [g]
    });
    if (R) R.designer.disabled = true;
    l.show()
};
pui.ide.K.KF = function () {
    var b = new Ext.data.JsonStore({
        autoDestroy: true,
        proxy: new Ext.data.MemoryProxy({sizes: pui.ide.canvasSizes}),
        root: "sizes",
        idProperty: "description",
        fields: ["description", "width", "height"]
    }), a = new Ext.grid.EditorGridPanel({
        autoScroll: true,
        stripeRows: true,
        region: "center",
        layout: "fit",
        clicksToEdit: 2,
        loadMask: false,
        store: b,
        viewConfig: {forceFit: true},
        sm: new Ext.grid.RowSelectionModel({singleSelect: true}),
        tbar: [new Ext.Toolbar.TextItem({text: "Actions:", style: "font-weight: bold;"}),
            "->", {
                tooltip: "Add",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/add.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/add.png",
                handler: function () {
                    var d = new (Ext.data.Record.create([{name: "description", type: "string"}, {
                        name: "width",
                        type: "string"
                    }, {name: "height", type: "string"}]))({description: "", width: "", height: ""});
                    a.stopEditing();
                    b.insert(0, d);
                    a.startEditing(0, 0)
                }
            }, "-", {
                tooltip: "Edit",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/edit.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/edit.png",
                handler: function () {
                    a.stopEditing();
                    var d = 0;
                    if (a.getSelectionModel().hasSelection()) {
                        d = a.getSelectionModel().getSelected();
                        d = b.indexOf(d)
                    }
                    a.startEditing(d, 0)
                }
            }, "-", {
                tooltip: "Delete",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/remove-1.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/delete.png",
                handler: function () {
                    a.stopEditing();
                    if (a.getSelectionModel().hasSelection()) {
                        var d = a.getSelectionModel().getSelected();
                        b.remove(d)
                    } else Ext.MessageBox.alert("Delete Error", "Please select a record to delete.")
                }
            }],
        columns: [{
            header: "Description",
            sortable: true,
            width: 230,
            dataIndex: "description",
            editor: new Ext.form.TextField({allowBlank: false, autoCreate: {tag: "input", type: "text"}})
        }, {
            header: "Width",
            sortable: true,
            width: 75,
            dataIndex: "width",
            editor: new Ext.form.TextField({autoCreate: {tag: "input", type: "text"}})
        }, {
            header: "Height",
            sortable: true,
            width: 75,
            dataIndex: "height",
            editor: new Ext.form.TextField({autoCreate: {tag: "input", type: "text"}})
        }]
    }), c = new Ext.Window({
        title: "Edit Canvas Sizes", width: 380, height: 275, minWidth: 380,
        minHeight: 275, layout: "border", modal: true, buttonAlign: "center", keys: [{
            key: 13, fn: function () {
                c.buttons[0].handler()
            }
        }], listeners: {
            beforeshow: function () {
                b.load()
            }, beforeclose: function () {
                R.designer.disabled = false
            }
        }, buttons: [{
            text: "Save", handler: function () {
                for (var d = b.data.items, e = c.items.items[0], f = e.getColumnModel(), h = [], g = true, l = 2; l < b.getCount() + 2; l++) {
                    var n = d[l - 2].data.description, o = d[l - 2].data.width, i = d[l - 2].data.height;
                    if (typeof o == "string" && Zb(o) == "") o = null;
                    if (typeof o == "string") {
                        o = Number(o);
                        if (isNaN(o)) o =
                            0
                    }
                    if (typeof i == "string" && Zb(i) == "") i = null;
                    if (typeof i == "string") {
                        i = Number(i);
                        if (isNaN(i)) i = 0
                    }
                    h.push({description: n, width: o, height: i});
                    if (Zb(n) == "") {
                        e.startEditing(l - 2, 0);
                        f.getCellEditor(0, l - 2).field.markInvalid("Description must not be blank.");
                        g = false;
                        break
                    }
                    if (i != null && i <= 0) {
                        e.startEditing(l - 2, 1);
                        f.getCellEditor(1, l - 2).field.markInvalid("Height must be blank or a numeric value greater than 0.");
                        g = false;
                        break
                    }
                    if (o != null && o <= 0) {
                        e.startEditing(l - 2, 2);
                        f.getCellEditor(2, l - 2).field.markInvalid("Width must be blank or a numeric value greater than 0.");
                        g = false;
                        break
                    }
                    if (i == null && o != null) {
                        e.startEditing(l - 2, 2);
                        f.getCellEditor(2, l - 2).field.markInvalid("Width must be blank when height is blank.");
                        g = false;
                        break
                    }
                    if (i != null && o == null) {
                        e.startEditing(l - 2, 2);
                        f.getCellEditor(2, l - 2).field.markInvalid("Width must be specified.");
                        g = false;
                        break
                    }
                }
                if (g) {
                    d = "[";
                    for (e = 0; e < h.length; e++) {
                        f = h[e];
                        n = f.description;
                        n = n.replace(/\\/g, "\\\\");
                        n = n.replace(/"/g, '\\"');
                        if (e != 0) d += ", ";
                        d += '{ "description": "' + n + '", "width": ' + f.width + ', "height": ' + f.height + " }"
                    }
                    d += "]";
                    screenMask.msg =
                        "Saving...";
                    screenMask.show();
                    jc({
                        url: cc("PUI0001111.pgm"),
                        method: "post",
                        params: {
                            task: "save",
                            sizes: d,
                            workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
                        },
                        suppressAlert: true,
                        handler: function (r) {
                            if (r.success != true) r.message != null ? pui.alert(r.message) : pui.alert("Error occurred while saving canvas sizes."); else pui.ide.canvasSizes = h;
                            c.close();
                            screenMask.hide()
                        },
                        onfail: function () {
                            pui.alert("Error occurred while saving canvas sizes.");
                            c.close();
                            screenMask.hide()
                        }
                    })
                }
            }
        }, {
            text: "Cancel", handler: function () {
                a.stopEditing();
                c.close()
            }
        }], items: [a]
    });
    R.designer.disabled = true;
    c.show()
};
pui.ide.K.nl = function () {
    var b = pui.ide.$f.getWidth(), a = pui.ide.$f.getHeight(), c = new Ext.Window({
        title: "Preview Data",
        width: 800,
        height: 600,
        minWidth: 500,
        minHeight: 375,
        layout: "fit",
        modal: true,
        maximized: b < 800 || a < 600 ? true : false,
        buttonAlign: "center",
        defaultButton: 0,
        constrain: true,
        listeners: {
            show: function () {
                var d = Ext.get("_preview_form_content").dom.firstChild.firstChild;
                pui.designer.nl.show(d)
            }, beforeclose: function () {
                R.designer.disabled = false
            }, render: function (d) {
                new Ext.KeyMap(d.getEl(), {
                    key: Ext.EventObject.ENTER,
                    handler: d.buttons[0].handler, stopEvent: true
                }, "keypress")
            }
        },
        buttons: [{
            text: "Launch Preview", handler: function () {
                pui.designer.nl.aG();
                c.close();
                var d = location.href;
                d = d.split("?")[0];
                urlParts = d.split("/");
                urlParts[urlParts.length - 1] = "start?mode=preview";
                if (pui.nodedesigner) urlParts[urlParts.length - 1] = "nodedesigner/preview?mode=preview";
                d = rd.$g();
                if (d.width != null && d.height != null) urlParts[urlParts.length - 1] += "&canvasSize=" + d.width + "x" + d.height;
                d = urlParts.join("/");
                if (pui.isCloud) {
                    d = document.location.pathname;
                    if (d.substr(0, 5) === "/ide/") d = d.substr(4);
                    d = "/preview" + d;
                    if (d.substr(d.length - 1) !== "/") d += "/";
                    d += "?mode=preview"
                }
                window.open(d)
            }
        }, {
            text: "Cancel", handler: function () {
                c.close()
            }
        }],
        items: [[{
            region: "center",
            layout: "fit",
            bodyStyle: "white-space: normal; padding: 10px 10px 10px 10px",
            autoScroll: true,
            id: "_preview_form_content",
            html: ""
        }]]
    });
    R.designer.disabled = true;
    c.show()
};
pui.ide.K.picker = {};
pui.ide.K.picker.kx = {
    interval: 100, run: function () {
        Ext.getCmp("pickerDialog-fileName").getValue() != "" ? Ext.getCmp("pickerDialog-actionButton").enable() : Ext.getCmp("pickerDialog-actionButton").disable()
    }
};
pui.ide.K.picker.lp = function (b) {
    return Ext.util.Format.date(new Date(b * 1E3), "Y-m-d-H.i.s")
};
pui.ide.K.picker.sw = function (b) {
    var a = parseInt(b.substr(0, 4), 10), c = parseInt(b.substr(4, 2), 10) - 1, d = parseInt(b.substr(6, 2), 10),
        e = parseInt(b.substr(8, 2), 10), f = parseInt(b.substr(10, 2), 10);
    b = parseInt(b.substr(12, 2), 10);
    return pui.ide.K.picker.lp((new Date(a, c, d, e, f, b)).getTime() / 1E3)
};
pui.ide.K.picker.dH = function (b, a, c) {
    a = "/profoundui/proddata/images/dspfdesigner/icons16x16/";
    if (b) {
        a += "folder";
        if (c.get("name") == "..") a += "-up"
    } else a += "file";
    a += ".png";
    return '<img src="' + a + '">'
};
pui.ide.K.picker.create = function (b, a, c, d, e, f, h, g) {
    Ext.state.Manager.clear("pickerDialog-pickerGrid");
    pui.ide.K.picker.SE = false;
    var l, n;
    if (b == "file") {
        var o;
        if (g) {
            o = pui.nodedesigner ? pui.PROFOUNDJS_DIR : pui.DOCUMENT_ROOT;
            if (o.charAt(o.length - 1) == pui.dirSeparator) o = o.substr(0, o.length - 1)
        }
        l = new Ext.grid.ColumnModel([{
            header: "",
            sortable: true,
            dataIndex: "dir",
            width: 28,
            renderer: pui.ide.K.picker.dH
        }, {header: "File Name", sortable: true, dataIndex: "name", width: 190}, {
            header: "Created By",
            sortable: true,
            dataIndex: "uid"
        },
            {
                header: "Created On",
                sortable: true,
                dataIndex: "ctime",
                width: 120,
                renderer: pui.ide.K.picker.lp
            }, {
                header: "Last Modified",
                sortable: true,
                dataIndex: "mtime",
                width: 120,
                renderer: pui.ide.K.picker.lp
            }, {header: "Last Used", sortable: true, dataIndex: "atime", width: 120, renderer: pui.ide.K.picker.lp}]);
        n = ["dir", "name", "uid", "ctime", "mtime", "atime"]
    } else {
        l = new Ext.grid.ColumnModel([{header: "Member Name", sortable: true, dataIndex: "name", width: 110}, {
            header: "Created On", sortable: true, dataIndex: "created", renderer: pui.ide.K.picker.sw,
            width: 120
        }, {
            header: "Last Modified",
            sortable: true,
            dataIndex: "changed",
            renderer: pui.ide.K.picker.sw,
            width: 120
        }, {header: "Text", sortable: true, dataIndex: "text", width: 330}]);
        n = ["name", "type", "created", "changed", "text"]
    }
    if (c.length > 1 && c.substr(c.length - 1, 1) == pui.dirSeparator) c = c.substr(0, c.length - 1);
    var i = {};
    if (b == "member") {
        i.file = e;
        i.library = d;
        i.name = f;
        i.type = "DSPF"
    }
    if (b == "file") {
        i.context = "dspf";
        i.dir = c;
        i.type = "*";
        if (h === true) i.type = "anytext"; else if (g) i.type = "*"
    }
    d = "/" + b + "s.json";
    if (b == "file") {
        d = cc("PUI0001117.pgm");
        if (pui.isCloud) {
            (e = pui.cloud.ws.id) || (e = "");
            i.workspace_id = e
        }
    } else if (b == "member") d = cc("PUI0001110.pgm");
    var r = new Ext.data.JsonStore({
        url: d, method: "POST", baseParams: i, root: "data", fields: n, listeners: {
            load: function () {
                r.filterBy(function (q) {
                    q = q.get("name");
                    if (q === ".") return false;
                    if (q === ".." && (c === "/" || c === "C:\\" || c === "c:\\" || c === "D:\\" || c === "d:\\")) return false;
                    return true
                })
            }, exception: function (q, s, t, u, w) {
                if (w.status == 200) {
                    q = u.reader.jsonData;
                    Ext.MessageBox.alert("Error", q.errorText + "<br/><br/>" + q.errorText2)
                } else Ext.MessageBox.alert("Error",
                    "HTTP " + w.status + " - " + w.statusText)
            }
        }
    });
    n = "";
    n = b == "member" ? "Source File: " : "Directory: ";
    n += c;
    if (f != null && f != "*ALL") n += " &nbsp;&nbsp;&nbsp;Member Names: " + f;
    var k = new Ext.Window({
        id: "pickerDialog",
        title: n,
        layout: "border",
        width: 717,
        height: 400,
        maximizable: true,
        items: [new Ext.grid.GridPanel({
            id: "pickerDialog-pickerGrid",
            region: "center",
            colModel: l,
            selModel: new Ext.grid.RowSelectionModel({
                singleSelect: true,
                listeners: {selectionchange: pui.ide.K.picker.uJ}
            }),
            store: r,
            loadMask: true,
            stripeRows: true,
            listeners: {
                rowdblclick: function (q,
                                       s) {
                    var t = q.getStore().getAt(s);
                    if (b == "file" && t.get("dir")) {
                        t = t.get("name");
                        if (t == "..") {
                            if (c == o) return;
                            t = c.split(pui.dirSeparator);
                            var u = t.pop();
                            if (t.length === 1 && !pui.isCloud) c = t[0] + pui.dirSeparator; else {
                                c = t.join(pui.dirSeparator);
                                if (c == "") c = u
                            }
                        } else {
                            if (c.length > 0 && c.substr(c.length - 1, 1) == pui.dirSeparator) c = c.substr(0, c.length - 1);
                            c += pui.dirSeparator;
                            c += t
                        }
                        r.load({params: {dir: c}});
                        k.setTitle("Directory: " + c);
                        a.pA.setValue(c)
                    } else pui.ide.K.picker.Ls(b, a.Lj)
                }
            }
        }), new Ext.form.FormPanel({
            region: "south",
            title: " ",
            height: 50,
            defaultType: "textfield",
            labelWidth: 85,
            bodyStyle: "padding: 5px 5px 5px 5px",
            items: [{
                id: "pickerDialog-fileName",
                fieldLabel: b == "member" ? "Member Name" : "File Name",
                width: 600,
                listeners: {
                    blur: function (q) {
                        q.getEl().dom.readOnly && Ext.getCmp("pickerDialog-pickerGrid").getSelectionModel().clearSelections()
                    }
                }
            }]
        })],
        buttons: [{
            text: "Select", id: "pickerDialog-actionButton", disabled: true, handler: function () {
                pui.ide.K.picker.Ls(b, a.Lj)
            }
        }, {
            text: "Cancel", handler: function () {
                pui.ide.K.picker.SE = true;
                pui.ide.K.picker.close()
            }
        }],
        keys: [{
            key: Ext.EventObject.ENTER, fn: function () {
                Ext.getCmp("pickerDialog-actionButton").disabled || pui.ide.K.picker.Ls(b, a.Lj)
            }
        }],
        listeners: {
            show: function () {
                Ext.isGecko == true && k.getEl().setStyle("position", "fixed");
                var q = Ext.getCmp("pickerDialog-fileName");
                q.focus.defer(150, q);
                r.load();
                Ext.TaskMgr.start(pui.ide.K.picker.kx)
            }, close: function () {
                Ext.TaskMgr.stop(pui.ide.K.picker.kx)
            }
        }
    });
    k.show()
};
pui.ide.K.picker.uJ = function (b) {
    var a = Ext.getCmp("pickerDialog-fileName");
    a.setValue("");
    if (b.getSelections().length == 1) {
        b = b.getSelections()[0];
        b.get("dir") || a.setValue(b.get("name"))
    }
};
pui.ide.K.picker.Ls = function (b, a) {
    var c = Ext.getCmp("pickerDialog-fileName").getValue();
    a.setValue(c);
    a.focus();
    Ext.getCmp("pickerDialog").close()
};
pui.ide.K.picker.close = function () {
    Ext.getCmp("pickerDialog").close()
};
pui.ide.K.WH = function () {
    var b = new Ext.form.FormPanel({
        height: pui.flatlook ? 100 : 90,
        defaultType: "textfield",
        labelWidth: 100,
        bodyStyle: "padding: 6px 6px 6px 6px;",
        frame: false,
        tbar: [new Ext.Toolbar.TextItem({text: "Initial Mobile Program:", style: "font-weight: bold;"})],
        defaults: {labelWidth: 50, width: 150, style: "text-transform: uppercase;", msgTarget: "side"},
        items: [{
            name: "_program",
            id: "_program",
            anchor: "95%",
            fieldLabel: "Program",
            autoCreate: {tag: "input", type: "text", maxlength: 10},
            value: ""
        }, {
            name: "_library", anchor: "95%",
            fieldLabel: "Library", autoCreate: {tag: "input", type: "text", maxlength: 10}, value: ""
        }, {xtype: "checkbox", name: "_signon", anchor: "95%", fieldLabel: "Require Sign-On", value: ""}]
    }), a = new Ext.data.JsonStore({
        autoDestroy: true,
        url: cc("PUI0001112.pgm"),
        root: "mobile",
        successProperty: "success",
        fields: ["program", "library", "signon"]
    }), c = new Ext.Window({
        title: "Configure Profound UI Mobile Client",
        width: 380,
        height: 185,
        minWidth: 380,
        minHeight: 175,
        layout: "fit",
        modal: true,
        buttonAlign: "center",
        keys: [{
            key: 13, fn: function () {
                c.buttons[0].handler()
            }
        }],
        listeners: {
            beforeshow: function () {
                screenMask.msg = "Loading...";
                screenMask.show();
                a.load({
                    params: {mode: "LoadMobile"}, callback: function () {
                        if (a.getCount() > 0) {
                            var d = a.getAt(0);
                            b.form.findField("_program").setValue(d.data.program);
                            b.form.findField("_library").setValue(d.data.library);
                            b.form.findField("_signon").setValue(d.data.signon);
                            a.remove(d)
                        }
                        screenMask.hide()
                    }
                })
            }, beforeclose: function () {
                if (R) R.designer.disabled = false
            }
        },
        buttons: [{
            text: "Save", handler: function () {
                if (b.form.isValid()) {
                    var d = b.form.findField("_library").getValue().toUpperCase(),
                        e = b.form.findField("_program").getValue().toUpperCase(),
                        f = b.form.findField("_signon").getValue(), h = true, g = S.wa(e, "object");
                    if (g != "") {
                        b.form.findField("_program").markInvalid("Program name " + g);
                        h = false
                    }
                    g = S.wa(d, "library");
                    if (g != "") {
                        b.form.findField("_library").markInvalid("Library name " + g);
                        h = false
                    }
                    if (h) {
                        d = {mode: "SaveMobile", mobilePgm: e, mobileLib: d, mobileSign: f};
                        screenMask.msg = "Saving...";
                        screenMask.show();
                        Ext.Ajax.request({
                            url: cc("PUI0001112.pgm"), params: d, success: function (l) {
                                c.close();
                                screenMask.hide();
                                l = eval("(" + l.responseText + ")");
                                l.success || alert(l.msg)
                            }, failure: function (l) {
                                alert("http code " + l.status + " occurred")
                            }
                        })
                    }
                }
            }
        }, {
            text: "Cancel", handler: function () {
                c.close()
            }
        }],
        items: [b]
    });
    if (R) R.designer.disabled = true;
    c.show()
};
pui.ide.PE = function () {
    return new Ext.TabPanel({
        id: "_RibbonTabPanel",
        frame: false,
        tabWidth: 100,
        region: "north",
        deferredRender: true,
        tabPosition: "top",
        enableTabScroll: true,
        activeTab: 0,
        contentEl: "banner",
        defaults: {hideBorders: true},
        height: pui.flatlook ? 110 : 100,
        listeners: {
            tabchange: function (b, a) {
                pui.ide.refreshRibbon(a)
            }
        },
        items: [pui.ide.HC(), pui.ide.xC(), pui.ide.uC(), pui.ide.GC()]
    })
};
pui.ide.HC = function () {
    function b(q, s) {
        var t = Ext.getCmp("centerPanel"), u, w, v = null, E = false;
        if (q.Eb) {
            w = (u = q.Eb) ? u.split(".").pop() : "";
            E = true
        } else if (q.ifsFile) {
            if (q.path) {
                u = q.ifsFile.replace(q.path, "");
                v = q.path;
                if (u.charAt(0) === pui.dirSeparator) {
                    u = u.substring(1);
                    v += pui.dirSeparator
                }
            } else if (q.ifsFile.charAt(0) === pui.dirSeparator) {
                u = q.ifsFile.substring(1);
                v = pui.dirSeparator
            }
            w = u ? u.split(".").pop() : ""
        }
        pui.ide.Td(u, v, function (y) {
            var F = pui.ide.od();
            if (F.Da) {
                t.remove(F.Da, true);
                t.setActiveTab(t.insert(F.index,
                    y))
            } else t.setActiveTab(t.add(y));
            (y.Dj = E) || pui.ide.pd(q, function (D) {
                if (D.success) {
                    y.lastModified = D.data.mtime;
                    y.Vb = q
                }
            })
        }, s ? s : q.$e, w, E)
    }

    function a(q) {
        var s = Ext.getCmp("centerPanel"), t = pui.ide.od(), u = pui.ide.Bd();
        q.onsuccess = function () {
            u.ka = pui.ka;
            u.C = {formats: pui.designer.C.formats, comments: pui.designer.C.comments, global: pui.designer.C.global};
            if (q.ifsFile) q.path = q.ifsFile.substr(0, q.ifsFile.lastIndexOf(pui.dirSeparator));
            if (q.path) {
                Kd.set("ifsPath", q.path);
                Kd.save()
            } else if (q.library && q.file) {
                Kd.set("file",
                    q.file);
                Kd.set("library", q.library);
                Kd.save()
            }
            pui.ide.pd(q, function (w) {
                if (w.success) {
                    w = w.data;
                    u.lastModified = w.changed !== undefined ? w.changed : w.mtime;
                    u.Vb = q
                }
            })
        };
        q.sd = function () {
            s.remove(u, true);
            if (t.Da) {
                s.setActiveTab(s.insert(t.index, pui.ide.Bd()));
                pui.ide.Qb();
                Ext.getCmp("RecFormatsTabPanel").setActiveTab(0)
            }
        };
        if (t.Da) {
            s.remove(t.Da, true);
            s.setActiveTab(s.insert(t.index, u))
        } else s.setActiveTab(s.add(u));
        R.open(q)
    }

    function c(q, s, t) {
        function u(y, F, D) {
            var B = y.ifsFile || 1, I = y.member || 1, z = y.library || 1,
                H = y.file || 1, J = false, K = F.ifsFile || 2, L = F.file || 2, N = F.library || 2, O = F.member || 2;
            if ((y.Eb || 1) === (F.Eb || 2) || B === K) J = true; else if (H === L && I === O && z === N) J = true;
            if (J) return D;
            return null
        }

        function w(y, F) {
            if (!F.fileTab) return null;
            var D = y.Eb || 1, B = y.ifsFile || 1, I = F.ma || 2, z = F.root;
            if (z) I = z + I;
            if (I == D || I === B) return F;
            return null
        }

        if (!q || typeof q !== "object") return null;
        var v = Ext.getCmp("centerPanel"), E;
        if (s === undefined) s = false;
        if (t === undefined) t = false;
        v.items.each(function (y) {
            var F = y.currentDisplay;
            if (!s && !t) E = F ? u(q,
                F, y) : w(q, y); else if (s && F) E = u(q, F, y); else if (t) E = w(q, y);
            if (E) return false
        });
        return E
    }

    var d = {
        id: "_Ribon_HomeMenu", title: "Home", layout: "fit", iconCls: pui.flatlook ? "homeFlat" : "home", tbar: [{
            xtype: "buttongroup", columns: 4, title: "File Operations", items: [{
                text: "New",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/new.png" : "/profoundui/proddata/images/dspfDesigner/icons24x24/new_page.png",
                iconAlign: "left",
                rowspan: 2,
                arrowAlign: "bottom",
                menu: [{
                    text: "Visual Designer", icon: "/profoundui/proddata/images/FlatIcons/16x16/designer.svg",
                    handler: function () {
                        window.open(location.href)
                    }
                }, {
                    text: "Rich Display File",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/display.svg",
                    handler: function () {
                        var q = Ext.getCmp("centerPanel"), s = pui.ide.Bd();
                        q.setActiveTab(q.add(s));
                        Ext.getCmp("RecFormatsTabPanel").setActiveTab(0);
                        s.vd && s.vd.qb();
                        s.toolbar.designer.qb();
                        pui.ide.Qb();
                        Ext.getCmp("widgetsPanel").setActiveTab(0)
                    }
                }, {
                    id: "_Ribbon_Home_newRecord",
                    text: "Rich Display " + (pui.nodedesigner ? "Screen" : "Record Format"),
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/leaf.svg",
                    handler: function () {
                        rd.add();
                        Ext.getCmp("RecFormatsTabPanel").setActiveTab(0);
                        rd.qb();
                        R.designer.qb();
                        pui.ide.Qb()
                    }
                }, {
                    id: "_Ribbon_Home_newCSSFile",
                    text: "CSS File",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/file-css.svg",
                    handler: function () {
                        var q = Ext.getCmp("centerPanel");
                        pui.ide.Td(null, null, function (s) {
                            var t = pui.ide.od();
                            if (t.Da) {
                                q.remove(t.Da, true);
                                q.setActiveTab(q.insert(t.index, s))
                            } else q.setActiveTab(q.add(s))
                        }, "\n.myclass {\n\n}\n", "css")
                    }
                }, {
                    id: "_Ribbon_Home_newJavaScripttFile", text: "JavaScript File",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/file-js.svg", handler: function () {
                        var q = Ext.getCmp("centerPanel");
                        pui.ide.Td(null, null, function (s) {
                            var t = pui.ide.od();
                            if (t.Da) {
                                q.remove(t.Da, true);
                                q.setActiveTab(q.insert(t.index, s))
                            } else q.setActiveTab(q.add(s))
                        }, "\nfunction myfunction() {\n\n}\n", "js")
                    }
                }, {
                    id: "_Ribbon_Home_newJSONFile",
                    text: "JSON File",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/file-json.svg",
                    handler: function () {
                        var q = Ext.getCmp("centerPanel");
                        pui.ide.Td(null, null, function (s) {
                            var t =
                                pui.ide.od();
                            if (t.Da) {
                                q.remove(t.Da, true);
                                q.setActiveTab(q.insert(t.index, s))
                            } else q.setActiveTab(q.add(s))
                        }, "\n{\n\n}\n", "json")
                    }
                }, {
                    id: "_Ribbon_Home_newHTMLFile",
                    text: "HTML File",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/file-html.svg",
                    handler: function () {
                        var q = Ext.getCmp("centerPanel");
                        pui.ide.Td(null, null, function (s) {
                                var t = pui.ide.od();
                                if (t.Da) {
                                    q.remove(t.Da, true);
                                    q.setActiveTab(q.insert(t.index, s))
                                } else q.setActiveTab(q.add(s))
                            }, "\n<!DOCTYPE html>\n\n<html>\n\n  <head>\n    <title>page title</title>\n  </head>\n\n  <body>\n\n    <!-- page content --\>\n\n  </body>\n\n</html>\n",
                            "html")
                    }
                }, {
                    id: "_Ribbon_Home_newEJSFile",
                    text: "EJS File",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/file-ejs.svg",
                    handler: function () {
                        var q = Ext.getCmp("centerPanel");
                        pui.ide.Td(null, null, function (s) {
                            var t = pui.ide.od();
                            if (t.Da) {
                                q.remove(t.Da, true);
                                q.setActiveTab(q.insert(t.index, s))
                            } else q.setActiveTab(q.add(s))
                        }, "\n<!DOCTYPE html>\n\n<html>\n\n  <head>\n    <title><%= title %></title>\n  </head>\n\n  <body>\n\n    <!-- page content --\>\n\n  </body>\n\n</html>\n", "ejs")
                    }
                }, {
                    id: "_Ribbon_Home_newMarkdownFile",
                    text: "Markdown File",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/file-md.svg",
                    handler: function () {
                        var q = Ext.getCmp("centerPanel");
                        pui.ide.Td(null, null, function (s) {
                            var t = pui.ide.od();
                            if (t.Da) {
                                q.remove(t.Da, true);
                                q.setActiveTab(q.insert(t.index, s))
                            } else q.setActiveTab(q.add(s))
                        }, "\n# Project Title\n\nProject description\n", "md")
                    }
                }, {
                    id: "_Ribbon_Home_newTextFile",
                    text: "Text File",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/file-txt.svg" : "/profoundui/proddata/images/FlatIcons/16x16/page.png",
                    handler: function () {
                        var q = Ext.getCmp("centerPanel");
                        pui.ide.Td(null, null, function (s) {
                            var t = pui.ide.od();
                            if (t.Da) {
                                q.remove(t.Da, true);
                                q.setActiveTab(q.insert(t.index, s))
                            } else q.setActiveTab(q.add(s))
                        }, "")
                    }
                }]
            }, {
                xtype: "splitbutton",
                text: "Open...",
                scale: "medium",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/folder-open.svg",
                iconAlign: "left",
                rowspan: 2,
                arrowAlign: "bottom",
                disabled: pui.xd == true,
                menu: new Ext.menu.Menu({
                    items: [], listeners: {
                        beforeshow: function (q) {
                            q.items.length != 0 && q.removeAll();
                            var s = pui.designer.recentFiles.length;
                            s == 0 && q.addItem({text: "No Recent Files", disabled: true});
                            var t = pui.nodedesigner ? pui.PROFOUNDJS_DIR : pui.DOCUMENT_ROOT;
                            if (pui.isCloud) t = pui.cloud.ws.SERVER_DIR;
                            if (t.charAt(t.length - 1) == pui.dirSeparator) t = t.substr(0, t.length - 1);
                            for (var u, w, v, E, y, F, D, B, I = 0; I < s; I++) {
                                w = pui.designer.recentFiles[I].library;
                                v = pui.designer.recentFiles[I].file;
                                E = pui.designer.recentFiles[I].member;
                                y = pui.designer.recentFiles[I].ifsfile;
                                D = pui.designer.recentFiles[I].textfile;
                                B = pui.designer.recentFiles[I].textdir;
                                F = pui.designer.recentFiles[I].isRDF;
                                if (y != null) {
                                    u = y.split(pui.dirSeparator);
                                    u[u.length - 1] = "<b>" + u[u.length - 1] + "</b>";
                                    u = u.join(pui.dirSeparator)
                                } else if (D != null) {
                                    u = D.split(pui.dirSeparator);
                                    u[u.length - 1] = "<b>" + u[u.length - 1] + "</b>";
                                    u = (B ? B : t) + u.join(pui.dirSeparator)
                                } else u = w + " / " + v + " <b>(" + E + ")</b>";
                                q.addItem({
                                    text: u,
                                    file: v,
                                    library: w,
                                    member: E,
                                    ifsFile: y,
                                    $B: D,
                                    uK: B,
                                    BH: F,
                                    handler: function () {
                                        var z = Ext.getCmp("centerPanel");
                                        if (this.$B != null) {
                                            var H = this.$B, J = this.uK;
                                            if (!J) {
                                                J = pui.nodedesigner ? pui.PROFOUNDJS_DIR : pui.DOCUMENT_ROOT;
                                                if (pui.isCloud) J =
                                                    pui.cloud.ws.SERVER_DIR;
                                                if (J.charAt(J.length - 1) == pui.dirSeparator) J = J.substr(0, J.length - 1)
                                            }
                                            var K = {ifsFile: J + H, path: J}, L = c(K, false, true);
                                            L ? z.setActiveTab(L) : pui.ide.Td(H, J, function (N) {
                                                var O = pui.ide.od();
                                                if (O.Da) {
                                                    z.remove(O.Da, true);
                                                    z.setActiveTab(z.insert(O.index, N))
                                                } else z.setActiveTab(z.add(N));
                                                pui.ide.pd(K, function (V) {
                                                    if (V.success) {
                                                        N.lastModified = V.data.mtime;
                                                        N.Vb = K
                                                    }
                                                })
                                            })
                                        } else {
                                            z = Ext.getCmp("centerPanel");
                                            H = this.ifsFile;
                                            J = this.BH;
                                            K = {
                                                library: this.library,
                                                file: this.file,
                                                member: this.member,
                                                url: H,
                                                ifsFile: H
                                            };
                                            if (L = J ? c(K, J, false) : J === false ? c(K, J, true) : c(K)) z.setActiveTab(L); else {
                                                if (!R) {
                                                    R = new pui.designer.ik;
                                                    R.hide()
                                                }
                                                R.uj(K, function (N) {
                                                    N.Fj ? a(K) : b(K, N.data)
                                                })
                                            }
                                        }
                                    }
                                })
                            }
                        }
                    }
                }),
                handler: function () {
                    pui.ide.K.openDialog(null, function (q) {
                        var s = Ext.getCmp("centerPanel"), t = c(q);
                        if (t) s.setActiveTab(t); else {
                            if (!R) {
                                R = new pui.designer.ik;
                                R.hide()
                            }
                            if (q.isJSON === false) b(q); else if (q.isJSON) R.Fj(q.$e, q).Fj ? a(q) : b(q); else R.uj(q, function (u) {
                                if (u.Fj) a(q); else u.success === false && u.msg != null ? Ext.MessageBox.show({
                                    title: "Error", msg: u.msg,
                                    buttons: Ext.MessageBox.OK, icon: Ext.MessageBox.ERROR
                                }) : b(q, u.data)
                            })
                        }
                    })
                }
            }, {
                text: "Convert...",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/convert.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/convert.png",
                iconAlign: "left",
                rowspan: 2,
                cls: "x-btn-as-arrow",
                disabled: pui.xd == true,
                handler: function () {
                    pui.designer.Rs = 0;
                    pui.ide.K.Bx()
                }
            }, {
                id: "_Ribbon_Home_save",
                text: "Save",
                scale: "small",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/save.png" : "/profoundui/proddata/images/FlatIcons/16x16/save.png",
                iconAlign: "left",
                disabled: pui.xd == true,
                handler: function () {
                    var q = Ext.getCmp("centerPanel").getActiveTab();
                    if (q.fileTab) pui.ide.jf(q, false, pui.ide.Rl); else if (q.Xa) pui.alert("You must switch to Design View to save changes."); else if (rd.validate()) pui.designer.currentDisplay.member == null && pui.designer.currentDisplay.ifsFile == null && pui.designer.currentDisplay.Eb == null ? pui.ide.K.Mi() : R.Zq({
                        onsuccess: function () {
                            rd.Ce();
                            pui.ide.Qb();
                            pui.ide.refreshRibbon();
                            pui.designer.Bl();
                            pui.ide.Rl()
                        }
                    })
                }
            }, {
                id: "_Ribbon_Home_saveAs",
                text: "Save As...",
                scale: "small",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/save-as.png" : "/profoundui/proddata/images/FlatIcons/16x16/save-as.png",
                iconAlign: "left",
                disabled: pui.xd == true,
                handler: function () {
                    var q = Ext.getCmp("centerPanel").getActiveTab();
                    if (q.fileTab) pui.ide.jf(q, true, pui.ide.Rl); else rd.validate() && pui.ide.K.Mi()
                }
            }]
        }, {
            xtype: "buttongroup", columns: 3, title: "Build/Run", items: [{
                id: "_Ribbon_Home_compile",
                text: "Compile...",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/compile.png" :
                    "/profoundui/proddata/images/dspfdesigner/icons24x24/compile.png",
                rowspan: 2,
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                disabled: pui.xd == true,
                handler: function () {
                    if (rd.validate()) if (pui.designer.currentDisplay.member == null) {
                        S.alert("The display must be saved as a source member before compiling.");
                        pui.designer.currentDisplay.ifsFile == null && pui.designer.currentDisplay.Eb == null && pui.ide.K.Mi(function () {
                            pui.ide.K.zx()
                        })
                    } else pui.ide.K.zx()
                }
            }, {
                text: "Launch",
                scale: "medium",
                rowspan: 2,
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/launch.png" :
                    "/profoundui/proddata/images/dspfdesigner/icons24x24/launch.png",
                iconAlign: "left",
                arrowAlign: "bottom",
                disabled: pui.xd == true,
                menu: [{
                    text: "Launch Session",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/launch-session.png" : "/profoundui/proddata/images/FlatIcons/16x16/launch_session.png",
                    handler: function () {
                        var q = location.href;
                        q = q.split("?")[0];
                        q = q.split("/");
                        q[q.length - 1] = "start";
                        if (rd) {
                            var s = rd.$g();
                            if (s.width != null && s.height != null) q[q.length - 1] += "?canvasSize=" + s.width + "x" + s.height
                        }
                        q =
                            q.join("/");
                        window.open(q)
                    }
                }, {
                    text: "Launch Anonymous Program...",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/launch-anonymous.png" : "/profoundui/proddata/images/FlatIcons/16x16/launch_anonymous.png",
                    handler: function () {
                        pui.ide.K.IH()
                    }
                }, {
                    id: "_Ribbon_Home_launchPreview",
                    text: "Launch Screen Preview...",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/launch-preview.png" : "/profoundui/proddata/images/FlatIcons/16x16/preview.png",
                    handler: function () {
                        rd.validate() && pui.ide.K.nl()
                    }
                },
                    "-", {
                        text: "Maintain Initial Programs...",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/maintain-initial.png" : "/profoundui/proddata/images/FlatIcons/16x16/maintain_programs.png",
                        handler: function () {
                            pui.ide.K.iH()
                        }
                    }, {
                        text: "Maintain Anonymous Programs...",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/maintain-anonymous.png" : "/profoundui/proddata/images/FlatIcons/16x16/maintain_anonymous.png",
                        handler: function (q, s) {
                            var t = s.browserEvent, u = s.getXY(), w = u[0], v = u[1];
                            v -= 100;
                            if (v < 0) v = 0;
                            screenMask.msg = "Loading List of Anonymous Programs...";
                            screenMask.show();
                            jc({
                                url: cc("PUI0001105.pgm"),
                                method: "post",
                                params: {mode: "load"},
                                async: true,
                                handler: function (E) {
                                    screenMask.hide();
                                    if (pui.le == null) pui.le = new pui.designer.kk;
                                    pui.le.Lh = true;
                                    pui.le.tk = false;
                                    pui.le.vk = false;
                                    pui.le.uppercase = true;
                                    pui.le.uB("uppercase");
                                    pui.le.lr(21);
                                    var y = [];
                                    if (E != null) {
                                        y = E.programs;
                                        if (y == null) y = []
                                    }
                                    pui.le.Hl(y);
                                    pui.le.db("Maintain Anonymous Programs");
                                    pui.le.UJ("Specify library/program:");
                                    pui.le.Gu = function (F) {
                                        var D =
                                            F.split("/");
                                        if (D.length == 2) {
                                            F = D[0];
                                            D = D[1];
                                            Kd.set("prog", D);
                                            Kd.set("proglib", F);
                                            Kd.save();
                                            var B = location.href;
                                            B = B.split("/");
                                            B[B.length - 1] = "start?pgm=" + F + "/" + D;
                                            B = B.join("/");
                                            window.open(B)
                                        }
                                    };
                                    pui.le.Nj = function (F) {
                                        var D = S.bw(F);
                                        if (D != "") {
                                            pui.alert("Program " + D);
                                            return false
                                        }
                                        return F
                                    };
                                    pui.le.pa = function (F) {
                                        screenMask.msg = "Saving List of Anonymous Programs...";
                                        screenMask.show();
                                        for (var D = {mode: "save"}, B = 0; B < F.length; B++) {
                                            var I = F[B].split("/");
                                            if (I.length == 1) D["pgm" + (B + 1)] = I[0];
                                            if (I.length == 2) {
                                                D["lib" +
                                                (B + 1)] = I[0];
                                                D["pgm" + (B + 1)] = I[1]
                                            }
                                        }
                                        jc({
                                            url: cc("PUI0001105.pgm"),
                                            method: "post",
                                            params: D,
                                            async: true,
                                            handler: function (z, H) {
                                                screenMask.hide();
                                                var J = "";
                                                if (z == null) {
                                                    J = "Server response is invalid.";
                                                    if (H != null) J += " " + H.description + "."
                                                } else if (!z.success) J = z.msg;
                                                J != "" && S.alert(J)
                                            }
                                        })
                                    };
                                    pui.le.show(t, w, v)
                                }
                            })
                        }
                    }, MOBILE_LICENSE ? "-" : "", {
                        text: "Configure Profound UI Mobile...",
                        hidden: !MOBILE_LICENSE,
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/configure-pui-mobile.png" : "/profoundui/proddata/images/FlatIcons/16x16/maintain_mobile.png",
                        handler: function () {
                            pui.ide.K.WH()
                        }
                    }]
            }, {
                text: "Library List...",
                scale: "small",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/library-list.png" : "/profoundui/proddata/images/FlatIcons/16x16/folder_process.png",
                iconAlign: "left",
                disabled: pui.xd == true,
                handler: function (q, s) {
                    var t = s.browserEvent, u = s.getXY(), w = u[0], v = u[1];
                    v -= 100;
                    if (v < 0) v = 0;
                    screenMask.msg = "Loading Library List...";
                    screenMask.show();
                    jc({
                        url: cc("PUI0001104.pgm"),
                        method: "post",
                        params: {mode: "load"},
                        async: true,
                        handler: function (E) {
                            screenMask.hide();
                            if (pui.Be == null) pui.Be = new pui.designer.kk;
                            pui.Be.Lh = true;
                            pui.Be.tk = false;
                            pui.Be.vk = false;
                            pui.Be.uppercase = true;
                            pui.Be.uB("uppercase");
                            pui.Be.lr(10);
                            var y = "";
                            if (E != null) {
                                y = E.libl;
                                if (y == null) y = ""
                            }
                            E = [];
                            if (y != "") E = y.split(" ");
                            pui.Be.Hl(E);
                            pui.Be.db("Library List");
                            pui.Be.Nj = function (F) {
                                var D = S.wa(F, "library");
                                if (D != "") {
                                    pui.alert("Library name " + D);
                                    return false
                                }
                                return F
                            };
                            pui.Be.pa = function (F) {
                                for (var D = "", B = 0; B < F.length; B++) {
                                    if (B != 0) D += " ";
                                    D += F[B]
                                }
                                screenMask.msg = "Saving Library List...";
                                screenMask.show();
                                jc({
                                    url: cc("PUI0001104.pgm"),
                                    method: "post",
                                    params: {mode: "save", libl: D},
                                    async: true,
                                    handler: function (I, z) {
                                        screenMask.hide();
                                        var H = "";
                                        if (I == null) {
                                            H = "Server response is invalid.";
                                            if (z != null) H += " " + z.description + "."
                                        } else if (!I.success) H = I.msg;
                                        H != "" && S.alert(H);
                                        S.ak()
                                    }
                                })
                            };
                            pui.Be.show(t, w, v)
                        }
                    })
                }
            }, {
                id: "_Ribbon_Home_fileKeywords",
                text: "File Keywords...",
                scale: "small",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/file-keywords.png" : "/profoundui/proddata/images/FlatIcons/16x16/page_process.png",
                iconAlign: "left",
                handler: function (q, s) {
                    if (pui.pf == null) pui.pf = new pui.designer.kk;
                    pui.pf.Lh = true;
                    pui.pf.tk = false;
                    pui.pf.vk = false;
                    if (pui.ka == null) pui.ka = [];
                    pui.pf.Hl(pui.ka);
                    pui.pf.db("File Keywords");
                    pui.pf.pa = function (w) {
                        pui.ka = w;
                        S.ak();
                        if (!pui.ja) Ext.getCmp("centerPanel").getActiveTab().ka = pui.ka
                    };
                    pui.pf.Nj = function (w) {
                        var v = pui.designer.C.Aq(w), E = v.Hb;
                        if (E.toUpperCase() != E) {
                            v = w.indexOf(E);
                            if (v >= 0) {
                                w = w.substr(0, v) + E.toUpperCase() + w.substr(v + E.length);
                                v = pui.designer.C.Aq(w);
                                E = v.Hb
                            } else {
                                pui.alert("Keyword name must be upper case.");
                                return false
                            }
                        }
                        E = S.wa(E);
                        if (E != "") {
                            pui.alert("Keyword name " + E);
                            return false
                        }
                        if (!/^\s*[^\s\(\)]*\s*(?:\([^']*\)|\(\s*'.*'\s*\))??\s*$/i.test(v.keyword)) {
                            pui.alert("Invalid keyword syntax.");
                            return false
                        }
                        return w
                    };
                    var t = s.getXY(), u = t[0];
                    t = t[1];
                    t -= 100;
                    if (t < 0) t = 0;
                    pui.pf.show(s.KE, u, t)
                }
            }]
        }, {
            xtype: "buttongroup", id: "_Ribbon_Home_Clipboard", columns: 4, title: "Clipboard", items: [{
                text: "Select All",
                scale: "medium",
                rowspan: 2,
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/select-all.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/select_all.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    var q = Ext.getCmp("centerPanel").getActiveTab();
                    if (q.fileTab) if (q.mc) q.editor.selectAll(); else {
                        var s = q.editor.getModifiedEditor ? q.editor.getModifiedEditor().getModel() : q.editor.getModel(),
                            t = s.getLineCount();
                        s = s.getLineMaxColumn(t);
                        q.editor.setSelection({endColumn: s, endLineNumber: t, startColumn: 1, startLineNumber: 1})
                    } else R.designer.selectAll()
                }
            }, {
                text: "&nbsp;Undo",
                id: "_Ribbon_Home_Undo",
                scale: "small",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/undo.png" :
                    "/profoundui/proddata/images/icons/undo.png",
                iconAlign: "left",
                handler: function () {
                    var q = Ext.getCmp("centerPanel").getActiveTab();
                    if (q.fileTab) {
                        q.mc ? q.editor.undo() : (q.editor.getModifiedEditor ? q.editor.getModifiedEditor().getModel() : q.editor.getModel()).undo();
                        pui.ide.refreshRibbon()
                    } else R.designer.n.n()
                }
            }, {
                text: "Cut",
                scale: "medium",
                id: "_Ribbon_Home_Cut",
                rowspan: 2,
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/cut.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/cut.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    R.designer.ga("cut")
                }
            }, {
                text: "Copy",
                scale: "small",
                id: "_Ribbon_Home_Copy",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/copy.png" : "/profoundui/proddata/images/FlatIcons/16x16/page_copy.png",
                iconAlign: "left",
                handler: function () {
                    R.designer.ga("copy")
                }
            }, {
                text: "&nbsp;Redo",
                scale: "small",
                id: "_Ribbon_Home_Redo",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/redo.png" : "/profoundui/proddata/images/icons/redo.png",
                iconAlign: "left",
                handler: function () {
                    var q =
                        Ext.getCmp("centerPanel").getActiveTab();
                    if (q.fileTab) {
                        q.ace ? q.editor.redo() : (q.editor.getModifiedEditor ? q.editor.getModifiedEditor().getModel() : q.editor.getModel()).redo();
                        pui.ide.refreshRibbon()
                    } else R.designer.n.Hq()
                }
            }, {
                text: "Paste",
                scale: "small",
                id: "_Ribbon_Home_Paste",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/paste.png" : "/profoundui/proddata/images/FlatIcons/16x16/paste.png",
                iconAlign: "left",
                handler: function () {
                    var q = R.Uc;
                    if (pui.nc()) {
                        var s = localStorage.getItem("pui-designer-clipboard");
                        if (s) q = JSON.parse(s)
                    }
                    R.designer.bi(q)
                }
            }]
        }, {
            hidden: pui.langs.length == 0 && (pui.viewdesigner || pui.nodedesigner) ? true : false,
            xtype: "buttongroup",
            columns: 2,
            title: "Settings",
            items: [{
                id: "_Ribbon_Home_alias",
                hidden: pui.viewdesigner || pui.nodedesigner ? true : false,
                text: "Alias Names",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/alias-names.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/alias_names.png",
                iconAlign: "left",
                arrowAlign: "bottom",
                menu: {
                    listeners: {
                        beforeshow: function (q) {
                            q.items.length !=
                            0 && q.removeAll();
                            q.add({
                                text: "Enable Long Field Names through Aliases",
                                group: "langGroup",
                                checked: pui.designer.Ea ? true : false
                            });
                            q.add({
                                text: "Disable Long Field Names",
                                group: "langGroup",
                                checked: !pui.designer.Ea ? true : false
                            })
                        }, click: function () {
                            pui.designer.Ea = !pui.designer.Ea;
                            R.designer.k.refresh();
                            pui.ide.zg()
                        }
                    }
                }
            }, {
                hidden: pui.langs.length == 0 ? true : false,
                disabled: !pui.nc(),
                text: "Language",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/language.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/globe.png",
                iconAlign: "left",
                arrowAlign: "bottom",
                menu: {
                    listeners: {
                        beforeshow: function (q) {
                            q.items.length != 0 && q.removeAll();
                            for (var s = 0; s < pui.langs.length; s++) {
                                var t = pui.langs[s];
                                q.add({text: t, group: "langGroup", checked: pui.ide.Am === t ? true : false})
                            }
                        }, click: function (q, s) {
                            pui.ide.Am = localStorage["pui-designer-lang"] = s.text
                        }
                    }
                }
            }]
        }, {
            xtype: "buttongroup",
            columns: 2,
            title: pui.nodedesigner ? pui.isCloud ? "IDE" : "Profound.js" : "Profound UI",
            items: [{
                text: "Close All",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/close_tabs.png" :
                    "/profoundui/proddata/images/dspfdesigner/icons24x24/exit2.gif",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    pui.ide.Qs()
                }
            }, {
                text: "&nbsp;Exit&nbsp;&nbsp;&nbsp;&nbsp;",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/exit.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/exit2.gif",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: pui.ide.wm
            }]
        }]
    };
    if (pui.viewdesigner || pui.nodedesigner) {
        var e = d.tbar, f, h;
        pui.isCloud && e[e.length - 1].items.pop();
        for (var g = 0; g <
        e.length; g++) {
            var l = e[g];
            if (l.title == "File Operations") f = l;
            if (l.title == "Build/Run") h = l
        }
        var n;
        for (g = 0; g < f.items.length; g++) {
            if (f.items[g].text === "New") n = f.items[g];
            if (f.items[g].text === "Convert...") {
                f.items.splice(g, 1);
                f.columns -= 1;
                break
            }
        }
        var o, i, r, k;
        for (g = 0; g < h.items.length; g++) {
            if (h.items[g].text == "Compile...") o = g;
            if (h.items[g].text == "Library List...") i = g;
            if (h.items[g].text == "File Keywords...") r = g;
            if (h.items[g].text == "Launch") {
                k = h.items[g];
                k = k.menu
            }
        }
        k.splice(0, 1);
        k.splice(2, 5);
        if (pui.nodedesigner) {
            k[0] =
                {
                    text: "Launch Profound.js Module...",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/launch-session.png",
                    handler: function () {
                        pui.ide.K.Gz()
                    }
                };
            h.items[r].rowspan = 2;
            h.items[r].icon = "/profoundui/proddata/images/dspfdesigner/icons24x24/page_process.png";
            h.items[r].scale = "medium";
            h.items[r].cls = "x-btn-as-arrow";
            h.items[r].text = "Keywords...";
            h.items.splice(i, 1);
            h.items.splice(o, 1);
            r -= 2;
            h.columns -= 2;
            h.title = "Launch / Global Keywords"
        } else {
            k[0] = {
                text: "Launch Controller...", icon: "/profoundui/proddata/images/FlatIcons/16x16/launch-session.png",
                handler: function () {
                    pui.ide.K.Gz()
                }
            };
            h.items.splice(r, 1);
            h.items[i].rowspan = 2;
            h.items[i].icon = "/profoundui/proddata/images/dspfdesigner/icons24x24/folder_process.png";
            h.items[i].scale = "medium";
            h.items.splice(o, 1);
            h.columns -= 2;
            h.title = "Run/Preview"
        }
    }
    if (pui.isCloud) {
        h.items[r] = {
            id: "_Ribbon_Home_server",
            text: "Server",
            scale: "medium",
            icon: "/profoundui/proddata/images/FlatIcons/24x24/server.png",
            arrowAlign: "bottom",
            iconAlign: "left",
            menu: [{
                text: "Install npm Packages...", icon: "/profoundui/proddata/images/FlatIcons/16x16/npm.png",
                handler: function (q, s) {
                    var t = pui.cloud.ws.id;
                    t || (t = "");
                    screenMask.msg = "Loading Packages";
                    screenMask.show();
                    jc({
                        url: "/cloud/get_packages",
                        method: "post",
                        params: {workspace_id: t},
                        async: true,
                        suppressAlert: true,
                        handler: function (u) {
                            screenMask.hide();
                            if (u.success) {
                                if (pui.Fe == null) pui.Fe = new pui.designer.kk;
                                pui.Fe.Lh = true;
                                pui.Fe.tk = false;
                                pui.Fe.vk = false;
                                pui.Fe.Hl(u.packages);
                                pui.Fe.db("Install npm Packages");
                                pui.Fe.pa = function (v) {
                                    screenMask.msg = "Installing Packages";
                                    screenMask.show();
                                    jc({
                                        url: "/cloud/save_packages",
                                        method: "post",
                                        params: {workspace_id: t, list: JSON.stringify(v)},
                                        async: true,
                                        suppressAlert: true,
                                        handler: function (E) {
                                            screenMask.hide();
                                            if (E.success) {
                                                E = [{
                                                    region: "center",
                                                    layout: "fit",
                                                    bodyStyle: "white-space: normal; padding: 10px 10px 10px 10px",
                                                    autoScroll: true,
                                                    html: E.output
                                                }];
                                                var y = pui.ide.$f.getWidth(), F = pui.ide.$f.getHeight();
                                                (new Ext.Window({
                                                    title: "npm Install Output",
                                                    width: 750,
                                                    height: 425,
                                                    minWidth: 400,
                                                    minHeight: 200,
                                                    layout: "fit",
                                                    modal: true,
                                                    maximized: y < 750 || F < 425 ? true : false,
                                                    constrain: true,
                                                    listeners: {
                                                        show: ra(),
                                                        beforeclose: ra(), render: function (D) {
                                                            new Ext.KeyMap(D.getEl(), {
                                                                key: Ext.EventObject.ENTER,
                                                                handler: ra(),
                                                                stopEvent: true
                                                            }, "keypress")
                                                        }
                                                    },
                                                    buttons: [],
                                                    items: [E]
                                                })).show()
                                            } else Ext.MessageBox.show({
                                                title: "npm Packages Install Error",
                                                icon: Ext.MessageBox.ERROR,
                                                buttons: Ext.MessageBox.OK,
                                                msg: E.message
                                            })
                                        },
                                        onfail: function () {
                                            pui.alert("An unexpected error ocurred. Check your connection and try again.");
                                            screenMask.hide()
                                        }
                                    })
                                };
                                pui.Fe.Nj = ja();
                                var w = s.getXY();
                                u = w[0];
                                w = w[1];
                                w -= 100;
                                if (w < 0) w = 0;
                                pui.Fe.show(s.KE, u, w)
                            } else Ext.MessageBox.show({
                                title: "npm Packages",
                                icon: Ext.MessageBox.INFO, buttons: Ext.MessageBox.OK, msg: u.message
                            })
                        },
                        onfail: function () {
                            pui.alert("An unexpected error ocurred. Check your connection and try again.");
                            screenMask.hide()
                        }
                    })
                }
            }, {
                id: "_Ribbon_Home_restartServer",
                text: "Restart App Server",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/redo.png",
                handler: function () {
                    var q = pui.cloud.ws.id;
                    q || (q = "");
                    screenMask.msg = "Restarting App Server";
                    screenMask.show();
                    jc({
                        url: "/cloud/restart_app_server",
                        method: "post",
                        params: {workspace_id: q},
                        async: true,
                        suppressAlert: true,
                        handler: function (s) {
                            screenMask.hide();
                            s = s.success ? "The app server is now stopped. <br/> It will automatically restart when the app is launched." : "App server could not be restarted.<br/><br/>Error details:</br/>" + JSON.stringify(s.error);
                            Ext.MessageBox.show({
                                title: "Restart Server",
                                icon: Ext.MessageBox.INFO,
                                buttons: Ext.MessageBox.OK,
                                msg: s
                            })
                        },
                        onfail: function () {
                            pui.alert("An unexpected error ocurred. Check your connection and try again.");
                            screenMask.hide()
                        }
                    })
                }
            }, {
                id: "_Ribbon_Home_startTerminal", text: "Start Terminal",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/terminal.png", handler: function () {
                    var q = Ext.getCmp("southPanel");
                    q.collapsed && q.expand();
                    q = Ext.getCmp("_south_tabpanel");
                    q.collapsed && q.expand();
                    q.setActiveTab(1);
                    Ext.getCmp("_south_panel_start_terminal").handler()
                }
            }, {
                id: "_Ribbon_Home_viewLogs",
                text: "View Server Logs...",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/logs.png",
                handler: function () {
                    function q(t) {
                        screenMask.msg = "Retrieving Logs";
                        screenMask.show();
                        jc({
                            url: "/cloud/get_logs", method: "post",
                            params: {workspace_id: s}, async: true, suppressAlert: true, handler: function (u) {
                                screenMask.hide();
                                if (u.success) {
                                    u = u.logs;
                                    if (u === "") u = "Logs are empty."
                                } else u = "Logs could not be retrieved.<br/><br/>Error details:</br/>" + JSON.stringify(u.error);
                                t(u)
                            }, onfail: function () {
                                screenMask.hide();
                                t("An unexpected error ocurred. Check your connection and try again.")
                            }
                        })
                    }

                    var s = pui.cloud.ws.id;
                    s || (s = "");
                    q(function (t) {
                        t = [{
                            id: "_Ribbon_Home_viewLogs_content",
                            region: "center",
                            layout: "fit",
                            bodyStyle: "white-space: normal; padding: 10px 10px 10px 10px",
                            autoScroll: true,
                            html: t
                        }];
                        var u = pui.ide.$f.getWidth(), w = pui.ide.$f.getHeight();
                        (new Ext.Window({
                            title: "Server Logs (last 150 lines)",
                            width: 750,
                            height: 425,
                            minWidth: 400,
                            minHeight: 200,
                            layout: "fit",
                            maximizable: true,
                            maximized: u < 750 || w < 425 ? true : false,
                            constrain: true,
                            tbar: new Ext.Toolbar({
                                items: [{
                                    text: "Refresh",
                                    icon: "/profoundui/proddata/images/FlatIcons/16x16/refresh.png",
                                    cls: "x-btn-text-icon",
                                    handler: function () {
                                        q(function (v) {
                                            Ext.getCmp("_Ribbon_Home_viewLogs_content").update(v)
                                        })
                                    }
                                }]
                            }),
                            listeners: {
                                show: ra(),
                                beforeclose: ra(), render: function (v) {
                                    new Ext.KeyMap(v.getEl(), {
                                        key: Ext.EventObject.ENTER,
                                        handler: ra(),
                                        stopEvent: true
                                    }, "keypress")
                                }
                            },
                            buttons: [],
                            items: [t]
                        })).show()
                    })
                }
            }, {
                id: "_Ribbon_Home_viewActiveSessions",
                text: "View Active Sessions...",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/activesessions.png",
                handler: function () {
                    pui.cloud.jL()
                }
            }, {
                id: "_Ribbon_Home_Debug",
                text: "Start Debug...",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/debug.png",
                handler: function () {
                    pui.cloud.zL()
                }
            }]
        };
        h.columns += 2;
        h.items.push({
            id: "_Ribbon_Home_contributors",
            text: "Contributors",
            scale: "medium",
            icon: "/profoundui/proddata/images/FlatIcons/24x24/community.png",
            arrowAlign: "bottom",
            iconAlign: "left",
            menu: new Ext.menu.Menu({
                items: [], listeners: {
                    beforeshow: function (q) {
                        q.items.length != 0 && q.removeAll();
                        if (pui.cloud.ws.owner) q.addItem({
                            icon: "/profoundui/proddata/images/FlatIcons/16x16/owner.png",
                            text: "Owner: " + pui.cloud.ws.ownerDisplayName + " (<b>@" + pui.cloud.ws.owner + "</b>)",
                            data: {
                                Ju: true,
                                Vs: false,
                                profile: pui.cloud.ws.owner,
                                display_name: pui.cloud.ws.ownerDisplayName
                            },
                            handler: function () {
                                pui.cloud.Ws(this.data)
                            }
                        }); else pui.cloud.user ? q.addItem({
                            icon: "/profoundui/proddata/images/FlatIcons/16x16/contributor.png",
                            text: pui.cloud.userDisplayName + " (<b>@" + pui.cloud.user + "</b>)",
                            data: {
                                Ju: false,
                                Vs: false,
                                profile: pui.cloud.user,
                                display_name: pui.cloud.userDisplayName
                            },
                            handler: function () {
                                pui.cloud.Ws(this.data)
                            }
                        }) : q.addItem({
                            icon: "/profoundui/proddata/images/FlatIcons/16x16/contributor.png",
                            text: "You (anonymous)",
                            data: {
                                gM: true,
                                Ju: false,
                                Vs: false,
                                display_name: '<b>You</b> (<a href="javascript:void(0);" id="_cloud_contributor_signin_link">Sign in</a> to save your work)'
                            },
                            handler: function () {
                                pui.cloud.Ws(this.data)
                            }
                        });
                        var s = false;
                        if (pui.cloud.ws.contributors) for (var t = 0; t < pui.cloud.ws.contributors.length; t++) {
                            var u = pui.cloud.ws.contributors[t];
                            if (u.profile === pui.cloud.user) s = true;
                            q.addItem({
                                Ju: false,
                                Vs: true,
                                icon: "/profoundui/proddata/images/FlatIcons/16x16/contributor.png",
                                text: u.display_name + " (<b>@" + u.profile + "</b>)",
                                data: u,
                                handler: function () {
                                    pui.cloud.Ws(this.data)
                                }
                            })
                        }
                        if (pui.cloud.ws.owner === pui.cloud.user) {
                            q.addItem("-");
                            q.addItem({
                                icon: "/profoundui/proddata/images/FlatIcons/16x16/collaborate.png",
                                text: "Invite Others...", handler: function () {
                                    pui.cloud.WL()
                                }
                            })
                        } else if (pui.cloud.ws.owner && !s) {
                            q.addItem("-");
                            q.addItem({
                                icon: "/profoundui/proddata/images/FlatIcons/16x16/collaborate.png",
                                text: "Request to Contribute...",
                                handler: function () {
                                    pui.cloud.oM()
                                }
                            })
                        }
                    }
                }
            })
        });
        n.menu[0].text = "IDE";
        n.menu.splice(1, 0, {
            text: "Workspace",
            icon: "/profoundui/proddata/images/FlatIcons/16x16/workspace.png",
            handler: function () {
                location.href = "/ide/"
            }
        });
        f.items.splice(1, 1);
        f.items.splice(2, 0, {
            id: "_Ribbon_Home_publish",
            text: "Publish...",
            scale: "medium",
            icon: "/profoundui/proddata/images/FlatIcons/24x24/publish.png",
            rowspan: 2,
            iconAlign: "left",
            cls: "x-btn-as-arrow",
            disabled: pui.xd == true,
            handler: function () {
                pui.cloud.save(function () {
                    pui.cloud.htmlDialogType = "publish";
                    pui.cloud.fz()
                })
            }
        }, {
            id: "_Ribbon_Home_fork",
            text: "Fork...",
            scale: "medium",
            icon: "/profoundui/proddata/images/FlatIcons/24x24/fork.png",
            rowspan: 2,
            iconAlign: "left",
            cls: "x-btn-as-arrow",
            disabled: pui.xd == true,
            handler: function () {
                pui.cloud.htmlDialogType = "fork";
                pui.cloud.fz()
            }
        });
        f.columns +=
            1;
        g = {
            id: "_Ribbon_Home_launchThisApp",
            text: "Launch App in Browser Tab",
            icon: "/profoundui/proddata/images/FlatIcons/16x16/launch-externally.png",
            handler: function () {
                pui.cloud.AH(function () {
                    var q = document.location.pathname;
                    if (q.substr(0, 5) === "/ide/") q = q.substr(4);
                    window.open(location.protocol + "//" + location.hostname + (location.port ? ":" : "") + location.port + "/run" + q)
                })
            }
        };
        k[0] = {
            id: "_Ribbon_Home_launchInIDE",
            text: "Launch App in IDE",
            icon: "/profoundui/proddata/images/FlatIcons/24x24/launch.png",
            handler: function () {
                pui.cloud.AH(function () {
                    var q =
                        Ext.getCmp("southPanel");
                    q.collapsed && q.expand();
                    q = Ext.getCmp("_south_tabpanel");
                    q.collapsed && q.expand();
                    q.setActiveTab(2);
                    Ext.getCmp("_south_panel_run").handler("no questions")
                })
            }
        };
        k.splice(1, 0, g);
        f.title = "Files";
        h.title = "Your App"
    }
    return d
};
pui.ide.xC = function () {
    var b = {
        id: "_Ribon_EditMenu", title: "Edit", layout: "fit", iconCls: pui.flatlook ? "editFlat" : "edit", tbar: [{
            xtype: "buttongroup", columns: 4, title: "Clipboard", id: "_Ribbon_Edit_Clipboard", items: [{
                text: "Select All",
                scale: "medium",
                rowspan: 2,
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/select-all.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/select_all.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    var a = Ext.getCmp("centerPanel").getActiveTab();
                    if (a.Xa || a.fileTab) if (a.mc) a.editor.selectAll(); else {
                        var c = a.editor.getModifiedEditor ? a.editor.getModifiedEditor().getModel() : a.editor.getModel(),
                            d = c.getLineCount();
                        c = c.getLineMaxColumn(d);
                        a.editor.setSelection({endColumn: c, endLineNumber: d, startColumn: 1, startLineNumber: 1})
                    } else R.designer.selectAll()
                }
            }, {
                text: "&nbsp;Undo",
                scale: "small",
                id: "_Ribbon_Edit_Undo",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/undo.png" : "/profoundui/proddata/images/icons/undo.png",
                iconAlign: "left",
                handler: function () {
                    var a =
                        Ext.getCmp("centerPanel").getActiveTab();
                    if (a.Xa || a.fileTab) {
                        a.mc ? a.editor.undo() : (a.editor.getModifiedEditor ? a.editor.getModifiedEditor().getModel() : a.editor.getModel()).undo();
                        pui.ide.refreshRibbon()
                    } else R.designer.n.n()
                }
            }, {
                text: "Cut",
                scale: "medium",
                id: "_Ribbon_Edit_Cut",
                rowspan: 2,
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/cut.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/cut.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    var a = Ext.getCmp("centerPanel").getActiveTab();
                    a.Xa || a.fileTab ? a.editor.yL() : R.designer.ga("cut")
                }
            }, {
                text: "Copy",
                scale: "small",
                id: "_Ribbon_Edit_Copy",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/copy.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/page_copy.png",
                iconAlign: "left",
                handler: function () {
                    var a = Ext.getCmp("centerPanel").getActiveTab();
                    a.Xa || a.fileTab ? a.editor.copy() : R.designer.ga("copy")
                }
            }, {
                text: "&nbsp;Redo",
                scale: "small",
                id: "_Ribbon_Edit_Redo",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/redo.png" :
                    "/profoundui/proddata/images/icons/redo.png",
                iconAlign: "left",
                handler: function () {
                    var a = Ext.getCmp("centerPanel").getActiveTab();
                    if (a.Xa || a.fileTab) {
                        a.mc ? a.editor.redo() : (a.editor.getModifiedEditor ? a.editor.getModifiedEditor().getModel() : a.editor.getModel()).redo();
                        pui.ide.refreshRibbon()
                    } else R.designer.n.Hq()
                }
            }, {
                text: "Paste",
                scale: "small",
                id: "_Ribbon_Edit_Paste",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/paste.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/paste.png",
                iconAlign: "left",
                handler: function () {
                    var a = Ext.getCmp("centerPanel").getActiveTab();
                    if (a.Xa || a.fileTab) a.editor.nA(); else {
                        a = R.Uc;
                        if (pui.nc()) {
                            var c = localStorage.getItem("pui-designer-clipboard");
                            if (c) a = JSON.parse(c)
                        }
                        R.designer.bi(a)
                    }
                }
            }]
        }, {
            id: "_Ribbon_Edit_SwitchView", xtype: "buttongroup", columns: 1, title: "View", items: [{
                id: "_Ribbon_Edit_Design",
                text: "&nbsp;Design&nbsp;",
                scale: "small",
                iconAlign: "left",
                handler: function () {
                    function a() {
                        Ext.getCmp("east").show();
                        R.designer.b.parentNode.parentNode.style.overflow =
                            "auto";
                        c.rj.style.display = "none";
                        c.Xa = false;
                        pui.ide.refreshRibbon();
                        pui.ide.Qb();
                        R.designer.active = true;
                        R.designer.b.style.display = "";
                        R.designer.k.refresh();
                        pui.ide.$f.doLayout();
                        c.$n != null && c.$n.width != null && c.$n.height != null && rd.Uf(c.$n.width, c.$n.height)
                    }

                    var c = Ext.getCmp("centerPanel").getActiveTab();
                    if (c.ou) {
                        var d = Ext.getCmp(c.ou);
                        delete c.ou;
                        d && Ext.getCmp("widgetsPanel").setActiveTab(d)
                    }
                    c.ot ? R.open({
                        zr: true, $e: c.editor.getValue(), onsuccess: function () {
                            a();
                            c.isDirty ? rd.qb() : rd.Ce()
                        }
                    }) : a()
                }
            }, {
                id: "_Ribbon_Edit_Source",
                text: "&nbsp;Source&nbsp;", scale: "small", iconAlign: "left", handler: function () {
                    var a = Ext.getCmp("centerPanel").getActiveTab(), c = Ext.getCmp("widgetsPanel");
                    if (c && c.activeTab) a.ou = c.activeTab.id;
                    a.pt = false;
                    a.$n = rd.$g();
                    rd.Uf();
                    var d = R.designer.b;
                    c = d.parentNode.parentNode;
                    Ext.getCmp("east").hide();
                    pui.ide.$f.doLayout();
                    if (a.rj == null) {
                        var e = document.createElement("div");
                        a.rj = e;
                        e.style.position = "absolute";
                        e.style.left = "0px";
                        e.style.top = "0px";
                        c.style.overflow = "hidden";
                        d.parentNode.appendChild(e);
                        if (pui.useAceEditor ||
                            pui.is_ie || pui.ie_mode <= 11 || !window.monaco) a.mc = true;
                        if (a.mc) {
                            var f = ace.edit(e);
                            f.setTheme("ace/theme/eclipse");
                            f.getSession().setMode("ace/mode/json");
                            f.setShowPrintMargin(false);
                            f.setDisplayIndentGuides(false);
                            f.session.setTabSize(2);
                            gc(e.firstChild, "keyup", function () {
                                pui.ide.refreshRibbon()
                            });
                            f.on("change", function () {
                                if (a.pt) {
                                    a.isDirty = true;
                                    rd.qb();
                                    pui.ide.Qb();
                                    a.ot = true;
                                    pui.ide.refreshRibbon()
                                }
                            })
                        } else {
                            f = monaco.editor.create(e, {
                                value: null,
                                language: "json",
                                fixedOverflowWidgets: true,
                                disableMonospaceOptimizations: navigator.platform.toUpperCase().indexOf("MAC") >=
                                    0
                            });
                            f.onDidChangeModelContent(function () {
                                if (a.pt) {
                                    var h = f.getModel();
                                    h = a.pg !== h.getValue();
                                    a.isDirty = h ? h : a.Xa ? rd.isDirty() : false;
                                    pui.ide.Qb();
                                    a.ot = true;
                                    pui.ide.refreshRibbon()
                                }
                            })
                        }
                        a.editor = f
                    }
                    d = S.si();
                    e = pui.designer.currentDisplay.text;
                    if (e == null) e = "";
                    d = rd.Qm(e, d);
                    a.rj.style.width = c.offsetWidth - 2 + "px";
                    a.rj.style.height = c.offsetHeight - 2 + "px";
                    a.rj.style.display = "";
                    if (a.mc) {
                        a.editor.resize();
                        a.editor.clearSelection()
                    } else a.editor.layout();
                    a.isDirty = rd.isDirty();
                    a.editor.setValue(d);
                    a.pg = d;
                    a.mc || a.editor.getModel().updateOptions({tabSize: 2});
                    a.Xa = true;
                    pui.ide.refreshRibbon();
                    pui.ide.Qb();
                    R.designer.active = false;
                    R.designer.selection.clear();
                    R.designer.b.style.display = "none";
                    a.ot = false;
                    a.pt = true;
                    setTimeout(function () {
                        a.mc && a.editor.session.getUndoManager().reset();
                        a.editor.focus()
                    }, 0)
                }
            }]
        }, {
            id: "_Ribbon_Edit_Formatting", xtype: "buttongroup", columns: 1, title: "Formatting", items: [{
                xtype: "combo",
                id: "_Ribbon_Edit_Font",
                width: 279,
                editable: false,
                displayField: "font",
                valueField: "font",
                mode: "local",
                triggerAction: "all",
                emptyText: "Select Font...",
                valueNotFoundText: "Select Font...",
                selectOnFocus: true,
                tpl: new Ext.XTemplate('<tpl for="."><div class="font-item" style="font-family: {font}; font-size: 14px;">', "<span>{font}</span>", "</div></tpl>"),
                itemSelector: "div.font-item",
                store: new Ext.data.ArrayStore({
                    fields: ["font"],
                    data: [["Arial"], ["Arial Black"], ["Arial Narrow"], ["Comic Sans MS"], ["Consolas"], ["Courier New"], ["Garamond"], ["Georgia"], ["Monospace"], ["Tahoma"], ["Times New Roman"], ["Sans-Serif"], ["Serif"], ["Trebuchet MS"], ["Verdana"]]
                }),
                listeners: {
                    select: function (a, c) {
                        if (R.designer.tf("font family")) if (confirm("The font family property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") ===
                            false) return;
                        R.designer.ga("set font", null, c.data.font)
                    }
                }
            }, {
                xtype: "buttongroup", baseCls: "", columns: 14, items: [{
                    scale: "small",
                    id: "_Ribbon_Edit_FontUp",
                    iconAlign: "left",
                    tooltip: "Increase Font",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/font-up.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/increase-font.png",
                    handler: function () {
                        if (R.designer.tf("font size")) if (confirm("The font size property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") ===
                            false) return;
                        R.designer.ga("grow font")
                    }
                }, {
                    scale: "small",
                    id: "_Ribbon_Edit_FontDown",
                    iconAlign: "left",
                    tooltip: "Decrease Font",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/font-down.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/decrease-font.png",
                    handler: function () {
                        if (R.designer.tf("font size")) if (confirm("The font size property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") === false) return;
                        R.designer.ga("shrink font")
                    }
                },
                    {
                        scale: "small",
                        id: "_Ribbon_Edit_Bold",
                        tooltip: "Bold",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/bold.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/edit-bold.png",
                        iconAlign: "left",
                        handler: function () {
                            if (R.designer.tf("font weight")) if (confirm("The font weight property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") === false) return;
                            R.designer.ga("bold")
                        }
                    }, {
                        scale: "small",
                        id: "_Ribbon_Edit_Italic",
                        tooltip: "Italic",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/italic.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/edit-italic.png",
                        iconAlign: "left",
                        handler: function () {
                            if (R.designer.tf("font style")) if (confirm("The font style property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") === false) return;
                            R.designer.ga("italicize")
                        }
                    }, {
                        scale: "small",
                        id: "_Ribbon_Edit_Underline",
                        tooltip: "Underline",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/underline.png" :
                            "/profoundui/proddata/images/dspfdesigner/icons16x16/edit-underline.png",
                        iconAlign: "left",
                        handler: function () {
                            if (R.designer.tf("text decoration")) if (confirm("The text decoration property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") === false) return;
                            R.designer.ga("underline")
                        }
                    }, {xtype: "tbseparator"}, {
                        scale: "small",
                        id: "_Ribbon_Edit_AlignLeft",
                        tooltip: "Align Text Left",
                        icon: "/profoundui/proddata/images/dspfdesigner/icons16x16/align-left.png",
                        iconAlign: "left",
                        handler: function () {
                            if (R.designer.tf("text align")) if (confirm("The text align property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") === false) return;
                            R.designer.ga("align left")
                        }
                    }, {
                        scale: "small",
                        id: "_Ribbon_Edit_AlignCenter",
                        tooltip: "Center",
                        icon: "/profoundui/proddata/images/dspfdesigner/icons16x16/align-center.png",
                        iconAlign: "left",
                        handler: function () {
                            if (R.designer.tf("text align")) if (confirm("The text align property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") ===
                                false) return;
                            R.designer.ga("center")
                        }
                    }, {
                        scale: "small",
                        id: "_Ribbon_Edit_AlignRight",
                        tooltip: "Right",
                        icon: "/profoundui/proddata/images/dspfdesigner/icons16x16/align-right.png",
                        iconAlign: "left",
                        handler: function () {
                            if (R.designer.tf("text align")) if (confirm("The text align property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") === false) return;
                            R.designer.ga("align right")
                        }
                    }, {xtype: "tbseparator"}, {
                        scale: "small",
                        id: "_Ribbon_Edit_Clear",
                        iconAlign: "left",
                        tooltip: "Clear Formatting",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/clear-form.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/clear-formatting.png",
                        handler: function () {
                            R.designer.ga("clear set font", null, "none");
                            R.designer.ga("clear grow font");
                            R.designer.ga("clear bold");
                            R.designer.ga("clear italicize");
                            R.designer.ga("clear underline");
                            R.designer.ga("clear align left");
                            R.designer.ga("clear set color", null, "none")
                        }
                    }, {
                        scale: "small",
                        id: "_Ribbon_Edit_Color",
                        iconCls: "file-options",
                        iconAlign: "left",
                        tooltip: "Font Color",
                        icon: "/profoundui/proddata/images/dspfdesigner/icons16x16/color.png",
                        handler: function (a, c) {
                            if (R.designer.tf("color")) if (confirm("The color property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") === false) return;
                            var d = c.browserEvent, e = R.designer.k.Ad;
                            e.yn = function (f) {
                                R.designer.ga("set color", null, f)
                            };
                            e.lo("");
                            e.show(d)
                        }
                    }, {
                        scale: "small",
                        id: "_Ribbon_Edit_CopyFormatting",
                        iconCls: "file-options",
                        iconAlign: "left",
                        tooltip: "Copy Formatting",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/copy.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/page_copy.png",
                        handler: function () {
                            R.ym = {};
                            for (var a = R.designer.selection.e[0].c, c = oc(), d = 0; d < c.length; d++) {
                                var e = c[d];
                                if (e.Bc == true) {
                                    e = e.name;
                                    if (a.m[e] == true) {
                                        var f = a.properties[e];
                                        if (!pui.f(f) && !pui.Ia(f)) R.ym[e] = f
                                    } else R.ym[e] = {remove: true}
                                }
                            }
                            pui.ide.refreshRibbon()
                        }
                    }, {
                        scale: "small",
                        id: "_Ribbon_Edit_PasteFormatting",
                        iconCls: "file-options",
                        iconAlign: "left",
                        tooltip: "Paste Formatting",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/paste.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/paste.png",
                        handler: function () {
                            R.designer.n.start("Paste Formatting");
                            for (var a in R.ym) {
                                var c = R.ym[a];
                                if (typeof c == "object") {
                                    if (c.remove == true) {
                                        R.designer.ga("paste formatting", null, {N: a, value: ""});
                                        c = {};
                                        c.property = a;
                                        for (var d = R.designer.selection.e, e = 0; e < d.length; e++) {
                                            var f = d[e].c;
                                            c.c = f;
                                            var h = f.properties[a];
                                            if (pui.f(h)) {
                                                c.fieldName = h.fieldName;
                                                f.designer.D.vh(c)
                                            }
                                        }
                                    }
                                } else R.designer.ga("paste formatting", null, {N: a, value: c})
                            }
                        }
                    }]
            }]
        }, {
            id: "_Ribbon_Edit_SwitchTheme",
            xtype: "buttongroup",
            columns: 1,
            title: "Theme",
            items: [{
                id: "_Ribbon_Edit_LightTheme",
                text: "&nbsp;Light&nbsp;",
                scale: "small",
                iconAlign: "left",
                handler: function () {
                    pui.Ns("light");
                    pui.ide.refreshRibbon()
                }
            }, {
                id: "_Ribbon_Edit_DarkTheme",
                text: "&nbsp;Dark&nbsp;",
                scale: "small",
                iconAlign: "left",
                handler: function () {
                    pui.Ns("dark");
                    pui.ide.refreshRibbon()
                }
            }]
        }, {
            xtype: "buttongroup",
            columns: 1,
            title: pui.nodedesigner ?
                "Profound.js" : "Profound UI",
            items: [{
                text: "&nbsp;Exit&nbsp;&nbsp;&nbsp;&nbsp;",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/exit.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/exit2.gif",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: pui.ide.wm
            }]
        }]
    };
    pui.isCloud && b.tbar.pop();
    return b
};
pui.ide.uC = function () {
    var b = {
        id: "_Ribon_DesignMenu",
        title: "Design",
        layout: "fit",
        iconCls: pui.flatlook ? "designFlat" : "design-icon",
        tbar: [{
            xtype: "buttongroup", columns: 4, title: "Canvas", items: [{
                text: "Canvas Size",
                hidden: !MOBILE_LICENSE,
                rowspan: 2,
                scale: "medium",
                iconCls: "add16",
                iconAlign: "left",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/canvas-size.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/canvas_size.png",
                arrowAlign: "bottom",
                listeners: {
                    menushow: function (a, c) {
                        c.items.length !=
                        0 && c.removeAll();
                        for (var d = rd.$g(), e = false, f = 0; f < pui.ide.canvasSizes.length; f++) {
                            var h = pui.ide.canvasSizes[f], g = false;
                            if (h.width == d.width && h.height == d.height) e = g = true; else if (!e && h.width == d.height && h.height == d.width) g = true;
                            c.addItem({
                                text: h.description,
                                group: "SizeCanvas",
                                checked: g,
                                size: h,
                                handler: function () {
                                    rd.Uf(this.size.width, this.size.height)
                                }
                            })
                        }
                        c.addItem({
                            text: "Edit Sizes...", group: "SizeCanvas", checked: false, handler: function () {
                                pui.ide.K.KF()
                            }
                        })
                    }
                },
                menu: new Ext.menu.Menu({
                    listeners: {click: ra()},
                    items: []
                })
            }, {
                text: "Rotate",
                hidden: !MOBILE_LICENSE,
                scale: "medium",
                id: "_Ribbon_Design_Rotate",
                rowspan: 2,
                iconCls: "rotate",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/rotate.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/rotate_canvas.png",
                handler: function () {
                    rd.lJ()
                }
            }, {
                text: "Snap To Grid",
                rowspan: 2,
                scale: "medium",
                iconCls: "add16",
                iconAlign: "left",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/snap-to-grid.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/snap_to_grid.png",
                arrowAlign: "bottom",
                listeners: {
                    menushow: function (a, c) {
                        var d = Kd.get("snapToGrid", 5);
                        d = parseInt(d);
                        var e = c.items.items;
                        if (d == 5) e[1].setChecked(true); else if (d == 10) e[2].setChecked(true); else if (d == 15) e[3].setChecked(true); else d == 20 ? e[4].setChecked(true) : e[0].setChecked(true)
                    }
                },
                menu: new Ext.menu.Menu({
                    listeners: {
                        click: function (a, c) {
                            if (c.text != "None") {
                                var d = parseInt(c.text.split(" x ")[0]);
                                Kd.set("snapToGrid", d)
                            } else Kd.set("snapToGrid", 0);
                            Kd.save()
                        }
                    }, items: [{
                        text: "None", group: "SnapToGrid", checked: false,
                        handler: function () {
                            R.designer.Ri(0, 0)
                        }
                    }, {
                        text: "5 x 5", group: "SnapToGrid", checked: false, handler: function () {
                            R.designer.Ri(5, 5)
                        }
                    }, {
                        text: "10 x 10", group: "SnapToGrid", checked: false, handler: function () {
                            R.designer.Ri(10, 10)
                        }
                    }, {
                        text: "15 x 15", group: "SnapToGrid", checked: false, handler: function () {
                            R.designer.Ri(15, 15)
                        }
                    }, {
                        text: "20 x 20", group: "SnapToGrid", checked: false, handler: function () {
                            R.designer.Ri(20, 20)
                        }
                    }]
                })
            }, {
                text: "Show Grid",
                rowspan: 2,
                scale: "medium",
                iconCls: "add16",
                iconAlign: "left",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/show-grid.png" :
                    "/profoundui/proddata/images/dspfdesigner/icons24x24/show_grid.png",
                arrowAlign: "bottom",
                listeners: {
                    menushow: function (a, c) {
                        var d = Kd.get("showGrid", 20);
                        d = parseInt(d);
                        var e = c.items.items;
                        if (d == 10) e[1].setChecked(true); else if (d == 20) e[2].setChecked(true); else if (d == 30) e[3].setChecked(true); else if (d == 40) e[4].setChecked(true); else d == 50 ? e[5].setChecked(true) : e[0].setChecked(true)
                    }
                },
                menu: new Ext.menu.Menu({
                    listeners: {
                        click: function (a, c) {
                            if (c.text != "None") {
                                var d = parseInt(c.text.split(" x ")[0]);
                                Kd.set("showGrid",
                                    d)
                            } else Kd.set("showGrid", 0);
                            Kd.save()
                        }
                    }, items: [{
                        text: "None", group: "ShowGrid", checked: false, handler: function () {
                            R.designer.Hh(0, 0)
                        }
                    }, {
                        text: "10 x 10", group: "ShowGrid", checked: false, handler: function () {
                            R.designer.Hh(10, 10)
                        }
                    }, {
                        text: "20 x 20", group: "ShowGrid", checked: true, handler: function () {
                            R.designer.Hh(20, 20)
                        }
                    }, {
                        text: "30 x 30", group: "ShowGrid", checked: false, handler: function () {
                            R.designer.Hh(30, 30)
                        }
                    }, {
                        text: "40 x 40", group: "ShowGrid", checked: false, handler: function () {
                            R.designer.Hh(40, 40)
                        }
                    }, {
                        text: "50 x 50",
                        group: "ShowGrid", checked: false, handler: function () {
                            R.designer.Hh(50, 50)
                        }
                    }]
                })
            }]
        }, {
            xtype: "buttongroup",
            columns: 9,
            title: "Elements",
            items: [{
                text: "Remove",
                scale: "small",
                id: "_Ribbon_Design_Remove",
                iconAlign: "left",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/remove-2.png" : "/profoundui/proddata/images/icons/remove.png",
                handler: function () {
                    R.designer.n.Nc("Remove " + R.designer.selection.ve());
                    R.designer.yf()
                }
            }, {
                text: "Duplicate",
                scale: "small",
                id: "_Ribbon_Design_Duplicate",
                icon: pui.flatlook ?
                    "/profoundui/proddata/images/FlatIcons/16x16/duplicate.png" : "/profoundui/proddata/images/icons/duplicate.png",
                iconAlign: "left",
                handler: function () {
                    R.designer.bi();
                    R.designer.Ff()
                }
            }, {
                text: "Show",
                scale: "small",
                id: "_Ribbon_Design_Show",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/show.png" : "/profoundui/proddata/images/icons/show.png",
                iconAlign: "left",
                handler: function () {
                    if (R.designer.tf("visibility")) if (confirm("The visibility property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") ===
                        false) return;
                    R.designer.ga("show")
                }
            }, {
                text: "Lock",
                scale: "small",
                id: "_Ribbon_Design_Lock",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/lock.png" : "/profoundui/proddata/images/icons/lock.png",
                iconAlign: "left",
                handler: function () {
                    R.designer.ga("lock in place")
                }
            }, {
                text: "Bring to Front",
                id: "_Ribbon_Design_BringToFront",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/bring-front.png" : "/profoundui/proddata/images/icons/bring_to_front.png",
                iconAlign: "left",
                scale: "small",
                handler: function () {
                    R.designer.ga("bring to front")
                }
            },
                {
                    text: "Size",
                    scale: "small",
                    id: "_Ribbon_Design_Size",
                    iconCls: "add16",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/size.png" : "/profoundui/proddata/images/icons/make_same_width.png",
                    arrowAlign: "right",
                    menu: [{
                        text: "Make Same Size",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/make-same-size.png" : "/profoundui/proddata/images/icons/make_same_size.png",
                        handler: function () {
                            R.designer.ga("make same width");
                            R.designer.ga("make same height")
                        }
                    }, {
                        text: "Make Same Width",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/size.png" : "/profoundui/proddata/images/icons/make_same_width.png",
                        handler: function () {
                            R.designer.ga("make same width")
                        }
                    }, {
                        text: "Make Same Height",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/make-same-height.png" : "/profoundui/proddata/images/icons/make_same_height.png",
                        handler: function () {
                            R.designer.ga("make same height")
                        }
                    }]
                }, {
                    text: "% Width",
                    scale: "small",
                    id: "_Ribbon_Design_PercentWidth",
                    iconCls: "add16",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/width.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/percent_width.png",
                    arrowAlign: "right",
                    listeners: {
                        menushow: function (a, c) {
                            function d(f) {
                                c.addItem({
                                    text: f + "%",
                                    group: "PercentWidth",
                                    pct: f,
                                    checked: R.designer.Sk("width") == f,
                                    handler: function () {
                                        R.designer.Jl("width", f)
                                    }
                                })
                            }

                            c.items.length != 0 && c.removeAll();
                            for (var e = 100; e > 0; e -= 10) {
                                e == 90 && d(95);
                                e == 70 && d(75);
                                d(e)
                            }
                        }
                    },
                    menu: new Ext.menu.Menu({listeners: {click: ra()}, items: []})
                }, {
                    text: "% Left",
                    scale: "small",
                    id: "_Ribbon_Design_PercentLeft",
                    iconCls: "add16",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/left.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/percent_left.png",
                    arrowAlign: "right",
                    listeners: {
                        menushow: function (a, c) {
                            function d(f) {
                                c.addItem({
                                    text: f + "%",
                                    group: "PercentLeft",
                                    pct: f,
                                    checked: R.designer.Sk("left") == f,
                                    handler: function () {
                                        R.designer.Jl("left", f)
                                    }
                                })
                            }

                            c.items.length != 0 && c.removeAll();
                            for (var e = 0; e < 100; e += 10) {
                                e == 10 && d(2);
                                e == 10 && d(5);
                                e ==
                                20 && d(15);
                                e == 30 && d(25);
                                d(e)
                            }
                        }
                    },
                    menu: new Ext.menu.Menu({listeners: {click: ra()}, items: []})
                }, {
                    text: "% Right",
                    scale: "small",
                    id: "_Ribbon_Design_PercentRight",
                    iconCls: "add16",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/right.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/percent_right.png",
                    arrowAlign: "right",
                    listeners: {
                        menushow: function (a, c) {
                            function d(f) {
                                c.addItem({
                                    text: f + "%",
                                    group: "PercentRight",
                                    pct: f,
                                    checked: R.designer.Sk("right") == f,
                                    handler: function () {
                                        R.designer.Jl("right",
                                            f)
                                    }
                                })
                            }

                            c.items.length != 0 && c.removeAll();
                            for (var e = 0; e < 100; e += 10) {
                                e == 10 && d(2);
                                e == 10 && d(5);
                                e == 20 && d(15);
                                e == 30 && d(25);
                                d(e)
                            }
                        }
                    },
                    menu: new Ext.menu.Menu({listeners: {click: ra()}, items: []})
                }, {
                    text: "Anchor",
                    id: "_Ribbon_Design_Anchor",
                    iconCls: "add16",
                    arrowAlign: "right",
                    scale: "small",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/anchor.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/anchor.png",
                    menu: [{
                        text: "Left",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/left.png" :
                            "/profoundui/proddata/images/dspfdesigner/icons16x16/anchor_left.png",
                        handler: function () {
                            R.designer.anchor("left")
                        }
                    }, {
                        text: "Right",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/right.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/anchor_right.png",
                        handler: function () {
                            R.designer.anchor("right")
                        }
                    }, {
                        text: "Top",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/top.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/anchor_top.png",
                        handler: function () {
                            R.designer.anchor("top")
                        }
                    },
                        {
                            text: "Bottom",
                            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/bottom.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/anchor_bottom.png",
                            handler: function () {
                                R.designer.anchor("bottom")
                            }
                        }]
                }, {
                    text: "Change To",
                    id: "_Ribbon_Design_ChangeTo",
                    iconCls: "add16",
                    arrowAlign: "right",
                    scale: "small",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/change-to.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/changeto.png",
                    menu: [{
                        text: "Button", icon: "/profoundui/proddata/images/icons/button.png",
                        handler: function () {
                            R.designer.ga("change to button")
                        }
                    }, {
                        text: "Hyperlink",
                        icon: "/profoundui/proddata/images/icons/hyperlink.png",
                        handler: function () {
                            R.designer.ga("change to hyperlink")
                        }
                    }, {
                        text: "Output Field",
                        icon: "/profoundui/proddata/images/icons/output_field.png",
                        handler: function () {
                            R.designer.ga("change to output field")
                        }
                    }, {
                        text: "Textbox", icon: "/profoundui/proddata/images/icons/textbox.png", handler: function () {
                            R.designer.ga("change to textbox")
                        }
                    }, {
                        text: "Spinner", icon: "/profoundui/proddata/images/icons/spinner.png",
                        handler: function () {
                            R.designer.ga("change to spinner")
                        }
                    }, {
                        text: "Checkbox", icon: "/profoundui/proddata/images/icons/checkbox.png", handler: function () {
                            R.designer.ga("change to checkbox")
                        }
                    }, {
                        text: "Dropdown",
                        icon: "/profoundui/proddata/images/icons/dropdown_box.png",
                        handler: function () {
                            R.designer.ga("change to dropdown")
                        }
                    }, {
                        text: "Text Area",
                        icon: "/profoundui/proddata/images/icons/text_area.png",
                        handler: function () {
                            R.designer.ga("change to text area")
                        }
                    }]
                }, {
                    text: "Hide",
                    scale: "small",
                    id: "_Ribbon_Design_Hide",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/hide.png" : "/profoundui/proddata/images/icons/hide.png",
                    iconAlign: "left",
                    handler: function () {
                        if (R.designer.tf("visibility")) if (confirm("The visibility property of one or more of the selected widgets has been bound to a field. If you continue, the field will be un-bound.") === false) return;
                        R.designer.ga("hide")
                    }
                }, {
                    text: "Unlock",
                    scale: "small",
                    id: "_Ribbon_Design_Unlock",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/unlock.png" :
                        "/profoundui/proddata/images/icons/unlock.png",
                    iconAlign: "left",
                    handler: function () {
                        R.designer.ga("unlock")
                    }
                }, {
                    text: "Send to Back",
                    id: "_Ribbon_Design_SendToBack",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/send-back.png" : "/profoundui/proddata/images/icons/send_to_back.png",
                    iconAlign: "left",
                    scale: "small",
                    handler: function () {
                        R.designer.ga("send to back")
                    }
                }, {
                    text: "Align",
                    scale: "small",
                    id: "_Ribbon_Design_Align",
                    iconCls: "add16",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/align.png" :
                        "/profoundui/proddata/images/icons/align_lefts.png",
                    arrowAlign: "right",
                    menu: [{
                        text: "Lefts",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/align.png" : "/profoundui/proddata/images/icons/align_lefts.png",
                        handler: function () {
                            R.designer.ga("align lefts")
                        }
                    }, {
                        text: "Rights",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/rights.png" : "/profoundui/proddata/images/icons/align_rights.png",
                        handler: function () {
                            R.designer.ga("align rights")
                        }
                    }, {
                        text: "Tops", icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/tops.png" :
                            "/profoundui/proddata/images/icons/align_tops.png", handler: function () {
                            R.designer.ga("align tops")
                        }
                    }, {
                        text: "Bottoms",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/bottoms.png" : "/profoundui/proddata/images/icons/align_bottoms.png",
                        handler: function () {
                            R.designer.ga("align bottoms")
                        }
                    }, {
                        text: "Equal Space Horizontally",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/equal-horizontal.png" : "/profoundui/proddata/images/icons/equal_space_h.png",
                        handler: function () {
                            R.designer.ga("equal space horizontally")
                        }
                    },
                        {
                            text: "Equal Space Vertically",
                            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/equal-vertical.png" : "/profoundui/proddata/images/icons/equal_space_v.png",
                            handler: function () {
                                R.designer.ga("equal space vertically")
                            }
                        }, {
                            text: "Center Horizontally",
                            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/center-horizontally.png" : "/profoundui/proddata/images/icons/center_horizontally.png",
                            handler: function () {
                                R.designer.ga("center horizontally")
                            }
                        }, {
                            text: "Center Vertically",
                            icon: pui.flatlook ?
                                "/profoundui/proddata/images/FlatIcons/16x16/center-vertically.png" : "/profoundui/proddata/images/icons/center_vertically.png",
                            handler: function () {
                                R.designer.ga("center vertically")
                            }
                        }]
                }, {
                    text: "% Height",
                    scale: "small",
                    id: "_Ribbon_Design_PercentHeight",
                    iconCls: "add16",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/height.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/percent_height.png",
                    arrowAlign: "right",
                    listeners: {
                        menushow: function (a, c) {
                            function d(f) {
                                c.addItem({
                                    text: f +
                                        "%",
                                    group: "PercentHeight",
                                    pct: f,
                                    checked: R.designer.Sk("height") == f,
                                    handler: function () {
                                        R.designer.Jl("height", f)
                                    }
                                })
                            }

                            c.items.length != 0 && c.removeAll();
                            for (var e = 100; e > 0; e -= 10) {
                                e == 90 && d(95);
                                e == 70 && d(75);
                                d(e)
                            }
                        }
                    },
                    menu: new Ext.menu.Menu({listeners: {click: ra()}, items: []})
                }, {
                    text: "% Top",
                    scale: "small",
                    id: "_Ribbon_Design_PercentTop",
                    iconCls: "add16",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/top.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/percent_top.png",
                    arrowAlign: "right",
                    listeners: {
                        menushow: function (a, c) {
                            function d(f) {
                                c.addItem({
                                    text: f + "%",
                                    group: "PercentTop",
                                    pct: f,
                                    checked: R.designer.Sk("top") == f,
                                    handler: function () {
                                        R.designer.Jl("top", f)
                                    }
                                })
                            }

                            c.items.length != 0 && c.removeAll();
                            for (var e = 0; e < 100; e += 10) {
                                e == 10 && d(2);
                                e == 10 && d(5);
                                e == 20 && d(15);
                                e == 30 && d(25);
                                d(e)
                            }
                        }
                    },
                    menu: new Ext.menu.Menu({listeners: {click: ra()}, items: []})
                }, {
                    text: "% Bottom",
                    scale: "small",
                    id: "_Ribbon_Design_PercentBottom",
                    iconCls: "add16",
                    iconAlign: "left",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/bottom.png" :
                        "/profoundui/proddata/images/dspfdesigner/icons16x16/percent_bottom.png",
                    arrowAlign: "right",
                    listeners: {
                        menushow: function (a, c) {
                            function d(f) {
                                c.addItem({
                                    text: f + "%",
                                    group: "PercentBottom",
                                    pct: f,
                                    checked: R.designer.Sk("bottom") == f,
                                    handler: function () {
                                        R.designer.Jl("bottom", f)
                                    }
                                })
                            }

                            c.items.length != 0 && c.removeAll();
                            for (var e = 0; e < 100; e += 10) {
                                e == 10 && d(2);
                                e == 10 && d(5);
                                e == 20 && d(15);
                                e == 30 && d(25);
                                d(e)
                            }
                        }
                    },
                    menu: new Ext.menu.Menu({listeners: {click: ra()}, items: []})
                }]
        }, {
            xtype: "buttongroup",
            columns: 1,
            title: pui.nodedesigner ?
                "Profound.js" : "Profound UI",
            items: [{
                text: "&nbsp;Exit&nbsp;&nbsp;&nbsp;&nbsp;",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/exit.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/exit2.gif",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: pui.ide.wm
            }]
        }]
    };
    pui.isCloud && b.tbar.pop();
    return b
};
pui.ide.canvasSizes = [{
    description: "Desktop (Auto Expand)",
    height: null,
    width: null
}, {description: "iPhone (320 x 480)", width: 320, height: 480}, {
    description: "iPad (768 x 1024)",
    width: 768,
    height: 1024
}, {description: "Android Phone (360 x 640)", width: 360, height: 640}, {
    description: "Android Phone (480 x 800)",
    width: 480,
    height: 800
}, {description: "Android Tablet (600 x 1024)", width: 600, height: 1024}, {
    description: "Android Tablet (800 x 1280)",
    width: 800,
    height: 1280
}];
pui.ide.GC = function () {
    var b = {
        id: "_Ribon_HelpMenu", title: "Help", layout: "fit", iconCls: pui.flatlook ? "helpFlat" : "help", tbar: [{
            xtype: "buttongroup",
            columns: 5,
            title: "Help Resources",
            items: [{
                text: "Documentation",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/documentation.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/documentation.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    window.open("http://www.profoundlogic.com/docs")
                }
            }, {
                text: "Video Demos",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/video-demos.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/video.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    pui.isCloud ? window.open("https://www.youtube.com/channel/UCfJn1Z9A5ccuHIF4fyg_zbA") : window.open("https://www.youtube.com/user/ProfoundLogicTV")
                }
            }, {
                text: "Getting Started",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/launch.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/documentation.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    if (pui.isCloud) window.open("https://noderun.com/about-noderun"); else pui.nodedesigner ? window.open("http://www.profoundlogic.com/docs/display/PUI/Getting+Started+with+Profound.js") : window.open("http://www.profoundlogic.com/docs/display/PUI/Getting+Started")
                }
            }, {
                text: "Community Support",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/community.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/community.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    if (pui.isCloud) pui.cloud.user ? window.open("https://discuss.noderun.com/login") : window.open("https://discuss.noderun.com"); else pui.nodedesigner ? window.open("https://www.profoundlogic.com/forum/viewforum.php?f=59") : window.open("https://www.profoundlogic.com/forum/viewforum.php?f=53")
                }
            }, {
                text: "Technical Support",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/technical.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/techsupport.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    if (pui.isCloud) window.open("https://www.profoundlogic.com/contact?type=support&product=noderun"); else pui.nodedesigner ? window.open("https://www.profoundlogic.com/contact?type=support&product=profoundjs") : window.open("https://www.profoundlogic.com/contact?type=support&product=profoundui")
                }
            }]
        }, {
            xtype: "buttongroup",
            columns: 3,
            title: pui.isCloud ? "NodeRun" : pui.nodedesigner ? "Profound.js" : "Profound UI",
            items: [{
                text: "About",
                scale: "medium",
                icon: pui.flatlook ?
                    "/profoundui/proddata/images/FlatIcons/24x24/about.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/about.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    var c = (new Date).getFullYear(), d = "";
                    if (pui.isCloud) {
                        d = "<img alt='NodeRun' title='NodeRun' src='/community/img/noderun-logo.png' /><br/>";
                        d += "NodeRun is built using these frameworks: <br/>";
                        d += "&nbsp;&nbsp; - Profound.js Version " + pui.pjsVersion + "<br/>";
                        d += "&nbsp;&nbsp; - Profound UI Version " + pui.baseVersion + ", Fix Pack " +
                            pui.fixPackVersion + "<br/><br/>"
                    } else if (pui.nodedesigner) {
                        d = "<table><tbody><tr>";
                        d += "<td style='width:200px;display: table-cell;'><img alt='Profound.js' title='Profound.js' src='/profoundui/proddata/images/profoundjs-logo.png' style='width:100%;'></td>";
                        d += "<td style='width:200px;display: table-cell;'><img alt='Profound UI' title='Profound UI' src='/profoundui/proddata/images/profoundui-logo.png' style='width:100%;'></td>";
                        d += "</tr><tr>";
                        d += "<td><div style='text-align: center;'>Version " + pui.pjsVersion +
                            "</div></td>";
                        d += "<td><div style='text-align: center;'>Version " + pui.baseVersion + ", Fix Pack " + pui.fixPackVersion + "</div></td>";
                        d += "</tr></tbody></table><br>"
                    } else {
                        d = "<img alt='Profound UI' title='Profound UI' src='/profoundui/proddata/images/profoundui-logo.png' /><br /><br />";
                        d += "<p>Version " + pui.baseVersion + ", Fix Pack " + pui.fixPackVersion + "</p><br />"
                    }
                    d += "<p>Copyright &copy " + (pui.isCloud ? "" : "1999-") + c + " Profound Logic Software, Inc.</p><br />";
                    d += "<p>Warning: This computer program is protected by copyright law ";
                    d += "and international treaties. Unauthorized reproduction or ";
                    d += "distribution of this program, or any portion of it, may result in ";
                    d += "severe civil and criminal penalties, and will be prosecuted to the ";
                    d += "maximum extent possible under the law.</p><br />";
                    d += "<p>Patented. &nbsp;U.S. Patent No. 8,667,405 B2.</p>";
                    var e = new Ext.Window({
                        title: pui.isCloud ? "About NodeRun IDE" : pui.nodedesigner ? "About Profound.js and Profound UI" : "About Profound UI",
                        width: pui.flatlook ? 420 : 350,
                        height: pui.flatlook ? 440 :
                            380,
                        resizable: false,
                        html: d,
                        modal: true,
                        bodyStyle: {
                            "padding-top": "15px",
                            "padding-bottom": "15px",
                            "padding-left": "10px",
                            "padding-right": "10px",
                            "white-space": "normal"
                        },
                        buttonAlign: "center",
                        buttons: [{
                            text: "OK", handler: function () {
                                e.close()
                            }
                        }]
                    });
                    e.show()
                }
            }, {
                text: "Contact Us",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/contact-us.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/help.png",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: function () {
                    if (pui.isCloud) window.open("https://www.profoundlogic.com/contact?product=noderun");
                    else pui.nodedesigner ? window.open("https://www.profoundlogic.com/contact?product=profoundjs") : window.open("https://www.profoundlogic.com/contact")
                }
            }, {
                text: "&nbsp;Exit",
                scale: "medium",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/24x24/exit.png" : "/profoundui/proddata/images/dspfdesigner/icons24x24/exit2.gif",
                iconAlign: "left",
                cls: "x-btn-as-arrow",
                handler: pui.ide.wm
            }]
        }]
    };
    if (pui.isCloud) {
        var a = b.tbar;
        a[a.length - 1].items.pop()
    }
    return b
};
pui.ide.jq = function () {
    pui.skipConfirm = true;
    document.body.style.backgroundColor = "#ffffff";
    document.body.innerHTML = '<div style="width: 100%; text-align: center; font-size: 200%;"><br/>You have exited the ' + (pui.nodedesigner ? "Profound.js IDE" : "Profound UI Visual Designer") + ".<br/><br/>To complete the log off process, you must close the browser window.</div>";
    pui.tu = true;
    window.close()
};
pui.ide.wm = function () {
    pui.ide.Qs(true)
};
pui.ide.isDirty = function () {
    var b = false;
    Ext.getCmp("centerPanel").items.each(function (a) {
        if (!a.Xa && !a.fileTab && a.vd.isDirty()) b = true; else if (a.isDirty) b = a.isDirty
    });
    return b
};
pui.ide.Qs = function (b) {
    var a;
    if (pui.xd == true) a = false; else if (pui.ja) a = rd.isDirty(); else {
        a = false;
        var c = Ext.getCmp("centerPanel");
        if (c.items.getCount() > 0) {
            a = c.items.itemAt(c.items.getCount() - 1);
            c.setActiveTab(a);
            b ? a.fireEvent("beforeclose", a, pui.ide.wm, true) : a.fireEvent("beforeclose", a, pui.ide.Qs, true);
            return
        } else c.setActiveTab(c.add(pui.ide.Bd()))
    }
    if (a) {
        c = "this display file";
        if (pui.designer.currentDisplay.library != null && pui.designer.currentDisplay.file != null && pui.designer.currentDisplay.member != null) c =
            pui.designer.currentDisplay.library + "/" + pui.designer.currentDisplay.member;
        if (pui.designer.currentDisplay.ifsFile != null) c = pui.designer.currentDisplay.ifsFile;
        if (pui.isCloud) {
            a = pui.cloud.ws.SERVER_DIR;
            if (c.substr(0, a.length).toUpperCase() === a.toUpperCase()) c = "Workspace Files" + c.substr(a.length)
        }
        Ext.MessageBox.show({
            title: "Save Changes?",
            msg: "Do you want to save changes to " + c + "?",
            model: true,
            icon: Ext.MessageBox.WARNING,
            buttons: {yes: "Save", no: "Don't Save", cancel: "Cancel"},
            fn: function (d) {
                if (d == "yes") {
                    if (!pui.ja) if (Ext.getCmp("centerPanel").getActiveTab().Xa) {
                        pui.alert("You must switch to Design View to save changes.");
                        return
                    }
                    if (rd.validate()) if (pui.designer.currentDisplay.member == null && pui.designer.currentDisplay.ifsFile == null && pui.designer.currentDisplay.Eb == null) b ? pui.ide.K.Mi(function () {
                        pui.ide.jq()
                    }) : pui.ide.K.Mi(); else R.Zq({
                        onsuccess: function () {
                            b && pui.ide.jq()
                        }
                    })
                } else d == "no" && b && pui.ide.jq()
            }
        })
    } else b && pui.ide.jq()
};
pui.ide.refreshRibbon = function (b) {
    function a() {
        h = R.designer;
        g = h.selection;
        l = g.e;
        q = h.n;
        n = l.length;
        if (n == 1) {
            s = l[0].c;
            if (s.properties["field type"] == "grid") o = true;
            t = s.properties["font family"]
        }
        i = n > 0;
        r = n > 0;
        k = n > 1
    }

    function c(v, E, y) {
        v = "_Ribbon_" + e + "_" + v;
        if (v = Ext.getCmp(v)) {
            if (v.id == "_Ribbon_Design_Align" && typeof E === "object") if (E.VG && !E.Zz && !E.rH) {
                v.setDisabled(false);
                v.menu.items.items.forEach(function (F) {
                    F.text != "Center Horizontally" && F.text != "Center Vertically" && F.setDisabled(true)
                })
            } else if (E.Zz) {
                v.setDisabled(false);
                v.menu.items.items.forEach(function (F) {
                    F.setDisabled(false)
                })
            } else v.setDisabled(true); else v.setDisabled(!E);
            y != null && v.setTooltip({text: y});
            y = v.getEl();
            pui.is_old_ie && !E && y != null && y.setOpacity(1)
        }
    }

    var d;
    d = b ? b : Ext.getCmp("_RibbonTabPanel").getActiveTab();
    var e = d.title, f = Ext.getCmp("centerPanel");
    b = f.getActiveTab();
    if (f.items.getCount() == 0) {
        Ext.getCmp("_RibbonTabPanel").hideTabStripItem("_Ribon_EditMenu");
        Ext.getCmp("_RibbonTabPanel").hideTabStripItem("_Ribon_DesignMenu");
        if (d == Ext.getCmp("_Ribon_HomeMenu")) {
            c("newRecord",
                false);
            c("save", false);
            c("saveAs", false);
            !pui.nodedesigner && !pui.viewdesigner && c("compile", false);
            !pui.viewdesigner && !pui.isCloud && c("fileKeywords", false);
            c("launchPreview", false);
            c("newRecord", false);
            c("alias", false);
            Ext.getCmp("_Ribbon_Home_Clipboard").hide()
        }
    } else {
        Ext.getCmp("_RibbonTabPanel").unhideTabStripItem("_Ribon_EditMenu");
        Ext.getCmp("_RibbonTabPanel").unhideTabStripItem("_Ribon_DesignMenu");
        if (d == Ext.getCmp("_Ribon_HomeMenu")) {
            c("newRecord", true);
            c("newTextFile", true);
            c("save", true);
            c("saveAs",
                true);
            !pui.nodedesigner && !pui.viewdesigner && c("compile", true);
            !pui.viewdesigner && !pui.isCloud && c("fileKeywords", true);
            c("launchPreview", true);
            c("newRecord", true);
            c("alias", true);
            Ext.getCmp("_Ribbon_Home_Clipboard").show()
        }
        if (b.Xa == null) b.Xa = false;
        var h, g, l, n, o = false, i = false, r = false, k = false, q, s, t;
        if (e == "Home" || e == "Edit") {
            b.fileTab || a();
            if (b.Xa || b.fileTab) {
                f = d = false;
                if (!b.readOnly) if (b.mc) {
                    d = b.editor.session.getUndoManager().hasUndo();
                    f = b.editor.session.getUndoManager().hasRedo()
                } else {
                    f = b.editor.getModifiedEditor ?
                        b.editor.getModifiedEditor().getModel() : b.editor.getModel();
                    d = f.canUndo();
                    f = f.canRedo()
                }
                c("Undo", d, "Undo");
                c("Redo", f, "Redo")
            } else {
                d = q.Vk();
                d = d == null ? "Can't Undo" : "Undo " + d;
                c("Undo", q.Zo(), d);
                d = q.My();
                d = d == null ? "Can't Redo" : "Redo " + d;
                c("Redo", h.n.Yo(), d)
            }
            d = R && R.Uc != null && R.Uc.length > 0;
            if (b.Xa || b.fileTab) d = i = false;
            c("Cut", i);
            c("Copy", i);
            c("Paste", d)
        }
        if (e == "Home") {
            d = !b.fileTab;
            !pui.nodedesigner && !pui.viewdesigner && c("compile", d);
            c("launchPreview", d);
            c("newRecord", d);
            !pui.viewdesigner && !pui.isCloud &&
            c("fileKeywords", d);
            c("alias", d);
            d = true;
            d = b.fileTab || b.Xa ? !b.readOnly && b.isDirty : b.vd.isDirty();
            if (pui.isCloud) if (pui.cloud.ws["new"]) {
                c("saveAs", true);
                Ext.getCmp("_Ribbon_Home_publish").setText("Publish...");
                c("publish", true);
                c("fork", false);
                c("restartServer", false);
                c("viewLogs", false);
                c("viewActiveSessions", false)
            } else {
                f = false;
                if (pui.cloud.ws.modify) f = true;
                pui.cloud.ws.owner || (f = true);
                if (pui.cloud.ws.owner === pui.cloud.user) f = true;
                var u = pui.cloud.ws.contributors;
                u || (u = []);
                for (var w = 0; w < u.length; w++) if (u[w].profile ===
                    pui.cloud.user) f = true;
                if (f) {
                    c("saveAs", true);
                    pui.cloud.ws.owner ? Ext.getCmp("_Ribbon_Home_publish").setText("Update...") : Ext.getCmp("_Ribbon_Home_publish").setText("Publish...");
                    c("publish", true)
                } else {
                    c("saveAs", false);
                    d = false;
                    Ext.getCmp("_Ribbon_Home_publish").setText("Update...");
                    c("publish", false)
                }
                c("fork", true);
                c("launchThisApp", true);
                c("restartServer", true);
                c("viewLogs", true);
                c("viewActiveSessions", true)
            }
            c("save", d);
            b.fileTab && b.readOnly && c("saveAs", false)
        }
        if (e == "Edit") {
            Ext.getCmp("_Ribbon_Edit_SwitchTheme").hide();
            if (b.fileTab) {
                Ext.getCmp("_Ribbon_Edit_Formatting").hide();
                Ext.getCmp("_Ribbon_Edit_SwitchView").hide()
            } else {
                Ext.getCmp("_Ribbon_Edit_SwitchView").show();
                b.Xa ? Ext.getCmp("_Ribbon_Edit_Formatting").hide() : Ext.getCmp("_Ribbon_Edit_Formatting").show();
                c("Font", r);
                t != null ? Ext.getCmp("_Ribbon_Edit_Font").setValue(t) : Ext.getCmp("_Ribbon_Edit_Font").setValue("");
                c("FontUp", r);
                c("FontDown", r);
                c("Bold", r);
                c("Italic", r);
                c("Underline", r);
                c("AlignLeft", r);
                c("AlignCenter", r);
                c("AlignRight", r);
                c("Clear", r);
                c("Color",
                    r);
                c("CopyFormatting", r && !k);
                c("PasteFormatting", r && R.ym != null);
                d = Ext.getCmp("_Ribbon_Edit_Design");
                c("Design", b.Xa);
                if (b.Xa) {
                    d.setText("&nbsp;Design&nbsp;");
                    d.removeClass("x-btn-pressed")
                } else {
                    d.setText("&nbsp;<span style='color:white;'>Design</span>&nbsp;");
                    d.addClass("x-btn-pressed")
                }
                d = Ext.getCmp("_Ribbon_Edit_Source");
                c("Source", !b.Xa);
                if (b.Xa) {
                    d.setText("&nbsp;<span style='color:white;'>Source</span>&nbsp;");
                    d.addClass("x-btn-pressed")
                } else {
                    d.setText("&nbsp;Source&nbsp;");
                    d.removeClass("x-btn-pressed")
                }
            }
            if (window.monaco &&
                (b.fileTab || b.Xa)) {
                Ext.getCmp("_Ribbon_Edit_SwitchTheme").show();
                d = Kd.get("theme", pui.isCloud ? "dark" : "light");
                c("LightTheme", d != "light");
                f = Ext.getCmp("_Ribbon_Edit_LightTheme");
                if (d != "light") {
                    f.setText("&nbsp;Light&nbsp;");
                    f.removeClass("x-btn-pressed")
                } else {
                    f.setText("&nbsp;<span style='color:white;'>Light</span>&nbsp;");
                    f.addClass("x-btn-pressed")
                }
                c("DarkTheme", d != "dark");
                f = Ext.getCmp("_Ribbon_Edit_DarkTheme");
                if (d != "dark") {
                    f.setText("&nbsp;Dark&nbsp;");
                    f.removeClass("x-btn-pressed")
                } else {
                    f.setText("&nbsp;<span style='color:white;'>Dark</span>&nbsp;");
                    f.addClass("x-btn-pressed")
                }
            }
        }
        if (e == "Design") {
            a();
            c("Size", k);
            c("Align", {VG: r, Zz: k, rH: o});
            c("Anchor", r && !o);
            c("PercentWidth", r && !o);
            c("PercentHeight", r && !o);
            c("PercentLeft", r && !o);
            c("PercentTop", r && !o);
            c("PercentRight", r && !o);
            c("PercentBottom", r && !o);
            c("Remove", r);
            c("Duplicate", r);
            c("ChangeTo", r && !o);
            c("Show", r);
            c("Hide", r);
            c("Lock", r);
            c("Unlock", r);
            c("BringToFront", r);
            c("SendToBack", r);
            c("Rotate", pui.designer.fa != null)
        }
        if (b.fileTab || b.Xa) {
            Ext.getCmp("_RibbonTabPanel").hideTabStripItem("_Ribon_DesignMenu");
            if (b = Ext.getCmp("widgetsPanel")) {
                b.hideTabStripItem("widgetSets");
                b.hideTabStripItem("treePanel");
                if ((d = b.activeTab) && (d.id == "widgetSets" || d.id == "treePanel")) b.setActiveTab(Ext.getCmp("fileTree"))
            }
        } else {
            Ext.getCmp("_RibbonTabPanel").unhideTabStripItem("_Ribon_DesignMenu");
            Ext.getCmp("widgetsPanel").unhideTabStripItem("widgetSets");
            Ext.getCmp("widgetsPanel").unhideTabStripItem("treePanel")
        }
    }
};
Ext.tree.TreeNodeUI.override({
    onDblClick: function (b) {
        b.preventDefault();
        if (!this.disabled) if (this.fireEvent("beforedblclick", this.node, b) !== false) {
            this.bp && this.toggleCheck();
            !this.mL && this.node.isExpandable();
            this.fireEvent("dblclick", this.node, b)
        }
    }
});
pui.ide.nF = function () {
    var b = [pui.ide.PE(), pui.ide.RD(), new Ext.TabPanel({
        id: "centerPanel",
        enableTabScroll: true,
        region: "center",
        listeners: {
            tabchange: pui.ide.oK, afterrender: function (a) {
                a.getEl().on("mousedown", function () {
                    var c = Ext.getCmp("southPanel");
                    c && c.dk && c.dk.blur()
                })
            }
        },
        plugins: new Ext.ux.panel.Xl
    }), pui.ide.mF()];
    if (pui.nodedesigner && !pui.isCloud) b.push(pui.ide.rF()); else pui.isCloud && b.push(pui.social.xL());
    return new Ext.Viewport({id: "UI-viewPort", layout: "border", items: b})
};
pui.ide.rF = function () {
    var b = Kd.get("terminalHeight");
    b = b != null ? parseInt(b, 10) : 150;
    var a = Kd.get("terminalCollapsed") == "1";
    b = new Ext.Panel({
        id: "southPanel",
        region: "south",
        height: b,
        resizable: true,
        split: true,
        collapseMode: "mini",
        collapsed: a,
        bodyStyle: {backgroundColor: "black"},
        listeners: {
            bodyresize: function (c, d, e) {
                if (!isNaN(e) && e > 0) {
                    Kd.set("terminalHeight", e);
                    Kd.save()
                }
                c.dk && c.dk.fit()
            }, expand: function () {
                Kd.set("terminalCollapsed", "0");
                Kd.save()
            }, collapse: function () {
                Kd.set("terminalCollapsed", "1");
                Kd.save()
            }
        }
    });
    a ? b.on("expand", pui.ide.Zw) : b.on("afterrender", pui.ide.Zw);
    return b
};
pui.ide.Zw = function (b) {
    b.dk || Ext.Ajax.request({
        url: "/terminal",
        method: "POST",
        params: {rows: "24", cols: "80", workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""},
        success: function (a) {
            var c = JSON.parse(a.responseText);
            if (c.success) {
                Terminal.applyAddon(attach);
                Terminal.applyAddon(fit);
                Terminal.applyAddon(webLinks);
                a = location.origin.replace(/http:\/\//i, "ws://").replace(/https:\/\//i, "wss://");
                a += "/terminal/" + c.id;
                a = new WebSocket(a);
                var d = new Terminal({cursorBlink: true, windowsMode: pui.OS === "Windows_NT"});
                b.update("");
                d.open(b.body.dom);
                d.webLinksInit();
                d.attach(a);
                d.on("resize", function (e) {
                    Ext.Ajax.request({
                        url: "/terminal/" + c.id + "/size",
                        method: "POST",
                        params: {rows: e.rows, cols: e.cols}
                    })
                });
                d.fit();
                d.focus();
                b.dk = d
            } else {
                b.body.update(c.error);
                b.body.setStyle("backgroundColor", "")
            }
        }
    })
};
pui.ide.mF = function () {
    return {
        id: "east",
        region: "east",
        layout: "border",
        header: false,
        collapsible: true,
        collapseMode: "mini",
        animCollapse: true,
        split: true,
        contentEl: "right",
        width: Kd.get("eastPanelWidth", "") == "" ? 290 : Kd.get("eastPanelWidth", ""),
        listeners: {
            bodyresize: function (b, a) {
                Kd.set("eastPanelWidth", a);
                Kd.save()
            }
        },
        items: [pui.ide.II(), pui.ide.pF()]
    }
};
pui.ide.Qb = function () {
    var b = Ext.getCmp("centerPanel").getActiveTab();
    if (b) {
        var a = "", c = "";
        if (pui.designer.currentDisplay.library != null && pui.designer.currentDisplay.file != null && pui.designer.currentDisplay.member != null) {
            c = pui.designer.currentDisplay.library + "/" + pui.designer.currentDisplay.file + " (" + pui.designer.currentDisplay.member + ")";
            a = pui.designer.currentDisplay.member + " - " + rd.ki()
        } else if (pui.designer.currentDisplay.ifsFile != null) {
            a = pui.designer.currentDisplay.ifsFile.substr(pui.designer.currentDisplay.ifsFile.lastIndexOf(pui.dirSeparator) +
                1) + " - " + rd.ki();
            c = pui.designer.currentDisplay.ifsFile
        } else c = a = pui.designer.currentDisplay.Eb != null ? pui.designer.currentDisplay.Eb + " - " + rd.ki() : rd.ki();
        var d = false;
        if (d = b.fileTab || b.Xa ? b.isDirty : rd.isDirty()) a += " *";
        b.setTitle(a);
        pui.ide.Ti(b, c)
    }
};
pui.ide.Bd = function (b) {
    var a = pui.ide.FF++;
    Ca = "dspfDesigner" + a + "_1";
    Ha = "dspfDesigner" + a + "_";
    return new Ext.Panel({
        nE: Ca,
        oE: Ha,
        autoScroll: true,
        html: '<div id="' + Ha + '" style="overflow: auto;"></div>',
        closable: true,
        listeners: {
            bodyresize: function () {
                pui.ide.ht()
            }, afterrender: function (c) {
                this.rp = new Ext.dd.DropTarget(this.body, {
                    ddGroup: "toolboxTree", notifyOver: function (d, e, f) {
                        return Ext.get(f.sourceEl).is("div.widget-sets-widget") && pui.ide.zf ? "x-dd-drop-nodrop" : "x-dd-drop-ok"
                    }, notifyDrop: function (d, e, f) {
                        if (Ext.get(f.sourceEl).is("div.widget-sets-widget") &&
                            pui.ide.zf) return false;
                        (d = Ext.getCmp("southPanel")) && d.dk && d.dk.blur();
                        d = e.getXY();
                        e = d[0];
                        d = d[1];
                        e -= R.designer.li();
                        d -= R.designer.yj();
                        f.node.attributes.x = e;
                        f.node.attributes.y = d;
                        R.addElement(f.node.attributes);
                        return true
                    }
                });
                pui.Zx(c, b);
                pui.ide.$f.doLayout()
            }, beforeclose: function (c, d, e) {
                function f() {
                    var l = Ext.getCmp("centerPanel");
                    if (l.items.getCount() == 1) if (e) pui.ide.Xd = true; else l.setActiveTab(l.add(pui.ide.Bd()));
                    l.remove(c, true);
                    typeof d == "function" && d()
                }

                if (c.vd.isDirty()) {
                    var h = "this display file";
                    if (c.currentDisplay.library != null && c.currentDisplay.file != null && c.currentDisplay.member != null) h = c.currentDisplay.library + "/" + c.currentDisplay.file + ", " + c.currentDisplay.member;
                    if (c.currentDisplay.ifsFile != null) h = c.currentDisplay.ifsFile;
                    if (pui.isCloud) {
                        var g = pui.cloud.ws.SERVER_DIR;
                        if (h.substr(0, g.length).toUpperCase() === g.toUpperCase()) h = "Workspace Files" + h.substr(g.length)
                    }
                    Ext.MessageBox.show({
                        title: "Save Changes?",
                        msg: "Do you want to save changes to " + h + "?",
                        modal: true,
                        icon: Ext.MessageBox.WARNING,
                        buttons: {yes: "Save", no: "Don't Save", cancel: "Cancel"},
                        fn: function (l) {
                            if (l == "yes") {
                                if (c.vd.validate()) c.currentDisplay.member == null && c.currentDisplay.ifsFile == null && c.currentDisplay.Eb == null ? pui.ide.K.Mi(f) : R.Zq({onsuccess: f})
                            } else l == "no" && f()
                        }
                    });
                    return false
                } else f()
            }, beforedestroy: function (c) {
                c.rp.destroy();
                if (c.editor) if (c.mc) c.editor.destroy(); else {
                    c.editor.dispose();
                    delete c.pg
                }
                c.toolbar.designer.k.destroy();
                c.vd.destroy();
                c.vd = null;
                c.toolbar.designer = null;
                c.toolbar.destroy();
                c.toolbar = null
            }
        }
    })
};
pui.ide.Td = function (b, a, c, d, e, f, h) {
    var g = "";
    if (e) {
        g = e.toUpperCase();
        if (e === "js") g = "JavaScript";
        if (e === "md") g = "Markdown";
        e = "file." + e
    } else e = "";
    if (!a) {
        a = pui.nodedesigner ? pui.PROFOUNDJS_DIR : pui.DOCUMENT_ROOT;
        if (pui.isCloud) a = pui.cloud.ws.SERVER_DIR;
        if (a.charAt(a.length - 1) == pui.dirSeparator) a = a.substr(0, a.length - 1)
    }
    if (d == null) {
        screenMask.msg = "Loading";
        screenMask.show();
        Ext.Ajax.request({
            url: cc("PUI0001109.pgm"), method: "POST", params: {
                mode: "read", path: a + b, workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id :
                    ""
            }, success: function (k) {
                screenMask.hide();
                pui.ide.Td(b, a, c, k.responseText, e, f, h)
            }, failure: function (k) {
                screenMask.hide();
                Ext.MessageBox.show({
                    title: "Error",
                    msg: "HTTP " + k.status + " - " + k.statusText,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                })
            }
        })
    } else {
        var l = pui.isCloud && (typeof b === "string" && b.substr(b.length - 3).toLowerCase() === ".md" || g === "Markdown"),
            n = "";
        n = b == null ? "[Unnamed " + g + " File]" : b.substr(b.lastIndexOf(pui.dirSeparator) + 1);
        var o = new Ext.Panel({
            title: n, closable: true, region: l ? "west" : undefined,
            collapsible: l, resizable: l, floatable: false, split: l, width: l ? 500 : undefined, listeners: {
                expand: function () {
                    pui.ide.At().editor.focus()
                }, afterrender: function () {
                    o.fileTab = true;
                    o.root = a;
                    o.ma = b;
                    if (f) o.Dj = true;
                    var k = o.ma || e;
                    k = k.split(".").pop();
                    o.wp = k || "txt";
                    if (pui.useAceEditor || pui.is_ie || pui.ie_mode <= 11 || !window.monaco) o.mc = true;
                    if (o.mc) {
                        window.require && window.require.config({jM: {ace: "lib/ace"}});
                        var q = ace.edit(i.body.dom);
                        q.setTheme("ace/theme/eclipse");
                        q.getSession().setMode(pui.ide.yy(o.ma || e));
                        q.setShowPrintMargin(false);
                        q.setDisplayIndentGuides(false);
                        q.session.setTabSize(2);
                        q.setValue(d);
                        q.clearSelection();
                        q.commands.addCommand({
                            name: "save", exec: function () {
                                pui.ide.jf(o)
                            }, bindKey: {mac: "cmd-s", win: "ctrl-s"}
                        })
                    } else {
                        k = pui.ide.Jy(k);
                        o.pg = d;
                        q = monaco.editor.create(i.body.dom, {
                            value: d,
                            language: k,
                            fixedOverflowWidgets: true,
                            disableMonospaceOptimizations: navigator.platform.toUpperCase().indexOf("MAC") >= 0
                        });
                        q.getModel().updateOptions({tabSize: 2});
                        q.layout();
                        q.addAction({
                            id: "Save",
                            label: "Save File",
                            keybindings: [monaco.KeyMod.CtrlCmd |
                            monaco.KeyCode.KEY_S],
                            precondition: null,
                            keybindingContext: null,
                            contextMenuGroupId: "navigation",
                            contextMenuOrder: 1.4,
                            run: function () {
                                pui.ide.jf(o, false, pui.ide.Rl);
                                return null
                            }
                        });
                        q.addAction({
                            id: "CloseFile",
                            label: "Close File",
                            keybindings: [],
                            precondition: null,
                            keybindingContext: null,
                            contextMenuGroupId: "navigation",
                            contextMenuOrder: 1.5,
                            run: function () {
                                o.fireEvent("beforeclose", o);
                                return null
                            }
                        })
                    }
                    i.editor = q;
                    o.editor = q;
                    setTimeout(function () {
                        o.mc ? q.on("input", function () {
                            var s = !q.getSession().getUndoManager().isClean(),
                                t;
                            o.isDirty = s;
                            if (o.ma != null) {
                                t = o.ma.substr(o.ma.lastIndexOf(pui.dirSeparator) + 1);
                                pui.ide.Ti(o, o.root + o.ma)
                            } else {
                                t = "[Unnamed " + g + " File]";
                                pui.ide.Ti(o, t)
                            }
                            if (s) t += " *";
                            o.setTitle(t);
                            pui.ide.refreshRibbon()
                        }) : q.onDidChangeModelContent(function () {
                            var s = q.getModel().getValue(), t = o.pg !== s, u;
                            o.isDirty = t;
                            if (o.ma != null) {
                                u = o.ma.substr(o.ma.lastIndexOf(pui.dirSeparator) + 1);
                                pui.ide.Ti(o, o.root + o.ma)
                            } else {
                                u = "[Unnamed " + g + " File]";
                                pui.ide.Ti(o, u)
                            }
                            if (t) u += " *";
                            o.setTitle(u);
                            pui.ide.refreshRibbon();
                            if (l) {
                                s = marked(s,
                                    pui.ide.Nz);
                                r.body.update(s)
                            }
                        })
                    }, 0);
                    if (o.mc) setTimeout(function () {
                        q.getSession().getUndoManager().reset();
                        h || q.focus()
                    }, 0); else h || q.focus();
                    f || pui.designer.Bl(o.ma, o.root)
                }, resize: function () {
                    if (o.mc) i.editor.resize(); else i.editor && i.editor.layout()
                }, beforedestroy: function () {
                    if (o.mc) i.editor.destroy(); else {
                        i.editor.dispose();
                        delete o.pg
                    }
                }, beforeclose: pui.ide.Fs
            }
        });
        if (l) {
            var i = o, r = new Ext.Panel({
                region: "center",
                resizable: true,
                split: true,
                html: marked(d, pui.ide.Nz),
                autoScroll: true,
                bodyStyle: "white-space: normal; padding-top: 4px; padding-left: 4px; background-color: #ffffff;",
                cls: "markdown-body"
            });
            o = new Ext.Panel({
                closable: true,
                resizable: true,
                split: true,
                floatable: false,
                layout: "border",
                items: [i, r],
                title: i.title,
                listeners: {beforeclose: pui.ide.Fs}
            });
            i.title = "Edit Markdown";
            i.collapsed = g !== "Markdown"
        } else i = o;
        c(o)
    }
};
pui.ide.jf = function (b, a, c, d, e, f) {
    function h(g, l, n, o, i) {
        function r(k, q, s) {
            var t = g.editor;
            if (t.getModifiedEditor) t = t.getModifiedEditor();
            var u = [];
            u.push({name: "path", value: k});
            u.push({name: "text", value: "1"});
            q && u.push({name: "replace", value: "Y"});
            pui.isCloud && u.push({name: "workspace_id", value: pui.cloud.ws.id});
            u.push({name: "json", value: t.getValue(), fileName: k.substr(k.lastIndexOf(pui.dirSeparator) + 1)});
            q = new pui.$l;
            q.fm(u);
            screenMask.msg = "Saving";
            screenMask.show();
            q.send(cc("PUI0001109.pgm"), function (w) {
                screenMask.hide();
                if (w.Vc() == 200) {
                    w = JSON.parse(w.jc());
                    if (w.success == false) {
                        var v = w.errorText;
                        if (w.errorId == "FILE EXISTS") {
                            w.msg = v;
                            pui.ide.K.Yq(w, {Da: g, callback: s, jf: true, path: k, root: i})
                        } else Ext.MessageBox.show({
                            title: "Error",
                            msg: v.replace("Invalid directory: ", "Invalid directory:<br/>"),
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        })
                    } else {
                        w = g.ma;
                        g.ma = k.substr(g.root.length);
                        if (g.mc) {
                            g.editor.getSession().setMode(pui.ide.yy(g.ma));
                            g.editor.getSession().getUndoManager().reset();
                            g.editor.getSession().getUndoManager().markClean()
                        } else {
                            g.pg =
                                t.getModel().getValue();
                            g.isDirty = false
                        }
                        v = g.ma.substr(g.ma.lastIndexOf(pui.dirSeparator) + 1);
                        if (g.editor.getModifiedEditor) v += " " + g.qe.type;
                        g.setTitle(v);
                        pui.ide.Ti(g, g.root + g.ma);
                        pui.ide.refreshRibbon();
                        if (g.Dj) g.Dj = false;
                        var E = g.Vb || {};
                        E.ifsFile = k;
                        E.root = i;
                        E.path = i;
                        pui.ide.pd(E, function (F) {
                            if (F.success) {
                                F = F.data;
                                if (F.mtime) g.lastModified = F.mtime; else if (F.changed) g.lastModified = F.changed;
                                g.Vb = E
                            }
                        });
                        if (g.ma.match(/\.css$/i)) {
                            v = g.root + g.ma;
                            var y = pui.DOCUMENT_ROOT;
                            if (pui.isCloud) y = pui.cloud.ws.SERVER_DIR;
                            if (y.charAt(y.length - 1) == pui.dirSeparator) y = y.substr(y.length - 1);
                            v = v.replace(RegExp(y.replace(/\\/g, "\\\\"), "i"), "").replace(/\\/g, "/");
                            pui.ide.dv(v)
                        }
                        v = g.ma.substr(0, g.ma.lastIndexOf(pui.dirSeparator));
                        (v = Ext.getCmp("fileTree").getNodeById(g.root + v)) && v.reload();
                        g.Dj || pui.designer.Bl(g.ma, g.root);
                        typeof s == "function" && s();
                        g.qe && g.ma != w && pui.ide.JI(g)
                    }
                } else Ext.MessageBox.show({
                    title: "Error",
                    msg: "HTTP " + w.Vc() + " - " + w.xj(),
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                })
            })
        }

        if (g.Dj && !l) return pui.Jf("text/plain",
            g.ma, g.editor.getValue());
        if (o) r(o, true, n); else {
            i = g.root;
            g.ma && !l ? r(i + g.ma, true, n) : pui.ide.K.Mi(function (k) {
                var q = k.split(pui.dirSeparator);
                q.pop();
                i = q.join(pui.dirSeparator);
                if (pui.isCloud) i = pui.cloud.ws.SERVER_DIR;
                r(k, false, n)
            })
        }
    }

    b.lastModified !== undefined && !f ? pui.ide.pd(b.Vb, function (g) {
        var l;
        if (g.success) {
            g = g.data;
            if (g.mtime) l = g.mtime; else if (g.changed) l = g.changed;
            l > b.lastModified ? pui.ide.FB(b, l, {Da: b, callback: c, jf: true, path: d, root: e}) : h(b, a, c, d, e)
        } else h(b, a, c, d, e)
    }) : h(b, a, c, d, e)
};
pui.ide.yy = function (b) {
    if (b = b.match(pui["text file name pattern"])) b = b[1];
    (b = {
        css: "css",
        js: "javascript",
        json: "json",
        lst: "json",
        scn: "json",
        html: "html",
        ejs: "html",
        htm: "html",
        xml: "xml",
        txt: "text",
        log: "text",
        csv: "text",
        sh: "sh",
        md: "md",
        sql: "sql"
    }[b]) || (b = "text");
    return "ace/mode/" + b
};
pui.ide.JK = 0;
pui.ide.Nx = "/profoundui/proddata/images/image.png";
pui.ide.zf = false;
pui.ide.RD = function () {
    function b(r, k) {
        r.select();
        var q = [];
        if (r.leaf == true) {
            var s = r.id.substr(r.id.lastIndexOf(pui.dirSeparator) + 1);
            q.push(new Ext.menu.Item({
                text: "Edit",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/edit.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/edit.png",
                handler: function () {
                    pui.ide.Gm(pui.ide.ul(r.id))
                }
            }));
            if (s.match(/.+\.(json|txt)$/i)) q.push(new Ext.menu.Item({
                text: "Design", iconCls: pui.flatlook ? "designFlat" : "design-icon", handler: function () {
                    var u =
                        Ext.getCmp("centerPanel"), w;
                    u.items.each(function (y) {
                        var F = y.currentDisplay;
                        if (F) if (r.id === F.ifsFile) {
                            w = y;
                            return false
                        }
                    });
                    if (w) u.setActiveTab(w); else {
                        var v = pui.ide.od(), E = {
                            url: r.id, ifsFile: r.id, onsuccess: function () {
                                w.ka = pui.ka;
                                w.C = {
                                    formats: pui.designer.C.formats,
                                    comments: pui.designer.C.comments,
                                    global: pui.designer.C.global
                                };
                                pui.ide.pd(E, function (y) {
                                    if (y.success) {
                                        y = y.data;
                                        w.lastModified = y.changed !== undefined ? y.changed : y.mtime;
                                        w.Vb = E
                                    }
                                })
                            }, sd: function () {
                                u.remove(w, true);
                                u.setActiveTab(u.insert(v.index,
                                    pui.ide.Bd()));
                                pui.ide.Qb();
                                Ext.getCmp("RecFormatsTabPanel").setActiveTab(0)
                            }
                        };
                        if (v.Da) {
                            u.remove(v.Da, true);
                            w = u.insert(v.index, pui.ide.Bd())
                        } else w = u.add(pui.ide.Bd());
                        u.setActiveTab(w);
                        if (!R) {
                            R = new pui.designer.ik;
                            R.hide()
                        }
                        R.uj(E, function () {
                            R.open(E)
                        })
                    }
                }
            }))
        }
        q.push(new Ext.menu.Item({
            text: "New",
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/add.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/add.png",
            menu: new Ext.menu.Menu({
                items: [new Ext.menu.Item({
                    text: "File", iconCls: "file-default",
                    handler: function () {
                        c(r.leaf == true ? r.parentNode : r, false)
                    }
                }), new Ext.menu.Item({
                    text: "Directory", iconCls: "folder-open", handler: function () {
                        c(r.leaf == true ? r.parentNode : r, true)
                    }
                })]
            })
        }));
        if (r.isRoot != true) q.push(new Ext.menu.Item({
            text: "Copy",
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/copy.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/page_copy.png",
            handler: function () {
                pui.ide.eg = {node: r, mode: "copy"}
            }
        }), new Ext.menu.Item({
            text: "Cut", icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/cut.png" :
                "/profoundui/proddata/images/dspfdesigner/icons16x16/cut.png", handler: function () {
                pui.ide.eg = {node: r, mode: "rename"}
            }
        }));
        if (pui.ide.eg != null) q.push(new Ext.menu.Item({
            text: "Paste",
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/paste.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/paste.png",
            handler: function () {
                var u = pui.ide.eg.node.parentNode, w = r.leaf == true ? r.parentNode : r, v = r.ownerTree.root.id,
                    E = u.id.replace(v, "") + pui.dirSeparator + pui.ide.eg.node.text,
                    y = w.id.replace(v, "") + pui.dirSeparator +
                        pui.ide.eg.node.text;
                r.ownerTree.body.mask();
                Ext.Ajax.request({
                    url: cc("PUI0001122.pgm"),
                    method: "POST",
                    params: {
                        mode: pui.ide.eg.mode,
                        old: E,
                        "new": y,
                        workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
                    },
                    success: function (F) {
                        r.ownerTree.body.unmask();
                        F = JSON.parse(F.responseText);
                        if (F.success == false) Ext.MessageBox.show({
                            title: "Error",
                            msg: F.error,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        }); else {
                            if (pui.ide.eg.mode == "rename") {
                                if (pui.isCloud && F.settings) pui.cloud.ws.settings = F.settings;
                                u.removeChild(pui.ide.eg.node,
                                    true);
                                pui.ide.Mq(E, y, !pui.ide.eg.node.isLeaf());
                                pui.ide.eg = null
                            }
                            w.reload()
                        }
                    },
                    failure: function (F) {
                        r.ownerTree.body.unmask();
                        Ext.MessageBox.show({
                            title: "Error",
                            msg: "HTTP " + F.status + " - " + F.statusText,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        })
                    }
                })
            }
        }));
        if (r.isRoot != true) q.push(new Ext.menu.Item({
                text: "Rename",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/edit.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/pencil.png",
                handler: function () {
                    i.editNode = r;
                    i.startEdit(r.ui.textNode)
                }
            }),
            new Ext.menu.Item({
                text: "Delete",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/remove-1.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/delete.png",
                handler: function () {
                    var u = r.id;
                    if (pui.isCloud) {
                        var w = pui.cloud.ws.SERVER_DIR;
                        if (u.substr(0, w.length).toUpperCase() === w.toUpperCase()) u = "Workspace Files" + u.substr(w.length)
                    }
                    Ext.MessageBox.confirm(r.leaf == true ? "Delete file" : "Delete directory", "Are you sure you want to delete '" + u + "'?", function (v) {
                        v == "yes" && a(r)
                    })
                }
            }));
        if (r.leaf !=
            true) {
            q.push(new Ext.menu.Item({
                text: "Refresh",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/refresh.png" : "/profoundui/proddata/images/icons/arrow_refresh.png",
                handler: function () {
                    r.reload()
                }
            }));
            if (r.isRoot && pui.isCloud) q.push(new Ext.menu.Item({
                text: "Download ZIP",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/download.png" : "/profoundui/proddata/images/icons/page_white_put.png",
                handler: function () {
                    pui.link("/cloud/download_workspace/" + pui.cloud.ws.id)
                }
            }));
            if (!pui.FH ||
                pui.TL >= 10) q.push(new Ext.menu.Item({
                text: "Upload",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/upload.png" : "/profoundui/proddata/images/icons/page_white_get.png",
                handler: function (u) {
                    var w = r.ownerTree, v = w.getEl().child('input[type="file"]', true);
                    v && v.parentNode.removeChild(v);
                    var E = document.createElement("input");
                    E.type = "file";
                    E.multiple = true;
                    E.style.display = "none";
                    E.onchange = function () {
                        var y = new FormData, F = r.id.replace(r.ownerTree.root.id, "");
                        y.append("dir", F);
                        pui.isCloud && pui.cloud.ws.id &&
                        y.append("workspace_id", pui.cloud.ws.id);
                        for (F = 0; F < E.files.length; F++) {
                            var D = E.files[F];
                            y.append("file", D, D.name)
                        }
                        var B = new XMLHttpRequest;
                        B.onreadystatechange = function () {
                            if (B.readyState == 4) {
                                w.Fr.hide();
                                w.body.unmask();
                                if (B.status == 200) {
                                    var I = JSON.parse(B.responseText);
                                    if (I.success == true) r.reload(); else {
                                        var z = "";
                                        for (var H in I.failures) {
                                            if (z != "") z += "<br />";
                                            z += H + ": " + I.failures[H]
                                        }
                                        Ext.MessageBox.show({
                                            title: "Upload failed",
                                            msg: z,
                                            buttons: Ext.MessageBox.OK,
                                            icon: Ext.MessageBox.ERROR,
                                            fn: function () {
                                                r.reload()
                                            }
                                        })
                                    }
                                } else Ext.MessageBox.show({
                                    title: "Error",
                                    msg: "HTTP " + B.status + " - " + B.statusText,
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.ERROR,
                                    fn: function () {
                                        r.reload()
                                    }
                                })
                            }
                        };
                        if (B.upload) B.upload.onprogress = function (I) {
                            w.Fr.updateProgress(I.loaded / I.total)
                        };
                        B.open("POST", cc("pui0001124.pgm"));
                        B.send(y);
                        w.Fr.reset();
                        w.Fr.show();
                        w.body.mask();
                        w.body.child("div.ext-el-mask").setStyle("opacity", ".25")
                    };
                    w.getEl().appendChild(E);
                    if (pui.FH) {
                        v = document.createEvent("MouseEvent");
                        v.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)
                    } else v =
                        new MouseEvent("click", {bubbles: true, cancelable: true, view: window});
                    u.parentMenu.hide();
                    E.dispatchEvent(v)
                }
            }))
        } else q.push(new Ext.menu.Item({
            text: "Download",
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/download.png" : "/profoundui/proddata/images/icons/page_white_put.png",
            handler: function () {
                var u = r.id.replace(r.ownerTree.root.id, "");
                u = cc("pui0001123.pgm") + "?path=" + encodeURIComponent(u);
                if (pui.isCloud) u += "&workspace_id=" + encodeURIComponent(pui.cloud.ws.id);
                pui.link(u)
            }
        }));
        if (!r.leaf &&
            pui.gitSupport && pui.ide.kf(["modify"], true)) {
            if (r.attributes.bn) {
                var t = r.text == ".git" ? r.parentNode.id : r.id;
                t = pui.ide.ul(t);
                t != pui.ide.getCurrentGitRepository() && q.push({
                    text: "Open Git repository",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/open_git_repository.png",
                    handler: function () {
                        pui.ide.openGitRepository(t, true)
                    }
                })
            }
            if (r.text != ".git" || !r.attributes.bn) q.push({
                text: "Clone Git repository here",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/clone_git_repository.png",
                handler: function () {
                    pui.ide.bF(r)
                }
            });
            r.attributes.bn || q.push({
                text: "Initialize Git repository here",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/init_git_repo.png",
                handler: function () {
                    pui.ide.jH(r)
                }
            })
        }
        q.push(new Ext.menu.Item({
            text: "Properties",
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/screen-properties.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/prop.gif",
            handler: function () {
                e(r)
            }
        }));
        (new Ext.menu.Menu({items: q})).showAt(k.getXY())
    }

    function a(r) {
        var k = r.ownerTree.root.id;
        r.ownerTree.body.mask();
        Ext.Ajax.request({
            url: cc("PUI0001122.pgm"),
            method: "POST",
            params: {
                mode: "delete",
                name: r.id.replace(k, ""),
                workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
            },
            success: function (q) {
                r.ownerTree.body.unmask();
                q = JSON.parse(q.responseText);
                if (q.success == false) Ext.MessageBox.show({
                    title: "Error",
                    msg: q.error,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR,
                    fn: function () {
                        r.parentNode.reload()
                    }
                }); else {
                    if (pui.isCloud && q.settings) pui.cloud.ws.settings = q.settings;
                    q = r.parentNode.id.replace(k, "") + pui.dirSeparator +
                        r.text;
                    r.parentNode.reload();
                    pui.ide.Mq(q, null, !r.isLeaf())
                }
            },
            failure: function (q) {
                r.ownerTree.body.unmask();
                Ext.MessageBox.show({
                    title: "Error",
                    msg: "HTTP " + q.status + " - " + q.statusText,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR,
                    fn: function () {
                        r.parentNode.reload()
                    }
                })
            }
        })
    }

    function c(r, k) {
        var q = new Ext.form.TextField({
            fieldLabel: "Name",
            allowBlank: false,
            blankText: "A value is required",
            validator: function (w) {
                return pui.ide.$v(w, k)
            }
        }), s = new Ext.form.NumberField({
            fieldLabel: "CCSID", allowBlank: false,
            allowDecimals: false, allowNegative: false, minValue: 1, maxValue: 65534, value: 1208
        }), t = [q];
        !k && pui.OS == "OS400" && t.push(s);
        var u = new Ext.Window({
            id: "newFileWindow",
            title: k ? "New directory" : "New file",
            resizable: false,
            modal: true,
            constrain: true,
            width: 250,
            layout: "form",
            layoutConfig: {labelWidth: 40},
            bodyStyle: {padding: "5px"},
            items: [t],
            buttons: [{
                text: "OK", handler: function () {
                    if (!(!q.isValid() || !k && !s.isValid())) {
                        r.ownerTree.body.mask();
                        var w = r.id.replace(r.ownerTree.root.id, "") + pui.dirSeparator + q.getValue();
                        w = {
                            mode: "add",
                            dir: k ? "1" : "0", name: w
                        };
                        if (pui.isCloud && pui.cloud.ws.id) w.workspace_id = pui.cloud.ws.id;
                        k || (w.ccsid = s.getValue());
                        Ext.Ajax.request({
                            url: cc("PUI0001122.pgm"), method: "POST", params: w, success: function (v) {
                                r.ownerTree.body.unmask();
                                v = JSON.parse(v.responseText);
                                if (v.success == false) Ext.MessageBox.show({
                                    title: "Error",
                                    msg: v.error,
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.ERROR,
                                    fn: function () {
                                        r.reload();
                                        u.close()
                                    }
                                }); else {
                                    r.reload();
                                    u.close()
                                }
                            }, failure: function (v) {
                                r.ownerTree.body.unmask();
                                Ext.MessageBox.show({
                                    title: "Error",
                                    msg: "HTTP " + v.status + " - " + v.statusText,
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.ERROR,
                                    fn: function () {
                                        r.reload();
                                        u.close()
                                    }
                                })
                            }
                        })
                    }
                }
            }, {
                text: "Cancel", handler: function () {
                    u.close()
                }
            }],
            keys: {
                key: Ext.EventObject.ENTER, stopEvent: true, fn: function () {
                    u.buttons[0].handler()
                }
            },
            listeners: {
                afterrender: function () {
                    setTimeout(function () {
                        q.focus()
                    }, 100)
                }
            }
        });
        u.show()
    }

    function d(r, k) {
        o.body.mask();
        var q = o.root.id;
        Ext.Ajax.request({
            url: cc("PUI0001122.pgm"), method: "POST", params: {
                mode: "getattr", name: r.replace(q, ""),
                workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
            }, success: function (s) {
                o.body.unmask();
                s = JSON.parse(s.responseText);
                s.success == false ? Ext.MessageBox.show({
                    title: "Error",
                    msg: s.error,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                }) : k(s.attr)
            }, failure: function (s) {
                o.body.unmask();
                Ext.MessageBox.show({
                    title: "Error",
                    msg: "HTTP " + s.status + " - " + s.statusText,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                })
            }
        })
    }

    function e(r, k) {
        if (k) {
            var q, s, t = r.id;
            if (pui.isCloud) {
                var u = pui.cloud.ws.SERVER_DIR;
                if (t.substr(0, u.length).toUpperCase() === u.toUpperCase()) t = "Workspace Files" + t.substr(u.length)
            }
            t = [new Ext.form.DisplayField({
                fieldLabel: r.leaf == true ? "File" : "Directory",
                value: t,
                cls: "pui-designer-text-selectable"
            })];
            pui.OS == "OS400" && t.push(new Ext.form.DisplayField({
                fieldLabel: "Owner",
                value: k.owner
            }), new Ext.form.DisplayField({
                fieldLabel: "Primary group",
                value: k.group
            }), new Ext.form.DisplayField({fieldLabel: "Authorization list", value: k.autl}));
            t.push(new Ext.form.DisplayField({
                fieldLabel: "Created", value: (new Date(k.ctime *
                    1E3)).format("Y-m-d H:i:s")
            }), new Ext.form.DisplayField({
                fieldLabel: "Modified",
                value: (new Date(k.mtime * 1E3)).format("Y-m-d H:i:s")
            }), new Ext.form.DisplayField({
                fieldLabel: "Accessed",
                value: (new Date(k.atime * 1E3)).format("Y-m-d H:i:s")
            }));
            if (r.leaf == true && pui.OS == "OS400") {
                q = new Ext.form.NumberField({
                    fieldLabel: "CCSID",
                    allowBlank: false,
                    allowDecimals: false,
                    allowNegative: false,
                    minValue: 1,
                    maxValue: 65534,
                    value: k.ccsid
                });
                s = new Ext.form.Checkbox({fieldLabel: "Convert contents"});
                t.push(new Ext.form.DisplayField({
                    fieldLabel: "Size",
                    value: Ext.util.Format.fileSize(k.size)
                }), q, s)
            }
            if (pui.OS == "OS400") t.push(new Ext.grid.GridPanel({
                title: "User authorities",
                height: 150,
                enableColumnHide: false,
                enableColumnMove: false,
                enableColumnResize: false,
                autoExpandColumn: "data",
                store: new Ext.data.JsonStore({
                    fields: ["name", "data", "objmgt", "objexist", "objalter", "objref", "objopr", "read", "add", "update", "delete", "execute"],
                    data: k.users
                }),
                colModel: new Ext.grid.ColumnModel({
                    columns: [{header: "User", dataIndex: "name", sortable: true}, {
                        id: "data", header: "Data authority",
                        dataIndex: "data", menuDisabled: true
                    }]
                })
            })); else pui.isCloud || t.push(new Ext.form.DisplayField({fieldLabel: "Permissions", value: k.mode}));
            if (r.leaf && pui.isCloud) {
                var w = pui.cloud.ws.settings;
                u = w["app start"];
                if (typeof u !== "string") u = "";
                w = w.routes;
                if (typeof w !== "object") w = {};
                if (pui.dirSeparator !== "/") u = u.replace(/\//g, pui.dirSeparator);
                u = pui.cloud.ws.SERVER_DIR + pui.dirSeparator + u;
                u = u.toLowerCase();
                var v = r.id.toLowerCase() === u;
                u = r.id.substr(pui.cloud.ws.SERVER_DIR.length + 1);
                if (pui.dirSeparator !== "/") u =
                    u.replace(/\\/g, "/");
                u = w[u];
                var E = "post", y = "", F = false;
                if (u) {
                    F = true;
                    E = u.method;
                    y = u.route
                }
                t.push({
                    xtype: "checkbox",
                    id: "_cloud_webservice",
                    name: "_cloud_webservice",
                    fieldLabel: "Express Route",
                    checked: F,
                    value: ""
                });
                t.push({
                    xtype: "checkbox",
                    name: "_cloud_start",
                    id: "_cloud_start",
                    fieldLabel: "App Start File",
                    checked: v,
                    value: ""
                });
                var D = new Ext.data.ArrayStore({
                    fields: ["method"],
                    data: [["post"], ["get"], ["put"], ["delete"], ["all"]]
                }), B = new Ext.data.ArrayStore({fields: ["method"], data: [["get"], ["all"]]});
                t.push({
                    xtype: "combo",
                    id: "_cloud_method",
                    anchor: "95%",
                    editable: false,
                    mode: "local",
                    fieldLabel: "HTTP Method",
                    hiddenName: "method",
                    displayField: "method",
                    store: D,
                    triggerAction: "all",
                    value: E,
                    selectOnFocus: true
                });
                t.push({
                    xtype: "textfield",
                    id: "_cloud_routepath",
                    name: "_cloud_routepath",
                    anchor: "95%",
                    fieldLabel: "Route Path",
                    autoCreate: {tag: "input", type: "text"},
                    value: y,
                    listeners: {
                        afterrender: function () {
                            var z = Ext.getCmp("_cloud_routepath").el.dom, H = location.pathname;
                            if (H && H !== "/" && H !== "/ide" && H !== "/ide/") {
                                if (H.substr(0, 4) === "/ide") H =
                                    H.substr(4);
                                if (H.substr(0, 1) !== "/") H = "/" + H;
                                H = "/run" + H;
                                prefixTextNode = document.createTextNode(H);
                                prefixDiv = document.createElement("div");
                                prefixDiv.appendChild(prefixTextNode);
                                prefixDiv.style.display = "inline-block";
                                prefixDiv.style.paddingRight = "2px";
                                z.parentNode.insertBefore(prefixDiv, z)
                            }
                        }, resize: function () {
                            var z = Ext.getCmp("_cloud_routepath").el.dom, H = z.previousSibling;
                            if (H) {
                                H = Ext.getCmp("_cloud_method").el.dom.clientWidth - H.clientWidth + 11;
                                if (H < 50) H = 50;
                                z.style.width = H + "px"
                            }
                        }
                    }
                })
            }
            var I = new Ext.Window({
                id: "filePropertiesWindow",
                title: (r.leaf == true ? "File" : "Directory") + " properties",
                resizable: pui.isCloud,
                modal: true,
                constrain: true,
                width: 500,
                layout: "form",
                bodyStyle: {padding: "5px"},
                layoutConfig: {labelWidth: 100},
                items: t,
                buttons: [{
                    text: "OK", handler: function () {
                        if (pui.isCloud) {
                            var z = false, H = Ext.getCmp("_cloud_start").getValue(),
                                J = Ext.getCmp("_cloud_webservice").getValue();
                            if (H !== v || J !== F) z = true;
                            if (J) {
                                var K = Ext.getCmp("_cloud_method").getValue(),
                                    L = Ext.getCmp("_cloud_routepath").getValue();
                                if (H) L = "";
                                if (K !== E || L !== y) z = true
                            }
                            if (z) {
                                if (J) if (!L &&
                                    !H) {
                                    Ext.getCmp("_cloud_routepath").markInvalid("Route path is required.");
                                    return
                                }
                                if (!pui.cloud.ws["new"]) if (!pui.cloud.ws.modify && pui.cloud.ws.owner && pui.cloud.ws.owner !== pui.cloud.user) {
                                    z = false;
                                    var N = pui.cloud.ws.contributors;
                                    N || (N = []);
                                    for (var O = 0; O < N.length; O++) if (N[O].profile === pui.cloud.user) z = true;
                                    if (!z) {
                                        pui.alert("You are not authorized to modify this workspace.");
                                        return
                                    }
                                }
                                z = r.id.substr(pui.cloud.ws.SERVER_DIR.length + 1);
                                if (pui.dirSeparator !== "/") z = z.replace(/\\/g, "/");
                                N = pui.cloud.ws.settings;
                                originalAppStartFile = N["app start"];
                                if (H) N["app start"] = z; else if (v) N["app start"] = "";
                                N.routes || (N.routes = {});
                                N = N.routes;
                                if (J) N[z] = {method: K, route: L}; else N[z] && delete N[z];
                                pui.cloud.updateSettings(true);
                                if (H !== v || J !== F) {
                                    J = r.parentNode;
                                    if (H && !v && originalAppStartFile) J = r.ownerTree.root;
                                    J && J.reload()
                                }
                            }
                            I.close()
                        } else if (r.leaf != true || pui.OS != "OS400") I.close(); else if (q.isValid()) if (q.getValue() == k.ccsid) I.close(); else {
                            r.ownerTree.body.mask();
                            H = r.ownerTree.root.id;
                            Ext.Ajax.request({
                                url: cc("PUI0001122.pgm"),
                                method: "POST",
                                params: {
                                    mode: "setattr",
                                    name: r.id.replace(H, ""),
                                    ccsid: "" + q.getValue(),
                                    convert: s.getValue() == true ? "1" : "0",
                                    workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
                                },
                                success: function (V) {
                                    r.ownerTree.body.unmask();
                                    V = JSON.parse(V.responseText);
                                    V.success == false ? Ext.MessageBox.show({
                                        title: "Error",
                                        msg: V.error,
                                        buttons: Ext.MessageBox.OK,
                                        icon: Ext.MessageBox.ERROR,
                                        fn: function () {
                                            I.close()
                                        }
                                    }) : I.close()
                                },
                                failure: function (V) {
                                    r.ownerTree.body.unmask();
                                    Ext.MessageBox.show({
                                        title: "Error",
                                        msg: "HTTP " +
                                            V.status + " - " + V.statusText,
                                        buttons: Ext.MessageBox.OK,
                                        icon: Ext.MessageBox.ERROR,
                                        fn: function () {
                                            I.close()
                                        }
                                    })
                                }
                            })
                        }
                    }
                }, {
                    text: "Cancel", handler: function () {
                        I.close()
                    }
                }],
                keys: {
                    key: Ext.EventObject.ENTER, stopEvent: true, fn: function () {
                        I.buttons[0].handler()
                    }
                },
                listeners: {
                    afterrender: function () {
                        r.leaf == true && pui.OS == "OS400" && setTimeout(function () {
                            q.focus()
                        }, 100);
                        if (r.leaf && pui.isCloud) {
                            var z = Ext.getCmp("_cloud_webservice").el.dom, H = Ext.getCmp("_cloud_start").el.dom,
                                J = H.parentNode.parentNode.previousSibling;
                            z.onclick =
                                H.onclick = function () {
                                    var K = Ext.getCmp("_cloud_method"), L = Ext.getCmp("_cloud_routepath");
                                    if (z.checked) {
                                        J.innerHTML = "App Start Route:";
                                        K.show();
                                        if (H.checked) {
                                            L.hide();
                                            K.bindStore(B);
                                            L = K.getValue();
                                            L !== "get" && L !== "all" && K.setValue("get")
                                        } else {
                                            L.show();
                                            K.bindStore(D)
                                        }
                                        I.getHeight() < 290 && I.setHeight(290)
                                    } else {
                                        J.innerHTML = "App Start File:";
                                        L.hide();
                                        K.hide()
                                    }
                                };
                            z.onclick()
                        }
                    }
                }
            });
            I.show()
        } else d(r.id, function (z) {
            e(r, z)
        })
    }

    for (var f = [], h = pui.toolbox.ny(), g, l = 0; l < h.length; l++) {
        g = pui.toolbox.oy(h[l]);
        f.push({
            text: h[l],
            expanded: l == 0 ? true : false,
            leaf: false,
            allowDrag: false,
            draggable: false,
            cls: pui.flatlook ? "flat-node" : "category-node",
            children: g,
            listeners: {
                click: function (r) {
                    r.isExpanded() ? r.collapse() : r.expand()
                }
            }
        })
    }
    f = new Ext.tree.TreePanel({
        id: "treePanel",
        title: "All Widgets",
        autoScroll: true,
        animate: true,
        containerScroll: true,
        enableDrag: true,
        ddGroup: "toolboxTree",
        rootVisible: false,
        lines: false,
        tbar: new Ext.Toolbar({
            layout: "anchor", items: [{xtype: "label", text: "Filter: ", style: "font-weight:bold;"}, {
                xtype: "textfield", emptyText: "Find Widget",
                anchor: "80%", name: "filter", style: "font-size:11px;", listeners: {
                    render: function (r) {
                        r.el.on("keyup", pui.ide.XF, r, {Sd: 350});
                        r.el.on("keydown", function (k) {
                            if (!k) k = window.event;
                            var q = k.keyCode;
                            if (q == 37 || q == 38 || q == 39 || q == 40 || q == 46) {
                                if (window.event) window.event.cancelBubble = true;
                                if (k.preventDefault) k.cancelBubble = true
                            }
                        }, r)
                    }
                }
            }]
        }),
        tools: [{
            id: "plus", qtip: "Expand All", handler: function (r, k, q) {
                q.expandAll()
            }
        }, {
            id: "minus", qtip: "Collapse All", handler: function (r, k, q) {
                q.collapseAll()
            }
        }],
        listeners: {
            render: function (r) {
                this.dragZone =
                    this.body;
                new Ext.dd.DragZone(this.dragZone, {
                    ddGroup: "toolboxTree", centerFrame: true, onStartDrag: function () {
                        if (R != null) Ext.getCmp("centerPanel").getActiveTab().Xa || pui.layout.template.Nm(R.designer)
                    }, onDrag: function (k) {
                        pui.ide.it(k, this.dragData.node.attributes)
                    }, endDrag: function () {
                        pui.designer.gf.hide()
                    }, autoOffset: function () {
                        this.setDelta(parseInt(this.dragData.node.attributes.proxyWidth / 2) + 20, parseInt(this.dragData.node.attributes.proxyHeight / 2) + 3)
                    }, getDragData: function (k) {
                        if (R != null) if (!Ext.getCmp("centerPanel").getActiveTab().Xa) {
                            var q =
                                Ext.dd.Registry.getHandleFromEvent(k);
                            if ((k = k.getTarget()) && q) if (q.node.attributes.leaf == true) {
                                var s = document.createElement("div"), t = q.node.attributes.proxyHTML;
                                if (typeof t == "function") {
                                    s.innerHTML = "";
                                    s.appendChild(t(q.node.attributes.defaults))
                                } else s.innerHTML = t;
                                return r.dragData = {sourceEl: k, repairXY: Ext.fly(k).getXY(), ddel: s, node: q.node}
                            }
                        }
                    }, getRepairXY: function () {
                        return this.dragData.SA
                    }
                })
            }, contextmenu: function (r, k) {
                var q = Ext.getCmp("widgetSets").items;
                if (q.getCount() != 0) {
                    r.select();
                    var s = [];
                    q.each(function (t,
                                     u) {
                        s.push(new Ext.menu.Item({
                            text: t.title, MJ: u, handler: function (w) {
                                var v = {};
                                v["field type"] = r.attributes.widget;
                                var E = pui.widgets[v["field type"]].defaults;
                                if (E) for (var y in E) v[y] = E[y];
                                if (E = r.attributes.defaults) for (y in E) v[y] = E[y];
                                if (r.text == "Dynamic Output Field") {
                                    E = R.designer.D.Tm();
                                    v.value = {
                                        fieldName: E,
                                        dataType: "char",
                                        dataLength: "10",
                                        trimLeading: "false",
                                        trimTrailing: "true",
                                        formatting: "Text",
                                        textTransform: "none",
                                        designValue: "[" + E + "]"
                                    };
                                    if (pui.viewdesigner || pui.nodedesigner) {
                                        v.value.dataType = "varchar";
                                        v.value.dataLength = "25"
                                    }
                                }
                                v = {name: r.attributes.text, icon: r.attributes.icon, properties: v};
                                if (r.attributes.So) v.So = true;
                                w = q.itemAt(w.initialConfig.MJ);
                                pui.ide.Uw(v, w)
                            }
                        }))
                    });
                    (new Ext.menu.Menu({
                        items: [new Ext.menu.Item({
                            text: "Add to set",
                            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/add.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/add.png",
                            menu: new Ext.menu.Menu({items: s})
                        })]
                    })).showAt(k.getXY())
                }
            }
        },
        root: new Ext.tree.AsyncTreeNode({text: "Main Menu", children: f})
    });
    var n = new Ext.Panel({
        id: "widgetSets",
        title: "Widget Sets", layout: "accordion", layoutConfig: {fill: true}, autoScroll: true, tbar: new Ext.Toolbar({
            items: [{
                id: "addWidgetSet",
                tooltip: "Add set",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/add.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/add.png",
                handler: function () {
                    R && R.designer.selection.clear();
                    Ext.MessageBox.prompt("Add Set", "Set name:", function (r, k) {
                        if (r == "ok") {
                            pui.ide.Po(k, null, true);
                            pui.ide.saveWidgetSets()
                        }
                    })
                }
            }, {
                id: "removeWidgetSet",
                tooltip: "Remove set",
                icon: pui.flatlook ?
                    "/profoundui/proddata/images/FlatIcons/16x16/remove-1.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/delete.png",
                disabled: true,
                handler: function () {
                    R && R.designer.selection.clear();
                    Ext.MessageBox.confirm("Remove Set", "Are you sure you want to remove this set?", function (r) {
                        r == "yes" && pui.ide.WI(n.find("collapsed", false)[0])
                    })
                }
            }, {
                id: "renameWidgetSet",
                tooltip: "Rename set",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/edit.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/pencil.png",
                disabled: true,
                handler: function () {
                    R && R.designer.selection.clear();
                    var r = n.find("collapsed", false)[0];
                    Ext.MessageBox.prompt("Rename Set", "New name:", function (k, q) {
                        k == "ok" && pui.ide.YI(r, q)
                    }, window, false, r.title)
                }
            }, {
                id: "moveWidgetSetUp",
                tooltip: "Move set up",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/up.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/move-up.gif",
                disabled: true,
                handler: function () {
                    pui.ide.Yz(n.find("collapsed", false)[0], "up")
                }
            }, {
                id: "moveWidgetSetDown",
                tooltip: "Move set down",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/down.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/move-down.gif",
                disabled: true,
                handler: function () {
                    pui.ide.Yz(n.find("collapsed", false)[0], "down")
                }
            }, {
                id: "reorderWidgets",
                tooltip: "Reorder widgets",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/screen-properties.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/cog.png",
                handler: function (r) {
                    pui.ide.zf = !pui.ide.zf;
                    r.setTooltip(pui.ide.zf ? "Exit reorder mode" :
                        "Reorder widgets");
                    r = r.getEl();
                    r.setStyle("background-color", pui.ide.zf ? "#bbbbbb" : "");
                    r.setStyle("border-color", pui.ide.zf ? "#8a8a8a" : "")
                }
            }, {
                id: "import_exportWidgets",
                tooltip: "Import/Export widgets",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/impexp.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/impexp.png",
                handler: function () {
                    pui.ide.K.gH()
                }
            }, new Ext.Toolbar.Fill, {
                id: "loadWidgetSets",
                tooltip: "Load sets from server",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/load-sets.png" :
                    "/profoundui/proddata/images/dspfdesigner/icons16x16/database_refresh.png",
                hidden: pui.isCloud,
                handler: function () {
                    R.designer.selection.clear();
                    Ext.MessageBox.confirm("Load Widget Sets", "Are you sure you want to load the widget sets from the server?<br />Any local changes will be overwritten.", function (r) {
                        r == "yes" && pui.ide.su()
                    })
                }
            }, {
                id: "saveWidgetSets",
                tooltip: "Save sets to server",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/save-sets.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/database_save.png",
                hidden: pui.isCloud,
                handler: function () {
                    pui.ide.saveWidgetSets(true, true, function (r) {
                        if (r == "modified") {
                            R.designer.selection.clear();
                            Ext.MessageBox.show({
                                title: "Server Data Changed",
                                icon: Ext.MessageBox.WARNING,
                                msg: 'The server data file has changed since it was last loaded.<br />Click "Reload" to reload, overwriting local changes.<br />Click "Save Anyway" to overwrite the server data file.',
                                buttons: {yes: "Save Anyway", no: "Reload", cancel: true},
                                fn: function (k) {
                                    if (k == "no") pui.ide.su(); else k == "yes" && pui.ide.saveWidgetSets(true)
                                }
                            })
                        } else r !=
                        null && Ext.MessageBox.show({
                            title: "Error",
                            msg: r,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        })
                    })
                }
            }]
        }), listeners: {
            render: function (r) {
                function k() {
                    var t = Ext.getCmp("widgetsPanel"), u = t.pz;
                    delete t.pz;
                    if (u && u != "widgetSets") (u = Ext.getCmp(u)) && t.setActiveTab(u)
                }

                var q;
                if (!pui.isCloud && typeof localStorage["pui-widget-sets"] != "undefined") try {
                    q = JSON.parse(localStorage["pui-widget-sets"]).sets
                } catch (s) {
                }
                q ? setTimeout(function () {
                    for (var t = 0; t < q.length; t++) {
                        var u = q[t];
                        pui.ide.Po(u.name, u.widgets)
                    }
                    if (r.items.getCount() >
                        0) {
                        t = r.items.itemAt(0);
                        t.collapse();
                        t.expand()
                    }
                    Ext.getCmp("widgetSets").doLayout();
                    k()
                }, 0) : pui.ide.su(k)
            }, activate: function (r) {
                r.doLayout()
            }
        }
    });
    h = pui.nodedesigner ? pui.PROFOUNDJS_DIR : pui.DOCUMENT_ROOT;
    if (pui.isCloud) h = pui.cloud.ws.SERVER_DIR;
    if (h.charAt(h.length - 1) == pui.dirSeparator) h = h.substr(0, h.length - 1);
    g = ["Show Hidden:", new Ext.Toolbar.Spacer, new Ext.form.RadioGroup({
        width: 80,
        id: "pui-hidden-HideOrShow",
        items: [new Ext.form.Radio({
            value: true, boxLabel: "Yes", name: "pui-hidden-HideOrShow", listeners: {
                check: function () {
                    var r =
                        Ext.getCmp("fileTree").getRootNode(), k = Ext.getCmp("pui-hidden-HideOrShow").getValue().value;

                    function q(s) {
                        if (s && s.hasChildNodes()) for (var t = 0; t < s.childNodes.length; t++) {
                            var u = s.childNodes[t];
                            if (u.attributes.isHidden == true) u.ui.wrap.style.display = k ? "list-item" : "none"; else u.hasChildNodes() && q(u)
                        }
                    }

                    q(r)
                }
            }
        }), new Ext.form.Radio({value: false, boxLabel: "No", checked: true, name: "pui-hidden-HideOrShow"})],
        style: {"padding-top": "3px"}
    }), {xtype: "tbfill"}, new Ext.Button({
        text: "Collapse All", tooltip: "Collapse All Folders",
        handler: function () {
            var r = Ext.getCmp("fileTree").getRootNode();

            function k(q) {
                if (q && q.hasChildNodes()) for (var s = 0; s < q.childNodes.length; s++) {
                    var t = q.childNodes[s];
                    t.expanded && t.collapse();
                    t.hasChildNodes() && k(t)
                }
            }

            k(r)
        }, style: {border: "1px solid black"}
    })];
    var o = new Ext.tree.TreePanel({
        id: "fileTree",
        title: "Files",
        tbar: new Ext.Toolbar({items: g}),
        autoScroll: true,
        containerScroll: true,
        enableDD: true,
        bodyStyle: {padding: "5px"},
        root: new Ext.tree.AsyncTreeNode({
            id: h, text: pui.isCloud ? "Workspace Files" : h, cls: "x-tree-node-expanded",
            expanded: true, draggable: false, listeners: {contextmenu: b}
        }),
        listeners: {
            append: function (r, k, q) {
                r = false;
                if (!r && q && q.attributes) r = q.attributes.isHidden || false;
                if (r) {
                    r = Ext.getCmp("pui-hidden-HideOrShow").getValue().value;
                    q.ui.node.hidden = !r
                }
                q.leaf == true && q.on("dblclick", function (s) {
                    var t = s.ownerTree.root.id, u = s.id.replace(t, "");
                    s = u.substr(u.lastIndexOf(pui.dirSeparator) + 1);
                    if (s.match(pui["text file name pattern"])) {
                        var w = Ext.getCmp("centerPanel"), v, E = t + u;
                        w.items.each(function (F) {
                            var D = F.ma, B = F.currentDisplay;
                            if (F.root) D = F.root + D;
                            if (F.fileTab == true && E === D) {
                                v = F;
                                return false
                            } else if (B) if (B.ifsFile === E) {
                                v = F;
                                return false
                            }
                        });
                        if (v) {
                            w.setActiveTab(v);
                            t = v.items.items[0];
                            typeof t === "object" && t.collapsed === true && typeof t.expand === "function" && t.expand()
                        } else {
                            var y = {ifsFile: E, url: E, root: t};
                            if (!R) {
                                R = new pui.designer.ik;
                                R.hide()
                            }
                            s.match(/.+\.(json|txt)$/i) ? R.uj(y, function (F) {
                                var D = pui.ide.od(), B;
                                if (F.Fj) {
                                    y.onsuccess = function () {
                                        B.ka = pui.ka;
                                        B.C = {
                                            formats: pui.designer.C.formats,
                                            comments: pui.designer.C.comments,
                                            global: pui.designer.C.global
                                        };
                                        pui.ide.pd(y, function (I) {
                                            if (I.success) {
                                                I = I.data;
                                                if (I.mtime) B.lastModified = I.mtime; else if (I.changed) B.lastModified = I.changed;
                                                B.Vb = y
                                            }
                                        })
                                    };
                                    y.onfail = function () {
                                        w.remove(B, true);
                                        w.setActiveTab(w.insert(D.index, pui.ide.Bd()));
                                        pui.ide.Qb();
                                        Ext.getCmp("RecFormatsTabPanel").setActiveTab(0)
                                    };
                                    if (D.Da) {
                                        w.remove(D.Da, true);
                                        B = w.insert(D.index, pui.ide.Bd())
                                    } else B = w.add(pui.ide.Bd());
                                    w.setActiveTab(B);
                                    R.open(y)
                                } else pui.ide.Td(u, null, function (I) {
                                    var z = pui.ide.od();
                                    if (z.Da) {
                                        w.remove(z.Da, true);
                                        w.setActiveTab(w.insert(z.index,
                                            I))
                                    } else w.setActiveTab(w.add(I));
                                    pui.ide.pd(y, function (H) {
                                        if (H.success) {
                                            I.lastModified = H.data.mtime;
                                            I.Vb = y
                                        }
                                    })
                                })
                            }) : pui.ide.Td(u, null, function (F) {
                                var D = pui.ide.od();
                                if (D.Da) {
                                    w.remove(D.Da, true);
                                    w.setActiveTab(w.insert(D.index, F))
                                } else w.setActiveTab(w.add(F));
                                pui.ide.pd(y, function (B) {
                                    if (B.success) {
                                        F.lastModified = B.data.mtime;
                                        F.Vb = y
                                    }
                                })
                            })
                        }
                    }
                });
                q.on("contextmenu", b)
            }, movenode: function (r, k, q, s) {
                r.body.mask();
                var t = r.root.id, u = q.id.replace(t, "") + pui.dirSeparator + k.text,
                    w = s.id.replace(t, "") + pui.dirSeparator +
                        k.text;
                Ext.Ajax.request({
                    url: cc("PUI0001122.pgm"),
                    method: "POST",
                    params: {
                        mode: "rename",
                        old: u,
                        "new": w,
                        workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
                    },
                    success: function (v) {
                        r.body.unmask();
                        v = JSON.parse(v.responseText);
                        if (v.success == false) Ext.MessageBox.show({
                            title: "Error",
                            msg: v.error,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR,
                            fn: function () {
                                var E = s.id;
                                q.reload(function () {
                                    var y = r.getNodeById(E);
                                    y && setTimeout(function () {
                                        y.reload()
                                    }, 0)
                                })
                            }
                        }); else {
                            if (pui.isCloud && v.settings) pui.cloud.ws.settings =
                                v.settings;
                            s.reload();
                            pui.ide.Mq(u, w, !k.isLeaf())
                        }
                    },
                    failure: function (v) {
                        r.body.unmask();
                        Ext.MessageBox.show({
                            title: "Error",
                            msg: "HTTP " + v.status + " - " + v.statusText,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR,
                            fn: function () {
                                var E = s.id;
                                q.reload(function () {
                                    var y = r.getNodeById(E);
                                    y && y.reload()
                                })
                            }
                        })
                    }
                })
            }, nodedragover: function (r) {
                if (r.point != "append" || r.target == r.dropNode.parentNode) return false
            }, afterrender: function (r) {
                r.Fr = new Ext.ProgressBar({renderTo: r.body, text: "Upload progress", hidden: true})
            }
        },
        loader: new Ext.tree.TreeLoader({
            dataUrl: "/profoundui/pui0001117.pgm",
            nodeParameter: "dir",
            baseParams: {
                type: "*",
                workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : "",
                filestree: "1"
            },
            listeners: {
                beforeload: function () {
                    o.body.mask()
                }, load: function (r, k, q) {
                    o.body.unmask();
                    r = JSON.parse(q.responseText);
                    if (r.success === false) Ext.MessageBox.show({
                        title: "Error",
                        msg: r.errorText + "<br />" + r.errorText2,
                        buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.ERROR
                    }); else {
                        k.attributes.bn = r.isGitRepo == true;
                        r = r.data;
                        q = [];
                        r.sort(function (B, I) {
                            if (B.dir && !I.dir) return -1;
                            if (!B.dir && I.dir) return 1;
                            var z = B.name ? B.name.toLowerCase() : "", H = I.name ? I.name.toLowerCase() : "";
                            if (z < H) return -1;
                            if (z < H) return 1;
                            return 0
                        });
                        if (pui.isCloud) {
                            var s = pui.cloud.ws.settings, t = s["app start"];
                            if (typeof t !== "string") t = "";
                            s = s.routes;
                            if (typeof s !== "object") s = {};
                            if (pui.dirSeparator !== "/") t = t.replace(/\//g, pui.dirSeparator);
                            t = pui.cloud.ws.SERVER_DIR + pui.dirSeparator + t;
                            t = t.toLowerCase()
                        }
                        for (var u = 0; u < r.length; u++) {
                            var w = r[u];
                            if (!(w.dir == true && (w.name ==
                                "." || w.name == ".."))) {
                                var v = k.id + pui.dirSeparator + w.name, E = w.name, y = "", F = w.isHidden;
                                if (!w.dir) {
                                    y = "file-default";
                                    var D = "";
                                    D = w.name.lastIndexOf(".");
                                    if (D > 0) {
                                        D = w.name.substring(D + 1);
                                        switch (D.toLowerCase()) {
                                            case "ai":
                                            case "bmp":
                                            case "gif":
                                            case "ico":
                                            case "jpg":
                                            case "jpeg":
                                            case "png":
                                            case "ps":
                                            case "psd":
                                            case "svc":
                                            case "tif":
                                            case "tiff":
                                                y = "file-img";
                                                break;
                                            case "js":
                                                y = "file-js";
                                                break;
                                            case "json":
                                                y = "file-json";
                                                break;
                                            case "css":
                                                y = "file-css";
                                                break;
                                            case "md":
                                                y = "file-md";
                                                break;
                                            case "txt":
                                                y = "file-txt";
                                                break;
                                            case "ejs":
                                                y = "file-ejs";
                                                break;
                                            case "htm":
                                            case "html":
                                                y = "file-html";
                                                break
                                        }
                                    }
                                    if (pui.isCloud) if (v.toLowerCase() === t) y = "file-start"; else {
                                        D = v.substr(pui.cloud.ws.SERVER_DIR.length + 1);
                                        if (pui.dirSeparator !== "/") D = D.replace(/\\/g, "/");
                                        if (s[D]) y = "file-rest"
                                    }
                                }
                                v = {id: v, text: E, leaf: w.dir != true, isHidden: F, cls: y, icon: "", qtip: ""};
                                if (w.isGitRepo == true) v.bn = true;
                                q.push(v)
                            }
                        }
                        k.appendChild(q)
                    }
                }, loadexception: function (r, k, q) {
                    o.body.unmask();
                    Ext.MessageBox.show({
                        title: "Error", msg: "HTTP " + q.status + " - " + q.statusText, buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.ERROR
                    })
                }
            }
        })
    }), i = new Ext.tree.TreeEditor(o, {
        allowBlank: false,
        blankText: "A value is required",
        selectOnFocus: true,
        validator: function (r) {
            return pui.ide.$v(r, i.editNode.leaf != true)
        }
    }, {
        ignoreNoChange: true, listeners: {
            beforestartedit: function (r) {
                if (r.editNode.isRoot == true) return false
            }, complete: function (r, k, q) {
                o.body.mask();
                var s = r.editNode;
                r = s.parentNode.id.replace(s.ownerTree.root.id, "");
                var t = r + pui.dirSeparator + q, u = r + pui.dirSeparator + k;
                Ext.Ajax.request({
                    url: cc("PUI0001122.pgm"), method: "POST",
                    params: {
                        mode: "rename",
                        old: t,
                        "new": u,
                        workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
                    }, success: function (w) {
                        o.body.unmask();
                        w = JSON.parse(w.responseText);
                        if (w.success == false) Ext.MessageBox.show({
                            title: "Error",
                            msg: w.error,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR,
                            fn: function () {
                                s.parentNode.reload()
                            }
                        }); else {
                            if (pui.isCloud && w.settings) pui.cloud.ws.settings = w.settings;
                            s.parentNode.reload();
                            pui.ide.Mq(t, u, !s.isLeaf())
                        }
                    }, failure: function (w) {
                        o.body.unmask();
                        Ext.MessageBox.show({
                            title: "Error",
                            msg: "HTTP " + w.status + " - " + w.statusText,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR,
                            fn: function () {
                                s.parentNode.reload()
                            }
                        })
                    }
                })
            }
        }
    });
    f = [n, f, o, pui.ide.zF()];
    pui.gitSupport && f.push(pui.ide.LG());
    return new Ext.TabPanel({
        id: "widgetsPanel",
        region: "west",
        border: true,
        width: Kd.get("widgetsPanelWidth", "") == "" ? 315 : Kd.get("widgetsPanelWidth", ""),
        margins: "0 0 0 0",
        split: true,
        collapseMode: "mini",
        animCollapse: true,
        items: f,
        enableTabScroll: true,
        activeTab: 0,
        pz: pui.isCloud ? "fileTree" : Kd.get("widgetsActiveTab",
            "widgetSets"),
        listeners: {
            bodyresize: function (r, k) {
                Kd.set("widgetsPanelWidth", k);
                Kd.save()
            }, tabchange: function (r, k) {
                var q = Ext.getCmp("widgetSets");
                if (k == q) if (q = q.find("collapsed", false)[0]) {
                    q.collapse();
                    q.expand()
                }
                Kd.set("widgetsActiveTab", k ? k.id : null);
                Kd.save();
                if (q = Ext.getCmp("centerPanel").activeTab) q.ew = Kd.get("widgetsActiveTab")
            }
        }
    })
};
var Ld = [], Md;
pui.ide.XF = function (b) {
    var a = Ext.getCmp("treePanel");
    if (Md == undefined) Md = new Ext.tree.TreeFilter(a, {clearBlank: true, autoClear: true});
    b = b.target.value;
    b = Zb(b);
    Ext.each(Ld, function (d) {
        d.bubble(function () {
            this.ui.show()
        });
        d.ui.show()
    });
    if (!b || b == "Find Widget") Md.clear(); else {
        a.expandAll();
        var c = RegExp(Ext.escapeRe(b), "i");
        Md.filterBy(function (d) {
            return !d.isLeaf() || c.test(d.text)
        });
        Ld = [];
        a.root.cascade(function (d) {
            if (!d.isLeaf() && d.ui.ctNode.offsetHeight < 3) {
                d.ui.hide();
                Ld.push(d)
            }
        })
    }
};
pui.ide.II = function () {
    function b() {
        var e = a.getSelectionModel().getSelectedNode();
        d.editNode = e;
        splitText = tc(e.ui.textNode).split(" - ");
        e.ui.textNode.innerHTML = splitText[0];
        d.startEdit(e.ui.textNode);
        if (pui.nodedesigner && pui.pjsDefaultMode === "compatibility") d.el.dom.firstChild.style.textTransform = "lowercase"
    }

    Ext.tree.DefaultSelectionModel.override({onKeyDown: Ext.emptyFn});
    var a = new Ext.tree.TreePanel({
        id: "recordFormatTree",
        title: pui.viewdesigner || pui.nodedesigner ? "Screens" : "Record Formats",
        autoScroll: true,
        containerScroll: true,
        rootVisible: false,
        split: true,
        animate: true,
        border: true,
        root: new Ext.tree.AsyncTreeNode({text: "Root"}),
        tbar: [{
            tooltip: "Add " + (pui.nodedesigner ? "Screen" : "Record Format"),
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/add.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/add.png",
            handler: function () {
                rd.add()
            }
        }, {
            tooltip: "Remove " + (pui.nodedesigner ? "Screen" : "Record Format"),
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/remove-1.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/delete.png",
            handler: function () {
                rd.remove();
                pui.ide.lh()
            }
        }, {
            tooltip: "Edit Name",
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/edit.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/pencil.png",
            handler: b
        }, "-", {
            id: "_Copy_Record_Format",
            tooltip: "Copy Entire Screen",
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/copy.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/page_copy.png",
            handler: function () {
                rd.copy();
                Ext.getCmp("_Paste_Record_Format").setDisabled(false)
            }
        },
            {
                id: "_Paste_Record_Format",
                tooltip: "Paste Screen",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/paste.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/paste.png",
                disabled: true,
                handler: function () {
                    rd.nA()
                }
            }, "-", {
                tooltip: "Move Up",
                icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/up.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/move-up.gif",
                handler: function () {
                    rd.Cu() && pui.ide.lh()
                }
            }, {
                tooltip: "Move Down", icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/down.png" :
                    "/profoundui/proddata/images/dspfdesigner/icons16x16/move-down.gif", handler: function () {
                    rd.Au() && pui.ide.lh()
                }
            }]
    }), c = {tag: "input", type: "text"};
    if (!pui.viewdesigner && !pui.nodedesigner) c.maxlength = 10;
    var d = new Ext.tree.TreeEditor(a, {
        allowBlank: false,
        blankText: "A name is required",
        autoCreate: c,
        selectOnFocus: true
    }, {
        completeOnEnter: true, beforeNodeClick: function (e) {
            if (a.getSelectionModel().isSelected(e)) {
                e = false;
                if (R.designer.selection.e.length == 1) if (R.designer.selection.e[0].c.dom.grid != null) e = true;
                if (!e) {
                    R.designer.selection.clear();
                    R.designer.k.refresh()
                }
                return false
            }
        }, onNodeDblClick: function (e) {
            a.getSelectionModel().isSelected(e) && b()
        }, listeners: {
            beforecomplete: function (e, f, h) {
                if (f != "" && h != f) {
                    f = S.wa(f, "format");
                    if (f != "") {
                        e.field.markInvalid("Name " + f);
                        return false
                    }
                }
            }, complete: function (e, f, h) {
                if (f != "" && h != f) {
                    if (pui.nodedesigner && pui.pjsDefaultMode === "compatibility") f = f.toLowerCase();
                    h = e.editNode;
                    e = R.designer.i.l;
                    R.designer.X[e] = true;
                    h = R.designer.kb[h.Vy];
                    if (h != null) {
                        R.designer.n.start("Change Grid Name");
                        R.designer.n.add(h,
                            "record format name");
                        h.properties["record format name"] = f;
                        h.m["record format name"] = true
                    } else {
                        R.designer.n.start("Change Screen Name");
                        R.designer.n.Sw(R.designer, "record format name");
                        R.designer.i.name = f;
                        R.designer.Ga[e]["record format name"] = f;
                        R.designer.Nd[e]["record format name"] = true
                    }
                    R.designer.k.refresh();
                    R.designer.qb();
                    pui.ide.refreshRibbon();
                    pui.ide.Qb();
                    setTimeout(function () {
                        rd.refresh()
                    }, 0)
                }
            }
        }
    });
    return new Ext.TabPanel({
        frame: false,
        id: "RecFormatsTabPanel",
        border: false,
        defaults: {hideBorders: true},
        tabWidth: 100,
        region: "north",
        deferredRender: true,
        height: 200,
        tabPosition: "top",
        enableTabScroll: true,
        activeTab: 0,
        split: true,
        listeners: {
            tabchange: function (e, f) {
                if (f.title == "Fields") pui.ide.zg(f); else f.title == "Elements" && pui.ide.He(f)
            }
        },
        items: [a, {title: "Fields", layout: "fit", items: pui.ide.WF()}, {
            title: "Elements",
            layout: "fit",
            items: pui.ide.NF()
        }]
    })
};
pui.ide.WF = function () {
    var b = new Ext.data.ArrayReader({}, [{name: "fieldName"}, {name: "dataType"}, {name: "dataLength"}, {name: "decPos"}, {name: "whereUsed"}, {name: "fieldId"}, {name: "fieldType"}, {name: "property"}, {name: "recordFormat"}]);
    b = new Ext.data.GroupingStore({
        autoDestroy: true,
        reader: b,
        sortInfo: {field: "fieldName", direction: "ASC"},
        groupField: "recordFormat"
    });
    return new Ext.grid.GridPanel({
        id: "fieldsGrid",
        store: b,
        autoExpandColumn: "fieldName",
        border: true,
        frame: false,
        autoScroll: true,
        stripeRows: true,
        view: new Ext.grid.GroupingView({
            forceFit: true,
            showGroupName: false,
            hideGroupedColumn: true,
            groupTextTpl: '{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Items" : "Item"]})'
        }),
        sm: new Ext.grid.RowSelectionModel({singleSelect: true}),
        listeners: {
            afterrender: function (a) {
                a.getSelectionModel().rowNav.disable()
            }, rowclick: function (a) {
                R.designer.selection.clear();
                a = a.getSelectionModel().getSelected();
                a = document.getElementById(a.data.fieldId);
                if (a = R.designer.$d(a)) if (a.dom.style.visibility == "hidden") {
                    var c = a.properties["parent tab panel"], d = a.properties["parent tab"];
                    if (c != null && c != "") {
                        c = Tb(c);
                        if (c != null) {
                            c = c.tabPanel;
                            c.selectedTab = d;
                            c.H()
                        }
                    }
                } else if (a.de() && a.bb().g.style.visibility == "hidden") {
                    d = a.dom.parentNode.parentNode.c;
                    c = d.properties["parent tab panel"];
                    d = d.properties["parent tab"];
                    if (c != null && c != "") {
                        c = Tb(c);
                        if (c != null) {
                            c = c.tabPanel;
                            if (c.selectedTab != d) {
                                c.selectedTab = d;
                                c.H()
                            }
                        }
                    }
                }
                if (a) {
                    R.designer.selection.add(a);
                    a.designer.k.refresh()
                } else {
                    R.designer.selection.clear();
                    R.designer.k.refresh()
                }
            }, rowdblclick: function (a, c, d) {
                R.designer.selection.clear();
                c = a.getStore().getAt(c);
                a = c.data.property;
                var e = c.data.fieldId;
                c = null;
                if (e == "Screen") c = pc(); else {
                    e = document.getElementById(e);
                    R.designer.selection.add(R.designer.$d(e))
                }
                R.designer.k.refresh();
                R.designer.k.he(a, c, true, d.browserEvent);
                R.designer.k.za.Wj()
            }
        },
        columns: [{
            id: "fieldName",
            sortable: true,
            header: "<b>Field Name</b>",
            width: 90,
            dataIndex: "fieldName",
            menuDisabled: true,
            renderer: function (a, c, d) {
                c.attr = "ext:qtip='" + a + "' ext:qtitle='Field Name'";
                return String.format("<b>{0}</b>", d.data.fieldName)
            }
        }, {
            header: "Data Type", sortable: true,
            width: 90, dataIndex: "dataType", menuDisabled: true, renderer: function (a, c, d) {
                c = a = "";
                if (d.data.decPos) c = ", {2}";
                if (d.data.dataLength) a = " ({1}" + c + ")";
                return String.format("{0}" + a, d.data.dataType, d.data.dataLength, d.data.decPos)
            }
        }, {
            header: "Where Used",
            sortable: true,
            width: 90,
            dataIndex: "whereUsed",
            menuDisabled: true,
            renderer: function (a, c) {
                c.attr = "ext:qtip='" + a + "' ext:qtitle='Where Used'";
                return a
            }
        }, {header: "Record Format", hidden: true, dataIndex: "recordFormat", width: 20, menuDisabled: true}]
    })
};
pui.ide.zg = function (b) {
    if ((b ? b : Ext.getCmp("RecFormatsTabPanel").getActiveTab()).title == "Fields") {
        b = Ext.getCmp("fieldsGrid").getStore();
        b.removeAll();
        var a = R.designer.D.Dp(), c = R.designer.kb, d = [], e, f, h, g, l;
        for (field in a) {
            l = a[field].Q[0].property;
            if (typeof a[field].Q[0].c == "object") {
                e = a[field].Q[0].c.properties.id;
                h = a[field].Q[0].c.properties["field type"]
            } else {
                e = a[field].Q[0].c;
                h = a[field].Q[0].c
            }
            g = l == "value" || l == "response" ? e : h == "html container" && l == "html" ? e : e + " (" + l + ")";
            for (var n = 1; n < a[field].Q.length; n++) {
                g +=
                    ", ";
                l = a[field].Q[n].property;
                f = a[field].Q[n].c == "Screen" ? "Screen" : a[field].Q[n].c.properties.id;
                g += l == "value" || l == "response" ? f : h == "html container" && l == "html" ? f : f + " (" + l + ")"
            }
            f = R.designer.Ga[0]["record format name"];
            if (f == null || f == "") f = "[Unnamed Screen]";
            l = a[field].fieldName;
            if (pui.designer.Ea && a[field].longName != null) l = pui.ca(a[field].longName);
            if (pui.nodedesigner && pui.pjsDefaultMode === "compatibility") l = l.toLowerCase();
            var o = pui.Wb(f);
            if (pui.nodedesigner && pui.pjsDefaultMode === "compatibility") o = o.toLowerCase();
            d.push([l, a[field].dataType, a[field].dataLength, a[field].decPos, g, e, h, a[field].Q[0].property, o])
        }
        for (n = 0; n < c.length; n++) {
            a = c[n].dom.grid.D.Dp();
            f = c[n].properties["record format name"];
            if (f == null || f == "") f = pui.nodedesigner ? "[Unnamed Grid]" : "[Unnamed Subfile]";
            for (field in a) {
                l = a[field].Q[0].property;
                e = a[field].Q[0].c.properties.id;
                g = l == "value" || l == "response" ? e : a[field].Q[0].c.properties["field type"] == "html container" && l == "html" ? e : e + " (" + l + ")";
                for (h = 1; h < a[field].Q.length; h++) {
                    g += ", ";
                    l = a[field].Q[h].property;
                    e = a[field].Q[h].c.properties.id;
                    g += l == "value" || l == "response" ? e : a[field].Q[h].c.properties["field type"] == "html container" && l == "html" ? e : e + " (" + l + ")"
                }
                l = a[field].fieldName;
                if (pui.designer.Ea && a[field].longName != null) l = pui.ca(a[field].longName);
                if (pui.nodedesigner && pui.pjsDefaultMode === "compatibility") l = l.toLowerCase();
                o = pui.Wb(f);
                if (pui.nodedesigner && pui.pjsDefaultMode === "compatibility") o = o.toLowerCase();
                d.push([l, a[field].dataType, a[field].dataLength, a[field].decPos, g, a[field].Q[0].c.properties.id,
                    a[field].Q[0].c.properties["field type"], a[field].Q[0].property, o])
            }
        }
        b.loadData(d)
    }
};
pui.ide.NF = function () {
    function b(d) {
        var e = document.getElementById(d.data.id);
        e = R.designer.$d(e);
        if (e == null) e = R.designer.vy(d.data.id);
        return e
    }

    var a = new Ext.data.Store({
        autoDestroy: true,
        reader: new Ext.data.JsonReader({
            root: "data",
            fields: [{name: "id"}, {name: "icon"}, {name: "type"}, {name: "value"}, {name: "parent"}]
        })
    }), c = new Ext.grid.GridPanel({
        id: "elementsGrid",
        border: true,
        frame: false,
        autoScroll: true,
        store: a,
        stripeRows: true,
        viewCfg: {forceFit: true},
        enableDragDrop: true,
        ddGroup: "ElGridDD",
        ddText: "Drop item into a layout",
        listeners: {
            afterrender: function (d) {
                d.getSelectionModel().rowNav.disable()
            }, render: function (d) {
                d.dropZone = new Ext.dd.DropZone(d.getView().scroller, {
                    ddGroup: "ElGridDD", getTargetFromEvent: function (e) {
                        function f() {
                            R.designer.nd = null;
                            R.designer.Aa.style.display = "none";
                            return null
                        }

                        e = e.getTarget(d.getView().rowSelector);
                        var h = d.getView().findRowIndex(e);
                        if (h === false) return f();
                        h = d.getStore().getAt(h);
                        if (!d.getSelectionModel().hasSelection()) return f();
                        var g = d.getSelectionModel().getSelected();
                        if (g.id == h.id) return f();
                        h = b(h);
                        g = b(g);
                        if (h.properties["field type"] != "layout") return f();
                        var l = g.qf();
                        if (l && l.na == h.dom) return f();
                        if (g.dom.contains(h.dom)) return f();
                        return e
                    }, onNodeEnter: function (e, f, h, g) {
                        f = R.designer;
                        e = d.getView().findRowIndex(e);
                        e = d.getStore().getAt(e);
                        e = b(e).dom.layout;
                        h = f.Jp(e);
                        e = pui.layout.Ly(e, h);
                        h = e.left;
                        var l = e.top;
                        if (pui.designer.fa != null) {
                            h += pui.designer.Bp(R.designer.b);
                            l += pui.designer.Cp(R.designer.b)
                        }
                        f.Aa.style.top = l + "px";
                        f.Aa.style.left = h + "px";
                        f.Aa.style.height = e.height + "px";
                        f.Aa.style.width =
                            e.width + "px";
                        f.Aa.style.display = "";
                        g = d.getStore().getAt(g.rowIndex);
                        g = b(g);
                        f.Z.style.top = e.top + "px";
                        f.Z.style.left = e.left + "px";
                        f.Z.style.width = g.dom.offsetWidth + "px";
                        f.Z.style.height = g.dom.offsetHeight + "px";
                        if (g.xe() || g.de() || !g.Cj(f.Aa)) f.Z.style.display = ""
                    }, onNodeOut: function () {
                        R.designer.Aa.style.display = "none";
                        R.designer.Z.style.display = "none"
                    }, onNodeOver: function () {
                        return Ext.dd.DropZone.prototype.dropAllowed
                    }, onNodeDrop: function (e, f, h, g) {
                        f = R.designer;
                        e = d.getView().findRowIndex(e);
                        e = d.getStore().getAt(e);
                        g = d.getStore().getAt(g.rowIndex);
                        e = b(e);
                        g = b(g);
                        f.nd = f.Jp(e.dom.layout);
                        f.Aa.style.display = "";
                        if (g.dom.grid && (g.xe() || !g.Cj(f.Aa))) {
                            var l = pui.Rc(g.dom.style.top) - pui.Rc(f.Z.style.top),
                                n = pui.Rc(g.dom.style.left) - pui.Rc(f.Z.style.left);
                            g.dom.grid.Wd(function (o) {
                                o.style.top = pui.Rc(o.style.top) - l + "px";
                                o.style.left = pui.Rc(o.style.left) - n + "px"
                            })
                        } else if (!g.xe() && !g.de() && !g.Cj(f.Aa)) {
                            g.dom.style.top = f.Z.style.top;
                            g.dom.style.left = f.Z.style.left
                        }
                        f.Aa.style.display = "none";
                        g.dom.grid ? g.dom.grid.Uz() : pui.designer.Wz(g,
                            g.de(), g.xe());
                        return true
                    }
                })
            }, rowclick: function (d) {
                if (d.getSelectionModel().hasSelection()) {
                    d = d.getSelectionModel().getSelected();
                    var e, f;
                    R.designer.selection.clear();
                    if (d = b(d)) {
                        if (d.dom.style.visibility == "hidden") {
                            e = d.properties["parent tab panel"];
                            f = d.properties["parent tab"];
                            if (e != null && e != "") {
                                e = Tb(e);
                                if (e != null) {
                                    e = e.tabPanel;
                                    e.selectedTab = f;
                                    e.H()
                                }
                            }
                        } else if (d.de() && d.bb().g.style.visibility == "hidden") {
                            f = d.dom.parentNode.parentNode.c;
                            e = f.properties["parent tab panel"];
                            f = f.properties["parent tab"];
                            if (e != null && e != "") {
                                e = Tb(e);
                                if (e != null) {
                                    e = e.tabPanel;
                                    if (e.selectedTab != f) {
                                        e.selectedTab = f;
                                        e.H()
                                    }
                                }
                            }
                        }
                        R.designer.selection.add(d);
                        d.designer.k.refresh()
                    }
                }
            }
        },
        sm: new Ext.grid.RowSelectionModel({
            singleSelect: true, listeners: {
                rowselect: function (d, e, f) {
                    d = c.getTopToolbar();
                    d.items.items[2].enable();
                    d.items.items[3].enable();
                    d.items.items[5].enable();
                    f = b(f);
                    f.xe() || f.de() ? d.items.items[7].enable() : d.items.items[7].disable()
                }, rowdeselect: function () {
                    var d = c.getTopToolbar(), e = d.items.items[2], f = d.items.items[3],
                        h = d.items.items[5];
                    d = d.items.items[7];
                    h.disable();
                    e.disable();
                    f.disable();
                    d.disable();
                    if (pui.is_old_ie) {
                        h.getEl().setOpacity(1);
                        e.getEl().setOpacity(1);
                        f.getEl().setOpacity(1);
                        d.getEl().setOpacity(1)
                    }
                }
            }
        }),
        columns: [{
            id: "id", header: "<b>ID</b>", width: 80, dataIndex: "id", renderer: function (d, e, f) {
                e.attr = "ext:qtip='" + d + "' ext:qtitle='ID'";
                d = String.format("<b>{0}</b>", f.data.id);
                f = f.get("level");
                if (f == null) f = 0;
                for (e = 1; e <= f; e++) d = "&nbsp;&nbsp;&nbsp;" + d;
                return d
            }
        }, {
            header: "Type", width: 90, dataIndex: "type", renderer: function (d,
                                                                              e) {
                e.attr = "ext:qtip='" + d + "' ext:qtitle='Field Type'";
                return d
            }
        }, {
            header: "Value", width: 90, dataIndex: "value", renderer: function (d, e) {
                e.attr = "ext:qtip='" + d + "' ext:qtitle='Value'";
                return d
            }
        }],
        tbar: [{
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/auto-arrange.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/auto-arrange.png",
            tooltip: "Auto Arrange by Element Position",
            handler: function () {
                R.designer.selection.clear();
                R.designer.Wa();
                pui.ide.He();
                pui.ide.lh()
            }
        }, "-", {
            icon: pui.flatlook ?
                "/profoundui/proddata/images/FlatIcons/16x16/up.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/move-up.gif",
            disabled: true,
            tooltip: "Move Up",
            handler: function () {
                if (c.getSelectionModel().hasSelection()) {
                    var d = c.getSelectionModel().getSelected(), e = R.designer.items,
                        f = document.getElementById(d.data.id);
                    f = R.designer.$d(f);
                    if (f == null) f = R.designer.vy(d.data.id);
                    e = e.indexOf(f);
                    e = R.designer.Cu(e);
                    if (e == true) {
                        f = c.getStore();
                        var h = f.indexOf(d) - 1;
                        f.remove(d);
                        f.insert(h, d);
                        c.getSelectionModel().selectRow(h);
                        c.getView().focusRow(h);
                        pui.ide.lh()
                    }
                    if (e == "refresh") {
                        pui.ide.He();
                        d = c.getStore().findExact("id", d.data.id);
                        c.getSelectionModel().selectRow(d);
                        c.getView().focusRow(d);
                        pui.ide.lh()
                    }
                }
            }
        }, {
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/down.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/move-down.gif",
            tooltip: "Move Down",
            handler: function () {
                var d = c.getSelectionModel().getSelected(), e = R.designer.items, f = b(d);
                e = e.indexOf(f);
                e = R.designer.Au(e);
                if (e == true) {
                    f = c.getStore();
                    var h = f.indexOf(d) +
                        1;
                    f.remove(d);
                    f.insert(h, d);
                    c.getSelectionModel().selectRow(h);
                    c.getView().focusRow(h);
                    pui.ide.lh()
                }
                if (e == "refresh") {
                    pui.ide.He();
                    d = c.getStore().findExact("id", d.data.id);
                    c.getSelectionModel().selectRow(d);
                    c.getView().focusRow(d);
                    pui.ide.lh()
                }
            }
        }, "-", {
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/remove-1.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/delete.png",
            tooltip: "Remove Element",
            handler: function () {
                if (c.getSelectionModel().hasSelection()) {
                    c.fireEvent("rowclick",
                        c);
                    R.designer.yf();
                    R.designer.n.Nc("Remove " + R.designer.selection.ve());
                    pui.ide.refreshRibbon()
                }
            }
        }, "-", {
            icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/top.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/percent_top.png",
            disabled: true,
            tooltip: "Move to Main Canvas",
            handler: function () {
                if (c.getSelectionModel().hasSelection()) {
                    var d = c.getSelectionModel().getSelected();
                    d = b(d);
                    var e = d.xe(), f = d.de();
                    if (e || f) {
                        R.designer.Z.style.top = "0px";
                        R.designer.Z.style.left = "0px";
                        R.designer.Z.style.right =
                            "";
                        R.designer.Z.style.bottom = "";
                        d.dom.grid ? d.dom.grid.Vz() : pui.designer.Xz(d, f);
                        pui.ide.lh()
                    }
                }
            }
        }]
    });
    return c
};
pui.ide.He = function (b) {
    var a = Ext.getCmp("RecFormatsTabPanel").getActiveTab();
    if (b) a = b;
    if (a.title == "Elements") {
        b = Ext.getCmp("elementsGrid");
        var c = b.getTopToolbar();
        a = c.items.items[2];
        var d = c.items.items[3];
        c = c.items.items[5];
        c.disable();
        a.disable();
        d.disable();
        if (pui.is_old_ie) {
            c.getEl().setOpacity(1);
            a.getEl().setOpacity(1);
            d.getEl().setOpacity(1)
        }
        b = b.getStore();
        b.removeAll();
        var e = R.designer.items, f = {};
        c = {};
        var h = {data: []};
        a = [];
        var g = {};
        for (d = 0; d < e.length; d++) {
            f = e[d];
            if (f.de()) a.push(f); else if (f.xe()) {
                var l =
                    "level " + f.Rm();
                if (g[l] == null) g[l] = [];
                g[l].push(f)
            } else {
                c = f.properties;
                h.data = [{
                    id: c.id,
                    icon: "",
                    type: c["field type"],
                    value: pui.f(c.value) || pui.Ia(c.value) ? c.value.designValue : c.value
                }];
                b.loadData(h, true)
            }
        }
        e = Ext.data.Record.create([{name: "id"}, {name: "icon"}, {name: "type"}, {name: "value"}, {name: "parent"}, {name: "level"}]);
        for (h = 1; h < 9999; h++) {
            l = "level " + h;
            l = g[l];
            if (l == null) break;
            for (d = 0; d < l.length; d++) {
                f = l[d];
                c = f.properties;
                f = f.qf().na.id;
                f = b.findExact("id", f);
                var n = b.getAt(f).get("id"), o = b.query("parent",
                    n).getCount();
                f = f + 1;
                if (o != 0) f += o;
                c = new e({
                    id: c.id,
                    icon: "",
                    type: c["field type"],
                    value: pui.f(c.value) || pui.Ia(c.value) ? c.value.designValue : c.value,
                    parent: n,
                    level: h
                });
                b.insert(f, [c])
            }
        }
        for (d = 0; d < a.length; d++) {
            f = a[d];
            c = f.properties;
            f = b.findExact("id", f.dom.parentNode.parentNode.id);
            h = b.getAt(f);
            g = h.get("id");
            o = b.query("parent", g).getCount();
            f = f + 1;
            if (o != 0) f += o;
            l = h.data.level;
            if (l == null) l = 0;
            l += 1;
            c = new e({
                id: c.id,
                icon: "",
                type: c["field type"],
                value: pui.f(c.value) || pui.Ia(c.value) ? c.value.designValue : c.value,
                parent: g,
                level: l
            });
            b.insert(f, [c])
        }
    }
};
pui.ide.pF = function () {
    return new Ext.Panel({
        id: "ideProps",
        title: "Properties",
        iconCls: pui.flatlook ? "propsFlat" : "properties",
        region: "center",
        height: 400,
        closable: false,
        border: true,
        split: true,
        listeners: {
            bodyresize: function (b, a, c) {
                if (R != null) {
                    R.designer.k.setWidth(a);
                    R.designer.k.setHeight(c)
                }
            }
        }
    })
};
pui.ide.ht = function () {
    function b() {
        for (var g = [], l = 0; l < c.length; l++) g.push(c[l]);
        g.sort(function (n, o) {
            var i = n.dom.c.Rm(), r = o.dom.c.Rm();
            return i > r
        });
        for (l = 0; l < g.length; l++) g[l].dom.layout.stretch()
    }

    if (R != null) {
        var a = R.designer;
        if (a != null) {
            var c = a.Nf, d = a.b, e = Ext.getCmp("centerPanel").getActiveTab();
            if (e && e.Xa) {
                var f = d.parentNode.parentNode;
                e.rj.style.width = f.offsetWidth - 2 + "px";
                e.rj.style.height = f.offsetHeight - 2 + "px";
                e.mc ? e.editor.resize() : e.editor.layout()
            }
            for (e = 0; e < d.childNodes.length; e++) {
                f = d.childNodes[e];
                var h = false;
                if (f.Rn != null && typeof f.Rn == "function") h = f.Rn();
                if (f.sizeMe != null && typeof f.sizeMe == "function") if (pui.da(f.style.width) || pui.da(f.style.height) || h) f.sizeMe()
            }
            c.length > 0 && b();
            pui.ide.rI();
            a.selection.Fb()
        }
    }
};
pui.ide.dB = function () {
    var b = Ext.getCmp("centerPanel");
    if (b.items.getCount() != 0) {
        b = b.getActiveTab().rp;
        if (pui.designer.fa != null && pui.designer.fa.firstChild != null) b._domRef = pui.designer.fa.firstChild; else if (R.designer.b != null) b._domRef = R.designer.b.parentNode.parentNode
    }
};
pui.ide.rI = function () {
    if (pui.designer.fa != null) {
        var b = pui.designer.fa.parentNode;
        if (b != null) {
            b = b.parentNode;
            if (b != null) {
                var a = parseInt((b.offsetWidth - pui.designer.fa.offsetWidth) / 2);
                if (a < 20) a = 20;
                b = parseInt((b.offsetHeight - pui.designer.fa.offsetHeight) / 2);
                if (b < 20) b = 20;
                pui.designer.fa.style.left = a + "px";
                pui.designer.fa.style.top = b + "px"
            }
        }
    }
};
pui.ide.MB = function () {
    if (!(pui.updateMessage == null || pui.updateMessage == "")) {
        var b = new Ext.Window({
            title: "Update(s) Available",
            width: 450,
            modal: true,
            resizable: false,
            closable: true,
            items: [new Ext.Panel({bodyStyle: "padding: 5px;", html: pui.updateMessage})],
            buttons: [{
                text: "OK", handler: function () {
                    b.close()
                }
            }]
        });
        b.show()
    }
};
pui.ide.it = function (b, a) {
    if (R != null) if (!Ext.getCmp("centerPanel").getActiveTab().Xa) {
        var c = a.defaults.width;
        if (c == null) c = pui.widgets[a.widget].defaults.width;
        var d = a.defaults.height;
        if (d == null) d = pui.widgets[a.widget].defaults.height;
        var e = b.xy[0], f = b.xy[1], h = e - R.designer.li() - parseInt(a.proxyWidth / 2),
            g = f - R.designer.yj() - parseInt(a.proxyHeight / 2);
        if (R.designer.selection.fc) {
            h /= pui.ac;
            h = Math.round(h);
            h *= pui.ac;
            g /= pui.Ob;
            g = Math.round(g);
            g *= pui.Ob
        }
        var l = pui.designer.gf;
        if (l.b == null) {
            l.b = document.body;
            l.init()
        }
        l.set({properties: {left: h, top: g, width: c, height: d}});
        l.show();
        c = pui.widgets[a.widget];
        if (c.oe || c.Vh) pui.designer.Xv({x: e, y: f, designer: R.designer, oe: c.oe, Vh: c.Vh})
    }
};
pui.ide.Po = function (b, a, c) {
    var d = Ext.getCmp("widgetSets");
    if (a instanceof Array) for (var e = [], f = 0; f < a.length; f++) e.push(pui.ide.Ex(a[f]));
    b = d.add(pui.ide.Gx(b, e));
    d.doLayout();
    c && b.expand()
};
pui.ide.Gx = function (b, a) {
    function c() {
        for (var d = Ext.getCmp("widgetSets"), e = [Ext.getCmp("removeWidgetSet"), Ext.getCmp("renameWidgetSet"), Ext.getCmp("moveWidgetSetUp"), Ext.getCmp("moveWidgetSetDown")], f = d.find("collapsed", false), h = (f = f.length == 1 ? f[0] : null) ? "enable" : "disable", g = 0; g < e.length; g++) e[g][h]();
        if (f) {
            e = d.items.indexOf(f);
            e == 0 && Ext.getCmp("moveWidgetSetUp").disable();
            e == d.items.getCount() - 1 && Ext.getCmp("moveWidgetSetDown").disable()
        }
    }

    return new Ext.Panel({
        title: b, layout: "column", items: a, autoScroll: true,
        sL: 235, listeners: {
            expand: c, collapse: c, render: function (d) {
                d.dragZone = new Ext.dd.DragZone(d.getEl(), {
                    autoOffset: function () {
                        pui.ide.zf ? this.setDelta(-10, 0) : this.setDelta(this.dragData.node.attributes.proxyWidth / 2 + 20, this.dragData.node.attributes.proxyHeight / 2 + 3)
                    }, ddGroup: "toolboxTree", centerFrame: true, containerScroll: true, getDragData: function (e) {
                        e = pui.ide.Rt(e);
                        if (e != null) {
                            var f = Ext.getCmp(e.id).Mb, h = JSON.parse(JSON.stringify(f.properties));
                            if (f.autoGen) {
                                var g = "Field0001";
                                if (pui.nodedesigner) g = g.toLowerCase();
                                if (typeof h.response == "object") h.response.fieldName = g;
                                if (typeof h.html == "object") {
                                    h.html.fieldName = g;
                                    h.html.designValue = "[" + h.html.fieldName + "]"
                                }
                                if (typeof h.value == "object") {
                                    h.value.fieldName = g;
                                    h.value.designValue = "[" + h.value.fieldName + "]"
                                }
                            }
                            h.value || (h.value = pui.widgets[h["field type"]].newValue ? pui.widgets[h["field type"]].newValue : "");
                            var l;
                            if (pui.ide.zf) {
                                g = e.dom.cloneNode(true);
                                g.id = "";
                                l = Ext.get(g).getBox()
                            } else {
                                g = pui.ide.Sy(h);
                                if (g == null) return;
                                l = h["field type"] == "checkbox" || h["field type"] ==
                                "radio button" ? Ext.get(g.firstChild).getBox() : {
                                    width: parseInt(g.style.width, 10),
                                    height: parseInt(g.style.height, 10)
                                }
                            }
                            var n = h["field type"];
                            delete h["field type"];
                            return {
                                ddel: g,
                                sourceEl: e,
                                repairXY: e.getXY(),
                                node: {
                                    attributes: {
                                        widget: n,
                                        name: f.name,
                                        defaults: h,
                                        proxyWidth: l.width,
                                        proxyHeight: l.height,
                                        So: f.autoGen === true,
                                        ly: true
                                    }
                                }
                            }
                        }
                    }, getRepairXY: function () {
                        return this.dragData.SA
                    }, onStartDrag: function () {
                        if (!pui.ide.zf) if (R != null) Ext.getCmp("centerPanel").getActiveTab().Xa || pui.layout.template.Nm(R.designer)
                    },
                    onDrag: function (e) {
                        pui.ide.zf || pui.ide.it(e, this.dragData.node.attributes)
                    }, endDrag: function () {
                        pui.ide.zf || pui.designer.gf.hide()
                    }
                });
                d.dropZone = new Ext.dd.DropZone(d.getEl(), {
                    ddGroup: "toolboxTree", getTargetFromEvent: pui.ide.Rt, onNodeOver: function (e, f, h, g) {
                        if (e != g.sourceEl) return Ext.dd.DropZone.prototype.dropAllowed
                    }, onNodeDrop: function (e, f, h, g) {
                        f = g.sourceEl;
                        if (e == f) return false;
                        f = Ext.getCmp(f.id);
                        e = Ext.getCmp(e.id);
                        h = e.Mb;
                        e.Mb = f.Mb;
                        f.Mb = h;
                        f.getEl().down("div").update(f.Mb.name);
                        f.getEl().set({title: f.Mb.name});
                        f.getEl().down("img").set({src: f.Mb.icon || pui.ide.Nx});
                        e.getEl().set({title: e.Mb.name});
                        e.getEl().down("div").update(e.Mb.name);
                        e.getEl().down("img").set({src: e.Mb.icon || pui.ide.Nx});
                        pui.ide.saveWidgetSets();
                        return true
                    }
                })
            }
        }
    })
};
pui.ide.Yz = function (b, a) {
    var c = Ext.getCmp("widgetSets"), d = c.items.indexOf(b) + (a == "up" ? -1 : 1), e = b.title,
        f = b.removeAll(false);
    b.dragZone.destroy();
    b.dropZone.destroy();
    c.remove(b, true);
    c.doLayout();
    b = pui.ide.Gx(e, f);
    c.insert(d, b);
    c.doLayout();
    b.collapse();
    b.expand();
    pui.ide.saveWidgetSets()
};
pui.ide.YI = function (b, a) {
    b.setTitle(a);
    pui.ide.saveWidgetSets()
};
pui.ide.WI = function (b) {
    b.removeAll(true);
    b.dragZone.destroy();
    b.dropZone.destroy();
    var a = Ext.getCmp("widgetSets");
    a.remove(b, true);
    a.doLayout();
    a.items.getCount() > 0 && a.items.itemAt(0).expand();
    pui.ide.saveWidgetSets()
};
pui.ide.su = function (b) {
    var a = Ext.getCmp("widgetSets");
    a.getEl().mask();
    Ext.Ajax.request({
        url: cc("PUI0001120.pgm"),
        method: "POST",
        params: {workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""},
        success: function (c) {
            try {
                var d = JSON.parse(c.responseText)
            } catch (e) {
                Ext.MessageBox.show({
                    title: "Error",
                    msg: "The widget sets response from the server failed to parse. Your local set has not been overwritten.",
                    fn: function () {
                        a.getEl().unmask()
                    },
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                return
            }
            if (d.success) {
                c =
                    d.content.sets;
                d = {mtime: d.mtime, sets: c};
                localStorage["pui-widget-sets"] = JSON.stringify(d);
                if (pui.isCloud) pui.cloud.ZA = JSON.stringify({sets: c});
                for (c = 0; c < a.items.getCount(); c++) {
                    var f = a.items.itemAt(c);
                    f.dragZone.destroy();
                    f.dropZone.destroy();
                    f.removeAll(true)
                }
                a.removeAll(true);
                for (c = 0; c < d.sets.length; c++) {
                    f = d.sets[c];
                    pui.ide.Po(f.name, f.widgets)
                }
                if (a.items.getCount() > 0) {
                    c = a.items.itemAt(0);
                    c.collapse();
                    c.expand()
                }
                a.getEl().unmask();
                typeof b == "function" && b(d)
            } else Ext.MessageBox.show({
                title: "Error",
                msg: d.error, fn: function () {
                    a.getEl().unmask()
                }, icon: Ext.MessageBox.ERROR, buttons: Ext.MessageBox.OK
            })
        }
    })
};
pui.ide.saveWidgetSets = function (b, a, c) {
    var d = Ext.getCmp("widgetSets"), e = [];
    d.items.each(function (n) {
        var o = {name: n.title, widgets: []};
        n.items.each(function (i) {
            o.widgets.push(i.Mb)
        });
        e.push(o)
    });
    var f;
    try {
        f = JSON.parse(localStorage["pui-widget-sets"])
    } catch (h) {
        f = {mtime: 0}
    }
    f.sets = e;
    localStorage["pui-widget-sets"] = JSON.stringify(f);
    if (b) {
        var g = JSON.stringify({sets: f.sets});
        if (pui.isCloud && g === pui.cloud.ZA) typeof c == "function" && c(); else {
            d.getEl().mask();
            b = new pui.$l;
            var l = [{name: "json", value: g, fileName: "widget_sets.json"}];
            a && l.push({name: "mtime", value: String(f.mtime)});
            pui.isCloud && l.push({name: "workspace_id", value: pui.cloud.ws.id});
            b.fm(l);
            b.send(cc("PUI0001121.pgm"), function (n) {
                d.getEl().unmask();
                n = JSON.parse(n.jc());
                if (n.success) {
                    f.mtime = n.mtime;
                    localStorage["pui-widget-sets"] = JSON.stringify(f);
                    if (pui.isCloud) pui.cloud.ZA = g;
                    typeof c == "function" && c()
                } else typeof c == "function" && c(n.error)
            })
        }
    } else typeof c == "function" && c()
};
pui.ide.Uw = function (b, a) {
    b instanceof Array || (b = [b]);
    for (var c = 0; c < b.length; c++) {
        var d = b[c], e = d.properties, f = d.name || e["field type"];
        f = f.split(" ");
        for (var h = 0; h < f.length; h++) if (f[h].length > 0) f[h] = f[h][0].toUpperCase() + f[h].substr(1);
        f = f.join(" ");
        var g = ["id", "description", "left", "top", "bottom", "right", "newitem", "screen identifier", "columnId", "parent tab", "parent tab panel"];
        for (h = 0; h < g.length; h++) e[g[h]] && delete e[g[h]];
        for (var l in e) e[l] === "" && delete e[l];
        e = {
            name: f, icon: d.icon || "/profoundui/proddata/images/image.png",
            properties: e
        };
        if (d.So) e.autoGen = true;
        a.add(pui.ide.Ex(e))
    }
    a.doLayout();
    pui.ide.saveWidgetSets()
};
pui.ide.XE = function (b, a) {
    b.getEl().down("img").set({src: b.Mb.icon = a});
    pui.ide.saveWidgetSets();
    var c = pui.DOCUMENT_ROOT;
    if (c.charAt(c.length - 1) == pui.dirSeparator) c = c.substr(0, c.length - 1);
    if (pui.isCloud) c = pui.cloud.ws.SERVER_DIR + pui.dirSeparator;
    c += a.substr(0, a.lastIndexOf(pui.dirSeparator));
    Kd.set("widgetIconDir", c);
    Kd.save()
};
pui.ide.Ex = function (b) {
    return new Ext.BoxComponent({
        id: "widget" + pui.ide.JK++,
        autoEl: {
            tag: "div",
            cls: "widget-sets-widget",
            title: b.name,
            children: [{tag: "img", src: b.icon || "/profoundui/proddata/images/image.png"}, {tag: "div", html: b.name}]
        },
        Mb: JSON.parse(JSON.stringify(b)),
        listeners: {
            render: function (a) {
                a.Mb = a.initialConfig.Mb;
                delete a.initialConfig.Mb;
                a.getEl().on("contextmenu", pui.ide.KK)
            }
        }
    })
};
pui.ide.Rt = function (b) {
    b = Ext.get(b.getTarget());
    return b.is("div.widget-sets-widget") ? b : b.up("div.widget-sets-widget")
};
pui.ide.AG = function (b) {
    var a = {x1: 99999, y1: 99999, x2: 0, y2: 0};
    for (b = b.firstChild; b != null;) {
        var c = b.offsetLeft, d = b.offsetTop, e = c + b.offsetWidth, f = d + b.offsetHeight;
        if (c < a.x1) a.x1 = c;
        if (d < a.y1) a.y1 = d;
        if (e > a.x2) a.x2 = e;
        if (f > a.y2) a.y2 = f;
        b = b.nextSibling
    }
    return {width: a.x2 - a.x1, height: a.y2 - a.y1}
};
pui.ide.Sy = function (b) {
    function a(n) {
        var o;
        if (o = f.ff == null ? pui.Ye(c, n) : pui.Ye(f.ff, n)) f = uc(o, b, f, b[n], true, g)
    }

    b = JSON.parse(JSON.stringify(b));
    var c = rc(), d = document.createElement("div");
    d.style.position = "relative";
    d.style.visibility = "hidden";
    d.style.zIndex = -1;
    var e = Ext.get(document.body);
    d.style.fontFamily = e.getStyle("fontFamily");
    d.style.fontSize = e.getStyle("fontSize");
    var f = document.createElement("div");
    f.style.position = "absolute";
    var h = document.getElementById("centerPanel");
    d.appendChild(f);
    h.appendChild(d);
    if (R == null) return null;
    if (Ext.getCmp("centerPanel").getActiveTab().Xa) return null;
    var g = new pui.designer.pw(R.designer);
    g.dom = f;
    f.value = f.originalValue = "";
    g.properties = b;
    g.Qn = JSON.parse(JSON.stringify(b));
    g.Ej = true;
    a("field type");
    for (var l in b) l != "field type" && a(l);
    b["field type"] == "layout" && typeof f.sizeMe == "function" && f.sizeMe();
    e = pui.ide.AG(d);
    d.style.height = e.height + "px";
    d.style.width = e.width + "px";
    d.style.visibility = "";
    setTimeout(function () {
        h.removeChild(d)
    }, 0);
    return d
};
pui.ide.XI = function (b, a) {
    b.getEl().down("div").update(b.Mb.name = a);
    pui.ide.saveWidgetSets()
};
pui.ide.VI = function (b) {
    var a = b.ownerCt;
    a.remove(b);
    a.doLayout();
    pui.ide.saveWidgetSets()
};
pui.ide.KK = function (b) {
    var a = pui.ide.Rt(b);
    a = Ext.getCmp(a.id);
    var c = a.Mb.properties, d = [];
    if (typeof c.value == "object" || typeof c.response == "object" || typeof c.html == "object") d.push(new Ext.menu.CheckItem({
        text: "Auto-generate field names",
        checked: a.Mb.autoGen === true,
        checkHandler: function (e, f) {
            if (f) a.Mb.autoGen = true; else typeof a.Mb.autoGen != "undefined" && delete a.Mb.autoGen;
            pui.ide.saveWidgetSets()
        }
    }));
    d.push(new Ext.menu.Item({
        text: "Change icon", icon: "/profoundui/proddata/images/image.png", handler: function (e) {
            R &&
            R.designer && R.designer.selection.clear();
            var f = "";
            f = Kd.get("widgetIconDir", "");
            if (pui.isCloud) f = pui.cloud.ws.SERVER_DIR + pui.dirSeparator + "public";
            var h = new pui.designer.$r(f);
            h.db('<span style="font-weight:bold;">Select Icon</span>');
            h.fe = function (g) {
                if (pui.isCloud && (g.substr(0, 1) === "/" || g.substr(0, 1) === "\\")) g = g.substr(1);
                pui.ide.XE(a, g)
            };
            h.onerror = function () {
                if (f != "") {
                    Kd.set("widgetIconDir", "");
                    Kd.save();
                    e && e.fireEvent("click")
                }
            };
            h.show()
        }
    }), new Ext.menu.Item({
        text: "Rename", icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/edit.png" :
            "/profoundui/proddata/images/dspfdesigner/icons16x16/pencil.png", handler: function () {
            R && R.designer && R.designer.selection.clear();
            var e = a.getEl().down("div").dom.innerHTML;
            Ext.MessageBox.prompt("Rename Widget", "New name:", function (f, h) {
                f == "ok" && pui.ide.XI(a, h)
            }, window, false, e)
        }
    }), new Ext.menu.Item({
        text: "Remove",
        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/remove-1.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/delete.png",
        handler: function () {
            R && R.designer && R.designer.selection.clear();
            Ext.MessageBox.confirm("Remove Widget", "Are you sure you want to remove this widget?", function (e) {
                e == "yes" && pui.ide.VI(a)
            })
        }
    }));
    (new Ext.menu.Menu({items: d})).showAt(b.getXY());
    b.stopEvent()
};
pui.ide.oK = function (b, a) {
    b.items.each(function (d) {
        if (d.toolbar) {
            d.toolbar.designer.hh();
            var e = d.toolbar.designer.k;
            if (e) {
                e.jd && !e.jd.isHidden() && e.jd.hide();
                e.Bh && !e.Bh.isHidden() && e.Bh.hide()
            }
            d.toolbar.designer.Nb.hide();
            d.toolbar.designer.Qa != null && d.toolbar.designer.Qa.hide();
            d.toolbar.designer.disable();
            d.rp.lock()
        }
        d.fileTab && d !== a && pui.ide.At(d)
    });
    pui.pf && !pui.pf.isHidden() && pui.pf.hide();
    pui.Fe && !pui.Fe.isHidden() && pui.Fe.hide();
    if (a) if (a.toolbar) {
        if (a.Xa == true) Ext.getCmp("east").hide(); else {
            Ext.getCmp("widgetsPanel").show();
            Ext.getCmp("east").show()
        }
        pui.designer.currentDisplay = a.currentDisplay;
        pui.designer.fa = a.fa;
        var c = a.vd.FG();
        Ca = c != null ? c : a.initialConfig.nE;
        Ha = a.initialConfig.oE;
        R = a.toolbar;
        R.designer.enable(a.Xa);
        rd = a.vd;
        rd.refresh();
        pui.ide.zg();
        pui.ide.He();
        c = Kd.get("eastPanelWidth", "") == "" ? 290 : Kd.get("eastPanelWidth", "");
        R.designer.k.setWidth(c);
        (c = Ext.getCmp("ideProps").getHeight()) && R.designer.k.setHeight(c - 24);
        if (a.fa) {
            c = rd.$g();
            c.width && c.height && rd.Uf(c.width, c.height)
        }
        pui.ka = a.ka || [];
        if (a.C) {
            pui.designer.C.formats =
                a.C.formats;
            pui.designer.C.global = a.C.global;
            pui.designer.C.comments = a.C.comments
        }
        S.ak();
        a.rp.unlock();
        if (!pui.ja && a.currentDisplay && (a.currentDisplay.member || a.currentDisplay.ifsFile || a.currentDisplay.Eb)) pui.sj.load()
    } else {
        if (a.fileTab == true || a.qe) {
            rd = R = null;
            pui.designer.currentDisplay = {};
            pui.designer.fa = null;
            pui.ka = null;
            Ext.getCmp("widgetsPanel").show();
            Ext.getCmp("east").hide();
            if (Ext.getCmp("_RibbonTabPanel").getActiveTab() == Ext.getCmp("_Ribon_DesignMenu") || a.qe && Ext.getCmp("_RibbonTabPanel").getActiveTab() ==
                Ext.getCmp("_Ribon_EditMenu")) Ext.getCmp("_RibbonTabPanel").setActiveTab(Ext.getCmp("_Ribon_HomeMenu"));
            a.editor && a.editor.focus()
        }
    } else {
        rd = R = null;
        pui.designer.currentDisplay = {};
        pui.designer.fa = null;
        pui.ka = null;
        Ext.getCmp("east").hide();
        Ext.getCmp("_RibbonTabPanel").setActiveTab(Ext.getCmp("_Ribon_HomeMenu"))
    }
    a.ew = a.ew || Kd.get("widgetsActiveTab");
    Ext.getCmp("widgetsPanel").setActiveTab(a.ew);
    pui.ide.refreshRibbon();
    pui.ide.$f.doLayout();
    !a && !pui.ide.Xd && b.setActiveTab(b.add(pui.ide.Bd()))
};
pui.ide.At = function (b) {
    b || (b = Ext.getCmp("centerPanel").getActiveTab());
    if (b && b.editor && !b.mc) if (b.editor.getModifiedEditor && b.editor.getOriginalEditor) {
        b.editor.getModifiedEditor()._modelData.view._textAreaHandler._textAreaInput._setHasFocus(false);
        b.editor.getOriginalEditor()._modelData.view._textAreaHandler._textAreaInput._setHasFocus(false)
    } else b.editor._modelData.view._textAreaHandler._textAreaInput._setHasFocus(false);
    return b
};
pui.ide.dv = function (b) {
    var a;
    if (typeof b == "string") a = b; else if (b.key == "pui-reload-css" && b.newValue != null) a = b.newValue; else return;
    for (var c = RegExp("(.*" + a + ")", "i"), d = document.getElementsByTagName("link"), e = 0; e < d.length; e++) {
        var f = d[e], h = f.href.match(c);
        if (h) {
            c = h[1];
            d = new Date;
            c += "?mtime=" + d.getFullYear() + (d.getMonth() + 1) + d.getDate() + d.getHours() + d.getMinutes() + d.getSeconds();
            c += "&r=" + (Math.floor(Math.random() * 1E9) + 1);
            f.href = c;
            break
        }
    }
    if (typeof b == "string") {
        localStorage["pui-reload-css"] = a;
        delete localStorage["pui-reload-css"]
    }
};
pui.ide.Ti = function (b, a) {
    pui.isCloud && typeof a === "string" && function (c, d) {
        if (a.substr(0, c.length).toUpperCase() === c.toUpperCase()) a = d + a.substr(c.length)
    }(pui.cloud.ws.SERVER_DIR + pui.dirSeparator, "");
    Ext.get(Ext.getCmp("centerPanel").getTabEl(b.id)).child("span.x-tab-strip-text", true).title = a
};
Ext.namespace("Ext.ux.panel");
Ext.ux.panel.Xl = Ext.extend(Object, {
    constructor: function (b) {
        b && Ext.apply(this, b)
    }, init: function (b) {
        if (b instanceof Ext.TabPanel !== false) {
            b.arrowOffsetX = this.arrowOffsetX;
            b.arrowOffsetY = this.arrowOffsetY;
            b.addEvents("reorder");
            if (!b.ddGroupId) b.ddGroupId = "dd-tabpanel-group-" + b.getId();
            b.reorder = this.reorder;
            b.eI = b.initTab;
            b.initTab = this.initTab;
            b.onRemove = this.onRemove;
            b.on("afterrender", this.afterRender, this);
            this.tabPanel = b
        }
    }, destroy: function () {
        tp.un("afterrender", this.afterRender, this);
        delete this.tabPanel;
        Ext.destroy(this.dd, this.arrow)
    }, arrowOffsetX: -9, arrowOffsetY: -8, reorder: function (b) {
        this.fireEvent("reorder", this, b)
    }, afterRender: function () {
        this.tabPanel.arrow = Ext.DomHelper.append(Ext.getBody(), '<div class="dd-arrow-down"></div>', true);
        this.tabPanel.arrow.hide();
        this.dd = new Ext.ux.panel.Xl.DropTarget(this, {ddGroup: this.tabPanel.ddGroupId});
        this.move = false
    }, initTab: function (b, a) {
        this.eI(b, a);
        var c = this.id + "__" + b.id;
        Ext.fly(c).on("click", function () {
            b.ownerCt.setActiveTab(b.id)
        });
        Ext.applyIf(b, {allowDrag: true});
        Ext.apply(b, {
            Fm: new Ext.dd.DragSource(c, {
                ddGroup: this.ddGroupId,
                dropEl: b,
                dropElHeader: Ext.get(c, true),
                scroll: false,
                onStartDrag: function () {
                    if (this.dropEl.iconCls) {
                        var d = this.getProxy().getGhost().select(".x-tab-strip-text");
                        d.addClass("x-panel-inline-icon");
                        var e = d.elements[0].innerHTML;
                        e = Ext.util.Format.stripTags(e);
                        d.elements[0].innerHTML = e;
                        d.applyStyles({paddingLeft: "20px"})
                    } else this.getProxy().getGhost().dom.firstChild.style.listStyleType = "none"
                },
                onMouseUp: function () {
                    if (this.dropEl.ownerCt.move) {
                        !this.dropEl.disabled &&
                        this.dropEl.ownerCt.activeTab == null && this.dropEl.ownerCt.setActiveTab(this.dropEl);
                        this.dropEl.ownerCt.move = false
                    } else !this.dropEl.isVisible() && !this.dropEl.disabled && this.dropEl.show()
                }
            }), enableTabDrag: function () {
                this.allowDrag = true;
                return this.Fm.unlock()
            }, disableTabDrag: function () {
                this.allowDrag = false;
                return this.Fm.lock()
            }
        });
        b.allowDrag ? b.enableTabDrag() : b.disableTabDrag()
    }, onRemove: function (b) {
        var a = Ext.get(b.tabEl);
        if (a) {
            a.select("a").removeAllListeners();
            Ext.destroy(a)
        }
        Ext.TabPanel.superclass.onRemove.call(this,
            b);
        this.stack.remove(b);
        delete b.tabEl;
        b.un("disable", this.onItemDisabled, this);
        b.un("enable", this.onItemEnabled, this);
        b.un("titlechange", this.onItemTitleChanged, this);
        b.un("iconchange", this.onItemIconChanged, this);
        b.un("beforeshow", this.onBeforeShowItem, this);
        if (b == this.activeTab) if (this.move) this.activeTab = null; else if (b = this.stack.next()) this.setActiveTab(b); else if (this.items.getCount() > 0) this.setActiveTab(0); else this.activeTab = null;
        this.destroying || this.delegateUpdates()
    }
});
Ext.preg("draggabletabs", Ext.ux.panel.Xl);
Ext.ux.panel.Xl.DropTarget = Ext.extend(Ext.dd.DropTarget, {
    constructor: function (b, a) {
        this.tabpanel = b.tabPanel;
        Ext.ux.panel.Xl.DropTarget.superclass.constructor.call(this, this.tabpanel.stripWrap, a)
    }, notifyOver: function (b, a) {
        var c = this.tabpanel.items, d = c.length;
        if (!a.within(this.getEl()) || b.dropEl == this.tabpanel) return "x-dd-drop-nodrop";
        for (var e = this.tabpanel.arrow, f = this.el.getY(), h, g, l, n = a.getPageX(), o = 0; o < d; o++) {
            g = l;
            l = c.itemAt(o);
            var i = l.Fm.dropElHeader, r = i.getX();
            if (n <= r + i.dom.clientWidth / 2) {
                h = r;
                break
            }
        }
        if (typeof h == "undefined") {
            c = c.itemAt(d - 1);
            if (c == b.dropEl) return "x-dd-drop-nodrop";
            c = c.Fm.dropElHeader.dom;
            h = (new Ext.Element(c)).getX() + c.clientWidth + 3
        } else if (l == b.dropEl || g == b.dropEl) {
            this.tabpanel.arrow.hide();
            return "x-dd-drop-nodrop"
        }
        e.setTop(f + this.tabpanel.arrowOffsetY).setLeft(h + this.tabpanel.arrowOffsetX).show();
        return "x-dd-drop-ok"
    }, notifyDrop: function (b, a) {
        this.tabpanel.arrow.hide();
        if (b.dropEl == this.tabpanel) return false;
        for (var c = this.tabpanel.items, d = a.getPageX(), e = 0; e < c.length; e++) {
            var f =
                c.itemAt(e), h = f.Fm.dropElHeader;
            h = h.getX() + h.dom.clientWidth / 2;
            if (d <= h) break
        }
        if (f == b.dropEl || c.itemAt(e - 1) == b.dropEl) return false;
        b.proxy.hide();
        b.dropEl.ownerCt == this.tabpanel && e > c.indexOf(b.dropEl) && e--;
        this.tabpanel.move = true;
        d = b.dropEl.ownerCt.remove(b.dropEl, false);
        this.tabpanel.insert(e, d);
        this.tabpanel.fireEvent("drop", this.tabpanel);
        this.tabpanel.reorder(c.itemAt(e));
        return true
    }, notifyOut: function () {
        this.tabpanel.arrow.hide()
    }
});
pui["default input properties"] = {
    "field type": "textbox",
    height: "25px",
    width: "150px",
    "css class": "blueprint-defaults",
    "css class 2": "blueprint-textbox"
};
pui["default output properties"] = {
    "field type": "output field",
    "css class": "outputField",
    "css class 2": "blueprint-defaults",
    "css class 3": "blueprint-output-field"
};
pui.ide.zF = function () {
    function b(f) {
        var h = new Ext.Panel({
            title: "Enter statements", listeners: {
                resize: function () {
                    if (h.editor) h.editor.layout ? h.editor.layout() : h.editor.resize()
                }
            }
        }), g = new Ext.form.FormPanel({
            title: "Run SQL file", bodyStyle: {padding: "5px"}, labelWidth: 125, items: [new Ext.form.Field({
                fieldLabel: "Upload file",
                name: "uploadFile",
                autoCreate: {tag: "input", type: "file", accept: ".sql"},
                listeners: {
                    afterrender: function (i) {
                        i.getEl().dom.addEventListener("change", function () {
                            var r = g.getForm().findField("workspaceFile");
                            r.Mk.innerHTML = "No file chosen";
                            r.ku = false
                        }, false)
                    }
                }
            }), new Ext.form.DisplayField({hideLabel: true, value: "- Or -"}), new Ext.form.Field({
                fieldLabel: "Select workspace file",
                name: "workspaceFile",
                autoCreate: {tag: "input", type: "button", style: "padding:1px 7px"},
                value: "Choose File",
                listeners: {
                    afterrender: function (i) {
                        var r = i.getEl().dom;
                        r.addEventListener("click", function () {
                            var k = new pui.designer.$r(pui.cloud.ws.SERVER_DIR);
                            k.type = "sql";
                            k.db('<span style="font-weight:bold;">Select File</span>');
                            k.fe = function (q) {
                                i.Mk.innerHTML =
                                    q.substr(1);
                                g.getForm().getEl().dom.reset();
                                i.ku = true
                            };
                            k.show()
                        }, false);
                        i.ku = false;
                        i.Mk = document.createElement("span");
                        i.Mk.style.marginLeft = "5px";
                        i.Mk.innerHTML = "No file chosen";
                        r.parentNode.insertBefore(i.Mk, r.nextSibling)
                    }
                }
            })]
        }), l = new Ext.TabPanel({
            region: "center", activeTab: 0, items: [h, g], listeners: {
                tabchange: function () {
                    l.getActiveTab() == h && h.editor && h.editor.focus.defer(100, h.editor)
                }
            }
        }), n = new Ext.Panel({
            region: "south", split: true, height: 210, title: "Output", bodyCssClass: "pui-designer-db-output",
            autoScroll: true
        }), o = new Ext.Window({
            title: "Run SQL",
            width: 800,
            height: 400,
            maximizable: true,
            layout: "border",
            modal: true,
            items: [l, n],
            buttons: [{
                text: "Run", handler: function () {
                    var i, r;
                    n.update("");
                    if (l.getActiveTab() == h) {
                        i = h.editor.getValue().trim();
                        if (i == "") return;
                        i = JSON.stringify({workspace_id: pui.cloud.ws.id, statements: i})
                    } else if (l.getActiveTab() == g) {
                        var k = g.getForm().findField("uploadFile").getEl().dom,
                            q = g.getForm().findField("workspaceFile");
                        if (k.files.length == 1) {
                            k = k.files[0];
                            r = new FormData;
                            r.append("file",
                                k, k.name);
                            r.append("workspace_id", pui.cloud.ws.id);
                            g.getForm().getEl().dom.reset()
                        } else if (q.ku == true) i = JSON.stringify({
                            workspace_id: pui.cloud.ws.id,
                            statementsFile: q.Mk.innerHTML
                        }); else return
                    }
                    var s = new XMLHttpRequest;
                    s.open("POST", cc("pui0001126.pgm"));
                    if (i) s.setRequestHeader("Content-Type", "application/json"); else if (r) s.upload.onprogress = function (t) {
                        t = Math.round(t.loaded / t.total * 100);
                        t = t == 100 ? "Executing..." : "Uploading " + t + "%...";
                        o.getEl().mask(t)
                    };
                    s.onreadystatechange = function () {
                        if (s.readyState ==
                            4) {
                            o.getEl().unmask();
                            if (s.status == 200) {
                                var t = s.responseText;
                                t.match(/^<table/i) || (t = "<pre>" + t + "</pre>");
                                n.update(t)
                            } else Ext.MessageBox.show({
                                title: "Error",
                                msg: s.status == 500 ? s.responseText : "HTTP " + s.status + " - " + s.statusText,
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.MessageBox.OK
                            })
                        }
                    };
                    r || o.getEl().mask("Executing...");
                    s.send(i || r)
                }
            }, {
                text: "Cancel", handler: function () {
                    o.close()
                }
            }],
            listeners: {
                afterrender: function () {
                    if (R) R.designer.disabled = true;
                    if (pui.useAceEditor || pui.is_ie || pui.ie_mode <= 11 || !window.monaco) {
                        h.editor =
                            ace.edit(h.body.dom);
                        h.editor.setTheme("ace/theme/eclipse");
                        h.editor.getSession().setMode("ace/mode/sql");
                        h.editor.setShowPrintMargin(false);
                        h.editor.renderer.setShowGutter(false);
                        h.editor.setDisplayIndentGuides(false);
                        h.editor.getSession().setTabSize(2);
                        f != null && h.editor.setValue(f);
                        h.editor.clearSelection()
                    } else {
                        pui.ide.At();
                        h.editor = monaco.editor.create(h.body.dom, {
                            value: f != null ? f : "",
                            language: "sql",
                            fixedOverflowWidgets: true,
                            minimap: {enabled: false}
                        });
                        h.editor.layout()
                    }
                    l.fireEvent("tabchange")
                },
                beforedestroy: function () {
                    h.editor.dispose ? h.editor.dispose() : h.editor.destroy();
                    if (R) R.designer.disabled = false
                }
            }
        });
        o.show()
    }

    function a(f, h, g) {
        h = {Mb: h.attributes.def, properties: c(h, g)};
        f.Sj = new pui.designer.ww(f.body.dom, h);
        f.Sj.zu = oc();
        f.on("bodyresize", function (l, n, o) {
            l.Sj.setWidth(n);
            l.Sj.setHeight(o)
        });
        f.on("beforedestroy", function (l) {
            l.Sj.destroy()
        })
    }

    function c(f, h) {
        var g;
        if (h == "input") if (f.attributes.I) g = JSON.parse(JSON.stringify(f.attributes.I)); else {
            g = JSON.parse(JSON.stringify(pui["default input properties"]));
            g.value = S.zp(f.attributes.def)
        } else if (f.attributes.O) g = JSON.parse(JSON.stringify(f.attributes.O)); else {
            g = JSON.parse(JSON.stringify(pui["default output properties"]));
            g.value = S.zp(f.attributes.def)
        }
        return g
    }

    var d = ["Mode:", new Ext.Toolbar.Spacer, new Ext.form.RadioGroup({
        width: 110,
        items: [new Ext.form.Radio({
            id: "pui-database-input",
            boxLabel: "Input",
            name: "mode"
        }), new Ext.form.Radio({id: "pui-database-output", boxLabel: "Output", name: "mode", checked: true})],
        style: {"padding-top": "3px"}
    })];
    pui.isCloud && d.push(new Ext.Toolbar.Fill,
        {
            icon: "/profoundui/proddata/images/FlatIcons/16x16/run_sql.png", tooltip: "Run SQL", handler: function () {
                var f = false, h = pui.cloud.ws.contributors;
                h || (h = []);
                for (var g = 0; g < h.length; g++) if (h[g].profile === pui.cloud.user) f = true;
                !pui.cloud.ws.modify && pui.cloud.ws.owner && pui.cloud.ws.owner !== pui.cloud.user && !f ? pui.alert("You are not authorized to modify this workspace.") : b()
            }
        });
    d = new Ext.Toolbar({items: d});
    var e = new Ext.tree.TreePanel({
        title: "Database", tbar: d, autoScroll: true, root: new Ext.tree.AsyncTreeNode({
            text: !pui.isCloud ?
                "Schemas" : "Tables",
            icon: !pui.isCloud ? "/profoundui/proddata/images/FlatIcons/16x16/schemas.png" : "/profoundui/proddata/images/FlatIcons/16x16/tables.png",
            loader: new Ext.tree.TreeLoader({
                dataUrl: "/profoundui/pui0001125.pgm", baseParams: {}, listeners: {
                    beforeload: function (f, h) {
                        if (pui.isCloud) f.baseParams.workspace_id = pui.cloud.ws.id;
                        f.baseParams.root && delete f.baseParams.root;
                        f.baseParams.schema && delete f.baseParams.schema;
                        f.baseParams.table && delete f.baseParams.table;
                        if (h == e.getRootNode()) f.baseParams.root =
                            "1"; else if (h.attributes.type == "schema") f.baseParams.schema = h.text; else {
                            if (h.parentNode.attributes.type == "schema") f.baseParams.schema = h.parentNode.text;
                            f.baseParams.table = h.text
                        }
                    }, load: function (f, h, g) {
                        f = JSON.parse(g.responseText);
                        if (f.success === false) Ext.MessageBox.show({
                            title: "Database Error",
                            msg: f.error.replace(/\n/g, "<br />"),
                            maxWidth: 1E3,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        }); else {
                            if (h.attributes.type == "table") {
                                var l = !pui.isCloud ? h.parentNode.text : "", n;
                                n = localStorage["pui-database-cache"] !=
                                null ? JSON.parse(localStorage["pui-database-cache"]) : {schemas: {}};
                                n.schemas[l] || (n.schemas[l] = {tables: {}})
                            }
                            var o = h.getOwnerTree().getRootNode();
                            h.childNodes.forEach(function (i) {
                                i.attributes.type = h == o ? !pui.isCloud ? "schema" : "table" : h.attributes.type == "schema" ? "table" : "column";
                                if (i.attributes.type == "schema") i.setIcon("/profoundui/proddata/images/FlatIcons/16x16/schemas.png"); else if (i.attributes.type == "table") i.setIcon("/profoundui/proddata/images/FlatIcons/16x16/tables.png"); else i.attributes.type ==
                                "column" && i.setIcon("/profoundui/proddata/images/FlatIcons/16x16/columns.png");
                                if (i.attributes.type == "column") {
                                    var r = h.text, k = i.attributes.def;
                                    k.table = r;
                                    if (h.attributes.sysName) k.sysTable = h.attributes.sysName;
                                    var q = k.name;
                                    n.schemas[l].tables[r] || (n.schemas[l].tables[r] = {columns: {}});
                                    n.schemas[l].tables[r].columns[q] = k;
                                    i.setText(q + " - " + S.Ct(k))
                                }
                            });
                            if (h.attributes.type == "table") localStorage["pui-database-cache"] = JSON.stringify(n)
                        }
                    }, loadexception: function (f, h, g) {
                        Ext.MessageBox.show({
                            title: "Error", msg: "HTTP " +
                                g.status + " - " + g.statusText, buttons: Ext.MessageBox.OK, icon: Ext.MessageBox.ERROR
                        })
                    }
                }
            })
        }), listeners: {
            contextmenu: function (f, h) {
                f.select();
                var g = [];
                if (f.attributes.type == "column") {
                    var l = f.attributes.def.name;
                    g.push({
                        text: "Properties",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/screen-properties.png" : "/profoundui/proddata/images/dspfdesigner/icons16x16/prop.gif",
                        handler: function () {
                            if (pui.isCloud && !pui.cloud.ws.modify && pui.cloud.ws.owner && pui.cloud.ws.owner !== pui.cloud.user) {
                                var n = false,
                                    o = pui.cloud.ws.contributors;
                                o || (o = []);
                                for (var i = 0; i < o.length; i++) if (o[i].profile === pui.cloud.user) n = true;
                                if (!n) {
                                    pui.alert("You are not authorized to modify this workspace.");
                                    return
                                }
                            }
                            var r = new Ext.Window({
                                title: l + " properties",
                                width: 400,
                                height: 600,
                                modal: true,
                                maximizable: true,
                                layout: "fit",
                                items: [new Ext.TabPanel({
                                    id: "pui-database-properties",
                                    activeTab: 0,
                                    items: [new Ext.Panel({
                                        title: "Input Properties",
                                        listeners: {
                                            afterrender: function (k) {
                                                a(k, f, "input")
                                            }
                                        }
                                    }), new Ext.Panel({
                                        title: "Output Properties", listeners: {
                                            afterrender: function (k) {
                                                a(k,
                                                    f, "output")
                                            }
                                        }
                                    })]
                                })],
                                buttons: [{
                                    text: "OK", handler: function () {
                                        r.getEl().mask("Saving...");
                                        var k = Ext.getCmp("pui-database-properties"), q = k.items.itemAt(0).Sj.Cy(), s;
                                        s = k.items.itemAt(1).Sj ? k.items.itemAt(1).Sj.Cy() : c(f, "output");
                                        k = f.parentNode.text;
                                        var t = f.parentNode.parentNode != f.getOwnerTree().getRootNode() ? f.parentNode.parentNode.text : "";
                                        Ext.Ajax.request({
                                            url: cc("PUI0001127.pgm"), method: "POST", params: {
                                                schema: t,
                                                table: k,
                                                column: l,
                                                I: JSON.stringify(q),
                                                O: JSON.stringify(s),
                                                workspace_id: pui.isCloud ? pui.cloud.ws.id :
                                                    ""
                                            }, callback: function (u, w, v) {
                                                r.getEl().unmask();
                                                if (v.status != 200) Ext.MessageBox.show({
                                                    title: "Error",
                                                    msg: "HTTP " + v.status + " - " + v.statusText,
                                                    buttons: Ext.MessageBox.OK,
                                                    icon: Ext.MessageBox.ERROR
                                                }); else {
                                                    u = JSON.parse(v.responseText);
                                                    if (u.success == false) Ext.MessageBox.show({
                                                        title: "Error",
                                                        msg: u.error,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    }); else {
                                                        f.attributes.I = q;
                                                        f.attributes.O = s;
                                                        r.close()
                                                    }
                                                }
                                            }
                                        })
                                    }
                                }, {
                                    text: "Cancel", handler: function () {
                                        r.close()
                                    }
                                }],
                                listeners: {
                                    beforedestroy: function () {
                                        if (R) R.designer.disabled =
                                            false
                                    }
                                }
                            });
                            if (R) R.designer.disabled = true;
                            r.show()
                        }
                    })
                } else {
                    pui.isCloud && f.attributes.type == "table" && g.push({
                        text: "Query",
                        icon: "/profoundui/proddata/images/magnifier-tool.png",
                        handler: function () {
                            b("select * from `" + f.text + "`;")
                        }
                    });
                    if (!f.isLeaf() && f.isLoaded()) g.push({
                        text: "Refresh",
                        icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/refresh.png" : "/profoundui/proddata/images/icons/arrow_refresh.png",
                        handler: function () {
                            f.reload()
                        }
                    })
                }
                g.length > 0 && (new Ext.menu.Menu({items: g})).showAt(h.getXY())
            },
            render: function (f) {
                f.dragZone = new Ext.dd.DragZone(f.getEl(), {
                    autoOffset: function () {
                        this.setDelta(this.dragData.node.attributes.proxyWidth / 2 + 20, this.dragData.node.attributes.proxyHeight / 2 + 3)
                    }, ddGroup: "toolboxTree", centerFrame: true, containerScroll: true, getDragData: function (h) {
                        h = h.getTarget(null, null, true);
                        h.is("div.x-tree-node-el") || (h = h.findParent("div.x-tree-node-el", null, true));
                        if (h) {
                            var g = f.getNodeById(h.getAttribute("ext:tree-node-id"));
                            if (g && g.isLeaf()) {
                                var l = Ext.getCmp("pui-database-input").getValue() ==
                                true ? "input" : "output";
                                l = c(g, l);
                                var n, o = pui.ide.Sy(l);
                                if (o != null) {
                                    n = l["field type"] == "checkbox" || l["field type"] == "radio button" ? Ext.get(o.firstChild).getBox() : {
                                        width: parseInt(o.style.width, 10),
                                        height: parseInt(o.style.height, 10)
                                    };
                                    var i = l["field type"];
                                    delete l["field type"];
                                    return {
                                        ddel: o,
                                        sourceEl: h,
                                        repairXY: h.getXY(),
                                        node: {
                                            attributes: {
                                                widget: i,
                                                name: g.attributes.def.name,
                                                defaults: l,
                                                proxyWidth: n.width,
                                                proxyHeight: n.height,
                                                ly: true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }, getRepairXY: function () {
                        return this.dragData.SA
                    }, onStartDrag: function () {
                        if (R !=
                            null) Ext.getCmp("centerPanel").getActiveTab().Xa || pui.layout.template.Nm(R.designer)
                    }, onDrag: function (h) {
                        pui.ide.it(h, this.dragData.node.attributes)
                    }, endDrag: function () {
                        pui.designer.gf.hide()
                    }
                })
            }
        }
    });
    return e
};
pui.ide.LG = function () {
    function b() {
        if (pui.ide.kf(["modify"], true)) {
            var o = c.getForm().findField("message"), i = o.getValue();
            if (i != "") {
                o.setValue("");
                o.blur();
                o = pui.ide.getCurrentGitRepository();
                pui.ide.hf("commit", {directory: o, message: i})
            }
        } else pui.alert("You are not authorized to modify this workspace.")
    }

    function a(o) {
        var i;
        if (pui.useAceEditor) i = "The Monaco editor is required to view diffs, but the Designer is configured to use the Ace Editor."; else if (pui.is_ie || pui.ie_mode <= 11 || !window.monaco) i = "The Monaco editor is required to view diffs, but your web browser doesn't support Monaco.";
        if (i) Ext.MessageBox.show({
            title: "Error",
            msg: i,
            buttons: Ext.MessageBox.OK,
            icon: Ext.MessageBox.ERROR
        }); else {
            var r = o.get("path");
            i = Ext.getCmp("centerPanel");
            var k;
            i.items.each(function (s) {
                if (s.qe && s.qe.bJ == pui.ide.getCurrentGitRepository() && s.qe.path == r) {
                    k = s;
                    return false
                }
            });
            if (k) i.setActiveTab(k); else {
                var q = Ext.getCmp("fileTree").root.id;
                i = {directory: pui.ide.getCurrentGitRepository(), path: r, tree: o.get("tree")};
                if (pui.isCloud) i.workspace_id = pui.cloud.ws.id;
                Ext.Ajax.request({
                    method: "POST", url: "/git/diff",
                    params: i, success: function (s) {
                        function t(F) {
                            if (F == w) {
                                if (y.qe.format == "line-by-line") return;
                                y.qe.format = "line-by-line";
                                u.getEl().setStyle("background-color", "");
                                u.getEl().setStyle("border-color", "")
                            } else {
                                if (y.qe.format == "side-by-side") return;
                                y.qe.format = "side-by-side";
                                w.getEl().setStyle("background-color", "");
                                w.getEl().setStyle("border-color", "")
                            }
                            F.getEl().setStyle("background-color", "#bbbbbb");
                            F.getEl().setStyle("border-color", "#8a8a8a");
                            y.editor.updateOptions({renderSideBySide: y.qe.format == "side-by-side"})
                        }

                        var u = new Ext.Button({
                                icon: "/profoundui/proddata/images/dspfdesigner/icons16x16/sbs-diff.png",
                                tooltip: "Side by Side",
                                handler: t,
                                style: {"background-color": "#bbbbbb", "border-color": "#8a8a8a"}
                            }), w = new Ext.Button({
                                icon: "/profoundui/proddata/images/dspfdesigner/icons16x16/inline-diff.png",
                                tooltip: "Inline",
                                handler: t
                            }), v = r.substr(r.lastIndexOf("/") + 1),
                            E = o.get("tree") == "index" ? "(Index)" : "(Working Tree)", y = new Ext.Panel({
                                title: v + " " + E, closable: true, qe: {
                                    text: s.responseText, format: "side-by-side", bJ: pui.ide.getCurrentGitRepository(),
                                    path: r, type: E
                                }, tbar: new Ext.Toolbar({items: [u, w]}), listeners: {
                                    afterrender: function () {
                                        r = r.replace(/\//g, pui.dirSeparator);
                                        var F = pui.ide.getCurrentGitRepository() + pui.dirSeparator + r, D = pui.ide.es(F),
                                            B = JSON.parse(s.responseText), I = r.match(/\.([^\.]*)$/);
                                        I = I ? I[1] : "txt";
                                        y.fileTab = true;
                                        y.readOnly = o.get("tree") == "index";
                                        y.root = q;
                                        y.ma = F;
                                        y.wp = I;
                                        y.pg = B.modified;
                                        y.Vb = {ifsFile: D, root: q};
                                        y.lastModified = B.mtime;
                                        pui.ide.Ti(y, y.ma.substr(1));
                                        D = pui.ide.Jy(I);
                                        F = monaco.editor.createModel(B.original, D);
                                        B = monaco.editor.createModel(B.modified,
                                            D);
                                        var z = monaco.editor.createDiffEditor(y.body.dom, {
                                            fixedOverflowWidgets: true,
                                            readOnly: y.readOnly,
                                            disableMonospaceOptimizations: navigator.platform.toUpperCase().indexOf("MAC") >= 0
                                        });
                                        z.setModel({original: F, modified: B});
                                        var H = z.getModel().modified;
                                        H.updateOptions({tabSize: 2});
                                        y.readOnly || z.addAction({
                                            id: "Save",
                                            label: "Save File",
                                            keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S],
                                            precondition: null,
                                            keybindingContext: null,
                                            contextMenuGroupId: "navigation",
                                            contextMenuOrder: 1.4,
                                            run: function () {
                                                pui.ide.jf(y,
                                                    false, pui.ide.Rl)
                                            }
                                        });
                                        z.addAction({
                                            id: "CloseFile",
                                            label: "Close File",
                                            keybindings: [],
                                            precondition: null,
                                            keybindingContext: null,
                                            contextMenuGroupId: "navigation",
                                            contextMenuOrder: 1.5,
                                            run: function () {
                                                y.fireEvent("beforeclose", y)
                                            }
                                        });
                                        z.layout();
                                        setTimeout(function () {
                                            z.getModifiedEditor().onDidChangeModelContent(function () {
                                                y.isDirty = y.pg != H.getValue();
                                                var J;
                                                J = y.ma ? y.ma.substr(y.ma.lastIndexOf(pui.dirSeparator) + 1) + " " + y.qe.type : "[Unnamed File]";
                                                if (y.isDirty) J += " *";
                                                y.setTitle(J);
                                                pui.ide.refreshRibbon()
                                            })
                                        }, 0);
                                        y.editor = z
                                    }, resize: function () {
                                        y.editor && y.editor.layout()
                                    }, beforedestroy: function () {
                                        y.editor && y.editor.dispose()
                                    }, beforeclose: pui.ide.Fs
                                }
                            });
                        v = Ext.getCmp("centerPanel");
                        E = pui.ide.od();
                        if (E.Da) {
                            v.remove(E.Da, true);
                            v.setActiveTab(v.insert(E.index, y))
                        } else v.setActiveTab(v.add(y))
                    }, failure: function (s) {
                        Ext.MessageBox.show({
                            title: "Git Error",
                            msg: s.status == 500 ? s.responseText : s.status + " - " + s.statusText,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        })
                    }
                })
            }
        }
    }

    var c = new Ext.form.FormPanel({
        id: "gitMessage",
        region: "north",
        height: 40,
        hidden: true,
        items: [new Ext.form.TextArea({
            name: "message",
            hideLabel: true,
            anchor: "100%",
            emptyText: "Message (press Ctrl+Enter to commit)",
            enableKeyEvents: true,
            listeners: {
                keydown: function (o, i) {
                    i.getKey() == 13 && i.ctrlKey && b()
                }
            }
        })]
    }), d = new Ext.grid.GridPanel({
        id: "gitChanges",
        region: "center",
        title: "Changes",
        autoScroll: true,
        containerScroll: true,
        bodyStyle: {padding: "5px"},
        store: new Ext.data.GroupingStore({
            storeId: "gitStatus", groupField: "tree", reader: new Ext.data.JsonReader({
                fields: ["tree",
                    "path", "status"]
            })
        }),
        view: new Ext.grid.GroupingView({
            emptyText: "Not connected to a repository<br />Right-click on a directory in the Files tree to open or clone a repository",
            deferEmptyText: false,
            autoFill: true,
            forceFit: true,
            showGroupName: false,
            groupTextTpl: "{text}"
        }),
        colModel: new Ext.grid.ColumnModel({
            defaults: {sortable: false, menuDisabled: true},
            columns: [{
                header: "Tree", dataIndex: "tree", hidden: true, groupRenderer: function (o) {
                    return o == "index" ? "Staged" : "Unstaged"
                }
            }, {
                header: "File", dataIndex: "path", width: 75,
                renderer: function (o, i, r) {
                    i.css = "pui-git-status-" + r.get("status")[0];
                    o = o.replace(/\//g, pui.dirSeparator);
                    return '<span title="' + o + '">' + o + "</span>"
                }
            }, {
                header: "Status", dataIndex: "status", width: 25, renderer: function (o, i) {
                    i.css = "pui-git-status-" + o[0];
                    o = o.map(function (r) {
                        return r[0].toUpperCase() + r.substr(1)
                    }).join(", ");
                    return '<span title="' + o + '">' + o + "</span>"
                }
            }]
        }),
        selModel: new Ext.grid.RowSelectionModel({
            listeners: {
                beforerowselect: function (o, i, r, k) {
                    o = o.getSelections();
                    if (o.length > 0 && r && o[0].get("tree") !=
                        k.get("tree")) return false
                }
            }
        }),
        listeners: {
            rowdblclick: function (o, i) {
                var r = o.getStore().getAt(i), k = r.get("path");
                if (k.substr(k.length - 1) != "/") {
                    var q = r.get("status"), s = q.indexOf("new") != -1;
                    q = q.indexOf("modified") != -1;
                    if (s) {
                        k = pui.ide.getCurrentGitRepository() + pui.dirSeparator + k.replace(/\//g, pui.dirSeparator);
                        pui.ide.Gm(k)
                    } else q && a(r)
                }
            }, rowcontextmenu: function (o, i, r) {
                r.preventDefault();
                i = o.getStore().getAt(i);
                o = o.getSelectionModel();
                if (!o.isSelected(i)) {
                    o.clearSelections();
                    o.selectRecords([i])
                }
                var k =
                    o.getSelections();
                o = k[0].get("tree");
                var q = false, s = false, t = false, u = false;
                k.forEach(function (w) {
                    var v = w.get("status");
                    if (v.indexOf("new") != -1) q = true; else if (v.indexOf("modified") != -1) s = true; else if (v.indexOf("deleted") != -1) t = true;
                    w = w.get("path");
                    if (w.substr(w.length - 1) != "/") u = true
                });
                i = [];
                if (u && (q || s)) i.push({
                    text: "Open File",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/open_file.png",
                    handler: function () {
                        Ext.getCmp("fileTree");
                        k.forEach(function (w) {
                            var v = w.get("path");
                            w.get("status");
                            var E = w.get("status").indexOf("new") !=
                                -1;
                            w = w.get("status").indexOf("modified") != -1;
                            if (v.substr(v.length - 1) != "/" && (E || w)) {
                                v = pui.ide.getCurrentGitRepository() + pui.dirSeparator + v.replace(/\//g, pui.dirSeparator);
                                pui.ide.Gm(v)
                            }
                        })
                    }
                });
                if (u && (q || s)) i.push({
                    text: "Open Changes",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/open_changes.png",
                    handler: function () {
                        k.forEach(function (w) {
                            var v = w.get("path"), E = w.get("status"), y = E.indexOf("new") != -1;
                            E = E.indexOf("modified") != -1;
                            if (v.substr(v.length - 1) != "/") if (y) {
                                v = pui.ide.getCurrentGitRepository() + pui.dirSeparator +
                                    v.replace(/\//g, pui.dirSeparator);
                                pui.ide.Gm(v)
                            } else E && a(w)
                        })
                    }
                });
                if (o == "index") i.push({
                    text: "Unstage Changes",
                    icon: "/profoundui/proddata/images/FlatIcons/16x16/unstage.png",
                    disabled: !pui.ide.kf(["modify"], true),
                    handler: function () {
                        var w = pui.ide.getCurrentGitRepository(), v = [];
                        k.forEach(function (E) {
                            v.push(E.get("path"))
                        });
                        pui.ide.hf("reset", {directory: w, files: v})
                    }
                }); else {
                    i.push({
                        text: "Stage Changes",
                        icon: "/profoundui/proddata/images/FlatIcons/16x16/stage.png",
                        disabled: !pui.ide.kf(["modify"], true),
                        handler: function () {
                            var w =
                                pui.ide.getCurrentGitRepository(), v = [];
                            k.forEach(function (E) {
                                v.push(E.get("path"))
                            });
                            pui.ide.hf("add", {directory: w, files: v})
                        }
                    });
                    if (s || t) i.push({
                        text: "Discard Changes",
                        icon: "/profoundui/proddata/images/FlatIcons/16x16/discard.png",
                        disabled: !pui.ide.kf(["modify"], true),
                        handler: function () {
                            var w = pui.ide.getCurrentGitRepository(), v = [];
                            k.forEach(function (E) {
                                var y = E.get("status"), F = y.indexOf("modified") != -1;
                                y = y.indexOf("deleted") != -1;
                                if (F || y) v.push(E.get("path"))
                            });
                            pui.ide.hf("checkout", {directory: w, files: v})
                        }
                    })
                }
                i.length >
                0 && (new Ext.menu.Menu({items: i})).showAt(r.getXY())
            }
        }
    }), e = Kd.get("gitOutputHeight");
    e = e != null ? parseInt(e, 10) : 150;
    var f = Kd.get("gitOutputCollapsed") == "1", h = new Ext.Panel({
        id: "gitOutput",
        title: "Output",
        region: "south",
        collapsible: true,
        resizable: true,
        split: true,
        height: e,
        collapsed: f,
        bodyCssClass: "pui-git-output",
        autoScroll: true,
        bodyStyle: {padding: "10px"},
        html: "<pre></pre>",
        tbar: new Ext.Toolbar({
            items: [{
                text: "Clear", handler: function () {
                    h.body.update("<pre></pre>")
                }
            }]
        }),
        listeners: {
            resize: function (o, i, r) {
                if (!isNaN(r) &&
                    r > 0) {
                    Kd.set("gitOutputHeight", r);
                    Kd.save()
                }
            }, expand: function () {
                Kd.set("gitOutputCollapsed", "0");
                Kd.save()
            }, collapse: function () {
                Kd.set("gitOutputCollapsed", "1");
                Kd.save()
            }
        }
    }), g = [], l;
    e = pui.ide.getGitRepositories();
    if (e.length > 0) {
        e.forEach(function (o) {
            var i;
            i = pui.isCloud ? "Workspace Files" + o : pui.ide.es(o);
            g.push([o, i])
        });
        l = pui.ide.getCurrentGitRepository()
    }
    var n = new Ext.Panel({
        id: "gitTab", title: "Git", layout: "border", items: [c, d, h], tbar: new Ext.Toolbar({
            hidden: true, items: ["Repo:", new Ext.Toolbar.Spacer,
                new Ext.form.ComboBox({
                    id: "gitRepo",
                    width: 250,
                    mode: "local",
                    editable: false,
                    displayField: "displayPath",
                    valueField: "path",
                    store: new Ext.data.ArrayStore({storeId: "gitRepos", fields: ["path", "displayPath"], data: g}),
                    triggerAction: "all",
                    value: l,
                    listeners: {
                        beforequery: function () {
                            if (!pui.ide.kf(["modify"], true)) return false
                        }, select: function (o, i) {
                            var r = i.get("path");
                            r != pui.ide.getCurrentGitRepository() && pui.ide.openGitRepository(r, true);
                            o.collapse();
                            o.blur.defer(100, o)
                        }, afterrender: function (o) {
                            var i = o.getEl();
                            i.on("mouseover", function () {
                                var r = o.getValue(), k = o.getStore();
                                r = k.findExact("path", r);
                                i.dom.title = r != -1 ? k.getAt(r).get("displayPath") : ""
                            })
                        }, expand: function (o) {
                            var i = o.getWidth(), r = o.list.child("div.x-combo-list-item"), k = false;
                            o.getStore().each(function (q) {
                                q = Ext.util.TextMetrics.measure(r, q.get("displayPath"));
                                if (q.width > i) {
                                    i = q.width;
                                    k = true
                                }
                            });
                            if (k) {
                                i += 6;
                                o.list.setWidth(i + 2);
                                o.innerList.setWidth(i)
                            }
                        }
                    }
                }), new Ext.Toolbar.Fill, {
                    id: "gitCommit", text: "Commit", icon: "/profoundui/proddata/images/FlatIcons/16x16/commit.png",
                    hidden: true, handler: function () {
                        b()
                    }
                }, {
                    text: "Actions", menu: new Ext.menu.Menu({
                        listeners: {
                            beforeshow: function (o) {
                                o.removeAll();
                                if (typeof pui.ide.getCurrentGitRepository() == "string") {
                                    if (d.Ke) {
                                        pui.isCloud && !d.info.UG && !d.info.DH && o.add({
                                            text: "Set Up on GitHub",
                                            icon: "/profoundui/proddata/images/FlatIcons/16x16/github_setup.png",
                                            disabled: !pui.ide.kf(["modify"], true),
                                            handler: function () {
                                                var i = new Ext.form.FormPanel({
                                                    bodyStyle: {padding: "5px"}, items: [new Ext.form.TextField({
                                                        fieldLabel: "Organization name", name: "organization",
                                                        width: 200, emptyText: "Organization name"
                                                    }), new Ext.form.TextField({
                                                        fieldLabel: "Repository name",
                                                        name: "repository",
                                                        width: 200,
                                                        emptyText: "Repository name",
                                                        allowBlank: false,
                                                        emptyText: "A value is required",
                                                        value: pui.cloud.ws.name
                                                    }), new Ext.form.TextField({
                                                        fieldLabel: "Description",
                                                        name: "description",
                                                        width: 200,
                                                        emptyText: "Description"
                                                    })]
                                                }), r = new Ext.Window({
                                                    title: "Set Up on GitHub",
                                                    modal: true,
                                                    width: 325,
                                                    height: 160,
                                                    layout: "fit",
                                                    items: [i],
                                                    buttons: [{
                                                        text: "OK", handler: function () {
                                                            var k = i.getForm();
                                                            if (k.isValid()) {
                                                                var q =
                                                                        k.findField("repository").getValue().trim(),
                                                                    s = k.findField("organization").getValue().trim();
                                                                k = k.findField("description").getValue().trim();
                                                                var t = pui.ide.getCurrentGitRepository();
                                                                r.close();
                                                                pui.ide.hf("githubSetup", {
                                                                    repository: q,
                                                                    organization: s,
                                                                    directory: t,
                                                                    description: k
                                                                }, true, ra())
                                                            }
                                                        }
                                                    }, {
                                                        text: "Cancel", handler: function () {
                                                            r.close()
                                                        }
                                                    }],
                                                    keys: {
                                                        key: Ext.EventObject.ENTER,
                                                        stopEvent: true,
                                                        fn: function () {
                                                            r.buttons[0].handler()
                                                        }
                                                    },
                                                    listeners: {
                                                        afterrender: function () {
                                                            var k = i.getForm().findField("repository");
                                                            k.clearInvalid();
                                                            k.focus(true, 100)
                                                        }, beforeclose: function () {
                                                            if (R && R.designer) R.designer.disabled = false
                                                        }
                                                    }
                                                });
                                                if (R && R.designer) R.designer.disabled = true;
                                                r.show()
                                            }
                                        });
                                        o.add({
                                            text: "Commit All",
                                            icon: "/profoundui/proddata/images/FlatIcons/16x16/commit_all.png",
                                            disabled: !pui.ide.kf(["modify"], true),
                                            handler: function () {
                                                function i(s) {
                                                    var t = new Ext.form.FormPanel({
                                                        labelWidth: 50,
                                                        bodyStyle: {padding: "5px"},
                                                        items: [new Ext.form.TextArea({
                                                            fieldLabel: "Message",
                                                            name: "message",
                                                            allowBlank: false,
                                                            width: 400,
                                                            height: 100
                                                        })]
                                                    }), u = new Ext.Window({
                                                        title: "Commit All Changes",
                                                        modal: true,
                                                        width: 475,
                                                        height: 175,
                                                        layout: "fit",
                                                        items: [t],
                                                        buttons: [{
                                                            text: "Commit", handler: function () {
                                                                function w() {
                                                                    var y = v.findField("message").getValue();
                                                                    pui.ide.hf("commit", {
                                                                        directory: E,
                                                                        message: y,
                                                                        all: "1"
                                                                    }, false, function (F) {
                                                                        F || u.close()
                                                                    })
                                                                }

                                                                var v = t.getForm();
                                                                if (v.isValid()) {
                                                                    var E = pui.ide.getCurrentGitRepository();
                                                                    r && s ? pui.ide.hf("add", {
                                                                        directory: E,
                                                                        all: "1"
                                                                    }, false, function (y, F) {
                                                                        F === 0 && w()
                                                                    }) : w()
                                                                }
                                                            }
                                                        }, {
                                                            text: "Cancel", handler: function () {
                                                                u.close()
                                                            }
                                                        }],
                                                        listeners: {
                                                            afterrender: function () {
                                                                var w = t.getForm().findField("message");
                                                                w.focus.defer(100, w)
                                                            }, beforedestroy: function () {
                                                                if (R) R.designer.disabled = false
                                                            }
                                                        }
                                                    });
                                                    if (R) R.designer.disabled = true;
                                                    u.show()
                                                }

                                                var r = false;
                                                Ext.getCmp("gitChanges").getStore().each(function (s) {
                                                    if (s.get("tree") == "work" && s.get("status").indexOf("new") != -1) {
                                                        r = true;
                                                        return false
                                                    }
                                                });
                                                if (r && !localStorage["pui-git-autoadd-untracked-files"]) {
                                                    var k = false, q = new Ext.Window({
                                                        title: "Add Untracked Files",
                                                        layout: "fit",
                                                        modal: true,
                                                        resizable: false,
                                                        width: 400,
                                                        height: 135,
                                                        items: [new Ext.Panel({
                                                            html: "Untracked files are present. Would you like to add them to the repository?",
                                                            bodyStyle: {padding: "5px", whiteSpace: "normal"},
                                                            bodyBorder: false,
                                                            border: false,
                                                            bbar: new Ext.Toolbar({
                                                                style: {
                                                                    backgroundColor: "transparent",
                                                                    borderStyle: "none",
                                                                    fontSize: "inherit"
                                                                },
                                                                items: ["Don't ask again", new Ext.Toolbar.Spacer, new Ext.form.Checkbox({
                                                                    listeners: {
                                                                        check: function (s, t) {
                                                                            k = t
                                                                        }
                                                                    }
                                                                })]
                                                            })
                                                        })],
                                                        buttons: [{
                                                            text: "Yes", handler: function () {
                                                                q.close();
                                                                if (k) localStorage["pui-git-autoadd-untracked-files"] = "1";
                                                                i(true)
                                                            }
                                                        }, {
                                                            text: "No", handler: function () {
                                                                q.close();
                                                                if (k) localStorage["pui-git-autoadd-untracked-files"] = "0";
                                                                i(false)
                                                            }
                                                        }, {
                                                            text: "Cancel", handler: function () {
                                                                q.close()
                                                            }
                                                        }],
                                                        listeners: {
                                                            beforedestroy: function () {
                                                                if (R) R.designer.disabled = false
                                                            }
                                                        }
                                                    });
                                                    if (R) R.designer.disabled = true;
                                                    q.show()
                                                } else i(localStorage["pui-git-autoadd-untracked-files"] == "1")
                                            }
                                        });
                                        o.add([{
                                            text: "Pull",
                                            icon: "/profoundui/proddata/images/FlatIcons/16x16/pull.png",
                                            disabled: !pui.ide.kf(["modify"], true),
                                            handler: function () {
                                                var i = pui.ide.getCurrentGitRepository();
                                                pui.ide.hf("pull", {directory: i})
                                            }
                                        }, {
                                            text: "Push", icon: "/profoundui/proddata/images/FlatIcons/16x16/push.png",
                                            disabled: !pui.ide.kf(["modify"], true), handler: function () {
                                                var i = pui.ide.getCurrentGitRepository();
                                                pui.ide.hf("push", {directory: i})
                                            }
                                        }]);
                                        o.add({
                                            text: "View Status",
                                            icon: "/profoundui/proddata/images/FlatIcons/16x16/view_status.png",
                                            disabled: !pui.ide.kf(["open"], true),
                                            handler: function () {
                                                var i = pui.ide.getCurrentGitRepository();
                                                pui.ide.hf("status", {directory: i}, true)
                                            }
                                        })
                                    } else o.add({
                                        text: "Reconnect", handler: function () {
                                            pui.ide.openGitRepository(pui.ide.getCurrentGitRepository())
                                        }
                                    });
                                    o.add([{
                                        text: "Close repository",
                                        icon: "/profoundui/proddata/images/FlatIcons/16x16/close-repo.png",
                                        disabled: !pui.ide.kf(["modify"], true),
                                        handler: function () {
                                            pui.ide.xx()
                                        }
                                    }])
                                }
                                if (o.items.getCount() == 0) return false
                            }
                        }
                    })
                }], listeners: {
                resize: function (o, i) {
                    var r = i - 165;
                    Ext.getCmp("gitRepo").setWidth(r);
                    o.doLayout()
                }
            }
        }), listeners: {
            activate: function () {
                n.doLayout()
            }
        }
    });
    pui.ide.getGitRepositories().length > 0 && pui.ide.openGitRepository(pui.ide.getCurrentGitRepository());
    return n
};
pui.ide.bF = function (b) {
    var a = new Ext.form.FormPanel({
        bodyStyle: {padding: "5px"},
        items: [new Ext.form.TextField({
            fieldLabel: "Repository URL",
            name: "url",
            width: 200,
            allowBlank: false,
            blankText: "A value is required",
            validator: function (d) {
                d = d.trim();
                if (d == "") return "A value is required";
                return true
            }
        }), new Ext.form.TextField({
            fieldLabel: "Clone to",
            name: "directory",
            width: 200,
            emptyText: "Repository name",
            validator: function (d) {
                d = d.trim();
                return d == "" ? true : pui.ide.$v(d, true)
            },
            listeners: {
                afterrender: function (d) {
                    var e;
                    e = pui.isCloud ? "Workspace Files" + pui.ide.ul(b.id) : b.id;
                    e += pui.dirSeparator;
                    d = d.getEl().insertSibling({
                        tag: "div",
                        style: "display: inline-block; padding-right: 2px;",
                        html: e
                    });
                    e = d.dom.offsetWidth;
                    d = a.getForm().findField("url").getEl();
                    d.setWidth(d.getWidth() + e);
                    c.setWidth(c.getWidth() + e)
                }
            }
        })]
    }), c = new Ext.Window({
        title: "Clone repository", modal: true, width: 325, height: 130, layout: "fit", items: [a], buttons: [{
            text: "OK", handler: function () {
                var d = a.getForm();
                if (d.isValid()) {
                    var e = d.findField("url").getValue().trim(),
                        f = d.findField("directory").getValue().trim();
                    d = pui.ide.ul(b.id);
                    c.close();
                    pui.ide.hf("clone", {url: e, directory: d, targetDirectory: f}, true, function (h, g) {
                        h || g == 0 && Ext.getCmp("fileTree").getLoader().on("load", function (l, n) {
                            var o = f;
                            if (o == "") if ((match = e.match(/(\/|\\)([^\/\\]+)$/i)) && match.length >= 3) {
                                o = match[2];
                                if (o.indexOf(".git") == o.length - 4) o = o.substr(0, o.length - 4)
                            }
                            (n = n.findChild("text", o)) && n.attributes.bn && pui.ide.openGitRepository(pui.ide.ul(n.id), true)
                        }, null, {single: true});
                        b.reload()
                    })
                }
            }
        }, {
            text: "Cancel",
            handler: function () {
                c.close()
            }
        }], listeners: {
            afterrender: function () {
                var d = a.getForm().findField("url");
                d.focus.defer(100, d)
            }, beforeclose: function () {
                if (R && R.designer) R.designer.disabled = false
            }
        }
    });
    if (R && R.designer) R.designer.disabled = true;
    c.show()
};
pui.ide.jH = function (b) {
    var a = pui.ide.ul(b.id);
    pui.ide.hf("init", {directory: a}, false, function (c, d) {
        if (d == 0) {
            b.reload();
            pui.ide.openGitRepository(a, true)
        }
    })
};
pui.ide.openGitRepository = function (b, a) {
    function c(o) {
        var i = n.getView();
        i.emptyText = o;
        try {
            i.refresh()
        } catch (r) {
        }
    }

    pui.ide.eE(b);
    var d = [];
    pui.ide.getGitRepositories().forEach(function (o) {
        displayPath = pui.isCloud ? "Workspace Files" + o : pui.ide.es(o);
        d.push([o, displayPath])
    });
    Ext.StoreMgr.get("gitRepos").loadData(d);
    Ext.getCmp("gitRepo").setValue(b);
    var e = Ext.getCmp("gitMessage"), f = Ext.getCmp("gitCommit");
    e.hide();
    f.hide();
    var h = Ext.getCmp("gitTab");
    h.getTopToolbar().show();
    h.doLayout();
    var g = Ext.StoreMgr.get("gitStatus");
    g.removeAll();
    a && Ext.getCmp("widgetsPanel").setActiveTab(h);
    Ext.getCmp("fileTree");
    var l = pui.ide.Qy("/git/open?directory=" + encodeURIComponent(b));
    if (pui.isCloud) l += "&workspace_id=" + pui.cloud.ws.id;
    var n = Ext.getCmp("gitChanges");
    if (n.Ke) {
        n.Ke.onclose = null;
        n.Ke.close();
        delete n.Ke
    }
    n.info = {};
    n.Ke = new WebSocket(l);
    n.Ke.onmessage = function (o) {
        o = JSON.parse(o.data);
        if (Array.isArray(o.changes)) {
            var i = o.changes;
            if (i.length == 0) {
                c("No changes");
                e.hide();
                f.hide()
            } else {
                for (var r = false, k = 0; k < i.length; k++) if (i[k].tree ==
                    "index") {
                    r = true;
                    break
                }
                if (r) {
                    e.show();
                    f.show()
                } else {
                    e.hide();
                    f.hide()
                }
            }
            h.doLayout();
            g.loadData(i);
            n.info.UG = o.hasRemotes;
            n.info.DH = o.isUnborn
        } else {
            i = n.Ke;
            delete n.Ke;
            i.close();
            o.errno == -3 ? pui.ide.xx() : Ext.MessageBox.show({
                title: "Git Error",
                msg: o.error,
                buttons: Ext.MessageBox.OK,
                icon: Ext.MessageBox.ERROR
            })
        }
    };
    n.Ke.onclose = function (o) {
        c("Not connected to a repository<br />Right-click on a directory in the Files tree to open or clone a repository");
        g.removeAll();
        !o.GM && n.Ke && delete n.Ke;
        n.info = {};
        e.hide();
        f.hide();
        h.doLayout()
    }
};
pui.ide.hf = function (b, a, c, d, e) {
    function f(v, E) {
        i += i == "" ? "?" : "&";
        i += encodeURIComponent(v) + "=" + encodeURIComponent(E)
    }

    var h = arguments, g = Ext.getCmp("widgetsPanel"), l = Ext.getCmp("gitTab"), n = Ext.getCmp("gitOutput");
    if (c && typeof e != "function") {
        g.setActiveTab(l);
        n.expand()
    }
    var o = pui.ide.Qy("/git/" + b), i = "";
    pui.isCloud && f("workspace_id", pui.cloud.ws.id);
    for (var r in a) Array.isArray(a[r]) ? a[r].forEach(function (v) {
        f(r, v)
    }) : f(r, a[r]);
    o += i;
    var k = new WebSocket(o), q = false, s = false, t, u, w = false;
    k.onmessage = function (v) {
        v =
            JSON.parse(v.data);
        if (v.authRequired == true) {
            s = true;
            k.close()
        } else if (typeof v.exit == "number") {
            u = v.exit;
            k.close()
        } else if (v.error) {
            q = true;
            t = v.error;
            k.close()
        } else if (typeof e == "function") e(v.data); else {
            var E = n.body.child("pre", true);
            if (!w) {
                var y = "git " + (b == "githubSetup" ? "push" : b), F = y.length;
                y += "\n";
                for (var D = 0; D < F; D++) y += "=";
                y += "\n\n";
                if (E.innerHTML != "") E.innerHTML += "\n";
                E.innerHTML += y;
                w = true
            }
            E.innerHTML += v.data;
            v = n.body.dom;
            v.scrollTop = v.scrollHeight
        }
    };
    k.onclose = function () {
        if (s) {
            pui.cloud.githubAuthorizationComplete =
                function () {
                    pui.ide.hf.apply(pui.ide, h)
                };
            pui.cloud.RL()
        } else if (q) {
            if (typeof e != "function") {
                g.setActiveTab(l);
                n.expand()
            }
            Ext.MessageBox.show({title: "Error", msg: t, buttons: Ext.MessageBox.OK, icon: Ext.MessageBox.ERROR});
            typeof d == "function" && d(Error(t))
        } else {
            if (u != 0 && typeof e != "function") {
                g.setActiveTab(l);
                n.expand()
            }
            typeof d == "function" && d(null, u)
        }
    }
};
pui.ide.Rl = function () {
    pui.isCloud && pui.cloud.updateSettings(true, true)
};
pui.ide.od = function () {
    var b = {index: null, Da: null};
    Ext.getCmp("centerPanel").items.each(function (a, c) {
        if (a.title === "[Unnamed Screen]") if (a.vd && !a.vd.isDirty()) {
            b.index = c;
            b.Da = a;
            return false
        }
    });
    return b
};
pui.ide.pd = function (b, a) {
    var c = b.ifsFile, d = b.library, e = b.member, f = b.file, h = b.path || b.root, g, l, n, o = {};
    if (c) {
        g = cc("PUI0001122.pgm");
        if (h) {
            l = c.replace(h, "");
            n = h;
            if (l.charAt(0) === pui.dirSeparator) {
                l = l.substring(1);
                n += pui.dirSeparator
            }
        } else if (c.charAt(0) === pui.dirSeparator) {
            l = c.substring(1);
            n = pui.dirSeparator
        }
        if (!l && pui.isCloud) {
            d = pui.cloud.ws.SERVER_DIR;
            if (c.substr(0, d.length).toUpperCase() === d.toUpperCase()) {
                l = c.substr(d.length);
                n = d;
                if (l.charAt(0) === pui.dirSeparator) {
                    l = l.substring(1);
                    n += pui.dirSeparator
                }
            }
        }
        o.mode =
            "getattr";
        o.name = l;
        o.root = n;
        o.workspace_id = pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
    } else if (d) {
        g = cc("PUI0001110.pgm");
        o.file = f;
        o.library = d;
        o.name = e;
        o.type = "DSPF"
    }
    g && (new pui.Ajax({
        url: g, method: "post", params: o, suppressAlert: true, onsuccess: function (i) {
            var r = JSON.parse(i.jc());
            i = {success: r.success};
            if (r.success) if (r.attr) {
                i.data = r.attr;
                a(i)
            } else {
                if (r.data) {
                    var k;
                    r.data.every(function (q) {
                        if (q.name === e) {
                            k = q;
                            return false
                        }
                        return true
                    });
                    if (k) {
                        i.data = k;
                        a(i)
                    }
                }
            } else a(i)
        }, onfail: function (i) {
            a({
                success: false,
                EL: i
            })
        }
    })).send()
};
pui.ide.FB = function (b, a, c) {
    a = b.Vb;
    b = {errorId: "FILE MODIFIED"};
    var d = "";
    if (d = a.ifsFile) {
        if (pui.isCloud) {
            a = pui.cloud.ws.SERVER_DIR;
            if (d.substr(0, a.length).toUpperCase() === a.toUpperCase()) d = "Workspace files" + d.substr(a.length)
        } else d = "File " + d;
        d = d + " has been modified since it was last opened. How would you like to proceed?"
    } else d = a.library ? "Member " + a.member + " has been modified since it was last opened in source file " + a.library + "/" + a.file + ". How would you like to proceed?" : "File has been modified since it was last opened. How would you like to proceed?";
    b.msg =
        d;
    pui.ide.K.Yq(b, c)
};
pui.ide.oF = function () {
    if (!pui.isCloud) return null;
    var b = new marked.Renderer, a = b.link;
    b.link = function (c, d, e) {
        d = a.call(b, c, d, e);
        if (c.substr(0, 1) !== "#") d = d.replace(/^<a /, '<a target="_blank" rel="nofollow" ');
        return d
    };
    return {renderer: b}
};
pui.ide.Mq = function (b, a, c) {
    var d = Ext.getCmp("fileTree").root.id;
    b = d + b;
    Ext.getCmp("centerPanel").items.each(function (n) {
        var o = n.Vb;
        if (!o) return true;
        if (c && o.ifsFile.indexOf(b + pui.dirSeparator) == 0 || !c && o.ifsFile == b) {
            if (a != null) {
                o.ifsFile = c ? d + a + o.ifsFile.substr(o.ifsFile.lastIndexOf(pui.dirSeparator)) : d + a;
                var i = o.ifsFile.replace(d, ""), r = i.substr(i.lastIndexOf(pui.dirSeparator) + 1)
            } else delete n.Vb;
            var k;
            if (n.fileTab) if (a != null) {
                n.ma = i;
                o = r;
                if (n.editor.getModifiedEditor) o += " " + n.qe.type;
                if (n.isDirty) o +=
                    " *";
                k = i.substr(1)
            } else {
                n.ma = null;
                o = k = "[Unnamed File]";
                o += " *";
                n.isDirty = true;
                n.lastModified && delete n.lastModified;
                n.pg && delete n.pg
            } else if (a != null) {
                n.currentDisplay.ifsFile = o.ifsFile;
                o = r + " - " + n.vd.ki();
                if (n.toolbar.designer.dirty || n.Xa && n.vd.isDirty()) o += " *";
                k = r
            } else {
                n.currentDisplay.ifsFile = null;
                o = n.Xa ? k = "Code View" : k = n.vd.ki();
                o += " *";
                n.vd.qb()
            }
            n.setTitle(o);
            pui.ide.Ti(n, k);
            n == Ext.getCmp("centerPanel").getActiveTab() && pui.ide.refreshRibbon();
            if (!c) return false
        }
    });
    var e = pui.isCloud ? pui.cloud.ws.SERVER_DIR :
        pui.DOCUMENT_ROOT;
    if (e.charAt(e.length - 1) == pui.dirSeparator) e = e.substr(e.length - 1);
    e = e.replace(/\\/g, "/");
    b = b.replace(/\\/g, "/");
    if (b.match(RegExp("^" + e + "/", "i")) && (c || b.match(/\.css$/i))) {
        b = b.replace(RegExp(e, "i"), "");
        if (pui.isCloud && b.match(/^\/public/)) b = "/" + pui.cloud.ws.owner + "/" + pui.cloud.ws.url_path + b;
        e = c ? RegExp("^" + b + "/", "i") : RegExp("^" + b, "i");
        for (var f = document.getElementsByTagName("link"), h = f.length - 1; h >= 0; h--) {
            var g = f[h], l = g.href.replace(location.protocol + "//", "").replace(location.hostname,
                "");
            if (location.port != "") l = l.replace(":" + location.port, "");
            l.match(e) && g.parentNode.removeChild(g)
        }
    }
};
pui.ide.Qy = function (b) {
    return location.origin.replace(/http:\/\//i, "ws://").replace(/https:\/\//i, "wss://") + b
};
pui.ide.$v = function (b, a) {
    var c = b.match(/(\/|\\|\*|\?|'|"|~|:)/);
    if (c) {
        c = c[1];
        if (c != '"' && c != "'") c = '"' + c + '"';
        return (a ? "Directory" : "File") + " name cannot contain a " + c
    }
    return true
};
pui.ide.Gm = function (b, a) {
    var c = Ext.getCmp("fileTree").root.id, d = Ext.getCmp("centerPanel"), e;
    d.items.each(function (h) {
        if (h.fileTab == true && h.ma == b) {
            e = h;
            return false
        }
    });
    if (e) {
        d.setActiveTab(e);
        c = e.items.items[0];
        typeof c === "object" && c.collapsed === true && typeof c.expand === "function" && c.expand()
    } else {
        var f = {ifsFile: c + b, root: c};
        pui.ide.Td(b, null, function (h) {
            var g = pui.ide.od();
            if (g.Da) {
                d.remove(g.Da, true);
                d.setActiveTab(d.insert(g.index, h))
            } else typeof a == "number" ? d.setActiveTab(d.insert(a, h)) : d.setActiveTab(d.add(h));
            g = h.items.items[0];
            typeof g === "object" && g.collapsed === true && typeof g.expand === "function" && g.expand();
            pui.ide.pd(f, function (l) {
                if (l.success) {
                    h.lastModified = l.data.mtime;
                    h.Vb = f
                }
            })
        })
    }
};
pui.ide.Fs = function (b, a, c) {
    function d() {
        var h = Ext.getCmp("centerPanel");
        if (h.items.getCount() == 1) if (c) pui.ide.Xd = true; else h.setActiveTab(h.add(pui.ide.Bd()));
        h.remove(b, true);
        typeof a == "function" && a()
    }

    if (b.isDirty) {
        var e = "this file";
        if (b.ma != null) e = b.root + b.ma;
        if (pui.isCloud) {
            var f = pui.cloud.ws.SERVER_DIR;
            if (e.substr(0, f.length).toUpperCase() === f.toUpperCase()) e = "Workspace Files" + e.substr(f.length)
        }
        Ext.MessageBox.show({
            title: "Save Changes?", msg: "Do you want to save changes to " + e + "?", modal: true,
            icon: Ext.MessageBox.WARNING, buttons: {yes: "Save", no: "Don't Save", cancel: "Cancel"}, fn: function (h) {
                if (h == "yes") pui.ide.jf(b, false, d); else h == "no" && d()
            }
        });
        return false
    } else d()
};
pui.ide.Jy = function (b) {
    return {
        html: "html",
        htm: "html",
        ejs: "html",
        js: "javascript",
        css: "css",
        ts: "typescript",
        log: "text",
        bak: "text",
        json: "json",
        lst: "json",
        scn: "json",
        less: "less",
        scss: "scss",
        xml: "xml",
        sh: "shell",
        md: "markdown",
        php: "php",
        cpp: "cpp",
        sql: "sql"
    }[b] || "text"
};
pui.ide.JI = function (b) {
    var a = Ext.getCmp("centerPanel"), c = a.items.indexOf(b), d = b.ma;
    a.remove(b, true);
    a.items.each(function (e, f) {
        if (e.fileTab == true && e.ma == d && !e.readOnly) {
            c = f;
            a.remove(e);
            return false
        }
    });
    pui.ide.Gm(d, c)
};
pui.ide.getGitRepositories = function () {
    return pui.isCloud ? pui.cloud.ws.settings["git repositories"] ? pui.cloud.ws.settings["git repositories"].slice() : [] : localStorage["pui-git-repositories"] ? JSON.parse(localStorage["pui-git-repositories"]) : []
};
pui.ide.getCurrentGitRepository = function () {
    return pui.isCloud ? pui.cloud.ws.settings["current git repository"] : localStorage["pui-git-current-repository"]
};
pui.ide.DJ = function (b) {
    if (pui.isCloud) {
        if (b != pui.cloud.ws.settings["current git repository"]) pui.cloud.ws.settings["current git repository"] = b
    } else if (b != localStorage["pui-git-current-repository"]) localStorage["pui-git-current-repository"] = b
};
pui.ide.eE = function (b) {
    var a = pui.ide.getGitRepositories(), c = false;
    if (a.indexOf(b) == -1) {
        a.push(b);
        c = true
    }
    if (b != pui.ide.getCurrentGitRepository()) {
        pui.ide.DJ(b);
        c = true
    }
    if (pui.isCloud) {
        pui.cloud.ws.settings["git repositories"] = a;
        c && pui.cloud.updateSettings(true, true, true)
    } else localStorage["pui-git-repositories"] = JSON.stringify(a)
};
pui.ide.QI = function (b) {
    var a = pui.ide.getGitRepositories();
    b = a.indexOf(b);
    if (b != -1) {
        a.splice(b, 1);
        if (pui.isCloud) if (a.length == 0) {
            delete pui.cloud.ws.settings["git repositories"];
            typeof pui.cloud.ws.settings["current git repository"] != "undefined" && delete pui.cloud.ws.settings["current git repository"]
        } else pui.cloud.ws.settings["git repositories"] = a; else if (a.length == 0) {
            delete localStorage["pui-git-repositories"];
            typeof localStorage["pui-git-current-repository"] != "undefined" && delete localStorage["pui-git-current-repository"]
        } else localStorage["pui-git-repositories"] =
            JSON.stringify(a)
    }
};
pui.ide.xx = function () {
    pui.ide.QI(pui.ide.getCurrentGitRepository());
    var b = pui.ide.getGitRepositories(), a = Ext.StoreMgr.get("gitRepos");
    if (b.length > 0) pui.ide.openGitRepository(b[0], true); else {
        pui.isCloud && pui.cloud.updateSettings(true, true, true);
        a.removeAll();
        Ext.getCmp("gitRepo").setValue("");
        b = Ext.getCmp("gitTab");
        b.getTopToolbar().hide();
        b.doLayout();
        b = Ext.getCmp("gitChanges");
        if (b.Ke) {
            a = b.Ke;
            delete b.Ke;
            a.close()
        }
    }
};
pui.ide.ul = function (b) {
    var a = Ext.getCmp("fileTree").root.id;
    return b.replace(a, "")
};
pui.ide.es = function (b) {
    return Ext.getCmp("fileTree").root.id + b
};
pui.ide.kf = function (b, a) {
    if (!pui.isCloud) return true;
    if (a && !pui.cloud.user) return false;
    Array.isArray(b) || (b = ["open"]);
    var c = false, d = pui.cloud.ws.contributors;
    d || (d = []);
    for (var e = 0; e < d.length; e++) if (d[e].profile === pui.cloud.user) {
        c = true;
        break
    }
    if (pui.cloud.ws.owner && pui.cloud.ws.owner === pui.cloud.user || c) return true;
    for (e = 0; e < b.length; e++) if (!pui.cloud.ws[b[e]]) return false;
    return true
};
pui.ide.lh = function () {
    var b = Ext.getCmp("centerPanel").getActiveTab();
    if (b) {
        b.vd.qb();
        pui.ide.Qb();
        pui.ide.refreshRibbon()
    }
};
Ext.BLANK_IMAGE_URL = "/" + EXT_PATH + "/resources/images/default/s.gif";
Ext.onReady(function () {
    if (window.addEventListener) window.addEventListener("storage", pui.ide.dv, false); else window.attachEvent && window.attachEvent("onstorage", pui.ide.dv);
    pui.OS || (pui.OS = "OS400");
    pui.ide.FF = 1;
    if (pui.dirSeparator == null) pui.dirSeparator = "/";
    if (pui.nc() && localStorage["pui-designer-lang"]) pui.ide.Am = localStorage["pui-designer-lang"];
    Ext.QuickTips.init();
    screenMask = new Ext.LoadMask(Ext.getBody(), {msg: "Loading...", msgCls: "x-mask-loading pui-screenMask"});
    screenMask.dI = screenMask.show;
    Ext.override(Ext.LoadMask,
        {
            show: function () {
                screenMask.dI();
                var d = Ext.getBody().child("div.pui-screenMask", true);
                d.previousSibling.style.zIndex = 5E6;
                d.style.zIndex = 5000001
            }
        });
    Ext.override(Ext.form.ComboBox, {
        expand: function () {
            if (!(this.isExpanded() || !this.hasFocus)) {
                if (this.title || this.pageSize) {
                    this.Yw = 0;
                    if (this.title) this.Yw += this.header.getHeight();
                    if (this.pageSize) this.Yw += this.footer.getHeight()
                }
                if (this.hx) {
                    this.BL(this.hx);
                    delete this.hx
                }
                this.list.alignTo.apply(this.list, [this.el].concat(this.listAlign));
                this.list.setZIndex(5E4);
                this.list.show();
                Ext.isGecko2 && this.VL.wM("auto");
                this.fireEvent("expand", this)
            }
        }
    });
    pui.ide.$f = pui.ide.nF();
    if (!pui.ja) {
        var b = Pc(), a = Ext.getCmp("centerPanel");
        a.setActiveTab(a.add(pui.ide.Bd(b)));
        pui.ide.Nz = pui.ide.oF()
    }
    pui.designer.LH();
    b = {items: [], designer: true};
    for (var c in pui.widgets) b.items.push({field_type: c});
    pui.mn(b, function () {
        pui.flatlook && pui.pE();
        if (pui.ja) {
            pui.Zx();
            R.designer.k.setWidth(Ext.getCmp("ideProps").getWidth());
            R.designer.k.setHeight(Ext.getCmp("ideProps").getHeight() - 24);
            pui.ide.$f.doLayout()
        } else {
            pui.sI();
            pui.VF()
        }
        setTimeout(function () {
            Ext.get("loading").remove();
            Ext.get("loading-mask").fadeOut({remove: true});
            pui.ide.refreshRibbon();
            typeof pui.ide.MB === "function" && pui.ide.MB();
            if (pui.isCloud) {
                pui.cloud.Sl = new pui.designer.am;
                pui.cloud.Sl.Qf = "user";
                pui.cloud.Sl.Hd = ["Your Spaces", "Your Profile", "Sign Out"];
                pui.cloud.Sl.Jj = ["projects", "owner", "signout"];
                pui.cloud.Sl.handler = function (e) {
                    switch (e.toLowerCase()) {
                        case "your spaces":
                            e = "/category/your-spaces";
                            location.href =
                                e;
                            break;
                        case "your profile":
                            e = "/user/" + pui.cloud.user;
                            location.href = e;
                            break;
                        case "sign out":
                            pui.cloud.xM();
                            break
                    }
                };
                pui.cloud.Sl.init();
                pui.cloud.Pl = new pui.designer.am;
                pui.cloud.Pl.Qf = "thumbnail";
                pui.cloud.Pl.Hd = ["Replace Thumbnail", "View Full Size", "View Space"];
                pui.cloud.Pl.Jj = ["upload", "full_size", "view"];
                pui.cloud.Pl.handler = function (e) {
                    switch (e.toLowerCase()) {
                        case "replace thumbnail":
                            pui.cloud.DM();
                            break;
                        case "view full size":
                            e = Tb("pui-cloud-thumbnail").getAttribute("data-url");
                            window.open(e);
                            break;
                        case "view space":
                            e = pui.cloud.ws.owner;
                            var f = pui.cloud.ws.url_path;
                            if (!e || !f) pui.alert("This workspace has not been published yet."); else {
                                e = "/" + e + "/" + f;
                                window.open(e)
                            }
                            break
                    }
                };
                pui.cloud.Pl.init();
                var d = document.createElement("div");
                d.className = "pui-cloud-user";
                d.id = "pui-cloud-user";
                d.onclick = function () {
                    if (pui.cloud.user) pui.cloud.Sl.show(); else {
                        pui.cloud.htmlDialogType = "signin";
                        pui.cloud.fz()
                    }
                };
                document.body.appendChild(d);
                d = document.createElement("div");
                d.className = "pui-cloud-thumbnail pui-cloud-thumbnail-pos";
                d.id = "pui-cloud-thumbnail";
                d.onclick = function () {
                    pui.cloud.Pl.show()
                };
                document.body.appendChild(d);
                pui.cloud.updateThumbnail();
                pui.cloud.FM(function (e) {
                    pui.cloud.showUser(e);
                    pui.ide.refreshRibbon();
                    pui.cloud.openWorkspaceFiles(pui.cloud.ws.settings);
                    pui.cloud.ws["new"] && pui.cloud.sM()
                })
            }
        }, 250)
    })
});
pui.designer.tC = function () {
    function b() {
        if (H) {
            B = ace.edit(r);
            B.setTheme("ace/theme/textmate");
            B.setShowPrintMargin(false);
            B.session.setTabSize(2);
            B.getSession().setMode("ace/mode/css");
            B.setFontSize(14);
            B.session.setUseWrapMode(false);
            B.renderer.setShowGutter(false);
            B.setReadOnly(true);
            B.setHighlightActiveLine(false);
            B.clearSelection();
            B.session.removeMarker(B.hq)
        } else {
            B = monaco.editor.create(r, {
                value: null,
                language: "css",
                fixedOverflowWidgets: true,
                disableMonospaceOptimizations: navigator.platform.toUpperCase().indexOf("MAC") >=
                    0
            });
            B.layout()
        }
        B.setValue("/* Rules from selected class will display here. */");
        I = true
    }

    function a(N) {
        function O(ma, ka) {
            function ea(La) {
                var Ta = La.getModel().findMatches(pa);
                if (Ta.length > 0) {
                    var Wa = Ta[0].range;
                    if (Ta[0].range) {
                        Ta = Wa.startLineNumber;
                        La.setSelection(new monaco.Range(Ta, Wa.startColumn, Wa.endLineNumber, Wa.endColumn));
                        La.getAction("actions.find").run("");
                        La.revealLineInCenter(Ta)
                    }
                }
            }

            var da, Ba = ka.value, Ea = Ext.getCmp("centerPanel"), pa = ma.info.sv;
            if (H) var ia = new (ace.require("ace/search").Search)({
                needle: pa,
                wrap: true, start: 0
            });
            Ea.items.each(function (La) {
                if (La.fileTab == true && La.ma == Ba) {
                    da = La;
                    return false
                }
            });
            if (da) {
                Ea.setActiveTab(da);
                var m = da.editor;
                if (da.mc) {
                    m.moveCursorTo(0);
                    m.find(pa, ia, true);
                    m.findAll(pa, ia, false)
                } else ea(m)
            } else {
                if (pui.dirSeparator !== "/") Ba = Ba.replace(/\//g, pui.dirSeparator);
                m = pui.DOCUMENT_ROOT;
                if (pui.isCloud) {
                    m = pui.cloud.ws.SERVER_DIR;
                    if (Ba.substr(0, 8) !== pui.dirSeparator + "public" + pui.dirSeparator) return
                }
                pui.ide.Td(Ba, m, function (La) {
                    Ea.setActiveTab(Ea.add(La));
                    var Ta = La.editor;
                    setTimeout(function () {
                        if (La.mc) {
                            Ta.moveCursorTo(0);
                            Ta.find(pa, ia, true);
                            Ta.findAll(pa, ia, false)
                        } else ea(Ta)
                    }, 100)
                })
            }
        }

        function V(ma) {
            return ma.split(/[{};]/).filter(function (ka) {
                return ka.trim() ? true : false
            }).join(";\n\t")
        }

        function X(ma, ka) {
            var ea = B.session.getLine(ma);
            if (ea = ga(/((\/[a-z]+)+(\.\w+))/i, ea, ka)) {
                ea.row = ma;
                return ea
            }
        }

        function ga(ma, ka, ea) {
            var da;
            ma.lastIndex = 0;
            ka.replace(ma, function (Ea) {
                var pa = arguments[arguments.length - 2], ia = Ea.length;
                if (pa <= ea && pa + ia >= ea) da = {start: pa, value: Ea}
            });
            if (!da && ka.indexOf(".css") != -1) {
                ma = ka.indexOf(".css");
                var Ba =
                    ka.indexOf("/profoundui");
                if (Ba !== -1 && ma !== -1) da = {start: 1, value: ka.substr(Ba, ma + 3)}
            }
            return da
        }

        function U() {
            B.session.removeMarker(B.hq);
            B.renderer.setMouseCursor("")
        }

        var Z = N.info;
        if (Z) {
            var la = "", Y = [], oa = [];
            Z.url.length > 0 && Z.url.forEach(function (ma, ka) {
                var ea = ma, da = ea.match(/((\/[a-z]+)+(\.\w+))/i);
                if (da) ma = da[0]; else {
                    da = ea.indexOf(".css");
                    var Ba = ea.indexOf("/profoundui");
                    ma = Ba !== -1 && da !== -1 ? ea.substr(Ba, da) : ea
                }
                J && oa.push(ma);
                la += "/*\n\tRules are located in the following file:\n\t" + ma + "\n*/\n";
                la +=
                    J ? Z.sv + "{\n\t" : "{\n\t";
                la += V(Z.cssText[ka]);
                la += ";\n";
                la += "}\n"
            });
            B.setValue(la);
            if (J) {
                if (oa.length > 0) {
                    var qa = B.getModel();
                    qa.updateOptions({tabSize: 2});
                    oa.forEach(function (ma) {
                        ma = qa.findMatches(ma);
                        ma.length > 0 && ma[0].range && Y.push(ma[0].range)
                    })
                }
                if (Y.length > 0) Y = Y.map(function (ma) {
                    return {
                        range: new monaco.Range(ma.startLineNumber, ma.startColumn, ma.endLineNumber, ma.endColumn),
                        options: {inlineClassName: "monaco-link"}
                    }
                });
                B.setPosition({column: 1, lineNumber: 1});
                B.setScrollTop(0);
                B.layout();
                B.deltaDecorations([],
                    Y);
                K = B.onMouseDown(function (ma) {
                    if ((ma = ma.target) && ma.element && ma.element.classList.contains("monaco-link")) (ma = ma.element.innerText) && O(D, {value: ma})
                })
            }
            if (H) {
                B.clearSelection();
                B.moveCursorTo(0);
                if (Q == "dspf") {
                    B.on("click", function (ma, ka) {
                        var ea = X(ma.$pos.row, ma.$pos.column), da = ka.renderer.content.style.cursor == "pointer";
                        if (ea && !da) da = ma.domEvent.currentTarget.style.cursor === "pointer";
                        ea && da && O(D, ea);
                        ma.stop()
                    });
                    B.on("mousemove", function (ma, ka) {
                        ma.stop();
                        var ea = ka.renderer, da = ea.scroller.getBoundingClientRect(),
                            Ba = (ma.x + ea.scrollLeft - da.left - ea.$padding) / ea.characterWidth;
                        ea = Math.floor((ma.y + ea.scrollTop - da.top) / ea.lineHeight);
                        da = Math.round(Ba);
                        da = {row: ea, column: da, side: Ba - da > 0 ? 1 : -1};
                        Ba = ka.session;
                        var Ea = Ba.screenToDocumentPosition(da.row, da.column), pa = ka.selection.getRange();
                        if (!pa.isEmpty()) if (pa.start.row <= ea && pa.end.row >= ea) return U();
                        ea = Ba.getLine(Ea.row);
                        if (Ea.column == ea.length) if (Ba.documentToScreenPosition(Ea.row, Ea.column).column != da.column) return U();
                        ea = X(Ea.row, Ea.column);
                        if (!ea) return U();
                        ka.renderer.setMouseCursor("pointer");
                        Ba.removeMarker(ka.hq);
                        ea = new (ace.require("ace/range").Range)(ea.row, ea.start, ea.row, ea.start + ea.value.length);
                        ka.hq = Ba.addMarker(ea, "ace-link", "text", true)
                    })
                }
            }
        }
    }

    function c(N, O) {
        var V = [], X = {};
        for (var ga in N) V.push(ga);
        V.sort(function (U, Z) {
            return U.toLowerCase() > Z.toLowerCase() ? 1 : -1
        });
        O && V.reverse();
        V.forEach(function (U) {
            X[U] = N[U]
        });
        return X
    }

    function d(N) {
        for (; i.firstChild;) i.removeChild(i.firstChild);
        N = f(N);
        var O = 0;
        for (var V in N) {
            var X = N[V], ga = V, U = parseInt(O / 2), Z = (O - U * 2) * 275 + 10;
            U = U * 28 + 10;
            O++;
            var la =
                document.createElement("div");
            la.uL = ga;
            la.value = ga;
            la.innerText = ga;
            la.title = ga;
            la.info = X;
            la.style.position = "absolute";
            la.style.left = Z + "px";
            la.style.top = U + "px";
            la.style.width = "270px";
            la.style.height = "25px";
            la.style.overflow = "hidden";
            la.style.textOverflow = "ellipsis";
            la.style.backgroundColor = "#ffffff";
            la.style.border = "1px solid #ffffff";
            la.style.cursor = "default";
            la.style.fontSize = "16px";
            la.style.fontFamily = "Roboto";
            (function (Y) {
                Y.onmouseover = function () {
                    if (Y != D) {
                        Y.style.backgroundColor = "#eff9ff";
                        Y.style.borderColor =
                            "#daf2fc"
                    }
                };
                Y.onmouseout = function () {
                    if (Y != D) {
                        Y.style.backgroundColor = "#ffffff";
                        Y.style.borderColor = "#ffffff"
                    }
                };
                Y.ondblclick = function () {
                    k.onclick()
                };
                Y.onclick = function () {
                    if (Y != D) {
                        if (D != null) {
                            D.style.backgroundColor = "#ffffff";
                            D.style.borderColor = "#ffffff";
                            D.style.borderStyle = "solid"
                        }
                        Y.style.backgroundColor = "#d2edfb";
                        Y.style.borderColor = "#666666";
                        Y.style.borderStyle = "dotted";
                        D = Y;
                        k.disabled = false;
                        n.innerHTML = "Selected CSS class: ";
                        var oa = document.createElement("span");
                        oa.innerText = Y.info.sv;
                        oa.style.fontWeight =
                            "bold";
                        n.appendChild(oa);
                        e();
                        a(Y);
                        z.xI(Y.value)
                    }
                }
            })(la);
            i.appendChild(la)
        }
        if (O == 0) {
            V = document.createElement("div");
            V.style.position = "absolute";
            V.style.left = "180px";
            V.style.top = "140px";
            V.style.fontFamily = "Roboto";
            V.style.fontSize = "22px";
            V.innerHTML = "No CSS Classes found.";
            i.appendChild(V)
        }
    }

    function e() {
        if (J) K && K.dispose(); else {
            B.session.removeAllListeners("click");
            B.session.removeAllListeners("mousemove")
        }
    }

    function f(N) {
        var O = {}, V = false, X = ["azzurra-legacy.css", "designer.css", "ext-all.css", "editor.main",
                "xterm.css"],
            ga = ["profoundui.css", "qtips.css", "puisplash.css", "designer_respeditor.css", "ipademulator.css", "iphoneemulator.css", "pui-blueprint.css", "pui-defaults.css", "pui-fonts.css", "pui-icons.css", "pui-office-copy.css", "pui-widget-sets.css", "cloud.css"];
        if (v.checked) V = true;
        if (y.checked) X = X.concat(ga);
        Array.from(document.styleSheets).filter(function (U) {
            return !U.href || !X.every(function (Z) {
                return U.href.indexOf(Z) === -1
            }) ? false : true
        }).map(function (U) {
            return Array.from(U.cssRules)
        }).forEach(function (U) {
            cssRules =
                U;
            U.forEach(function (Z) {
                try {
                    if (Z.styleSheet) cssRules = cssRules.concat(Array.from(Z.styleSheet.cssRules))
                } catch (la) {
                }
            });
            O = cssRules.reduce(function (Z, la) {
                var Y = la.selectorText;
                try {
                    var oa = la.cssText
                } catch (qa) {
                    return Z
                }
                if (Y) if (Y.indexOf(".") === 0 && Y.indexOf(":") === -1 && (Y.toLowerCase().indexOf(N) != -1 || V && oa.toLowerCase().indexOf(N) != -1)) {
                    var ma = oa.indexOf("{");
                    oa = oa.substr(ma);
                    Y.split(",").forEach(function (ka) {
                        ka = ka.trim();
                        if (ka.indexOf(".") === 0 && ka.indexOf(":") === -1 && (ka.toLowerCase().indexOf(N) != -1 || V &&
                            oa.toLowerCase().indexOf(N) != -1)) {
                            var ea = ka.split(/[. ]/);
                            if (!ea[0] && ea.length <= 2) if (Z[ea[1]]) {
                                ka = Z[ea[1]].url.indexOf(la.parentStyleSheet.href);
                                if (ka != -1) Z[ea[1]].cssText[ka] += oa; else {
                                    Z[ea[1]].url.push(la.parentStyleSheet.href);
                                    Z[ea[1]].cssText.push(oa)
                                }
                            } else Z[ea[1]] = {sv: ka, url: [la.parentStyleSheet.href], cssText: [oa]}
                        }
                    })
                }
                return Z
            }, O)
        });
        return c(O, F)
    }

    this.fe = null;
    var h = document.createElement("div"), g = document.createElement("div"), l = document.createElement("div"),
        n = document.createElement("div"), o =
            document.createElement("div"), i = document.createElement("div"), r = document.createElement("div"),
        k = document.createElement("input"), q = document.createElement("input"), s = document.createElement("input"),
        t = document.createElement("button"), u = document.createElement("i"), w = document.createElement("div"),
        v = document.createElement("input"), E = document.createElement("div"), y = document.createElement("input"),
        F = false, D, B, I = false, z = this, H = false, J = true, K = null;
    if (pui.is_ie || pui.ie_mode <= 11 || pui.useAceEditor || !window.monaco) {
        J =
            false;
        H = true
    }
    if (window.monaco || window.ace) b();
    h.style.width = "600px";
    h.style.border = "2px solid #336699";
    h.style.position = "absolute";
    h.style.top = "50px";
    h.style.left = "50px";
    h.style.padding = "0px";
    h.style.zIndex = S.jw;
    h.style.visibility = "hidden";
    h.style.display = "none";
    h.style.height = "680px";
    h.style.overflow = "hidden";
    S.W(document, "mousedown", function (N) {
        for (N = S.getTarget(N); N != null;) {
            if (N == h) return;
            N = N.parentNode
        }
        z.hide()
    });
    g.innerHTML = "Select Css Class";
    g.style.fontSize = "12px";
    g.style.fontFamily = "Roboto";
    g.style.backgroundColor = "#6699cc";
    g.style.padding = "3px";
    g.style.cursor = "move";
    g.style.fontWeight = "bold";
    g.style.color = "#ffffff";
    g.style.position = "absolute";
    g.style.left = "0px";
    g.style.top = "0px";
    g.style.whiteSpace = "normal";
    g.style.width = "100%";
    if (typeof g.style.MozUserSelect != "undefined") g.style.MozUserSelect = "none";
    l.style.overflow = "auto";
    l.style.height = "670px";
    l.style.backgroundColor = "#ffffff";
    l.style.padding = "0px";
    l.style.position = "absolute";
    l.style.left = "0px";
    l.style.top = "20px";
    l.style.whiteSpace =
        "normal";
    l.style.width = "100%";
    var L = null;
    if (Q == "dspf") L = pui.Gf(h, g, l, function () {
        z.hide()
    });
    n.style.position = "absolute";
    n.style.left = "10px";
    n.style.top = "5px";
    n.style.fontFamily = "Roboto";
    n.style.fontSize = "16px";
    n.className = "pui-designer-text-selectable";
    n.innerHTML = "Selected CSS class:";
    o.style.position = "absolute";
    o.style.left = "10px";
    o.style.top = "35px";
    o.style.fontFamily = "Roboto";
    o.style.fontSize = "16px";
    o.innerText = "Search:";
    s.style.position = "absolute";
    s.style.left = "75px";
    s.style.top = "32px";
    s.style.width =
        "295px";
    s.style.fontFamily = "Roboto";
    s.style.fontSize = "16px";
    if (pui.flatlook) {
        s.style.backgroundColor = "#fefefe";
        s.style.border = "1px solid";
        s.style.borderColor = "#aeb6be";
        s.style.color = "#31373d";
        s.style.height = "21px"
    }
    s.oninput = function () {
        var N = this.value.toLowerCase().trim();
        N ? d(N) : d("")
    };
    w.style.position = "absolute";
    w.style.left = "10px";
    w.style.top = "62px";
    w.style.fontFamily = "Roboto";
    w.style.fontSize = "16px";
    w.innerText = "Search Rules:";
    w.title = "Include classes where rules contain searched text";
    v.style.position =
        "absolute";
    v.style.left = "113px";
    v.style.top = "66px";
    v.style.cursor = "pointer";
    v.type = "checkbox";
    v.style.transform = "scale(1.25)";
    v.value = "";
    v.checked = false;
    v.onclick = function () {
        var N = s.value.toLowerCase().trim();
        N && d(N)
    };
    E.style.position = "absolute";
    E.style.left = "135px";
    E.style.top = "62px";
    E.style.fontFamily = "Roboto";
    E.style.fontSize = "16px";
    E.innerText = "User Styles Only:";
    E.title = "Exclude all styles shipped with Profound";
    y.style.position = "absolute";
    y.style.left = "260px";
    y.style.top = "66px";
    y.style.cursor =
        "pointer";
    y.type = "checkbox";
    y.style.transform = "scale(1.25)";
    y.value = "";
    y.checked = false;
    y.onclick = function () {
        var N = s.value.toLowerCase().trim();
        d(N)
    };
    t.style.position = "absolute";
    t.style.right = "11px";
    t.style.top = "57px";
    t.style.cursor = "pointer";
    u.className = "pui-fa-icons fa-sort";
    u.style.fontSize = "18px";
    if (pui.flatlook) {
        t.style.backgroundColor = "rgb(25, 121, 202)";
        t.style.borderColor = "rgb(24, 116, 193)";
        t.style.color = "white";
        t.style.border = "none";
        u.style.fontSize = "21px";
        t.onmouseover = function () {
            this.style.backgroundColor =
                "#1c87e1"
        };
        t.onmouseout = function () {
            this.style.backgroundColor = "rgb(25, 121, 202)"
        }
    }
    t.onclick = function () {
        var N = s.value.toLowerCase().trim();
        F = !F;
        N ? d(N) : d("")
    };
    i.style.position = "absolute";
    i.style.left = "10px";
    i.style.top = "83px";
    i.style.width = "578px";
    i.style.height = "313px";
    i.style.border = "1px solid #cccccc";
    i.style.backgroundColor = "#ffffff";
    i.style.overflow = "auto";
    r.style.position = "absolute";
    r.style.left = "10px";
    r.style.top = "410px";
    r.style.width = "578px";
    r.style.height = "200px";
    r.style.border = "1px solid #cccccc";
    r.style.backgroundColor = "#ffffff";
    if (!J) r.style.overflow = "auto";
    k.style.position = "absolute";
    k.style.left = "425px";
    k.style.top = "625px";
    k.style.width = "75px";
    k.style.fontFamily = "Roboto";
    k.style.fontSize = "15px";
    k.style.cursor = "pointer";
    k.type = "button";
    k.value = "Select";
    if (pui.flatlook) {
        k.style.backgroundColor = "rgb(25, 121, 202)";
        k.style.border = "none";
        k.style.color = "white";
        k.style.padding = "4px";
        k.onmouseover = function () {
            this.style.backgroundColor = "#1c87e1"
        };
        k.onmouseout = function () {
            this.style.backgroundColor =
                "rgb(25, 121, 202)"
        }
    }
    k.disabled = true;
    k.onclick = function () {
        if (D != null) {
            z.fe && z.fe(D.value);
            z.hide(true)
        }
    };
    q.style.position = "absolute";
    q.style.left = "512px";
    q.style.top = "625px";
    q.style.width = "75px";
    q.style.fontFamily = "Roboto";
    q.style.fontSize = "15px";
    q.style.cursor = "pointer";
    q.type = "button";
    q.value = "Cancel";
    if (pui.flatlook) {
        q.style.backgroundColor = "rgb(25, 121, 202)";
        q.style.border = "none";
        q.style.color = "white";
        q.style.padding = "4px";
        q.onmouseover = function () {
            this.style.backgroundColor = "#1c87e1"
        };
        q.onmouseout =
            function () {
                this.style.backgroundColor = "rgb(25, 121, 202)"
            }
    }
    q.onclick = function () {
        z.hide()
    };
    t.appendChild(u);
    l.appendChild(n);
    l.appendChild(o);
    l.appendChild(s);
    l.appendChild(w);
    l.appendChild(v);
    l.appendChild(E);
    l.appendChild(y);
    l.appendChild(t);
    l.appendChild(i);
    l.appendChild(r);
    l.appendChild(k);
    l.appendChild(q);
    h.appendChild(g);
    h.appendChild(l);
    document.body.appendChild(h);
    pui.rd({wc: g, move: h, opacity: 85});
    this.show = function (N, O, V) {
        var X = document.body.offsetWidth, ga = document.body.offsetHeight;
        if (X ==
            null) X = 1E4;
        if (ga == null) ga = 1E4;
        X -= 660;
        ga -= 710;
        if (X < 0) X = 0;
        if (ga < 0) ga = 0;
        var U = S.getX(N);
        N = S.getY(N);
        N -= 120;
        if (Q == "dspf" && N > ga) N = ga;
        if (N < 0) N = 0;
        if (U > X) U = X;
        h.style.left = U + "px";
        h.style.top = N + "px";
        if (O != null) h.style.left = O + "px";
        if (V != null) h.style.top = V + "px";
        h.style.visibility = "visible";
        h.style.display = "";
        if (J && pui.useAceEditor) {
            J = false;
            H = true;
            B && B.dispose();
            b()
        }
        if (!I && (window.ace || window.monaco)) b();
        D = null;
        v.checked = false;
        n.innerHTML = "Selected CSS class:";
        s.value = "";
        if (F) F = false;
        B.setValue("/* Rules from selected class will display here. */");
        if (H) {
            B.session.removeMarker(B.hq);
            B.clearSelection()
        }
        d("")
    };
    this.hide = function (N) {
        !N && !z.isHidden() && z.mx && z.mx();
        B && e();
        h.style.visibility = "hidden";
        h.style.display = "none"
    };
    this.isHidden = function () {
        return h.style.visibility == "hidden"
    };
    this.db = function (N) {
        if (L != null) L.innerHTML = N; else g.innerHTML = N
    }
};
pui.designer.yC = function () {
    function b(g, l) {
        var n = document.createElement("div");
        n.style.position = "absolute";
        n.style.top = "4px";
        n.style.left = e + "px";
        n.style.width = g + "px";
        n.style.height = "22px";
        n.style.backgroundRepeat = "no-repeat";
        d.appendChild(n);
        if (l != null) {
            n.bd = document.createElement("div");
            n.bd.style.position = "absolute";
            n.bd.style.top = "22px";
            n.bd.style.left = e + 4 + "px";
            n.bd.style.width = "16px";
            n.bd.style.height = "3px";
            n.bd.style.backgroundColor = l;
            n.bd.style.cursor = "pointer";
            n.bd.style.fontSize = "0px";
            d.appendChild(n.bd)
        }
        d.style.width =
            e + 4 + "px";
        e += g;
        return n
    }

    function a(g, l) {
        var n = f[g];
        if (n != null) {
            var o = l;
            if (o != "") o = "-" + o;
            if (o == "" && n.$b.selected) o = "-sel";
            o += ".png";
            if (n.eq) n.eq.style.backgroundImage = "url(" + h + n.config.left + o + ")";
            n.$b.style.backgroundImage = "url(" + h + n.config.Qc + o + ")";
            if (n.Uq) n.Uq.style.backgroundImage = "url(" + h + n.config.right + o + ")"
        }
    }

    this.handler = this.width = this.b = null;
    this.Og = false;
    this.Ad = null;
    var c = this, d = document.createElement("div"), e = 4, f = {},
        h = pui.flatlook ? "/profoundui/proddata/images/FlatIcons/flat-editbar-gray/" :
            "/profoundui/proddata/images/icons/editbar/";
    this.init = function () {
        d.style.position = "absolute";
        d.style.left = "0px";
        d.style.top = "0px";
        if (pui.flatlook) {
            d.style.backgroundColor = "#e6e8eb";
            d.style.border = "1px solid #acb5bd"
        } else {
            d.style.backgroundColor = "#d5e4f3";
            d.style.border = "1px solid #7898c1"
        }
        d.style.height = "30px";
        d.style.zIndex = S.RK;
        d.style.cursor = "move";
        d.onmousedown = function (g) {
            c.Og = true;
            setTimeout(function () {
                c.Og = false
            }, 0);
            S.ua(g)
        };
        pui.rd({wc: d, move: d, opacity: 85});
        c.b.appendChild(d)
    };
    this.ro = function () {
        e +=
            4
    };
    this.add = function (g) {
        var l = {};
        if (g.left) {
            l.eq = b(2);
            l.eq.style.cursor = "default";
            l.eq.onmousedown = function (n) {
                S.ua(n)
            }
        }
        if (g.Qc) {
            l.$b = b(20, g.color);
            l.$b.style.cursor = "pointer";
            if (g.tooltip) l.$b.title = g.tooltip;
            if (g.selected) l.$b.selected = true;
            l.$b.onmouseover = function () {
                a(g.Qc, "hi")
            };
            l.$b.onmouseout = function () {
                a(g.Qc, "")
            };
            l.$b.onmousedown = function (n) {
                c.Og = true;
                setTimeout(function () {
                    c.Og = false
                }, 0);
                S.ua(n)
            };
            l.$b.onmouseup = function () {
                c.Og = false
            };
            l.$b.onclick = function () {
                if (g.co) {
                    l.$b.selected = l.$b.selected ?
                        false : true;
                    a(g.Qc, "")
                }
                c.handler != null && c.handler(g.Qc, l.$b.selected)
            };
            if (g.color != null) {
                l.$b.bd.onmouseover = function () {
                    a(g.Qc, "hi")
                };
                l.$b.bd.onmouseout = function () {
                    a(g.Qc, "")
                };
                l.$b.bd.onmousedown = function (n) {
                    c.Og = true;
                    setTimeout(function () {
                        c.Og = false
                    }, 0);
                    S.ua(n)
                };
                l.$b.bd.onmouseup = function () {
                    c.Og = false
                };
                l.$b.bd.onclick = function (n) {
                    if (c.Ad == null) c.Ad = new pui.designer.mw;
                    c.Ad.yn = function (o) {
                        l.$b.bd.style.backgroundColor = o;
                        c.handler != null && c.handler(g.Qc, o)
                    };
                    c.Ad.lo(pui.wn(l.$b.bd.style.backgroundColor));
                    c.Ad.show(n)
                };
                l.$b.onclick = function (n) {
                    l.$b.bd.onclick(n)
                }
            }
        }
        if (g.right) {
            l.Uq = b(2);
            l.Uq.style.cursor = "default";
            l.Uq.onmousedown = function (n) {
                S.ua(n)
            }
        }
        l.config = g;
        f[g.Qc] = l;
        S.vA(h + g.Qc + "-hi.png");
        a(g.Qc, "")
    };
    this.bk = function (g, l) {
        f[g].$b.selected = l;
        a(g, "")
    };
    this.SF = function (g) {
        return f[g] != null
    };
    this.yv = function (g, l) {
        f[g].$b.bd.style.backgroundColor = l
    };
    this.setPosition = function (g, l) {
        d.style.left = g + "px";
        d.style.top = l + "px"
    };
    this.getWidth = function () {
        return parseInt(d.style.width)
    };
    this.destroy = function () {
        c.Ad !=
        null && c.Ad.destroy();
        c.Ad = null;
        d.innerHTML = "";
        d.parentNode.removeChild(d);
        d = null;
        e = 4;
        f = {}
    }
};
pui.designer.IC = function () {
    function b(J, K, L) {
        if (J) {
            var N = {};
            N.classList = K.classList;
            K = K.icons.filter(function (O) {
                return (typeof O === "string" ? O : O.icon).indexOf(J) === -1 ? false : true
            });
            N.icons = K;
            d(N, L)
        }
    }

    function a(J) {
        if (y) {
            J.Tq = false;
            return J.sort(function (K, L) {
                return K.icon > L.icon ? 1 : -1
            })
        } else {
            J.Tq = true;
            return J.reverse()
        }
    }

    function c(J, K) {
        if (!J) {
            var L = h();
            J = L.Pp;
            K = L.Qp
        }
        w.value = "";
        y || (y = true);
        if (J.icons.Tq || J.icons.Tq === undefined) {
            J.icons.Tq = false;
            J.icons.sort(function (N, O) {
                return N.icon > O.icon ? 1 : -1
            })
        }
        d(J,
            K)
    }

    function d(J, K) {
        g(s);
        for (var L = 0, N = J.icons, O = 0; O < N.length; O++) {
            var V = N[O];
            if (typeof V === "string") V = {icon: N[O], classList: ""};
            var X = V.icon;
            V = V.classList;
            if (typeof V === "string") V = [V];
            V.forEach(function (ga) {
                var U = document.createElement("div"), Z = parseInt(L / 4), la = (L - Z * 4) * 100 + 10,
                    Y = Z * 110 + 10;
                L++;
                U.SL = X;
                if (K == "jQueryIcons") {
                    Y = Z * 55 + 10;
                    U.value = X
                } else U.value = ga.length > 0 ? K + "-" + ga + ":" + X : K + ":" + X;
                U.YL = X;
                U.style.position = "absolute";
                U.style.left = la + "px";
                U.style.top = Y + "px";
                U.style.width = "85px";
                U.style.height = "45px";
                U.style.backgroundColor = "#ffffff";
                U.style.border = "1px solid #ffffff";
                U.style.cursor = "default";
                (function (oa) {
                    oa.onmouseover = function () {
                        if (oa != F) {
                            oa.style.backgroundColor = "#eff9ff";
                            oa.style.borderColor = "#daf2fc"
                        }
                    };
                    oa.onmouseout = function () {
                        if (oa != F) {
                            oa.style.backgroundColor = "#ffffff";
                            oa.style.borderColor = "#ffffff"
                        }
                    };
                    var qa = 0, ma = null;
                    oa.onmousedown = function () {
                        qa++;
                        if (ma && F != oa) qa = 0;
                        if (qa <= 1) ma = oa;
                        if (qa > 1 && F === oa) {
                            qa = 0;
                            ma = null;
                            t.onclick()
                        }
                    };
                    oa.onclick = function () {
                        if (oa != F) {
                            if (F != null) {
                                F.style.backgroundColor =
                                    "#ffffff";
                                F.style.borderColor = "#ffffff";
                                F.style.borderStyle = "solid"
                            }
                            oa.style.backgroundColor = "#d2edfb";
                            oa.style.borderColor = "#666666";
                            oa.style.borderStyle = "dotted";
                            F = oa;
                            t.disabled = false
                        }
                    }
                })(U);
                Z = J.classList[ga];
                if (K != "jQueryIcons") {
                    ga = document.createElement("i");
                    if (K == "material") {
                        ga.className = Z;
                        ga.innerHTML = X
                    } else ga.className = Z + X;
                    ga.style.position = "absolute";
                    ga.style.top = "5px";
                    ga.style.width = "32px";
                    ga.style.height = "32px";
                    ga.style.left = "26px";
                    ga.style.fontSize = "30px"
                } else {
                    ga = document.createElement("span");
                    ga.style.top = "5px";
                    ga.style.position = "absolute";
                    ga.style.width = "18px";
                    ga.style.height = "18px";
                    ga.style.left = "32px";
                    Z += X == "left arrow" ? "arrow-l" : X == "right arrow" ? "arrow-r" : X == "up arrow" ? "arrow-u" : X == "down arrow" ? "arrow-d" : X;
                    ga.className = Z
                }
                Z = document.createElement("div");
                Z.style.position = "absolute";
                Z.style.left = "0px";
                Z.style.top = K == "jQueryIcons" ? "25px" : "45px";
                Z.style.width = "85px";
                Z.style.height = "20px";
                Z.style.fontFamily = "arial";
                Z.style.fontSize = "12px";
                Z.style.textAlign = "center";
                Z.style.overflow = "hidden";
                Z.appendChild(document.createTextNode(X));
                Z.title = X;
                U.appendChild(ga);
                U.appendChild(Z);
                s.appendChild(U)
            })
        }
        if (L == 0) {
            N = document.createElement("div");
            N.style.position = "absolute";
            N.style.left = "160px";
            N.style.top = "140px";
            N.style.fontFamily = "Trebuchet MS";
            N.style.fontSize = "16px";
            N.innerHTML = "No Icons found.";
            s.appendChild(N)
        }
    }

    function e(J) {
        if (J) {
            q.style.display = "";
            w.style.display = "";
            v.style.display = "";
            s.style.top = "52px";
            s.style.height = "320px"
        } else {
            q.style.display = "none";
            w.style.display = "none";
            v.style.display =
                "none";
            s.style.top = "32px";
            s.style.height = "340px"
        }
    }

    function f() {
        if (pui.customIconList && pui.customIconList) if (Array.isArray(pui.customIconList.icons) && pui.customIconList.icons.length) return pui.customIconList.icons;
        return z
    }

    function h(J) {
        J = J ? "jQueryIcons" : "material";
        for (var K = f(), L, N, O = 0; O < K.length; O++) {
            var V = K[O];
            if (V.type === J) {
                L = V;
                N = V.type;
                break
            }
        }
        if (!L) {
            L = K[0];
            N = K[0].type
        }
        return {Pp: L, Qp: N}
    }

    function g(J) {
        if (J) for (; J.firstChild;) J.removeChild(J.firstChild)
    }

    function l(J) {
        g(r);
        f().forEach(function (K) {
            var L =
                K.type;
            K = K.title;
            if (L === "jQueryIcons") {
                if (J) {
                    L = new Option(K, L);
                    r.appendChild(L)
                }
            } else {
                L = new Option(K, L);
                r.appendChild(L)
            }
        })
    }

    this.fe = null;
    var n = document.createElement("div"), o = document.createElement("div"), i = document.createElement("div"),
        r = document.createElement("select"), k = document.createElement("div"), q = document.createElement("div"),
        s = document.createElement("div"), t = document.createElement("input"), u = document.createElement("input"),
        w = document.createElement("input"), v = document.createElement("button"),
        E = document.createElement("i"), y = true, F, D = true, B, I = this, z = [{
            type: "material",
            title: "Material Icons",
            classList: {"": "pui-material-icons"},
            icons: ["3d_rotation", "ac_unit", "access_alarm", "access_alarms", "access_time", "accessibility", "accessible", "account_balance", "account_balance_wallet", "account_box", "account_circle", "adb", "add", "add_a_photo", "add_alarm", "add_alert", "add_box", "add_circle", "add_circle_outline", "add_location", "add_shopping_cart", "add_to_photos", "add_to_queue", "adjust", "airline_seat_flat",
                "airline_seat_flat_angled", "airline_seat_individual_suite", "airline_seat_legroom_extra", "airline_seat_legroom_normal", "airline_seat_legroom_reduced", "airline_seat_recline_extra", "airline_seat_recline_normal", "airplanemode_active", "airplanemode_inactive", "airplay", "airport_shuttle", "alarm", "alarm_add", "alarm_off", "alarm_on", "album", "all_inclusive", "all_out", "android", "announcement", "apps", "archive", "arrow_back", "arrow_downward", "arrow_drop_down", "arrow_drop_down_circle", "arrow_drop_up", "arrow_forward",
                "arrow_upward", "art_track", "aspect_ratio", "assessment", "assignment", "assignment_ind", "assignment_late", "assignment_return", "assignment_returned", "assignment_turned_in", "assistant", "assistant_photo", "attach_file", "attach_money", "attachment", "audiotrack", "autorenew", "av_timer", "backspace", "backup", "battery_alert", "battery_charging_full", "battery_full", "battery_std", "battery_unknown", "beach_access", "beenhere", "block", "bluetooth", "bluetooth_audio", "bluetooth_connected", "bluetooth_disabled", "bluetooth_searching",
                "blur_circular", "blur_linear", "blur_off", "blur_on", "book", "bookmark", "bookmark_border", "border_all", "border_bottom", "border_clear", "border_color", "border_horizontal", "border_inner", "border_left", "border_outer", "border_right", "border_style", "border_top", "border_vertical", "branding_watermark", "brightness_1", "brightness_2", "brightness_3", "brightness_4", "brightness_5", "brightness_6", "brightness_7", "brightness_auto", "brightness_high", "brightness_low", "brightness_medium", "broken_image", "brush", "bubble_chart",
                "bug_report", "build", "burst_mode", "business", "business_center", "cached", "cake", "call", "call_end", "call_made", "call_merge", "call_missed", "call_missed_outgoing", "call_received", "call_split", "call_to_action", "camera", "camera_alt", "camera_enhance", "camera_front", "camera_rear", "camera_roll", "cancel", "card_giftcard", "card_membership", "card_travel", "casino", "cast", "cast_connected", "center_focus_strong", "center_focus_weak", "change_history", "chat", "chat_bubble", "chat_bubble_outline", "check", "check_box", "check_box_outline_blank",
                "check_circle", "chevron_left", "chevron_right", "child_care", "child_friendly", "chrome_reader_mode", "class", "clear", "clear_all", "close", "closed_caption", "cloud", "cloud_circle", "cloud_done", "cloud_download", "cloud_off", "cloud_queue", "cloud_upload", "code", "collections", "collections_bookmark", "color_lens", "colorize", "comment", "compare", "compare_arrows", "computer", "confirmation_number", "contact_mail", "contact_phone", "contacts", "content_copy", "content_cut", "content_paste", "control_point", "control_point_duplicate",
                "copyright", "create", "create_new_folder", "credit_card", "crop", "crop_16_9", "crop_3_2", "crop_5_4", "crop_7_5", "crop_din", "crop_free", "crop_landscape", "crop_original", "crop_portrait", "crop_rotate", "crop_square", "dashboard", "data_usage", "date_range", "dehaze", "delete", "delete_forever", "delete_sweep", "description", "desktop_mac", "desktop_windows", "details", "developer_board", "developer_mode", "device_hub", "devices", "devices_other", "dialer_sip", "dialpad", "directions", "directions_bike", "directions_boat", "directions_bus",
                "directions_car", "directions_railway", "directions_run", "directions_subway", "directions_transit", "directions_walk", "disc_full", "dns", "do_not_disturb", "do_not_disturb_alt", "do_not_disturb_off", "do_not_disturb_on", "dock", "domain", "done", "done_all", "donut_large", "donut_small", "drafts", "drag_handle", "drive_eta", "dvr", "edit", "edit_location", "eject", "email", "enhanced_encryption", "equalizer", "error", "error_outline", "euro_symbol", "ev_station", "event", "event_available", "event_busy", "event_note", "event_seat",
                "exit_to_app", "expand_less", "expand_more", "explicit", "explore", "exposure", "exposure_neg_1", "exposure_neg_2", "exposure_plus_1", "exposure_plus_2", "exposure_zero", "extension", "face", "fast_forward", "fast_rewind", "favorite", "favorite_border", "featured_play_list", "featured_video", "feedback", "fiber_dvr", "fiber_manual_record", "fiber_new", "fiber_pin", "fiber_smart_record", "file_download", "file_upload", "filter", "filter_1", "filter_2", "filter_3", "filter_4", "filter_5", "filter_6", "filter_7", "filter_8", "filter_9",
                "filter_9_plus", "filter_b_and_w", "filter_center_focus", "filter_drama", "filter_frames", "filter_hdr", "filter_list", "filter_none", "filter_tilt_shift", "filter_vintage", "find_in_page", "find_replace", "fingerprint", "first_page", "fitness_center", "flag", "flare", "flash_auto", "flash_off", "flash_on", "flight", "flight_land", "flight_takeoff", "flip", "flip_to_back", "flip_to_front", "folder", "folder_open", "folder_shared", "folder_special", "font_download", "format_align_center", "format_align_justify", "format_align_left",
                "format_align_right", "format_bold", "format_clear", "format_color_fill", "format_color_reset", "format_color_text", "format_indent_decrease", "format_indent_increase", "format_italic", "format_line_spacing", "format_list_bulleted", "format_list_numbered", "format_paint", "format_quote", "format_shapes", "format_size", "format_strikethrough", "format_textdirection_l_to_r", "format_textdirection_r_to_l", "format_underlined", "forum", "forward", "forward_10", "forward_30", "forward_5", "free_breakfast", "fullscreen", "fullscreen_exit",
                "functions", "g_translate", "gamepad", "games", "gavel", "gesture", "get_app", "gif", "golf_course", "gps_fixed", "gps_not_fixed", "gps_off", "grade", "gradient", "grain", "graphic_eq", "grid_off", "grid_on", "group", "group_add", "group_work", "hd", "hdr_off", "hdr_on", "hdr_strong", "hdr_weak", "headset", "headset_mic", "healing", "hearing", "help", "help_outline", "high_quality", "highlight", "highlight_off", "history", "home", "hot_tub", "hotel", "hourglass_empty", "hourglass_full", "http", "https", "image", "image_aspect_ratio", "import_contacts",
                "import_export", "important_devices", "inbox", "indeterminate_check_box", "info", "info_outline", "input", "insert_chart", "insert_comment", "insert_drive_file", "insert_emoticon", "insert_invitation", "insert_link", "insert_photo", "invert_colors", "invert_colors_off", "iso", "keyboard", "keyboard_arrow_down", "keyboard_arrow_left", "keyboard_arrow_right", "keyboard_arrow_up", "keyboard_backspace", "keyboard_capslock", "keyboard_hide", "keyboard_return", "keyboard_tab", "keyboard_voice", "kitchen", "label", "label_outline", "landscape",
                "language", "laptop", "laptop_chromebook", "laptop_mac", "laptop_windows", "last_page", "launch", "layers", "layers_clear", "leak_add", "leak_remove", "lens", "library_add", "library_books", "library_music", "lightbulb_outline", "line_style", "line_weight", "linear_scale", "link", "linked_camera", "list", "live_help", "live_tv", "local_activity", "local_airport", "local_atm", "local_bar", "local_cafe", "local_car_wash", "local_convenience_store", "local_dining", "local_drink", "local_florist", "local_gas_station", "local_grocery_store",
                "local_hospital", "local_hotel", "local_laundry_service", "local_library", "local_mall", "local_movies", "local_offer", "local_parking", "local_pharmacy", "local_phone", "local_pizza", "local_play", "local_post_office", "local_printshop", "local_see", "local_shipping", "local_taxi", "location_city", "location_disabled", "location_off", "location_on", "location_searching", "lock", "lock_open", "lock_outline", "looks", "looks_3", "looks_4", "looks_5", "looks_6", "looks_one", "looks_two", "loop", "loupe", "low_priority", "loyalty", "mail",
                "mail_outline", "map", "markunread", "markunread_mailbox", "memory", "menu", "merge_type", "message", "mic", "mic_none", "mic_off", "mms", "mode_comment", "mode_edit", "monetization_on", "money_off", "monochrome_photos", "mood", "mood_bad", "more", "more_horiz", "more_vert", "motorcycle", "mouse", "move_to_inbox", "movie", "movie_creation", "movie_filter", "multiline_chart", "music_note", "music_video", "my_location", "nature", "nature_people", "navigate_before", "navigate_next", "navigation", "near_me", "network_cell", "network_check",
                "network_locked", "network_wifi", "new_releases", "next_week", "nfc", "no_encryption", "no_sim", "not_interested", "note", "note_add", "notifications", "notifications_active", "notifications_none", "notifications_off", "notifications_paused", "offline_pin", "ondemand_video", "opacity", "open_in_browser", "open_in_new", "open_with", "pages", "pageview", "palette", "pan_tool", "panorama", "panorama_fish_eye", "panorama_horizontal", "panorama_vertical", "panorama_wide_angle", "party_mode", "pause", "pause_circle_filled", "pause_circle_outline",
                "payment", "people", "people_outline", "perm_camera_mic", "perm_contact_calendar", "perm_data_setting", "perm_device_information", "perm_identity", "perm_media", "perm_phone_msg", "perm_scan_wifi", "person", "person_add", "person_outline", "person_pin", "person_pin_circle", "personal_video", "pets", "phone", "phone_android", "phone_bluetooth_speaker", "phone_forwarded", "phone_in_talk", "phone_iphone", "phone_locked", "phone_missed", "phone_paused", "phonelink", "phonelink_erase", "phonelink_lock", "phonelink_off", "phonelink_ring",
                "phonelink_setup", "photo", "photo_album", "photo_camera", "photo_filter", "photo_library", "photo_size_select_actual", "photo_size_select_large", "photo_size_select_small", "picture_as_pdf", "picture_in_picture", "picture_in_picture_alt", "pie_chart", "pie_chart_outlined", "pin_drop", "place", "play_arrow", "play_circle_filled", "play_circle_outline", "play_for_work", "playlist_add", "playlist_add_check", "playlist_play", "plus_one", "poll", "polymer", "pool", "portable_wifi_off", "portrait", "power", "power_input", "power_settings_new",
                "pregnant_woman", "present_to_all", "print", "priority_high", "public", "publish", "query_builder", "question_answer", "queue", "queue_music", "queue_play_next", "radio", "radio_button_checked", "radio_button_unchecked", "rate_review", "receipt", "recent_actors", "record_voice_over", "redeem", "redo", "refresh", "remove", "remove_circle", "remove_circle_outline", "remove_from_queue", "remove_red_eye", "remove_shopping_cart", "reorder", "repeat", "repeat_one", "replay", "replay_10", "replay_30", "replay_5", "reply", "reply_all", "report",
                "report_problem", "restaurant", "restaurant_menu", "restore", "restore_page", "ring_volume", "room", "room_service", "rotate_90_degrees_ccw", "rotate_left", "rotate_right", "rounded_corner", "router", "rowing", "rss_feed", "rv_hookup", "satellite", "save", "scanner", "schedule", "school", "screen_lock_landscape", "screen_lock_portrait", "screen_lock_rotation", "screen_rotation", "screen_share", "sd_card", "sd_storage", "search", "security", "select_all", "send", "sentiment_dissatisfied", "sentiment_neutral", "sentiment_satisfied",
                "sentiment_very_dissatisfied", "sentiment_very_satisfied", "settings", "settings_applications", "settings_backup_restore", "settings_bluetooth", "settings_brightness", "settings_cell", "settings_ethernet", "settings_input_antenna", "settings_input_component", "settings_input_composite", "settings_input_hdmi", "settings_input_svideo", "settings_overscan", "settings_phone", "settings_power", "settings_remote", "settings_system_daydream", "settings_voice", "share", "shop", "shop_two", "shopping_basket", "shopping_cart", "short_text",
                "show_chart", "shuffle", "signal_cellular_4_bar", "signal_cellular_connected_no_internet_4_bar", "signal_cellular_no_sim", "signal_cellular_null", "signal_cellular_off", "signal_wifi_4_bar", "signal_wifi_4_bar_lock", "signal_wifi_off", "sim_card", "sim_card_alert", "skip_next", "skip_previous", "slideshow", "slow_motion_video", "smartphone", "smoke_free", "smoking_rooms", "sms", "sms_failed", "snooze", "sort", "sort_by_alpha", "spa", "space_bar", "speaker", "speaker_group", "speaker_notes", "speaker_notes_off", "speaker_phone",
                "spellcheck", "star", "star_border", "star_half", "stars", "stay_current_landscape", "stay_current_portrait", "stay_primary_landscape", "stay_primary_portrait", "stop", "stop_screen_share", "storage", "store", "store_mall_directory", "straighten", "streetview", "strikethrough_s", "classList", "subdirectory_arrow_left", "subdirectory_arrow_right", "subject", "subscriptions", "subtitles", "subway", "supervisor_account", "surround_sound", "swap_calls", "swap_horiz", "swap_vert", "swap_vertical_circle", "switch_camera", "switch_video",
                "sync", "sync_disabled", "sync_problem", "system_update", "system_update_alt", "tab", "tab_unselected", "tablet", "tablet_android", "tablet_mac", "tag_faces", "tap_and_play", "terrain", "text_fields", "text_format", "textsms", "texture", "theaters", "thumb_down", "thumb_up", "thumbs_up_down", "time_to_leave", "timelapse", "timeline", "timer", "timer_10", "timer_3", "timer_off", "title", "toc", "today", "toll", "tonality", "touch_app", "toys", "track_changes", "traffic", "train", "tram", "transfer_within_a_station", "transform", "translate",
                "trending_down", "trending_flat", "trending_up", "tune", "turned_in", "turned_in_not", "tv", "unarchive", "undo", "unfold_less", "unfold_more", "update", "usb", "verified_user", "vertical_align_bottom", "vertical_align_center", "vertical_align_top", "vibration", "video_call", "video_label", "video_library", "videocam", "videocam_off", "videogame_asset", "view_agenda", "view_array", "view_carousel", "view_column", "view_comfy", "view_compact", "view_day", "view_headline", "view_list", "view_module", "view_quilt", "view_stream", "view_week",
                "vignette", "visibility", "visibility_off", "voice_chat", "voicemail", "volume_down", "volume_mute", "volume_off", "volume_up", "vpn_key", "vpn_lock", "wallpaper", "warning", "watch", "watch_later", "wb_auto", "wb_cloudy", "wb_incandescent", "wb_iridescent", "wb_sunny", "wc", "web", "web_asset", "weekend", "whatshot", "widgets", "wifi", "wifi_lock", "wifi_tethering", "work", "wrap_text", "youtube_searched_for", "zoom_in", "zoom_out", "zoom_out_map"]
        }, {
            type: "fontAwesome",
            title: "Font Awesome Icons",
            classList: {
                brands: "pui-fa-brands-icons fa-",
                solid: "pui-fa-solid-icons fa-", regular: "pui-fa-regular-icons fa-"
            },
            icons: [{icon: "500px", classList: "brands"}, {icon: "accessible-icon", classList: "brands"}, {
                icon: "accusoft",
                classList: "brands"
            }, {icon: "acquisitions-incorporated", classList: "brands"}, {
                icon: "ad",
                classList: "solid"
            }, {icon: "address-book", classList: ["solid", "regular"]}, {
                icon: "address-card",
                classList: ["solid", "regular"]
            }, {icon: "adjust", classList: "solid"}, {icon: "adn", classList: "brands"}, {
                icon: "adversal",
                classList: "brands"
            }, {
                icon: "affiliatetheme",
                classList: "brands"
            }, {icon: "air-freshener", classList: "solid"}, {icon: "algolia", classList: "brands"}, {
                icon: "align-center",
                classList: "solid"
            }, {icon: "align-justify", classList: "solid"}, {icon: "align-left", classList: "solid"}, {
                icon: "align-right",
                classList: "solid"
            }, {icon: "alipay", classList: "brands"}, {icon: "allergies", classList: "solid"}, {
                icon: "amazon",
                classList: "brands"
            }, {icon: "amazon-pay", classList: "brands"}, {
                icon: "ambulance",
                classList: "solid"
            }, {icon: "american-sign-language-interpreting", classList: "solid"},
                {icon: "amilia", classList: "brands"}, {icon: "anchor", classList: "solid"}, {
                    icon: "android",
                    classList: "brands"
                }, {icon: "angellist", classList: "brands"}, {
                    icon: "angle-double-down",
                    classList: "solid"
                }, {icon: "angle-double-left", classList: "solid"}, {
                    icon: "angle-double-right",
                    classList: "solid"
                }, {icon: "angle-double-up", classList: "solid"}, {
                    icon: "angle-down",
                    classList: "solid"
                }, {icon: "angle-left", classList: "solid"}, {icon: "angle-right", classList: "solid"}, {
                    icon: "angle-up",
                    classList: "solid"
                }, {
                    icon: "angry", classList: ["solid",
                        "regular"]
                }, {icon: "angrycreative", classList: "brands"}, {icon: "angular", classList: "brands"}, {
                    icon: "ankh",
                    classList: "solid"
                }, {icon: "app-store", classList: "brands"}, {icon: "app-store-ios", classList: "brands"}, {
                    icon: "apper",
                    classList: "brands"
                }, {icon: "apple", classList: "brands"}, {icon: "apple-alt", classList: "solid"}, {
                    icon: "apple-pay",
                    classList: "brands"
                }, {icon: "archive", classList: "solid"}, {
                    icon: "archway",
                    classList: "solid"
                }, {icon: "arrow-alt-circle-down", classList: ["solid", "regular"]}, {
                    icon: "arrow-alt-circle-left",
                    classList: ["solid", "regular"]
                }, {icon: "arrow-alt-circle-right", classList: ["solid", "regular"]}, {
                    icon: "arrow-alt-circle-up",
                    classList: ["solid", "regular"]
                }, {icon: "arrow-circle-down", classList: "solid"}, {
                    icon: "arrow-circle-left",
                    classList: "solid"
                }, {icon: "arrow-circle-right", classList: "solid"}, {
                    icon: "arrow-circle-up",
                    classList: "solid"
                }, {icon: "arrow-down", classList: "solid"}, {icon: "arrow-left", classList: "solid"}, {
                    icon: "arrow-right",
                    classList: "solid"
                }, {icon: "arrow-up", classList: "solid"}, {
                    icon: "arrows-alt",
                    classList: "solid"
                }, {icon: "arrows-alt-h", classList: "solid"}, {
                    icon: "arrows-alt-v",
                    classList: "solid"
                }, {icon: "assistive-listening-systems", classList: "solid"}, {
                    icon: "asterisk",
                    classList: "solid"
                }, {icon: "asymmetrik", classList: "brands"}, {icon: "at", classList: "solid"}, {
                    icon: "atlas",
                    classList: "solid"
                }, {icon: "atom", classList: "solid"}, {icon: "audible", classList: "brands"}, {
                    icon: "audio-description",
                    classList: "solid"
                }, {icon: "autoprefixer", classList: "brands"}, {icon: "avianex", classList: "brands"}, {
                    icon: "aviato",
                    classList: "brands"
                },
                {icon: "award", classList: "solid"}, {icon: "aws", classList: "brands"}, {
                    icon: "backspace",
                    classList: "solid"
                }, {icon: "backward", classList: "solid"}, {icon: "balance-scale", classList: "solid"}, {
                    icon: "ban",
                    classList: "solid"
                }, {icon: "band-aid", classList: "solid"}, {icon: "bandcamp", classList: "brands"}, {
                    icon: "barcode",
                    classList: "solid"
                }, {icon: "bars", classList: "solid"}, {
                    icon: "baseball-ball",
                    classList: "solid"
                }, {icon: "basketball-ball", classList: "solid"}, {
                    icon: "bath",
                    classList: "solid"
                }, {icon: "battery-empty", classList: "solid"},
                {icon: "battery-full", classList: "solid"}, {
                    icon: "battery-half",
                    classList: "solid"
                }, {icon: "battery-quarter", classList: "solid"}, {
                    icon: "battery-three-quarters",
                    classList: "solid"
                }, {icon: "bed", classList: "solid"}, {icon: "beer", classList: "solid"}, {
                    icon: "behance",
                    classList: "brands"
                }, {icon: "behance-square", classList: "brands"}, {
                    icon: "bell",
                    classList: ["solid", "regular"]
                }, {icon: "bell-slash", classList: ["solid", "regular"]}, {
                    icon: "bezier-curve",
                    classList: "solid"
                }, {icon: "bible", classList: "solid"}, {icon: "bicycle", classList: "solid"},
                {icon: "bimobject", classList: "brands"}, {icon: "binoculars", classList: "solid"}, {
                    icon: "birthday-cake",
                    classList: "solid"
                }, {icon: "bitbucket", classList: "brands"}, {icon: "bitcoin", classList: "brands"}, {
                    icon: "bity",
                    classList: "brands"
                }, {icon: "black-tie", classList: "brands"}, {icon: "blackberry", classList: "brands"}, {
                    icon: "blender",
                    classList: "solid"
                }, {icon: "blender-phone", classList: "solid"}, {icon: "blind", classList: "solid"}, {
                    icon: "blogger",
                    classList: "brands"
                }, {icon: "blogger-b", classList: "brands"}, {
                    icon: "bluetooth",
                    classList: "brands"
                }, {icon: "bluetooth-b", classList: "brands"}, {icon: "bold", classList: "solid"}, {
                    icon: "bolt",
                    classList: "solid"
                }, {icon: "bomb", classList: "solid"}, {icon: "bone", classList: "solid"}, {
                    icon: "bong",
                    classList: "solid"
                }, {icon: "book", classList: "solid"}, {icon: "book-dead", classList: "solid"}, {
                    icon: "book-open",
                    classList: "solid"
                }, {icon: "book-reader", classList: "solid"}, {
                    icon: "bookmark",
                    classList: ["solid", "regular"]
                }, {icon: "bowling-ball", classList: "solid"}, {icon: "box", classList: "solid"}, {
                    icon: "box-open",
                    classList: "solid"
                }, {icon: "boxes", classList: "solid"}, {icon: "braille", classList: "solid"}, {
                    icon: "brain",
                    classList: "solid"
                }, {icon: "briefcase", classList: "solid"}, {
                    icon: "briefcase-medical",
                    classList: "solid"
                }, {icon: "broadcast-tower", classList: "solid"}, {icon: "broom", classList: "solid"}, {
                    icon: "brush",
                    classList: "solid"
                }, {icon: "btc", classList: "brands"}, {icon: "bug", classList: "solid"}, {
                    icon: "building",
                    classList: ["solid", "regular"]
                }, {icon: "bullhorn", classList: "solid"}, {icon: "bullseye", classList: "solid"}, {
                    icon: "burn",
                    classList: "solid"
                }, {icon: "buromobelexperte", classList: "brands"}, {icon: "bus", classList: "solid"}, {
                    icon: "bus-alt",
                    classList: "solid"
                }, {icon: "business-time", classList: "solid"}, {
                    icon: "buysellads",
                    classList: "brands"
                }, {icon: "calculator", classList: "solid"}, {
                    icon: "calendar",
                    classList: ["solid", "regular"]
                }, {icon: "calendar-alt", classList: ["solid", "regular"]}, {
                    icon: "calendar-check",
                    classList: ["solid", "regular"]
                }, {icon: "calendar-minus", classList: ["solid", "regular"]}, {
                    icon: "calendar-plus",
                    classList: ["solid", "regular"]
                },
                {icon: "calendar-times", classList: ["solid", "regular"]}, {
                    icon: "camera",
                    classList: "solid"
                }, {icon: "camera-retro", classList: "solid"}, {icon: "campground", classList: "solid"}, {
                    icon: "cannabis",
                    classList: "solid"
                }, {icon: "capsules", classList: "solid"}, {icon: "car", classList: "solid"}, {
                    icon: "car-alt",
                    classList: "solid"
                }, {icon: "car-battery", classList: "solid"}, {icon: "car-crash", classList: "solid"}, {
                    icon: "car-side",
                    classList: "solid"
                }, {icon: "caret-down", classList: "solid"}, {icon: "caret-left", classList: "solid"}, {
                    icon: "caret-right",
                    classList: "solid"
                }, {icon: "caret-square-down", classList: ["solid", "regular"]}, {
                    icon: "caret-square-left",
                    classList: ["solid", "regular"]
                }, {icon: "caret-square-right", classList: ["solid", "regular"]}, {
                    icon: "caret-square-up",
                    classList: ["solid", "regular"]
                }, {icon: "caret-up", classList: "solid"}, {
                    icon: "cart-arrow-down",
                    classList: "solid"
                }, {icon: "cart-plus", classList: "solid"}, {icon: "cat", classList: "solid"}, {
                    icon: "cc-amazon-pay",
                    classList: "brands"
                }, {icon: "cc-amex", classList: "brands"}, {icon: "cc-apple-pay", classList: "brands"},
                {icon: "cc-diners-club", classList: "brands"}, {icon: "cc-discover", classList: "brands"}, {
                    icon: "cc-jcb",
                    classList: "brands"
                }, {icon: "cc-mastercard", classList: "brands"}, {
                    icon: "cc-paypal",
                    classList: "brands"
                }, {icon: "cc-stripe", classList: "brands"}, {icon: "cc-visa", classList: "brands"}, {
                    icon: "centercode",
                    classList: "brands"
                }, {icon: "certificate", classList: "solid"}, {icon: "chair", classList: "solid"}, {
                    icon: "chalkboard",
                    classList: "solid"
                }, {icon: "chalkboard-teacher", classList: "solid"}, {icon: "charging-station", classList: "solid"},
                {icon: "chart-area", classList: "solid"}, {
                    icon: "chart-bar",
                    classList: ["solid", "regular"]
                }, {icon: "chart-line", classList: "solid"}, {icon: "chart-pie", classList: "solid"}, {
                    icon: "check",
                    classList: "solid"
                }, {icon: "check-circle", classList: ["solid", "regular"]}, {
                    icon: "check-double",
                    classList: "solid"
                }, {icon: "check-square", classList: ["solid", "regular"]}, {
                    icon: "chess",
                    classList: "solid"
                }, {icon: "chess-bishop", classList: "solid"}, {
                    icon: "chess-board",
                    classList: "solid"
                }, {icon: "chess-king", classList: "solid"}, {
                    icon: "chess-knight",
                    classList: "solid"
                }, {icon: "chess-pawn", classList: "solid"}, {icon: "chess-queen", classList: "solid"}, {
                    icon: "chess-rook",
                    classList: "solid"
                }, {icon: "chevron-circle-down", classList: "solid"}, {
                    icon: "chevron-circle-left",
                    classList: "solid"
                }, {icon: "chevron-circle-right", classList: "solid"}, {
                    icon: "chevron-circle-up",
                    classList: "solid"
                }, {icon: "chevron-down", classList: "solid"}, {
                    icon: "chevron-left",
                    classList: "solid"
                }, {icon: "chevron-right", classList: "solid"}, {icon: "chevron-up", classList: "solid"}, {
                    icon: "child",
                    classList: "solid"
                },
                {icon: "chrome", classList: "brands"}, {icon: "church", classList: "solid"}, {
                    icon: "circle",
                    classList: ["solid", "regular"]
                }, {icon: "circle-notch", classList: "solid"}, {icon: "city", classList: "solid"}, {
                    icon: "clipboard",
                    classList: ["solid", "regular"]
                }, {icon: "clipboard-check", classList: "solid"}, {
                    icon: "clipboard-list",
                    classList: "solid"
                }, {icon: "clock", classList: ["solid", "regular"]}, {
                    icon: "clone",
                    classList: ["solid", "regular"]
                }, {icon: "closed-captioning", classList: ["solid", "regular"]}, {icon: "cloud", classList: "solid"},
                {icon: "cloud-download-alt", classList: "solid"}, {
                    icon: "cloud-moon",
                    classList: "solid"
                }, {icon: "cloud-sun", classList: "solid"}, {
                    icon: "cloud-upload-alt",
                    classList: "solid"
                }, {icon: "cloudscale", classList: "brands"}, {
                    icon: "cloudsmith",
                    classList: "brands"
                }, {icon: "cloudversify", classList: "brands"}, {icon: "cocktail", classList: "solid"}, {
                    icon: "code",
                    classList: "solid"
                }, {icon: "code-branch", classList: "solid"}, {icon: "codepen", classList: "brands"}, {
                    icon: "codiepie",
                    classList: "brands"
                }, {icon: "coffee", classList: "solid"}, {
                    icon: "cog",
                    classList: "solid"
                }, {icon: "cogs", classList: "solid"}, {icon: "coins", classList: "solid"}, {
                    icon: "columns",
                    classList: "solid"
                }, {icon: "comment", classList: ["solid", "regular"]}, {
                    icon: "comment-alt",
                    classList: ["solid", "regular"]
                }, {icon: "comment-dollar", classList: "solid"}, {
                    icon: "comment-dots",
                    classList: ["solid", "regular"]
                }, {icon: "comment-slash", classList: "solid"}, {
                    icon: "comments",
                    classList: ["solid", "regular"]
                }, {icon: "comments-dollar", classList: "solid"}, {icon: "compact-disc", classList: "solid"}, {
                    icon: "compass", classList: ["solid",
                        "regular"]
                }, {icon: "compress", classList: "solid"}, {
                    icon: "concierge-bell",
                    classList: "solid"
                }, {icon: "connectdevelop", classList: "brands"}, {icon: "contao", classList: "brands"}, {
                    icon: "cookie",
                    classList: "solid"
                }, {icon: "cookie-bite", classList: "solid"}, {
                    icon: "copy",
                    classList: ["solid", "regular"]
                }, {icon: "copyright", classList: ["solid", "regular"]}, {
                    icon: "couch",
                    classList: "solid"
                }, {icon: "cpanel", classList: "brands"}, {
                    icon: "creative-commons",
                    classList: "brands"
                }, {icon: "creative-commons-by", classList: "brands"}, {
                    icon: "creative-commons-nc",
                    classList: "brands"
                }, {icon: "creative-commons-nc-eu", classList: "brands"}, {
                    icon: "creative-commons-nc-jp",
                    classList: "brands"
                }, {icon: "creative-commons-nd", classList: "brands"}, {
                    icon: "creative-commons-pd",
                    classList: "brands"
                }, {icon: "creative-commons-pd-alt", classList: "brands"}, {
                    icon: "creative-commons-remix",
                    classList: "brands"
                }, {icon: "creative-commons-sa", classList: "brands"}, {
                    icon: "creative-commons-sampling",
                    classList: "brands"
                }, {icon: "creative-commons-sampling-plus", classList: "brands"}, {
                    icon: "creative-commons-share",
                    classList: "brands"
                }, {icon: "creative-commons-zero", classList: "brands"}, {
                    icon: "credit-card",
                    classList: ["solid", "regular"]
                }, {icon: "critical-role", classList: "brands"}, {icon: "crop", classList: "solid"}, {
                    icon: "crop-alt",
                    classList: "solid"
                }, {icon: "cross", classList: "solid"}, {icon: "crosshairs", classList: "solid"}, {
                    icon: "crow",
                    classList: "solid"
                }, {icon: "crown", classList: "solid"}, {icon: "css3", classList: "brands"}, {
                    icon: "css3-alt",
                    classList: "brands"
                }, {icon: "cube", classList: "solid"}, {icon: "cubes", classList: "solid"},
                {icon: "cut", classList: "solid"}, {icon: "cuttlefish", classList: "brands"}, {
                    icon: "d-and-d",
                    classList: "brands"
                }, {icon: "dashcube", classList: "brands"}, {icon: "database", classList: "solid"}, {
                    icon: "deaf",
                    classList: "solid"
                }, {icon: "delicious", classList: "brands"}, {icon: "deploydog", classList: "brands"}, {
                    icon: "deskpro",
                    classList: "brands"
                }, {icon: "desktop", classList: "solid"}, {icon: "dev", classList: "brands"}, {
                    icon: "deviantart",
                    classList: "brands"
                }, {icon: "dharmachakra", classList: "solid"}, {icon: "diagnoses", classList: "solid"},
                {icon: "dice", classList: "solid"}, {icon: "dice-d20", classList: "solid"}, {
                    icon: "dice-d6",
                    classList: "solid"
                }, {icon: "dice-five", classList: "solid"}, {icon: "dice-four", classList: "solid"}, {
                    icon: "dice-one",
                    classList: "solid"
                }, {icon: "dice-six", classList: "solid"}, {icon: "dice-three", classList: "solid"}, {
                    icon: "dice-two",
                    classList: "solid"
                }, {icon: "digg", classList: "brands"}, {
                    icon: "digital-ocean",
                    classList: "brands"
                }, {icon: "digital-tachograph", classList: "solid"}, {
                    icon: "directions",
                    classList: "solid"
                }, {icon: "discord", classList: "brands"},
                {icon: "discourse", classList: "brands"}, {icon: "divide", classList: "solid"}, {
                    icon: "dizzy",
                    classList: ["solid", "regular"]
                }, {icon: "dna", classList: "solid"}, {icon: "dochub", classList: "brands"}, {
                    icon: "docker",
                    classList: "brands"
                }, {icon: "dog", classList: "solid"}, {icon: "dollar-sign", classList: "solid"}, {
                    icon: "dolly",
                    classList: "solid"
                }, {icon: "dolly-flatbed", classList: "solid"}, {icon: "donate", classList: "solid"}, {
                    icon: "door-closed",
                    classList: "solid"
                }, {icon: "door-open", classList: "solid"}, {
                    icon: "dot-circle", classList: ["solid",
                        "regular"]
                }, {icon: "dove", classList: "solid"}, {icon: "download", classList: "solid"}, {
                    icon: "draft2digital",
                    classList: "brands"
                }, {icon: "drafting-compass", classList: "solid"}, {
                    icon: "dragon",
                    classList: "solid"
                }, {icon: "draw-polygon", classList: "solid"}, {
                    icon: "dribbble",
                    classList: "brands"
                }, {icon: "dribbble-square", classList: "brands"}, {icon: "dropbox", classList: "brands"}, {
                    icon: "drum",
                    classList: "solid"
                }, {icon: "drum-steelpan", classList: "solid"}, {
                    icon: "drumstick-bite",
                    classList: "solid"
                }, {icon: "drupal", classList: "brands"},
                {icon: "dumbbell", classList: "solid"}, {icon: "dungeon", classList: "solid"}, {
                    icon: "dyalog",
                    classList: "brands"
                }, {icon: "earlybirds", classList: "brands"}, {icon: "ebay", classList: "brands"}, {
                    icon: "edge",
                    classList: "brands"
                }, {icon: "edit", classList: ["solid", "regular"]}, {icon: "eject", classList: "solid"}, {
                    icon: "elementor",
                    classList: "brands"
                }, {icon: "ellipsis-h", classList: "solid"}, {icon: "ellipsis-v", classList: "solid"}, {
                    icon: "ello",
                    classList: "brands"
                }, {icon: "ember", classList: "brands"}, {icon: "empire", classList: "brands"},
                {icon: "envelope", classList: ["solid", "regular"]}, {
                    icon: "envelope-open",
                    classList: ["solid", "regular"]
                }, {icon: "envelope-open-text", classList: "solid"}, {
                    icon: "envelope-square",
                    classList: "solid"
                }, {icon: "envira", classList: "brands"}, {icon: "equals", classList: "solid"}, {
                    icon: "eraser",
                    classList: "solid"
                }, {icon: "erlang", classList: "brands"}, {icon: "ethereum", classList: "brands"}, {
                    icon: "etsy",
                    classList: "brands"
                }, {icon: "euro-sign", classList: "solid"}, {
                    icon: "exchange-alt",
                    classList: "solid"
                }, {icon: "exclamation", classList: "solid"},
                {icon: "exclamation-circle", classList: "solid"}, {
                    icon: "exclamation-triangle",
                    classList: "solid"
                }, {icon: "expand", classList: "solid"}, {
                    icon: "expand-arrows-alt",
                    classList: "solid"
                }, {icon: "expeditedssl", classList: "brands"}, {
                    icon: "external-link-alt",
                    classList: "solid"
                }, {icon: "external-link-square-alt", classList: "solid"}, {
                    icon: "eye",
                    classList: ["solid", "regular"]
                }, {icon: "eye-dropper", classList: "solid"}, {
                    icon: "eye-slash",
                    classList: ["solid", "regular"]
                }, {icon: "facebook", classList: "brands"}, {icon: "facebook-f", classList: "brands"},
                {icon: "facebook-messenger", classList: "brands"}, {
                    icon: "facebook-square",
                    classList: "brands"
                }, {icon: "fantasy-flight-games", classList: "brands"}, {
                    icon: "fast-backward",
                    classList: "solid"
                }, {icon: "fast-forward", classList: "solid"}, {icon: "fax", classList: "solid"}, {
                    icon: "feather",
                    classList: "solid"
                }, {icon: "feather-alt", classList: "solid"}, {icon: "female", classList: "solid"}, {
                    icon: "fighter-jet",
                    classList: "solid"
                }, {icon: "file", classList: ["solid", "regular"]}, {icon: "file-alt", classList: ["solid", "regular"]}, {
                    icon: "file-archive",
                    classList: ["solid", "regular"]
                }, {icon: "file-audio", classList: ["solid", "regular"]}, {
                    icon: "file-code",
                    classList: ["solid", "regular"]
                }, {icon: "file-contract", classList: "solid"}, {
                    icon: "file-csv",
                    classList: "solid"
                }, {icon: "file-download", classList: "solid"}, {
                    icon: "file-excel",
                    classList: ["solid", "regular"]
                }, {icon: "file-export", classList: "solid"}, {
                    icon: "file-image",
                    classList: ["solid", "regular"]
                }, {icon: "file-import", classList: "solid"}, {
                    icon: "file-invoice",
                    classList: "solid"
                }, {icon: "file-invoice-dollar", classList: "solid"},
                {icon: "file-medical", classList: "solid"}, {
                    icon: "file-medical-alt",
                    classList: "solid"
                }, {icon: "file-pdf", classList: ["solid", "regular"]}, {
                    icon: "file-powerpoint",
                    classList: ["solid", "regular"]
                }, {icon: "file-prescription", classList: "solid"}, {
                    icon: "file-signature",
                    classList: "solid"
                }, {icon: "file-upload", classList: "solid"}, {
                    icon: "file-video",
                    classList: ["solid", "regular"]
                }, {icon: "file-word", classList: ["solid", "regular"]}, {
                    icon: "fill",
                    classList: "solid"
                }, {icon: "fill-drip", classList: "solid"}, {icon: "film", classList: "solid"},
                {icon: "filter", classList: "solid"}, {icon: "fingerprint", classList: "solid"}, {
                    icon: "fire",
                    classList: "solid"
                }, {icon: "fire-extinguisher", classList: "solid"}, {
                    icon: "firefox",
                    classList: "brands"
                }, {icon: "first-aid", classList: "solid"}, {
                    icon: "first-order",
                    classList: "brands"
                }, {icon: "first-order-alt", classList: "brands"}, {icon: "firstdraft", classList: "brands"}, {
                    icon: "fish",
                    classList: "solid"
                }, {icon: "fist-raised", classList: "solid"}, {
                    icon: "flag",
                    classList: ["solid", "regular"]
                }, {icon: "flag-checkered", classList: "solid"},
                {icon: "flask", classList: "solid"}, {icon: "flickr", classList: "brands"}, {
                    icon: "flipboard",
                    classList: "brands"
                }, {icon: "flushed", classList: ["solid", "regular"]}, {icon: "fly", classList: "brands"}, {
                    icon: "folder",
                    classList: ["solid", "regular"]
                }, {icon: "folder-minus", classList: "solid"}, {
                    icon: "folder-open",
                    classList: ["solid", "regular"]
                }, {icon: "folder-plus", classList: "solid"}, {icon: "font", classList: "solid"}, {
                    icon: "font-awesome",
                    classList: "brands"
                }, {icon: "font-awesome-alt", classList: "brands"}, {
                    icon: "font-awesome-flag",
                    classList: "brands"
                }, {icon: "fonticons", classList: "brands"}, {
                    icon: "fonticons-fi",
                    classList: "brands"
                }, {icon: "football-ball", classList: "solid"}, {
                    icon: "fort-awesome",
                    classList: "brands"
                }, {icon: "fort-awesome-alt", classList: "brands"}, {
                    icon: "forumbee",
                    classList: "brands"
                }, {icon: "forward", classList: "solid"}, {
                    icon: "foursquare",
                    classList: "brands"
                }, {icon: "free-code-camp", classList: "brands"}, {icon: "freebsd", classList: "brands"}, {
                    icon: "frog",
                    classList: "solid"
                }, {icon: "frown", classList: ["solid", "regular"]}, {
                    icon: "frown-open",
                    classList: ["solid", "regular"]
                }, {icon: "fulcrum", classList: "brands"}, {icon: "funnel-dollar", classList: "solid"}, {
                    icon: "futbol",
                    classList: ["solid", "regular"]
                }, {icon: "galactic-republic", classList: "brands"}, {
                    icon: "galactic-senate",
                    classList: "brands"
                }, {icon: "gamepad", classList: "solid"}, {icon: "gas-pump", classList: "solid"}, {
                    icon: "gavel",
                    classList: "solid"
                }, {icon: "gem", classList: ["solid", "regular"]}, {
                    icon: "genderless",
                    classList: "solid"
                }, {icon: "get-pocket", classList: "brands"}, {icon: "gg", classList: "brands"}, {
                    icon: "gg-circle",
                    classList: "brands"
                }, {icon: "ghost", classList: "solid"}, {icon: "gift", classList: "solid"}, {
                    icon: "git",
                    classList: "brands"
                }, {icon: "git-square", classList: "brands"}, {icon: "github", classList: "brands"}, {
                    icon: "github-alt",
                    classList: "brands"
                }, {icon: "github-square", classList: "brands"}, {icon: "gitkraken", classList: "brands"}, {
                    icon: "gitlab",
                    classList: "brands"
                }, {icon: "gitter", classList: "brands"}, {
                    icon: "glass-martini",
                    classList: "solid"
                }, {icon: "glass-martini-alt", classList: "solid"}, {icon: "glasses", classList: "solid"},
                {icon: "glide", classList: "brands"}, {icon: "glide-g", classList: "brands"}, {
                    icon: "globe",
                    classList: "solid"
                }, {icon: "globe-africa", classList: "solid"}, {
                    icon: "globe-americas",
                    classList: "solid"
                }, {icon: "globe-asia", classList: "solid"}, {icon: "gofore", classList: "brands"}, {
                    icon: "golf-ball",
                    classList: "solid"
                }, {icon: "goodreads", classList: "brands"}, {icon: "goodreads-g", classList: "brands"}, {
                    icon: "google",
                    classList: "brands"
                }, {icon: "google-drive", classList: "brands"}, {icon: "google-play", classList: "brands"}, {
                    icon: "google-plus",
                    classList: "brands"
                }, {icon: "google-plus-g", classList: "brands"}, {
                    icon: "google-plus-square",
                    classList: "brands"
                }, {icon: "google-wallet", classList: "brands"}, {
                    icon: "gopuram",
                    classList: "solid"
                }, {icon: "graduation-cap", classList: "solid"}, {icon: "gratipay", classList: "brands"}, {
                    icon: "grav",
                    classList: "brands"
                }, {icon: "greater-than", classList: "solid"}, {
                    icon: "greater-than-equal",
                    classList: "solid"
                }, {icon: "grimace", classList: ["solid", "regular"]}, {icon: "grin", classList: ["solid", "regular"]}, {
                    icon: "grin-alt", classList: ["solid",
                        "regular"]
                }, {icon: "grin-beam", classList: ["solid", "regular"]}, {
                    icon: "grin-beam-sweat",
                    classList: ["solid", "regular"]
                }, {icon: "grin-hearts", classList: ["solid", "regular"]}, {
                    icon: "grin-squint",
                    classList: ["solid", "regular"]
                }, {icon: "grin-squint-tears", classList: ["solid", "regular"]}, {
                    icon: "grin-stars",
                    classList: ["solid", "regular"]
                }, {icon: "grin-tears", classList: ["solid", "regular"]}, {
                    icon: "grin-tongue",
                    classList: ["solid", "regular"]
                }, {icon: "grin-tongue-squint", classList: ["solid", "regular"]}, {
                    icon: "grin-tongue-wink",
                    classList: ["solid", "regular"]
                }, {icon: "grin-wink", classList: ["solid", "regular"]}, {
                    icon: "grip-horizontal",
                    classList: "solid"
                }, {icon: "grip-vertical", classList: "solid"}, {icon: "gripfire", classList: "brands"}, {
                    icon: "grunt",
                    classList: "brands"
                }, {icon: "gulp", classList: "brands"}, {icon: "h-square", classList: "solid"}, {
                    icon: "hacker-news",
                    classList: "brands"
                }, {icon: "hacker-news-square", classList: "brands"}, {
                    icon: "hackerrank",
                    classList: "brands"
                }, {icon: "hammer", classList: "solid"}, {icon: "hamsa", classList: "solid"}, {
                    icon: "hand-holding",
                    classList: "solid"
                }, {icon: "hand-holding-heart", classList: "solid"}, {
                    icon: "hand-holding-usd",
                    classList: "solid"
                }, {icon: "hand-lizard", classList: ["solid", "regular"]}, {
                    icon: "hand-paper",
                    classList: ["solid", "regular"]
                }, {icon: "hand-peace", classList: ["solid", "regular"]}, {
                    icon: "hand-point-down",
                    classList: ["solid", "regular"]
                }, {icon: "hand-point-left", classList: ["solid", "regular"]}, {
                    icon: "hand-point-right",
                    classList: ["solid", "regular"]
                }, {icon: "hand-point-up", classList: ["solid", "regular"]}, {
                    icon: "hand-pointer", classList: ["solid",
                        "regular"]
                }, {icon: "hand-rock", classList: ["solid", "regular"]}, {
                    icon: "hand-scissors",
                    classList: ["solid", "regular"]
                }, {icon: "hand-spock", classList: ["solid", "regular"]}, {
                    icon: "hands",
                    classList: "solid"
                }, {icon: "hands-helping", classList: "solid"}, {
                    icon: "handshake",
                    classList: ["solid", "regular"]
                }, {icon: "hanukiah", classList: "solid"}, {icon: "hashtag", classList: "solid"}, {
                    icon: "hat-wizard",
                    classList: "solid"
                }, {icon: "haykal", classList: "solid"}, {icon: "hdd", classList: ["solid", "regular"]}, {
                    icon: "heading",
                    classList: "solid"
                },
                {icon: "headphones", classList: "solid"}, {icon: "headphones-alt", classList: "solid"}, {
                    icon: "headset",
                    classList: "solid"
                }, {icon: "heart", classList: ["solid", "regular"]}, {
                    icon: "heartbeat",
                    classList: "solid"
                }, {icon: "helicopter", classList: "solid"}, {icon: "highlighter", classList: "solid"}, {
                    icon: "hiking",
                    classList: "solid"
                }, {icon: "hippo", classList: "solid"}, {icon: "hips", classList: "brands"}, {
                    icon: "hire-a-helper",
                    classList: "brands"
                }, {icon: "history", classList: "solid"}, {icon: "hockey-puck", classList: "solid"}, {
                    icon: "home",
                    classList: "solid"
                }, {icon: "hooli", classList: "brands"}, {icon: "hornbill", classList: "brands"}, {
                    icon: "horse",
                    classList: "solid"
                }, {icon: "hospital", classList: ["solid", "regular"]}, {
                    icon: "hospital-alt",
                    classList: "solid"
                }, {icon: "hospital-symbol", classList: "solid"}, {icon: "hot-tub", classList: "solid"}, {
                    icon: "hotel",
                    classList: "solid"
                }, {icon: "hotjar", classList: "brands"}, {
                    icon: "hourglass",
                    classList: ["solid", "regular"]
                }, {icon: "hourglass-end", classList: "solid"}, {icon: "hourglass-half", classList: "solid"}, {
                    icon: "hourglass-start",
                    classList: "solid"
                }, {icon: "house-damage", classList: "solid"}, {icon: "houzz", classList: "brands"}, {
                    icon: "hryvnia",
                    classList: "solid"
                }, {icon: "html5", classList: "brands"}, {icon: "hubspot", classList: "brands"}, {
                    icon: "i-cursor",
                    classList: "solid"
                }, {icon: "id-badge", classList: ["solid", "regular"]}, {
                    icon: "id-card",
                    classList: ["solid", "regular"]
                }, {icon: "id-card-alt", classList: "solid"}, {
                    icon: "image",
                    classList: ["solid", "regular"]
                }, {icon: "images", classList: ["solid", "regular"]}, {icon: "imdb", classList: "brands"}, {
                    icon: "inbox",
                    classList: "solid"
                }, {icon: "indent", classList: "solid"}, {icon: "industry", classList: "solid"}, {
                    icon: "infinity",
                    classList: "solid"
                }, {icon: "info", classList: "solid"}, {icon: "info-circle", classList: "solid"}, {
                    icon: "instagram",
                    classList: "brands"
                }, {icon: "internet-explorer", classList: "brands"}, {
                    icon: "ioxhost",
                    classList: "brands"
                }, {icon: "italic", classList: "solid"}, {icon: "itunes", classList: "brands"}, {
                    icon: "itunes-note",
                    classList: "brands"
                }, {icon: "java", classList: "brands"}, {icon: "jedi", classList: "solid"}, {
                    icon: "jedi-order",
                    classList: "brands"
                }, {icon: "jenkins", classList: "brands"}, {icon: "joget", classList: "brands"}, {
                    icon: "joint",
                    classList: "solid"
                }, {icon: "joomla", classList: "brands"}, {icon: "journal-whills", classList: "solid"}, {
                    icon: "js",
                    classList: "brands"
                }, {icon: "js-square", classList: "brands"}, {icon: "jsfiddle", classList: "brands"}, {
                    icon: "kaaba",
                    classList: "solid"
                }, {icon: "kaggle", classList: "brands"}, {icon: "key", classList: "solid"}, {
                    icon: "keybase",
                    classList: "brands"
                }, {icon: "keyboard", classList: ["solid", "regular"]}, {
                    icon: "keycdn",
                    classList: "brands"
                }, {icon: "khanda", classList: "solid"}, {icon: "kickstarter", classList: "brands"}, {
                    icon: "kickstarter-k",
                    classList: "brands"
                }, {icon: "kiss", classList: ["solid", "regular"]}, {
                    icon: "kiss-beam",
                    classList: ["solid", "regular"]
                }, {icon: "kiss-wink-heart", classList: ["solid", "regular"]}, {
                    icon: "kiwi-bird",
                    classList: "solid"
                }, {icon: "korvue", classList: "brands"}, {icon: "landmark", classList: "solid"}, {
                    icon: "language",
                    classList: "solid"
                }, {icon: "laptop", classList: "solid"}, {icon: "laptop-code", classList: "solid"},
                {icon: "laravel", classList: "brands"}, {icon: "lastfm", classList: "brands"}, {
                    icon: "lastfm-square",
                    classList: "brands"
                }, {icon: "laugh", classList: ["solid", "regular"]}, {
                    icon: "laugh-beam",
                    classList: ["solid", "regular"]
                }, {icon: "laugh-squint", classList: ["solid", "regular"]}, {
                    icon: "laugh-wink",
                    classList: ["solid", "regular"]
                }, {icon: "layer-group", classList: "solid"}, {icon: "leaf", classList: "solid"}, {
                    icon: "leanpub",
                    classList: "brands"
                }, {icon: "lemon", classList: ["solid", "regular"]}, {icon: "less", classList: "brands"}, {
                    icon: "less-than",
                    classList: "solid"
                }, {icon: "less-than-equal", classList: "solid"}, {
                    icon: "level-down-alt",
                    classList: "solid"
                }, {icon: "level-up-alt", classList: "solid"}, {
                    icon: "life-ring",
                    classList: ["solid", "regular"]
                }, {icon: "lightbulb", classList: ["solid", "regular"]}, {icon: "line", classList: "brands"}, {
                    icon: "link",
                    classList: "solid"
                }, {icon: "linkedin", classList: "brands"}, {icon: "linkedin-in", classList: "brands"}, {
                    icon: "linode",
                    classList: "brands"
                }, {icon: "linux", classList: "brands"}, {icon: "lira-sign", classList: "solid"}, {
                    icon: "list",
                    classList: "solid"
                }, {icon: "list-alt", classList: ["solid", "regular"]}, {
                    icon: "list-ol",
                    classList: "solid"
                }, {icon: "list-ul", classList: "solid"}, {icon: "location-arrow", classList: "solid"}, {
                    icon: "lock",
                    classList: "solid"
                }, {icon: "lock-open", classList: "solid"}, {
                    icon: "long-arrow-alt-down",
                    classList: "solid"
                }, {icon: "long-arrow-alt-left", classList: "solid"}, {
                    icon: "long-arrow-alt-right",
                    classList: "solid"
                }, {icon: "long-arrow-alt-up", classList: "solid"}, {
                    icon: "low-vision",
                    classList: "solid"
                }, {icon: "luggage-cart", classList: "solid"},
                {icon: "lyft", classList: "brands"}, {icon: "magento", classList: "brands"}, {
                    icon: "magic",
                    classList: "solid"
                }, {icon: "magnet", classList: "solid"}, {icon: "mail-bulk", classList: "solid"}, {
                    icon: "mailchimp",
                    classList: "brands"
                }, {icon: "male", classList: "solid"}, {icon: "mandalorian", classList: "brands"}, {
                    icon: "map",
                    classList: ["solid", "regular"]
                }, {icon: "map-marked", classList: "solid"}, {
                    icon: "map-marked-alt",
                    classList: "solid"
                }, {icon: "map-marker", classList: "solid"}, {icon: "map-marker-alt", classList: "solid"}, {
                    icon: "map-pin",
                    classList: "solid"
                }, {icon: "map-signs", classList: "solid"}, {icon: "markdown", classList: "brands"}, {
                    icon: "marker",
                    classList: "solid"
                }, {icon: "mars", classList: "solid"}, {icon: "mars-double", classList: "solid"}, {
                    icon: "mars-stroke",
                    classList: "solid"
                }, {icon: "mars-stroke-h", classList: "solid"}, {icon: "mars-stroke-v", classList: "solid"}, {
                    icon: "mask",
                    classList: "solid"
                }, {icon: "mastodon", classList: "brands"}, {icon: "maxcdn", classList: "brands"}, {
                    icon: "medal",
                    classList: "solid"
                }, {icon: "medapps", classList: "brands"}, {
                    icon: "medium",
                    classList: "brands"
                }, {icon: "medium-m", classList: "brands"}, {icon: "medkit", classList: "solid"}, {
                    icon: "medrt",
                    classList: "brands"
                }, {icon: "meetup", classList: "brands"}, {icon: "megaport", classList: "brands"}, {
                    icon: "meh",
                    classList: ["solid", "regular"]
                }, {icon: "meh-blank", classList: ["solid", "regular"]}, {
                    icon: "meh-rolling-eyes",
                    classList: ["solid", "regular"]
                }, {icon: "memory", classList: "solid"}, {icon: "menorah", classList: "solid"}, {
                    icon: "mercury",
                    classList: "solid"
                }, {icon: "microchip", classList: "solid"}, {
                    icon: "microphone",
                    classList: "solid"
                }, {icon: "microphone-alt", classList: "solid"}, {
                    icon: "microphone-alt-slash",
                    classList: "solid"
                }, {icon: "microphone-slash", classList: "solid"}, {
                    icon: "microscope",
                    classList: "solid"
                }, {icon: "microsoft", classList: "brands"}, {icon: "minus", classList: "solid"}, {
                    icon: "minus-circle",
                    classList: "solid"
                }, {icon: "minus-square", classList: ["solid", "regular"]}, {
                    icon: "mix",
                    classList: "brands"
                }, {icon: "mixcloud", classList: "brands"}, {icon: "mizuni", classList: "brands"}, {
                    icon: "mobile",
                    classList: "solid"
                }, {
                    icon: "mobile-alt",
                    classList: "solid"
                }, {icon: "modx", classList: "brands"}, {icon: "monero", classList: "brands"}, {
                    icon: "money-bill",
                    classList: "solid"
                }, {icon: "money-bill-alt", classList: ["solid", "regular"]}, {
                    icon: "money-bill-wave",
                    classList: "solid"
                }, {icon: "money-bill-wave-alt", classList: "solid"}, {
                    icon: "money-check",
                    classList: "solid"
                }, {icon: "money-check-alt", classList: "solid"}, {icon: "monument", classList: "solid"}, {
                    icon: "moon",
                    classList: ["solid", "regular"]
                }, {icon: "mortar-pestle", classList: "solid"}, {icon: "mosque", classList: "solid"},
                {icon: "motorcycle", classList: "solid"}, {icon: "mountain", classList: "solid"}, {
                    icon: "mouse-pointer",
                    classList: "solid"
                }, {icon: "music", classList: "solid"}, {icon: "napster", classList: "brands"}, {
                    icon: "neos",
                    classList: "brands"
                }, {icon: "network-wired", classList: "solid"}, {icon: "neuter", classList: "solid"}, {
                    icon: "newspaper",
                    classList: ["solid", "regular"]
                }, {icon: "nimblr", classList: "brands"}, {icon: "nintendo-switch", classList: "brands"}, {
                    icon: "node",
                    classList: "brands"
                }, {icon: "node-js", classList: "brands"}, {
                    icon: "not-equal",
                    classList: "solid"
                }, {icon: "notes-medical", classList: "solid"}, {icon: "npm", classList: "brands"}, {
                    icon: "ns8",
                    classList: "brands"
                }, {icon: "nutritionix", classList: "brands"}, {
                    icon: "object-group",
                    classList: ["solid", "regular"]
                }, {icon: "object-ungroup", classList: ["solid", "regular"]}, {
                    icon: "odnoklassniki",
                    classList: "brands"
                }, {icon: "odnoklassniki-square", classList: "brands"}, {
                    icon: "oil-can",
                    classList: "solid"
                }, {icon: "old-republic", classList: "brands"}, {icon: "om", classList: "solid"}, {
                    icon: "opencart",
                    classList: "brands"
                },
                {icon: "openid", classList: "brands"}, {icon: "opera", classList: "brands"}, {
                    icon: "optin-monster",
                    classList: "brands"
                }, {icon: "osi", classList: "brands"}, {icon: "otter", classList: "solid"}, {
                    icon: "outdent",
                    classList: "solid"
                }, {icon: "page4", classList: "brands"}, {icon: "pagelines", classList: "brands"}, {
                    icon: "paint-brush",
                    classList: "solid"
                }, {icon: "paint-roller", classList: "solid"}, {icon: "palette", classList: "solid"}, {
                    icon: "palfed",
                    classList: "brands"
                }, {icon: "pallet", classList: "solid"}, {
                    icon: "paper-plane", classList: ["solid",
                        "regular"]
                }, {icon: "paperclip", classList: "solid"}, {icon: "parachute-box", classList: "solid"}, {
                    icon: "paragraph",
                    classList: "solid"
                }, {icon: "parking", classList: "solid"}, {icon: "passport", classList: "solid"}, {
                    icon: "pastafarianism",
                    classList: "solid"
                }, {icon: "paste", classList: "solid"}, {icon: "patreon", classList: "brands"}, {
                    icon: "pause",
                    classList: "solid"
                }, {icon: "pause-circle", classList: ["solid", "regular"]}, {
                    icon: "paw",
                    classList: "solid"
                }, {icon: "paypal", classList: "brands"}, {icon: "peace", classList: "solid"}, {
                    icon: "pen",
                    classList: "solid"
                }, {icon: "pen-alt", classList: "solid"}, {icon: "pen-fancy", classList: "solid"}, {
                    icon: "pen-nib",
                    classList: "solid"
                }, {icon: "pen-square", classList: "solid"}, {
                    icon: "pencil-alt",
                    classList: "solid"
                }, {icon: "pencil-ruler", classList: "solid"}, {
                    icon: "penny-arcade",
                    classList: "brands"
                }, {icon: "people-carry", classList: "solid"}, {icon: "percent", classList: "solid"}, {
                    icon: "percentage",
                    classList: "solid"
                }, {icon: "periscope", classList: "brands"}, {
                    icon: "phabricator",
                    classList: "brands"
                }, {icon: "phoenix-framework", classList: "brands"},
                {icon: "phoenix-squadron", classList: "brands"}, {icon: "phone", classList: "solid"}, {
                    icon: "phone-slash",
                    classList: "solid"
                }, {icon: "phone-square", classList: "solid"}, {icon: "phone-volume", classList: "solid"}, {
                    icon: "php",
                    classList: "brands"
                }, {icon: "pied-piper", classList: "brands"}, {
                    icon: "pied-piper-alt",
                    classList: "brands"
                }, {icon: "pied-piper-hat", classList: "brands"}, {
                    icon: "pied-piper-pp",
                    classList: "brands"
                }, {icon: "piggy-bank", classList: "solid"}, {icon: "pills", classList: "solid"}, {
                    icon: "pinterest",
                    classList: "brands"
                },
                {icon: "pinterest-p", classList: "brands"}, {
                    icon: "pinterest-square",
                    classList: "brands"
                }, {icon: "place-of-worship", classList: "solid"}, {
                    icon: "plane",
                    classList: "solid"
                }, {icon: "plane-arrival", classList: "solid"}, {
                    icon: "plane-departure",
                    classList: "solid"
                }, {icon: "play", classList: "solid"}, {
                    icon: "play-circle",
                    classList: ["solid", "regular"]
                }, {icon: "playstation", classList: "brands"}, {icon: "plug", classList: "solid"}, {
                    icon: "plus",
                    classList: "solid"
                }, {icon: "plus-circle", classList: "solid"}, {
                    icon: "plus-square", classList: ["solid",
                        "regular"]
                }, {icon: "podcast", classList: "solid"}, {icon: "poll", classList: "solid"}, {
                    icon: "poll-h",
                    classList: "solid"
                }, {icon: "poo", classList: "solid"}, {icon: "poop", classList: "solid"}, {
                    icon: "portrait",
                    classList: "solid"
                }, {icon: "pound-sign", classList: "solid"}, {icon: "power-off", classList: "solid"}, {
                    icon: "pray",
                    classList: "solid"
                }, {icon: "praying-hands", classList: "solid"}, {
                    icon: "prescription",
                    classList: "solid"
                }, {icon: "prescription-bottle", classList: "solid"}, {
                    icon: "prescription-bottle-alt",
                    classList: "solid"
                }, {
                    icon: "print",
                    classList: "solid"
                }, {icon: "procedures", classList: "solid"}, {
                    icon: "product-hunt",
                    classList: "brands"
                }, {icon: "project-diagram", classList: "solid"}, {
                    icon: "pushed",
                    classList: "brands"
                }, {icon: "puzzle-piece", classList: "solid"}, {icon: "python", classList: "brands"}, {
                    icon: "qq",
                    classList: "brands"
                }, {icon: "qrcode", classList: "solid"}, {icon: "question", classList: "solid"}, {
                    icon: "question-circle",
                    classList: ["solid", "regular"]
                }, {icon: "quidditch", classList: "solid"}, {icon: "quinscape", classList: "brands"}, {
                    icon: "quora",
                    classList: "brands"
                },
                {icon: "quote-left", classList: "solid"}, {icon: "quote-right", classList: "solid"}, {
                    icon: "quran",
                    classList: "solid"
                }, {icon: "r-project", classList: "brands"}, {icon: "random", classList: "solid"}, {
                    icon: "ravelry",
                    classList: "brands"
                }, {icon: "react", classList: "brands"}, {icon: "readme", classList: "brands"}, {
                    icon: "rebel",
                    classList: "brands"
                }, {icon: "receipt", classList: "solid"}, {icon: "recycle", classList: "solid"}, {
                    icon: "red-river",
                    classList: "brands"
                }, {icon: "reddit", classList: "brands"}, {icon: "reddit-alien", classList: "brands"},
                {icon: "reddit-square", classList: "brands"}, {icon: "redo", classList: "solid"}, {
                    icon: "redo-alt",
                    classList: "solid"
                }, {icon: "registered", classList: ["solid", "regular"]}, {
                    icon: "rendact",
                    classList: "brands"
                }, {icon: "renren", classList: "brands"}, {icon: "reply", classList: "solid"}, {
                    icon: "reply-all",
                    classList: "solid"
                }, {icon: "replyd", classList: "brands"}, {icon: "researchgate", classList: "brands"}, {
                    icon: "resolving",
                    classList: "brands"
                }, {icon: "retweet", classList: "solid"}, {icon: "rev", classList: "brands"}, {
                    icon: "ribbon",
                    classList: "solid"
                },
                {icon: "ring", classList: "solid"}, {icon: "road", classList: "solid"}, {
                    icon: "robot",
                    classList: "solid"
                }, {icon: "rocket", classList: "solid"}, {icon: "rocketchat", classList: "brands"}, {
                    icon: "rockrms",
                    classList: "brands"
                }, {icon: "route", classList: "solid"}, {icon: "rss", classList: "solid"}, {
                    icon: "rss-square",
                    classList: "solid"
                }, {icon: "ruble-sign", classList: "solid"}, {icon: "ruler", classList: "solid"}, {
                    icon: "ruler-combined",
                    classList: "solid"
                }, {icon: "ruler-horizontal", classList: "solid"}, {icon: "ruler-vertical", classList: "solid"},
                {icon: "running", classList: "solid"}, {icon: "rupee-sign", classList: "solid"}, {
                    icon: "sad-cry",
                    classList: ["solid", "regular"]
                }, {icon: "sad-tear", classList: ["solid", "regular"]}, {
                    icon: "safari",
                    classList: "brands"
                }, {icon: "sass", classList: "brands"}, {icon: "save", classList: ["solid", "regular"]}, {
                    icon: "schlix",
                    classList: "brands"
                }, {icon: "school", classList: "solid"}, {icon: "screwdriver", classList: "solid"}, {
                    icon: "scribd",
                    classList: "brands"
                }, {icon: "scroll", classList: "solid"}, {icon: "search", classList: "solid"}, {
                    icon: "search-dollar",
                    classList: "solid"
                }, {icon: "search-location", classList: "solid"}, {
                    icon: "search-minus",
                    classList: "solid"
                }, {icon: "search-plus", classList: "solid"}, {icon: "searchengin", classList: "brands"}, {
                    icon: "seedling",
                    classList: "solid"
                }, {icon: "sellcast", classList: "brands"}, {icon: "sellsy", classList: "brands"}, {
                    icon: "server",
                    classList: "solid"
                }, {icon: "servicestack", classList: "brands"}, {icon: "shapes", classList: "solid"}, {
                    icon: "share",
                    classList: "solid"
                }, {icon: "share-alt", classList: "solid"}, {icon: "share-alt-square", classList: "solid"},
                {icon: "share-square", classList: ["solid", "regular"]}, {
                    icon: "shekel-sign",
                    classList: "solid"
                }, {icon: "shield-alt", classList: "solid"}, {icon: "ship", classList: "solid"}, {
                    icon: "shipping-fast",
                    classList: "solid"
                }, {icon: "shirtsinbulk", classList: "brands"}, {
                    icon: "shoe-prints",
                    classList: "solid"
                }, {icon: "shopping-bag", classList: "solid"}, {
                    icon: "shopping-basket",
                    classList: "solid"
                }, {icon: "shopping-cart", classList: "solid"}, {icon: "shopware", classList: "brands"}, {
                    icon: "shower",
                    classList: "solid"
                }, {icon: "shuttle-van", classList: "solid"},
                {icon: "sign", classList: "solid"}, {icon: "sign-in-alt", classList: "solid"}, {
                    icon: "sign-language",
                    classList: "solid"
                }, {icon: "sign-out-alt", classList: "solid"}, {icon: "signal", classList: "solid"}, {
                    icon: "signature",
                    classList: "solid"
                }, {icon: "simplybuilt", classList: "brands"}, {icon: "sistrix", classList: "brands"}, {
                    icon: "sitemap",
                    classList: "solid"
                }, {icon: "sith", classList: "brands"}, {icon: "skull", classList: "solid"}, {
                    icon: "skull-crossbones",
                    classList: "solid"
                }, {icon: "skyatlas", classList: "brands"}, {icon: "skype", classList: "brands"},
                {icon: "slack", classList: "brands"}, {icon: "slack-hash", classList: "brands"}, {
                    icon: "slash",
                    classList: "solid"
                }, {icon: "sliders-h", classList: "solid"}, {icon: "slideshare", classList: "brands"}, {
                    icon: "smile",
                    classList: ["solid", "regular"]
                }, {icon: "smile-beam", classList: ["solid", "regular"]}, {
                    icon: "smile-wink",
                    classList: ["solid", "regular"]
                }, {icon: "smoking", classList: "solid"}, {icon: "smoking-ban", classList: "solid"}, {
                    icon: "snapchat",
                    classList: "brands"
                }, {icon: "snapchat-ghost", classList: "brands"}, {
                    icon: "snapchat-square",
                    classList: "brands"
                }, {icon: "snowflake", classList: ["solid", "regular"]}, {
                    icon: "socks",
                    classList: "solid"
                }, {icon: "solar-panel", classList: "solid"}, {icon: "sort", classList: "solid"}, {
                    icon: "sort-alpha-down",
                    classList: "solid"
                }, {icon: "sort-alpha-up", classList: "solid"}, {
                    icon: "sort-amount-down",
                    classList: "solid"
                }, {icon: "sort-amount-up", classList: "solid"}, {
                    icon: "sort-down",
                    classList: "solid"
                }, {icon: "sort-numeric-down", classList: "solid"}, {
                    icon: "sort-numeric-up",
                    classList: "solid"
                }, {icon: "sort-up", classList: "solid"},
                {icon: "soundcloud", classList: "brands"}, {icon: "spa", classList: "solid"}, {
                    icon: "space-shuttle",
                    classList: "solid"
                }, {icon: "speakap", classList: "brands"}, {icon: "spider", classList: "solid"}, {
                    icon: "spinner",
                    classList: "solid"
                }, {icon: "splotch", classList: "solid"}, {icon: "spotify", classList: "brands"}, {
                    icon: "spray-can",
                    classList: "solid"
                }, {icon: "square", classList: ["solid", "regular"]}, {
                    icon: "square-full",
                    classList: "solid"
                }, {icon: "square-root-alt", classList: "solid"}, {icon: "squarespace", classList: "brands"}, {
                    icon: "stack-exchange",
                    classList: "brands"
                }, {icon: "stack-overflow", classList: "brands"}, {icon: "stamp", classList: "solid"}, {
                    icon: "star",
                    classList: ["solid", "regular"]
                }, {icon: "star-and-crescent", classList: "solid"}, {
                    icon: "star-half",
                    classList: ["solid", "regular"]
                }, {icon: "star-half-alt", classList: "solid"}, {
                    icon: "star-of-david",
                    classList: "solid"
                }, {icon: "star-of-life", classList: "solid"}, {icon: "staylinked", classList: "brands"}, {
                    icon: "steam",
                    classList: "brands"
                }, {icon: "steam-square", classList: "brands"}, {icon: "steam-symbol", classList: "brands"},
                {icon: "step-backward", classList: "solid"}, {
                    icon: "step-forward",
                    classList: "solid"
                }, {icon: "stethoscope", classList: "solid"}, {
                    icon: "sticker-mule",
                    classList: "brands"
                }, {icon: "sticky-note", classList: ["solid", "regular"]}, {
                    icon: "stop",
                    classList: "solid"
                }, {icon: "stop-circle", classList: ["solid", "regular"]}, {
                    icon: "stopwatch",
                    classList: "solid"
                }, {icon: "store", classList: "solid"}, {icon: "store-alt", classList: "solid"}, {
                    icon: "strava",
                    classList: "brands"
                }, {icon: "stream", classList: "solid"}, {icon: "street-view", classList: "solid"},
                {icon: "strikethrough", classList: "solid"}, {icon: "stripe", classList: "brands"}, {
                    icon: "stripe-s",
                    classList: "brands"
                }, {icon: "stroopwafel", classList: "solid"}, {
                    icon: "studiovinari",
                    classList: "brands"
                }, {icon: "stumbleupon", classList: "brands"}, {
                    icon: "stumbleupon-circle",
                    classList: "brands"
                }, {icon: "subscript", classList: "solid"}, {icon: "subway", classList: "solid"}, {
                    icon: "suitcase",
                    classList: "solid"
                }, {icon: "suitcase-rolling", classList: "solid"}, {
                    icon: "sun",
                    classList: ["solid", "regular"]
                }, {icon: "superpowers", classList: "brands"},
                {icon: "superscript", classList: "solid"}, {icon: "supple", classList: "brands"}, {
                    icon: "surprise",
                    classList: ["solid", "regular"]
                }, {icon: "swatchbook", classList: "solid"}, {icon: "swimmer", classList: "solid"}, {
                    icon: "swimming-pool",
                    classList: "solid"
                }, {icon: "synagogue", classList: "solid"}, {icon: "sync", classList: "solid"}, {
                    icon: "sync-alt",
                    classList: "solid"
                }, {icon: "syringe", classList: "solid"}, {icon: "table", classList: "solid"}, {
                    icon: "table-tennis",
                    classList: "solid"
                }, {icon: "tablet", classList: "solid"}, {
                    icon: "tablet-alt",
                    classList: "solid"
                }, {icon: "tablets", classList: "solid"}, {icon: "tachometer-alt", classList: "solid"}, {
                    icon: "tag",
                    classList: "solid"
                }, {icon: "tags", classList: "solid"}, {icon: "tape", classList: "solid"}, {
                    icon: "tasks",
                    classList: "solid"
                }, {icon: "taxi", classList: "solid"}, {icon: "teamspeak", classList: "brands"}, {
                    icon: "teeth",
                    classList: "solid"
                }, {icon: "teeth-open", classList: "solid"}, {
                    icon: "telegram",
                    classList: "brands"
                }, {icon: "telegram-plane", classList: "brands"}, {icon: "tencent-weibo", classList: "brands"}, {
                    icon: "terminal",
                    classList: "solid"
                }, {icon: "text-height", classList: "solid"}, {icon: "text-width", classList: "solid"}, {
                    icon: "th",
                    classList: "solid"
                }, {icon: "th-large", classList: "solid"}, {icon: "th-list", classList: "solid"}, {
                    icon: "the-red-yeti",
                    classList: "brands"
                }, {icon: "theater-masks", classList: "solid"}, {icon: "themeco", classList: "brands"}, {
                    icon: "themeisle",
                    classList: "brands"
                }, {icon: "thermometer", classList: "solid"}, {
                    icon: "thermometer-empty",
                    classList: "solid"
                }, {icon: "thermometer-full", classList: "solid"}, {
                    icon: "thermometer-half",
                    classList: "solid"
                }, {icon: "thermometer-quarter", classList: "solid"}, {
                    icon: "thermometer-three-quarters",
                    classList: "solid"
                }, {icon: "thumbs-down", classList: ["solid", "regular"]}, {
                    icon: "thumbs-up",
                    classList: ["solid", "regular"]
                }, {icon: "thumbtack", classList: "solid"}, {icon: "ticket-alt", classList: "solid"}, {
                    icon: "times",
                    classList: "solid"
                }, {icon: "times-circle", classList: ["solid", "regular"]}, {
                    icon: "tint",
                    classList: "solid"
                }, {icon: "tint-slash", classList: "solid"}, {icon: "tired", classList: ["solid", "regular"]}, {
                    icon: "toggle-off",
                    classList: "solid"
                }, {icon: "toggle-on", classList: "solid"}, {icon: "toilet-paper", classList: "solid"}, {
                    icon: "toolbox",
                    classList: "solid"
                }, {icon: "tooth", classList: "solid"}, {icon: "torah", classList: "solid"}, {
                    icon: "torii-gate",
                    classList: "solid"
                }, {icon: "tractor", classList: "solid"}, {
                    icon: "trade-federation",
                    classList: "brands"
                }, {icon: "trademark", classList: "solid"}, {icon: "traffic-light", classList: "solid"}, {
                    icon: "train",
                    classList: "solid"
                }, {icon: "transgender", classList: "solid"}, {icon: "transgender-alt", classList: "solid"},
                {icon: "trash", classList: "solid"}, {icon: "trash-alt", classList: ["solid", "regular"]}, {
                    icon: "tree",
                    classList: "solid"
                }, {icon: "trello", classList: "brands"}, {icon: "tripadvisor", classList: "brands"}, {
                    icon: "trophy",
                    classList: "solid"
                }, {icon: "truck", classList: "solid"}, {icon: "truck-loading", classList: "solid"}, {
                    icon: "truck-monster",
                    classList: "solid"
                }, {icon: "truck-moving", classList: "solid"}, {icon: "truck-pickup", classList: "solid"}, {
                    icon: "tshirt",
                    classList: "solid"
                }, {icon: "tty", classList: "solid"}, {icon: "tumblr", classList: "brands"},
                {icon: "tumblr-square", classList: "brands"}, {icon: "tv", classList: "solid"}, {
                    icon: "twitch",
                    classList: "brands"
                }, {icon: "twitter", classList: "brands"}, {icon: "twitter-square", classList: "brands"}, {
                    icon: "typo3",
                    classList: "brands"
                }, {icon: "uber", classList: "brands"}, {icon: "uikit", classList: "brands"}, {
                    icon: "umbrella",
                    classList: "solid"
                }, {icon: "umbrella-beach", classList: "solid"}, {icon: "underline", classList: "solid"}, {
                    icon: "undo",
                    classList: "solid"
                }, {icon: "undo-alt", classList: "solid"}, {icon: "uniregistry", classList: "brands"},
                {icon: "universal-access", classList: "solid"}, {icon: "university", classList: "solid"}, {
                    icon: "unlink",
                    classList: "solid"
                }, {icon: "unlock", classList: "solid"}, {icon: "unlock-alt", classList: "solid"}, {
                    icon: "untappd",
                    classList: "brands"
                }, {icon: "upload", classList: "solid"}, {icon: "usb", classList: "brands"}, {
                    icon: "user",
                    classList: ["solid", "regular"]
                }, {icon: "user-alt", classList: "solid"}, {
                    icon: "user-alt-slash",
                    classList: "solid"
                }, {icon: "user-astronaut", classList: "solid"}, {icon: "user-check", classList: "solid"}, {
                    icon: "user-circle",
                    classList: ["solid", "regular"]
                }, {icon: "user-clock", classList: "solid"}, {icon: "user-cog", classList: "solid"}, {
                    icon: "user-edit",
                    classList: "solid"
                }, {icon: "user-friends", classList: "solid"}, {
                    icon: "user-graduate",
                    classList: "solid"
                }, {icon: "user-injured", classList: "solid"}, {icon: "user-lock", classList: "solid"}, {
                    icon: "user-md",
                    classList: "solid"
                }, {icon: "user-minus", classList: "solid"}, {icon: "user-ninja", classList: "solid"}, {
                    icon: "user-plus",
                    classList: "solid"
                }, {icon: "user-secret", classList: "solid"}, {
                    icon: "user-shield",
                    classList: "solid"
                }, {icon: "user-slash", classList: "solid"}, {icon: "user-tag", classList: "solid"}, {
                    icon: "user-tie",
                    classList: "solid"
                }, {icon: "user-times", classList: "solid"}, {icon: "users", classList: "solid"}, {
                    icon: "users-cog",
                    classList: "solid"
                }, {icon: "ussunnah", classList: "brands"}, {icon: "utensil-spoon", classList: "solid"}, {
                    icon: "utensils",
                    classList: "solid"
                }, {icon: "vaadin", classList: "brands"}, {icon: "vector-square", classList: "solid"}, {
                    icon: "venus",
                    classList: "solid"
                }, {icon: "venus-double", classList: "solid"}, {
                    icon: "venus-mars",
                    classList: "solid"
                }, {icon: "viacoin", classList: "brands"}, {icon: "viadeo", classList: "brands"}, {
                    icon: "viadeo-square",
                    classList: "brands"
                }, {icon: "vial", classList: "solid"}, {icon: "vials", classList: "solid"}, {
                    icon: "viber",
                    classList: "brands"
                }, {icon: "video", classList: "solid"}, {icon: "video-slash", classList: "solid"}, {
                    icon: "vihara",
                    classList: "solid"
                }, {icon: "vimeo", classList: "brands"}, {icon: "vimeo-square", classList: "brands"}, {
                    icon: "vimeo-v",
                    classList: "brands"
                }, {icon: "vine", classList: "brands"}, {icon: "vk", classList: "brands"},
                {icon: "vnv", classList: "brands"}, {icon: "volleyball-ball", classList: "solid"}, {
                    icon: "volume-down",
                    classList: "solid"
                }, {icon: "volume-mute", classList: "solid"}, {icon: "volume-off", classList: "solid"}, {
                    icon: "volume-up",
                    classList: "solid"
                }, {icon: "vuejs", classList: "brands"}, {icon: "walking", classList: "solid"}, {
                    icon: "wallet",
                    classList: "solid"
                }, {icon: "warehouse", classList: "solid"}, {icon: "weebly", classList: "brands"}, {
                    icon: "weibo",
                    classList: "brands"
                }, {icon: "weight", classList: "solid"}, {icon: "weight-hanging", classList: "solid"},
                {icon: "weixin", classList: "brands"}, {icon: "whatsapp", classList: "brands"}, {
                    icon: "whatsapp-square",
                    classList: "brands"
                }, {icon: "wheelchair", classList: "solid"}, {icon: "whmcs", classList: "brands"}, {
                    icon: "wifi",
                    classList: "solid"
                }, {icon: "wikipedia-w", classList: "brands"}, {icon: "wind", classList: "solid"}, {
                    icon: "window-close",
                    classList: ["solid", "regular"]
                }, {icon: "window-maximize", classList: ["solid", "regular"]}, {
                    icon: "window-minimize",
                    classList: ["solid", "regular"]
                }, {icon: "window-restore", classList: ["solid", "regular"]},
                {icon: "windows", classList: "brands"}, {icon: "wine-bottle", classList: "solid"}, {
                    icon: "wine-glass",
                    classList: "solid"
                }, {icon: "wine-glass-alt", classList: "solid"}, {
                    icon: "wix",
                    classList: "brands"
                }, {icon: "wizards-of-the-coast", classList: "brands"}, {
                    icon: "wolf-pack-battalion",
                    classList: "brands"
                }, {icon: "won-sign", classList: "solid"}, {
                    icon: "wordpress",
                    classList: "brands"
                }, {icon: "wordpress-simple", classList: "brands"}, {
                    icon: "wpbeginner",
                    classList: "brands"
                }, {icon: "wpexplorer", classList: "brands"}, {icon: "wpforms", classList: "brands"},
                {icon: "wrench", classList: "solid"}, {icon: "x-ray", classList: "solid"}, {
                    icon: "xbox",
                    classList: "brands"
                }, {icon: "xing", classList: "brands"}, {icon: "xing-square", classList: "brands"}, {
                    icon: "y-combinator",
                    classList: "brands"
                }, {icon: "yahoo", classList: "brands"}, {
                    icon: "yandex",
                    classList: "brands"
                }, {icon: "yandex-international", classList: "brands"}, {
                    icon: "yelp",
                    classList: "brands"
                }, {icon: "yen-sign", classList: "solid"}, {icon: "yin-yang", classList: "solid"}, {
                    icon: "yoast",
                    classList: "brands"
                }, {icon: "youtube", classList: "brands"},
                {icon: "youtube-square", classList: "brands"}, {icon: "zhihu", classList: "brands"}]
        }, {
            type: "jQueryIcons",
            title: "JQuery Mobile Icons",
            classList: {"": "ui-icon ui-icon-"},
            icons: ["left arrow", "right arrow", "up arrow", "down arrow", "delete", "plus", "minus", "check", "gear", "refresh", "forward", "back", "grid", "star", "alert", "info", "home", "search"]
        }];
    n.style.width = "455px";
    n.style.border = "2px solid #336699";
    n.style.position = "absolute";
    n.style.top = "50px";
    n.style.left = "50px";
    n.style.padding = "0px";
    n.style.zIndex = S.jw;
    n.style.visibility =
        "hidden";
    n.style.display = "none";
    n.style.height = "440px";
    n.style.overflow = "hidden";
    S.W(document, "mousedown", function (J) {
        for (J = S.getTarget(J); J != null;) {
            if (J == n) return;
            J = J.parentNode
        }
        I.hide()
    });
    o.innerHTML = "Select Icon";
    o.style.fontSize = "12px";
    o.style.fontFamily = "Arial";
    o.style.backgroundColor = "#6699cc";
    o.style.padding = "3px";
    o.style.cursor = "move";
    o.style.fontWeight = "bold";
    o.style.color = "#ffffff";
    o.style.position = "absolute";
    o.style.left = "0px";
    o.style.top = "0px";
    o.style.whiteSpace = "normal";
    o.style.width =
        "100%";
    if (typeof o.style.MozUserSelect != "undefined") o.style.MozUserSelect = "none";
    i.style.overflow = "auto";
    i.style.height = "450px";
    i.style.backgroundColor = "#ffffff";
    i.style.padding = "0px";
    i.style.position = "absolute";
    i.style.left = "0px";
    i.style.top = "20px";
    i.style.whiteSpace = "normal";
    i.style.width = "100%";
    var H = null;
    if (Q == "dspf") H = pui.Gf(n, o, i, function () {
        I.hide()
    });
    k.style.position = "absolute";
    k.style.left = "10px";
    k.style.top = "3px";
    k.style.fontFamily = "Arial";
    k.style.fontSize = "13px";
    k.innerHTML = "Icon Set:";
    r.style.position = "absolute";
    r.style.left = "65px";
    r.style.top = "3px";
    l();
    r.onchange = function () {
        for (var J = this.value, K = f(), L = 0; L < K.length; L++) {
            var N = K[L];
            if (N.type === J) {
                if (J === "jQueryIcons") {
                    e(false);
                    d(N, J)
                } else {
                    e(true);
                    if (w.value.trim()) w.value = "";
                    c(N, J)
                }
                break
            }
        }
    };
    q.style.position = "absolute";
    q.style.left = "10px";
    q.style.top = "28px";
    q.style.fontFamily = "Arial";
    q.style.fontSize = "12px";
    q.innerHTML = "Search:";
    w.style.position = "absolute";
    w.style.left = "52px";
    w.style.top = "25px";
    w.style.width = "355px";
    w.style.fontFamily =
        "Arial";
    w.style.fontSize = "16px";
    if (pui.flatlook) {
        w.style.backgroundColor = "#fefefe";
        w.style.border = "1px solid";
        w.style.borderColor = "#aeb6be";
        w.style.color = "#31373d";
        w.style.height = "21px"
    }
    w.oninput = function () {
        for (var J = this.value.toLowerCase().trim(), K = r.value, L = f(), N = 0; N < L.length; N++) {
            var O = L[N];
            if (O.type === K) {
                J ? b(J, O, K) : d(O, K);
                break
            }
        }
    };
    v.style.position = "absolute";
    v.style.left = "413px";
    v.style.top = "23px";
    v.style.cursor = "pointer";
    E.className = "pui-material-icons";
    E.innerText = "sort_by_alpha";
    E.style.fontSize =
        "18px";
    if (pui.flatlook) {
        v.style.backgroundColor = "rgb(25, 121, 202)";
        v.style.borderColor = "rgb(24, 116, 193)";
        v.style.color = "white";
        v.style.border = "none";
        E.style.fontSize = "21px";
        v.onmouseover = function () {
            this.style.backgroundColor = "#1c87e1"
        };
        v.onmouseout = function () {
            this.style.backgroundColor = "rgb(25, 121, 202)"
        }
    }
    v.onclick = function () {
        var J = r.value, K = w.value.toLowerCase().trim(), L = f();
        y = !y;
        for (var N = 0; N < L.length; N++) {
            var O = L[N];
            if (O.type === J) {
                O.icons = a(O.icons);
                K ? b(K, O, J) : d(O, J);
                break
            }
        }
    };
    s.style.position =
        "absolute";
    s.style.left = "10px";
    s.style.top = "52px";
    s.style.width = "431px";
    s.style.height = "320px";
    s.style.border = "1px solid #cccccc";
    s.style.backgroundColor = "#ffffff";
    s.style.overflow = "auto";
    t.style.position = "absolute";
    t.style.left = "285px";
    t.style.top = "380px";
    t.style.width = "75px";
    t.style.fontFamily = "Arial";
    t.style.fontSize = "15px";
    t.style.cursor = "pointer";
    t.type = "button";
    t.value = "Select";
    if (pui.flatlook) {
        t.style.backgroundColor = "rgb(25, 121, 202)";
        t.style.border = "none";
        t.style.color = "white";
        t.style.padding =
            "4px";
        t.onmouseover = function () {
            this.style.backgroundColor = "#1c87e1"
        };
        t.onmouseout = function () {
            this.style.backgroundColor = "rgb(25, 121, 202)"
        }
    }
    t.disabled = true;
    t.onclick = function () {
        if (F != null) {
            I.fe && I.fe(F.value);
            I.hide()
        }
    };
    u.style.position = "absolute";
    u.style.left = "365px";
    u.style.top = "380px";
    u.style.width = "75px";
    u.style.fontFamily = "Arial";
    u.style.fontSize = "15px";
    u.style.cursor = "pointer";
    u.type = "button";
    u.value = "Cancel";
    if (pui.flatlook) {
        u.style.backgroundColor = "rgb(25, 121, 202)";
        u.style.border = "none";
        u.style.color = "white";
        u.style.padding = "4px";
        u.onmouseover = function () {
            this.style.backgroundColor = "#1c87e1"
        };
        u.onmouseout = function () {
            this.style.backgroundColor = "rgb(25, 121, 202)"
        }
    }
    u.onclick = function () {
        I.hide()
    };
    v.appendChild(E);
    i.appendChild(k);
    i.appendChild(r);
    i.appendChild(q);
    i.appendChild(w);
    i.appendChild(v);
    i.appendChild(s);
    i.appendChild(t);
    i.appendChild(u);
    n.appendChild(o);
    n.appendChild(i);
    document.body.appendChild(n);
    pui.rd({wc: o, move: n, opacity: 85});
    this.show = function (J, K, L, N) {
        var O = document.body.offsetWidth,
            V = document.body.offsetHeight;
        if (O == null) O = 1E4;
        if (V == null) V = 1E4;
        O -= 470;
        V -= 450;
        if (O < 0) O = 0;
        if (V < 0) V = 0;
        var X = S.getX(J);
        J = S.getY(J);
        J -= 120;
        if (Q == "dspf" && J > V) J = V;
        if (J < 0) J = 0;
        if (X > O) X = O;
        n.style.left = X + "px";
        n.style.top = J + "px";
        if (K != null) n.style.left = K + "px";
        if (L != null) n.style.top = L + "px";
        n.style.visibility = "visible";
        n.style.display = "";
        if (!N && B) {
            e(true);
            B = false;
            l();
            L = h();
            K = L.Pp;
            L = L.Qp;
            r.value = L;
            c(K, L)
        } else if (N && !B) {
            L = h(true);
            K = L.Pp;
            L = L.Qp;
            l(true);
            L === "jQueryIcons" ? e(false) : e(true);
            B = true;
            r.value = L;
            c(K, L)
        } else if (D ||
            w.value.trim() || !y) {
            D = false;
            if (!N) {
                l();
                L = h();
                K = L.Pp;
                L = L.Qp;
                r.value = L;
                c(K, L)
            }
        }
    };
    this.hide = function () {
        n.style.visibility = "hidden";
        n.style.display = "none"
    };
    this.isHidden = function () {
        return n.style.visibility == "hidden"
    };
    this.db = function (J) {
        if (H != null) H.innerHTML = J; else o.innerHTML = J
    }
};
pui.designer.KC = function () {
    function b(k) {
        if (window.event) window.event.cancelBubble = true;
        if (k.preventDefault) k.cancelBubble = true
    }

    function a(k) {
        if (window.event) window.event.cancelBubble = true;
        if (k.preventDefault) k.cancelBubble = true
    }

    function c(k, q, s) {
        var t;
        if (k.style[s] != null && k.style[s] != "") t = k.style[s]; else if (k.currentStyle) t = k.currentStyle[s]; else if (window.getComputedStyle) t = document.defaultView.getComputedStyle(k, null).getPropertyValue(q);
        if (typeof t === "string" && t.substr(0, 5).toLowerCase() === "rgba(") {
            k =
                t.split(",");
            if (k.length === 4) {
                q = k[3];
                if (q.substr(q.length - 1) === ")") {
                    q = q.substr(0, q.length - 1).trim();
                    if (q != "0" && q != "1") {
                        q = "1)";
                        k[3] = q;
                        t = k.join(",")
                    }
                }
            }
        }
        return i.style[s] = t
    }

    function d(k, q, s) {
        var t = q.style.width;
        if (typeof t == "string" && t != "" && !isNaN(t)) t += "px";
        t = t != null && typeof t == "string" && t.length >= 3 && t.substr(t.length - 2, 2) == "px" ? parseInt(t) : q.offsetWidth;
        if (isNaN(t)) t = q.offsetWidth;
        if (s == null && k.label == null && !pui.is_quirksmode) t -= 3;
        if (s == "grid" && !pui.is_quirksmode) t -= 4;
        if (s == "tab") t += 20;
        if (t < 30) t = 30;
        var u = q.style.height;
        if (typeof u == "string" && u != "" && !isNaN(u)) u += "px";
        u = u != null && typeof u == "string" && u.length >= 3 && u.substr(u.length - 2, 2) == "px" ? parseInt(u) : q.offsetHeight;
        if (isNaN(u)) u = q.offsetHeight;
        if (s == null && k.label == null && !pui.is_quirksmode) u -= 3;
        if (pui.is_quirksmode && s == "tab") u += 4;
        if (s == "grid" && !pui.is_quirksmode) u -= 4;
        if (u < 10) u = 10;
        if (k.properties["field type"] == "field set panel") u = 25;
        if (k.properties["field type"] == "panel") {
            u = parseInt(q.style.fontSize);
            if (isNaN(u) || u < 25) {
                u = 25;
                if (pui.is_quirksmode) u =
                    30
            }
        }
        if (k.properties["field type"] == "css panel" || k.properties["field type"] == "layout" && k.properties.template == "css panel") u = q.panel.pG(); else if (k.properties["field type"] == "layout" && k.properties.template == "fieldset") {
            u = q.querySelector("fieldset legend");
            u = u != null && u.offsetHeight > 0 ? u.offsetHeight : 10
        }
        if (s == "menu") {
            t = k.dom.style.width;
            if (typeof t == "string" && t != "" && !isNaN(t)) t += "px";
            t = t != null && typeof t == "string" && t.length >= 3 && t.substr(t.length - 2, 2) == "px" ? parseInt(t) : k.dom.offsetWidth;
            if (isNaN(t)) t = k.dom.offsetWidth;
            var w = parseInt(k.properties["menu option padding"]);
            if (isNaN(w) || w <= 0) w = 5;
            var v = parseInt(k.properties["menu option indent"]);
            if (isNaN(v) || v <= 0) v = w;
            var E = parseInt(k.properties["font size"]);
            if (isNaN(E) || E <= 0) E = 12;
            u = w + E;
            if (pui.is_quirksmode) u *= 2;
            t = t - v - w;
            if (t < 10) t = 10
        }
        i.style.width = t + "px";
        i.style.height = u + "px";
        if (q.tagName == "DIV" && k.properties["field type"] != "grid") i.style.lineHeight = q.style.lineHeight; else {
            i.style.lineHeight = u + "px";
            k = i.value.split("\n").length;
            if (s == "grid") {
                E = parseInt(i.style.fontSize);
                if (!isNaN(E)) {
                    k = parseInt((u - E * k) / 2);
                    if (k > 0) {
                        i.style.paddingTop = k + "px";
                        i.style.lineHeight = "";
                        if (!pui.is_quirksmode) i.style.height = u - k + "px"
                    }
                    if (s == "grid") i.style.lineHeight = ""
                }
            }
        }
        return {width: t, height: u}
    }

    function e(k, q, s, t) {
        var u = new pui.designer.yC;
        u.b = document.body;
        u.init();
        u.add({Qc: "B", right: "separator", co: true, selected: f(t.fontWeight), tooltip: "Bold"});
        u.add({Qc: "I", right: "right-border", co: true, selected: t.fontStyle == "italic", tooltip: "Italic"});
        var w = k.properties["field type"];
        if (w != "field set panel" &&
            w != "tab panel" && w != "checkbox" && w != "radio button" && (w != "layout" || k.properties.template != "tab panel")) {
            u.ro();
            u.add({
                left: "left-border",
                Qc: "left-align",
                right: "separator",
                co: true,
                selected: t.textAlign != "center" && t.textAlign != "right",
                tooltip: "Align Text Left"
            });
            u.add({Qc: "center", right: "separator", co: true, selected: t.textAlign == "center", tooltip: "Center"});
            u.add({
                Qc: "right-align",
                right: "right-border",
                co: true,
                selected: t.textAlign == "right",
                tooltip: "Align Text Right"
            })
        }
        u.ro();
        u.add({
            left: "left-border", Qc: "font-up",
            right: "separator", tooltip: "Grow Font"
        });
        u.add({Qc: "font-down", right: "right-border", tooltip: "Shrink Font"});
        u.ro();
        u.add({left: "left-border", Qc: "clear", right: "right-border", tooltip: "Clear Formatting"});
        u.ro();
        u.add({left: "left-border", Qc: "color", right: "right-border", tooltip: "Font Color", color: t.color});
        u.ro();
        u.handler = function (v, E) {
            function y(I, z, H) {
                if (H != null && H === true && pui.f(k.properties[I]) === true) if (confirm("The " + I + " property of this widget has been bound to a field. If you continue, the field will be un-bound.") ===
                    false) return;
                H = k.properties["field type"];
                if (H == "styled button" || H == "panel" || H == "css button" || H == "css panel" || H == "layout" && (k.properties.template == "css panel" || k.properties.template == "tab panel")) {
                    var J = pui.widgets[H], K = J.eh;
                    J = J.propertySetters;
                    var L = I, N = null;
                    if (J != null) N = J[L];
                    var O;
                    if (N != null || K != null) {
                        O = {
                            newValue: z,
                            value: z,
                            design: true,
                            properties: k.properties,
                            dom: q,
                            Jd: q,
                            propertyName: L,
                            c: k
                        };
                        if (H == "layout" && k.properties.template == "tab panel") try {
                            O.dom = q.parentNode.parentNode.parentNode
                        } catch (V) {
                            console.log(V)
                        }
                    }
                    K !=
                    null && K(O);
                    N != null && N(O)
                }
                K = I.split(" ");
                O = K[0];
                H = K[0];
                for (J = 1; J < K.length; J++) {
                    O += K[J].substr(0, 1).toUpperCase() + K[J].substr(1);
                    H += "-" + K[J]
                }
                q.style[O] = z;
                if (k.label != null) k.dom.style[O] = z;
                i.style[O] = z;
                if (s == "grid") I = I == "color" ? "header font color" : "header " + I;
                k.designer.n.add(k, I);
                pui.f(k.properties[I]) && k.designer.D.vh({c: k, fieldName: k.properties[I].fieldName, property: I});
                if (s == "grid") r.fA(I, O, z); else {
                    k.properties[I] = z;
                    k.m[I] = z != "";
                    k.ta = true;
                    r.designer.X[r.designer.i.l] = true;
                    r.designer.k.ea(I);
                    B[O] =
                        z;
                    if (s == "tab" && z == "" && k.dom.tabPanel != null && k.dom.tabPanel.defaults[O] != null) B[O] = k.dom.tabPanel.defaults[O];
                    I = k.bb();
                    I != null && I.Ib(k.dom.parentNode.col)
                }
                if (z == "") return c(q, H, O)
            }

            var F = ["left-align", "center", "right-align"];
            if (v == F[0] || v == F[1] || v == F[2]) if (E) for (var D = 0; D < F.length; D++) F[D] != v && u.bk(F[D], false); else u.bk(v, true);
            var B = {};
            if (s == "tab") B = q.parentNode.parentNode.parentNode.style;
            switch (v) {
                case "B":
                    y("font weight", E ? "bold" : "normal", true);
                    break;
                case "I":
                    y("font style", E ? "italic" : "normal",
                        true);
                    break;
                case "left-align":
                    y("text align", "left", true);
                    break;
                case "center":
                    y("text align", "center", true);
                    break;
                case "right-align":
                    y("text align", "right", true);
                    break;
                case "font-up":
                    D = t.fontSize;
                    D = parseInt(D);
                    if (!isNaN(D) && D < 100) {
                        D += 1;
                        if (D > 15) if (D % 2 == 1) D += 1;
                        D += "px";
                        y("font size", D, true);
                        t.fontSize = D
                    }
                    break;
                case "font-down":
                    D = t.fontSize;
                    D = parseInt(D);
                    if (!isNaN(D) && D > 8) {
                        D -= 1;
                        if (D > 15) if (D % 2 == 1) D -= 1;
                        D += "px";
                        y("font size", D, true);
                        t.fontSize = D
                    }
                    break;
                case "clear":
                    D = y("font weight", "");
                    u.bk("B", f(D));
                    D = y("font style",
                        "");
                    u.bk("I", D == "italic");
                    if (u.SF("left-align")) {
                        D = y("text align", "");
                        u.bk("left-align", D == "left");
                        u.bk("center", D == "center");
                        u.bk("right-align", D == "right")
                    }
                    y("font size", "");
                    D = y("color", "");
                    u.yv("color", D);
                    break;
                case "color":
                    y("color", E, true);
                    break
            }
            F = k.designer.selection.e;
            for (D = 0; D < F.length; D++) F[D].c == k && F[D].Fb();
            d(k, q, s);
            c(q, "left", "left");
            c(q, "top", "top");
            if (i.style.top == "auto" || pui.da(i.style.top)) i.style.top = q.offsetTop + "px";
            if (i.style.left == "auto" || pui.da(i.style.left)) i.style.left = q.offsetLeft +
                "px";
            if (s == "tab" && k.dom.tabPanel != null) {
                D = pui.widgets.tabStyles[k.dom.tabPanel.Df];
                if (D != null && D.leftWidth != null) i.style.left = parseInt(i.style.left) - D.leftWidth + "px"
            }
            i.value = i.value;
            i.focus()
        };
        return u
    }

    function f(k) {
        var q = false;
        if (k == "bold") q = true;
        if (k == "bolder") q = true;
        if (!isNaN(parseInt(k)) && parseInt(k) >= 600) q = true;
        return q
    }

    this.designer = this.fA = this.Oj = null;
    var h = false, g, l, n = document.createElement("input");
    n.style.overflow = "hidden";
    n.style.position = "absolute";
    n.sz = true;
    var o = document.createElement("textarea");
    o.style.overflow = "hidden";
    o.style.position = "absolute";
    o.sz = true;
    var i = n;
    n.onblur = o.onblur = function () {
        if (l == null || l.Og == false) r.update()
    };
    S.W(document, "mousedown", function () {
        r.update()
    });
    S.W(n, "keydown", b);
    S.W(o, "keydown", b);
    S.W(n, "mousedown", a);
    S.W(o, "mousedown", a);
    n.onkeydown = o.onkeydown = function (k) {
        if (!k) k = window.event;
        var q = k.keyCode;
        if (q == 13) if (k.shiftKey && i.tagName == "TEXTAREA") i.style.lineHeight = ""; else try {
            i.blur()
        } catch (s) {
        }
        q == 27 && r.hide()
    };
    var r = this;
    this.show = function (k, q, s) {
        r.hide();
        i = n;
        if (s == "grid") i = o;
        if (k.properties["field type"] == "html container") i = o;
        if (Q == "genie" && typeof document.body.style.MozUserSelect != "undefined") document.body.style.MozUserSelect = "";
        h = true;
        if (q == null) {
            q = k.dom;
            if (k.label != null) q = k.label
        }
        k.designer.n.start("Edit " + pui.widgets[k.properties["field type"]].menuName);
        i.style.zIndex = S.UK;
        if (k.properties["field type"] == "field set panel") i.style.zIndex = q.style.zIndex;
        if (s == "grid" && q.firstChild != null && q.firstChild.tagName == "DIV") {
            for (var t = q.firstChild.innerHTML; t.indexOf("<br>") !=
            -1;) t = t.replace("<br>", "\n");
            for (; t.indexOf("<BR>") != -1;) t = t.replace("<BR>", "\n");
            for (; t.indexOf("<br/>") != -1;) t = t.replace("<br/>", "\n");
            for (; t.indexOf("<br />") != -1;) t = t.replace("<br />", "\n");
            i.value = t
        } else i.value = s != null ? tc(q) : k.properties.value == null ? "" : k.properties.value;
        if (k.properties["field type"] == "layout") if (k.properties.template == "css panel") i.value = k.properties["header text"] == null ? "" : k.properties["header text"]; else if (k.properties.template == "fieldset") i.value = k.properties.legend == null ?
            "" : k.properties.legend;
        if (k.properties["field type"] == "html container") i.value = k.properties.html;
        if (k.label != null) i.value = tc(k.label);
        if (Q == "genie" && i.value == "script: value" && k.label == null) {
            if (k.dom.tagName == "INPUT") i.value = k.dom.value;
            if (k.dom.tagName == "DIV") i.value = tc(k.dom)
        }
        g = i.value;
        s == "menu" ? k.dom.parentNode.appendChild(i) : q.parentNode.appendChild(i);
        var u = {};
        u.fontWeight = c(q, "font-weight", "fontWeight");
        u.fontStyle = c(q, "font-style", "fontStyle");
        c(q, "font-family", "fontFamily");
        if (i.style.fontFamily ==
            "") i.style.fontFamily = "Verdana";
        c(q, "font-variant", "fontVariant");
        u.fontSize = c(q, "font-size", "fontSize");
        c(q, "padding-top", "paddingTop");
        c(q, "padding-bottom", "paddingBottom");
        c(q, "padding-left", "paddingLeft");
        c(q, "padding-right", "paddingRight");
        t = d(k, q, s);
        u.color = c(q, "color", "color");
        c(q, "background-color", "backgroundColor");
        k.properties["field type"] != "radio button" && k.properties["field type"] != "checkbox" && c(q, "background-image", "backgroundImage");
        c(q, "background-repeat", "backgroundRepeat");
        c(q,
            "border-radius", "borderRadius");
        u.textAlign = c(q, "text-align", "textAlign");
        if (k.properties["field type"] == "styled button") {
            var w = q.button.z;
            u.fontWeight = c(w, "font-weight", "fontWeight");
            u.fontStyle = c(w, "font-style", "fontStyle");
            c(w, "font-family", "fontFamily");
            c(w, "font-variant", "fontVariant");
            u.fontSize = c(w, "font-size", "fontSize");
            u.color = c(w, "color", "color");
            c(w, "background-color", "backgroundColor");
            w = k.properties["button style"];
            w = pui.widgets.buttonStyles[w];
            if (w == null) {
                w = pui.widgets.gg()[0];
                w = pui.widgets.buttonStyles[w]
            }
            if (k.properties.color !=
                null && k.properties.color != "") {
                u.color = k.properties.color;
                i.style.color = k.properties.color
            }
            if (w.editBackgroundColor != null) i.style.backgroundColor = w.editBackgroundColor
        }
        if (k.properties["field type"] == "css button") {
            w = q.button.Wm();
            var v = q.button.Ep();
            u.fontWeight = c(w, "font-weight", "fontWeight");
            u.fontStyle = c(w, "font-style", "fontStyle");
            c(w, "font-family", "fontFamily");
            c(w, "font-variant", "fontVariant");
            u.fontSize = c(w, "font-size", "fontSize");
            u.color = c(w, "color", "color");
            c(v, "background-color", "backgroundColor");
            c(v, "background-image", "backgroundImage");
            c(v, "border-radius", "borderRadius");
            u.textAlign = c(w, "text-align", "textAlign")
        }
        if (k.properties["field type"] == "css panel" || k.properties["field type"] == "layout" && k.properties.template == "css panel") {
            w = q.panel.Wm();
            v = q.panel.qG();
            u.fontWeight = c(w, "font-weight", "fontWeight");
            u.fontStyle = c(w, "font-style", "fontStyle");
            c(w, "font-family", "fontFamily");
            c(w, "font-variant", "fontVariant");
            u.fontSize = c(w, "font-size", "fontSize");
            u.color = c(w, "color", "color");
            c(v, "background-color",
                "backgroundColor");
            c(v, "background-image", "backgroundImage");
            c(v, "border-radius", "borderRadius");
            u.textAlign = c(w, "text-align", "textAlign")
        }
        if (k.properties["field type"] == "panel") {
            w = q.panel.z;
            u.fontWeight = c(w, "font-weight", "fontWeight");
            u.fontStyle = c(w, "font-style", "fontStyle");
            c(w, "font-family", "fontFamily");
            c(w, "font-variant", "fontVariant");
            u.fontSize = c(w, "font-size", "fontSize");
            u.color = c(w, "color", "color");
            c(w, "background-color", "backgroundColor");
            u.textAlign = c(w, "text-align", "textAlign");
            w = k.properties["panel style"];
            w = pui.widgets.panelStyles[w];
            if (w == null) {
                w = pui.widgets.Rk()[0];
                w = pui.widgets.panelStyles[w]
            }
            if (k.properties.color != null && k.properties.color != "") {
                u.color = k.properties.color;
                i.style.color = k.properties.color
            }
            if (w.textBackground != null) i.style.backgroundColor = w.textBackground;
            if (w.textTopPadding != null) i.style.paddingTop = w.textTopPadding
        }
        c(q, "border-width", "borderWidth");
        c(q, "vertical-align", "verticalAlign");
        c(q, "left", "left");
        c(q, "top", "top");
        if (i.style.top == "auto" || pui.da(i.style.top)) i.style.top = q.offsetTop +
            "px";
        if (i.style.left == "auto" || pui.da(i.style.left)) i.style.left = q.offsetLeft + "px";
        if (s == "tab") {
            w = k.dom.tabPanel;
            if (w != null) {
                w = pui.widgets.tabStyles[w.Df];
                if (w != null && w.leftWidth != null) i.style.left = parseInt(i.style.left) - w.leftWidth + "px"
            }
        }
        if (s == "menu") {
            w = parseInt(k.properties["menu option padding"]);
            if (isNaN(w) || w <= 0) w = 5;
            v = parseInt(k.properties["font size"]);
            if (isNaN(v) || v <= 0) v = 12;
            for (var E = k.dom.offsetTop, y = 0, F = q.parentNode; F.previousSibling != null;) {
                y++;
                F = F.previousSibling
            }
            E += (w * 2 + v + 2 + 2) * y;
            i.style.top =
                E + "px";
            i.style.left = k.dom.offsetLeft + "px"
        }
        if (i.style.backgroundColor == "transparent" || i.style.backgroundColor == "rgba(0, 0, 0, 0)") i.style.backgroundColor = "#ffffff";
        if (i.style.color == i.style.backgroundColor) i.style.color = "#000000";
        i.style.borderColor = "#cccccc";
        i.style.borderStyle = "groove";
        if (s == null && q.tagName == "DIV") i.style.borderWidth = "2px";
        if (s == "grid") {
            i.style.borderWidth = "3px";
            if (pui.is_firefox) i.style.borderTopWidth = "2px"
        } else i.style.borderTopWidth = "";
        if (s == "tab") i.style.borderWidth = "1px";
        i.select();
        i.focus();
        h = false;
        if (s != "menu") {
            u.color = pui.wn(u.color);
            l = e(k, q, s, u);
            k = i.style.left.indexOf("calc") != -1 ? parseInt(i.offsetLeft) : parseInt(i.style.left);
            if (s == "grid") k += i.parentNode.style.left == "auto" || pui.da(i.parentNode.style.left) ? i.parentNode.offsetLeft : parseInt(i.parentNode.style.left);
            if (s == "tab") k += i.parentNode.parentNode.parentNode.style.left == "auto" || pui.da(i.parentNode.parentNode.parentNode.style.left) ? i.parentNode.parentNode.parentNode.offsetLeft : parseInt(i.parentNode.parentNode.parentNode.style.left);
            if (i.parentNode.parentNode.grid != null) {
                k += parseInt(i.parentNode.parentNode.style.left);
                k += parseInt(i.parentNode.style.left)
            }
            k += r.designer.li() - (l.getWidth() - t.width) / 2 + 5;
            if (k < 0) k = 0;
            t = i.style.top.indexOf("calc") != -1 ? parseInt(i.offsetTop) : parseInt(i.style.top);
            if (s == "grid") t += i.parentNode.style.top == "auto" || pui.da(i.parentNode.style.top) ? i.parentNode.offsetTop : parseInt(i.parentNode.style.top);
            if (s == "tab") t += i.parentNode.parentNode.parentNode.style.top == "auto" || pui.da(i.parentNode.parentNode.parentNode.style.top) ?
                i.parentNode.parentNode.parentNode.offsetTop : parseInt(i.parentNode.parentNode.parentNode.style.top);
            if (i.parentNode.parentNode.grid != null) {
                t += parseInt(i.parentNode.parentNode.style.top);
                t += parseInt(i.parentNode.style.top)
            }
            s = i.parentNode;
            if (s.grid != null) s = s.parentNode; else if (s.parentNode != null && s.parentNode.grid != null) s = s.parentNode.parentNode;
            if (s.getAttribute != null && s.getAttribute("container") == "true") {
                s = pui.layout.ec(s);
                k += s.x;
                t += s.y
            }
            if (Q == "genie") {
                q = q.parentNode;
                if (q != null && q.id != null && q.id.substr(0,
                    6) == "window") {
                    k += parseInt(q.style.left);
                    t += parseInt(q.style.top)
                }
            }
            t = t - 40 + r.designer.yj();
            if (t < 0) t = 0;
            l.setPosition(k, t)
        }
    };
    this.hide = function () {
        if (!h) {
            if (i != null && i.parentNode != null) {
                try {
                    i.parentNode.removeChild(i)
                } catch (k) {
                }
                if (Q == "genie" && typeof document.body.style.MozUserSelect != "undefined") document.body.style.MozUserSelect = "none"
            }
            if (l != null) {
                l.destroy();
                l = null
            }
        }
    };
    this.update = function () {
        if (!(i == null || i.parentNode == null)) {
            r.hide();
            if (i != null && r.Oj != null && g != i.value) {
                r.Oj(i.value);
                i = null
            }
        }
    }
};
pui.designer.pw = function (b) {
    this.va = {};
    this.dom = null;
    this.designer = b;
    this.properties = {};
    this.Qn = {};
    this.m = {};
    this.originalValue = "";
    this.label = this.ob = this.fb = null;
    this.OA = this.Qx = this.moved = false;
    var a = this;
    this.Pc = function () {
        var c = pui.widgets[a.properties["field type"]], d = c.Bq, e = c.Qu, f = c.gz || "input";
        if (a.dom && a.dom["icon1 class"]) f = a.dom["icon1 class"];
        var h = c.cH || "input";
        if (a.dom && a.dom["icon2 class"]) h = a.dom["icon2 class"];
        c = c.bq;
        if (e == "") {
            if (a.ob != null) {
                a.ob.parentNode.removeChild(a.ob);
                a.ob =
                    null;
                a.dom.style.boxSizing = "";
                a.dom.style.MozBoxSizing = "";
                a.dom.style.WebkitBoxSizing = ""
            }
        } else {
            if (a.ob == null) {
                a.ob = document.createElement("img");
                a.ob.style.position = "absolute";
                a.ob.className = h;
                a.ob.style.borderStyle = "none";
                a.ob.style.backgroundColor = "transparent";
                a.dom.parentNode.appendChild(a.ob);
                a.ob.src = e
            }
            a.dom.style.boxSizing = "border-box";
            a.dom.style.MozBoxSizing = "border-box";
            a.dom.style.WebkitBoxSizing = "border-box";
            var g;
            g = a.dom.style.left;
            g = g != null && typeof g == "string" && g.length >= 3 && g.substr(g.length -
                2, 2) == "px" ? parseInt(g) : a.dom.offsetLeft;
            if (isNaN(g)) g = 0;
            h = a.dom.style.top;
            h = h != null && typeof h == "string" && h.length >= 3 && h.substr(h.length - 2, 2) == "px" ? parseInt(h) : a.dom.offsetTop;
            if (isNaN(h)) h = 0;
            a.ob.style.left = g + a.dom.offsetWidth - 15 + "px";
            h += 9;
            h += parseInt((a.dom.offsetHeight - 18) / 2);
            if (a.dom.offsetHeight % 2 == 1) if (a.dom.offsetHeight < 18) h -= 1; else h += 1;
            a.ob.style.top = h + "px";
            a.ob.style.zIndex = a.dom.style.zIndex;
            a.ob.style.visibility = a.dom.style.visibility;
            a.ob.style.filter = a.dom.style.filter;
            a.ob.style.opacity =
                a.dom.style.opacity
        }
        if (d == "") {
            if (a.fb != null) {
                a.fb.parentNode.removeChild(a.fb);
                a.fb = null
            }
        } else {
            if (a.fb == null) {
                a.fb = document.createElement("img");
                a.fb.style.position = "absolute";
                a.fb.className = f;
                a.fb.style.borderStyle = "none";
                a.fb.style.backgroundColor = "transparent";
                a.dom.parentNode.appendChild(a.fb)
            }
            if (a.fb.src != d) a.fb.src = d;
            g = a.dom.style.left;
            g = g != null && typeof g == "string" && g.length >= 3 && g.substr(g.length - 2, 2) == "px" ? parseInt(g) : a.dom.offsetLeft;
            if (isNaN(g)) g = 0;
            h = a.dom.style.top;
            h = h != null && typeof h ==
            "string" && h.length >= 3 && h.substr(h.length - 2, 2) == "px" ? parseInt(h) : a.dom.offsetTop;
            if (isNaN(h)) h = 0;
            a.fb.style.left = e == "" ? g + a.dom.offsetWidth + 6 + "px" : g + a.dom.offsetWidth - 15 + "px";
            h += parseInt((a.dom.offsetHeight - 18) / 2);
            if (pui.is_quirksmode) h -= 1;
            a.fb.style.top = h + "px";
            a.fb.style.zIndex = a.dom.style.zIndex;
            a.fb.style.visibility = a.dom.style.visibility;
            a.fb.style.filter = a.dom.style.filter;
            a.fb.style.opacity = a.dom.style.opacity
        }
        if (c == "" || !a.properties[c]) {
            if (a.label != null) {
                a.label.parentNode.removeChild(a.label);
                a.label = null
            }
        } else {
            if (a.label == null) {
                a.label = document.createElement("div");
                a.label.style.position = "absolute";
                a.label.style.borderStyle = "none";
                a.label.style.backgroundColor = "transparent";
                a.dom.parentNode.appendChild(a.label);
                a.designer.vs(a.label, a);
                h = a.BG();
                h != null && h.DE(a.label)
            }
            h = pui.f(a.properties[c]) ? "[" + a.properties[c].fieldName + "]" : pui.Ia(a.properties[c]) ? a.properties[c].designValue : hc(a.properties[c], "", a.dom);
            a.label.innerHTML = '<label for="' + a.dom.id + '">' + h + "</label>";
            a.label.style.zIndex =
                a.dom.currentStyle ? a.dom.currentStyle.zIndex : window.getComputedStyle ? document.defaultView.getComputedStyle(a.dom, null).getPropertyValue("z-index") : 20;
            var l = a.dom.offsetWidth;
            if (l < 20) l = 20;
            a.dom.Hi = null;
            if (pui.da(a.dom.style.left) || pui.da(a.dom.style.top) || pui.da(a.dom.style.bottom) || pui.da(a.dom.style.right)) {
                g = a.dom.offsetLeft;
                h = a.dom.offsetTop;
                if (a.dom.parentNode.getAttribute("container") == "true") a.dom.Hi = function () {
                    a.label.style.left = a.dom.offsetLeft + l + "px";
                    a.label.style.top = a.dom.offsetTop + "px"
                }
            } else {
                g =
                    parseInt(a.dom.style.left);
                h = parseInt(a.dom.style.top);
                if (isNaN(g)) g = 0;
                if (isNaN(h)) h = 0
            }
            if (a.dom.style.left.indexOf("calc") != -1) {
                d = Zb(a.dom.style.left);
                e = d.lastIndexOf(")");
                if (e != -1) {
                    d = d.substr(0, e);
                    d += " + " + l + "px";
                    a.label.style.left = d
                }
            } else a.label.style.left = g + l + "px";
            a.label.style.top = a.dom.style.top.indexOf("calc") != -1 ? a.dom.style.top : h + "px";
            a.label.style.zIndex = a.dom.style.zIndex;
            a.label.style.visibility = a.dom.style.visibility;
            a.label.style.filter = a.dom.style.filter;
            a.label.style.opacity = a.dom.style.opacity;
            a.label.style.color = a.dom.style.color;
            a.label.style.fontFamily = a.dom.style.fontFamily;
            a.label.style.fontSize = a.dom.style.fontSize;
            a.label.style.fontStyle = a.dom.style.fontStyle;
            a.label.style.fontWeight = a.dom.style.fontWeight;
            a.label.style.backgroundColor = a.dom.style.backgroundColor;
            a.label.className = "label-for";
            h = Zb(a.dom.className.split(" ")[0]);
            h != "" && pui.ya(a.label, "label-for-" + h)
        }
    };
    this.RI = function () {
        if (a.fb != null) {
            a.fb.parentNode.removeChild(a.fb);
            a.fb = null
        }
        if (a.ob != null) {
            a.ob.parentNode.removeChild(a.ob);
            a.ob = null
        }
        if (a.label != null) {
            a.label.parentNode.removeChild(a.label);
            a.label = null
        }
    };
    this.Zu = function () {
        a.RI();
        a.Pc()
    };
    this.Ib = function () {
        var c = a.dom.parentNode, d = c.parentNode.grid;
        d != null && d.Ib(c.col)
    };
    this.de = function () {
        var c = a.dom.parentNode;
        if (c == null || c.parentNode == null) return false;
        c = c.parentNode.grid;
        if (c == null) return false;
        if (typeof c == "undefined") return false;
        return true
    };
    this.xe = function () {
        var c = a.dom.parentNode;
        if (c != null && c.getAttribute != null && c.getAttribute("container") == "true") return true;
        return false
    };
    this.bb = function () {
        var c = a.dom.parentNode;
        if (c == null || c.parentNode == null) return null;
        return c.parentNode.grid
    };
    this.qf = function () {
        var c = a.dom.parentNode;
        if (c.getAttribute("container") != "true") return null;
        for (; c != null && c.layout == null;) {
            c = c.parentNode;
            if (c.layout != null) return c.layout
        }
        return null
    };
    this.Rm = function () {
        function c(f) {
            f = f.parentNode;
            if (f.getAttribute("container") != "true") return null;
            for (; f != null && f.layout == null;) {
                f = f.parentNode;
                if (f.layout != null) return f
            }
            return null
        }

        var d =
            a.dom, e = 0;
        for (d = c(d); d != null;) {
            e += 1;
            d = c(d)
        }
        return e
    };
    this.Ap = function () {
        var c = a.dom.parentNode;
        if (c.getAttribute("container") != "true") return 0;
        return c.gF
    };
    this.Si = function () {
        var c = a.dom.style.left;
        a.va.left = c != null && c != "" && c.length >= 3 && c.substr(c.length - 2) == "px" ? parseInt(c) : a.dom.offsetLeft;
        a.va.right = null;
        if (a.m.left != true && a.m.right == true) {
            c = a.dom.style.right;
            if (c != null && c != "" && c.length >= 3 && c.substr(c.length - 2) == "px") a.va.right = parseInt(c); else if (pui.da(c)) if (a.dom.offsetParent != null && a.dom.offsetParent.offsetWidth !=
                0) a.va.right = a.dom.offsetParent.offsetWidth - a.dom.offsetLeft - a.dom.offsetWidth
        }
        c = a.dom.style.top;
        a.va.top = c != null && c != "" && c.length >= 3 && c.substr(c.length - 2) == "px" ? parseInt(c) : a.dom.offsetTop;
        a.va.bottom = null;
        if (a.m.top != true && a.m.bottom == true) {
            c = a.dom.style.bottom;
            if (c != null && c != "" && c.length >= 3 && c.substr(c.length - 2) == "px") a.va.bottom = parseInt(c); else if (pui.da(c)) if (a.dom.offsetParent != null && a.dom.offsetParent.offsetHeight != 0) a.va.bottom = a.dom.offsetParent.offsetHeight - a.dom.offsetTop - a.dom.offsetHeight
        }
        c =
            false;
        if (a.dom.tagName == "DIV") c = true;
        if (pui.is_quirksmode) c = false;
        var d = a.dom.style.width, e = a.dom.style.height;
        if (typeof d == "string" && d != "" && !isNaN(d)) d += "px";
        a.va.width = d != null && d != "" && d.length >= 3 && d.substr(d.length - 2) == "px" ? parseInt(d) : c ? a.dom.clientWidth : a.dom.offsetWidth;
        if (typeof e == "string" && e != "" && !isNaN(e)) e += "px";
        a.va.height = e != null && e != "" && e.length >= 3 && e.substr(e.length - 2) == "px" ? parseInt(e) : c ? a.dom.clientHeight : a.dom.offsetHeight
    };
    this.Cj = function (c) {
        if (a.dom.style.display == "none") return false;
        var d = c.offsetLeft, e = c.offsetTop;
        if (Q == "dspf" && pui.designer.fa != null) {
            var f = a.designer.b;
            d = d - f.parentNode.offsetLeft - f.offsetLeft + f.scrollLeft - 4;
            e = e - f.parentNode.offsetTop - f.offsetTop + f.scrollTop - 4
        }
        f = d + c.offsetWidth;
        c = e + c.offsetHeight;
        var h = a.dom.offsetLeft, g = a.dom.offsetTop;
        if (a.dom.parentNode && a.dom.parentNode.id.substr(0, 6) == "window") {
            h += a.dom.parentNode.offsetLeft + parseInt(Ic(a.dom.parentNode, "border left width"));
            g += a.dom.parentNode.offsetTop + parseInt(Ic(a.dom.parentNode, "border top width"))
        }
        if (a.dom.parentNode.getAttribute("container") ==
            "true") {
            var l = pui.layout.ec(a.dom.parentNode);
            h += l.x;
            g += l.y
        }
        l = h + a.dom.offsetWidth;
        if (a.label != null) l += a.label.offsetWidth + 6;
        var n = g + a.dom.offsetHeight;
        return !(d > l || f < h || e > n || c < g)
    };
    this.uz = function (c) {
        if (Q != "genie") if (c.parentNode != a.dom.parentNode) return false;
        var d = c.offsetLeft, e = c.offsetTop, f = d + c.offsetWidth;
        c = e + c.offsetHeight;
        var h = a.dom.offsetLeft, g = a.dom.offsetTop, l = h + a.dom.offsetWidth, n = g + a.dom.offsetHeight;
        return h > d && l < f && g > e && n < c
    };
    this.nK = function (c) {
        var d = c.offsetLeft, e = c.offsetTop;
        if (a.dom.parentNode.getAttribute("container") ==
            "true") {
            var f = pui.layout.ec(a.dom.parentNode);
            d += f.x;
            e += f.y
        }
        f = d + c.offsetWidth;
        c = e + c.offsetHeight;
        var h = a.dom.offsetLeft, g = a.dom.offsetTop, l = h + a.dom.offsetWidth, n = g + a.dom.offsetHeight;
        return d > h && f < l && e > g && c < n
    };
    this.isSelected = function () {
        if (a.designer == null) return false;
        for (var c = a.designer.selection.e, d = 0; d < c.length; d++) if (c[d].c == a) return true;
        return false
    };
    this.BG = function () {
        for (var c = a.designer.selection.e, d = 0; d < c.length; d++) if (c[d].c == a) return c[d];
        return null
    };
    this.Bf = function (c) {
        for (var d = c.replace(/ /g,
            "-"), e = "", f = false, h = 0; h < c.length; h++) {
            var g = c.substr(h, 1);
            if (f) {
                g = g.toUpperCase();
                f = false
            }
            if (g == " ") f = true; else e += g
        }
        f = "";
        if (a.dom.currentStyle) f = a.dom.currentStyle[e]; else if (window.getComputedStyle) f = document.defaultView.getComputedStyle(a.dom, null).getPropertyValue(d);
        if (c.indexOf("color") >= 0) f = pui.wn(f);
        a.properties[c] = f
    };
    this.destroy = function () {
        var c = a.dom.parentNode, d = c.parentNode.grid;
        a.dom.destroy != null && a.dom.destroy();
        a.dom.parentNode.removeChild(a.dom);
        a.dom = null;
        if (a.fb != null) {
            a.fb.parentNode.removeChild(a.fb);
            a.fb = null
        }
        if (a.ob != null) {
            a.ob.parentNode.removeChild(a.ob);
            a.ob = null
        }
        if (a.label != null) {
            a.label.parentNode.removeChild(a.label);
            a.label = null
        }
        a.va = null;
        a.designer = null;
        a.properties = null;
        a.Qn = null;
        a = a.m = null;
        d != null && d.Ib(c.col)
    }
};
pui.designer.eD = function (b) {
    this.h = document.createElement("div");
    this.designer = b;
    this.Ek = false;
    this.h.style.position = "absolute";
    this.h.style.fontSize = "0px";
    if (pui.is_old_ie && pui.ie_mode <= 6) this.h.style.border = "2px dashed #999999"; else {
        this.h.style.border = "2px dashed #000000";
        this.h.style.backgroundColor = "#cccccc";
        this.h.style.filter = "alpha(opacity=20)";
        this.h.style.opacity = 0.2
    }
    this.h.style.visibility = "hidden";
    this.h.style.display = "none";
    this.h.style.zIndex = S.ZK;
    Q == "genie" ? b.b.appendChild(this.h) :
        Tb(Ha).appendChild(this.h);
    document.body.onselectstart = function (c) {
        c = S.getTarget(c);
        var d = c.tagName;
        if (d != "INPUT" && d != "TEXTAREA" && d == "DIV" && c.className.indexOf("pui-designer-text-selectable") === -1) return false
    };
    if (Q == "genie") if (typeof document.body.style.MozUserSelect != "undefined") document.body.style.MozUserSelect = "none";
    var a = this;
    S.W(document, "keydown", function (c) {
        if (!(a == null || a.designer == null || !a.designer.active || a.designer.b.style.display == "none")) if (!a.designer.disabled) {
            var d = c.keyCode, e = S.getTarget(c);
            if (d == 17) a.Ek = true;
            var f = false, h = a.designer.k;
            h.Ad.isHidden() || (f = true);
            h.jd.isHidden() || (f = true);
            h.Bh.isHidden() || (f = true);
            h.lg.isHidden() || (f = true);
            h.Cd.isHidden() || (f = true);
            h.Ij.isHidden() || (f = true);
            if (h.za != null) h.za.isHidden() || (f = true);
            if (h.Ca != null) h.Ca.isHidden() || (f = true);
            if (pui.Be != null) pui.Be.isHidden() || (f = true);
            if (pui.Fe != null) pui.Fe.isHidden() || (f = true);
            if (h.Ih != null) h.Ih.isHidden() || (f = true);
            h.dg.isHidden() || (f = true);
            if (Q == "dspf" && Ext.MessageBox.isVisible()) f = true;
            if (Q == "dspf" && (Ext.getCmp("newFileWindow") &&
                Ext.getCmp("newFileWindow").isVisible() || Ext.getCmp("filePropertiesWindow") && Ext.getCmp("filePropertiesWindow").isVisible())) f = true;
            if (e.className != "propertyInput" && !f) {
                if (d == 37) {
                    a.designer.selection.qq(-1, 0);
                    S.ua(c);
                    a.designer.k.ea("left");
                    a.designer.k.ea("right")
                }
                if (d == 38) {
                    a.designer.selection.qq(0, -1);
                    S.ua(c);
                    a.designer.k.ea("top");
                    a.designer.k.ea("bottom")
                }
                if (d == 39) {
                    a.designer.selection.qq(1, 0);
                    S.ua(c);
                    a.designer.k.ea("left");
                    a.designer.k.ea("right")
                }
                if (d == 40) {
                    a.designer.selection.qq(0, 1);
                    S.ua(c);
                    a.designer.k.ea("top");
                    a.designer.k.ea("bottom")
                }
                if (d == 46) for (h = 0; h < a.designer.selection.e.length; h++) if (a.designer.selection.e[h].c.properties["field type"] == "grid") if (Q == "genie") {
                    if (confirm(pui.getLanguageText("runtimeMsg", "subfile deletion")) == true) {
                        a.designer.n.Nc("Remove " + a.designer.selection.ve(), a.designer);
                        a.designer.yf()
                    }
                } else Ext.MessageBox.show({
                    title: "Delete Grid",
                    msg: "Are you sure you want to delete the grid?",
                    model: true,
                    icon: Ext.MessageBox.WARNING,
                    buttons: {yes: "Ok", no: "Cancel"},
                    fn: function (l) {
                        if (l ==
                            "yes") {
                            a.designer.n.Nc("Remove " + a.designer.selection.ve(), a.designer);
                            a.designer.yf()
                        }
                    }
                }); else {
                    a.designer.n.Nc("Remove " + a.designer.selection.ve(), a.designer);
                    a.designer.yf();
                    S.ua(c)
                }
                if (d == 67 && a.sf(c)) {
                    a.designer.zm();
                    S.ua(c)
                }
                if (d == 86 && a.sf(c)) {
                    h = R.Uc;
                    if (pui.nc()) {
                        var g = localStorage.getItem("pui-designer-clipboard");
                        if (g) h = JSON.parse(g)
                    }
                    a.designer.bi(h);
                    S.ua(c)
                }
                if (d == 88 && a.sf(c)) {
                    a.designer.zm();
                    a.designer.n.Nc("Cut " + a.designer.selection.ve(), a.designer);
                    a.designer.yf();
                    S.ua(c)
                }
                if (d == 89 && a.sf(c)) {
                    a.designer.n.Hq();
                    S.ua(c)
                }
                if (d == 90 && a.sf(c)) {
                    a.designer.n.n();
                    S.ua(c)
                }
            }
            if (!f) if (d == 83 && a.sf(c)) {
                S.ua(c);
                if (Q === "dspf") {
                    if (e.className == "propertyInput") {
                        e.blur();
                        e.focus()
                    }
                    setTimeout(function () {
                        if (rd.validate()) pui.designer.currentDisplay.member == null && pui.designer.currentDisplay.ifsFile == null && pui.designer.currentDisplay.Eb == null ? pui.ide.K.Mi() : R.Zq({
                            onsuccess: function () {
                                rd.Ce();
                                pui.ide.Qb()
                            }
                        })
                    }, 1)
                } else Q == "genie" && R.Zy()
            }
        }
    });
    S.W(document, "keyup", function (c) {
        if (!(a == null || a.designer == null || !a.designer.active || a.designer.b.style.display ==
            "none" || pui.tu)) {
            c = c.keyCode;
            if (c == 17 || c == 0 || c == null || isNaN(c)) a.Ek = false
        }
    });
    S.W(document, "mousedown", function (c) {
        function d(r) {
            var k = S.getY(r) - l - o, q = S.getX(r) - g - n;
            if (Q == "dspf" && pui.designer.fa != null) {
                var s = a.designer.b;
                q += s.parentNode.offsetLeft + s.offsetLeft - s.scrollLeft + 4;
                k += s.parentNode.offsetTop + s.offsetTop - s.scrollTop + 4
            }
            s = n;
            var t = o;
            if (k < 0) {
                k = -k;
                t -= k
            }
            if (q < 0) {
                q = -q;
                s -= q
            }
            a.h.style.height = k + "px";
            a.h.style.width = q + "px";
            a.h.style.top = t + "px";
            a.h.style.left = s + "px";
            S.ua(r)
        }

        function e() {
            S.wd(document, "mousemove",
                d);
            S.wd(document, "mouseup", e);
            a.designer.selection.bf = true;
            a.designer.selection.clear();
            for (var r = 0; r < a.designer.items.length; r++) {
                var k = a.designer.items[r];
                if (k.tn != false) if (!k.de() && k.dom.style.visibility != "hidden" && k.Cj(a.h) && (k.properties["field type"] != "panel" && k.properties["field type"] != "css panel" && k.properties["field type"] != "field set panel" && k.properties["field type"] != "tab panel" || !k.nK(a.h))) a.designer.selection.add(k)
            }
            a.h.style.visibility = "hidden";
            a.h.style.display = "none";
            a.designer.selection.bf =
                false;
            Q == "dspf" && pui.ide.refreshRibbon();
            a.designer.k.refresh()
        }

        if (!(a == null || a.designer == null || !a.designer.active || a.designer.b.style.display == "none" || pui.tu || a.designer.disabled == true)) if (!(Q == "genie" && showAsWindowFlag)) {
            var f = S.getTarget(c);
            if (f.tagName != "BODY" && f.tagName != "HTML" && f != a.h && f != a.designer.b && f != a.designer.b.parentNode && f != a.designer.b.parentNode.parentNode) {
                if (f.gn) return;
                f = f;
                for (var h = false; f != null;) {
                    if (f == a.designer.b || f.className == "mainDiv") {
                        h = true;
                        break
                    }
                    f = f.parentNode
                }
                if (!h) return
            }
            if (!pui.Ae(c)) {
                f =
                    S.getX(c);
                h = S.getY(c);
                var g = a.designer.li(), l = a.designer.yj(), n = f - g, o = h - l, i = 0;
                if (Q == "dspf") {
                    i = Kd.get("eastPanelWidth", "") == "" ? 290 : Kd.get("eastPanelWidth", "");
                    i = Number(i);
                    if (isNaN(i)) i = 0
                }
                if (Q == "dspf" && pui.designer.fa != null) {
                    i = a.designer.b;
                    if (i.scrollHeight > i.clientHeight && n - i.scrollLeft > i.clientWidth) return;
                    if (i.scrollWidth > i.clientWidth && o - i.scrollTop > i.clientHeight) return;
                    f += i.parentNode.offsetLeft + i.offsetLeft - i.scrollLeft + 4;
                    h += i.parentNode.offsetTop + i.offsetTop - i.scrollTop + 4;
                    n = f - g;
                    o = h - l
                } else {
                    if (f >
                        document.body.offsetWidth - 25 - i) return;
                    if (window.innerHeight) {
                        if (h > window.innerHeight - 25) return
                    } else if (h > document.body.offsetHeight - 25) return
                }
                a.designer.k.rs();
                a.h.style.visibility = "visible";
                a.h.style.display = "";
                a.h.style.left = n + "px";
                a.h.style.top = o + "px";
                a.h.style.height = "0px";
                a.h.style.width = "0px";
                S.W(document, "mousemove", d);
                S.W(document, "mouseup", e);
                S.ua(c)
            }
        }
    });
    S.W(document, "mouseup", function (c) {
        if (!(a == null || a.designer == null || !a.designer.active || a.designer.b.style.display == "none" || pui.tu)) {
            var d =
                S.getTarget(c);
            if (d.tagName != "BODY" && d.tagName != "HTML" && d != a.h && d != a.designer.b && d != a.designer.b.parentNode && d != a.designer.b.parentNode.parentNode) {
                if (d.getAttribute == null) return;
                if (d.id != null && d.id != "" || d.getAttribute("rowcol") == null && d.getAttribute("stripeid") == null && d.getAttribute("backgroundid") == null) return
            }
            if (pui.Ae(c)) {
                a.designer.Nb.clickEvent = c;
                d = [];
                var e = [];
                if (a.designer.n.Zo()) {
                    d.push("Undo " + a.designer.n.Vk());
                    e.push("undo")
                }
                if (a.designer.n.Yo()) {
                    d.push("Redo " + a.designer.n.My());
                    e.push("redo")
                }
                if (R.Uc.length >
                    0 && R.Uc[0].containerType !== "grid" && R.Uc[0].containerType !== "layout") {
                    d.push("Paste");
                    e.push("paste")
                }
                if (Q == "genie") {
                    d.push("Enable Empty Elements");
                    e.push("enable_elements")
                }
                d.push("Toggle Snap to Grid");
                e.push("snap_to_grid");
                if (Q == "genie") {
                    d.push("Save and Exit Design");
                    e.push("save_exit");
                    d.push("Exit Design");
                    e.push("exit")
                }
                a.designer.Nb.Hd = d;
                a.designer.Nb.Jj = e;
                a.designer.Nb.Yu();
                a.designer.Nb.show();
                S.ua(c)
            }
        }
    });
    this.destroy = function () {
        a.h.parentNode.removeChild(a.h);
        a.h = null;
        a = a.designer = null
    };
    this.sf = function (c) {
        if (c != null) if (c.ctrlKey === true || c.ctrlKey === false) return c.ctrlKey;
        return a.Ek
    }
};
pui.designer.as = function () {
    this.e = [];
    this.bf = this.fc = false;
    var b = this;
    this.ve = function () {
        var a = "Selection";
        if (b.e.length == 1) {
            var c = b.e[0].c.properties["field type"];
            a = pui.widgets[c].menuName;
            if (typeof a != "string") {
                c = c.split(" ");
                a = "";
                for (var d = 0; d < c.length; d++) {
                    var e = c[d];
                    e = e.charAt(0).toUpperCase() + e.substr(1);
                    if (a != "") a += " ";
                    a += e
                }
            }
            a = a
        }
        return a
    };
    this.Si = function () {
        for (var a = 0; a < b.e.length; a++) b.e[a].c.Si()
    };
    this.moveBy = function (a, c, d) {
        if (a != null && b.fc) {
            var e = a.va.left + c, f = a.va.top + d;
            if (a.va.right !=
                null) e = a.va.right - c;
            if (a.va.bottom != null) f = a.va.bottom - d;
            var h = b.mb(e, pui.ac) - e;
            f = b.mb(f, pui.Ob, Q == "genie" ? 3 : 0) - f;
            if (a.va.right != null) h = -h;
            if (a.va.bottom != null) f = -f;
            c += h;
            d += f
        }
        for (h = 0; h < b.e.length; h++) {
            var g = b.e[h].c;
            f = pui.widgets[g.properties["field type"]];
            if (g.properties["locked in place"] != "true" || !f.b) {
                var l = g.dom.grid == null && g.va.right != null, n = g.dom.grid == null && g.va.bottom != null;
                e = g.va.left + c;
                if (l) e = g.va.right - c;
                if (isNaN(e)) e = 0;
                f = g.va.top + d;
                if (n) f = g.va.bottom - d;
                if (isNaN(f)) f = 0;
                if (b.fc && a == null) {
                    e =
                        b.mb(e, pui.ac);
                    f = b.mb(f, pui.Ob, Q == "genie" ? 3 : 0)
                }
                var o = "px", i = "px";
                if (l && pui.da(g.properties.right) || !l && pui.da(g.properties.left)) if (g.dom.offsetParent != null && g.dom.offsetParent.offsetWidth != 0) {
                    o = "%";
                    e = pui.round(100 * e / g.dom.offsetParent.offsetWidth, 1)
                }
                if (n && pui.da(g.properties.bottom) || !n && pui.da(g.properties.top)) if (g.dom.offsetParent != null && g.dom.offsetParent.offsetHeight != 0) {
                    i = "%";
                    f = pui.round(100 * f / g.dom.offsetParent.offsetHeight, 1)
                }
                if (g.dom.grid && g.dom.grid.setProperty) {
                    g.dom.grid.setProperty("left",
                        e + o);
                    g.dom.grid.setProperty("top", f + i)
                } else {
                    if (l) g.dom.style.right = e + o; else {
                        g.dom.style.right = "";
                        g.dom.style.left = e + o
                    }
                    if (n) g.dom.style.bottom = f + i; else {
                        g.dom.style.bottom = "";
                        g.dom.style.top = f + i
                    }
                }
                g.moved = true;
                if (l) {
                    if (pui.f(g.properties.right)) g.properties.right.designValue = g.dom.style.right; else g.properties.right = g.dom.style.right;
                    g.m.right = true
                } else {
                    if (pui.f(g.properties.left)) g.properties.left.designValue = g.dom.style.left; else g.properties.left = g.dom.style.left;
                    g.m.left = true;
                    if (!pui.f(g.properties.right)) {
                        g.properties.right =
                            "";
                        g.m.right = false
                    }
                }
                if (n) {
                    if (pui.f(g.properties.bottom)) g.properties.bottom.designValue = g.dom.style.bottom; else g.properties.bottom = g.dom.style.bottom;
                    g.m.bottom = true
                } else {
                    if (pui.f(g.properties.top)) g.properties.top.designValue = g.dom.style.top; else g.properties.top = g.dom.style.top;
                    g.m.top = true;
                    if (!pui.f(g.properties.bottom)) {
                        g.properties.bottom = "";
                        g.m.bottom = false
                    }
                }
                g.ta = true;
                g.designer.X[g.designer.i.l] = true;
                b.e[h].$x || b.e[h].Fb();
                g.Pc();
                g.Ib()
            }
        }
    };
    this.qq = function (a, c) {
        for (var d = [], e = b.e.length - 1; e >=
        0; e -= 1) if (b.e[e].c.properties["locked in place"] == "true") {
            d.push(b.e[e]);
            b.e.splice(e, 1)
        }
        if (b.e.length > 0) {
            b.e[0].c.designer.n.start("Nudge");
            b.Qh(["top", "bottom", "left", "right"])
        }
        if (b.fc && Math.abs(a) <= 1 && Math.abs(c) <= 1) {
            a *= pui.ac;
            c *= pui.Ob
        }
        b.Si();
        e = b.Mt();
        e != null && e.Si();
        b.moveBy(null, a, c);
        e != null && e.moveBy(e.Es, a, c);
        for (e = 0; e < d.length; e++) b.e.push(d[e])
    };
    this.fK = function (a, c, d, e) {
        function f(n, o) {
            var i = n.va.left, r = n.va.top, k = n.va.right, q = n.va.bottom, s = n.va.width, t = n.va.height,
                u = e == "ne" || e == "nw" ||
                    e == "n", w = e == "se" || e == "sw" || e == "s", v = e == "sw" || e == "nw" || e == "w",
                E = e == "se" || e == "ne" || e == "e";
            if (w) {
                t += d;
                if (q != null) q -= d;
                if (t < h) {
                    if (q != null) q += t - h;
                    t = h
                }
            }
            if (u) {
                r += d;
                t -= d;
                if (t < h) {
                    r += t - h;
                    t = h
                }
            }
            if (E) {
                s += c;
                if (k != null) k -= c;
                if (s < g) {
                    if (k != null) k += s - g;
                    s = g
                }
            }
            if (v) {
                i += c;
                s -= c;
                if (s < g) {
                    i += s - g;
                    s = g
                }
            }
            if (o) {
                var y = i, F = r, D = k, B = q, I = s, z = t;
                if (k != null) {
                    k = b.mb(k, pui.ac);
                    s -= D - k
                } else {
                    i = b.mb(i, pui.ac);
                    s += y - i
                }
                if (q != null) {
                    q = b.mb(q, pui.Ob, Q == "genie" ? 3 : 0);
                    t -= B - q
                } else {
                    r = b.mb(r, pui.Ob, Q == "genie" ? 3 : 0);
                    t += F - r
                }
                if (v && k != null || E && k == null) s = b.mb(s,
                    pui.ac);
                if (u && q != null || w && q == null) t = b.mb(t, pui.Ob);
                if (k != null) {
                    if (v) c -= s - I;
                    if (E) c -= k - D
                } else {
                    if (E) c += s - I;
                    if (v) c += i - y
                }
                if (q != null) {
                    if (u) d -= t - z;
                    if (w) d -= q - B
                } else {
                    if (w) d += t - z;
                    if (u) d += r - F
                }
            } else {
                if (b.fc && a == null) {
                    y = i;
                    F = r;
                    i = b.mb(i, pui.ac);
                    s += y - i;
                    r = b.mb(r, pui.Ob, Q == "genie" ? 3 : 0);
                    t += F - r;
                    if (E) s = b.mb(s, pui.ac);
                    if (w) t = b.mb(t, pui.Ob)
                }
                y = pui.widgets[n.properties["field type"]];
                if (y.resizable && (n.properties["locked in place"] != "true" || !y.b)) {
                    if (v) if (k == null) {
                        n.dom.style.left = n.gC ? pui.round(100 * i / n.dom.offsetParent.offsetWidth,
                            1) + "%" : i + "px";
                        if (pui.f(n.properties.left)) n.properties.left.designValue = n.dom.style.left; else n.properties.left = n.dom.style.left;
                        n.m.left = true;
                        if (!pui.f(n.properties.right)) {
                            n.dom.right = "";
                            n.properties.right = "";
                            n.m.right = false
                        }
                    }
                    if (k != null && E) {
                        n.dom.style.right = n.hC ? pui.round(100 * k / n.dom.offsetParent.offsetWidth, 1) + "%" : k + "px";
                        if (pui.f(n.properties.right)) n.properties.right.designValue = n.dom.style.right; else n.properties.right = n.dom.style.right;
                        n.m.right = true
                    }
                    if (u) if (q == null) {
                        n.dom.style.top = n.iC ? pui.round(100 *
                            r / n.dom.offsetParent.offsetHeight, 1) + "%" : r + "px";
                        if (pui.f(n.properties.top)) n.properties.top.designValue = n.dom.style.top; else n.properties.top = n.dom.style.top;
                        n.m.top = true;
                        if (!pui.f(n.properties.bottom)) {
                            n.dom.bottom = "";
                            n.properties.bottom = "";
                            n.m.rL = false
                        }
                    }
                    if (q != null && w) {
                        n.dom.style.bottom = n.eC ? pui.round(100 * q / n.dom.offsetParent.offsetHeight, 1) + "%" : q + "px";
                        if (pui.f(n.properties.bottom)) n.properties.bottom.designValue = n.dom.style.bottom; else n.properties.bottom = n.dom.style.bottom;
                        n.m.bottom = true
                    }
                    if (c !=
                        0 || n.m.width == true) if (e != "s" && e != "n") {
                        n.dom.style.width = n.jC ? pui.round(100 * s / n.dom.offsetParent.offsetWidth, 1) + "%" : s + "px";
                        if (pui.f(n.properties.width)) n.properties.width.designValue = n.dom.style.width; else n.properties.width = n.dom.style.width;
                        n.m.width = true
                    }
                    if (d != 0 || n.m.height == true) if (e != "w" && e != "e") {
                        n.dom.style.height = n.fC ? pui.round(100 * t / n.dom.offsetParent.offsetHeight, 1) + "%" : t + "px";
                        if (pui.f(n.properties.height)) n.properties.height.designValue = n.dom.style.height; else n.properties.height = n.dom.style.height;
                        n.m.height = true
                    }
                    n.dom.tabPanel != null && n.properties["field type"] == "tab panel" && n.dom.tabPanel.H();
                    n.ta = true;
                    n.designer.X[n.designer.i.l] = true;
                    n.Pc();
                    n.Ib()
                }
                b.e[l].Fb()
            }
        }

        var h = 15, g = 25;
        b.fc && a != null && f(a, true);
        for (var l = 0; l < b.e.length; l++) f(b.e[l].c, false)
    };
    this.Mt = function () {
        for (var a = null, c = 0; c < b.e.length; c++) {
            var d = b.e[c].c;
            if (d.properties["field type"] == "tab panel" && d.properties["locked in place"] != "true") {
                var e = d.properties.id;
                if (e) {
                    if (a == null) a = new pui.designer.as;
                    a.Es = d;
                    a.fc = b.fc;
                    for (var f = d.designer.items,
                             h = 0; h < f.length; h++) {
                        var g = f[h];
                        if (g.properties["parent tab panel"] == e && !g.isSelected()) {
                            var l = {};
                            l.$x = true;
                            l.c = g;
                            a.e.push(l)
                        }
                    }
                }
            }
            if (d.properties["field type"] == "field set panel" && d.properties["locked in place"] != "true") if (e = d.properties.id) {
                if (a == null) a = new pui.designer.as;
                a.Es = d;
                a.fc = b.fc;
                f = d.designer.items;
                for (h = 0; h < f.length; h++) {
                    g = f[h];
                    if (g.properties["parent field set"] == e && !g.isSelected()) {
                        l = {};
                        l.$x = true;
                        l.c = g;
                        a.e.push(l)
                    }
                }
            }
        }
        return a
    };
    this.wH = function () {
        if (b.e.length < 2) return false;
        for (var a =
            b.e[0].c.dom.parentNode, c = 1; c < b.e.length; c++) if (b.e[c].c.dom.parentNode != a) return true;
        return false
    };
    this.add = function (a) {
        var c = new pui.designer.WC(a.dom.parentNode);
        c.$w(a);
        b.e.push(c);
        if (Q == "dspf" && !pui.ja) if (a.dom.grid != null || a.dom.parentNode.parentNode.grid != null) rd.refresh();
        Q == "dspf" && !b.bf && pui.ide.refreshRibbon();
        return c
    };
    this.clear = function () {
        if (b.e.length != 0) {
            var a = b.e[0].c.designer;
            a.k.Cd && !a.k.Cd.isHidden() && a.k.Cd.hide();
            for (a = 0; a < b.e.length; a++) b.e[a].destroy();
            b.e = [];
            Q == "dspf" && rd &&
            rd.Zp() && rd.refresh();
            Q == "dspf" && !b.bf && pui.ide.refreshRibbon()
        }
    };
    this.Qh = function (a) {
        for (var c = 0; c < b.e.length; c++) for (var d = b.e[c].c, e = 0; e < a.length; e++) d.designer.n.add(d, a[e]);
        c = b.Mt();
        c != null && c.Qh(a)
    };
    this.Nw = function (a, c) {
        if (b.e.length == 0) {
            a.c = "Screen";
            var d = c.D.Tc(a, c);
            if (d != "") if (confirm(d)) {
                a.fg = true;
                c.D.Tc(a, c)
            } else return false
        } else for (var e = 0; e < b.e.length; e++) {
            d = b.e[e].c;
            a.c = d;
            d = d.designer.D.Tc(a, c);
            if (d != "") if (confirm(d)) {
                a.fg = true;
                c.D.Tc(a, c)
            } else return false
        }
        return true
    };
    this.On = function (a,
                        c, d, e) {
        var f = {};
        f.property = a;
        if (b.e.length == 0) {
            f.c = "Screen";
            f.fieldName = d;
            c.D.vh(f)
        } else for (c = 0; c < b.e.length; c++) {
            var h = b.e[c].c;
            f.c = h;
            var g = h.properties[a];
            if (pui.f(g)) {
                f.fieldName = e == true ? d : g.fieldName;
                h.designer.D.vh(f)
            }
        }
    };
    this.mb = function (a, c, d) {
        a /= c;
        a = Math.round(a);
        a *= c;
        if (d != null) a += d;
        return a
    };
    this.ne = function (a, c) {
        for (var d = 0; d < b.e.length; d++) {
            var e = b.e[d], f = e.c, h = f.properties, g = pui.widgets[h["field type"]], l = c;
            if (l == null) l = f.dom.style[a];
            var n = g.eh;
            g = g.propertySetters;
            var o = null;
            if (g != null) o =
                g[a];
            var i;
            if (o != null || n != null) i = {
                newValue: l,
                value: l,
                design: true,
                properties: h,
                dom: f.dom,
                Jd: f.dom,
                propertyName: a,
                c: f,
                pc: e
            };
            n != null && n(i);
            o != null && o(i)
        }
    };
    this.Fb = function () {
        for (var a = 0; a < b.e.length; a++) b.e[a].Fb()
    };
    this.Eq = function () {
        if (pui.is_chrome) for (var a = 0; a < b.e.length; a++) pui.Eq(b.e[a].c.dom)
    }
};
pui.designer.WC = function (b) {
    function a(e) {
        function f(I) {
            var z = S.getX(I), H = S.getY(I);
            if (Q == "dspf") if (d != null && d.c != null) {
                var J = true, K = true, L = true;
                if (F.e.length != 1) K = false;
                for (var N = 0; N < F.e.length; N++) {
                    var O = F.e[N].c;
                    if (O.dom.parentNode !== d.c.dom.parentNode) {
                        J = false;
                        break
                    }
                    O = pui.widgets[O.properties["field type"]];
                    O.oe || (K = false);
                    O.Vh || (L = false)
                }
                if (!K && !L) J = false;
                if (o && F.e.length != 1) J = false;
                J && pui.designer.Xv({
                    x: z,
                    y: H,
                    offsetX: t,
                    offsetY: u,
                    designer: l,
                    mz: o,
                    nz: n,
                    dom: d.c.dom,
                    c: d.c,
                    Hx: q,
                    Ix: s,
                    oe: K,
                    Vh: L
                })
            }
            z -=
                q;
            H -= s;
            if (Math.abs(z) > 2 || Math.abs(H) > 2) g = true;
            if (g) {
                if (z < w - q) z = w - q;
                if (H < v - s) H = v - s;
                if (E != null && z > E - q) z = E - q;
                if (y != null && H > y - s) H = y - s;
                if (d != null && d.c != null) {
                    F.moveBy(d.c, z, H);
                    B != null && B.moveBy(B.Es, z, H);
                    l.k.ea("left");
                    l.k.ea("top");
                    l.k.ea("right");
                    l.k.ea("bottom");
                    F.ne("left");
                    F.ne("top");
                    F.ne("right");
                    F.ne("bottom");
                    z = pui.designer.gf;
                    if (z.b == null) {
                        z.b = document.body;
                        z.init()
                    }
                    z.set(d.c);
                    z.show()
                }
                S.ua(I)
            } else {
                l.Aa.style.display = "none";
                l.Z.style.display = "none";
                l.dz();
                l.se = null;
                l.nd = null
            }
        }

        function h() {
            pui.designer.gf.hide();
            S.wd(document, "mousemove", f);
            S.wd(document, "mouseup", h);
            if (d != null && d.c != null) if (d.c.moved) {
                if (l.se != null || l.nd != null) {
                    l.n.Nc("Move " + l.selection.ve() + " In", l);
                    setTimeout(function () {
                        d != null && pui.designer.Wz(d.c, o, n)
                    }, 0)
                } else if (o || n) if (l.Z.style.display == "") {
                    l.n.Nc("Move " + l.selection.ve() + " Out", l);
                    setTimeout(function () {
                        pui.designer.Xz(d.c, o)
                    }, 0)
                } else l.Ff(); else l.Ff();
                Q == "dspf" && pui.ide.refreshRibbon()
            } else l.n.iv();
            for (var I = 0; I < D.length; I++) F.e.push(D[I])
        }

        if (!(d == null || d.c == null)) {
            var g = false,
                l = d.c.designer;
            l.we.update();
            var n = false, o = l.b != d.c.dom.parentNode;
            if (o && d.c.dom.parentNode.getAttribute("container") == "true") {
                o = false;
                n = true
            }
            if (Q == "genie") n = o = false;
            if (o) {
                for (var i = S.getTarget(e), r = d.c.dom, k = true; i != l.b;) {
                    if (i == r) {
                        k = false;
                        break
                    }
                    i = i.parentNode
                }
                if (k) return
            }
            if (pui.Ae(e) && !d.c.designer.sf(e)) {
                Q == "dspf" && Ext.menu.MenuMgr.hideAll();
                l.Nb.hide();
                l.rr(e);
                S.ua(e);
                e.stopPropagation && e.stopPropagation();
                return false
            }
            l.hh();
            if (d.c.properties["locked in place"] != "true") {
                var q = S.getX(e), s = S.getY(e),
                    t = 0, u = 0, w = 0, v = 0, E = null, y = null;
                if (Q == "dspf") {
                    t = l.li();
                    u = l.yj();
                    w = t;
                    v = u;
                    if (l.b != d.c.dom.parentNode) if (d.c.dom.parentNode.parentNode.grid != null) {
                        i = d.c.dom.parentNode;
                        r = i.parentNode;
                        w += i.offsetLeft + r.offsetLeft;
                        v += i.offsetTop + r.offsetTop;
                        if (r.parentNode.getAttribute("container") == "true") {
                            r = pui.layout.ec(r.parentNode);
                            w += r.x;
                            v += r.y
                        }
                        E = w + i.offsetWidth;
                        y = v + i.offsetHeight
                    } else {
                        i = pui.layout.ec(d.c.dom.parentNode);
                        w = t + i.x;
                        v = u + i.y;
                        E = w + d.c.dom.parentNode.offsetWidth;
                        y = v + d.c.dom.parentNode.offsetHeight
                    }
                    pui.layout.template.Nm(l)
                }
                var F =
                    l.selection, D = [];
                for (i = 0; i < F.e.length;) if (F.e[i].c.properties["locked in place"] == "true") {
                    D.push(F.e[i]);
                    F.e.splice(i, 1)
                } else i++;
                var B = F.Mt();
                F.Si();
                B != null && B.Si();
                l.qF(d.c);
                S.W(document, "mousemove", f);
                S.W(document, "mouseup", h);
                S.ua(e);
                Q == "dspf" && Ext.menu.MenuMgr.hideAll();
                d.c.moved = false;
                l.n.start("Move " + F.ve());
                l.n.bf = true;
                F.Qh(["left", "right", "top", "bottom", "parent tab panel", "parent tab panel"]);
                l.n.bf = false
            }
        }
    }

    function c(e) {
        if (d != null) {
            var f = d.c;
            if (f != null) {
                var h = S.getTarget(e), g = "value";
                if (f.label !=
                    null && (h == f.label || h.parentNode == f.label)) g = "label";
                if (f.properties["field type"] == "html container") g = "html";
                if (f.properties["field type"] == "radio button" && g != "label") g = "radio button group";
                if (f.properties["field type"] == "layout") if (f.properties.template == "css panel") g = "header text"; else if (f.properties.template == "fieldset") g = "legend"; else if (f.properties.template == "responsive layout") {
                    f.designer.k.wl.Hu = function (o, i, r) {
                        f.dom.Ie.tE(o);
                        i != parseInt(f.properties["layout items"], 10) && f.dom.Ie.Ro(f, i);
                        r != f.properties["container names"] && f.dom.Ie.im(f, "container names", r, "Change container names")
                    };
                    f.designer.k.wl.lB(f.properties["layout items"], f.properties["style rules"], pui.designer.d.Iy(f.dom.children[0].children), f.properties["container names"]);
                    f.designer.k.wl.show();
                    return
                }
                if (f.properties["field type"] == "image") {
                    g = "image source";
                    if (Q == "dspf" && pui.f(f.properties[g]) || pui.Ia(f.properties[g])) {
                        f.designer.k.he(g, null, true, e);
                        pui.f(f.properties[g]) && f.designer.k.za.Wj()
                    } else {
                        f.designer.k.he(g,
                            null, false, e);
                        var l = f.designer.k.Bh;
                        l.fe = function (o) {
                            if (pui.isCloud && (o.substr(0, 1) === "/" || o.substr(0, 1) === "\\")) o = o.substr(1);
                            f.designer.k.Hg(g, o, true)
                        };
                        l.db('<span style="font-weight:bold; text-transform:capitalize;">Select Image Source</span>');
                        l.type = "image";
                        l.show(e)
                    }
                } else {
                    if (g != "label") {
                        l = f.properties["field type"];
                        var n = pui.widgets[l].rf;
                        if (l == "layout" && (f.properties.template == "css panel" || f.properties.template == "fieldset")) n = true;
                        if (!n) {
                            if (Q == "dspf" && l != "grid" && l != "tab panel") {
                                h = h.tagName;
                                if (h == "INPUT" || h == "TEXTAREA" || h == "SELECT" || f.properties["field type"] == "on off switch") {
                                    f.designer.k.he(g, null, true, e);
                                    f.designer.k.za.Wj()
                                }
                                if (l == "icon") {
                                    g = "icon";
                                    if (Q == "dspf" && pui.f(f.properties[g]) || pui.Ia(f.properties[g])) {
                                        f.designer.k.he(g, null, true, e);
                                        pui.f(f.properties[g]) && f.designer.k.za.Wj();
                                        return
                                    }
                                    f.designer.k.he(g, null, false, e);
                                    f.designer.k.lg.fe = function (o) {
                                        f.designer.k.Hg(g, o, true)
                                    };
                                    f.designer.k.lg.show(e, null, null)
                                }
                            }
                            return
                        }
                    }
                    if (Q == "dspf" && pui.f(f.properties[g]) || pui.Ia(f.properties[g])) {
                        if (f.properties["field type"] !==
                            "layout") {
                            f.designer.k.he(g, null, true, e);
                            pui.f(f.properties[g]) && f.designer.k.za.Wj()
                        }
                    } else {
                        f.designer.we.Oj = function (o) {
                            var i = rc()[g];
                            if (i == null) i = {name: g};
                            f.designer.n.add(f, i.name);
                            uc(i, f.properties, f.dom, o, true, f, d);
                            f.m[g] = true;
                            f.ta = true;
                            f.designer.X[f.designer.i.l] = true;
                            f.designer.k.ea(g)
                        };
                        f.designer.we.show(d.c)
                    }
                }
            }
        }
    }

    this.qj = new pui.designer.Ph("e", b);
    this.Mj = new pui.designer.Ph("ne", b);
    this.Di = new pui.designer.Ph("nw", b);
    this.nh = new pui.designer.Ph("n", b);
    this.Vj = new pui.designer.Ph("se", b);
    this.ck = new pui.designer.Ph("sw", b);
    this.zh = new pui.designer.Ph("s", b);
    this.hk = new pui.designer.Ph("w", b);
    this.Fc = document.createElement("div");
    this.c = null;
    var d = this;
    this.qj.pc = d;
    this.Mj.pc = d;
    this.Di.pc = d;
    this.nh.pc = d;
    this.Vj.pc = d;
    this.ck.pc = d;
    this.zh.pc = d;
    this.hk.pc = d;
    this.Fc.innerHTML = "&nbsp;%&nbsp;";
    this.Fc.zH = true;
    this.Fc.title = "Percentages used";
    this.Fc.style.zIndex = S.kw;
    this.Fc.style.position = "absolute";
    this.Fc.style.fontFamily = "sans-serif";
    this.Fc.style.fontSize = "11px";
    this.Fc.style.borderRadius =
        "6px";
    this.Fc.style.border = "1px solid #666666";
    this.Fc.style.color = "#1968bf";
    this.Fc.style.backgroundColor = "#eeeeee";
    this.Fc.style.cursor = "pointer";
    this.Fc.onmousedown = function (e) {
        d.c.designer.k.rJ("+Position");
        S.ua(e)
    };
    this.Di.h.parentNode.appendChild(this.Fc);
    this.$w = function (e) {
        d.c = e;
        d.Fb();
        S.W(e.dom, "mousedown", a);
        S.W(e.dom, "dblclick", c);
        if (e.label != null) {
            S.W(e.label, "mousedown", a);
            S.W(e.label, "dblclick", c)
        }
        e.dom.MA = function (f) {
            S.wd(f, "mousedown", a);
            S.wd(f, "dblclick", c)
        }
    };
    this.kK = function (e) {
        a(e)
    };
    this.DE = function (e) {
        S.W(e, "mousedown", a);
        S.W(e, "dblclick", c)
    };
    this.Fb = function () {
        if (d.c != null) {
            var e = d.c.dom.offsetTop, f = d.c.dom.offsetHeight, h = d.c.dom.offsetLeft, g = d.c.dom.offsetWidth;
            if (Q == "dspf" && pui.designer.fa != null && !d.c.de() && !d.c.xe()) {
                h += pui.designer.Bp(b);
                e += pui.designer.Cp(b)
            }
            if (d.c.label != null) {
                g += d.c.label.offsetWidth + 6;
                f += 3
            }
            var l = e + f / 2 - 4 + "px", n = h - 4 + "px", o = h + g - 4 + "px", i = e - 4 + "px",
                r = h + g / 2 - 4 + "px", k = e + f - 4 + "px";
            d.qj.h.style.top = l;
            d.qj.h.style.left = o;
            d.Mj.h.style.left = o;
            d.Mj.h.style.top = i;
            d.Di.h.style.left =
                n;
            d.Di.h.style.top = i;
            d.nh.h.style.left = r;
            d.nh.h.style.top = i;
            d.Vj.h.style.left = o;
            d.Vj.h.style.top = k;
            d.ck.h.style.left = n;
            d.ck.h.style.top = k;
            d.zh.h.style.left = r;
            d.zh.h.style.top = k;
            d.hk.h.style.top = l;
            d.hk.h.style.left = n;
            l = pui.widgets[d.c.properties["field type"]];
            n = "#0000FF";
            o = "#DDDDDD";
            if (d.c.properties["locked in place"] == "true") {
                n = "#EEEEEE";
                o = "#CCCCFF"
            }
            if (!l.resizable) {
                n = "#9999FF";
                o = "#CCCCFF"
            }
            d.qj.h.style.borderColor = n;
            d.Mj.h.style.borderColor = n;
            d.Di.h.style.borderColor = n;
            d.nh.h.style.borderColor =
                n;
            d.Vj.h.style.borderColor = n;
            d.ck.h.style.borderColor = n;
            d.zh.h.style.borderColor = n;
            d.hk.h.style.borderColor = n;
            d.qj.h.style.backgroundColor = o;
            d.Mj.h.style.backgroundColor = o;
            d.Di.h.style.backgroundColor = o;
            d.nh.h.style.backgroundColor = o;
            d.Vj.h.style.backgroundColor = o;
            d.ck.h.style.backgroundColor = o;
            d.zh.h.style.backgroundColor = o;
            d.hk.h.style.backgroundColor = o;
            if (l.resizable) {
                d.nh.h.style.visibility = "";
                d.zh.h.style.visibility = ""
            } else {
                d.nh.h.style.visibility = "hidden";
                d.zh.h.style.visibility = "hidden"
            }
            if (l.nj) {
                d.qj.h.style.visibility =
                    "hidden";
                d.Mj.h.style.visibility = "hidden";
                d.Di.h.style.visibility = "hidden";
                d.nh.h.style.visibility = "hidden";
                d.Vj.h.style.visibility = "hidden";
                d.ck.h.style.visibility = "hidden";
                d.zh.h.style.visibility = "hidden";
                d.hk.h.style.visibility = "hidden";
                d.c != null && d.c.dom != null && d.c.dom.Jx != null && d.c.dom.Jx()
            }
            n = l = o = false;
            if (d.c.dom.grid == null) {
                if (pui.da(d.c.properties.left)) o = true;
                if (d.c.m.left != true && pui.da(d.c.properties.right)) l = o = true;
                if (pui.da(d.c.properties.top)) o = true;
                if (d.c.m.top != true && pui.da(d.c.properties.bottom)) n =
                    o = true
            }
            if (o) {
                d.Fc.style.display = "";
                o = e - 9;
                i = h + 3;
                if (n) o = e + f - 10;
                if (l) i = h + g - 20;
                d.Fc.style.top = o + "px";
                d.Fc.style.left = i + "px"
            } else d.Fc.style.display = "none"
        }
    };
    d.destroy = function () {
        d.c != null && d.c.dom != null && d.c.dom.kp != null && d.c.dom.kp();
        S.wd(d.c.dom, "mousedown", a);
        S.wd(d.c.dom, "dblclick", c);
        if (d.c.label != null) {
            S.wd(d.c.label, "mousedown", a);
            S.wd(d.c.label, "dblclick", c)
        }
        d.qj.destroy();
        d.Mj.destroy();
        d.Di.destroy();
        d.nh.destroy();
        d.Vj.destroy();
        d.ck.destroy();
        d.zh.destroy();
        d.hk.destroy();
        d.Fc.parentNode.removeChild(d.Fc);
        d.Fc = null;
        d = d.c = null
    }
};
pui.designer.Xv = function (b) {
    function a() {
        for (var z = g.kb, H = 0; H < z.length; H++) {
            var J = z[H];
            if (!(J.dom.style.visibility == "hidden" || J.dom.style.display == "none")) if (Ic(J.dom, "visibility") != "hidden") {
                var K = 0;
                if (J.dom.grid.t) K = 1;
                var L = J.dom.grid.cells;
                K = L[K];
                for (var N = 0; N < K.length; N++) {
                    var O = K[N], V = parseInt(J.dom.style.left) + parseInt(O.style.left),
                        X = parseInt(J.dom.style.top) + parseInt(O.style.top);
                    if (J.dom.parentNode.getAttribute("container") == "true") {
                        var ga = pui.layout.ec(J.dom.parentNode);
                        V += ga.x;
                        X += ga.y
                    }
                    ga =
                        V + parseInt(O.style.width);
                    var U = X + parseInt(O.style.height);
                    if (s > V && s < ga && t > X && t < U) {
                        u = false;
                        I = o != null && O == o.parentNode;
                        if (!l || O != o.parentNode) {
                            if (pui.designer.fa != null) {
                                V += pui.designer.Bp(R.designer.b);
                                X += pui.designer.Cp(R.designer.b)
                            }
                            g.Aa.style.top = X + "px";
                            g.Aa.style.left = V + "px";
                            g.Aa.style.height = J.dom.grid.cb * (L.length - (J.dom.grid.t ? 1 : 0)) - 3 + "px";
                            g.Aa.style.width = parseInt(O.style.width) - 3 + "px";
                            g.Aa.style.display = "";
                            g.se = O;
                            if (l) {
                                if (q.fc) {
                                    v -= y;
                                    E -= F;
                                    v = q.mb(v, pui.ac);
                                    E = q.mb(E, pui.Ob);
                                    v += y;
                                    E += F
                                }
                                g.Z.style.top =
                                    E + "px";
                                g.Z.style.left = v + "px";
                                g.Z.style.height = o.offsetHeight + "px";
                                g.Z.style.width = o.offsetWidth + "px";
                                g.Z.style.display = ""
                            }
                            break
                        }
                    }
                }
                if (g.Aa.style.display == "") break
            }
        }
    }

    function c() {
        for (var z = 0; z < g.Hz.length; z++) {
            var H = g.Hz[z], J = H.layout;
            if (!(J.dom.style.visibility == "hidden" || J.dom.style.display == "none")) if (Ic(J.dom, "visibility") != "hidden") if (J.dom != o) {
                if (o != null) {
                    if (J.properties["parent tab panel"] == o.id) continue;
                    if (J.properties["parent field set"] == o.id) continue
                }
                J = H.top;
                var K = H.bottom, L = H.left, N = H.right,
                    O = H.b;
                if (s > L && s < N && t > J && t < K) {
                    w = false;
                    if (pui.designer.mH(o, O, g.b)) continue;
                    if (o != null && O == o.parentNode) break;
                    if (!n || O != o.parentNode) {
                        g.nd = O;
                        g.Xx = J;
                        g.Wx = L;
                        if (pui.designer.fa != null) {
                            L += pui.designer.Bp(R.designer.b);
                            J += pui.designer.Cp(R.designer.b)
                        }
                        g.Aa.style.top = J + "px";
                        g.Aa.style.left = L + "px";
                        g.Aa.style.height = H.height + "px";
                        g.Aa.style.width = H.width + "px";
                        g.Aa.style.display = "";
                        if (n) {
                            if (q.fc) {
                                v -= D;
                                E -= B;
                                v = q.mb(v, pui.ac);
                                E = q.mb(E, pui.Ob);
                                v += D;
                                E += B;
                                for (z = 0; z < g.Kb.length; z++) {
                                    H = g.Kb[z];
                                    H.x -= D;
                                    H.y -= B;
                                    H.x = q.mb(H.x,
                                        pui.ac);
                                    H.y = q.mb(H.y, pui.Ob);
                                    H.x += D;
                                    H.y += B
                                }
                            }
                            g.Z.style.top = E + "px";
                            g.Z.style.left = v + "px";
                            g.Z.style.height = o.offsetHeight + "px";
                            g.Z.style.width = o.offsetWidth + "px";
                            g.Z.style.display = "";
                            g.IB()
                        }
                        break
                    }
                }
                if (g.Aa.style.display == "") break
            }
        }
    }

    var d = b.x, e = b.y, f = b.offsetX, h = b.offsetY, g = b.designer;
    if (f == null) f = g.li();
    if (h == null) h = g.yj();
    var l = b.mz;
    if (l == null) l = false;
    var n = b.nz;
    if (n == null) n = false;
    var o = b.dom, i = b.c, r = b.Hx, k = b.Ix, q = g.selection, s = d - f, t = e - h;
    g.Aa.style.display = "none";
    g.Z.style.display = "none";
    g.dz();
    g.se =
        null;
    g.nd = null;
    var u = true, w = true, v, E, y, F, D, B, I = false;
    if (l) {
        f = o.parentNode;
        h = f.parentNode;
        y = parseInt(h.style.left) + parseInt(f.style.left);
        F = parseInt(h.style.top) + parseInt(f.style.top);
        v = d - r + y + parseInt(i.va.left);
        E = e - k + F + parseInt(i.va.top);
        if (h.parentNode.getAttribute("container") == "true") {
            f = pui.layout.ec(h.parentNode);
            v += f.x;
            E += f.y
        }
    }
    if (n) {
        f = pui.layout.ec(o.parentNode);
        D = f.x;
        B = f.y;
        v = d - r + D + parseInt(i.va.left);
        E = e - k + B + parseInt(i.va.top);
        for (i = 0; i < g.Kb.length; i++) {
            f = g.Kb[i];
            f.x = d - r + D + parseInt(f.item.va.left);
            f.y = e - k + B + parseInt(f.item.va.top)
        }
    }
    b.oe && a();
    g.Aa.style.display != "" && b.Vh && !I && c();
    if (l && u || n && w) {
        if (q.fc) {
            v = q.mb(v, pui.ac);
            E = q.mb(E, pui.Ob);
            for (i = 0; i < g.Kb.length; i++) {
                f = g.Kb[i];
                f.x = q.mb(f.x, pui.ac);
                f.y = q.mb(f.y, pui.Ob)
            }
        }
        g.Z.style.top = E + "px";
        g.Z.style.left = v + "px";
        g.Z.style.height = o.offsetHeight + "px";
        g.Z.style.width = o.offsetWidth + "px";
        g.Z.style.display = "";
        g.IB()
    }
};
pui.designer.mH = function (b, a, c) {
    if (a == null || b == null) return false;
    for (a = a.parentNode; a != null && a != c;) {
        if (a == b) return true;
        a = a.parentNode
    }
    return false
};
pui.designer.Wz = function (b, a, c) {
    function d(g, l) {
        var n = g.dom.parentNode, o = n.parentNode.grid, i, r, k, q, s, t, u;
        if (o != null) {
            i = o.Ib;
            r = n.col;
            k = o.D
        } else k = e.D;
        var w;
        n = e.se;
        if (n != null) {
            w = n.parentNode;
            q = w.grid;
            if (o != null) i = o.Ib;
            s = q.Ib;
            t = n.col;
            u = q.D
        } else {
            n = e.nd;
            u = e.D
        }
        var v = g;
        if (v == null) v = b;
        var E = v.designer;
        if (v.properties["parent tab panel"] != null && v.properties["parent tab panel"] != "") {
            v.properties["parent tab panel"] = "";
            v.dom.Jb = null;
            v.m["parent tab panel"] = false;
            E.k.ea("parent tab panel")
        }
        if (v.properties["parent tab"] !==
            null && v.properties["parent tab"] !== "") {
            v.properties["parent tab"] = "";
            v.m["parent tab"] = false;
            E.k.ea("parent tab")
        }
        if (v.properties["parent field set"] != null && v.properties["parent field set"] != "") {
            v.properties["parent field set"] = "";
            v.m["parent field set"] = false;
            E.k.ea("parent field set")
        }
        k != u && k.Tj(g, u);
        u = k = null;
        if (g.m.bottom && !g.m.top || pui.da(g.dom.style.top)) k = g.dom.offsetTop;
        if (g.m.right && !g.m.left || pui.da(g.dom.style.left)) u = g.dom.offsetLeft;
        g.dom.parentNode.removeChild(g.dom);
        n.appendChild(g.dom);
        if (g.dom.grid != null) g.dom.grid.b = n;
        g.dom.sizeMe != null && typeof g.dom.sizeMe == "function" && g.dom.sizeMe();
        if (a || c) {
            k = parseInt(l.style.top);
            u = parseInt(l.style.left)
        } else {
            k = k != null ? k : parseInt(g.dom.style.top);
            u = u != null ? u : parseInt(g.dom.style.left)
        }
        if (e.nd != null) {
            w = pui.layout.ec(n);
            u -= w.x;
            k -= w.y
        } else {
            k -= parseInt(w.style.top);
            k -= parseInt(n.style.top);
            u -= parseInt(w.style.left);
            u -= parseInt(n.style.left);
            if (w.parentNode.getAttribute("container") == "true") {
                w = pui.layout.ec(w.parentNode);
                u -= w.x;
                k -= w.y
            }
        }
        if (e.selection.fc) {
            u =
                e.selection.mb(u, pui.ac);
            k = e.selection.mb(k, pui.Ob)
        }
        g.dom.style.top = k + "px";
        if (pui.f(g.properties.top)) g.properties.top.designValue = k + "px"; else g.properties.top = k + "px";
        g.m.top = true;
        g.dom.style.left = u + "px";
        if (pui.f(g.properties.left)) g.properties.left.designValue = u + "px"; else g.properties.left = u + "px";
        g.m.left = true;
        g.dom.style.bottom = "";
        if (!pui.f(g.properties.bottom)) {
            g.properties.bottom = "";
            g.m.bottom = false
        }
        g.dom.style.right = "";
        if (!pui.f(g.properties.bottom)) {
            g.properties.right = "";
            g.m.right = false
        }
        g.Zu();
        o != null && i(r);
        q != null && s(t);
        pui.designer.Bu(b)
    }

    var e = R.designer;
    d(b, e.Z);
    for (var f = 0; f < e.Kb.length; f++) {
        var h = e.Kb[f];
        d(h.item, h.h)
    }
    e.se = null;
    e.nd = null;
    f = b;
    e.selection.clear();
    e.selection.add(f);
    for (f = 0; f < e.Kb.length; f++) e.selection.add(e.Kb[f].item);
    e.Ff();
    pui.ide.He();
    e.Aa.style.display = "none";
    e.Z.style.display = "none";
    e.jv()
};
pui.designer.Xz = function (b, a) {
    function c(l, n) {
        l.dom.parentNode.removeChild(l.dom);
        d.b.appendChild(l.dom);
        if (l.dom.grid != null) l.dom.grid.b = d.b;
        l.dom.sizeMe != null && typeof l.dom.sizeMe == "function" && l.dom.sizeMe();
        a && e.D.Tj(l, d.D);
        l.dom.style.top = n.style.top;
        l.dom.style.left = n.style.left;
        l.dom.style.bottom = "";
        l.dom.style.right = "";
        l.properties.top = n.style.top;
        l.m.top = true;
        l.properties.bottom = "";
        l.m.bottom = false;
        l.properties.left = n.style.left;
        l.m.left = true;
        l.properties.right = "";
        l.m.right = false;
        l.Zu()
    }

    var d =
        R.designer, e = b.dom.parentNode.parentNode.grid, f = b.dom.parentNode.col;
    c(b, d.Z);
    for (var h = 0; h < d.Kb.length; h++) {
        var g = d.Kb[h];
        c(g.item, g.h)
    }
    a && e.Ib(f);
    pui.designer.Bu(b);
    for (h = 0; h < d.Kb.length; h++) pui.designer.Bu(d.Kb[h].item);
    d.selection.clear();
    d.selection.add(b);
    for (h = 0; h < d.Kb.length; h++) d.selection.add(d.Kb[h].item);
    d.Ff();
    pui.ide.He();
    d.Z.style.display = "none";
    d.jv()
};
pui.designer.Bu = function (b) {
    if (!(b.properties["field type"] != "tab panel" && b.properties["field type"] != "field set panel")) for (var a = b.designer, c = parseInt(b.dom.style.top) - parseInt(b.va.top), d = parseInt(b.dom.style.left) - parseInt(b.va.left), e = 0; e < a.items.length; e++) {
        var f = a.items[e];
        if (f.properties["field type"] != "tab panel" && f.properties["field type"] != "field set panel") if (b.properties["field type"] == "tab panel" && f.properties["parent tab panel"] == b.dom.id || b.properties["field type"] == "field set panel" &&
            f.properties["parent field set"] == b.dom.id) {
            f.dom.parentNode.removeChild(f.dom);
            b.dom.parentNode.appendChild(f.dom);
            var h = parseInt(f.va.top), g = parseInt(f.va.left);
            h += c;
            g += d;
            if (f.properties["field type"] == "grid") {
                var l = f.dom.grid;
                l.Wd(function (n) {
                    n.parentNode.removeChild(n);
                    b.dom.parentNode.appendChild(n)
                });
                l.s != null && l.s.Ng(b.dom.parentNode);
                l.A != null && l.A.Ng(b.dom.parentNode);
                l.b = b.dom.parentNode;
                l.setProperty("top", h + "px");
                l.setProperty("left", g + "px")
            } else {
                f.dom.style.top = h + "px";
                f.dom.style.left =
                    g + "px"
            }
            f.properties.top = h + "px";
            f.properties.left = g + "px";
            f.dom.sizeMe != null && typeof f.dom.sizeMe == "function" && f.dom.sizeMe();
            f.Zu()
        }
    }
};
pui.designer.Bp = function (b) {
    var a = 0;
    a += b.parentNode.offsetLeft + b.offsetLeft - b.scrollLeft;
    pui.is_old_ie || (a += 4);
    return a
};
pui.designer.Cp = function (b) {
    var a = 0;
    a += b.parentNode.offsetTop + b.offsetTop - b.scrollTop;
    pui.is_old_ie || (a += 4);
    return a
};
pui.designer.Ph = function (b, a) {
    function c(e) {
        function f(u) {
            var w = true, v = true;
            if (d.type == "w" || d.type == "e") w = false;
            if (d.type == "n" || d.type == "s") v = false;
            var E = S.getY(u) - o;
            u = S.getX(u) - n;
            w || (E = 0);
            v || (u = 0);
            if (d.type == "n" || d.type == "nw" || d.type == "ne") d.h.style.top = r + E + "px";
            if (d.type == "w" || d.type == "nw" || d.type == "sw") d.h.style.left = i + u + "px";
            k.fK(d.pc.c, u, E, d.type);
            E = d.pc.c.designer.k;
            if (v) {
                E.ea("left");
                E.ea("right");
                E.ea("width");
                k.ne("width")
            }
            if (w) {
                E.ea("top");
                E.ea("bottom");
                E.ea("height");
                k.ne("height")
            }
            l.set(d.pc.c)
        }

        function h() {
            S.wd(document, "mousemove", f);
            S.wd(document, "mouseup", h);
            l.hide();
            Q === "dspf" && pui.ide.refreshRibbon()
        }

        var g = d.pc.c.designer;
        g.hh();
        var l = pui.designer.gf;
        if (l.b == null) {
            l.b = document.body;
            l.init()
        }
        l.set(d.pc.c);
        l.show();
        if (d.pc.c.properties["locked in place"] != "true") {
            var n = S.getX(e), o = S.getY(e), i = parseInt(d.h.style.left), r = parseInt(d.h.style.top);
            g.we.update();
            var k = g.selection;
            k.Si();
            g = d.pc.c;
            g.fC = g.iC = g.eC = false;
            g.jC = g.gC = g.hC = false;
            if (g.dom.offsetParent != null) {
                if (g.dom.offsetParent.offsetWidth !=
                    0) {
                    g.jC = !pui.f(g.properties.width) && pui.da(g.properties.width);
                    g.hC = !pui.f(g.properties.right) && pui.da(g.properties.right);
                    g.gC = !pui.f(g.properties.left) && pui.da(g.properties.left)
                }
                if (g.dom.offsetParent.offsetHeight != 0) {
                    g.fC = !pui.f(g.properties.height) && pui.da(g.properties.height);
                    g.eC = !pui.f(g.properties.bottom) && pui.da(g.properties.bottom);
                    g.iC = !pui.f(g.properties.top) && pui.da(g.properties.top)
                }
            }
            g = null;
            S.W(document, "mousemove", f);
            S.W(document, "mouseup", h);
            g = "Resize Elements";
            if (k.e.length == 1) {
                var q =
                    k.e[0].c.properties["field type"];
                g = pui.widgets[q].menuName;
                if (typeof g != "string") {
                    q = q.split(" ");
                    g = "";
                    for (var s = 0; s < q.length; s++) {
                        var t = q[s];
                        t = t.charAt(0).toUpperCase() + t.substr(1);
                        if (g != "") g += " ";
                        g += t
                    }
                }
                g = "Resize " + g
            }
            d.pc.c.designer.n.start(g);
            k.Qh(["left", "right", "top", "bottom", "width", "height"]);
            S.ua(e)
        }
    }

    this.h = document.createElement("div");
    this.type = b;
    this.pc = null;
    this.h.style.position = "absolute";
    this.h.style.border = "1px solid #0000ff";
    if (pui.is_old_ie && pui.is_quirksmode) {
        this.h.style.height =
            "6px";
        this.h.style.width = "6px";
        this.h.style.padding = "0px"
    } else {
        this.h.style.height = "3px";
        this.h.style.width = "3px";
        this.h.style.padding = "1px"
    }
    this.h.style.fontSize = "0px";
    this.h.style.backgroundColor = "#dddddd";
    this.h.style.cursor = b + "-resize";
    this.h.style.zIndex = S.kw;
    if (Q == "dspf") {
        this.h.onselectstart = za(false);
        if (typeof this.h.style.MozUserSelect != "undefined") this.h.style.MozUserSelect = "none"
    }
    this.h.gn = true;
    S.W(this.h, "mousedown", c);
    Q == "dspf" && a.parentNode.grid == null && a.getAttribute("container") != "true" ?
        Tb(Ha).appendChild(this.h) : a.appendChild(this.h);
    var d = this;
    this.destroy = function () {
        S.wd(document, "mousedown", c);
        d.h.parentNode.removeChild(d.h);
        d.h = null;
        d = d.pc = null
    }
};
pui.designer.SC = function () {
    this.b = null;
    var b, a, c, d, e, f = this;
    this.init = function () {
        b = document.createElement("div");
        b.style.position = "absolute";
        b.style.left = "0px";
        b.style.bottom = "0px";
        b.style.height = "22px";
        b.style.backgroundColor = "#d2e1f6";
        b.style.borderTop = "1px solid #99bbe8";
        b.style.borderRight = "1px solid #99bbe8";
        b.style.zIndex = S.WK;
        b.style.display = "none";
        a = document.createElement("img");
        a.src = "/profoundui/proddata/images/icons/current_position.png";
        a.style.position = "absolute";
        a.style.left = "5px";
        a.style.top =
            "3px";
        c = document.createElement("div");
        c.style.position = "absolute";
        c.style.left = "25px";
        c.style.top = "5px";
        c.style.fontFamily = "Arial";
        c.style.fontSize = "11px";
        c.style.color = "#333333";
        d = document.createElement("img");
        d.src = "/profoundui/proddata/images/icons/current_size.png";
        d.style.position = "absolute";
        d.style.left = "95px";
        d.style.top = "3px";
        e = document.createElement("div");
        e.style.position = "absolute";
        e.style.left = "115px";
        e.style.top = "5px";
        e.style.fontFamily = "Arial";
        e.style.fontSize = "11px";
        e.style.color = "#333333";
        b.appendChild(a);
        b.appendChild(c);
        b.appendChild(d);
        b.appendChild(e);
        f.b.appendChild(b)
    };
    this.show = function () {
        if (b != null) {
            if (Q == "dspf") b.style.left = Tb("widgetsPanel").offsetWidth + 6 + "px";
            if (pui.nodedesigner) {
                var h = 6;
                if (pui.isCloud) h = 48;
                Ext.getCmp("southPanel").collapsed || (h = Ext.getCmp("southPanel").getHeight() + 6);
                b.style.bottom = h + "px"
            }
            b.style.display = ""
        }
    };
    this.hide = function () {
        if (b != null) b.style.display = "none"
    };
    this.set = function (h) {
        function g(i, r) {
            var k = i.properties[r];
            if (i.properties["field type"] ==
                "grid") k = i.dom.style[r];
            if (k == null) k = 0;
            if (pui.f(k)) k = k.designValue;
            if (k == null) k = "0";
            k = parseInt(k);
            if (isNaN(k)) k = 0;
            return k
        }

        var l = g(h, "left"), n = g(h, "top");
        if (h.m && h.m.left != true && h.m.right == true) l = g(h, "right");
        if (h.m && h.m.top != true && h.m.bottom == true) n = g(h, "bottom");
        var o = g(h, "width");
        h = g(h, "height");
        c.innerHTML = l + ", " + n;
        e.innerHTML = o + (h == 0 ? "" : " x " + h);
        if (o == 0) {
            d.style.visibility = "hidden";
            e.style.visibility = "hidden";
            b.style.width = "90px"
        } else {
            d.style.visibility = "";
            e.style.visibility = "";
            b.style.width =
                "180px"
        }
    }
};
pui.designer.gf = new pui.designer.SC;
pui.designer.ww = function (b, a) {
    function c(D) {
        var B = "expand_";
        if (!a && v.designer.selection.e.length <= 0) B += "global_";
        for (var I = 0; I < D.length; I++) {
            var z = D.substr(I, 1);
            z = z.toLowerCase();
            if (z >= "a" && z <= "z") B += z
        }
        return B
    }

    function d(D, B) {
        var I = r.value == "Set";
        if (B == null) B = S.getTarget(D);
        var z;
        if (v.dy) if (B.status == "-") {
            B.src = E;
            B.status = "+";
            z = "none"
        } else {
            B.src = y;
            B.status = "-";
            z = ""
        } else if (B.status == "-") {
            B.innerHTML = "+";
            B.status = "+";
            z = "none"
        } else {
            B.innerHTML = "-";
            B.status = "-";
            z = ""
        }
        for (var H = B; H.tagName != "TR";) {
            H =
                H.parentNode;
            if (H == null) return
        }
        for (H = H.nextSibling; H != null && H.childNodes.length >= 2;) {
            H.style.display = z == "" && I && H.cells[0].style.fontWeight != "bold" ? "none" : z;
            H = H.nextSibling
        }
        I = B.parentNode.innerText;
        if (I == null) I = B.parentNode.textContent;
        Kd.set(c(I), B.status);
        Kd.save()
    }

    function e(D, B, I, z, H) {
        a || v.designer.hh();
        if (v.Qa == null) {
            v.Qa = new pui.designer.am;
            v.Qa.init()
        }
        v.Qa.Qf = "context";
        v.Qa.handler = function (O) {
            switch (O.split(" ")[0]) {
                case "Add":
                    for (var V = -1, X = B; X != null;) {
                        V++;
                        X = X.previousSibling
                    }
                    O = H;
                    if (H.il !=
                        null) O = H.il;
                    X = B;
                    for (var ga = false, U = 1; !ga;) {
                        var Z = tc(X.firstChild);
                        if (Z.substr(0, O.name.length) == O.name) {
                            Z = Z.split(" ");
                            Z = Number(Z[Z.length - 1]);
                            if (isNaN(Z) || Z <= 0) Z = 1;
                            if (Z > U) U = Z;
                            V++
                        } else ga = true;
                        X = X.nextSibling;
                        if (X == null) ga = true
                    }
                    V = s.insertRow(V);
                    v.ks({
                        name: O.name + " " + String(U + 1),
                        value: "",
                        type: H.type,
                        choices: H.choices,
                        ta: false,
                        U: true,
                        readOnly: H.readOnly,
                        help: H.help,
                        bind: H.bind,
                        j: H.j,
                        format: H.format,
                        selection: H.selection,
                        il: O
                    }, true, V);
                    break;
                case "Remove":
                    !a && z.ra != null && z.ra.fieldName != null && v.designer.selection.On(H.name,
                        v.designer, z.ra.fieldName);
                    f(B, I, z, H);
                    z.ra = null;
                    z.tc = null;
                    z.innerHTML = "";
                    inp = v.Pm(H, "");
                    z.appendChild(inp);
                    f(null, null, null, H, "Remove");
                    if (r.value == "Set") B.style.display = "none";
                    if (H.U) {
                        v.$I(B, H);
                        v.refresh()
                    }
                    break;
                case "Bind":
                    f(B, I, z, H);
                    I.hj.onclick(D);
                    break;
                case "Translation":
                    f(B, I, z, H);
                    I.fk.onclick(D);
                    break;
                case "Refresh":
                    v.refresh();
                    break;
                case "Open":
                    O = tc(z.firstChild);
                    f(B, I, z, H);
                    if (z.ra != null) O = z.ra; else if (z.tc != null) O = z.tc;
                    z.innerHTML = "";
                    inp = v.Pm(H, O, true);
                    z.innerHTML = "";
                    z.appendChild(inp);
                    v.jd.pa =
                        function (la) {
                            inp.value = la;
                            f(B, I, z, H);
                            inp.focus()
                        };
                    v.jd.cC();
                    v.jd.db('<span style="font-weight:bold; text-transform:capitalize;">Edit ' + tc(I) + (H.type == "js" ? " event" : "") + "</span>");
                    v.jd.setValue(O);
                    O = "text";
                    if (H.type == "js") O = "javascript";
                    if (H.jp) O = "sql";
                    v.jd.setMode(O);
                    v.jd.show(D);
                    break
            }
        };
        var J = [], K = [];
        if (H.U == true) {
            var L = H.name;
            if (H.il != null) L = H.il.name;
            L = L.split(" ");
            for (var N = 0; N < L.length; N++) {
                L[N] = L[N].substr(0, 1).toUpperCase() + L[N].substr(1);
                if (L[N] == "Css") L[N] = "CSS";
                if (L[N] == "Javascript") L[N] =
                    "JavaScript";
                if (L[N] == "Data") L[N] = "Value"
            }
            J.push("Add Another " + L.join(" "));
            K.push("add")
        }
        if (I.style.fontWeight == "bold" && H.$a != false && (a || v.designer.selection.e.length <= 1)) {
            J.push("Remove Property Value");
            K.push("remove")
        }
        if (Q == "dspf" && z.tc == null && H.bind == null && H.type != "js" || H.bind == true) {
            J.push("Bind to Program Field...");
            K.push("bind")
        }
        if (Q == "dspf" && pui.langs.length > 0 && H.translate && z.ra == null && (a || v.designer.selection.e.length == 0 || v.designer.selection.e.length == 1)) {
            J.push("Translation Settings...");
            K.push("globe")
        }
        if (!H.readOnly && z.ra == null && z.tc == null) {
            if ((L = H.choices != null) && H.choices[H.choices.length - 1] == "Other...") L = false;
            if (!L) {
                J.push("Open in Editor...");
                K.push("code")
            }
        }
        J.push("Refresh Properties");
        K.push("refresh");
        v.Qa.Hd = J;
        v.Qa.Jj = K;
        v.Qa.clickEvent = D;
        v.Qa.Yu();
        B.style.backgroundColor = "#d9e8fb";
        v.Qa.Xc = function () {
            B.style.backgroundColor = ""
        };
        v.Qa.show()
    }

    function f(D, B, I, z, H) {
        var J = false, K = "", L = v.Pe == D;
        if (v.Pe != null) {
            v.Ox = true;
            var N = v.Pe.firstChild, O = N.nextSibling;
            if (!L) {
                N.style.backgroundColor =
                    "";
                N.style.borderBottomColor = "#cccccc";
                if (N.hj != null) {
                    N.hj.parentNode.removeChild(N.hj);
                    N.hj = null
                }
                if (N.fk != null) {
                    N.fk.parentNode.removeChild(N.fk);
                    N.fk = null
                }
            }
            var V = O.firstChild;
            K = V.value;
            if (v.xa.uppercase && K != null && !pui.f(K) && !pui.Ia(K)) K = K.toUpperCase();
            if (v.xa.name === "record format name" && pui.pjsDefaultMode === "compatibility") K = K.toLowerCase();
            if (O.ra != null) K = O.ra; else if (O.tc != null) K = O.tc;
            if (H == "Remove") J = true;
            if (K != v.Oo || J) {
                if (a) if (J) a.properties[z.name] && delete a.properties[z.name]; else a.properties[z.name] =
                    K;
                if (!a) {
                    if (H == null) H = "Change";
                    for (var X = H, ga = v.xa.name.split(" "), U = 0; U < ga.length; U++) {
                        var Z = ga[U];
                        Z = Z.charAt(0).toUpperCase() + Z.substr(1);
                        X += " ";
                        X += Z
                    }
                    ga = z.selection.e.length;
                    if (ga == 0) {
                        if (K != "" || v.designer.Ga[v.designer.i.l][v.xa.name] != null) {
                            v.designer.n.start(X);
                            v.designer.n.Sw(v.designer, v.xa.name);
                            if (Q == "genie" && v.xa != null && v.xa.name == "screen name") {
                                v.designer.i.name = K;
                                if (v.designer.i.oc == true) for (U = 0; U < v.designer.i.fields.length; U++) {
                                    X = v.designer.i.fields[U];
                                    X.dom.setAttribute("parentWindow",
                                        K);
                                    X.properties["parent window"] = K;
                                    X.m["parent window"] = true
                                }
                            }
                            if (Q == "dspf" && v.xa != null && v.xa.name == "record format name") {
                                v.designer.i.name = K;
                                rd.refresh()
                            }
                            pui.ja && v.xa != null && v.xa.name == "document type" && v.designer.uM(K);
                            v.designer.Ga[v.designer.i.l][v.xa.name] = K;
                            v.designer.Nd[v.designer.i.l][v.xa.name] = !J;
                            J && delete v.designer.Ga[v.designer.i.l][v.xa.name];
                            v.designer.qb();
                            Q === "dspf" && pui.ide.refreshRibbon();
                            Q == "dspf" && v.xa != null & v.xa.name == "description" && rd.refresh();
                            Q == "dspf" && v.xa != null & v.xa.name.substr(0,
                                12) == "external css" && pui.sj.load();
                            Q == "dspf" && v.xa != null & v.xa.name == "design overlay formats" && rd.Rf();
                            R.cv();
                            v.io((pui.ja ? "Format" : "Screen") + " Properties - " + v.designer.i.name)
                        }
                    } else {
                        v.designer.n.start(X);
                        for (U = 0; U < ga; U++) {
                            X = v.xa.selection.e[U].c;
                            v.designer.n.add(X, v.xa.name);
                            if (pui.ja) {
                                X.properties[v.xa.name] = K;
                                X.m[v.xa.name] = true
                            } else {
                                uc(v.xa, X.properties, X.dom, K, true, X, z.selection.e[U]);
                                if (v.xa && v.xa.type === "icon" && X.properties["field type"] == "graphic button") {
                                    if (!X.properties["icon position"]) {
                                        var la =
                                            rc();
                                        Z = pui.Ye(la, "icon position");
                                        v.designer.n.add(X, Z.name);
                                        uc(Z, X.properties, X.dom, "left", true, X, z.selection.e[U]);
                                        X.designer.k.Hg("icon position", "left", true)
                                    }
                                    if (X.properties["image source"] && !pui.f(X.properties["image source"])) {
                                        la || (la = rc());
                                        Z = pui.Ye(la, "image source");
                                        v.designer.n.add(X, Z.name);
                                        uc(Z, X.properties, X.dom, "", true, X, z.selection.e[U]);
                                        X.designer.k.Hg("image source", "", true)
                                    }
                                }
                            }
                            if (H == "Remove" && (v.xa == null || v.xa.name != "value")) J = true;
                            if (J) X.m[v.xa.name] = false
                        }
                    }
                    v.designer.X[v.designer.i.l] =
                        true
                }
                if (J) {
                    N.style.color = "#666666";
                    N.style.fontWeight = "normal";
                    N.style.paddingLeft = "1px"
                } else {
                    N.style.color = "#336699";
                    N.style.fontWeight = "bold";
                    N.style.paddingLeft = "3px"
                }
                z.name == "field type" && v.refresh();
                z.name == "bound field" && v.refresh()
            }
            if (!L || pui.f(K) || pui.Ia(K)) {
                O.innerHTML = "";
                O.appendChild(v.Lt(K))
            }
            v.Ox = false;
            if (v.KA) {
                v.KA = null;
                v.refresh()
            }
        }
        if (D == null) {
            v.Pe = null;
            v.xa = null;
            v.Oo = null;
            u.innerHTML = ""
        } else if (L) v.Oo = K; else {
            B.style.backgroundColor = "#d9e8fb";
            B.style.borderBottomColor = "#99bbe8";
            if (Q ==
                "dspf" && I.tc == null && z.bind == null && z.type != "js" || z.bind == true) {
                H = document.createElement("button");
                H.innerHTML = pui.flatlook ? '<img src="/profoundui/proddata/images/FlatIcons/bind.png" />' : '<img src="/profoundui/proddata/images/icons/bind_small.png" />';
                H.title = 'Bind "' + B.innerHTML + '" to a program field...';
                H.style.marginLeft = "5px";
                H.style.marginBottom = "2px";
                H.style.verticalAlign = "middle";
                H.style.width = "24px";
                H.style.height = "20px";
                H.style.padding = "0px";
                H.onclick = function (oa) {
                    v.za.pa = function (ma) {
                        if (!a) {
                            var ka =
                                {};
                            ka.fieldName = ma.fieldName;
                            if (Q == "dspf") {
                                ka.dataType = ma.dataType;
                                ka.dataLength = ma.dataLength;
                                ka.decPos = ma.decPos;
                                ka.refField = ma.refField;
                                ka.keywords = ma.keywords;
                                ka.property = z.name;
                                ka.longName = ma.longName;
                                if (!v.designer.selection.Nw(ka, v.designer)) return false
                            }
                        }
                        f(D, B, I, z);
                        V.value = "";
                        I.ra = ma;
                        f(null, null, null, z, "Bind");
                        if (!a) {
                            v.designer.selection.e.length > 1 && v.designer.D.uh();
                            if (pui.ja && z.name == "bound field") {
                                ka = ma.fieldName;
                                if (ma.longName != null) ka = ma.longName;
                                v.designer.CM(ka)
                            }
                        }
                        return true
                    };
                    v.za.rq =
                        function (ma) {
                            a || v.designer.selection.On(z.name, v.designer, ma, true)
                        };
                    v.za.tq = function () {
                        !a && I.ra != null && I.ra.fieldName != null && v.designer.selection.On(z.name, v.designer, I.ra.fieldName);
                        var ma = "";
                        if (I.ra != null && I.ra.designValue != null) {
                            ma = I.ra.designValue;
                            if (ma == "[" + I.ra.fieldName + "]") ma = z.name + " text"
                        }
                        f(D, B, I, z);
                        I.ra = null;
                        I.innerHTML = "";
                        V = v.Pm(z, ma);
                        I.appendChild(V);
                        f(null, null, null, z, "Unbind")
                    };
                    v.za.cB(I.ra, z, v.designer);
                    var qa;
                    qa = a || v.designer.selection.e.length == 0 || pui.ja ? "" : v.designer.selection.e.length ==
                    1 ? v.designer.selection.e[0].c.properties.id + " - " : v.designer.selection.e.length + " items - ";
                    qa += "Bind <span style='text-transform:capitalize; font-weight: bold;'>" + tc(B) + "</span> to a Program Field";
                    v.za.db(qa);
                    v.za.lb = z.name;
                    v.za.Ii = I.ra != null ? I.ra.designValue != null ? I.ra.designValue : "" : V.value;
                    v.za.hide();
                    f(null, null, null, v.xa);
                    setTimeout(function () {
                        D.style.backgroundColor = "#d9e8fb"
                    }, 0);
                    v.za.Xc = function () {
                        D.style.backgroundColor = ""
                    };
                    v.za.show(oa);
                    v.za.Wj()
                };
                B.appendChild(H);
                B.hj = H
            }
            if (Q == "dspf" &&
                pui.langs.length > 0 && z.translate && I.ra == null && (a || v.designer.selection.e.length == 0 || v.designer.selection.e.length == 1)) {
                H = document.createElement("button");
                H.innerHTML = pui.flatlook ? '<img src="/profoundui/proddata/images/FlatIcons/globe-small.png" />' : '<img src="/profoundui/proddata/images/icons/globe_small.png" />';
                H.title = 'Translation settings for "' + z.name + '"...';
                H.style.marginLeft = "5px";
                H.style.marginBottom = "2px";
                H.style.verticalAlign = "middle";
                H.style.width = "24px";
                H.style.height = "20px";
                H.style.padding =
                    "0px";
                H.onclick = function (oa) {
                    v.Ih.pa = function (qa) {
                        f(D, B, I, z);
                        I.tc = qa;
                        if (qa == null) {
                            I.innerHTML = "";
                            V = v.Pm(z, "");
                            I.appendChild(V);
                            f(null, null, null, z, "Remove")
                        } else {
                            V.value = "";
                            f(null, null, null, z, "Translate")
                        }
                    };
                    f(D, B, I, z);
                    v.Ih.designer = v.designer;
                    v.Ih.load(I.tc, z);
                    v.Ih.show(oa)
                };
                B.appendChild(H);
                B.fk = H
            }
            H = I.firstChild.BI;
            if (I.ra != null) H = I.ra; else if (I.tc != null) H = I.tc;
            I.innerHTML = "";
            V = v.Pm(z, H);
            I.appendChild(V);
            if (Q == "genie" && pui.J.config.kA && pui.vi(V) && V.type != "password") V.onfocus = function () {
                if (pui.J.config.kA &&
                    V.createTextRange != null) {
                    var oa = V.createTextRange();
                    oa && oa.execCommand("OverWrite", false, false);
                    pui.J.config.kA = false
                }
            };
            if (z.type == "color" && I.ra == null && I.tc == null) {
                var Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    v.Ad.yn = function (qa) {
                        V.value = qa;
                        f(D, B, I, z, "Select")
                    };
                    v.Ad.lo(V.value);
                    v.Ad.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if ((z.type == "long" || z.type ==
                "js") && I.ra == null && I.tc == null) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                if (z.type == "js" || z.Sh == true) {
                    Y.style.position = "relative";
                    Y.style.top = "-10px"
                }
                Y.onclick = function (oa) {
                    v.jd.pa = function (ma) {
                        ma && z.jp && z.jp(ma);
                        V.value = ma;
                        f(D, B, I, z);
                        V.focus()
                    };
                    v.jd.cC();
                    v.jd.db('<span style="font-weight:bold; text-transform:capitalize;">Edit ' + tc(B) + (z.type == "js" ? " event" : "") + "</span>");
                    v.jd.setValue(V.value);
                    var qa =
                        "text";
                    if (z.type == "js") qa = "javascript";
                    if (z.jp) qa = "sql";
                    v.jd.setMode(qa);
                    v.jd.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "responsive" && I.ra == null && I.tc == null && Q == "dspf") {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function () {
                    var oa = 1;
                    if (t["layout items"] != null) {
                        oa = parseInt(t["layout items"].innerText, 10);
                        if (isNaN(oa)) oa = 1
                    }
                    var qa = "";
                    if (t["container names"] !=
                        null) qa = t["container names"].innerText;
                    v.wl.Hu = function (ea, da, Ba) {
                        V.value = ea;
                        f(D, B, I, z, "Set");
                        if (v.designer.selection.e.length == 1) {
                            ea = v.designer.selection.e[0].c;
                            oa != da && ea.dom.Ie.Ro(ea, da);
                            Ba != qa && ea.dom.Ie.im(ea, "container names", Ba, "Change container names")
                        }
                    };
                    var ma = 1;
                    if (v.designer.selection.e.length == 1) ma = pui.designer.d.Iy(v.designer.selection.e[0].c.dom.children[0].children);
                    var ka;
                    if (t["container names"] != null) ka = t["container names"].innerText;
                    v.wl.lB(oa, V.value, ma, ka);
                    v.wl.show()
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "errmessages" && (a || v.designer.selection.e.length <= 1)) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    v.Ca.Jh = "Message";
                    v.Ca.designer = v.designer;
                    v.Ca.pa = function (da) {
                        V.value = da.length + " message";
                        if (da.length != 1) V.value += "s";
                        if (da.length == 0) V.value = "";
                        f(D, B, I, z)
                    };
                    v.Ca.Mh = function (da) {
                        if (pui.viewdesigner) {
                            if (da[0].value == "") {
                                pui.alert("Message Text is required.");
                                da[0].focus();
                                return false
                            }
                        } else {
                            if (da[0].value == "" && da[1].value == "") {
                                pui.alert("Message Text or Message Id is required.");
                                da[0].focus();
                                return false
                            }
                            if (da[0].value != "" && da[1].value != "") {
                                pui.alert("Message Text and Message Id are mutually exclusive. You may not select them both.");
                                da[0].focus();
                                return false
                            }
                            if (da[1].value != "" && da[2].value == "") {
                                pui.alert("Message File must be specified.");
                                da[2].focus();
                                return false
                            }
                            if (da[1].value == "" && da[2].value != "") {
                                pui.alert("Message Id must be specified when Message File is used.");
                                da[1].focus();
                                return false
                            }
                            if (da[2].value == "" && da[3].value != "") {
                                pui.alert("Message File must be specified when Library is used.");
                                da[1].focus();
                                return false
                            }
                            if (da[1].value == "" && da[4].value != "") {
                                pui.alert("Message Id must be specified when Replacement Data is used.");
                                da[1].focus();
                                return false
                            }
                        }
                    };
                    v.Ca.db("Error Messages");
                    for (var qa = rc(), ma = [], ka = 0; ka < z.Gc.length; ka++) {
                        var ea = qa[z.Gc[ka]];
                        if (!pui.viewdesigner || ea.viewdesigner != false) ma.push(ea)
                    }
                    v.Ca.load(ma, a ? a.properties : v.designer.selection.e.length >
                    0 ? v.designer.selection.e[0].c.properties : v.designer.Ga[v.designer.i.l]);
                    v.Ca.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "helptitles" && v.designer.selection.e.length <= 1) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    v.gh.Jh = "Help Title";
                    v.gh.designer = v.designer;
                    v.gh.pa = function (ea) {
                        V.value = ea.length + " help title";
                        if (ea.length != 1) V.value += "s";
                        if (ea.length ==
                            0) V.value = "";
                        f(D, B, I, z)
                    };
                    v.gh.Mh = function (ea) {
                        if (ea[0].value == "") {
                            pui.alert("Help Title is a required field.");
                            ea[0].focus();
                            return false
                        }
                    };
                    v.gh.db("Help Titles");
                    for (var qa = qc(pc()), ma = [], ka = 0; ka < z.Gc.length; ka++) ma.push(qa[z.Gc[ka]]);
                    v.gh.load(ma, a ? a.properties : v.designer.selection.e.length > 0 ? v.designer.selection.e[0].c.properties : v.designer.Ga[v.designer.i.l]);
                    v.gh.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "helppanels" && v.designer.selection.e.length <= 1) {
                Y =
                    document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    v.fh.Jh = "Help Panel";
                    v.fh.designer = v.designer;
                    v.fh.pa = function (ea) {
                        V.value = ea.length + " help panel";
                        if (ea.length != 1) V.value += "s";
                        if (ea.length == 0) V.value = "";
                        f(D, B, I, z)
                    };
                    v.fh.Mh = function (ea) {
                        if (ea[0].value == "" && ea[2].value == "") {
                            pui.alert("You must specify either a Help Record or a Help Panel Group.");
                            ea[0].focus();
                            return false
                        }
                        if (ea[0].value !=
                            "" && ea[2].value != "") {
                            pui.alert("You cannot specify both a Help Record and a Help Panel Group.");
                            ea[0].focus();
                            return false
                        }
                    };
                    v.fh.db("Help Panels");
                    for (var qa = qc(pc()), ma = [], ka = 0; ka < z.Gc.length; ka++) ma.push(qa[z.Gc[ka]]);
                    v.fh.load(ma, a ? a.properties : v.designer.selection.e.length > 0 ? v.designer.selection.e[0].c.properties : v.designer.Ga[v.designer.i.l]);
                    v.fh.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "messages" && v.designer.selection.e.length <= 1) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    v.Ca.Jh = "Message";
                    v.Ca.designer = v.designer;
                    v.Ca.pa = function (ea) {
                        V.value = ea.length + " message";
                        if (ea.length != 1) V.value += "s";
                        if (ea.length == 0) V.value = "";
                        f(D, B, I, z);
                        h(ea, v.designer.selection.e)
                    };
                    v.Ca.Mh = ra();
                    v.Ca.db("Messages");
                    for (var qa = rc(), ma = [], ka = 0; ka < z.Gc.length; ka++) ma.push(qa[z.Gc[ka]]);
                    v.Ca.load(ma, v.designer.selection.e.length > 0 ? v.designer.selection.e[0].c.properties :
                        v.designer.Ga[v.designer.i.l]);
                    v.Ca.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "destinationparams" && v.designer.selection.e.length == 1) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    v.Ca.Jh = "Destination Parameter";
                    v.Ca.designer = v.designer;
                    v.Ca.pa = function (ea) {
                        V.value = ea.length + " parameter";
                        if (ea.length != 1) V.value += "s";
                        if (ea.length == 0) V.value = "";
                        f(D,
                            B, I, z)
                    };
                    v.Ca.Mh = function (ea) {
                        if (ea[0].value == "") {
                            pui.alert("Parameter Name is required.");
                            ea[0].focus();
                            return false
                        }
                        if (ea[1].value == "") {
                            pui.alert("Parameter Value is required.");
                            ea[0].focus();
                            return false
                        }
                    };
                    v.Ca.db("Destination Parameters");
                    for (var qa = rc(), ma = [], ka = 0; ka < z.Gc.length; ka++) ma.push(qa[z.Gc[ka]]);
                    v.Ca.load(ma, v.designer.selection.e[0].c.properties);
                    v.Ca.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "eraseformats") {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    v.Ca.Jh = "Format";
                    v.Ca.designer = v.designer;
                    v.Ca.pa = function (ea) {
                        V.value = ea.length + " format";
                        if (ea.length != 1) V.value += "s";
                        if (ea.length == 0) V.value = "";
                        f(D, B, I, z)
                    };
                    v.Ca.Mh = function (ea) {
                        if (ea[0].value == "" && ea[1].value == "") {
                            pui.alert("Record format name is required.");
                            ea[0].focus();
                            return false
                        }
                        ea = S.wa(ea[0].value, "format");
                        if (ea != "") {
                            ea = "Record format name " + ea;
                            pui.alert(ea);
                            return false
                        }
                    };
                    v.Ca.db("Erase Formats");
                    for (var qa = qc(pc()), ma = [], ka = 0; ka < z.Gc.length; ka++) ma.push(qa[z.Gc[ka]]);
                    v.Ca.load(ma, v.designer.Ga[v.designer.i.l]);
                    v.Ca.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "inputfields") {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    v.Ca.Jh = "Input Parameter";
                    v.Ca.designer = v.designer;
                    v.Ca.pa = function (ea) {
                        V.value = ea.length + " parameter";
                        if (ea.length != 1) V.value += "s";
                        if (ea.length == 0) V.value = "";
                        f(D, B, I, z)
                    };
                    v.Ca.Mh = function (ea) {
                        if (ea[0].value == "") {
                            pui.alert("Parameter Name is required.");
                            ea[0].focus();
                            return false
                        }
                        if (ea[1].value == "") {
                            pui.alert("Bound Field is required.");
                            ea[0].focus();
                            return false
                        }
                    };
                    v.Ca.db("Input Parameters");
                    for (var qa = qc(pc()), ma = [], ka = 0; ka < z.Gc.length; ka++) ma.push(qa[z.Gc[ka]]);
                    v.Ca.load(ma, v.designer.Ga[v.designer.i.l]);
                    v.Ca.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if ((z.type == "image" ||
                z.type == "cssfile" || z.type == "jsfile") && I.ra == null && I.tc == null) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    if (pui.xd != true) {
                        v.Bh.fe = function (qa) {
                            if (pui.isCloud && (qa.substr(0, 1) === "/" || qa.substr(0, 1) === "\\")) qa = qa.substr(1);
                            V.value = z.name == "background image" ? "url('" + qa + "')" : qa;
                            f(D, B, I, z)
                        };
                        v.Bh.db('<span style="font-weight:bold; text-transform:capitalize;">Select ' + tc(B) + "</span>");
                        v.Bh.type =
                            z.type;
                        v.Bh.show(oa)
                    }
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "icon" && I.ra == null && I.tc == null) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    if (pui.xd != true) {
                        var qa = z.selection.e[0].c.properties["field type"] == "css button";
                        v.lg.fe = function (ma) {
                            if (z.name == "icon") V.value = ma;
                            f(D, B, I, z)
                        };
                        v.lg.db('<span style="font-weight:bold; text-transform:capitalize;">Select ' +
                            tc(B) + "</span>");
                        v.lg.show(oa, null, null, qa)
                    }
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "cssClass" && I.ra == null && I.tc == null) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    if (pui.xd != true) {
                        v.Cd.fe = function (qa) {
                            if (z.name.indexOf("css class") != -1) V.value = qa;
                            f(D, B, I, z)
                        };
                        v.Cd.xI = function (qa) {
                            if (!a) for (var ma = v.xa.selection.e, ka = 0; ka < ma.length; ka++) {
                                var ea = ma[ka].c;
                                if (ea.properties["field type"] == "graphic button" || ea.properties["field type"] == "icon") if (!ea.Vn) {
                                    ea.Vn = {};
                                    for (var da in ea.properties) ea.Vn[da] = ea.properties[da]
                                }
                                uc(v.xa, ea.properties, ea.dom, qa, false, ea, z.selection.e[ka])
                            }
                        };
                        v.Cd.mx = function () {
                            if (!a) for (var qa = z.selection.e, ma = 0; ma < qa.length; ma++) {
                                var ka = qa[ma].c, ea = ka.properties[z.name];
                                if (ka.properties["field type"] == "graphic button" || ka.properties["field type"] == "icon") if (ka.Vn) {
                                    ea = ka.Vn[z.name];
                                    ka.Vn = null
                                }
                                uc(z, ka.properties, ka.dom, ea, false, ka,
                                    z.selection.e[ma])
                            }
                        };
                        v.Cd.db('<span style="font-weight:bold; text-transform:capitalize;">Select ' + tc(B) + "</span>");
                        v.Cd.show(oa, null, null)
                    }
                };
                v.Cd.lM = function (oa) {
                    if (z.name === "css class") V.value = oa;
                    f(D, B, I, z)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "list" && I.ra == null && I.tc == null) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    v.Ij.pa = function (qa) {
                        V.value =
                            qa;
                        f(D, B, I, z)
                    };
                    v.Ij.Hl(V.value);
                    v.Ij.db('<span style="font-weight:bold; text-transform:capitalize;">Edit ' + tc(B) + "</span>");
                    v.Ij.show(oa)
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            if (z.type == "field" && I.ra == null && I.tc == null) {
                Y = document.createElement("input");
                Y.type = "button";
                Y.value = " ... ";
                Y.style.fontFamily = "Arial";
                Y.style.fontSize = "12px";
                Y.style.padding = "1px";
                Y.onclick = function (oa) {
                    var qa = S.getX(oa), ma = S.getY(oa), ka = "", ea, da;
                    oa = "";
                    for (ka = D; ka != null;) {
                        ka = ka.previousSibling;
                        if (ka.pH) {
                            oa =
                                ka.firstChild.innerHTML;
                            ka = pui.Wb(Zb(ka.firstChild.nextSibling.firstChild.innerHTML));
                            ka = ka.split("/");
                            if (ka.length == 2) {
                                da = ka[0];
                                ea = ka[1]
                            } else {
                                ea = ka[0];
                                da = ""
                            }
                            break
                        }
                    }
                    if (ea == "") pui.alert('You must first specify the "' + oa + '" property.'); else {
                        var Ba;
                        if (Q == "genie") Ba = cc("PUI0009101.PGM");
                        if (Q == "dspf") Ba = cc("PUI0009101.PGM", null, true);
                        var Ea = new pui.Ajax(Ba);
                        Ea.async = true;
                        Ea.method = "post";
                        Ea.postData = "file=" + encodeURIComponent(ea);
                        Ea.postData += "&library=" + encodeURIComponent(da);
                        if (Q == "genie") Ea.postData +=
                            "&AUTH=" + GENIE_AUTH;
                        if (pui.isCloud) Ea.postData += "&workspace_id=" + pui.cloud.ws.id;
                        Ea.postData += "&context=" + Q;
                        Ea.suppressAlert = true;
                        Ea.onready = function () {
                            v.dg.sn = z.multiple ? true : false;
                            var pa, ia;
                            if (Ea.Vc() != 200) ia = "HTTP " + Ea.Vc() + " - " + Ea.xj() + "."; else {
                                try {
                                    pa = eval("(" + Ea.jc() + ")")
                                } catch (m) {
                                    ia = "The server response is missing or invalid."
                                }
                                if (ia == null && pa.success != true) ia = pa.errorText
                            }
                            if (ia != null) pui.alert("Unable to retrieve field listing:\n" + ia); else {
                                v.dg.fields = pa.fields;
                                v.dg.pa = function (La) {
                                    V.value =
                                        La;
                                    f(D, B, I, z, "Select")
                                };
                                v.dg.pj = z.pj ? z.pj : null;
                                v.dg.hB(V.value);
                                v.dg.db('<span style="font-weight:bold; text-transform:capitalize;">Select ' + tc(B) + " from " + ea + "</span>");
                                v.dg.show(qa, ma)
                            }
                            Y.style.cursor = ""
                        };
                        if (pui.xd != true) {
                            Y.style.cursor = "progress";
                            Ea.send()
                        }
                    }
                };
                I.appendChild(document.createTextNode(" "));
                I.appendChild(Y)
            }
            V.readOnly || setTimeout(function () {
                try {
                    V.focus()
                } catch (oa) {
                }
            }, 200);
            v.Pe = D;
            v.xa = z;
            v.Oo = H;
            H = '<span style="font-weight:bold; text-transform:capitalize;">' + (z.displayName ? z.displayName :
                z.name) + "</span><br>";
            if (z.help) H += z.help;
            u.innerHTML = H
        }
    }

    function h(D, B) {
        for (var I = false, z = 0; z < B.length; z++) if (pui.f(B[z].c.properties.value)) I = true;
        if (I) {
            I = null;
            for (z = 0; z < D.length; z++) {
                for (var H = false, J = 0; J < D[z].length; J++) if (pui.f(D[z][J])) {
                    H = true;
                    break
                }
                if (!H) {
                    I = z;
                    break
                }
            }
            if (I == null) {
                H = rc().value;
                for (z = 0; z < B.length; z++) {
                    J = B[z].c;
                    if (pui.f(J.properties.value)) {
                        J.properties.value.designValue = "[" + J.properties.value.fieldName + "]";
                        uc(H, J.properties, J.dom, J.properties.value, true, J, B[z])
                    }
                }
            }
            if (I != null) {
                var K =
                        Zb(D[I][4].toUpperCase()), L = Zb(D[I][3].toUpperCase()), N = Zb(D[I][1].toUpperCase()),
                    O = Zb(D[I][2].toUpperCase());
                if (K == "") K = "*LIBL";
                jc({
                    url: cc("PUI0001118.PGM", null, false),
                    params: {msgPrefix1: N, msgId1: O, msgFile1: L, msgLibrary1: K},
                    method: "post",
                    async: true,
                    handler: function (V) {
                        if (V.success) {
                            var X = rc().value, ga = K + "/" + L + "/" + N + O, U = "[" + N + O + "]";
                            if (V.messages != null && V.messages[ga] != null && V.messages[ga].text != null) U = V.messages[ga].text;
                            for (V = 0; V < B.length; V++) {
                                ga = B[V].c;
                                if (pui.f(ga.properties.value)) {
                                    var Z = ga.properties.value;
                                    ga.properties.value.designValue = U;
                                    uc(X, ga.properties, ga.dom, Z, true, ga, B[V])
                                }
                            }
                        } else pui.alert(V.step + ": " + V.error)
                    }
                })
            }
        }
    }

    if (a) {
        a = JSON.parse(JSON.stringify(a));
        for (var g in a.properties) if (pui.f(a.properties[g]) && a.properties[g].longName) pui.designer.Ea = true
    }
    this.zu = this.Oo = this.xa = this.Pe = null;
    this.Ad = new pui.designer.mw;
    this.jd = new pui.designer.KD;
    this.Bh = new pui.designer.$r;
    this.Ij = new pui.designer.kk;
    if (pui.UNIVERSAL == null) {
        this.lg = new pui.designer.IC;
        this.Cd = new pui.designer.tC
    }
    this.fh = this.gh =
        this.Ca = this.za = null;
    if (Q == "dspf") {
        this.za = new pui.designer.rC(a);
        this.Ca = new pui.designer.Zr(a);
        this.Ca.za = this.za;
        this.gh = new pui.designer.Zr(a);
        this.gh.za = this.za;
        this.fh = new pui.designer.Zr(a);
        this.fh.za = this.za;
        if (pui.UNIVERSAL == null) this.wl = new pui.designer.d.vC
    } else this.za = new pui.designer.dL;
    this.dg = new pui.designer.qw;
    this.Ih = null;
    if (Q == "dspf" && !pui.ja) this.Ih = new pui.designer.ND;
    this.designer = null;
    this.width = 325;
    this.dy = true;
    this.Qa = null;
    this.Qv = true;
    var l = document.createElement("div"),
        n = document.createElement("div"), o = document.createElement("div"), i = document.createElement("input"),
        r = document.createElement("input"), k = document.createElement("img"), q = document.createElement("div"),
        s = document.createElement("table"), t = {}, u = document.createElement("div"),
        w = document.createElement("div"), v = this,
        E = pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/minus.png" : "/profoundui/proddata/images/icons/plus.gif",
        y = pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/plus.png" : "/profoundui/proddata/images/icons/minus.gif",
        F = false;
    l.style.width = v.width + "px";
    if (b == null) l.style.border = "2px solid #336699";
    if (b == null) {
        l.style.position = "absolute";
        l.style.top = Kd.get("properties_top", "150px");
        l.style.left = Kd.get("properties_left", "500px")
    }
    l.style.padding = "0px";
    l.style.zIndex = S.XK;
    l.style.whiteSpace = "normal";
    n.innerHTML = "Properties";
    n.style.fontSize = "13px";
    n.style.fontFamily = "Arial";
    n.style.backgroundColor = "#6699cc";
    n.style.padding = "3px";
    n.style.cursor = "move";
    n.style.fontWeight = "bold";
    n.style.color = "#ffffff";
    n.style.whiteSpace =
        "normal";
    if (typeof n.style.MozUserSelect != "undefined") n.style.MozUserSelect = "none";
    w.style.position = "absolute";
    w.style.right = "0px";
    w.style.top = "2px";
    w.style.width = "16px";
    w.style.height = "16px";
    w.style.fontSize = "1px";
    w.style.backgroundImage = "url('/profoundui/proddata/images/icons/collapse.gif')";
    w.style.backgroundPosition = "center";
    w.style.backgroundRepeat = "no-repeat";
    w.title = "collapse";
    w.style.cursor = "pointer";
    w.onclick = function () {
        if (q.style.display == "none") {
            q.style.display = "";
            o.style.display = "";
            u.style.display =
                "";
            w.style.backgroundImage = "url('/profoundui/proddata/images/icons/collapse.gif')";
            w.title = "collapse";
            Kd.set("properties_collapsed", "no")
        } else {
            q.style.display = "none";
            o.style.display = "none";
            u.style.display = "none";
            w.style.backgroundImage = "url('/profoundui/proddata/images/icons/expand.gif')";
            w.title = "expand";
            Kd.set("properties_collapsed", "yes")
        }
        Kd.save()
    };
    (new Image).src = "/profoundui/proddata/images/icons/expand.gif";
    Q == "genie" && Kd.get("properties_collapsed", "no") == "yes" && w.onclick();
    o.style.fontFamily =
        "Arial";
    o.style.fontSize = "11px";
    o.style.paddingTop = "2px";
    o.style.paddingBottom = "2px";
    o.style.paddingLeft = "1px";
    o.style.borderBottom = "1px solid #cccccc";
    o.style.backgroundColor = "#dddddd";
    i.style.fontFamily = "Arial";
    i.style.fontSize = "11px";
    i.style.width = "268px";
    i.style.margin = "1px";
    i.style.padding = "1px";
    i.style.color = "#808080";
    i.style.paddingLeft = "3px";
    i.style.borderStyle = "solid";
    i.style.borderWidth = "1px";
    i.style.borderColor = "#b5b8c8";
    i.onfocus = function () {
        v.xa != null && f(null, null, null, v.xa);
        i.style.color =
            "";
        k.style.display = "";
        i.style.borderColor = "#7eadd9";
        if (i.value == "Find Property") i.value = ""
    };
    i.onblur = function () {
        if (i.value == "" || i.value == "Find Property") {
            i.style.color = "#808080";
            i.style.borderColor = "";
            i.value = "Find Property";
            k.style.display = "none"
        }
    };
    i.onkeydown = function (D) {
        if (!D) D = window.event;
        var B = D.keyCode;
        if (B == 37 || B == 38 || B == 39 || B == 40 || B == 46) {
            if (window.event) window.event.cancelBubble = true;
            if (D.preventDefault) D.cancelBubble = true
        }
    };
    i.onkeyup = function () {
        var D = i.value;
        if (D == "Find Property") D = "";
        var B =
            false;
        if (D.length >= 1 && D.substr(0, 1) == "+") {
            D = D.substr(1);
            B = true
        }
        D = Zb(D);
        D = D.toLowerCase();
        for (var I = r.value == "Set", z, H = 0; H < s.rows.length; H++) {
            var J = s.rows[H];
            if (D == "" && !I) if (J.cells.length < 2) {
                z = J.firstChild.children[0].status == "-";
                J.style.display = ""
            } else J.style.display = z ? "" : "none"; else if (J.cells.length < 2 && !B) J.style.display = "none"; else if (I && J.cells.length >= 2 && J.cells[0].style.fontWeight != "bold") J.style.display = "none"; else {
                if (!B) J.style.display = J.firstChild.innerHTML.indexOf(D) >= 0 ? "" : "none";
                if (B &&
                    J.cells.length < 2) if (tc(J.firstChild).toLowerCase().indexOf(D) >= 0) {
                    J.style.display = "";
                    z = J.firstChild.children[0].status == "-"
                } else {
                    J.style.display = "none";
                    z = false
                }
                if (B && J.cells.length >= 2) J.style.display = z ? "" : "none"
            }
        }
    };
    o.appendChild(i);
    r.style.borderWidth = "1px";
    r.style.borderStyle = "solid";
    r.style.borderColor = "#cccccc";
    r.style.width = "40px";
    r.style.fontFamily = "sans-serif";
    r.style.fontSize = "11px";
    r.style.cursor = "pointer";
    r.type = "button";
    r.value = "All";
    r.title = "Showing All Properties";
    r.style.backgroundColor =
        "#f0f0f0";
    r.style.color = "#000000";
    if (typeof r.style.MozUserSelect != "undefined") r.style.MozUserSelect = "none";
    r.onmouseover = function () {
        r.style.borderColor = "#ffffff"
    };
    r.onmouseout = function () {
        r.style.borderColor = "#cccccc"
    };
    r.onclick = function () {
        if (r.value == "Set") {
            r.value = "All";
            r.style.color = "#000000";
            r.style.fontWeight = "normal";
            r.title = "Showing All Properties"
        } else {
            r.value = "Set";
            r.style.color = "#336699";
            r.style.fontWeight = "bold";
            r.title = "Showing Set Properties Only"
        }
        i.onkeyup()
    };
    o.appendChild(document.createTextNode(" "));
    o.appendChild(r);
    k.src = "/profoundui/proddata/images/close-button.gif";
    k.style.position = "absolute";
    if (Q == "dspf") {
        k.style.top = "9px";
        k.style.right = "52px"
    }
    if (Q == "genie") {
        k.style.top = "31px";
        k.style.right = "59px";
        if (!pui.is_quirksmode) k.style.right = "55px"
    }
    k.style.cursor = "pointer";
    k.style.display = "none";
    k.onclick = function () {
        i.blur();
        i.value = "Find Property";
        i.style.color = "#808080";
        i.style.borderColor = "";
        k.style.display = "none";
        i.onkeyup()
    };
    o.appendChild(k);
    q.style.overflow = "auto";
    q.style.height = "298px";
    q.style.backgroundColor =
        "#ffffff";
    q.style.padding = "0px";
    q.style.whiteSpace = "normal";
    q.style.overflowX = "hidden";
    s.cellSpacing = 0;
    s.cellPadding = 2;
    s.style.fontFamily = "Arial";
    s.style.fontSize = "12px";
    s.style.emptyCells = "show";
    u.style.height = "100px";
    u.innerHTML = "";
    u.style.fontSize = "12px";
    u.style.fontFamily = "Arial";
    u.style.borderTop = "1px solid #808080";
    u.style.padding = "3px";
    u.style.backgroundColor = "#eeeeee";
    u.style.overflow = "auto";
    u.style.textAlign = "left";
    u.style.whiteSpace = "normal";
    if (b == null) {
        l.appendChild(n);
        l.appendChild(w)
    }
    l.appendChild(o);
    l.appendChild(q);
    q.appendChild(s);
    l.appendChild(u);
    b == null ? document.body.appendChild(l) : b.appendChild(l);
    pui.rd({
        wc: n, move: l, Hj: -300, opacity: 85, Bo: function () {
            Kd.set("properties_top", l.style.top);
            Kd.set("properties_left", l.style.left);
            Kd.save()
        }
    });
    this.io = function (D) {
        if (Q == "dspf") Ext.getCmp("ideProps").setTitle(D); else n.innerHTML = D
    };
    this.hide = function () {
        l.style.display = "none"
    };
    this.show = function () {
        l.style.display = ""
    };
    this.rJ = function (D) {
        i.style.color = "";
        k.style.display = "";
        i.style.borderColor = "#7eadd9";
        i.value = D;
        i.onkeyup()
    };
    this.setWidth = function (D) {
        l.style.width = D + "px";
        var B = D - 57;
        if (B < 40) B = 40;
        i.style.width = B + "px";
        if (v.width != D) {
            v.width = D;
            v.refresh()
        }
    };
    this.setHeight = function (D) {
        var B = D - 30;
        D = 100;
        if (B < 250) D = 50;
        if (B < 100) D = 0;
        B = B - D;
        if (B < 0) B = 0;
        q.style.height = B + "px";
        u.style.height = D + "px"
    };
    this.refresh = function () {
        if (v.Ox) v.KA = true; else {
            var D = i.value;
            if (D == "Find Property") D = "";
            var B = false;
            if (D.length >= 1 && D.substr(0, 1) == "+") {
                D = D.substr(1);
                B = true
            }
            D = Zb(D);
            D = D.toLowerCase();
            v.Ad.hide();
            v.Ij.hide();
            v.lg && v.lg.hide();
            v.Cd && v.Cd.hide();
            v.za != null && v.za.hide();
            v.Ca != null && v.Ca.hide();
            v.Ih != null && v.Ih.hide();
            v.dg.hide();
            var I = v.zu, z = {}, H = {}, J = {};
            v.clear();
            if (a) {
                for (var K in a.properties) {
                    z[K] = a.properties[K];
                    H[K] = true
                }
                J[z["field type"]] = true
            } else {
                var L = v.designer.selection;
                if (L == null) return;
                if (L.e.length == 1 && L.e[0].c.dom.Jn != null) I = L.e[0].c.dom.Jn;
                if (L.e.length <= 0) {
                    I = pc(v.designer.i);
                    z = v.designer.Ga[v.designer.i.l];
                    H = v.designer.Nd[v.designer.i.l]
                } else {
                    var N = L.e[0].c.properties;
                    K = L.e[0].c.m;
                    for (var O in N) {
                        z[O] = N[O];
                        H[O] = K[O]
                    }
                    for (O in z) for (var V = 1; V < L.e.length; V++) {
                        N = L.e[V].c.m;
                        if (L.e[V].c.properties[O] != z[O]) z[O] = null;
                        if (N[O] == true) H[O] = true
                    }
                }
                N = true;
                if (Q != "genie") N = false;
                for (V = 0; V < L.e.length; V++) {
                    K = L.e[V].c;
                    O = K.properties["field type"];
                    if (Q == "genie") {
                        if (K.properties.newitem == "true") N = false;
                        if (K.properties["field type"] != "output field" && K.properties["field type"] != "hyperlink" && K.properties["field type"] != "button") K.properties["field type"] == "textbox" && K.properties["css class"] != null && K.properties["css class"].indexOf("readOnly") !=
                        -1 || (N = false);
                        if (K.originalValue == null || Zb(K.originalValue) == "") N = false
                    }
                    J[O] = true
                }
            }
            var X = true;
            for (O = 0; O < I.length; O++) {
                K = I[O];
                K.value = z[K.name] != null ? z[K.name] : "";
                K.ta = H[K.name];
                V = Q == "genie" && pui.Na && z["field type"] != null && z["field type"] == "grid";
                var ga = false;
                if (K.hide != true) if (!K.br || pui.secLevel >= K.br) if (K.j == null || K.j == Q || K.j == "genie-nohandler" && Q == "genie" && !pui.Na || V && pui.bG.XL(K)) if (K.controls != null) {
                    ga = true;
                    for (var U in J) {
                        var Z = false;
                        for (V = 0; V < K.controls.length; V++) if (K.controls[V] == U) {
                            Z = true;
                            break
                        }
                        if (!Z) {
                            ga = false;
                            break
                        }
                    }
                } else ga = true;
                if (K.name == "screen identifier" && !N) ga = false;
                if (K.viewdesigner === false && pui.viewdesigner) ga = false;
                if (K.viewdesigner === true && !pui.viewdesigner) ga = false;
                if (a && K.name == "id") ga = false;
                if (ga) {
                    if (K.category) {
                        X = c(K.name);
                        X = Kd.get(X, "-") == "-"
                    }
                    K.selection = L;
                    v.ks(K, X);
                    if (K.category && X && B && K.name.toLowerCase().indexOf(D) < 0) X = false;
                    if (K.U == true) {
                        V = K.name;
                        ga = z;
                        Z = 1;
                        var la = V.length;
                        for (var Y in ga) if (ga[Y] != null && ga[Y] != "" && Y.substr(0, la) == V) {
                            var oa = Y.split(" ");
                            if (oa.length >
                                1 && !isNaN(oa[oa.length - 1])) {
                                oa = parseInt(oa[oa.length - 1]);
                                if (oa > Z) Z = oa
                            }
                        }
                        V = Z;
                        for (ga = 2; ga <= V; ga++) {
                            Z = K.name + " " + ga;
                            v.ks({
                                name: Z,
                                value: z[Z],
                                type: K.type,
                                choices: K.choices,
                                ta: true,
                                U: true,
                                readOnly: K.readOnly,
                                help: K.help,
                                bind: K.bind,
                                j: K.j,
                                format: K.format,
                                selection: K.selection,
                                il: K
                            }, X)
                        }
                    }
                }
            }
            if (L && L.e.length <= 0) v.io((pui.ja ? "Format" : "Screen") + " Properties - " + v.designer.i.name); else if (a || L.e.length == 1) {
                O = a ? a.properties["field type"] : L.e[0].c.properties["field type"];
                D = pui.ja ? "Field" : pui.widgets[O].menuName;
                if (typeof D != "string") {
                    B = O.split(" ");
                    D = "";
                    for (O = 0; O < B.length; O++) {
                        I = B[O];
                        I = I.charAt(0).toUpperCase() + I.substr(1);
                        if (D != "") D += " ";
                        D += I
                    }
                }
                if (D.substr(0, 7) == "Styled ") D = D.substr(7);
                if (!a) var qa = L.e[0].c.properties.id;
                if (pui.ja) {
                    L = L.e[0].c.properties["bound field"];
                    qa = L.fieldName;
                    if (L.longName != null) qa = L.longName
                }
                v.io(D + " Properties - " + qa)
            } else v.io("Properties - " + L.e.length + " items")
        }
    };
    this.rs = function () {
        v.xa != null && f(null, null, null, v.xa)
    };
    this.clear = function () {
        for (t = {}; s.rows.length > 0;) {
            var D = s.rows.length -
                1, B = s.rows[D].cells;
            if (B.length >= 2) {
                B = B[1].firstChild;
                if (B != null && B.onblur != null) B.onblur = null
            }
            s.deleteRow(D)
        }
        v.Pe = null;
        v.xa = null;
        u.innerHTML = "";
        i.blur();
        if (!v.Qv || i.value == "") {
            i.value = "Find Property";
            i.style.color = "#808080";
            i.style.borderColor = "";
            k.style.display = "none"
        }
    };
    this.ks = function (D, B, I) {
        var z = i.value;
        if (z == "Find Property") z = "";
        var H = false;
        if (z.length >= 1 && z.substr(0, 1) == "+") {
            z = z.substr(1);
            H = true
        }
        z = Zb(z);
        z = z.toLowerCase();
        var J = r.value == "Set";
        if (I == null) I = s.insertRow(s.rows.length);
        if (D.type ==
            "file") I.pH = true;
        var K = I.insertCell(0);
        K.style.padding = "1px";
        if (s.firstChild == null) K.style.borderTop = "1px solid #cccccc";
        K.style.borderBottom = "1px solid #cccccc";
        K.style.borderLeft = "1px solid #cccccc";
        if (Q == "dspf") {
            K.onselectstart = za(false);
            if (typeof K.style.MozUserSelect != "undefined") K.style.MozUserSelect = "none"
        }
        var L = D.name;
        if (D.displayName) {
            L = D.displayName;
            K.XD = D.name
        }
        if (D.category) {
            if (pui.flatlook) {
                K.style.verticalAlign = "vertical";
                K.style.paddingTop = "6px";
                K.style.paddingLeft = "5px";
                K.style.paddingRight =
                    "5px"
            }
            var N;
            if (v.dy) {
                N = document.createElement("img");
                N.style.cursor = "pointer";
                N.style.height = "18px";
                N.style.width = "16px";
                if (pui.flatlook) N.style.cssFloat = "right"; else {
                    N.style.marginBottom = "-4px";
                    N.style.paddingRight = "3px"
                }
                N.src = B ? y : E
            } else {
                N = document.createElement("span");
                N.style.border = "1px solid #cccccc";
                N.style.fontFamily = "Courier New";
                N.style.fontSize = "9px";
                N.style.cursor = "pointer";
                N.style.paddingLeft = "2px";
                N.style.paddingRight = "2px";
                N.style.paddingTop = "1px";
                N.style.paddingBottom = "1px";
                N.style.backgroundColor =
                    "#ffffff";
                N.innerHTML = B ? "-" : "+"
            }
            N.status = B ? "-" : "+";
            K.appendChild(document.createTextNode(" "));
            K.appendChild(N);
            I.onclick = function () {
                d(null, N)
            };
            I.style.cursor = "pointer";
            if (v.Qv) if (H) {
                if (D.name.toLowerCase().indexOf(z) < 0) I.style.display = "none"
            } else if (z != "" || J) I.style.display = "none"
        } else {
            if (v.Qv && (z != "" || J)) {
                if (!H && L.indexOf(z) < 0 || H && !B) I.style.display = "none";
                if (J && D.ta != true) I.style.display = "none"
            } else if (!B) I.style.display = "none";
            if (D.ta == true) {
                K.style.color = "#336699";
                K.style.fontWeight = "bold";
                K.style.paddingLeft =
                    "3px"
            } else {
                K.style.color = "#666666";
                K.style.fontWeight = "normal";
                K.style.paddingLeft = "1px"
            }
        }
        K.appendChild(document.createTextNode(L));
        K.style.height = "27px";
        if (D.category) {
            K.colSpan = 2;
            K.style.backgroundColor = "#eeeeee";
            K.style.fontWeight = "bold";
            K.style.width = v.width + "px"
        } else {
            K.style.width = "175px";
            var O = I.insertCell(1);
            t[L] = O;
            O.style.padding = "1px";
            if (s.firstChild == null) O.style.borderTop = "1px solid #cccccc";
            O.style.borderBottom = "1px solid #cccccc";
            O.style.borderLeft = "1px solid #cccccc";
            O.style.borderRight =
                "1px solid #cccccc";
            if (pui.f(D.value)) O.ra = D.value; else if (pui.Ia(D.value)) O.tc = D.value;
            O.appendChild(v.Lt(D.value));
            B = v.width - 175;
            if (B < 40) B = 40;
            O.style.width = B + "px";
            O.style.height = "27px";
            I.style.cursor = "default";
            I.onmousedown = function (V) {
                if (!V) V = window.event;
                var X = S.getTarget(V).tagName;
                if (!(X == "INPUT" || X == "SELECT" || X == "TEXTAREA")) {
                    f(I, K, O, D);
                    if (pui.Ae(V)) {
                        f(null, null, null, v.xa);
                        e(V, I, K, O, D);
                        S.ua(V);
                        V.stopPropagation && V.stopPropagation()
                    }
                }
            }
        }
    };
    this.he = function (D, B, I, z) {
        if (i.value != "" && i.value != "Find Property") {
            i.blur();
            i.value = "Find Property";
            i.style.color = "#808080";
            i.style.borderColor = "";
            i.onkeyup();
            k.style.display = "none"
        }
        for (var H = null, J = 0; J < s.rows.length; J++) {
            var K = s.rows[J];
            if (K.cells.length == 1) H = K.firstChild.firstChild;
            if (K.cells.length == 2) {
                var L = K.cells[0];
                if (L.XD === D || tc(L) == D) {
                    K.style.display == "none" && H != null && d(null, H);
                    if (K.style.display != "none") {
                        H = K.cells[1];
                        D = (B != null ? qc(B) : rc())[D];
                        D.selection = v.designer.selection;
                        f(K, L, H, D);
                        if (I == true && Q == "dspf") {
                            var N;
                            if (L.hj) N = L.hj.onclick; else if (L.fk) N = L.fk.onclick;
                            N(z)
                        }
                    }
                    return
                }
            }
        }
    };
    this.TF = function () {
        q.style.display == "none" && w.onclick()
    };
    this.Hg = function (D, B, I) {
        if (B == null) B = "";
        var z = t[D];
        if (z != null) {
            var H = z.previousSibling, J = z.parentNode, K = i.value;
            if (K == "Find Property") K = "";
            var L = false;
            if (K.length >= 1 && K.substr(0, 1) == "+") {
                K = K.substr(1);
                L = true
            }
            K = Zb(K);
            K = K.toLowerCase();
            var N = r.value == "Set";
            if (v.xa != null && v.xa.name == D) {
                if (z.firstChild != null && (z.firstChild.tagName == "INPUT" || z.firstChild.tagName == "SELECT" || z.firstChild.tagName == "TEXTAREA")) z.firstChild.value = B;
                f(null,
                    null, null, v.xa)
            }
            if (pui.f(B)) z.ra = B; else if (pui.Ia(B)) z.tc = B; else {
                z.ra = null;
                z.tc = null
            }
            z.innerHTML = "";
            z.appendChild(v.Lt(B));
            if (I == true) {
                H.style.color = "#336699";
                H.style.fontWeight = "bold";
                H.style.paddingLeft = "3px";
                if (N && J.style.display == "none") {
                    if (K == "") J.style.display = "";
                    if (!L && K != "" && H.innerHTML.indexOf(K) >= 0) J.style.display = "";
                    if (L && K != "" && J.style.display == "none") {
                        for (D = J.previousSibling; D.cells.length >= 2;) D = D.previousSibling;
                        if (tc(D.firstChild).toLowerCase().indexOf(K) >= 0) J.style.display = ""
                    }
                }
            } else {
                H.style.color =
                    "#666666";
                H.style.fontWeight = "normal";
                H.style.paddingLeft = "1px";
                if (N) J.style.display = "none"
            }
            v.designer.qb();
            Q === "dspf" && pui.ide.refreshRibbon()
        }
    };
    this.ea = function (D) {
        var B = v.designer.selection, I, z, H = {};
        z = {};
        if (B.e.length <= 0) {
            H = v.designer.Ga[v.designer.i.l];
            I = H[D];
            z = H[D]
        } else {
            H = B.e[0].c.properties;
            z = B.e[0].c.m;
            I = H[D];
            z = z[D];
            for (var J = 1; J < B.e.length; J++) {
                var K = B.e[J].c.m;
                if (B.e[J].c.properties[D] != H[D]) {
                    I = "";
                    if (z) break
                }
                if (K[D] == true) z = true
            }
            if (z && (D == "left" || D == "top" || D == "right" || D == "bottom")) B.Eq()
        }
        v.Hg(D,
            I, z)
    };
    this.Lt = function (D) {
        var B = false, I = false, z;
        if (pui.f(D)) {
            z = D.fieldName;
            if (pui.designer.Ea && D.longName != null) z = D.longName;
            B = true
        } else if (pui.Ia(D)) {
            z = D.designValue;
            I = true
        } else z = String(D);
        D = document.createElement("div");
        var H = v.width - 180;
        if (H < 35) H = 35;
        D.style.width = H + "px";
        D.style.whiteSpace = "nowrap";
        D.style.overflow = "hidden";
        D.style.padding = "1px";
        if (B) {
            D.style.color = "#339933";
            D.style.fontWeight = "bold"
        } else if (I) {
            D.style.color = "purple";
            D.style.fontWeight = "bold"
        }
        B = z.replace(/ /g, "\u00a0");
        D.appendChild(document.createTextNode(B));
        D.BI = z;
        return D
    };
    this.Pm = function (D, B, I) {
        var z, H = false;
        if ((I = D.choices != null && !pui.f(B) && !pui.Ia(B) && I != true) && B != null && B != "") if (pui.ic(D.choices, "Other...") != -1 && pui.ic(D.choices, B) == -1) I = false;
        if (I) {
            z = document.createElement("select");
            z.style.backgroundColor = "#f0ffff";
            if (D.Mg == null || D.Mg == true) z.options[0] = new Option("", "");
            if (B == "") H = true;
            I = D.choices;
            I = typeof D.choices == "function" ? D.choices() : D.choices;
            for (var J = 0; J < I.length; J++) {
                var K = I[J], L = new Option(K, K);
                z.options[z.options.length] = L;
                if (K ==
                    B) H = true
            }
            if (!H) if (z.options[z.options.length - 1].value == "Other...") {
                z.options[z.options.length - 1] = new Option(B, B);
                z.options[z.options.length] = new Option("Other...", "Other...")
            } else z.options[z.options.length] = new Option(B, B);
            z.onchange = function () {
                if (z.value == "Other...") {
                    var N = document.createElement("input");
                    N.style.fontFamily = "Arial";
                    N.style.fontSize = "12px";
                    var O = v.width - 180;
                    if (O < 35) O = 35;
                    N.style.width = O + "px";
                    N.style.padding = "1px";
                    N.className = "propertyInput";
                    N.value = D.value;
                    N.onkeydown = function (V) {
                        if (!V) V =
                            window.event;
                        V.keyCode == 13 && f(null, null, null, D)
                    };
                    N.onblur = function () {
                        f(null, null, null, D)
                    };
                    z.parentNode.replaceChild(N, z);
                    setTimeout(function () {
                        N.focus()
                    }, 1)
                } else f(v.Pe, v.Pe.firstChild, v.Pe.firstChild.nextSibling, D)
            }
        } else if (D.type == "js" || D.Sh == true) {
            z = document.createElement("textarea");
            z.style.padding = "1px";
            z.style.overflowY = "scroll";
            z.setAttribute("rows", "2");
            z.style.height = "34px"
        } else {
            z = document.createElement("input");
            z.style.padding = "1px";
            if (D.maxLength != null) z.maxLength = D.maxLength
        }
        H = v.width -
            180;
        if (!pui.f(B) && !pui.Ia(B)) {
            if (D.type == "color") H -= 55;
            if (D.type == "list") H -= 35;
            if (D.type == "field") H -= 35;
            if (D.type == "js") H -= 35;
            if (D.type == "long") H -= 35;
            if (D.type == "responsive") H -= 35;
            if (D.type == "messages") H -= 30;
            if (D.type == "errmessages") H -= 30;
            if (D.type == "eraseformats") H -= 30;
            if (D.type == "inputfields" || D.type == "destinationparams") H -= 30;
            if (D.type == "helptitles") H -= 30;
            if (D.type == "helppanels") H -= 30;
            if (D.type == "image") H -= 35;
            if (D.type == "icon") H -= 35;
            if (D.type == "cssClass") H -= 35;
            if (D.type == "cssfile") H -= 35;
            if (D.type ==
                "jsfile") H -= 35;
            if (D.name === "record format name" && pui.pjsDefaultMode === "compatibility") z.style.textTransform = "lowercase";
            if (D.uppercase) z.style.textTransform = "uppercase"
        }
        if (H < 40) H = 40;
        z.style.width = H + "px";
        z.style.fontFamily = "Arial";
        z.style.fontSize = "12px";
        z.className = "propertyInput";
        z.value = B;
        z.onkeydown = function (N) {
            if (!N) N = window.event;
            if (N.keyCode == 13) {
                F = true;
                f(null, null, null, D);
                F = false
            }
        };
        if (D.type != "color" && D.name != "id") z.onblur = function () {
            F || (v.Pe != null ? f(v.Pe, v.Pe.firstChild, v.Pe.firstChild.nextSibling,
                D) : f(null, null, null, D))
        };
        H = false;
        if (pui.f(B) || pui.Ia(B)) H = true;
        if (D.readOnly == true) H = true;
        if (D.name == "id") {
            if (v.designer.selection.e.length > 1) H = true;
            if (v.designer.selection.e.length == 1 && v.designer.selection.e[0].c.properties.newitem != "true") H = true
        }
        if (H) {
            z.readOnly = true;
            z.style.backgroundColor = "#ffffff";
            z.style.border = "0px solid #ffffff";
            if (pui.f(B)) {
                z.style.fontWeight = "bold";
                z.style.color = "#339933";
                z.value = B.fieldName;
                if (pui.designer.Ea && B.longName != null) z.value = B.longName
            } else if (pui.Ia(B)) {
                z.style.fontWeight =
                    "bold";
                z.style.color = "purple";
                z.value = B.designValue
            }
        }
        if (D.name == "parent window") {
            z.readOnly = true;
            z.style.backgroundColor = "#ffffff";
            z.style.border = "0px solid #ffffff"
        }
        return z
    };
    this.$I = function (D, B) {
        function I(O) {
            return O <= 1 ? z.name : z.name + " " + O
        }

        var z = B.il;
        if (z == null) z = B;
        var H = tc(D.firstChild), J = H.split(" ");
        J = Number(J[J.length - 1]);
        if (isNaN(J) || J < 2) J = 1;
        H = J;
        var K = B.selection.e, L, N;
        if (K.length == 1) {
            L = K[0].c.properties;
            N = K[0].c.m
        } else if (K.length == 0) {
            L = v.designer.Ga[v.designer.i.l];
            N = v.designer.Nd[v.designer.i.l]
        } else return;
        if (K.length == 1) for (K = K[0].c; L[I(H)] != null;) {
            v.designer.n.add(K, I(H));
            H++
        } else L[I(J + 1)] != null && v.designer.n.clear();
        for (; L[I(J + 1)] != null;) {
            J++;
            K = I(J - 1);
            H = I(J);
            L[K] = L[H];
            delete L[H];
            N[K] = N[H];
            N[H] = false
        }
    };
    this.destroy = function () {
        l.parentNode.removeChild(l);
        l = null
    };
    this.Cy = function () {
        if (a) return JSON.parse(JSON.stringify(a.properties))
    }
};
pui.designer.kk = function () {
    function b() {
        var t = false;
        if (f.selectedIndex < 0) t = true;
        n.disabled = t;
        if (!t && f.options.length < 2) t = true;
        o.disabled = t;
        i.disabled = t
    }

    this.Gu = this.Nj = this.Xc = this.pa = null;
    this.Lh = false;
    this.vk = this.tk = true;
    this.uppercase = false;
    var a = document.createElement("div"), c = document.createElement("div"), d = document.createElement("div"),
        e = document.createElement("input");
    document.createElement("input");
    var f = document.createElement("select"), h = document.createElement("div"), g = document.createElement("div"),
        l = document.createElement("input"), n = document.createElement("input"), o = document.createElement("input"),
        i = document.createElement("input"), r = document.createElement("input"), k = document.createElement("input"),
        q = this;
    a.style.width = "305px";
    a.style.border = "2px solid #336699";
    a.style.position = "absolute";
    a.style.top = "50px";
    a.style.left = "50px";
    a.style.padding = "0px";
    a.style.zIndex = S.VK;
    a.style.visibility = "hidden";
    a.style.display = "none";
    a.style.height = "222px";
    a.style.overflow = "hidden";
    S.W(document, "mousedown",
        function (t) {
            for (t = S.getTarget(t); t != null;) {
                if (t == a) return;
                t = t.parentNode
            }
        });
    c.innerHTML = "Edit List";
    c.style.fontSize = "12px";
    c.style.fontFamily = "Arial";
    c.style.backgroundColor = "#6699cc";
    c.style.padding = "3px";
    c.style.cursor = "move";
    c.style.fontWeight = "bold";
    c.style.color = "#ffffff";
    c.style.position = "absolute";
    c.style.left = "0px";
    c.style.top = "0px";
    c.style.whiteSpace = "normal";
    c.style.width = "100%";
    if (typeof c.style.MozUserSelect != "undefined") c.style.MozUserSelect = "none";
    d.style.overflow = "auto";
    d.style.height =
        "202px";
    d.style.backgroundColor = "#ffffff";
    d.style.padding = "0px";
    d.style.position = "absolute";
    d.style.left = "0px";
    d.style.top = "20px";
    d.style.whiteSpace = "normal";
    d.style.width = "100%";
    var s = null;
    if (Q == "dspf") s = pui.Gf(a, c, d, function () {
        q.hide()
    });
    h.style.position = "absolute";
    h.style.left = "10px";
    h.style.top = "10px";
    h.style.fontFamily = "Trebuchet MS";
    h.style.fontSize = "13px";
    h.innerHTML = "Specify items to add to the list:";
    e.style.position = "absolute";
    e.style.left = "10px";
    e.style.top = "30px";
    e.style.width = "200px";
    e.style.fontFamily = "Arial";
    e.style.fontSize = "12px";
    e.onkeydown = function (t) {
        if (!t) t = window.event;
        var u = t.keyCode;
        if (u == 13) {
            e.value == "" && !r.disabled ? r.onclick() : l.onclick();
            yb(t)
        }
        u == 27 && k.onclick();
        if (u == 37 || u == 38 || u == 39 || u == 40 || u == 46) t.cancelBubble = true
    };
    l.style.position = "absolute";
    l.style.left = "215px";
    l.style.top = "30px";
    l.style.width = "75px";
    l.style.fontFamily = "Arial";
    l.style.fontSize = "11px";
    l.type = "button";
    l.value = "Add";
    l.onclick = function () {
        if (typeof q.Nj == "function") {
            var t = q.Nj(e.value);
            if (t === false) {
                e.focus();
                return
            } else e.value = t
        }
        if (!q.tk && Zb(e.value) == "") {
            pui.alert("Item cannot be blank.");
            e.value = "";
            e.focus()
        } else {
            if (!q.vk) {
                t = false;
                var u = e.value;
                if (q.uppercase) u = u.toUpperCase();
                for (var w = 0; w < f.options.length; w++) {
                    var v = f.options[w].value;
                    if (q.uppercase) v = v.toUpperCase();
                    if (u == v) {
                        t = true;
                        break
                    }
                }
                if (t) {
                    pui.alert("This item already exists in the list.");
                    e.focus();
                    return
                }
            }
            if (q.uppercase) e.value = e.value.toUpperCase();
            f.options[f.options.length] = new Option(e.value, e.value);
            f.selectedIndex = f.options.length -
                1;
            e.value = "";
            e.focus();
            r.disabled = false;
            b()
        }
    };
    g.style.position = "absolute";
    g.style.left = "10px";
    g.style.top = "60px";
    g.style.fontFamily = "Trebuchet MS";
    g.style.fontSize = "13px";
    g.innerHTML = "List:";
    f.style.position = "absolute";
    f.style.left = "10px";
    f.style.top = "80px";
    f.style.width = "200px";
    f.style.fontFamily = "Arial";
    f.style.fontSize = "12px";
    f.size = 5;
    f.onclick = function () {
        if (f.selectedIndex >= 0) {
            e.value = f.options[f.selectedIndex].value;
            e.focus()
        }
        b()
    };
    f.onchange = function () {
        b()
    };
    f.ondblclick = function () {
        q.Gu != null &&
        f.selectedIndex >= 0 && q.Gu(f.options[f.selectedIndex].value)
    };
    n.style.position = "absolute";
    n.style.left = "215px";
    n.style.top = "80px";
    n.style.width = "75px";
    n.style.fontFamily = "Arial";
    n.style.fontSize = "11px";
    n.type = "button";
    n.value = "Remove";
    n.onclick = function () {
        x = f.selectedIndex;
        f.remove(x);
        if (x >= f.options.length) x -= 1;
        if (x >= 0) f.selectedIndex = x;
        b();
        r.disabled = false;
        e.focus()
    };
    o.style.position = "absolute";
    o.style.left = "215px";
    o.style.top = "105px";
    o.style.width = "75px";
    o.style.fontFamily = "Arial";
    o.style.fontSize =
        "11px";
    o.type = "button";
    o.value = "Move Up";
    o.onclick = function () {
        var t = f.selectedIndex;
        if (t != 0) {
            var u = f.options[t - 1].text, w = f.options[t - 1].value;
            f.options[t - 1].text = f.options[t].text;
            f.options[t - 1].value = f.options[t].value;
            f.options[t].text = u;
            f.options[t].value = w;
            f.selectedIndex = t - 1;
            r.disabled = false;
            e.focus()
        }
    };
    i.style.position = "absolute";
    i.style.left = "215px";
    i.style.top = "130px";
    i.style.width = "75px";
    i.style.fontFamily = "Arial";
    i.style.fontSize = "11px";
    i.type = "button";
    i.value = "Move Down";
    i.onclick = function () {
        var t =
            f.selectedIndex;
        if (!(t >= f.options.length - 1)) {
            var u = f.options[t + 1].text, w = f.options[t + 1].value;
            f.options[t + 1].text = f.options[t].text;
            f.options[t + 1].value = f.options[t].value;
            f.options[t].text = u;
            f.options[t].value = w;
            f.selectedIndex = t + 1;
            r.disabled = false;
            e.focus()
        }
    };
    r.style.position = "absolute";
    r.style.left = "135px";
    r.style.top = "170px";
    r.style.width = "75px";
    r.style.fontFamily = "Arial";
    r.style.fontSize = "11px";
    r.type = "button";
    r.value = "OK";
    r.onclick = function () {
        if (q.pa != null) {
            var t;
            t = q.Lh ? [] : "";
            for (var u = 0; u <
            f.options.length; u++) if (q.Lh) t.push(f.options[u].value); else {
                if (u > 0) t += ",";
                t += f.options[u].value
            }
            q.pa(t)
        }
        q.hide()
    };
    k.style.position = "absolute";
    k.style.left = "215px";
    k.style.top = "170px";
    k.style.width = "75px";
    k.style.fontFamily = "Arial";
    k.style.fontSize = "11px";
    k.type = "button";
    k.value = "Cancel";
    k.onclick = function () {
        q.hide()
    };
    d.appendChild(e);
    d.appendChild(h);
    d.appendChild(l);
    d.appendChild(f);
    d.appendChild(g);
    d.appendChild(n);
    d.appendChild(o);
    d.appendChild(i);
    d.appendChild(r);
    d.appendChild(k);
    a.appendChild(c);
    a.appendChild(d);
    document.body.appendChild(a);
    pui.rd({
        wc: c, move: a, opacity: 85, Bo: function () {
            e.focus()
        }
    });
    this.Hl = function (t) {
        f.options.length = 0;
        if (q.Lh || t != null && t != "") {
            t = q.Lh ? t : t.split(",");
            for (var u = 0; u < t.length; u++) f.options[f.options.length] = new Option(t[u], t[u])
        }
        e.value = "";
        b()
    };
    this.uB = function (t) {
        e.style.textTransform = t
    };
    this.lr = function (t) {
        e.maxLength = t
    };
    this.show = function (t, u, w) {
        var v = document.body.offsetWidth, E = document.body.offsetHeight;
        if (v == null) v = 1E4;
        if (E == null) E = 1E4;
        v -= 325;
        E -= 240;
        if (v <
            0) v = 0;
        if (E < 0) E = 0;
        if (u == null || w == null) {
            var y = S.getX(t);
            t = S.getY(t);
            t -= 100;
            if (Q == "dspf" && t > E) t = E;
            if (t < 0) t = 0;
            if (y > v) y = v;
            a.style.left = y + "px";
            a.style.top = t + "px"
        }
        if (u != null) a.style.left = u + "px";
        if (w != null) a.style.top = w + "px";
        a.style.visibility = "visible";
        a.style.display = "";
        r.disabled = true;
        e.focus()
    };
    this.hide = function () {
        a.style.visibility = "hidden";
        a.style.display = "none";
        q.Xc != null && q.Xc()
    };
    this.isHidden = function () {
        return a.style.visibility == "hidden"
    };
    this.db = function (t) {
        if (s != null) s.innerHTML = t; else c.innerHTML =
            t
    };
    this.UJ = function (t) {
        h.innerHTML = t
    }
};
pui.designer.rC = function (b) {
    function a(va) {
        for (var ua = 0; ua < X.options.length; ua++) if (X.options[ua].value == va) {
            X.selectedIndex = ua;
            return
        }
    }

    function c(va) {
        ka.options[ka.options.length] = new Option(va, va)
    }

    function d(va) {
        for (var ua = 0; ua < ka.options.length; ua++) if (ka.options[ua].value == va) {
            ka.selectedIndex = ua;
            break
        }
    }

    function e(va) {
        Wa.options[Wa.options.length] = new Option(va, va.toLowerCase())
    }

    function f(va) {
        ab.options[ab.options.length] = new Option(va, va)
    }

    function h(va) {
        var ua = va.substr(0, 2);
        if (ua.substr(1,
            1) == " ") ua = ua.substr(0, 1);
        gb.options[gb.options.length] = new Option(va, ua)
    }

    function g(va) {
        Db.options[Db.options.length] = new Option(va, va)
    }

    function l(va) {
        xa.options[xa.options.length] = new Option(va, va)
    }

    function n() {
        lb.value = fc.length == 0 ? "Keywords..." : "Keywords(" + fc.length + ")..."
    }

    function o() {
        if (pui.designer.Ea && H.value.length > 10 && !pui.nodedesigner) {
            K.style.display = "";
            L.style.display = "";
            K.title = "";
            L.title = ""
        } else {
            K.style.display = "none";
            L.style.display = "none"
        }
    }

    function i() {
        if (Lc == null) return null;
        if (Lc.length !=
            1) return null;
        for (var va = Lc[0].c.properties, ua = "", Ia = 1; va["message id" + ua] != null;) {
            if (!pui.f(va["message id" + ua]) && !pui.f(va["message id prefix" + ua]) && !pui.f(va["message file" + ua]) && !pui.f(va["message library" + ua]) && !pui.f(va["message condition" + ua]) && va.value != null && va.value.designValue != null && va.value.designValue.substr(0, 1) != "[") return va.value.designValue;
            Ia++;
            ua = " " + Ia
        }
        return null
    }

    function r() {
        if (!pui.viewdesigner && !pui.designer.Ea) H.maxLength = 10;
        if (!pui.viewdesigner && pui.designer.Ea) H.maxLength =
            30;
        if (pui.pjsDefaultMode === "compatibility") H.style.textTransform = "lowercase";
        H.style.position = "absolute";
        H.style.left = "10px";
        H.style.top = "31px";
        H.style.width = "125px";
        H.style.fontFamily = "Arial";
        H.style.fontSize = "12px";
        H.Sa = "fieldName";
        var va;
        H.onkeydown = U.onkeydown = la.onkeydown = function (Ab) {
            if (!Ab) Ab = window.event;
            Ab = Ab.keyCode;
            if (Ab == 13) {
                if (va != null && va.dn()) return;
                Sa.onclick()
            }
            Ab == 27 && Ya.onclick()
        };
        H.onkeyup = H.onchange = function () {
            o()
        };
        o();
        var ua;
        if (b) {
            ua = {choices: [], values: [], Zh: [], iy: {}};
            var Ia =
                JSON.parse(localStorage["pui-database-cache"]), Gb = {};
            for (var ub in Ia.schemas) for (var Bb in Ia.schemas[ub].tables) for (var Nb in Ia.schemas[ub].tables[Bb].columns) if (!ua.choices.includes(Nb)) {
                var Xb = Ia.schemas[ub].tables[Bb].columns[Nb];
                ua.choices.push(Nb);
                Gb[Nb] = S.Ct(Xb);
                ua.iy[Nb] = S.zp(Xb)
            }
            ua.choices.sort();
            ua.values = ua.choices.slice();
            ua.choices.forEach(function (Ab) {
                ua.Zh.push({field: Ab, type: Gb[Ab]})
            })
        } else {
            Ia = [];
            for (ub = 0; ub < X.options.length; ub++) X.options[ub].value != "expression" && Ia.push(X.options[ub].value);
            ua = v.dG(Ia)
        }
        if (ua.choices.length > 0) {
            Ia = '<div class="autocomplete-item">';
            Ia += '<div class="autocomplete-col" style="float: left; width: 120px">(field)</div>';
            Ia += '<div class="autocomplete-col" style="float: left; width: 100px">(type)</div>';
            Ia += "</div>";
            va = new Tc({
                zo: H,
                choices: ua.choices,
                values: ua.values,
                Zh: ua.Zh,
                template: Ia,
                bl: 10,
                width: 240,
                onselect: function (Ab) {
                    var Mc = "";
                    for (var Ob in Ab) Mc = Ab[Ob];
                    Ob = b ? ua.iy[Mc] : v.xt(Mc);
                    if (Ob != null) {
                        X.value = Ob.dataType;
                        U.value = Ob.dataLength != null ? Ob.dataLength : "";
                        la.value = Ob.decPos != null ? Ob.decPos : "";
                        oa.value = Ob.refField != null ? Ob.refField : "";
                        fc = Ob.keywords ? Ob.keywords : [];
                        n();
                        X.onchange();
                        if (b) {
                            d(Ob.formatting);
                            k()
                        }
                    } else {
                        Ab = null;
                        for (Ob = 0; Ob < pui.sl.length; Ob++) {
                            var hd = pui.sl[Ob], Xd = hd.field, jd = hd.longName;
                            if (jd == null || !pui.designer.Ea) jd = Xd;
                            if (jd == Mc) Ab = hd
                        }
                        if (Ab != null) {
                            X.value = "reference";
                            U.value = "";
                            la.value = "";
                            oa.value = "";
                            fc = [];
                            n();
                            X.onchange();
                            ka.selectedIndex = Ab.decPos != null ? 1 : 0;
                            k()
                        }
                    }
                    o()
                },
                onload: ra()
            })
        }
    }

    function k() {
        function va(Ia) {
            Ia = z.getElementsByTagName(Ia);
            for (var Gb = Ia.length, ub = 0; ub < Gb; ub++) {
                var Bb = Ia[ub];
                if (Bb.formatting != null) {
                    Bb.qH = Bb.formatting == ka.value;
                    if (ka.style.display != "none" && Bb.formatting == ka.value) {
                        Bb.style.visibility = "";
                        Bb.style.display = ""
                    } else {
                        Bb.style.visibility = "hidden";
                        Bb.style.display = "none"
                    }
                }
            }
        }

        if (pui.ja) ka.disabled = X.value != "reference";
        if (X.value == "expression") {
            O.style.visibility = "";
            N.style.visibility = "";
            V.style.visibility = "";
            J.style.visibility = "hidden";
            H.style.visibility = "hidden"
        } else {
            O.style.visibility = "hidden";
            N.style.visibility =
                "hidden";
            V.style.visibility = "hidden";
            J.style.visibility = "";
            H.style.visibility = ""
        }
        if (X.value == "char" || X.value == "varchar" || X.value == "graphic" || X.value == "zoned" || X.value == "floating") {
            Z.style.visibility = "";
            Z.innerHTML = X.value == "varchar" ? "Max Length" : "Length";
            U.style.visibility = "";
            U.Ic.show();
            U.Ic.kl()
        } else {
            Z.style.visibility = "hidden";
            U.style.visibility = "hidden";
            U.Ic.hide()
        }
        if (X.value == "zoned" || X.value == "floating") {
            Y.style.visibility = "";
            la.style.visibility = "";
            la.Ic.show();
            la.Ic.kl()
        } else {
            Y.style.visibility =
                "hidden";
            la.style.visibility = "hidden";
            la.Ic.hide()
        }
        if (X.value == "reference") {
            qa.style.visibility = "";
            oa.style.visibility = "";
            ma.style.visibility = ""
        } else {
            qa.style.visibility = "hidden";
            oa.style.visibility = "hidden";
            ma.style.visibility = "hidden"
        }
        va("div");
        va("input");
        va("select");
        if (ka.value == "Indicator") {
            var ua = "";
            if (Db.value != "Custom Values") ua = "hidden";
            A.style.visibility = ua;
            $a.style.visibility = ua;
            G.style.visibility = ua;
            C.style.visibility = ua
        }
        if (ka.style.display != "none" && ka.value == "Date" || ka.value == "Time" ||
            ka.value == "Time Stamp") {
            sa.style.visibility = "";
            sa.style.display = "";
            sa.innerHTML = ka.value + " Pattern: ";
            if (M.style.visibility != "hidden") sa.innerHTML += M.value;
            if (W.style.visibility != "hidden") sa.innerHTML += W.value;
            if (fa.style.visibility != "hidden") sa.innerHTML += fa.value;
            na.style.visibility = "";
            na.style.display = ""
        } else {
            sa.style.visibility = "hidden";
            sa.style.display = "none";
            na.style.visibility = "hidden";
            na.style.display = "none"
        }
    }

    function q() {
        if (X.selectedIndex == -1) {
            pui.alert("Please select data type.");
            X.focus();
            return false
        }
        if (!pui.ja) if (!pui.Oe.zz({dataType: X.value, formatting: ka.value})) {
            pui.alert('"' + ka.options[ka.selectedIndex].value + '" formatting is not valid for the ' + X.options[X.selectedIndex].text + " data type.");
            return false
        }
        if (X.value == "expression") {
            if (N.value == "") {
                pui.alert("Indicator(s) not specified.");
                return
            }
        } else {
            var va = false;
            if (H.value.length == 5 && H.value.substr(0, 3).toUpperCase() == "*IN") {
                var ua = H.value.substr(3, 1), Ia = H.value.substr(4, 1);
                if (ua >= "0" && ua <= "9" && Ia >= "0" && Ia <= "9") va = true
            }
            if (!va) {
                ua =
                    H.value;
                if (pui.pjsDefaultMode === "compatibility") ua = ua.toLowerCase();
                ua = S.wa(ua, "field");
                if (ua != "") {
                    pui.alert("Field name " + ua);
                    H.focus();
                    return false
                }
            }
            if (va && X.value != "indicator") {
                pui.alert("Data type must be Indicator.");
                X.focus();
                return false
            }
        }
        if (U.style.visibility != "hidden" && (isNaN(Number(U.value)) || Number(U.value) <= 0)) {
            pui.alert("Field length is invalid.");
            U.focus();
            return false
        }
        if (la.style.visibility != "hidden" && (isNaN(Number(la.value)) || Number(la.value) < 0 || Zb(la.value) == "")) {
            pui.alert("Decimal positions value is invalid.");
            la.focus();
            return false
        }
        if (la.style.visibility != "hidden" && Number(la.value) > Number(U.value)) {
            pui.alert("Decimal positions cannot be greater than field length.");
            la.focus();
            return false
        }
        if (X.value == "floating" && Number(U.value) >= 10) {
            pui.alert("Field length is too large for floating point precision.");
            U.focus();
            return false
        }
        if (X.value == "zoned" && ka.value == "Date") {
            va = Number(U.value);
            ua = M.value;
            if (va < 8 && (ua == "Y-m-d" || ua == "m-d-Y" || ua == "d-m-Y" || ua == "Y/m/d" || ua == "m/d/Y" || ua == "d/m/Y") || va < 6 && (ua == "y-m-d" || ua ==
                "m-d-y" || ua == "d-m-y" || ua == "y/m/d" || ua == "m/d/y" || ua == "d/m/y")) {
                pui.alert("Field length is too small for the date format selected.");
                U.focus();
                return false
            }
        }
        if (cb.style.visibility != "hidden" && cb.value != "") {
            if (cb.value.length < 2 || cb.value.substr(0, 1) != "'" || cb.value.substr(cb.value.length - 1, 1) != "'") {
                pui.alert("Edit Word must be enclosed in single quotes.");
                cb.focus();
                return false
            }
            if (X.value != "zoned" && X.value != "reference") {
                pui.alert("Data type must be Decimal to use Edit Word.");
                cb.focus();
                return false
            }
        }
        if (db.style.visibility !=
            "hidden" && db.value != "") {
            if (db.value.length < 2 || db.value.substr(0, 1) != "'" || db.value.substr(db.value.length - 1, 1) != "'") {
                pui.alert("Edit Mask must be enclosed in single quotes.");
                db.focus();
                return false
            }
            if (X.value != "zoned" && X.value != "reference") {
                pui.alert("Data type must be Decimal to use Edit Mask.");
                db.focus();
                return false
            }
        }
        if (ta.style.visibility != "hidden" && ta.value == "" && Ga.style.visibility != "hidden" && Ga.value == "") {
            pui.alert("Custom JavaScript function or custom date/time pattern must be filled in.");
            ta.focus();
            return false
        }
        return true
    }

    function s() {
        if (E == null) return false;
        if (E.isHidden()) return false;
        return true
    }

    function t() {
        if (y == null) return false;
        if (y.isHidden()) return false;
        return true
    }

    function u() {
        if (F == null) return false;
        if (F.isHidden()) return false;
        return true
    }

    function w() {
        oa.value = "";
        da.checked = false;
        Ea.checked = true;
        ia.checked = false;
        La.checked = false;
        Wa.selectedIndex = 0;
        qb.checked = false;
        tb.checked = false;
        jb.checked = false;
        wb.checked = false;
        Ib.checked = false;
        Fa.value = "";
        cb.value = "";
        db.value = "";
        gb.selectedIndex = 0;
        ab.selectedIndex = 0;
        Db.selectedIndex = 1;
        $a.value = "";
        C.value = "";
        M.selectedIndex = 0;
        W.selectedIndex = 0;
        ta.value = "";
        Ga.value = ""
    }

    this.Xc = this.rq = this.tq = this.pa = null;
    this.Ii = this.lb = "";
    var v, E = null, y = null, F = null, D = null, B = document.createElement("div"), I = document.createElement("div"),
        z = document.createElement("div"), H = document.createElement("input"), J = document.createElement("div"),
        K = document.createElement("img"), L = document.createElement("div"), N = document.createElement("input"),
        O = document.createElement("div"),
        V = document.createElement("input"), X = document.createElement("select"), ga = document.createElement("div"),
        U = document.createElement("input"), Z = document.createElement("div"), la = document.createElement("input"),
        Y = document.createElement("div"), oa = document.createElement("input"), qa = document.createElement("div"),
        ma = document.createElement("input"), ka = document.createElement("select"), ea = document.createElement("div"),
        da = document.createElement("input"), Ba = document.createElement("div"), Ea = document.createElement("input"),
        pa = document.createElement("div"), ia = document.createElement("input"), m = document.createElement("div"),
        La = document.createElement("input"), Ta = document.createElement("div"), Wa = document.createElement("select"),
        kb = document.createElement("div"), qb = document.createElement("input"), Cb = document.createElement("div"),
        tb = document.createElement("input"), xb = document.createElement("div"), jb = document.createElement("input"),
        Eb = document.createElement("div"), wb = document.createElement("input"), nb = document.createElement("div"),
        Ib = document.createElement("input"), Lb = document.createElement("div"), cb = document.createElement("input"),
        Hb = document.createElement("div"), db = document.createElement("input"), ya = document.createElement("div"),
        Fa = document.createElement("input"), Da = document.createElement("div"), gb = document.createElement("select"),
        sb = document.createElement("div"), ab = document.createElement("select"), pb = document.createElement("div"),
        Db = document.createElement("select"), eb = document.createElement("div"), $a = document.createElement("input"),
        A = document.createElement("div"), C = document.createElement("input"), G = document.createElement("div"),
        M = document.createElement("select"), P = document.createElement("div"), T = document.createElement("select"),
        W = document.createElement("select"), ca = document.createElement("div"), aa = document.createElement("select"),
        fa = document.createElement("select"), ba = document.createElement("div"),
        ha = document.createElement("select"), na = document.createElement("div"), sa = document.createElement("div"),
        xa = document.createElement("select"),
        wa = document.createElement("div"), ta = document.createElement("input"), Aa = document.createElement("div"),
        Ga = document.createElement("input"), Pa = document.createElement("div"), Ua = document.createElement("div"),
        Za = document.createElement("select"), rb = document.createElement("div"), Ra = document.createElement("input"),
        Sa = document.createElement("input"), Ya = document.createElement("input"),
        lb = document.createElement("input"), Jb = pui.locales.tG(), Qa = (new Date).getFullYear(), mc;
    mc = pui.ja ? new Date : pui.formatting.Date.parse(Qa +
        "-01-15-13.00.00.000000", pui.formatting.Date.uo, "en_US");
    var fc = [], Lc = null, ob = this;
    B.style.width = "445px";
    B.style.border = "2px solid #336699";
    B.style.position = "absolute";
    B.style.top = "50px";
    B.style.left = "50px";
    B.style.padding = "0px";
    B.style.zIndex = S.PK;
    B.style.visibility = "hidden";
    B.style.display = "none";
    B.style.height = "322px";
    B.style.overflow = "hidden";
    S.W(document, "mousedown", function (va) {
        if (!s()) if (!t()) if (!u()) {
            for (va = S.getTarget(va); va != null;) {
                if (va == B) return;
                va = va.parentNode
            }
            ob.hide()
        }
    });
    I.innerHTML =
        "Bind";
    I.style.fontSize = "12px";
    I.style.fontFamily = "Arial";
    I.style.backgroundColor = "#6699cc";
    I.style.padding = "3px";
    I.style.cursor = "move";
    I.style.fontWeight = "bold";
    I.style.color = "#ffffff";
    I.style.position = "absolute";
    I.style.left = "0px";
    I.style.top = "0px";
    I.style.whiteSpace = "normal";
    I.style.width = "100%";
    if (typeof I.style.MozUserSelect != "undefined") I.style.MozUserSelect = "none";
    z.style.overflow = "hidden";
    z.style.height = "302px";
    z.style.backgroundColor = "#ffffff";
    z.style.padding = "0px";
    z.style.position = "absolute";
    z.style.left = "0px";
    z.style.top = "20px";
    z.style.whiteSpace = "normal";
    z.style.width = "100%";
    var kd = null;
    if (Q == "dspf") kd = pui.Gf(B, I, z, function () {
        ob.hide()
    });
    J.style.position = "absolute";
    J.style.left = "10px";
    J.style.top = "10px";
    J.style.fontFamily = "Trebuchet MS";
    J.style.fontSize = "13px";
    J.innerHTML = "Field Name";
    H.Sa = "fieldName";
    var Nc = "This field name is longer than 10 characters.";
    b || (Nc += " It will be added as an alias and a short name of SHORT_NAME will be generated.");
    Nc += "\n\nThe Alias keyword must be used when this Display File is declared in your RPG code.";
    K.style.position = "absolute";
    K.style.left = "82px";
    K.style.top = "10px";
    K.style.cursor = "pointer";
    K.src = "/profoundui/proddata/images/icons/warning.png";
    K.onmouseover = function () {
        var va = Nc;
        b || (va = va.replace(/SHORT_NAME/, v.Tk(H.value)));
        K.title = va
    };
    L.style.position = "absolute";
    L.style.left = "100px";
    L.style.top = "10px";
    L.style.fontFamily = "Trebuchet MS";
    L.style.fontSize = "14px";
    L.style.fontWeight = "bold";
    L.style.color = "#555555";
    L.style.cursor = "pointer";
    L.innerHTML = "Alias";
    L.onmouseover = function () {
        var va = Nc;
        b || (va =
            va.replace(/SHORT_NAME/, v.Tk(H.value)));
        L.title = va
    };
    O.style.position = "absolute";
    O.style.left = "10px";
    O.style.top = "10px";
    O.style.fontFamily = "Trebuchet MS";
    O.style.fontSize = "13px";
    O.innerHTML = "Indicator(s)";
    N.style.position = "absolute";
    N.style.left = "10px";
    N.style.top = "31px";
    N.style.width = "100px";
    N.style.fontFamily = "Arial";
    N.style.fontSize = "12px";
    N.style.backgroundColor = "#eeeeee";
    N.readOnly = true;
    N.Sa = "fieldName";
    V.style.position = "absolute";
    V.style.left = "115px";
    V.style.top = "29px";
    V.style.width = "25px";
    V.style.fontFamily =
        "Arial";
    V.style.fontSize = "11px";
    V.type = "button";
    V.value = "...";
    V.onclick = function (va) {
        if (E == null) E = new pui.designer.JC;
        E.NJ(N.value);
        E.pa = function (ua) {
            N.value = ua;
            X.disabled = false;
            Ra.disabled = false;
            Sa.disabled = false;
            Ya.disabled = false;
            lb.disabled = false
        };
        E.Ei = function () {
            X.disabled = false;
            Ra.disabled = false;
            Sa.disabled = false;
            lb.disabled = false
        };
        X.disabled = true;
        Ra.disabled = true;
        Sa.disabled = true;
        lb.disabled = true;
        E.show(va)
    };
    ga.style.position = "absolute";
    ga.style.left = "150px";
    ga.style.top = "10px";
    ga.style.fontFamily =
        "Trebuchet MS";
    ga.style.fontSize = "13px";
    ga.innerHTML = "Data Type";
    X.style.position = "absolute";
    X.style.left = "150px";
    X.style.top = "30px";
    X.style.width = "140px";
    X.style.fontFamily = "Arial";
    X.style.fontSize = "12px";
    X.Sa = "dataType";
    var Wb = [{
        df: pui.viewdesigner || pui.nodedesigner ? "Character (Fixed)" : "Character",
        value: "char",
        formatting: "Text"
    }, {
        df: "Decimal",
        value: "zoned",
        formatting: "Number"
    }, {
        df: pui.viewdesigner || pui.nodedesigner ? "Boolean Indicator" : "Indicator",
        value: "indicator",
        formatting: "Indicator"
    }, {
        df: "Indicator Expression",
        value: "expression", formatting: "Indicator"
    }, {df: "Floating Point", value: "floating", formatting: "Number"}, {
        df: "Date",
        value: "date",
        formatting: "Date"
    }, {df: "Time", value: "time", formatting: "Time"}, {
        df: "Time Stamp",
        value: "timestamp",
        formatting: "Time Stamp"
    }, {df: "Graphic", value: "graphic", formatting: "Text"}, {
        df: "Use Reference Field",
        value: "reference",
        formatting: null
    }];
    if (pui.viewdesigner) {
        Wb.splice(3, 1);
        Wb.pop();
        Wb.pop()
    }
    if (pui.viewdesigner || pui.nodedesigner) {
        Wb.splice(1, 0, {df: "String", value: "string", formatting: "Text"});
        Wb.splice(1, 0, {df: "Character (Varying)", value: "varchar", formatting: "Text"})
    }
    for (Qa = 0; Qa < Wb.length; Qa++) {
        var Kb = new Option(Wb[Qa].df, Wb[Qa].value);
        Kb.formatting = Wb[Qa].formatting;
        X.options[X.options.length] = Kb
    }
    X.onchange = function () {
        var va = X.options[X.selectedIndex].formatting;
        if (va != null) ka.value = va;
        k()
    };
    Z.style.position = "absolute";
    Z.style.left = "300px";
    Z.style.top = "10px";
    Z.style.fontFamily = "Trebuchet MS";
    Z.style.fontSize = "13px";
    Z.innerHTML = "Length";
    U.maxLength = pui.nodedesigner ? 10 : 5;
    U.style.position =
        "absolute";
    U.style.left = "300px";
    U.style.top = "31px";
    U.style.width = pui.nodedesigner ? "70px" : "50px";
    U.style.fontFamily = "Arial";
    U.style.fontSize = "12px";
    S.W(U, "keydown", Fb);
    U.value = "10";
    U.Sa = "dataLength";
    Y.style.position = "absolute";
    Y.style.left = pui.nodedesigner ? "385px" : "370px";
    Y.style.top = "10px";
    Y.style.fontFamily = "Trebuchet MS";
    Y.style.fontSize = "13px";
    Y.innerHTML = "Decimals";
    la.maxLength = 2;
    la.style.position = "absolute";
    la.style.left = pui.nodedesigner ? "385px" : "370px";
    la.style.top = "31px";
    la.style.width = "40px";
    la.style.fontFamily = "Arial";
    la.style.fontSize = "12px";
    S.W(la, "keydown", Fb);
    la.value = "0";
    la.Sa = "decPos";
    qa.style.position = "absolute";
    qa.style.left = "300px";
    qa.style.top = "10px";
    qa.style.fontFamily = "Trebuchet MS";
    qa.style.fontSize = "13px";
    qa.innerHTML = "Reference Field";
    oa.style.position = "absolute";
    oa.style.left = "300px";
    oa.style.top = "31px";
    oa.style.width = "100px";
    oa.style.fontFamily = "Arial";
    oa.style.fontSize = "12px";
    oa.Sa = "refField";
    ma.style.position = "absolute";
    ma.style.left = "410px";
    ma.style.top = "29px";
    ma.style.width =
        "25px";
    ma.style.fontFamily = "Arial";
    ma.style.fontSize = "11px";
    ma.type = "button";
    ma.value = "...";
    ma.onclick = function (va) {
        if (y == null) y = new pui.designer.VC;
        y.WJ(oa.value);
        y.pa = function (ua) {
            oa.value = ua;
            X.disabled = false;
            Ra.disabled = false;
            Sa.disabled = false;
            Ya.disabled = false;
            lb.disabled = false
        };
        y.Ei = function () {
            X.disabled = false;
            Ra.disabled = false;
            Sa.disabled = false;
            lb.disabled = false
        };
        X.disabled = true;
        Ra.disabled = true;
        Sa.disabled = true;
        lb.disabled = true;
        y.show(va)
    };
    ea.style.position = "absolute";
    ea.style.left = "10px";
    ea.style.top = "60px";
    ea.style.fontFamily = "Trebuchet MS";
    ea.style.fontSize = "13px";
    ea.innerHTML = "Field Formatting";
    ka.style.position = "absolute";
    ka.style.left = "10px";
    ka.style.top = "80px";
    ka.style.width = "130px";
    ka.style.fontFamily = "Arial";
    ka.style.fontSize = "12px";
    ka.size = 11;
    ka.Sa = "formatting";
    c("Text");
    c("Number");
    c("Indicator");
    c("Date");
    c("Time");
    c("Time Stamp");
    c("Special");
    c("Custom");
    ka.selectedIndex = 0;
    ka.onclick = function () {
        k()
    };
    ka.onchange = function () {
        k()
    };
    Ba.style.position = "absolute";
    Ba.style.left =
        "170px";
    Ba.style.top = "80px";
    Ba.style.fontFamily = "Trebuchet MS";
    Ba.style.fontSize = "13px";
    Ba.innerHTML = '<label for="bind_trimLeading">Trim Leading Spaces</label>';
    Ba.formatting = "Text";
    da.style.position = "absolute";
    da.style.left = "150px";
    da.style.top = "80px";
    da.type = "checkbox";
    da.id = "bind_trimLeading";
    da.formatting = "Text";
    da.Sa = "trimLeading";
    pa.style.position = "absolute";
    pa.style.left = "170px";
    pa.style.top = "105px";
    pa.style.fontFamily = "Trebuchet MS";
    pa.style.fontSize = "13px";
    pa.formatting = "Text";
    pa.innerHTML =
        '<label for="bind_trimTrailing">Trim Trailing Spaces</label>';
    Ea.style.position = "absolute";
    Ea.style.left = "150px";
    Ea.style.top = "105px";
    Ea.type = "checkbox";
    Ea.checked = true;
    Ea.id = "bind_trimTrailing";
    Ea.formatting = "Text";
    Ea.Sa = "trimTrailing";
    m.style.position = "absolute";
    m.style.left = "170px";
    m.style.top = "130px";
    m.style.fontFamily = "Trebuchet MS";
    m.style.fontSize = "13px";
    m.formatting = "Text";
    m.innerHTML = '<label for="bind_blankFill">Right Justify and Blank Fill</label>';
    ia.style.position = "absolute";
    ia.style.left =
        "150px";
    ia.style.top = "130px";
    ia.type = "checkbox";
    ia.checked = true;
    ia.id = "bind_blankFill";
    ia.formatting = "Text";
    ia.Sa = "blankFill";
    Ta.style.position = "absolute";
    Ta.style.left = "170px";
    Ta.style.top = "155px";
    Ta.style.fontFamily = "Trebuchet MS";
    Ta.style.fontSize = "13px";
    Ta.formatting = "Text";
    Ta.innerHTML = '<label for="bind_rjZeroFill">Right Justify and Zero Fill</label>';
    La.style.position = "absolute";
    La.style.left = "150px";
    La.style.top = "155px";
    La.type = "checkbox";
    La.id = "bind_rjZeroFill";
    La.formatting = "Text";
    La.Sa =
        "rjZeroFill";
    kb.style.position = "absolute";
    kb.style.left = "150px";
    kb.style.top = "180px";
    kb.style.fontFamily = "Trebuchet MS";
    kb.style.fontSize = "13px";
    kb.innerHTML = "Text Transform";
    kb.formatting = "Text";
    Wa.style.position = "absolute";
    Wa.style.left = "150px";
    Wa.style.top = "200px";
    Wa.style.width = "100px";
    Wa.style.fontFamily = "Arial";
    Wa.style.fontSize = "12px";
    Wa.formatting = "Text";
    Wa.Sa = "textTransform";
    e("None");
    e("Uppercase");
    e("Lowercase");
    e("Capitalize");
    Cb.style.position = "absolute";
    Cb.style.left = "170px";
    Cb.style.top =
        "80px";
    Cb.style.fontFamily = "Trebuchet MS";
    Cb.style.fontSize = "13px";
    Cb.innerHTML = '<label for="bind_numSep">Use 1000 Separator</label>';
    Cb.formatting = "Number";
    qb.style.position = "absolute";
    qb.style.left = "150px";
    qb.style.top = "80px";
    qb.type = "checkbox";
    qb.id = "bind_numSep";
    qb.formatting = "Number";
    qb.Sa = "numSep";
    xb.style.position = "absolute";
    xb.style.left = "170px";
    xb.style.top = "105px";
    xb.style.fontFamily = "Trebuchet MS";
    xb.style.fontSize = "13px";
    xb.innerHTML = '<label for="bind_zeroBalance">Show Zero Balance</label>';
    xb.formatting = "Number";
    tb.style.position = "absolute";
    tb.style.left = "150px";
    tb.style.top = "105px";
    tb.type = "checkbox";
    tb.id = "bind_zeroBalance";
    tb.formatting = "Number";
    tb.Sa = "zeroBalance";
    Eb.style.position = "absolute";
    Eb.style.left = "170px";
    Eb.style.top = "130px";
    Eb.style.fontFamily = "Trebuchet MS";
    Eb.style.fontSize = "13px";
    Eb.innerHTML = '<label for="bind_numBlankFill">Blank Fill</label>';
    Eb.formatting = "Number";
    jb.style.position = "absolute";
    jb.style.left = "150px";
    jb.style.top = "130px";
    jb.type = "checkbox";
    jb.id = "bind_numBlankFill";
    jb.formatting = "Number";
    jb.Sa = "numBlankFill";
    nb.style.position = "absolute";
    nb.style.left = "170px";
    nb.style.top = "155px";
    nb.style.fontFamily = "Trebuchet MS";
    nb.style.fontSize = "13px";
    nb.innerHTML = '<label for="bind_zeroFill">Zero Fill</label>';
    nb.formatting = "Number";
    wb.style.position = "absolute";
    wb.style.left = "150px";
    wb.style.top = "155px";
    wb.type = "checkbox";
    wb.id = "bind_zeroFill";
    wb.formatting = "Number";
    wb.Sa = "zeroFill";
    Lb.style.position = "absolute";
    Lb.style.left = "170px";
    Lb.style.top = "180px";
    Lb.style.fontFamily =
        "Trebuchet MS";
    Lb.style.fontSize = "13px";
    Lb.innerHTML = '<label for="bind_noExtraSpaces">No extra spaces</label>';
    Lb.title = "Causes an input field to behave as in keyboard shift Y. The number of characters that can be keyed into the field is equal to the length of the field. When this option is unchecked, extra characters can be typed for the sign, decimal, and thousands separators.";
    Lb.formatting = "Number";
    Ib.style.position = "absolute";
    Ib.style.left = "150px";
    Ib.style.top = "180px";
    Ib.type = "checkbox";
    Ib.id =
        "bind_noExtraSpaces";
    Ib.formatting = "Number";
    Ib.Sa = "noExtraSpaces";
    Hb.style.position = "absolute";
    Hb.style.left = "300px";
    Hb.style.top = "75px";
    Hb.style.fontFamily = "Trebuchet MS";
    Hb.style.fontSize = "13px";
    Hb.innerHTML = "Edit Word";
    Hb.formatting = "Number";
    cb.style.position = "absolute";
    cb.style.left = "300px";
    cb.style.top = "95px";
    cb.style.width = "120px";
    cb.style.fontFamily = "Arial";
    cb.style.fontSize = "12px";
    cb.formatting = "Number";
    cb.Sa = "edtWrd";
    ya.style.position = "absolute";
    ya.style.left = "300px";
    ya.style.top = "115px";
    ya.style.fontFamily = "Trebuchet MS";
    ya.style.fontSize = "13px";
    ya.innerHTML = "Edit Mask";
    ya.formatting = "Number";
    db.style.position = "absolute";
    db.style.left = "300px";
    db.style.top = "135px";
    db.style.width = "120px";
    db.style.fontFamily = "Arial";
    db.style.fontSize = "12px";
    db.formatting = "Number";
    db.Sa = "edtMsk";
    Da.style.position = "absolute";
    Da.style.left = "300px";
    Da.style.top = "155px";
    Da.style.fontFamily = "Trebuchet MS";
    Da.style.fontSize = "13px";
    Da.innerHTML = "Currency Symbol";
    Da.formatting = "Number";
    Fa.style.position = "absolute";
    Fa.style.left = "300px";
    Fa.style.top = "175px";
    Fa.style.width = "120px";
    Fa.style.fontFamily = "Arial";
    Fa.style.fontSize = "12px";
    Fa.formatting = "Number";
    Fa.Sa = "curSym";
    pb.style.position = "absolute";
    pb.style.left = "150px";
    pb.style.top = "205px";
    pb.style.fontFamily = "Trebuchet MS";
    pb.style.fontSize = "13px";
    pb.innerHTML = "Negative Numbers";
    pb.formatting = "Number";
    ab.style.position = "absolute";
    ab.style.left = "150px";
    ab.style.top = "225px";
    ab.style.width = "120px";
    ab.style.fontFamily = "Arial";
    ab.style.fontSize = "12px";
    ab.formatting =
        "Number";
    ab.Sa = "negNum";
    f("-999.00");
    f("(999.00)");
    f("999.00-");
    f("999.00 CR");
    f("999.00");
    sb.style.position = "absolute";
    sb.style.left = "300px";
    sb.style.top = "195px";
    sb.style.fontFamily = "Trebuchet MS";
    sb.style.fontSize = "13px";
    sb.innerHTML = "Units";
    sb.formatting = "Number";
    gb.style.position = "absolute";
    gb.style.left = "300px";
    gb.style.top = "215px";
    gb.style.width = "120px";
    gb.style.fontFamily = "Arial";
    gb.style.fontSize = "12px";
    gb.formatting = "Number";
    gb.Sa = "units";
    h("");
    h("px (pixels)");
    h("% (percentage)");
    h("in (inches)");
    h("cm (centimeters)");
    h("mm (millimeters)");
    h("em");
    h("ex");
    h("pt (points)");
    h("pc (picas)");
    eb.style.position = "absolute";
    eb.style.left = "150px";
    eb.style.top = "80px";
    eb.style.fontFamily = "Trebuchet MS";
    eb.style.fontSize = "13px";
    eb.innerHTML = "Indicator Format";
    eb.formatting = "Indicator";
    Db.style.position = "absolute";
    Db.style.left = "150px";
    Db.style.top = "100px";
    Db.style.width = "200px";
    Db.style.fontFamily = "Arial";
    Db.style.fontSize = "12px";
    Db.size = 6;
    Db.Sa = "indFormat";
    g("1 / 0");
    g("true / false");
    g("italic / normal");
    g("bold / normal");
    g("underline / none");
    g("visible / hidden");
    g("hidden / visible");
    g("Custom Values");
    Db.selectedIndex = 1;
    Db.formatting = "Indicator";
    Db.onclick = function () {
        k();
        $a.style.visibility != "hidden" && $a.focus()
    };
    Db.onchange = function () {
        k()
    };
    A.style.position = "absolute";
    A.style.left = "150px";
    A.style.top = "200px";
    A.style.fontFamily = "Trebuchet MS";
    A.style.fontSize = "13px";
    A.innerHTML = "On Value";
    A.formatting = "Indicator";
    $a.style.position = "absolute";
    $a.style.left = "150px";
    $a.style.top = "220px";
    $a.style.width =
        "90px";
    $a.style.fontFamily = "Arial";
    $a.style.fontSize = "12px";
    $a.formatting = "Indicator";
    $a.Sa = "customTrue";
    G.style.position = "absolute";
    G.style.left = "270px";
    G.style.top = "200px";
    G.style.fontFamily = "Trebuchet MS";
    G.style.fontSize = "13px";
    G.innerHTML = "Off Value";
    G.formatting = "Indicator";
    C.style.position = "absolute";
    C.style.left = "270px";
    C.style.top = "220px";
    C.style.width = "90px";
    C.style.fontFamily = "Arial";
    C.style.fontSize = "12px";
    C.formatting = "Indicator";
    C.Sa = "customFalse";
    T.style.position = "absolute";
    T.style.left =
        "200px";
    T.style.top = "205px";
    T.style.width = "150px";
    T.style.fontFamily = "Arial";
    T.style.fontSize = "11px";
    T.Sa = "locale";
    T.formatting = "Date";
    T.options[0] = new Option(pui.locales.en_US.text, pui.locales.en_US.name);
    for (Qa = 0; Qa < Jb.length; Qa++) if (Jb[Qa].name != "en_US") T.options[T.options.length] = new Option(Jb[Qa].text, Jb[Qa].name);
    T.selectedIndex = 0;
    T.onchange = T.onkeyup = function () {
        M.options.length = 0;
        M.options[M.options.length] = new Option("Default", "");
        if (pui.locales[T.value] != null) {
            for (var va = pui.locales[T.value].datePatterns,
                     ua = 0; ua < va.length; ua++) {
                var Ia = mc.format(va[ua], T.value);
                M.options[M.options.length] = new Option(Ia, va[ua])
            }
            M.selectedIndex = 0
        }
    };
    P.style.position = "absolute";
    P.style.left = "150px";
    P.style.top = "80px";
    P.style.fontFamily = "Trebuchet MS";
    P.style.fontSize = "13px";
    P.innerHTML = "Date Format";
    P.formatting = "Date";
    M.style.position = "absolute";
    M.style.left = "150px";
    M.style.top = "100px";
    M.style.width = "200px";
    M.style.fontFamily = "Arial";
    M.style.fontSize = "12px";
    M.size = 6;
    M.Sa = "dateFormat";
    Kb = pui.locales[T.value].datePatterns;
    if (pui.ja) for (Qa = Kb.length - 1; Qa >= 0; Qa--) /[MFSDl]/.test(Kb[Qa]) && Kb.splice(Qa, 1);
    M.options[M.options.length] = new Option("Default", "");
    for (Qa = 0; Qa < Kb.length; Qa++) {
        var wc = mc.format(Kb[Qa], T.value);
        M.options[M.options.length] = new Option(wc, Kb[Qa])
    }
    M.selectedIndex = 0;
    M.formatting = "Date";
    M.onclick = function () {
        k()
    };
    M.onchange = function () {
        k()
    };
    aa.style.position = "absolute";
    aa.style.left = "200px";
    aa.style.top = "205px";
    aa.style.width = "150px";
    aa.style.fontFamily = "Arial";
    aa.style.fontSize = "11px";
    aa.Sa = "locale";
    aa.formatting =
        "Time";
    aa.options[0] = new Option(pui.locales.en_US.text, pui.locales.en_US.name);
    for (Qa = 0; Qa < Jb.length; Qa++) if (Jb[Qa].name != "en_US") aa.options[aa.options.length] = new Option(Jb[Qa].text, Jb[Qa].name);
    aa.selectedIndex = 0;
    aa.onchange = aa.onkeyup = function () {
        W.options.length = 0;
        W.options[W.options.length] = new Option("Default", "");
        if (pui.locales[aa.value] != null) {
            for (var va = pui.locales[aa.value].timePatterns, ua = 0; ua < va.length; ua++) {
                var Ia = mc.format(va[ua], aa.value);
                W.options[W.options.length] = new Option(Ia, va[ua])
            }
            W.selectedIndex =
                0
        }
    };
    ca.style.position = "absolute";
    ca.style.left = "150px";
    ca.style.top = "80px";
    ca.style.fontFamily = "Trebuchet MS";
    ca.style.fontSize = "13px";
    ca.innerHTML = "Time Format";
    ca.formatting = "Time";
    W.style.position = "absolute";
    W.style.left = "150px";
    W.style.top = "100px";
    W.style.width = "200px";
    W.style.fontFamily = "Arial";
    W.style.fontSize = "12px";
    W.size = 6;
    W.options[W.options.length] = new Option("Default", "");
    Kb = pui.locales[aa.value].timePatterns;
    for (Qa = 0; Qa < Kb.length; Qa++) {
        wc = mc.format(Kb[Qa], aa.value);
        W.options[W.options.length] =
            new Option(wc, Kb[Qa])
    }
    W.selectedIndex = 0;
    W.formatting = "Time";
    W.Sa = "timeFormat";
    W.onclick = function () {
        k()
    };
    W.onchange = function () {
        k()
    };
    ha.style.position = "absolute";
    ha.style.left = "200px";
    ha.style.top = "205px";
    ha.style.width = "150px";
    ha.style.fontFamily = "Arial";
    ha.style.fontSize = "11px";
    ha.Sa = "locale";
    ha.formatting = "Time Stamp";
    ha.options[0] = new Option(pui.locales.en_US.text, pui.locales.en_US.name);
    for (Qa = 0; Qa < Jb.length; Qa++) if (Jb[Qa].name != "en_US") ha.options[ha.options.length] = new Option(Jb[Qa].text, Jb[Qa].name);
    ha.selectedIndex = 0;
    ha.onchange = ha.onkeyup = function () {
        fa.options.length = 0;
        if (pui.locales[ha.value] != null) {
            for (var va = pui.locales[ha.value].timeStampPatterns, ua = 0; ua < va.length; ua++) {
                var Ia = mc.format(va[ua], ha.value);
                fa.options[fa.options.length] = new Option(Ia, va[ua])
            }
            fa.selectedIndex = 0
        }
    };
    ba.style.position = "absolute";
    ba.style.left = "150px";
    ba.style.top = "80px";
    ba.style.fontFamily = "Trebuchet MS";
    ba.style.fontSize = "13px";
    ba.innerHTML = "Time Stamp Format";
    ba.formatting = "Time Stamp";
    fa.style.position = "absolute";
    fa.style.left = "150px";
    fa.style.top = "100px";
    fa.style.width = "200px";
    fa.style.fontFamily = "Arial";
    fa.style.fontSize = "12px";
    fa.size = 6;
    Kb = pui.locales.en_US.timeStampPatterns;
    if (pui.ja) for (Qa = Kb.length - 1; Qa >= 0; Qa--) /[MFSDl]/.test(Kb[Qa]) && Kb.splice(Qa, 1);
    for (Qa = 0; Qa < Kb.length; Qa++) {
        wc = mc.format(Kb[Qa], "en_US");
        fa.options[fa.options.length] = new Option(wc, Kb[Qa])
    }
    fa.selectedIndex = 0;
    fa.formatting = "Time Stamp";
    fa.Sa = "timeStampFormat";
    fa.onclick = function () {
        k()
    };
    fa.onchange = function () {
        k()
    };
    na.style.position = "absolute";
    na.style.left = "150px";
    na.style.top = "205px";
    na.style.fontFamily = "Trebuchet MS";
    na.style.fontSize = "13px";
    na.innerHTML = "Locale:";
    sa.style.position = "absolute";
    sa.style.left = "150px";
    sa.style.top = "230px";
    sa.style.fontFamily = "Trebuchet MS";
    sa.style.fontSize = "13px";
    sa.innerHTML = "Pattern: Y-m-d";
    wa.style.position = "absolute";
    wa.style.left = "150px";
    wa.style.top = "80px";
    wa.style.fontFamily = "Trebuchet MS";
    wa.style.fontSize = "13px";
    wa.innerHTML = "Type";
    wa.formatting = "Special";
    xa.style.position = "absolute";
    xa.style.left =
        "150px";
    xa.style.top = "100px";
    xa.style.width = "200px";
    xa.style.fontFamily = "Arial";
    xa.style.fontSize = "12px";
    xa.size = 6;
    xa.Sa = "special";
    l("Percentage");
    l("Zip Code");
    l("Zip Code + 4");
    l("Phone Number");
    l("Social Security Number");
    l("Mailto Link");
    l("Navigation Link");
    l("Telephone Link");
    l("Normalize URL");
    xa.selectedIndex = 0;
    xa.formatting = "Special";
    Aa.style.position = "absolute";
    Aa.style.left = "150px";
    Aa.style.top = "80px";
    Aa.style.fontFamily = "Trebuchet MS";
    Aa.style.fontSize = "13px";
    Aa.innerHTML = "Custom JavaScript Function";
    Aa.formatting = "Custom";
    ta.style.position = "absolute";
    ta.style.left = "150px";
    ta.style.top = "100px";
    ta.style.width = "200px";
    ta.style.fontFamily = "Arial";
    ta.style.fontSize = "12px";
    ta.formatting = "Custom";
    ta.Sa = "customFunction";
    Pa.style.position = "absolute";
    Pa.style.left = "150px";
    Pa.style.top = "145px";
    Pa.style.fontFamily = "Trebuchet MS";
    Pa.style.fontSize = "13px";
    Pa.innerHTML = "Custom Date/Time Pattern";
    Pa.formatting = "Custom";
    Ga.style.position = "absolute";
    Ga.style.left = "150px";
    Ga.style.top = "165px";
    Ga.style.width = "200px";
    Ga.style.fontFamily = "Arial";
    Ga.style.fontSize = "12px";
    Ga.formatting = "Custom";
    Ga.Sa = "customPattern";
    Ua.style.position = "absolute";
    Ua.style.left = "150px";
    Ua.style.top = "190px";
    Ua.style.fontFamily = "Trebuchet MS";
    Ua.style.fontSize = "13px";
    Ua.innerHTML = "Locale:";
    Ua.formatting = "Custom";
    Za.style.position = "absolute";
    Za.style.left = "200px";
    Za.style.top = "190px";
    Za.style.width = "150px";
    Za.style.fontFamily = "Arial";
    Za.style.fontSize = "11px";
    Za.Sa = "locale";
    Za.formatting = "Custom";
    Za.options[0] = new Option(pui.locales.en_US.text,
        pui.locales.en_US.name);
    for (Qa = 0; Qa < Jb.length; Qa++) if (Jb[Qa].name != "en_US") Za.options[Za.options.length] = new Option(Jb[Qa].text, Jb[Qa].name);
    Za.selectedIndex = 0;
    rb.style.position = "absolute";
    rb.style.left = "150px";
    rb.style.top = "215px";
    rb.style.width = "275px";
    rb.style.overflowX = "hidden";
    rb.style.fontFamily = "Trebuchet MS";
    rb.style.fontSize = "13px";
    rb.innerHTML = "Preview:";
    rb.formatting = "Custom";
    Za.onclick = Za.onchange = Za.onkeyup = Ga.onkeyup = function () {
        var va = mc.format(Ga.value, Za.value);
        if (typeof va == "undefined") va =
            "";
        va = va.replace(/ /g, "&nbsp;");
        rb.innerHTML = "Preview: " + va
    };
    Ra.style.position = "absolute";
    Ra.style.left = "10px";
    Ra.style.top = "270px";
    Ra.style.width = "75px";
    Ra.style.fontFamily = "Arial";
    Ra.style.fontSize = "11px";
    Ra.type = "button";
    Ra.value = "Unbind Field";
    Ra.onclick = function () {
        ob.tq != null && ob.tq();
        ob.hide()
    };
    Sa.style.position = "absolute";
    Sa.style.left = "150px";
    Sa.style.top = "270px";
    Sa.style.width = "75px";
    Sa.style.fontFamily = "Arial";
    Sa.style.fontSize = "11px";
    Sa.type = "button";
    Sa.value = "OK";
    Sa.onclick = function () {
        if (!q()) return false;
        if (ob.pa != null) {
            var va = {}, ua = function (Gb) {
                Gb = z.getElementsByTagName(Gb);
                for (var ub = 0; ub < Gb.length; ub++) {
                    var Bb = Gb[ub], Nb = Bb.Sa, Xb = !(Nb != null && Bb.style.visibility != "hidden");
                    if (Bb.qH) Xb = false;
                    if (Nb == "edtWrd" && Bb.value == "") Xb = true;
                    if (Nb == "edtMsk" && Bb.value == "") Xb = true;
                    if (!Xb) {
                        va[Nb] = Bb.tagName == "INPUT" && Bb.type == "checkbox" ? Bb.checked : Bb.value;
                        if (Nb === "fieldName" && pui.pjsDefaultMode === "compatibility") va[Nb] = va[Nb].toLowerCase()
                    }
                }
            };
            ua("input");
            ua("select");
            if (ob.lb == "value" || ob.lb == "label" || ob.lb == "tool tip" ||
                ob.lb == "html" || ob.lb == "header text") {
                var Ia;
                if (ob.lb == "value" && (Ia = i()) != null) va.designValue = Ia; else if (H.style.visibility != "hidden") {
                    ua = H.value;
                    if (pui.pjsDefaultMode === "compatibility") ua = ua.toLowerCase();
                    va.designValue = "[" + ua + "]"
                } else va.designValue = "[expression]"
            } else if (ob.lb == "top" || ob.lb == "left" || ob.lb == "height" || ob.lb == "width" || ob.lb == "z index" || ob.lb == "tab names") va.designValue = ob.Ii; else if (ob.lb == "image source") va.designValue = "/profoundui/proddata/images/image.png"; else if (ob.lb == "icon") va.designValue =
                "material:face"; else if (ob.lb == "icon position") va.designValue = "left"; else {
                va.designValue = null;
                delete va.designValue
            }
            if (fc.length > 0) va.keywords = fc;
            if (pui.designer.Ea && va.fieldName.length > 10 && pui.pjsDefaultMode !== "case-sensitive") {
                va.longName = va.fieldName;
                if (!b) {
                    ua = v.Tk(va.fieldName);
                    va.fieldName = ua
                }
            }
            if (ob.pa(va)) {
                if (ob.rq != null) if (D != null) {
                    ua = D;
                    Ia = va.fieldName;
                    if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive") {
                        ua = ua.toUpperCase();
                        Ia = Ia.toUpperCase()
                    }
                    ua != Ia && ob.rq(D)
                }
                ob.hide()
            }
        }
    };
    Ya.style.position =
        "absolute";
    Ya.style.left = "230px";
    Ya.style.top = "270px";
    Ya.style.width = "75px";
    Ya.style.fontFamily = "Arial";
    Ya.style.fontSize = "11px";
    Ya.type = "button";
    Ya.value = "Cancel";
    Ya.onclick = function () {
        ob.hide()
    };
    if (pui.viewdesigner || pui.ja) lb.style.visibility = "hidden";
    lb.style.position = "absolute";
    lb.style.left = "310px";
    lb.style.top = "270px";
    lb.style.width = "100px";
    lb.style.fontFamily = "Arial";
    lb.style.fontSize = "11px";
    lb.type = "button";
    n();
    lb.onclick = function (va) {
        if (F == null) F = new pui.designer.kk;
        F.Lh = true;
        F.tk = false;
        F.vk = false;
        F.Hl(fc);
        F.db("Keyword List");
        F.pa = function (ua) {
            fc = ua;
            n()
        };
        F.Xc = function () {
            Ra.disabled = false;
            X.disabled = false;
            Sa.disabled = false;
            lb.disabled = false
        };
        F.Nj = function (ua) {
            var Ia = ua.split("(")[0];
            if (Ia.toUpperCase() != Ia) {
                var Gb = ua.indexOf(Ia);
                if (Gb >= 0) {
                    Ia = Ia.toUpperCase();
                    ua = ua.substr(0, Gb) + Ia + ua.substr(Gb + Ia.length)
                } else {
                    pui.alert("Keyword name must be upper case.");
                    return false
                }
            }
            Ia = S.wa(Ia);
            if (Ia != "") {
                pui.alert("Keyword name " + Ia);
                return false
            }
            if (!/^\s*[^\s\(\)]*\s*(?:\([^']*\)|\(\s*'.*'\s*\))??\s*$/i.test(ua)) {
                pui.alert("Keyword syntax is invalid.");
                return false
            }
            return ua
        };
        X.disabled = true;
        Ra.disabled = true;
        Sa.disabled = true;
        lb.disabled = true;
        F.show(va, parseInt(B.style.left) + 105, parseInt(B.style.top) + 55)
    };
    z.appendChild(H);
    z.appendChild(J);
    z.appendChild(K);
    z.appendChild(L);
    z.appendChild(N);
    z.appendChild(O);
    z.appendChild(V);
    z.appendChild(X);
    z.appendChild(ga);
    z.appendChild(U);
    z.appendChild(Z);
    z.appendChild(Y);
    z.appendChild(la);
    z.appendChild(qa);
    z.appendChild(oa);
    z.appendChild(ma);
    z.appendChild(ea);
    z.appendChild(ka);
    z.appendChild(Ba);
    z.appendChild(da);
    z.appendChild(pa);
    z.appendChild(Ea);
    z.appendChild(m);
    z.appendChild(ia);
    z.appendChild(Ta);
    z.appendChild(La);
    z.appendChild(Wa);
    z.appendChild(kb);
    z.appendChild(Cb);
    z.appendChild(qb);
    z.appendChild(xb);
    z.appendChild(tb);
    z.appendChild(Eb);
    z.appendChild(jb);
    z.appendChild(nb);
    z.appendChild(wb);
    z.appendChild(Lb);
    z.appendChild(Ib);
    z.appendChild(Hb);
    z.appendChild(cb);
    z.appendChild(ya);
    z.appendChild(db);
    z.appendChild(Da);
    z.appendChild(Fa);
    z.appendChild(pb);
    z.appendChild(ab);
    z.appendChild(sb);
    z.appendChild(gb);
    z.appendChild(eb);
    z.appendChild(Db);
    z.appendChild(A);
    z.appendChild($a);
    z.appendChild(G);
    z.appendChild(C);
    z.appendChild(P);
    z.appendChild(M);
    z.appendChild(T);
    z.appendChild(ca);
    z.appendChild(W);
    z.appendChild(aa);
    z.appendChild(ba);
    z.appendChild(fa);
    z.appendChild(ha);
    z.appendChild(na);
    z.appendChild(sa);
    z.appendChild(wa);
    z.appendChild(xa);
    z.appendChild(Aa);
    z.appendChild(ta);
    z.appendChild(Pa);
    z.appendChild(Ga);
    z.appendChild(Ua);
    z.appendChild(Za);
    z.appendChild(rb);
    z.appendChild(Ra);
    z.appendChild(Sa);
    z.appendChild(Ya);
    z.appendChild(lb);
    B.appendChild(I);
    B.appendChild(z);
    document.body.appendChild(B);
    setTimeout(function () {
        U.Ic = new pui.bs(U, 1, pui.nodedesigner ? 16773104 : 32763);
        la.Ic = new pui.bs(la, -0.5, 99);
        k()
    }, 0);
    pui.rd({wc: I, move: B, opacity: 85});
    this.cB = function (va, ua, Ia) {
        function Gb(Bb) {
            Bb = z.getElementsByTagName(Bb);
            for (var Nb = 0; Nb < Bb.length; Nb++) {
                var Xb = Bb[Nb], Ab = Xb.Sa;
                if (Ab != null) {
                    Ab = va[Ab];
                    if (Ab != null) if (Xb.tagName == "INPUT" && Xb.type == "checkbox") {
                        if (typeof Ab == "string") Ab = Ab == "true" ? true : false;
                        Xb.checked = Ab
                    } else Xb.value =
                        Ab
                }
            }
        }

        Ra.style.display = pui.ja && ua.name == "bound field" ? "none" : "";
        N.value = "";
        fc = [];
        n();
        if (Ia) {
            Lc = Ia.selection.e;
            v = Ia.D;
            if (Ia.selection.e.length > 0) {
                var ub = Ia.selection.e[0].c.bb();
                if (ub == null && pui.hn(ua.name)) ub = Ia.selection.e[0].c.dom.grid;
                if (ub != null) v = ub.D
            }
        }
        if (ua.p == true) {
            ka.style.display = "none";
            ea.style.display = "none";
            Ra.style.top = "120px";
            Sa.style.top = "120px";
            Ya.style.top = "120px";
            lb.style.top = "120px";
            B.style.height = "172px";
            z.style.height = "152px"
        } else {
            ka.style.display = "";
            ea.style.display = "";
            Ra.style.top =
                "270px";
            Sa.style.top = "270px";
            Ya.style.top = "270px";
            lb.style.top = "270px";
            B.style.height = "322px";
            z.style.height = "302px"
        }
        for (Ia = X.options.length = 0; Ia < Wb.length; Ia++) {
            ub = true;
            if (ua.o != null) {
                ub = false;
                for (j = 0; j < ua.o.length; j++) if (ua.o[j] == Wb[Ia].value) {
                    ub = true;
                    break
                }
            }
            if (ub) {
                ub = new Option(Wb[Ia].df, Wb[Ia].value);
                ub.formatting = Wb[Ia].formatting;
                X.options[X.options.length] = ub
            }
        }
        if (va == null) {
            D = null;
            Ra.style.visibility = "hidden";
            H.value = b ? b.Mb.name : v.Tm();
            w();
            if (ua.format == "px" || ua.format == "number") {
                a("zoned");
                ka.selectedIndex = 1;
                U.value = "5";
                la.value = "0";
                gb.selectedIndex = ua.format == "px" ? 1 : 0
            } else {
                for (Ia = 0; Ia < Db.options.length; Ia++) if (Db.options[Ia].value == ua.format) {
                    a("indicator");
                    ka.selectedIndex = 2;
                    Db.selectedIndex = Ia;
                    k();
                    return
                }
                if (ua.choices != null && typeof ua.choices != "function" && ua.choices.length >= 2) if (ua.choices[0] == "true" && ua.choices[1] == "false") {
                    a("indicator");
                    ka.selectedIndex = 2;
                    Db.selectedIndex = 1;
                    k();
                    return
                }
                if (b) {
                    ua = S.zp(b.Mb);
                    a("reference");
                    X.onchange();
                    oa.value = ua.refField;
                    d(ua.formatting)
                } else {
                    if (pui.viewdesigner ||
                        pui.nodedesigner) {
                        a("varchar");
                        U.value = "25"
                    } else {
                        a("char");
                        U.value = "10"
                    }
                    if (ua.oj != null) U.value = String(ua.oj);
                    ka.selectedIndex = 0
                }
            }
            k()
        } else {
            w();
            Ra.style.visibility = "";
            D = va.fieldName;
            fc = va.keywords == null ? [] : va.keywords;
            n();
            if (va.locale != null) {
                ha.value = va.locale;
                T.value = va.locale;
                aa.value = va.locale;
                ha.onchange();
                T.onchange();
                aa.onchange()
            }
            if (va.negNum) va.negNum = va.negNum.toUpperCase();
            Gb("input");
            Gb("select");
            k();
            if (N.style.visibility == "hidden") N.value = "";
            if (pui.designer.Ea && va.longName != null) H.value =
                va.longName
        }
    };
    this.show = function (va) {
        var ua = document.body.offsetWidth, Ia = document.body.offsetHeight;
        if (ua == null) ua = 1E4;
        if (Ia == null) Ia = 1E4;
        ua -= 465;
        Ia -= 340;
        if (ua < 0) ua = 0;
        if (Ia < 0) Ia = 0;
        var Gb = S.getX(va);
        va = S.getY(va);
        va -= 175;
        if (Q == "dspf" && va > Ia) va = Ia;
        if (va < 0) va = 0;
        if (Gb > ua) Gb = ua;
        B.style.left = Gb + "px";
        B.style.top = va + "px";
        B.style.visibility = "visible";
        B.style.display = "";
        X.disabled = false;
        Ra.disabled = false;
        Sa.disabled = false;
        Ya.disabled = false;
        lb.disabled = false;
        U.Ic.kl();
        la.Ic.kl();
        ua = H.value;
        if (pui.pjsDefaultMode ===
            "compatibility") ua = ua.toLowerCase();
        Ia = H.style.visibility;
        Gb = document.createElement("input");
        H.parentNode.replaceChild(Gb, H);
        H = Gb;
        H.value = ua;
        H.style.visibility = Ia;
        r();
        H.style.visibility != "hidden" && H.focus()
    };
    this.hide = function () {
        s() && E.hide();
        t() && y.hide();
        u() && F.hide();
        B.style.visibility = "hidden";
        B.style.display = "none";
        if (ob.Xc != null) {
            ob.Xc();
            ob.Xc = null
        }
    };
    this.isHidden = function () {
        return B.style.visibility == "hidden"
    };
    this.db = function (va) {
        if (kd != null) kd.innerHTML = va; else I.innerHTML = va
    };
    this.Wj = function () {
        H.select()
    }
};
pui.designer.Ea = false;
pui.designer.ND = function () {
    function b() {
        H = z = null;
        g.style.visibility = "hidden";
        r.style.visibility = "hidden";
        n.value = "";
        i.checked = "";
        n.disabled = false;
        var O = u.length;
        h.innerHTML = O == 0 ? "No translations" : "Translation " + w + " of " + O;
        if ((!v.type || v.type != "list") && O != 0) {
            E.style.visibility = "hidden";
            y.style.top = "15px";
            o.style.display = "none";
            i.style.display = "none"
        } else {
            E.style.visibility = "visible";
            y.style.top = "50px";
            o.style.display = "block";
            i.style.display = "block"
        }
        if (O == 0) {
            y.disabled = true;
            F.disabled = true;
            D.disabled =
                true;
            E.disabled = false
        } else {
            g.style.visibility = "visible";
            y.disabled = false;
            F.disabled = w >= O ? true : false;
            D.disabled = w <= 1 ? true : false;
            O = u[w - 1].id;
            if (O == null) setTimeout(function () {
                n.focus()
            }, 0); else if (O == 0) {
                i.checked = true;
                i.onclick()
            } else c(O)
        }
    }

    function a() {
        if (w == 0) return true;
        if (z == null) return false;
        u[w - 1].id = z;
        u[w - 1].rA = H;
        return true
    }

    function c(O) {
        screenMask.msg = "Loading...";
        screenMask.show();
        jc({
            url: cc("PUI0001113.pgm"), method: "POST", params: {id: O}, handler: function (V, X) {
                screenMask.hide();
                if (V == null) pui.alert(X);
                else {
                    for (var ga = t.rows.length - 1; ga >= 0; ga--) t.deleteRow(ga);
                    var U = V.response.results;
                    for (ga = 0; ga < U.length; ga++) {
                        var Z = U[ga];
                        if (Z.lang == pui.ide.Am) {
                            z = Z.id;
                            H = n.value = Z.phrase;
                            n.focus()
                        } else {
                            var la = t.insertRow(-1), Y = la.insertCell(-1);
                            Y.style.overflow = "hidden";
                            Y.innerHTML = Z.lang;
                            Y = la.insertCell(-1);
                            Y.style.overflow = "hidden";
                            Y.innerHTML = Z.phrase
                        }
                    }
                    n.focus();
                    r.style.visibility = "visible"
                }
            }
        })
    }

    this.designer = this.pa = null;
    var d = document.createElement("div"), e = document.createElement("div"), f = document.createElement("div"),
        h = document.createElement("div"), g = document.createElement("div"), l = document.createElement("div"),
        n = document.createElement("input"), o = document.createElement("div"), i = document.createElement("input"),
        r = document.createElement("div"), k = document.createElement("table"), q = document.createElement("div"),
        s = document.createElement("table"), t = document.createElement("tbody"), u = [], w = 0, v,
        E = document.createElement("input"), y = document.createElement("input"), F = document.createElement("input"),
        D = document.createElement("input"),
        B = document.createElement("input"), I = document.createElement("input"), z, H, J = this;
    d.style.fontFamily = "arial";
    d.style.fontSize = "12px";
    d.style.width = "445px";
    d.style.border = "2px solid #336699";
    d.style.position = "absolute";
    d.style.top = "50px";
    d.style.left = "50px";
    d.style.padding = "0px";
    d.style.zIndex = S.pC;
    d.style.visibility = "hidden";
    d.style.display = "none";
    d.style.height = "342px";
    d.style.overflow = "hidden";
    S.W(document, "mousedown", function (O) {
        for (O = S.getTarget(O); O != null;) {
            if (O == d) return;
            O = O.parentNode
        }
        J.hide()
    });
    e.innerHTML = "Translation Settings";
    e.style.backgroundColor = "#6699cc";
    e.style.padding = "3px";
    e.style.cursor = "move";
    e.style.fontWeight = "bold";
    e.style.color = "#ffffff";
    e.style.position = "absolute";
    e.style.left = "0px";
    e.style.top = "0px";
    e.style.whiteSpace = "normal";
    e.style.width = "100%";
    if (typeof e.style.MozUserSelect != "undefined") e.style.MozUserSelect = "none";
    f.style.overflow = "auto";
    f.style.height = "322px";
    f.style.backgroundColor = "#ffffff";
    f.style.padding = "0px";
    f.style.position = "absolute";
    f.style.left = "0px";
    f.style.top = "20px";
    f.style.whiteSpace = "normal";
    f.style.width = "100%";
    var K = null;
    if (Q == "dspf") K = pui.Gf(d, e, f, function () {
        J.hide()
    });
    h.style.position = "absolute";
    h.style.left = "10px";
    h.style.top = "5px";
    h.style.fontWeight = "bold";
    g.style.position = "absolute";
    g.style.left = "10px";
    g.style.top = "30px";
    g.style.overflow = "hidden";
    l.style.styleFloat = "left";
    l.style.cssFloat = "left";
    l.style.width = "75px";
    l.style.fontWeight = "bold";
    l.innerHTML = "Phrase:";
    n.style.width = "240px";
    n.style.display = "block";
    n.style.clear = "right";
    n.style.sF = "right";
    o.style.styleFloat = "left";
    o.style.cssFloat = "left";
    o.style.fontWeight = "bold";
    o.style.width = "75px";
    o.style.marginTop = "10px";
    o.innerHTML = "Blank entry:";
    i.style.marginTop = "10px";
    i.type = "checkbox";
    i.style.display = "block";
    i.style.clear = "right";
    i.style.sF = "right";
    if (navigator.userAgent.toLowerCase().indexOf("chrome") != -1) {
        i.style.styleFloat = "left";
        i.style.cssFloat = "left"
    }
    i.onclick = function () {
        if (i.checked) {
            n.value = "";
            n.disabled = true;
            z = 0;
            H = "";
            r.style.visibility = "hidden"
        } else {
            n.disabled =
                false;
            z = null;
            n.focus()
        }
    };
    var L;
    n.onkeydown = function (O) {
        if (!O) O = window.event;
        O = O.keyCode;
        if (O == 13) {
            if (L != null && L.dn()) return;
            B.onclick()
        }
        O == 27 && I.onclick()
    };
    r.style.marginTop = "5px";
    k.style.width = "325px";
    k.style.tableLayout = "fixed";
    k.style.borderCollapse = "collapse";
    k.appendChild(document.createElement("col")).width = "70px";
    var N = k.createTHead().insertRow(-1);
    N.appendChild(document.createElement("th")).appendChild(document.createTextNode("Language"));
    N.appendChild(document.createElement("th")).appendChild(document.createTextNode("Phrase"));
    N.childNodes[0].style.fontWeight = "bold";
    N.childNodes[1].style.fontWeight = "bold";
    q.style.width = "325px";
    q.style.height = "195px";
    q.style.overflow = "auto";
    s.style.width = "305px";
    s.style.tableLayout = "fixed";
    s.style.borderCollapse = "collapse";
    s.appendChild(document.createElement("col")).width = "70px";
    E.style.position = "absolute";
    E.style.left = "360px";
    E.style.top = "15px";
    E.style.width = "75px";
    E.style.fontFamily = "Arial";
    E.style.fontSize = "11px";
    E.type = "button";
    E.value = "Add";
    E.onclick = function () {
        if (a() != false) {
            u.push({});
            w = u.length;
            b()
        }
    };
    y.style.position = "absolute";
    y.style.left = "360px";
    y.style.top = "50px";
    y.style.width = "75px";
    y.style.fontFamily = "Arial";
    y.style.fontSize = "11px";
    y.type = "button";
    y.value = "Remove";
    y.onclick = function () {
        if (w != 0) if (!(w > u.length)) {
            u.splice(w - 1, 1);
            if (w > u.length) w = u.length;
            b()
        }
    };
    F.style.position = "absolute";
    F.style.left = "360px";
    F.style.top = "85px";
    F.style.width = "75px";
    F.style.fontFamily = "Arial";
    F.style.fontSize = "11px";
    F.type = "button";
    F.value = "Next";
    F.onclick = function () {
        if (a() != false) {
            w < u.length &&
            w++;
            b()
        }
    };
    D.style.position = "absolute";
    D.style.left = "360px";
    D.style.top = "120px";
    D.style.width = "75px";
    D.style.fontFamily = "Arial";
    D.style.fontSize = "11px";
    D.type = "button";
    D.value = "Previous";
    D.onclick = function () {
        if (a() != false) {
            if (w > 1) w -= 1;
            b()
        }
    };
    B.style.position = "absolute";
    B.style.left = "15px";
    B.style.top = "290px";
    B.style.width = "75px";
    B.style.fontFamily = "Arial";
    B.style.fontSize = "11px";
    B.type = "button";
    B.value = "OK";
    B.onclick = function () {
        if (a() != false) {
            if (J.pa != null) {
                var O = null;
                if (u.length > 0) {
                    O = {};
                    O.designValue =
                        [];
                    O.translations = [];
                    for (var V = 0; V < u.length; V++) {
                        var X = u[V].rA;
                        if (u[V].id != 0) X = "[" + X + "]";
                        O.designValue.push(X);
                        O.translations.push(u[V].id)
                    }
                    O.designValue = u.length > 1 ? JSON.stringify(O.designValue) : O.designValue[0]
                }
                J.pa(O)
            }
            J.hide()
        }
    };
    I.style.position = "absolute";
    I.style.left = "95px";
    I.style.top = "290px";
    I.style.width = "75px";
    I.style.fontFamily = "Arial";
    I.style.fontSize = "11px";
    I.type = "button";
    I.value = "Cancel";
    I.onclick = function () {
        J.hide()
    };
    s.appendChild(t);
    q.appendChild(s);
    r.appendChild(k);
    r.appendChild(q);
    g.appendChild(l);
    g.appendChild(n);
    g.appendChild(o);
    g.appendChild(i);
    g.appendChild(r);
    f.appendChild(h);
    f.appendChild(g);
    f.appendChild(E);
    f.appendChild(y);
    f.appendChild(F);
    f.appendChild(D);
    f.appendChild(B);
    f.appendChild(I);
    d.appendChild(e);
    d.appendChild(f);
    document.body.appendChild(d);
    L = new Tc({
        zo: n,
        template: '<div class="autocomplete-item"><div class="autocomplete-col" style="float: left; width: 175px;">(phrase)</div><div class="autocomplete-col" style="float: left; width: 65px;"><strong style="font-weight:bold;">id: </strong>(id)</div></div>',
        url: cc("PUI0001113.pgm"),
        baseParams: {task: "search"},
        bl: 999999,
        width: 250,
        rv: true,
        maxHeight: 215,
        beforequery: function (O, V) {
            V = $b(V);
            if (V == "") return false;
            O.lang = pui.ide.Am;
            O.phrase = V + "%";
            O.phraseU = V.toUpperCase() + "%"
        },
        onselect: function (O) {
            O.id != z && c(O.id)
        }
    });
    pui.rd({wc: e, move: d, opacity: 85});
    this.load = function (O, V) {
        v = V;
        J.db("Translation settings for " + v.name);
        F.style.visibility = v.type && v.type == "list" ? D.style.visibility = "visible" : D.style.visibility = "hidden";
        u = [];
        if (O != null) {
            var X;
            X = O.translations.length >
            1 ? JSON.parse(O.designValue) : [O.designValue];
            for (var ga = 0; ga < O.translations.length; ga++) {
                u[ga] = {};
                u[ga].id = O.translations[ga];
                u[ga].rA = ga < X.length && X[ga].length >= 3 ? X[ga].substr(1, X[ga].length - 2) : ""
            }
            w = 1;
            b()
        } else {
            w = 0;
            b();
            E.onclick()
        }
    };
    this.show = function (O) {
        if (typeof pui.ide.Am == "undefined") pui.alert('You must select a language before you can work with translations.\n\nYou can select the language under "Settings" in the Home section of the toolbar.'); else {
            var V = document.body.offsetWidth, X = document.body.offsetHeight;
            if (V == null) V = 1E4;
            if (X == null) X = 1E4;
            V -= 475;
            X -= 380;
            if (V < 0) V = 0;
            if (X < 0) X = 0;
            var ga = S.getX(O);
            O = S.getY(O);
            O -= 175;
            if (Q == "dspf" && O > X) O = X;
            if (O < 0) O = 0;
            if (ga > V) ga = V;
            d.style.left = ga + "px";
            d.style.top = O + "px";
            d.style.visibility = "visible";
            d.style.display = "";
            B.disabled = false;
            I.disabled = false
        }
    };
    this.hide = function () {
        if (d.style.visibility != "hidden") {
            d.style.visibility = "hidden";
            d.style.display = "none";
            if (J.Xc != null) {
                J.Xc();
                J.Xc = null
            }
        }
    };
    this.isHidden = function () {
        return d.style.visibility == "hidden"
    };
    this.db = function (O) {
        if (K !=
            null) K.innerHTML = O; else e.innerHTML = O
    }
};
pui.designer.Zr = function (b) {
    function a(F) {
        var D = document.createElement("div");
        n.push(D);
        D.style.position = "absolute";
        D.style.left = "20px";
        D.style.top = n.length * 30 + 5 + "px";
        D.style.fontFamily = "Trebuchet MS";
        D.style.fontSize = "13px";
        D.innerHTML = F.label;
        h.appendChild(D);
        D = document.createElement("input");
        D.type = "text";
        D.style.position = "absolute";
        D.style.top = n.length * 30 + 5 + "px";
        D.style.fontFamily = "Arial";
        D.style.fontSize = "12px";
        if (F.maxLength != null) D.maxLength = F.maxLength;
        if (F.uppercase == true) D.style.textTransform =
            "uppercase";
        D.propertyName = F.name;
        if (F.bp == true) {
            D.type = "checkbox";
            D.style.left = "145px";
            if (F.help != null && F.help != "") D.title = F.help
        } else {
            D.style.left = "170px";
            D.style.width = "150px"
        }
        o.push(D);
        var B = document.createElement("button");
        B.innerHTML = pui.flatlook ? '<img src="/profoundui/proddata/images/FlatIcons/bind.png" />' : '<img src="/profoundui/proddata/images/icons/bind_small.png" />';
        B.title = 'Bind "' + F.label + '" to a program field...';
        B.style.position = "absolute";
        B.style.marginLeft = "5px";
        B.style.marginBottom =
            "2px";
        B.style.verticalAlign = "middle";
        B.style.width = "24px";
        B.style.height = "20px";
        B.style.padding = "0px";
        B.style.left = "135px";
        B.style.top = n.length * 30 + 4 + "px";
        B.MI = D;
        B.config = F;
        B.onclick = function (I) {
            var z = S.getTarget(I);
            if (z.tagName == "IMG") z = z.parentNode;
            var H = z.MI, J = H.propertyName;
            E.za.pa = function (L) {
                if (!b) {
                    var N = {};
                    N.fieldName = L.fieldName;
                    N.dataType = L.dataType;
                    N.dataLength = L.dataLength;
                    N.decPos = L.decPos;
                    N.refField = L.refField;
                    N.keywords = L.keywords;
                    N.property = J;
                    N.longName = L.longName;
                    if (k > 1) N.property +=
                        " " + k;
                    if (!E.designer.selection.Nw(N, E.designer)) return false
                }
                H.ra = L;
                H.value = typeof L.longName != "undefined" ? L.longName : L.fieldName;
                H.readOnly = true;
                H.style.color = "#339933";
                H.style.fontWeight = "bold";
                H.style.border = "1px solid #CCCCCC";
                H.style.backgroundColor = "#DFE8F6";
                return true
            };
            E.za.rq = function (L) {
                if (!b) {
                    var N = J;
                    if (k > 1) N += " " + k;
                    E.designer.selection.On(N, E.designer, L, true)
                }
            };
            E.za.tq = function () {
                if (!b && H.ra != null && H.ra.fieldName != null) {
                    var L = J;
                    if (k > 1) L += " " + k;
                    E.designer.selection.On(L, E.designer, H.ra.fieldName)
                }
                H.ra =
                    null;
                H.value = "";
                if (z.config.readOnly == true) H.style.border = "0px none #CCCCCC"; else {
                    H.readOnly = false;
                    H.style.color = "";
                    H.style.fontWeight = "";
                    H.style.border = "1px solid #7F9DB9";
                    H.style.backgroundColor = "";
                    H.focus()
                }
            };
            E.za.cB(H.ra, z.config, E.designer);
            var K = "";
            if (!b && E.designer.selection.e.length > 0) K = E.designer.selection.e[0].c.properties.id + " - ";
            K += "Bind <span style='font-weight: bold;'>" + z.config.label + "</span> to a Program Field";
            E.za.db(K);
            E.za.lb = J;
            if (k > 1) E.za.lb += " " + k;
            E.za.Ii = "";
            E.za.hide();
            E.za.show(I)
        };
        h.appendChild(B);
        h.appendChild(D);
        i.push(B);
        if (F.bind == false) B.style.display = "none";
        F = n.length * 30 + 30;
        if (F < 140) F = 140;
        g.style.height = F + "px";
        g.style.width = pui.is_firefox ? "335px" : "330px"
    }

    function c() {
        var F = r.length;
        l.innerHTML = F == 0 ? "No " + E.Jh + "s" : E.Jh + " " + k + " of " + F;
        if (F == 0) {
            s.disabled = true;
            t.disabled = true;
            u.disabled = true;
            for (F = 0; F < n.length; F++) {
                n[F].style.visibility = "hidden";
                o[F].style.visibility = "hidden";
                i[F].style.visibility = "hidden"
            }
        } else {
            s.disabled = false;
            t.disabled = k >= F ? true : false;
            u.disabled = k <=
            1 ? true : false;
            for (F = 0; F < n.length; F++) {
                var D = r[k - 1][F];
                n[F].style.visibility = "";
                o[F].style.visibility = "";
                i[F].style.visibility = "";
                if (pui.f(D) || i[F].config.readOnly == true) {
                    if (pui.f(D)) {
                        o[F].value = typeof D.longName != "undefined" ? D.longName : D.fieldName;
                        o[F].ra = D
                    } else {
                        o[F].value = "";
                        o[F].ra = null
                    }
                    o[F].readOnly = true;
                    o[F].style.color = "#339933";
                    o[F].style.fontWeight = "bold";
                    o[F].style.border = pui.f(D) ? "1px solid #CCCCCC" : "0px none #CCCCCC";
                    o[F].style.backgroundColor = "#DFE8F6"
                } else {
                    o[F].value = D;
                    if (o[F].type == "checkbox") o[F].checked =
                        D == "1" ? true : false;
                    o[F].ra = null;
                    o[F].readOnly = false;
                    o[F].style.color = "";
                    o[F].style.fontWeight = "";
                    o[F].style.border = "1px solid #7F9DB9";
                    o[F].style.backgroundColor = ""
                }
            }
            o.length > 0 && !E.isHidden() && !o[0].readOnly && o[0].focus()
        }
    }

    function d() {
        if (k == 0) return true;
        if (E.Mh && E.Mh(o) == false) return false;
        for (var F = 0; F < o.length; F++) {
            var D = o[F].ra;
            if (D == null) {
                D = o[F].value;
                if (o[F].type == "checkbox") D = o[F].checked ? "1" : "0";
                if (i[F].config.uppercase == true) D = D.toUpperCase()
            }
            r[k - 1][F] = D
        }
        return true
    }

    this.za = this.designer =
        this.Mh = this.pa = null;
    this.Jh = "Message";
    var e = document.createElement("div"), f = document.createElement("div"), h = document.createElement("div"),
        g = document.createElement("fieldset"), l = document.createElement("legend"), n = [], o = [], i = [], r = [],
        k = 0, q = document.createElement("input"), s = document.createElement("input"),
        t = document.createElement("input"), u = document.createElement("input"), w = document.createElement("input"),
        v = document.createElement("input"), E = this;
    e.style.width = "445px";
    e.style.border = "2px solid #336699";
    e.style.position = "absolute";
    e.style.top = "50px";
    e.style.left = "50px";
    e.style.padding = "0px";
    e.style.zIndex = S.pC;
    e.style.visibility = "hidden";
    e.style.display = "none";
    e.style.height = "342px";
    e.style.overflow = "hidden";
    S.W(document, "mousedown", function (F) {
        if (E.za != null) if (E.za.isHidden()) {
            for (F = S.getTarget(F); F != null;) {
                if (F == e) return;
                F = F.parentNode
            }
            E.hide()
        }
    });
    f.innerHTML = "Bind";
    f.style.fontSize = "12px";
    f.style.fontFamily = "Arial";
    f.style.backgroundColor = "#6699cc";
    f.style.padding = "3px";
    f.style.cursor = "move";
    f.style.fontWeight = "bold";
    f.style.color = "#ffffff";
    f.style.position = "absolute";
    f.style.left = "0px";
    f.style.top = "0px";
    f.style.whiteSpace = "normal";
    f.style.width = "100%";
    if (typeof f.style.MozUserSelect != "undefined") f.style.MozUserSelect = "none";
    h.style.overflow = "auto";
    h.style.height = "322px";
    h.style.backgroundColor = "#ffffff";
    h.style.padding = "0px";
    h.style.position = "absolute";
    h.style.left = "0px";
    h.style.top = "20px";
    h.style.whiteSpace = "normal";
    h.style.width = "100%";
    var y = null;
    if (Q == "dspf") y = pui.Gf(e, f, h, function () {
        E.hide()
    });
    g.style.position = "absolute";
    g.style.left = "5px";
    g.style.top = "5px";
    g.style.fontFamily = "Trebuchet MS";
    g.style.fontSize = "14px";
    g.style.fontWeight = "bold";
    g.appendChild(l);
    q.style.position = "absolute";
    q.style.left = "360px";
    q.style.top = "15px";
    q.style.width = "75px";
    q.style.fontFamily = "Arial";
    q.style.fontSize = "11px";
    q.type = "button";
    q.value = "Add";
    q.onclick = function () {
        if (d() != false) {
            for (var F = [], D = 0; D < n.length; D++) {
                F.push("");
                if (n[D].innerHTML == "Enhanced Mode") F[F.length - 1] = "1"
            }
            r.push(F);
            k = r.length;
            c()
        }
    };
    s.style.position =
        "absolute";
    s.style.left = "360px";
    s.style.top = "50px";
    s.style.width = "75px";
    s.style.fontFamily = "Arial";
    s.style.fontSize = "11px";
    s.type = "button";
    s.value = "Remove";
    s.onclick = function () {
        if (k != 0) if (!(k > r.length)) {
            r.splice(k - 1, 1);
            if (k > r.length) k = r.length;
            c()
        }
    };
    t.style.position = "absolute";
    t.style.left = "360px";
    t.style.top = "85px";
    t.style.width = "75px";
    t.style.fontFamily = "Arial";
    t.style.fontSize = "11px";
    t.type = "button";
    t.value = "Next";
    t.onclick = function () {
        if (d() != false) {
            k < r.length && k++;
            c()
        }
    };
    u.style.position = "absolute";
    u.style.left = "360px";
    u.style.top = "120px";
    u.style.width = "75px";
    u.style.fontFamily = "Arial";
    u.style.fontSize = "11px";
    u.type = "button";
    u.value = "Previous";
    u.onclick = function () {
        if (d() != false) {
            if (k > 1) k -= 1;
            c()
        }
    };
    w.style.position = "absolute";
    w.style.left = "15px";
    w.style.top = "290px";
    w.style.width = "75px";
    w.style.fontFamily = "Arial";
    w.style.fontSize = "11px";
    w.type = "button";
    w.value = "OK";
    w.onclick = function () {
        if (d() != false) {
            var F, D;
            if (b) {
                D = b.properties;
                F = {};
                for (var B in D) F[B] = true
            } else if (E.designer.selection.e.length ==
                0) {
                D = E.designer.Ga[E.designer.i.l];
                F = E.designer.Nd[E.designer.i.l]
            } else {
                F = E.designer.selection.e[0].c;
                D = F.properties;
                F = F.m
            }
            for (var I = 1, z = false; !z;) {
                z = true;
                for (B = 0; B < o.length; B++) {
                    var H = o[B].propertyName;
                    if (I != 1) H += " " + I;
                    if (D[H] != null) {
                        delete D[H];
                        z = false
                    }
                    if (F[H] != null) {
                        delete F[H];
                        z = false
                    }
                }
                I++
            }
            for (B = 0; B < r.length; B++) for (I = 0; I < o.length; I++) {
                H = o[I].propertyName;
                if (B != 0) H += " " + (B + 1);
                D[H] = r[B][I];
                F[H] = true
            }
            E.pa != null && E.pa(r);
            E.hide()
        }
    };
    v.style.position = "absolute";
    v.style.left = "95px";
    v.style.top = "290px";
    v.style.width = "75px";
    v.style.fontFamily = "Arial";
    v.style.fontSize = "11px";
    v.type = "button";
    v.value = "Cancel";
    v.onclick = function () {
        E.hide()
    };
    h.appendChild(g);
    h.appendChild(q);
    h.appendChild(s);
    h.appendChild(t);
    h.appendChild(u);
    h.appendChild(w);
    h.appendChild(v);
    e.appendChild(f);
    e.appendChild(h);
    document.body.appendChild(e);
    pui.rd({wc: f, move: e, opacity: 85});
    this.load = function (F, D) {
        for (; n.length > 0;) {
            var B = n.length - 1;
            n[B].parentNode.removeChild(n[B]);
            o[B].parentNode.removeChild(o[B]);
            i[B].parentNode.removeChild(i[B]);
            n.pop();
            o.pop();
            i.pop()
        }
        for (B = 0; B < F.length; B++) a(F[B]);
        r = [];
        k = 0;
        for (var I = 1, z = false; !z;) {
            z = true;
            for (B = 0; B < F.length; B++) {
                var H = F[B].name;
                if (I != 1) H += " " + I;
                H = D[H];
                if (H != null && H != "") {
                    z = false;
                    break
                }
            }
            if (!z) {
                r[I - 1] = [];
                for (B = 0; B < F.length; B++) {
                    H = F[B].name;
                    if (I != 1) H += " " + I;
                    H = D[H];
                    if (H == null) H = "";
                    r[I - 1][B] = H
                }
                if (I == 1) k = 1
            }
            I++
        }
        c()
    };
    this.show = function (F) {
        var D = document.body.offsetWidth, B = document.body.offsetHeight;
        if (D == null) D = 1E4;
        if (B == null) B = 1E4;
        D -= 475;
        B -= 380;
        if (D < 0) D = 0;
        if (B < 0) B = 0;
        var I = S.getX(F);
        F = S.getY(F);
        F -= 175;
        if (Q == "dspf" && F > B) F = B;
        if (F < 0) F = 0;
        if (I > D) I = D;
        e.style.left = I + "px";
        e.style.top = F + "px";
        e.style.visibility = "visible";
        e.style.display = "";
        w.disabled = false;
        v.disabled = false
    };
    this.hide = function () {
        if (e.style.visibility != "hidden") {
            if (!b) {
                E.designer.D.uh();
                var F, D;
                if (E.designer.selection.e.length == 0) {
                    F = "Screen";
                    D = E.designer.Ga[E.designer.i.l]
                } else {
                    F = E.designer.selection.e[0].c;
                    D = F.properties
                }
                for (var B = false, I = 1; !B;) {
                    B = true;
                    for (var z = 0; z < o.length; z++) {
                        var H = o[z].propertyName;
                        if (I != 1) H += " " + I;
                        var J = D[H];
                        if (J != null && J != "") {
                            B = false;
                            if (pui.f(J)) {
                                var K = {};
                                K.fieldName = J.fieldName;
                                K.dataType = J.dataType;
                                K.dataLength = J.dataLength;
                                K.decPos = J.decPos;
                                K.refField = J.refField;
                                K.keywords = J.keywords;
                                K.property = H;
                                K.fg = true;
                                K.c = F;
                                K.longName = J.longName;
                                E.designer.D.Tc(K, E.designer)
                            }
                        }
                    }
                    I += 1
                }
            }
            e.style.visibility = "hidden";
            e.style.display = "none";
            if (E.Xc != null) {
                E.Xc();
                E.Xc = null
            }
        }
    };
    this.isHidden = function () {
        return e.style.visibility == "hidden"
    };
    this.db = function (F) {
        if (y != null) y.innerHTML = F; else f.innerHTML = F
    }
};
pui.designer.JC = function () {
    function b() {
        for (var s = 0; s < 9; s++) for (var t = 0; t < 9; t++) {
            e[s][t].value = "";
            f[s][t].checked = false
        }
    }

    this.Ei = this.pa = null;
    var a = document.createElement("div"), c = document.createElement("div"), d = document.createElement("div"), e = [],
        f = [], h = document.createElement("input"), g = document.createElement("input"),
        l = document.createElement("input"), n = this;
    a.style.width = "605px";
    a.style.border = "2px solid #336699";
    a.style.position = "absolute";
    a.style.top = "50px";
    a.style.left = "50px";
    a.style.padding =
        "0px";
    a.style.zIndex = S.TK;
    a.style.visibility = "hidden";
    a.style.display = "none";
    a.style.height = "322px";
    a.style.overflow = "hidden";
    c.innerHTML = "Indicators";
    c.style.fontSize = "12px";
    c.style.fontFamily = "Arial";
    c.style.backgroundColor = "#6699cc";
    c.style.padding = "3px";
    c.style.cursor = "move";
    c.style.fontWeight = "bold";
    c.style.color = "#ffffff";
    c.style.position = "absolute";
    c.style.left = "0px";
    c.style.top = "0px";
    c.style.whiteSpace = "normal";
    c.style.width = "100%";
    if (typeof c.style.MozUserSelect != "undefined") c.style.MozUserSelect =
        "none";
    d.style.overflow = "auto";
    d.style.height = "302px";
    d.style.backgroundColor = "#ffffff";
    d.style.padding = "0px";
    d.style.position = "absolute";
    d.style.left = "0px";
    d.style.top = "20px";
    d.style.whiteSpace = "normal";
    d.style.width = "100%";
    if (Q == "dspf") pui.Gf(a, c, d, function () {
        n.hide()
    }).innerHTML = "Indicators";
    for (var o = 15, i = 0, r = 0; r < 9; r++) {
        e[r] = [];
        f[r] = [];
        o += 24;
        i = 0;
        if (r > 0) {
            var k = document.createElement("div");
            k.style.position = "absolute";
            k.style.left = i + 25 + "px";
            k.style.top = o + "px";
            k.style.fontFamily = "Trebuchet MS";
            k.style.fontSize =
                "13px";
            k.style.fontWeight = "bold";
            k.innerHTML = "or";
            d.appendChild(k)
        }
        for (k = 0; k < 9; k++) {
            i += 60;
            if (r == 0) {
                var q = document.createElement("div");
                q.style.position = "absolute";
                q.style.left = i + 2 + "px";
                q.style.top = o - 25 + "px";
                q.style.fontFamily = "Trebuchet MS";
                q.style.fontSize = "13px";
                q.style.fontWeight = "bold";
                q.style.textDecoration = "underline";
                q.innerHTML = "N";
                d.appendChild(q);
                q = document.createElement("div");
                q.style.position = "absolute";
                q.style.left = i + 25 + "px";
                q.style.top = o - 25 + "px";
                q.style.fontFamily = "Trebuchet MS";
                q.style.fontSize =
                    "13px";
                q.style.fontWeight = "bold";
                q.style.textDecoration = "underline";
                q.innerHTML = "0" + (k + 1);
                d.appendChild(q)
            }
            q = document.createElement("input");
            q.type = "checkbox";
            q.style.position = "absolute";
            q.style.left = i + "px";
            q.style.top = o + "px";
            q.style.width = "16px";
            q.style.height = "16px";
            q.style.fontFamily = "Arial";
            q.style.fontSize = "12px";
            d.appendChild(q);
            f[r][k] = q;
            q = document.createElement("input");
            q.maxLength = 2;
            q.style.position = "absolute";
            q.style.left = i + 20 + "px";
            q.style.top = o + "px";
            q.style.width = "20px";
            q.style.fontFamily =
                "Arial";
            q.style.fontSize = "12px";
            q.onfocus = function (s) {
                S.getTarget(s).style.backgroundColor = "#FFFF99"
            };
            q.onblur = function (s) {
                S.getTarget(s).style.backgroundColor = ""
            };
            q.onkeydown = function (s) {
                if (!s) s = window.event;
                if (s.keyCode == 13) {
                    S.ua(s);
                    h.onclick()
                }
            };
            S.W(q, "keydown", Fb);
            d.appendChild(q);
            e[r][k] = q
        }
    }
    h.style.position = "absolute";
    h.style.left = "60px";
    h.style.top = "270px";
    h.style.width = "75px";
    h.style.fontFamily = "Arial";
    h.style.fontSize = "11px";
    h.type = "button";
    h.value = "OK";
    h.onclick = function () {
        for (var s = "", t =
            0; t < 9; t++) {
            for (var u = "", w = 0; w < 9; w++) {
                var v = e[t][w].value, E = f[t][w].checked;
                if (v.length < 2) v = "0" + v;
                if (v.length < 2) v = "0" + v;
                if (v.length > 2) v = v.substr(0, 2);
                var y = v.substr(0, 1);
                v.substr(1, 1);
                if (y >= "0" && y <= "9" && y >= "0" && y <= "9" && v != "00") {
                    if (u != "") u += " and ";
                    if (E) u += "N";
                    u += v
                }
            }
            if (u != "") {
                if (s != "") s += " or ";
                s += u
            }
        }
        n.pa != null && n.pa(s);
        n.hide()
    };
    g.style.position = "absolute";
    g.style.left = "140px";
    g.style.top = "270px";
    g.style.width = "75px";
    g.style.fontFamily = "Arial";
    g.style.fontSize = "11px";
    g.type = "button";
    g.value = "Cancel";
    g.onclick = function () {
        n.Ei != null && n.Ei();
        n.hide()
    };
    l.style.position = "absolute";
    l.style.left = "220px";
    l.style.top = "270px";
    l.style.width = "75px";
    l.style.fontFamily = "Arial";
    l.style.fontSize = "11px";
    l.type = "button";
    l.value = "Clear";
    l.onclick = function () {
        b();
        e[0][0].focus()
    };
    d.appendChild(h);
    d.appendChild(g);
    d.appendChild(l);
    a.appendChild(c);
    a.appendChild(d);
    document.body.appendChild(a);
    pui.rd({wc: c, move: a, opacity: 85});
    this.NJ = function (s) {
        b();
        s = s.split(" or ");
        for (var t = 0; t < s.length; t++) for (var u = s[t].split(" and "),
                                                    w = 0; w < u.length; w++) {
            var v = u[w], E = false;
            if (v.substr(0, 1) == "N") {
                E = true;
                v = v.substr(1)
            }
            f[t][w].checked = E;
            e[t][w].value = v
        }
    };
    this.show = function (s) {
        var t = document.body.offsetWidth;
        if (t == null) t = 1E4;
        t -= 625;
        if (t < 0) t = 0;
        var u = S.getX(s);
        s = S.getY(s);
        s -= 175;
        if (s < 0) s = 0;
        if (u > t) u = t;
        a.style.left = u + "px";
        a.style.top = s + "px";
        a.style.visibility = "visible";
        a.style.display = "";
        e[0][0].focus()
    };
    this.hide = function () {
        a.style.visibility = "hidden";
        a.style.display = "none"
    };
    this.isHidden = function () {
        return a.style.visibility == "hidden"
    }
};
pui.designer.VC = function () {
    function b(E) {
        if (!E) E = window.event;
        E = E.keyCode;
        E == 13 && t.onclick();
        E == 27 && u.onclick()
    }

    function a() {
        q.disabled = false;
        r.disabled = false;
        if (o.value == "A" || o.value == "M" || o.value == "X" || o.value == "W") {
            q.disabled = true;
            q.value = ""
        } else if (o.value == "L" || o.value == "T" || o.value == "Z") {
            q.disabled = true;
            q.value = "";
            r.disabled = true;
            r.value = ""
        }
    }

    this.Ei = this.pa = null;
    var c = document.createElement("div"), d = document.createElement("div"), e = document.createElement("div"),
        f = document.createElement("input"),
        h = document.createElement("div"), g = document.createElement("input"), l = document.createElement("input"),
        n = document.createElement("div"), o = document.createElement("select"), i = document.createElement("div"),
        r = document.createElement("input"), k = document.createElement("div"), q = document.createElement("input"),
        s = document.createElement("div"), t = document.createElement("input"), u = document.createElement("input"),
        w = new pui.designer.qw, v = this;
    c.style.width = "305px";
    c.style.border = "2px solid #336699";
    c.style.position =
        "absolute";
    c.style.top = "50px";
    c.style.left = "50px";
    c.style.padding = "0px";
    c.style.zIndex = S.YK;
    c.style.visibility = "hidden";
    c.style.display = "none";
    c.style.height = "220px";
    c.style.overflow = "hidden";
    d.innerHTML = "Reference Field Details";
    d.style.fontSize = "12px";
    d.style.fontFamily = "Arial";
    d.style.backgroundColor = "#6699cc";
    d.style.padding = "3px";
    d.style.cursor = "move";
    d.style.fontWeight = "bold";
    d.style.color = "#ffffff";
    d.style.position = "absolute";
    d.style.left = "0px";
    d.style.top = "0px";
    d.style.whiteSpace = "normal";
    d.style.width = "100%";
    if (typeof d.style.MozUserSelect != "undefined") d.style.MozUserSelect = "none";
    e.style.overflow = "auto";
    e.style.height = "200px";
    e.style.backgroundColor = "#ffffff";
    e.style.padding = "0px";
    e.style.position = "absolute";
    e.style.left = "0px";
    e.style.top = "20px";
    e.style.whiteSpace = "normal";
    e.style.width = "100%";
    if (Q == "dspf") pui.Gf(c, d, e, function () {
        v.Ei();
        v.hide()
    }).innerHTML = "Reference Field Details";
    h.style.position = "absolute";
    h.style.left = "10px";
    h.style.top = "10px";
    h.style.fontFamily = "Trebuchet MS";
    h.style.fontSize = "13px";
    if (!pui.nodedesigner || pui.dbDriver == "IBMi") {
        h.innerHTML = "Format/Field:";
        f.maxLength = 21
    } else h.innerHTML = "Column:";
    f.style.position = "absolute";
    f.style.left = "140px";
    f.style.top = "10px";
    f.style.width = "115px";
    f.style.fontFamily = "Arial";
    f.style.fontSize = "12px";
    g.style.position = "absolute";
    g.style.left = "265px";
    g.style.top = "8px";
    g.style.width = "25px";
    g.style.fontFamily = "Arial";
    g.style.fontSize = "11px";
    g.type = "button";
    g.value = "...";
    g.onclick = function (E) {
        var y = S.getX(E), F = S.getY(E), D, B =
            Zb(l.value);
        if (!pui.nodedesigner || pui.dbDriver == "IBMi") B = B.toUpperCase();
        var I;
        E = "";
        if (B == "" && pui.ka != null) {
            D = S.Nt(B);
            B = D[0];
            if (D.length == 2) E = D[1]
        }
        D = B.split("/");
        if (D.length == 2) {
            I = D[0];
            B = D[1]
        } else {
            B = D[0];
            I = ""
        }
        if (B == "") {
            pui.alert("You must first specify a reference file as a global keyword or explicitly for this field.");
            l.focus()
        } else {
            var z;
            if (Q == "genie") z = cc("PUI0009101.PGM");
            if (Q == "dspf") z = cc("PUI0009101.PGM", null, true);
            var H = new pui.Ajax(z);
            H.async = true;
            H.method = "post";
            H.postData = "file=" + encodeURIComponent(B);
            H.postData += "&library=" + encodeURIComponent(I);
            if (pui.isCloud) H.postData += "&workspace_id=" + pui.cloud.ws.id;
            if (Q == "genie") H.postData += "&AUTH=" + GENIE_AUTH;
            H.postData += "&context=" + Q;
            if (E.length > 0) H.postData += "&rcdfmt=" + E;
            H.suppressAlert = true;
            H.onready = function () {
                w.sn = false;
                var J, K;
                if (H.Vc() != 200) K = "HTTP " + H.Vc() + " - " + H.xj() + "."; else {
                    try {
                        J = eval("(" + H.jc() + ")")
                    } catch (L) {
                        K = "The server response is missing or invalid."
                    }
                    if (K == null && J.success != true) K = J.errorText
                }
                if (K != null) pui.alert("Unable to retrieve field listing:\n" +
                    K); else {
                    w.fields = J.fields;
                    w.pa = function (N) {
                        f.value = N
                    };
                    w.pj = null;
                    w.hB(f.value);
                    w.db('<span style="font-weight:bold; text-transform:capitalize;">Select reference field from ' + B + "</span>");
                    w.show(y, F)
                }
                g.style.cursor = ""
            };
            if (pui.xd != true) {
                g.style.cursor = "progress";
                H.send()
            }
        }
    };
    n.style.position = "absolute";
    n.style.left = "10px";
    n.style.top = "40px";
    n.style.fontFamily = "Trebuchet MS";
    n.style.fontSize = "13px";
    if (!pui.nodedesigner || pui.dbDriver == "IBMi") {
        n.innerHTML = "Library/File:";
        l.maxLength = 21
    } else n.innerHTML =
        "Table:";
    l.style.position = "absolute";
    l.style.left = "140px";
    l.style.top = "40px";
    l.style.width = "150px";
    l.style.fontFamily = "Arial";
    l.style.fontSize = "12px";
    i.style.position = "absolute";
    i.style.left = "10px";
    i.style.top = "70px";
    i.style.fontFamily = "Trebuchet MS";
    i.style.fontSize = "13px";
    i.innerHTML = "Override Type:";
    o.maxLength = 1;
    o.style.position = "absolute";
    o.style.left = "140px";
    o.style.top = "70px";
    o.style.width = "60px";
    o.style.fontFamily = "Arial";
    o.style.fontSize = "12px";
    (function () {
        for (var E = ["", "M", "A", "X", "W", "N",
            "D", "I", "Y", "S", "F", "L", "T", "Z"], y = 0; y < E.length; y++) {
            var F = E[y], D = document.createElement("option"), B = document.createTextNode(F);
            D.value = F;
            D.appendChild(B);
            o.appendChild(D)
        }
    })(o);
    o.onchange = a;
    k.style.position = "absolute";
    k.style.left = "10px";
    k.style.top = "100px";
    k.style.fontFamily = "Trebuchet MS";
    k.style.fontSize = "13px";
    k.innerHTML = "Override Length:";
    r.maxLength = 5;
    r.style.position = "absolute";
    r.style.left = "140px";
    r.style.top = "100px";
    r.style.width = "60px";
    r.style.fontFamily = "Arial";
    r.style.fontSize = "12px";
    S.W(r, "keydown", Qb);
    s.style.position = "absolute";
    s.style.left = "10px";
    s.style.top = "130px";
    s.style.fontFamily = "Trebuchet MS";
    s.style.fontSize = "13px";
    s.innerHTML = "Override Decimals:";
    q.maxLength = 3;
    q.style.position = "absolute";
    q.style.left = "140px";
    q.style.top = "130px";
    q.style.width = "60px";
    q.style.fontFamily = "Arial";
    q.style.fontSize = "12px";
    S.W(q, "keydown", Qb);
    t.style.position = "absolute";
    t.style.left = "140px";
    t.style.top = "180px";
    t.style.width = "75px";
    t.style.fontFamily = "Arial";
    t.style.fontSize = "11px";
    t.type =
        "button";
    t.value = "OK";
    t.onclick = function () {
        if (f.value != "" && (!pui.nodedesigner || pui.dbDriver == "IBMi")) {
            var E = S.bw(f.value.toUpperCase(), "format");
            if (E != "") {
                pui.alert("Field " + E);
                f.focus();
                return
            }
        }
        if (l.value != "" && l.value != "*SRC") {
            if (!pui.nodedesigner || pui.dbDriver == "IBMi") {
                E = S.bw(l.value.toUpperCase(), "*LIBL");
                if (E != "") {
                    pui.alert("File " + E);
                    l.focus();
                    return
                }
            }
            if (f.value == "") {
                pui.alert("A file name cannot be specified without a field name.");
                f.focus();
                return
            }
        }
        E = "";
        var y = [];
        y[0] = f.value;
        y[1] = l.value;
        y[2] =
            r.value;
        y[3] = o.value ? "'" + o.value + "'" : "";
        y[4] = q.value;
        for (var F = 0; F <= 4; F++) {
            var D = Zb(y[F]);
            if (D != "") {
                if (E != "") E += " ";
                E += D
            }
        }
        v.pa != null && v.pa(E);
        v.hide()
    };
    u.style.position = "absolute";
    u.style.left = "220px";
    u.style.top = "180px";
    u.style.width = "75px";
    u.style.fontFamily = "Arial";
    u.style.fontSize = "11px";
    u.type = "button";
    u.value = "Cancel";
    u.onclick = function () {
        v.Ei != null && v.Ei();
        v.hide()
    };
    S.W(f, "keydown", b);
    S.W(l, "keydown", b);
    S.W(r, "keydown", b);
    S.W(o, "keydown", b);
    S.W(q, "keydown", b);
    e.appendChild(h);
    e.appendChild(f);
    e.appendChild(g);
    e.appendChild(n);
    e.appendChild(l);
    e.appendChild(i);
    e.appendChild(o);
    e.appendChild(k);
    e.appendChild(r);
    e.appendChild(s);
    e.appendChild(q);
    e.appendChild(t);
    e.appendChild(u);
    c.appendChild(d);
    c.appendChild(e);
    document.body.appendChild(c);
    pui.rd({wc: d, move: c, opacity: 85});
    this.WJ = function (E) {
        E = Zb(E);
        E = S.Ou(E);
        if (E.xg) {
            var y = E.xg.split("'");
            y = y.join("")
        }
        f.value = E.field;
        l.value = E.file;
        o.value = y;
        r.value = E.fq;
        q.value = E.mp;
        a()
    };
    this.show = function (E) {
        var y = document.body.offsetWidth;
        if (y == null) y =
            1E4;
        y -= 325;
        if (y < 0) y = 0;
        var F = S.getX(E);
        F -= 295;
        E = S.getY(E);
        E -= 30;
        if (E < 0) E = 0;
        if (F > y) F = y;
        c.style.left = F + "px";
        c.style.top = E + "px";
        c.style.visibility = "visible";
        c.style.display = "";
        f.focus()
    };
    this.hide = function () {
        c.style.visibility = "hidden";
        c.style.display = "none"
    };
    this.isHidden = function () {
        return c.style.visibility == "hidden"
    }
};
pui.designer.qw = function () {
    function b() {
        var E = c();
        q.disabled = E.length == 0
    }

    function a() {
        for (var E = 0; E < k.rows.length; E++) {
            var y = k.rows[E];
            y.style.backgroundColor = y.dx;
            y.style.color = "";
            y.isSelected = false
        }
    }

    function c() {
        for (var E = [], y = 0; y < k.rows.length; y++) {
            var F = k.rows[y];
            F.isSelected && E.push(F.firstChild.innerHTML)
        }
        return E
    }

    function d() {
        for (var E = k.rows.length; E > 0; E--) k.deleteRow(E - 1)
    }

    this.pj = this.pa = null;
    this.sn = false;
    this.fields = [];
    var e = document.createElement("div"), f = document.createElement("div"),
        h = document.createElement("div"), g = document.createElement("input"), l = document.createElement("div"),
        n = document.createElement("div"), o = document.createElement("div"), i = document.createElement("div"),
        r = document.createElement("table"), k = document.createElement("table"), q = document.createElement("input"),
        s = document.createElement("input"), t = this;
    e.style.width = "420px";
    e.style.border = "2px solid #336699";
    e.style.position = "absolute";
    e.style.top = "50px";
    e.style.left = "50px";
    e.style.padding = "0px";
    e.style.zIndex = S.SK;
    e.style.visibility = "hidden";
    e.style.height = "272px";
    e.style.overflow = "hidden";
    S.W(document, "mousedown", function (E) {
        for (E = S.getTarget(E); E != null;) {
            if (E == e) return;
            E = E.parentNode
        }
        t.hide()
    });
    f.innerHTML = "Edit List";
    f.style.fontSize = "12px";
    f.style.fontFamily = "Arial";
    f.style.backgroundColor = "#6699cc";
    f.style.padding = "3px";
    f.style.cursor = "move";
    f.style.fontWeight = "bold";
    f.style.color = "#ffffff";
    f.style.position = "absolute";
    f.style.left = "0px";
    f.style.top = "0px";
    f.style.whiteSpace = "normal";
    f.style.width = "100%";
    if (typeof f.style.MozUserSelect != "undefined") f.style.MozUserSelect = "none";
    h.style.overflow = "auto";
    h.style.height = "252px";
    h.style.backgroundColor = "#ffffff";
    h.style.padding = "0px";
    h.style.position = "absolute";
    h.style.left = "0px";
    h.style.top = "20px";
    h.style.whiteSpace = "normal";
    h.style.width = "100%";
    var u = null;
    if (Q == "dspf") u = pui.Gf(e, f, h, function () {
        t.hide()
    });
    l.style.position = "absolute";
    l.style.left = "10px";
    l.style.top = "10px";
    l.style.fontFamily = "Trebuchet MS";
    l.style.fontSize = "13px";
    l.innerHTML = "Search fields:";
    g.style.position = "absolute";
    g.style.left = "100px";
    g.style.top = "10px";
    g.style.width = "235px";
    g.style.fontFamily = "Arial";
    g.style.fontSize = "12px";
    g.onkeydown = function (E) {
        if (!E) E = window.event;
        var y = E.keyCode;
        if (y == 13) g.value == "" && !q.disabled ? q.onclick() : addButton.onclick();
        y == 27 && s.onclick();
        if (y == 37 || y == 38 || y == 39 || y == 40 || y == 46) {
            if (window.event) window.event.cancelBubble = true;
            if (E.preventDefault) E.cancelBubble = true
        }
    };
    g.onkeyup = function () {
        var E = g.value;
        E = Zb(E);
        E = E.toLowerCase();
        for (var y = 0; y < k.rows.length; y++) {
            var F =
                k.rows[y];
            F.style.display = E == "" ? "" : F.firstChild.innerHTML.toLowerCase().indexOf(E) >= 0 || F.firstChild.nextSibling.innerHTML.toLowerCase().indexOf(E) >= 0 ? "" : "none"
        }
    };
    n.style.position = "absolute";
    n.style.left = "10px";
    n.style.top = "40px";
    o.style.width = "390px";
    o.style.padding = "0px";
    o.style.overflowX = "hidden";
    o.style.overflowY = "hidden";
    r.style.width = "390px";
    r.cellPadding = "2";
    r.cellSpacing = "0";
    r.style.tableLayout = "fixed";
    var w = r.insertRow(0);
    w.style.backgroundColor = "#336699";
    w.style.color = "#FFFFFF";
    w.style.fontFamily =
        "Trebuchet MS";
    w.style.fontSize = "12px";
    var v = w.insertCell(0);
    v.style.width = "115px";
    v.innerHTML = "Field";
    v.style.borderLeft = "1px solid #CCCCCC";
    v.style.borderTop = "1px solid #CCCCCC";
    v.style.padding = "2px";
    v = w.insertCell(1);
    v.style.width = "160px";
    v.innerHTML = "Description";
    v.style.borderLeft = "1px solid #CCCCCC";
    v.style.borderTop = "1px solid #CCCCCC";
    v.style.padding = "2px";
    w = w.insertCell(2);
    w.innerHTML = "Length/Type";
    w.style.borderLeft = "1px solid #CCCCCC";
    w.style.borderTop = "1px solid #CCCCCC";
    w.style.borderRight =
        "1px solid #CCCCCC";
    w.style.paddingRight = "3px";
    w.style.paddingLeft = "2px";
    w.style.paddingTop = "2px";
    w.style.paddingBottom = "2px";
    w.style.textAlign = "right";
    i.style.width = "390px";
    i.style.height = "139px";
    i.style.padding = "0px";
    i.style.overflowX = "hidden";
    i.style.overflowY = "auto";
    k.style.width = "390px";
    k.cellPadding = "2";
    k.cellSpacing = "0";
    k.style.fontFamily = "Trebuchet MS";
    k.style.fontSize = "13px";
    k.style.tableLayout = "fixed";
    q.style.position = "absolute";
    q.style.left = "135px";
    q.style.top = "220px";
    q.style.width = "75px";
    q.style.fontFamily = "Arial";
    q.style.fontSize = "11px";
    q.type = "button";
    q.value = "OK";
    q.onclick = function () {
        if (t.pa != null) {
            for (var E = "", y = c(), F = 0; F < y.length; F++) {
                if (F > 0) E += ",";
                E += y[F]
            }
            t.pa(E)
        }
        if (t.pj != null) {
            E = "";
            y = [];
            for (F = 0; F < k.rows.length; F++) {
                var D = k.rows[F];
                D.isSelected && y.push(D.firstChild.nextSibling.innerHTML)
            }
            for (F = 0; F < y.length; F++) {
                if (F > 0) E += ",";
                E += y[F]
            }
            t.pj(E)
        }
        t.hide()
    };
    s.style.position = "absolute";
    s.style.left = "215px";
    s.style.top = "220px";
    s.style.width = "75px";
    s.style.fontFamily = "Arial";
    s.style.fontSize =
        "11px";
    s.type = "button";
    s.value = "Cancel";
    s.onclick = function () {
        t.hide()
    };
    i.appendChild(k);
    o.appendChild(r);
    n.appendChild(o);
    n.appendChild(i);
    h.appendChild(g);
    h.appendChild(l);
    h.appendChild(n);
    h.appendChild(q);
    h.appendChild(s);
    e.appendChild(f);
    e.appendChild(h);
    document.body.appendChild(e);
    pui.rd({
        wc: f, move: e, opacity: 85, Bo: function () {
            g.focus()
        }
    });
    this.hB = function (E) {
        d();
        E = E.split(",");
        for (var y = false, F = false, D = 0; D < t.fields.length; D++) {
            var B = k.insertRow(k.rows.length);
            (function (J) {
                J.onmouseover = function () {
                    if (!J.isSelected) J.style.backgroundColor =
                        "#DCDCDC"
                };
                J.onmouseout = function () {
                    if (!J.isSelected) J.style.backgroundColor = J.dx
                };
                J.onclick = function () {
                    if (J.isSelected) {
                        J.style.backgroundColor = "#DCDCDC";
                        J.style.color = "";
                        J.isSelected = false
                    } else {
                        t.sn || a();
                        J.style.backgroundColor = "#6699CC";
                        J.style.color = "#FFFFFF";
                        J.isSelected = true
                    }
                    b();
                    g.focus()
                };
                J.onmousedown = function (K) {
                    S.ua(K);
                    return false
                };
                J.onselectstart = function (K) {
                    S.ua(K);
                    return false
                };
                J.ondblclick = function () {
                    t.sn || a();
                    J.style.backgroundColor = "#6699CC";
                    J.style.color = "#FFFFFF";
                    J.isSelected = true;
                    q.onclick()
                }
            })(B);
            B.style.cursor = "default";
            if (y = !y) B.style.backgroundColor = "#F3F3F3";
            if (!y) B.style.backgroundColor = "#FFFFFF";
            B.dx = B.style.backgroundColor;
            if (!F) for (var I = 0; I < E.length; I++) if (E[I] == t.fields[D].field) {
                B.style.backgroundColor = "#6699CC";
                B.style.color = "#FFFFFF";
                B.isSelected = true;
                t.sn || (F = true);
                break
            }
            I = B.insertCell(0);
            I.style.width = "115px";
            I.innerHTML = I.title = t.fields[D].field;
            I.style.borderLeft = "1px solid #CCCCCC";
            I.style.borderBottom = "1px solid #CCCCCC";
            I.style.padding = "2px";
            I.style.overflowX =
                "hidden";
            var z = B.insertCell(1);
            z.style.width = "160px";
            if (t.fields[D].text) z.innerHTML = t.fields[D].text;
            z.style.borderLeft = "1px solid #CCCCCC";
            z.style.borderBottom = "1px solid #CCCCCC";
            z.style.padding = "2px";
            z.style.overflowX = "hidden";
            B = B.insertCell(2);
            if (pui.nodedesigner) B.innerHTML = S.Ct({
                type: t.fields[D].type,
                length: t.fields[D].length,
                decimals: t.fields[D].decimals
            }); else {
                var H = String(t.fields[D].length);
                H += t.fields[D].decPos != null ? "," + String(t.fields[D].decPos) : t.fields[D].type;
                B.innerHTML = H
            }
            B.style.borderLeft =
                "1px solid #CCCCCC";
            B.style.borderBottom = "1px solid #CCCCCC";
            B.style.borderRight = "1px solid #CCCCCC";
            B.style.paddingLeft = "2px";
            B.style.paddingTop = "2px";
            B.style.paddingBottom = "2px";
            B.style.paddingRight = "20px";
            B.style.textAlign = "right";
            B.style.overflowX = "hidden";
            if (D == 0) {
                I.style.borderTop = "1px solid #CCCCCC";
                z.style.borderTop = "1px solid #CCCCCC";
                B.style.borderTop = "1px solid #CCCCCC"
            }
        }
        b()
    };
    this.show = function (E, y) {
        var F = document.body.offsetWidth, D = document.body.offsetHeight;
        if (F == null) F = 1E4;
        if (D == null) D =
            1E4;
        F -= 420;
        D -= 272;
        if (F < 0) F = 0;
        if (D < 0) D = 0;
        var B = E, I = y;
        I -= 125;
        if (Q == "dspf" && I > D) I = D;
        if (I < 0) I = 0;
        if (B > F) B = F;
        e.style.left = B + "px";
        e.style.top = I + "px";
        e.style.visibility = "visible";
        g.value = "";
        g.focus()
    };
    this.hide = function () {
        e.style.visibility = "hidden"
    };
    this.isHidden = function () {
        return e.style.visibility == "hidden"
    };
    this.db = function (E) {
        if (u != null) u.innerHTML = E; else f.innerHTML = E
    }
};
pui.designer.mw = function () {
    this.Ge = this.ef = this.rc = this.yn = null;
    var b = this;
    (function () {
        S.W(document, "mousedown", function (r) {
            for (r = S.getTarget(r); r != null;) {
                if (r == b.rc) return;
                r = r.parentNode
            }
            b.hide()
        });
        b.rc = document.createElement("table");
        b.rc.style.position = "absolute";
        b.rc.style.display = "none";
        b.rc.style.backgroundColor = "white";
        b.rc.style.border = "1px solid #cccccc";
        b.rc.style.zIndex = S.QK;
        S.W(b.rc, "mousedown", function (r) {
            S.ua(r)
        });
        var a = ["00", "33", "66", "99", "CC", "FF"], c = 0, d = 0, e = 0, f = b.rc.insertRow(b.rc.rows.length);
        f = f.insertCell(f.cells.length);
        f.colSpan = 18;
        f.align = "center";
        b.Ge = document.createElement("input");
        b.Ge.style.width = "50px";
        b.Ge.style.height = "15px";
        b.Ge.style.border = "1px solid white";
        b.Ge.style.fontFamily = "Arial";
        b.Ge.style.fontSize = "11px";
        b.Ge.style.cursor = "default";
        b.Ge.style.backgroundColor = "white";
        b.Ge.disabled = true;
        b.ef = document.createElement("input");
        b.ef.style.width = "15px";
        b.ef.style.height = "17px";
        b.ef.style.border = "1px solid #cccccc";
        b.ef.style["float"] = "left";
        b.ef.style.cursor = "default";
        b.ef.disabled = true;
        var h = document.createElement("span");
        h.innerHTML = "NO COLOR";
        h.style.backgroundColor = "#eeeeee";
        h.style.color = "#666666";
        h.style.border = "1px solid #cccccc";
        h.style.fontFamily = "Arial";
        h.style.fontSize = "10px";
        h.style.cursor = "pointer";
        h.onclick = function () {
            b.yn("");
            b.hide()
        };
        h.onmouseover = function () {
            h.style.textDecoration = "underline";
            b.lo("")
        };
        h.onmouseout = function () {
            h.style.textDecoration = ""
        };
        var g = document.createElement("span");
        g.innerHTML = "CLOSE";
        g.style.backgroundColor = "#eeeeee";
        g.style.color =
            "#666666";
        g.style.border = "1px solid #cccccc";
        g.style.fontFamily = "Arial";
        g.style.fontSize = "10px";
        g.style.cursor = "pointer";
        g.onclick = function () {
            b.hide()
        };
        g.onmouseover = function () {
            g.style.textDecoration = "underline"
        };
        g.onmouseout = function () {
            g.style.textDecoration = ""
        };
        f.appendChild(b.Ge);
        f.appendChild(b.ef);
        f.appendChild(document.createTextNode("  |  "));
        f.appendChild(h);
        f.appendChild(document.createTextNode("   "));
        f.appendChild(g);
        for (f = 0; f < 12; f++) for (var l = b.rc.insertRow(b.rc.rows.length), n = 0; n < 18; n++) {
            var o =
                l.insertCell(l.cells.length), i = "#" + a[c] + a[d] + a[e];
            o.style.backgroundColor = i;
            o.title = i;
            o.style.width = "12px";
            o.style.height = "14px";
            o.style.cursor = "pointer";
            o.onmouseover = function (r) {
                b.lo(S.getTarget(r).title)
            };
            o.onclick = function (r) {
                b.yn(S.getTarget(r).title);
                b.hide()
            };
            e++;
            if (e > 5) {
                e = 0;
                d++;
                if (d > 5) {
                    d = 0;
                    c++
                }
            }
        }
        document.body.appendChild(b.rc)
    })();
    this.show = function (a) {
        var c = document.body.offsetWidth, d = document.body.offsetHeight;
        if (c == null) c = 1E4;
        if (d == null) d = 1E4;
        c -= 320;
        d -= 220;
        if (c < 0) c = 0;
        if (d < 0) d = 0;
        var e = S.getX(a);
        a = S.getY(a);
        if (e > c) e = c;
        if (Q == "dspf" && a > d) a = d;
        if (a < 0) a = 0;
        b.rc.style.left = e + "px";
        b.rc.style.top = a + "px";
        b.rc.style.display = "block"
    };
    this.hide = function () {
        if (b.rc != null) b.rc.style.display = "none"
    };
    this.isHidden = function () {
        return b.rc.style.display == "none"
    };
    this.lo = function (a) {
        b.Ge.value = a;
        try {
            b.ef.style.backgroundColor = a
        } catch (c) {
            b.ef.style.backgroundColor = ""
        }
    };
    this.destroy = function () {
        b.rc.parentNode.removeChild(b.rc);
        b.ef.parentNode.removeChild(b.ef);
        b.Ge.parentNode.removeChild(b.Ge);
        b.rc = null;
        b.ef = null;
        b.Ge = null
    }
};
pui.designer.KD = function () {
    function b() {
        g.style.position = "absolute";
        g.style.left = "10px";
        g.style.top = c ? "20px" : "10px";
        g.style.width = "526px";
        g.style.height = "340px";
        g.style.border = "1px solid #dddddd";
        if (c) {
            l = monaco.editor.create(g, {
                value: null,
                fixedOverflowWidgets: true,
                disableMonospaceOptimizations: navigator.platform.toUpperCase().indexOf("MAC") >= 0,
                minimap: {enabled: false}
            });
            l.addAction({
                id: "Save",
                label: "Save File",
                keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S],
                precondition: null,
                keybindingContext: null,
                contextMenuGroupId: "navigation",
                contextMenuOrder: 1.5,
                run: function () {
                    r.pa(l.getValue());
                    l.focus();
                    return null
                }
            })
        } else if (a) {
            l = ace.edit(g);
            l.setTheme("ace/theme/eclipse");
            l.setShowPrintMargin(false);
            l.session.setTabSize(2);
            l.commands.addCommand({
                name: "save", exec: function () {
                    r.pa(l.getValue());
                    l.focus()
                }, bindKey: {mac: "cmd-s", win: "ctrl-s"}
            })
        }
    }

    var a = false, c = true;
    if (!window.monaco || pui.useAceEditor || pui.is_ie || pui.ie_mode <= 11) {
        c = false;
        a = true
    }
    a = pui.is_old_ie && pui.ie_mode <= 8 && typeof ace != "undefined" && ace !=
    null && ace.edit != null ? true : false;
    this.pa = null;
    var d = document.createElement("div"), e = document.createElement("div"), f = document.createElement("div"),
        h = document.createElement("textarea"), g = document.createElement("div"), l,
        n = document.createElement("input"), o = document.createElement("input"), i = document.createElement("div"),
        r = this, k;
    d.style.width = "555px";
    d.style.border = "2px solid #336699";
    d.style.position = "absolute";
    d.style.top = "50px";
    d.style.left = "50px";
    d.style.padding = "0px";
    d.style.zIndex = S.$K;
    d.style.visibility =
        "hidden";
    d.style.display = "none";
    d.style.height = "422px";
    d.style.overflow = "hidden";
    S.W(document, "mousedown", function (s) {
        for (s = S.getTarget(s); s != null;) {
            if (s == d) return;
            s = s.parentNode
        }
        r.hide()
    });
    e.innerHTML = "Edit Value";
    e.style.fontSize = "12px";
    e.style.fontFamily = "Arial";
    e.style.backgroundColor = "#6699cc";
    e.style.padding = "3px";
    e.style.cursor = "move";
    e.style.fontWeight = "bold";
    e.style.color = "#ffffff";
    e.style.position = "absolute";
    e.style.left = "0px";
    e.style.top = "0px";
    e.style.whiteSpace = "normal";
    e.style.width =
        "100%";
    if (typeof e.style.MozUserSelect != "undefined") e.style.MozUserSelect = "none";
    f.style.overflow = "auto";
    f.style.height = "402px";
    f.style.backgroundColor = "#ffffff";
    f.style.padding = "0px";
    f.style.position = "absolute";
    f.style.left = "0px";
    f.style.top = "20px";
    f.style.whiteSpace = "normal";
    f.style.width = "100%";
    var q = null;
    if (Q == "dspf") q = pui.Gf(d, e, f, function () {
        r.hide()
    });
    if (!a && !c) {
        h.style.position = "absolute";
        h.style.left = "10px";
        h.style.top = "10px";
        h.style.width = "526px";
        h.style.height = "340px";
        h.style.fontFamily =
            "Arial";
        h.style.fontSize = "12px";
        h.className = "editor-textarea";
        h.onkeydown = function (s) {
            if (!s) s = window.event;
            s.keyCode == 27 && r.hide()
        }
    }
    if (c || a) b();
    n.style.position = "absolute";
    n.style.right = "95px";
    n.style.bottom = "10px";
    n.style.height = "22px";
    n.style.width = "75px";
    n.style.fontFamily = "Arial";
    n.style.fontSize = "11px";
    n.style.zIndex = "8";
    n.type = "button";
    n.value = "OK";
    n.onclick = function () {
        if (r.pa != null) {
            var s;
            s = a || c ? l.getValue() : h.value;
            r.pa(s)
        }
        r.hide()
    };
    o.style.position = "absolute";
    o.style.right = "15px";
    o.style.bottom =
        "10px";
    o.style.height = "22px";
    o.style.width = "75px";
    o.style.fontFamily = "Arial";
    o.style.fontSize = "11px";
    o.style.zIndex = "8";
    o.type = "button";
    o.value = "Cancel";
    o.onclick = function () {
        r.hide()
    };
    i.style.position = "absolute";
    i.style.right = "0px";
    i.style.bottom = "0px";
    i.style.width = "10px";
    i.style.height = "10px";
    i.style.backgroundImage = 'url("/profoundui/proddata/images/icons/sizer.png")';
    i.style.cursor = "nwse-resize";
    i.style.zIndex = "8";
    c || a ? f.appendChild(g) : f.appendChild(h);
    f.appendChild(n);
    f.appendChild(o);
    f.appendChild(i);
    d.appendChild(e);
    d.appendChild(f);
    document.body.appendChild(d);
    pui.rd({
        wc: e, move: d, opacity: 85, lt: function () {
            d.style.right = ""
        }
    });
    S.W(i, "mousedown", function (s) {
        function t(F) {
            var D = E + S.getX(F) - w;
            if (D < 250) D = 250;
            F = y + S.getY(F) - v;
            if (F < 150) F = 150;
            d.style.width = D + "px";
            d.style.height = F + "px";
            f.style.height = pui.round((1 - parseInt(f.style.top, 10) / d.clientHeight) * 100, 1) + "%";
            g.style.width = pui.round((1 - (19 + g.offsetLeft) / f.clientWidth) * 100, 1) + "%";
            g.style.height = pui.round((1 - (52 + g.offsetTop) / f.clientHeight) * 100, 1) + "%";
            if (c) l.layout(); else a && l.resize(true)
        }

        function u() {
            S.wd(document, "mousemove", t);
            S.wd(document, "mouseup", u)
        }

        S.ua(s);
        var w = S.getX(s), v = S.getY(s), E = d.offsetWidth, y = d.offsetHeight;
        S.W(document, "mousemove", t);
        S.W(document, "mouseup", u)
    });
    this.setValue = function (s) {
        if (a || c) {
            l.setValue(s);
            a ? l.selection.moveCursorFileStart() : l.getModel().updateOptions({tabSize: 2})
        } else h.value = s
    };
    this.setMode = function (s) {
        if (a || c) if (s != null) {
            if (a && s == "sql") s = "text";
            k = s
        }
    };
    this.cC = function () {
        if (!(c || a)) if (!(!window.monaco && (typeof ace ==
            "undefined" || ace == null || ace.edit == null))) if (!(pui.is_old_ie && pui.ie_mode <= 8)) {
            if (pui.is_ie || pui.ie_mode <= 11 || pui.useAceEditor || !window.monaco) {
                a = true;
                c = false
            } else {
                c = true;
                a = false
            }
            f.removeChild(h);
            f.appendChild(g);
            b()
        }
    };
    this.show = function (s, t, u) {
        if (Q == "genie" && a && pui.is_old_ie && pui.ie_mode == 9) document.body.style.overflowX = "hidden";
        var w = document.body.offsetWidth, v = document.body.offsetHeight;
        if (Q == "genie") {
            v = pui.getWindowSize();
            w = v.width;
            v = v.height;
            v += document.documentElement && document.documentElement.scrollTop ||
                document.body.scrollTop
        }
        if (w == null) w = 1E4;
        if (v == null) v = 1E4;
        w = w - parseInt(d.style.width, 10) - 20;
        v = v - parseInt(d.style.height, 10) - 11;
        if (w < 0) w = 0;
        if (v < 0) v = 0;
        var E = S.getX(s);
        s = S.getY(s);
        s -= 220;
        if (s > v) s = v;
        if (s < 0) s = 0;
        if (E > w) E = w;
        d.style.left = E + "px";
        d.style.top = s + "px";
        if (t != null) d.style.left = t + "px";
        if (u != null) d.style.top = u + "px";
        d.style.visibility = "visible";
        d.style.display = "";
        !a && !c && h.focus();
        t = k;
        if (t == null) t = "text";
        if (c && pui.useAceEditor) {
            c = false;
            a = true;
            u = l.getValue();
            l && l.dispose();
            b();
            r.setValue(u)
        }
        if (c) {
            u =
                l.getModel();
            w = "off";
            s = "on";
            v = 3;
            E = 1;
            monaco.editor.setModelLanguage(u, t);
            l.setModel(u);
            u.updateOptions({tabSize: 2});
            if (t === "text") {
                w = "wordWrapColumn";
                s = "off";
                minimap = false;
                E = v = 0
            }
            l.updateOptions({
                wordWrapColumn: 60,
                wordWrap: w,
                lineNumbers: s,
                lineDecorationsWidth: v,
                lineNumbersMinChars: E
            });
            l.layout();
            l.focus()
        } else if (a) {
            l.resize(true);
            l.focus();
            l.getSession().setMode("ace/mode/" + t);
            if (t == "text") {
                l.session.setUseWrapMode(true);
                l.session.setWrapLimitRange(74, 74);
                l.renderer.setShowGutter(false)
            } else {
                l.session.setUseWrapMode(false);
                l.renderer.setShowGutter(true)
            }
        }
    };
    this.LL = function () {
        if (c) return "monaco";
        if (a) return "ace";
        return "text"
    };
    this.hide = function () {
        d.style.visibility = "hidden";
        d.style.display = "none";
        if (Q == "genie" && a && pui.is_old_ie && pui.ie_mode == 9) document.body.style.overflowX = ""
    };
    this.isHidden = function () {
        return d.style.visibility == "hidden"
    };
    this.db = function (s) {
        if (q != null) q.innerHTML = s; else e.innerHTML = s
    }
};
pui.designer.$r = function (b) {
    function a(w, v) {
        function E(B) {
            if (!pui.isCloud) return B;
            var I = pui.cloud.ws.SERVER_DIR;
            if (I.toUpperCase() === B.substr(0, I.length).toUpperCase()) B = "Workspace Files" + B.substr(I.length);
            return B
        }

        if (v != null) s = v;
        if (w == null || w == "") {
            n.options.length = 0;
            n.value = ""
        } else {
            if (w == s || s == "") {
                n.options.length = 0;
                var y = E(w);
                n.options[0] = new Option(y, w)
            } else {
                y = w.split(pui.dirSeparator);
                var F = w;
                for (n.options.length = 0; y.length > 0 && F != s;) {
                    var D = E(F);
                    n.options[n.options.length] = new Option(D, F);
                    y.pop();
                    F = y.join(pui.dirSeparator)
                }
                y = E(s);
                n.options[n.options.length] = new Option(y, s)
            }
            n.value = w
        }
    }

    function c(w, v) {
        if (w.dir == true && v.dir != true) return -1;
        if (w.dir != true && v.dir == true) return 1;
        return w.name.toUpperCase() < v.name.toUpperCase() ? -1 : 1
    }

    function d(w) {
        w.sort(c);
        for (var v = 0, E = 0; E < w.length; E++) if (!(w[E].name == "." || w[E].name == "..")) {
            var y = parseInt(v / 4), F = (v - y * 4) * 100 + 10, D = y * 110 + 10;
            if (t.type != "image") D = y * 75 + 10;
            v++;
            y = document.createElement("div");
            y.du = w[E].name;
            y.nH = w[E].dir;
            y.style.position = "absolute";
            y.style.left =
                F + "px";
            y.style.top = D + "px";
            y.style.width = "85px";
            y.style.height = t.type == "image" ? "95px" : "45px";
            y.style.backgroundColor = "#ffffff";
            y.style.border = "1px solid #ffffff";
            y.style.cursor = "default";
            (function (B) {
                B.onmouseover = function () {
                    if (B != q) {
                        B.style.backgroundColor = "#eff9ff";
                        B.style.borderColor = "#daf2fc"
                    }
                };
                B.onmouseout = function () {
                    if (B != q) {
                        B.style.backgroundColor = "#ffffff";
                        B.style.borderColor = "#ffffff"
                    }
                };
                B.onclick = function () {
                    if (B != q) {
                        if (q != null) {
                            q.style.backgroundColor = "#ffffff";
                            q.style.borderColor = "#ffffff";
                            q.style.borderStyle = "solid"
                        }
                        B.style.backgroundColor = "#d2edfb";
                        B.style.borderColor = "#666666";
                        B.style.borderStyle = "dotted";
                        q = B;
                        r.disabled = false
                    }
                };
                B.ondblclick = function () {
                    r.onclick()
                }
            })(y);
            F = document.createElement("img");
            if (w[E].dir == true) F.src = pui.flatlook ? "/profoundui/proddata/images/FlatIcons/open-32.png" : "/profoundui/proddata/images/folder.png"; else if (pui.flatlook) if (t.type == "image") {
                D = n.value.substr(s.length) + pui.dirSeparator + w[E].name;
                if (pui.isCloud && (D.substr(0, 1) === "/" || D.substr(0, 1) === "\\")) D =
                    D.substr(1);
                F.src = D
            } else F.src = "/profoundui/proddata/images/FlatIcons/" + t.type + ".gif"; else if (t.type == "image") {
                D = n.value.substr(s.length) + pui.dirSeparator + w[E].name;
                if (pui.isCloud && (D.substr(0, 1) === "/" || D.substr(0, 1) === "\\")) D = D.substr(1);
                F.src = D
            } else F.src = "/profoundui/proddata/images/icons/" + t.type + ".gif";
            F.style.position = "absolute";
            F.style.top = "5px";
            if (t.type == "image") {
                F.style.width = "64px";
                F.style.height = "64px";
                F.style.left = "10px"
            } else {
                F.style.width = "32px";
                F.style.height = "32px";
                F.style.left = "26px"
            }
            D =
                document.createElement("div");
            D.src = w[E].name;
            D.style.position = "absolute";
            D.style.left = "0px";
            D.style.top = t.type == "image" ? "75px" : "45px";
            D.style.width = "85px";
            D.style.height = "20px";
            D.style.fontFamily = "arial";
            D.style.fontSize = "12px";
            D.style.textAlign = "center";
            D.style.overflow = "hidden";
            D.appendChild(document.createTextNode(w[E].name));
            D.title = w[E].name;
            y.appendChild(F);
            y.appendChild(D);
            i.appendChild(y)
        }
        if (v == 0) {
            w = document.createElement("div");
            w.style.position = "absolute";
            w.style.left = "105px";
            w.style.top =
                "140px";
            w.style.fontFamily = "Trebuchet MS";
            w.style.fontSize = "14px";
            v = "files";
            if (t.type == "image") v = "images";
            if (t.type == "cssfile") v = "CSS files";
            if (t.type == "jsfile") v = "JavaScript files";
            if (t.type == "sql") v = "SQL files";
            w.innerHTML = "No " + v + " found in this directory.";
            i.appendChild(w)
        }
    }

    function e() {
        i.innerHTML = "";
        q = null;
        r.disabled = true;
        n.disabled = true;
        o.disabled = true;
        var w = document.createElement("img");
        w.src = "/profoundui/proddata/images/saving.gif";
        w.style.position = "absolute";
        w.style.left = "205px";
        w.style.top =
            "135px";
        i.appendChild(w);
        jc({
            url: cc("PUI0001117.pgm"),
            method: "post",
            params: {
                dir: n.value,
                type: t.type,
                context: Q,
                workspace_id: pui.isCloud && pui.cloud.ws.id ? pui.cloud.ws.id : ""
            },
            handler: function (v) {
                i.innerHTML = "";
                n.disabled = false;
                o.disabled = false;
                if (v.success != true) {
                    pui.alert(v.errorText);
                    a("", "");
                    t.hide();
                    typeof t.onerror == "function" && t.onerror()
                } else {
                    a(v.dir, v.home);
                    d(v.data)
                }
            }
        })
    }

    this.fe = null;
    this.type = "image";
    var f = document.createElement("div"), h = document.createElement("div"), g = document.createElement("div"),
        l = document.createElement("div"), n = document.createElement("select"), o = document.createElement("div"),
        i = document.createElement("div"), r = document.createElement("input"), k = document.createElement("input"), q,
        s = "", t = this;
    f.style.width = "455px";
    f.style.border = "2px solid #336699";
    f.style.position = "absolute";
    f.style.top = "50px";
    f.style.left = "50px";
    f.style.padding = "0px";
    f.style.zIndex = S.jw;
    f.style.visibility = "hidden";
    f.style.display = "none";
    f.style.height = "432px";
    f.style.overflow = "hidden";
    S.W(document, "mousedown",
        function (w) {
            for (w = S.getTarget(w); w != null;) {
                if (w == f) return;
                w = w.parentNode
            }
            t.hide()
        });
    h.innerHTML = "Select File";
    h.style.fontSize = "12px";
    h.style.fontFamily = "Arial";
    h.style.backgroundColor = "#6699cc";
    h.style.padding = "3px";
    h.style.cursor = "move";
    h.style.fontWeight = "bold";
    h.style.color = "#ffffff";
    h.style.position = "absolute";
    h.style.left = "0px";
    h.style.top = "0px";
    h.style.whiteSpace = "normal";
    h.style.width = "100%";
    if (typeof h.style.MozUserSelect != "undefined") h.style.MozUserSelect = "none";
    g.style.overflow = "auto";
    g.style.height = "412px";
    g.style.backgroundColor = "#ffffff";
    g.style.padding = "0px";
    g.style.position = "absolute";
    g.style.left = "0px";
    g.style.top = "20px";
    g.style.whiteSpace = "normal";
    g.style.width = "100%";
    var u = null;
    if (Q == "dspf") u = pui.Gf(f, h, g, function () {
        t.hide()
    });
    l.style.position = "absolute";
    l.style.left = "10px";
    l.style.top = "13px";
    l.style.fontFamily = "Arial";
    l.style.fontSize = "12px";
    l.innerHTML = "Path:";
    n.style.position = "absolute";
    n.style.left = "45px";
    n.style.top = "10px";
    n.style.width = "355px";
    n.style.fontFamily =
        "Arial";
    n.style.fontSize = "13px";
    n.onchange = function () {
        a(n.value);
        e()
    };
    b && a(b);
    o.style.position = "absolute";
    o.style.left = "407px";
    o.style.top = "14px";
    o.style.width = "16px";
    o.style.height = "16px";
    o.style.cursor = "pointer";
    o.style.backgroundColor = "#ffffff";
    if (Q == "dspf") o.style.backgroundColor = "#dfe8f6";
    o.style.backgroundImage = pui.flatlook ? "url('/profoundui/proddata/images/FlatIcons/16x16/folder-up.png')" : "url('/profoundui/proddata/images/icons/folder-up.png')";
    o.style.backgroundRepeat = "no-repeat";
    o.style.filter =
        "alpha(opacity=80)";
    o.style.opacity = 1;
    o.title = "Up One Level";
    o.onmouseover = function () {
        o.style.filter = "";
        o.style.opacity = ""
    };
    o.onmouseout = function () {
        o.style.filter = "alpha(opacity=80)";
        o.style.opacity = 1
    };
    o.onclick = function () {
        if (!o.disabled) if (n.value != s) {
            var w = n.value;
            w = w.split(pui.dirSeparator);
            w.pop();
            w = w.join(pui.dirSeparator);
            a(w);
            e()
        }
    };
    i.style.position = "absolute";
    i.style.left = "10px";
    i.style.top = "40px";
    i.style.width = "426px";
    i.style.height = "320px";
    i.style.border = "1px solid #cccccc";
    i.style.backgroundColor =
        "#ffffff";
    i.style.overflow = "auto";
    r.style.position = "absolute";
    r.style.left = "285px";
    r.style.top = "375px";
    r.style.width = "75px";
    r.style.fontFamily = "Arial";
    r.style.fontSize = "11px";
    r.type = "button";
    r.value = "Select";
    r.disabled = true;
    r.onclick = function () {
        if (q != null) if (q.nH == true) {
            var w = n.value;
            w += pui.dirSeparator + q.du;
            a(w);
            e()
        } else {
            if (t.fe != null) {
                w = "";
                if (q.du != null) w = n.value.substr(s.length) + pui.dirSeparator + q.du;
                t.fe(w)
            }
            t.hide()
        }
    };
    k.style.position = "absolute";
    k.style.left = "365px";
    k.style.top = "375px";
    k.style.width =
        "75px";
    k.style.fontFamily = "Arial";
    k.style.fontSize = "11px";
    k.type = "button";
    k.value = "Cancel";
    k.onclick = function () {
        t.hide()
    };
    g.appendChild(l);
    g.appendChild(n);
    g.appendChild(o);
    g.appendChild(i);
    g.appendChild(r);
    g.appendChild(k);
    f.appendChild(h);
    f.appendChild(g);
    document.body.appendChild(f);
    pui.rd({wc: h, move: f, opacity: 85});
    this.show = function (w, v, E) {
        var y = document.body.offsetWidth, F = document.body.offsetHeight;
        if (y == null) y = 1E4;
        if (F == null) F = 1E4;
        y -= 470;
        F -= 450;
        if (y < 0) y = 0;
        if (F < 0) F = 0;
        var D = S.getX(w);
        w = S.getY(w);
        w -= 120;
        if (Q == "dspf" && w > F) w = F;
        if (w < 0) w = 0;
        if (D > y) D = y;
        f.style.left = D + "px";
        f.style.top = w + "px";
        if (v != null) f.style.left = v + "px";
        if (E != null) f.style.top = E + "px";
        f.style.visibility = "visible";
        f.style.display = "";
        e()
    };
    this.hide = function () {
        f.style.visibility = "hidden";
        f.style.display = "none"
    };
    this.isHidden = function () {
        return f.style.visibility == "hidden"
    };
    this.db = function (w) {
        if (u != null) u.innerHTML = w; else h.innerHTML = w
    }
};
pui.designer.d = {};
pui.designer.d.Gw = "Preview";
pui.designer.d.rD = "Internet Explorer does not support styles needed for responsive layouts. Please use Chrome, Firefox, Edge, or a supported browser to preview and edit styles.";
pui.designer.d.zD = "row gap";
pui.designer.d.ED = "row start";
pui.designer.d.yD = "row end";
pui.designer.d.CD = "row height";
pui.designer.d.mD = "column";
pui.designer.d.kD = "column gap";
pui.designer.d.lD = "column start";
pui.designer.d.jD = "column end";
pui.designer.d.nD = "column width";
pui.designer.d.cs = "line";
pui.designer.d.HD = "Stylesheet";
pui.designer.d.JD = "Responsive Layout Editor";
pui.designer.d.FD = "Screen Sizes";
pui.designer.d.GD = "Style Rules";
pui.designer.d.Fw = "Containers";
pui.designer.d.ID = "Rows/Columns";
pui.designer.d.iD = "Resizable Columns";
pui.designer.d.fL = "Add Row";
pui.designer.d.eL = "Add Column";
pui.designer.d.hL = "Remove Last Row";
pui.designer.d.gL = "Remove Last Column";
pui.designer.d.xD = "Rotate";
pui.designer.d.oD = "Defaults";
pui.designer.d.wD = "Portrait";
pui.designer.d.sD = "Landscape";
pui.designer.d.vD = "First";
pui.designer.d.uD = "Last";
pui.designer.d.tD = "2nd Last";
pui.designer.d.qD = "Explicit Rows";
pui.designer.d.pD = "Explicit Columns";
pui.designer.d.ow = 30;
pui.designer.d.rw = "device";
pui.designer.d.pi = "/profoundui/proddata/images/dspfdesigner/icons16x16/";
pui.designer.d.qa = null;
pui.designer.d.Zc = null;
pui.designer.d.qh = null;
pui.designer.d.Ka = null;
pui.designer.d.ge = null;
pui.designer.d.Fg = null;
pui.designer.d.i = null;
pui.designer.d.Qg = null;
pui.designer.d.vC = function () {
    this.Va = this.Hu = null;
    var b = this, a = 1, c = 1, d = "", e;
    this.lB = function (f, h, g, l) {
        a = f;
        d = h;
        c = g;
        e = l
    };
    this.show = function () {
        function f() {
            pui.designer.d.qh = pui.designer.d.Zc.contentWindow;
            pui.designer.d.Ka = pui.designer.d.qh.document;
            r();
            var U = pui.designer.d.Ka.createElement("link");
            U.setAttribute("rel", "stylesheet");
            U.setAttribute("type", "text/css");
            U.setAttribute("href", "/profoundui/proddata/css/designer_respeditor.css");
            pui.designer.d.Ka.head.appendChild(U);
            var Z = pui.designer.d.Ka.createElement("div");
            Z.id = "_id_";
            pui.designer.d.qa.b = Z;
            pui.designer.d.qa.zv(e);
            pui.designer.d.qa.Dv(a);
            pui.designer.d.qa.mo(d);
            pui.designer.d.Ka.body.appendChild(Z);
            Z = pui.designer.d.Ka.createElementNS(pui.Mo, "svg");
            pui.designer.d.Ka.body.appendChild(Z);
            h();
            k();
            Tb("containersAddRmv").value = a;
            pui.designer.d.qh.addEventListener("resize", i);
            U.addEventListener("load", g);
            U.addEventListener("error", function () {
                console.log("Failed to load required stylesheet. Drawing lines anyway");
                g()
            });
            pui.designer.d.Ka.body.addEventListener("click",
                function (la) {
                    pui.designer.d.qa.tJ(la.clientX, la.clientY);
                    g();
                    if (pui.designer.d.Fg != null) {
                        V.select(pui.designer.d.Fg);
                        pui.designer.d.Fg = null
                    }
                });
            pui.designer.d.Ka.addEventListener("mousedown", function () {
                pui.designer.d.Qg != null && pui.designer.d.Qg.hide()
            });
            pui.designer.d.Ka.addEventListener("contextmenu", function (la) {
                la.preventDefault()
            })
        }

        function h() {
            v = false;
            var U = pui.designer.d.qa.CG(), Z = O.getRootNode();
            Z.hasChildNodes() && Z.removeAll(true);
            pui.designer.d.qa.Rw(U, Z);
            Z.expand(true);
            v = true;
            if (pui.designer.d.Fg !=
                null) {
                V.select(pui.designer.d.Fg);
                pui.designer.d.Fg = null
            }
        }

        function g() {
            var U;
            if (pui.is_ie) {
                var Z = pui.designer.d.Ka.createElement("div");
                Z.className = "iewarn";
                Z.innerHTML = pui.designer.d.rD;
                pui.designer.d.Ka.body.appendChild(Z)
            } else {
                Z = pui.designer.d.Ka.querySelector("svg");
                if (Z == null) console.log("svg was null."); else {
                    Z.style.width = "";
                    Z.style.height = "";
                    Z.style.width = pui.designer.d.Ka.body.scrollWidth + "px";
                    Z.style.height = pui.designer.d.Ka.body.scrollHeight + "px";
                    Z.innerHTML = "";
                    var la = pui.designer.d.qa.Qw();
                    Z = new pui.designer.d.xw(la.lq);
                    la.ta && h();
                    var Y;
                    for (la = 0; la < Z.zl.length; la++) {
                        Y = Z.zl[la];
                        var oa = null;
                        pui.designer.d.qa.Yp() || (oa = "grid-template-rows");
                        U = new pui.designer.d.Yl(oa);
                        U.Af = la + 1;
                        U.Ll(l(Z.Ag, 4));
                        U.Jg = Z.Ag[la];
                        if (oa) U.label = pui.designer.d.CD + " (" + pui.designer.d.cs + " " + (la + 2) + ")";
                        U.Pf(0, pui.designer.d.Ka.body.scrollWidth, Y);
                        U.sk("rowcolsize")
                    }
                    for (la = 0; la < Z.Ck.length; la++) {
                        Y = Z.Ck[la];
                        oa = null;
                        if (!pui.designer.d.qa.Yp() && u) oa = "grid-template-columns";
                        U = new pui.designer.d.dm(oa);
                        U.Af = la + 1;
                        U.Ll(l(Z.colWidths,
                            4));
                        U.Jg = Z.colWidths[la];
                        if (!pui.designer.d.qa.Yp()) U.label = u ? pui.designer.d.nD + " (" + pui.designer.d.cs + " " + (la + 2) + ")" : pui.designer.d.mD + " " + pui.designer.d.cs + " " + (la + 2);
                        U.Pf(Y, 0, pui.designer.d.Ka.body.scrollHeight);
                        U.sk("rowcolsize")
                    }
                    if (pui.designer.d.qa.Yp()) for (la = 0; la < a; la++) {
                        U = pui.designer.d.qa.fG(la);
                        if (U.className == "selected") {
                            Y = {
                                left: U.offsetLeft,
                                top: U.offsetTop,
                                width: U.offsetWidth,
                                height: U.offsetHeight,
                                right: U.offsetLeft + U.offsetWidth,
                                bottom: U.offsetTop + U.offsetHeight
                            };
                            oa = new pui.designer.d.wC;
                            oa.Pf(Y.left, Y.top, Y.width, Y.height);
                            U = new pui.designer.d.Yl("grid-row-start");
                            U.label = pui.designer.d.ED;
                            U.Ll(Z.zl);
                            U.uf = Z.Oy(Y.top);
                            U.xm = la;
                            U.Pf(Y.left, Y.right, Y.top + 3);
                            U.sk("start");
                            oa.Cr = U;
                            U = new pui.designer.d.Yl("grid-row-end");
                            U.label = pui.designer.d.yD;
                            U.Ll(Z.zl);
                            U.Lv = true;
                            U.uf = Z.Oy(Y.bottom);
                            U.xm = la;
                            U.Pf(Y.left, Y.right, Y.bottom - 3);
                            U.sk("end");
                            oa.yk = U;
                            U = new pui.designer.d.dm("grid-column-start");
                            U.label = pui.designer.d.lD;
                            U.Ll(Z.Ck);
                            U.uf = Z.qy(Y.left);
                            U.xm = la;
                            U.Pf(Y.left + 3, Y.top, Y.bottom);
                            U.sk("start");
                            oa.iq = U;
                            U = new pui.designer.d.dm("grid-column-end");
                            U.label = pui.designer.d.jD;
                            U.Ll(Z.Ck);
                            U.uf = Z.qy(Y.right);
                            U.Lv = true;
                            U.xm = la;
                            U.Pf(Y.right - 3, Y.top, Y.bottom);
                            U.sk("end");
                            oa.yl = U
                        }
                    } else {
                        U = new pui.designer.d.Yl("grid-row-gap");
                        U.label = pui.designer.d.zD;
                        U.Pf(0, pui.designer.d.Ka.body.scrollWidth, Z.Xq);
                        U = new pui.designer.d.dm("grid-column-gap");
                        U.label = pui.designer.d.kD;
                        U.Pf(Z.dp, 0, pui.designer.d.Ka.body.scrollHeight)
                    }
                }
            }
        }

        function l(U, Z) {
            for (var la = pui.designer.d.ow, Y = 0; Y < U.length; Y++) if (U[Y] > Z && U[Y] < la) la =
                U[Y];
            return la
        }

        function n() {
            if (O != null) {
                var U = O.getRootNode();
                if (U != null && U.childNodes != null) {
                    var Z = {Sd: ""};
                    pui.designer.d.qa.Pt(U.childNodes, Z);
                    pui.designer.d.qa.mo(Z.Sd);
                    g()
                }
            }
        }

        function o() {
            if (v) {
                clearTimeout(w);
                w = setTimeout(n, 1)
            }
        }

        function i() {
            g();
            r();
            k()
        }

        function r() {
            b.Va.layout.center.panel.setTitle(pui.designer.d.Gw + " (" + pui.designer.d.Zc.clientWidth + "px x " + pui.designer.d.Zc.clientHeight + "px, " + (pui.designer.d.Zc.clientWidth > pui.designer.d.Zc.clientHeight ? pui.designer.d.sD : pui.designer.d.wD) +
                ")")
        }

        function k() {
            var U = Ext.getCmp("explicitrows");
            U.setValue(pui.designer.d.qa.Ay("rows"));
            U = Ext.getCmp("explicitcols");
            U.setValue(pui.designer.d.qa.Ay("columns"))
        }

        function q(U) {
            var Z = parseInt(B[U], 10);
            if (!isNaN(Z) && Z > 0) D[U] = Z
        }

        function s(U) {
            var Z, la, Y;
            if (U != null) {
                Y = U.data;
                Y.minWidth = parseInt(Y.minWidth, 10);
                Y.maxWidth = parseInt(Y.maxWidth, 10);
                Y.height = parseInt(Y.height, 10);
                if (isNaN(Y.minWidth)) Y.minWidth = null;
                if (isNaN(Y.maxWidth)) Y.maxWidth = null;
                if (isNaN(Y.height)) Y.height = null;
                Ext.getCmp("scrnsizedel").enable()
            } else Ext.getCmp("scrnsizedel").disable();
            if (Y != null && Y.maxWidth > 0 && Y.height > 0) {
                U = Y.maxWidth + "px";
                Z = Y.height + "px";
                la = pui.designer.d.rw;
                Ext.getCmp("resprotatebtn").enable()
            } else {
                U = Z = la = "";
                Ext.getCmp("resprotatebtn").disable()
            }
            pui.designer.d.Zc.style.width = U;
            pui.designer.d.Zc.style.height = Z;
            pui.designer.d.Zc.className = la;
            pui.designer.d.i = Y;
            k()
        }

        function t(U) {
            var Z = [];
            for (var la = e = "", Y = 0; Y < U.data.items.length; Y++) {
                var oa = U.data.items[Y].data.label;
                Z.push(oa);
                e += la + oa;
                la = ","
            }
            pui.designer.d.qa.zv(Z)
        }

        pui.designer.d.ge = function () {
            h();
            g();
            k()
        };
        var u =
            false, w = 0, v = false, E = true, y = 1;
        if (pui.flatlook) pui.designer.d.pi = "/profoundui/proddata/images/FlatIcons/16x16/";
        pui.designer.d.qa = new pui.designer.d.cj;
        pui.designer.d.qa.Fq = true;
        var F = [["Any", null, null, null], ["Small", 0, 480, 800], ["Medium", 481, 768, 1280], ["Large", 769, 1366, 768]];
        if (pui.designer["responsive screen sizes"] != null && pui.designer["responsive screen sizes"].length > 0) F = pui.designer["responsive screen sizes"];
        var D = {
            westWidth: 175, winWidth: 1E3, winHeight: 640, maximized: false, winx: 10, winy: 10, hgtColHide: true,
            eastWidth: 375, eastCollapsed: true, screensizes: F
        };
        try {
            var B = JSON.parse(localStorage.getItem("pui-resp-editor-prefs"));
            q("westWidth");
            q("eastWidth");
            q("winWidth");
            q("winHeight");
            q("winx");
            q("winy");
            D.maximized = B.maximized;
            D.hgtColHide = B.hgtColHide;
            D.eastCollapsed = B.eastCollapsed;
            if (B.screensizes != null && B.screensizes.length > 0) {
                D.screensizes = B.screensizes;
                E = false
            }
        } catch (I) {
        }
        var z = new Ext.data.ArrayStore({
            autoDestroy: true,
            fields: ["label", "minWidth", "maxWidth", "height"],
            idProperty: "label"
        });
        z.loadData(D.screensizes);
        z.addListener("update", function (U, Z) {
            var la, Y, oa;
            for (la in Z.modified) break;
            if (la != null) {
                Y = Z.modified[la];
                oa = parseInt(Z.data[la], 10);
                if (!isNaN(oa)) {
                    var qa = la.substring(0, 3);
                    if (la.substring(3) == "Width") {
                        pui.designer.d.qa.Os(qa, Y, oa);
                        h()
                    }
                }
            }
            s(Z);
            U.commitChanges();
            Ext.getCmp("respdefscrnsizbtn").enable()
        });
        var H = new Ext.grid.RowSelectionModel({
            singleSelect: true,
            moveEditorOnEnter: false,
            listeners: {
                selectionchange: function () {
                    J.stopEditing();
                    var U = H.getSelected();
                    s(U)
                }
            }
        }), J = new Ext.grid.EditorGridPanel({
            autoScroll: true,
            border: false,
            id: "respscreengrid",
            layout: "fit",
            height: 200,
            title: pui.designer.d.FD,
            titleCollapse: true,
            viewConfig: {forceFit: true},
            store: z,
            sm: H,
            tbar: [{
                disabled: E, id: "respdefscrnsizbtn", text: pui.designer.d.oD, handler: function () {
                    for (var U = z.getCount(), Z = 0; Z < U; Z++) for (var la = z.getAt(Z), Y = 0; Y < F.length; Y++) if (la.data.label == F[Y][0]) {
                        pui.designer.d.qa.Os("min", la.data.minWidth, F[Y][1]);
                        pui.designer.d.qa.Os("max", la.data.maxWidth, F[Y][2]);
                        break
                    }
                    h();
                    z.loadData(F);
                    Ext.getCmp("respdefscrnsizbtn").disable()
                }, tooltip: "Drop changes to the screen sizes and restore defaults: Any, Small, Medium, and Large",
                tooltipType: "title"
            }, {
                disabled: true,
                id: "resprotatebtn",
                tooltip: pui.designer.d.xD,
                tooltipType: "title",
                icon: pui.designer.d.pi + (pui.flatlook ? "rotate.png" : "rotate_canvas.png"),
                handler: function () {
                    var U = pui.designer.d.Zc.style.width, Z = pui.designer.d.Zc.style.height;
                    if (U != "" && Z != "") {
                        pui.designer.d.Zc.style.width = Z;
                        pui.designer.d.Zc.style.height = U
                    }
                }
            }, "->", {
                tooltip: "Add new screen size ruleset",
                tooltipType: "title",
                icon: pui.designer.d.pi + "add.png",
                handler: function () {
                    Ext.getCmp("respdefscrnsizbtn").enable();
                    var U = new (Ext.data.Record.create([{name: "label", type: "string"}, {
                        name: "minWidth",
                        type: "int"
                    }, {name: "maxWidth", type: "int"}, {name: "height", type: "int"}]))({
                        label: "New Size " + y++,
                        minWidth: 0,
                        maxWidth: 0,
                        height: 0
                    }), Z = J.getColumnModel(), la = Z.getIndexById("resphgtcol");
                    Z.setHidden(la, false);
                    Z = z.getCount();
                    J.stopEditing();
                    z.insert(Z, U);
                    J.startEditing(Z, 0)
                }
            }, "-", {
                disabled: true,
                tooltip: "Remove the selected screen size ruleset",
                tooltipType: "title",
                id: "scrnsizedel",
                icon: pui.designer.d.pi + (pui.flatlook ? "remove-1.png" :
                    "delete.png"),
                handler: function () {
                    Ext.getCmp("respdefscrnsizbtn").enable();
                    J.stopEditing();
                    var U = H.getSelected();
                    if (U != null) {
                        pui.designer.d.qa.UI(U.data.minWidth, U.data.maxWidth);
                        z.remove(U);
                        h()
                    }
                }
            }],
            columns: [{
                header: "Size",
                sortable: true,
                width: 50,
                dataIndex: "label",
                editor: new Ext.form.TextField({allowBlank: false, autoCreate: {tag: "input", type: "text"}})
            }, {
                header: "Min<br>Width",
                sortable: true,
                width: 40,
                dataIndex: "minWidth",
                editor: new Ext.form.TextField({allowBlank: true, autoCreate: {tag: "input", type: "text"}})
            },
                {
                    header: "Max<br>Width",
                    sortable: true,
                    width: 40,
                    dataIndex: "maxWidth",
                    editor: new Ext.form.TextField({allowBlank: true, autoCreate: {tag: "input", type: "text"}})
                }, {
                    header: "Height",
                    id: "resphgtcol",
                    hidden: D.hgtColHide,
                    sortable: true,
                    width: 40,
                    dataIndex: "height",
                    editor: new Ext.form.TextField({allowBlank: true, autoCreate: {tag: "input", type: "text"}})
                }]
        }), K = new Ext.data.ArrayStore({autoDestroy: true, fields: ["label"], idProperty: "label"});
        E = pui.Ta(e).map(function (U) {
            return [U]
        });
        K.loadData(E);
        K.addListener("update", function (U) {
            U.commitChanges();
            t(U)
        });
        var L = new Ext.grid.RowSelectionModel({
            singleSelect: true,
            moveEditorOnEnter: false,
            listeners: {
                selectionchange: function (U) {
                    U = U.getSelected();
                    var Z = Ext.getCmp("contnamedel"), la = Ext.getCmp("contnamemoveup"),
                        Y = Ext.getCmp("contnamemovedown");
                    if (U != null) {
                        var oa = U.store.indexOf(U);
                        Z.enable();
                        oa > 0 && la.enable();
                        oa < U.store.getCount() - 1 && Y.enable()
                    } else {
                        Z.disable();
                        la.disable();
                        Y.disable()
                    }
                }
            }
        }), N = new Ext.grid.EditorGridPanel({
            autoScroll: true,
            border: false,
            enableColumnHide: false,
            enableHdMenu: false,
            id: "respContNamesGrid",
            layout: "fit",
            height: 160,
            viewConfig: {forceFit: true},
            store: K,
            sm: L,
            tbar: [{
                tooltip: "Add name",
                tooltipType: "title",
                icon: pui.designer.d.pi + "add.png",
                handler: function () {
                    var U = new (Ext.data.Record.create([{name: "label", type: "string"}]))({label: "New Name"}),
                        Z = K.getCount(), la = L.getSelected();
                    if (la) Z = la.store.indexOf(la);
                    N.stopEditing();
                    K.insert(Z, U);
                    K.commitChanges();
                    N.startEditing(Z, 0)
                }
            }, {
                disabled: true,
                tooltip: "Remove name",
                tooltipType: "title",
                id: "contnamedel",
                icon: pui.designer.d.pi + (pui.flatlook ? "remove-1.png" :
                    "delete.png"),
                handler: function () {
                    var U = L.getSelected();
                    if (U) {
                        K.remove(U);
                        t(K)
                    }
                }
            }, {
                disabled: true,
                tooltip: "Move up",
                tooltipType: "title",
                id: "contnamemoveup",
                icon: pui.designer.d.pi + "up.png",
                handler: function () {
                    var U = L.getSelected();
                    if (U) {
                        var Z = U.store.indexOf(U) - 1;
                        K.remove(U);
                        K.insert(Z, [U]);
                        L.selectRow(Z);
                        t(K)
                    }
                }
            }, {
                disabled: true,
                tooltip: "Move down",
                tooltipType: "title",
                id: "contnamemovedown",
                icon: pui.designer.d.pi + "down.png",
                handler: function () {
                    var U = L.getSelected();
                    if (U) {
                        var Z = U.store.indexOf(U) + 1;
                        K.remove(U);
                        K.insert(Z, [U]);
                        L.selectRow(Z);
                        t(K)
                    }
                }
            }],
            columns: [{
                header: "Names",
                sortable: false,
                dataIndex: "label",
                editor: new Ext.form.TextField({autoCreate: {tag: "input", type: "text"}})
            }]
        });
        pui.designer.d.Zc = document.createElement("iframe");
        pui.designer.d.Zc.id = "puirespprevcont";
        var O = new Ext.tree.TreePanel({
            autoScroll: true,
            animate: false,
            root: {text: pui.designer.d.HD},
            disabled: pui.is_ie,
            rootVisible: true
        });
        O.getRootNode().loaded = true;
        var V = O.getSelectionModel();
        O.addListener("remove", o);
        O.addListener("append", o);
        O.addListener("textchange",
            o);
        V.addListener("selectionchange", function (U, Z) {
            Z != null ? Ext.getCmp("puirmvtreebtn").enable() : Ext.getCmp("puirmvtreebtn").disable()
        });
        b.Va = new Ext.Window({
            title: pui.designer.d.JD,
            x: D.winx,
            y: D.winy,
            width: D.winWidth,
            height: D.winHeight,
            maximizable: true,
            maximized: D.maximized,
            minWidth: 525,
            minHeight: 285,
            layout: "border",
            modal: true,
            listeners: {
                beforeclose: function () {
                    R.designer.disabled = false
                }
            },
            buttons: [{
                text: pui.getLanguageText("runtimeText", "save"), handler: function () {
                    function U(la) {
                        for (var Y = Z.Sd.indexOf(la); Y >
                        0 && Y < Z.Sd.length;) if (Z.Sd[Y - 1] != "-") {
                            var oa = Z.Sd.substr(0, Y), qa = Z.Sd.substr(Y);
                            Z.Sd = oa + "grid-" + qa;
                            Y = Z.Sd.indexOf(la, Y + la.length + 5)
                        } else Y = Z.Sd.indexOf(la, Y + la.length)
                    }

                    var Z = {Sd: ""};
                    pui.designer.d.qa.Pt(O.getRootNode().childNodes, Z);
                    U("row-gap");
                    U("column-gap");
                    b.Hu(Z.Sd, a, e);
                    b.hide()
                }, disabled: pui.is_ie
            }, {text: pui.getLanguageText("runtimeText", "cancel"), handler: b.hide}],
            items: [{
                autoScroll: true, region: "west", split: true, width: D.westWidth, items: [new Ext.Panel({
                    border: false, layout: "anchor", items: [J, new Ext.Panel({
                        border: false,
                        layout: "form",
                        labelWidth: "50px",
                        title: pui.designer.d.Fw,
                        items: [{
                            xtype: "numberfield",
                            fieldLabel: pui.designer.d.Fw,
                            id: "containersAddRmv",
                            inputType: "number",
                            width: "50px",
                            style: {margin: "2px 0 0 0"}
                        }]
                    }), N, new Ext.Panel({
                        border: false,
                        layout: "form",
                        labelWidth: "50px",
                        title: pui.designer.d.ID,
                        titleCollapse: true,
                        defaults: {width: "98%"},
                        items: [new Ext.form.Checkbox({
                            fieldLabel: pui.designer.d.iD,
                            name: "dragcollines",
                            checked: false,
                            labelStyle: "white-space:normal",
                            listeners: {
                                check: function (U, Z) {
                                    u = Z;
                                    g()
                                }
                            }
                        }), {
                            xtype: "numberfield",
                            fieldLabel: pui.designer.d.qD, id: "explicitrows", inputType: "number", width: "50px"
                        }, {
                            xtype: "numberfield",
                            fieldLabel: pui.designer.d.pD,
                            id: "explicitcols",
                            inputType: "number",
                            width: "50px",
                            style: {marginBottom: "15px"}
                        }, {html: "All Explicit Rows:", border: false}, new Ext.Button({
                            text: "Set Height to 1fr",
                            listeners: {
                                click: function () {
                                    pui.designer.d.qa.Yj("rows", "1fr");
                                    pui.designer.d.ge()
                                }
                            },
                            style: {margin: "0 0 1px 1px"},
                            tooltip: "Sets column heights to 1 fraction, effectively distributing each evenly",
                            tooltipType: "title"
                        }),
                            new Ext.Button({
                                text: "Set Height to Auto",
                                listeners: {
                                    click: function () {
                                        pui.designer.d.qa.Yj("rows", "auto");
                                        pui.designer.d.ge()
                                    }
                                },
                                style: {margin: "0 0 1px 1px"},
                                tooltip: "Evenly distributes row heights according to container height",
                                tooltipType: "title"
                            }), new Ext.Button({
                                text: "Set Height to 100px",
                                listeners: {
                                    click: function () {
                                        pui.designer.d.qa.Yj("rows", "100px");
                                        pui.designer.d.ge()
                                    }
                                },
                                style: {margin: "0 0 1px 1px"},
                                tooltip: "Sets row heights to 100px",
                                tooltipType: "title"
                            }), new Ext.Button({
                                text: "Set Height to 100px &le; y &le; Auto",
                                listeners: {
                                    click: function () {
                                        pui.designer.d.qa.Yj("rows", "minmax(100px,auto)");
                                        pui.designer.d.ge()
                                    }
                                },
                                style: {margin: "0 0 10px 1px"},
                                tooltip: "Sets minimum row heights to 100px and maximum row heights to auto",
                                tooltipType: "title"
                            }), {html: "All Explicit Columns:", border: false}, new Ext.Button({
                                text: "Set Width to 1fr",
                                listeners: {
                                    click: function () {
                                        pui.designer.d.qa.Yj("columns", "1fr");
                                        pui.designer.d.ge()
                                    }
                                },
                                style: {margin: "0 0 1px 1px"},
                                tooltip: "Sets column widths to 1 fraction, effectively distributing each evenly",
                                tooltipType: "title"
                            }), new Ext.Button({
                                text: "Set Width to Auto",
                                listeners: {
                                    click: function () {
                                        pui.designer.d.qa.Yj("columns", "auto");
                                        pui.designer.d.ge()
                                    }
                                },
                                style: {margin: "0 0 1px 1px"},
                                tooltip: "Evenly distributes column widths according to container width",
                                tooltipType: "title"
                            }), new Ext.Button({
                                text: "Set Width to 100px",
                                listeners: {
                                    click: function () {
                                        pui.designer.d.qa.Yj("columns", "100px");
                                        pui.designer.d.ge()
                                    }
                                },
                                style: {margin: "0 0 0 1px"},
                                tooltip: "Sets column widths to 100px",
                                tooltipType: "title"
                            })]
                    })]
                })]
            },
                {title: pui.designer.d.Gw, region: "center", contentEl: pui.designer.d.Zc, autoScroll: true}, {
                    title: pui.designer.d.GD,
                    region: "east",
                    split: true,
                    width: D.eastWidth,
                    collapsible: true,
                    collapsed: D.eastCollapsed,
                    items: [O],
                    tbar: [{
                        xtype: "buttongroup", items: [{
                            text: pui.getLanguageText("runtimeText", "add"), handler: function () {
                                var U = V.getSelectedNode() || O.getRootNode();
                                if (U.leaf === true) U = U.parentNode;
                                var Z = U.attributes.$h;
                                Z = U.appendChild(Z == window.CSSStyleRule.MEDIA_RULE ? {
                                        text: "cssselector",
                                        leaf: false,
                                        $h: window.CSSStyleRule.STYLE_RULE
                                    } :
                                    Z == window.CSSStyleRule.STYLE_RULE ? {
                                        text: "cssproperty:cssvalue;",
                                        leaf: true,
                                        $h: window.CSSStyleRule.STYLE_RULE
                                    } : {text: "@media screen", leaf: false, $h: window.CSSStyleRule.MEDIA_RULE});
                                U.loaded = true;
                                U.expand();
                                Z.loaded = true
                            }
                        }, {
                            text: pui.getLanguageText("runtimeText", "remove"), handler: function () {
                                var U = V.getSelectedNode();
                                U != null && U.parentNode != null && U.parentNode.removeChild(U)
                            }, disabled: true, id: "puirmvtreebtn"
                        }]
                    }],
                    autoScroll: true
                }]
        });
        R.designer.disabled = true;
        new Ext.tree.TreeEditor(O, null, {
            constrain: true,
            style: {zIndex: b.Va.lastZIndex || 1E4}
        });
        b.Va.show();
        Tb("explicitrows").addEventListener("input", function (U) {
            pui.designer.d.qa.qx(U.target.value, "rows");
            pui.designer.d.ge()
        });
        Tb("explicitcols").addEventListener("input", function (U) {
            pui.designer.d.qa.qx(U.target.value, "columns");
            pui.designer.d.ge()
        });
        Tb("containersAddRmv").addEventListener("input", function (U) {
            var Z = parseInt(U.target.value, 10);
            if (isNaN(Z) || Z < c || Z > 255) U.target.value = a; else {
                a = Z;
                pui.designer.d.qa.Dv(a);
                n()
            }
        });
        var X = 0, ga = setInterval(function () {
            X++;
            try {
                var U = pui.designer.d.Zc.contentWindow.document
            } catch (Z) {
                clearInterval(ga);
                console.log(Z)
            }
            if (U.readyState == "complete") {
                clearInterval(ga);
                f()
            } else if (X >= 1E3) {
                console.log("Timed out waiting for iframe to load. Attempting anyway");
                clearInterval(ga);
                f()
            }
        }, 1)
    };
    this.hide = function () {
        if (b.Va != null) {
            try {
                var f = b.Va.getPosition(true), h = Ext.getCmp("respscreengrid"), g = h.getColumnModel(),
                    l = b.Va.layout.east.state && b.Va.layout.east.state.width ? b.Va.layout.east.state.width : b.Va.layout.east.width,
                    n = {
                        westWidth: b.Va.layout.west.state &&
                        b.Va.layout.west.state.width ? b.Va.layout.west.state.width : b.Va.layout.west.width,
                        maximized: b.Va.maximized,
                        hgtColHide: g.isHidden(g.getIndexById("resphgtcol")),
                        eastWidth: l,
                        eastCollapsed: b.Va.layout.east.isCollapsed
                    };
                if (!b.Va.maximized) {
                    n.winHeight = b.Va.getHeight();
                    n.winWidth = b.Va.getWidth();
                    n.winx = f[0];
                    n.winy = f[1]
                }
                var o = h.store.getCount();
                if (o > 0) {
                    f = [];
                    for (g = 0; g < o; g++) {
                        var i = h.store.getAt(g).data;
                        f.push([i.label, i.minWidth, i.maxWidth, i.height])
                    }
                    n.screensizes = f
                }
                localStorage.setItem("pui-resp-editor-prefs",
                    JSON.stringify(n))
            } catch (r) {
                console.log(r)
            }
            b.Va.close()
        }
        b.Va = null;
        pui.designer.d.qa != null && pui.designer.d.qa.destroy();
        try {
            delete pui.designer.d.qa;
            delete pui.designer.d.Ka;
            delete pui.designer.d.qh;
            delete pui.designer.d.Zc;
            delete pui.designer.d.ge;
            delete pui.designer.d.Fg;
            delete pui.designer.d.i;
            if (pui.designer.d.Qg != null) {
                pui.designer.d.Qg.destroy();
                delete pui.designer.d.Qg
            }
        } catch (k) {
        }
    }
};
pui.designer.d.Xm = function (b) {
    var a = [], c = b.match(/^\s*([\d\.]+)(fr|px|%)\s*$/);
    if (c != null) {
        a[0] = Number(c[1]);
        a[1] = c[2]
    } else {
        c = b.match(/^(span) (\d+)$/);
        if (c != null) {
            a[0] = Number(c[2]);
            a[1] = c[1]
        } else {
            a[0] = Number(b);
            if (isNaN(a[0])) a[0] = b;
            a[1] = ""
        }
    }
    return a
};
pui.designer.d.Kt = function (b, a, c) {
    var d = -1, e = 0;
    if (isNaN(b) || b < 0) return -1;
    for (; e < a.length;) {
        a[e] = Math.floor(a[e]);
        if (b < a[e] || b == a[e] && c) {
            d = e;
            break
        }
        e++
    }
    if (e == a.length && d == -1) d = a.length;
    return d
};
pui.designer.d.xk = function (b, a, c) {
    pui.designer.d.Or(b.style, a, c);
    b.Fl = c != "" ? a : "self"
};
pui.designer.d.rh = function (b, a) {
    if (a == "grid-row-gap" || a == "row-gap") {
        if (typeof b["row-gap"] == "string" && b["row-gap"].indexOf("px") > 0) return b["row-gap"];
        a = "grid-row-gap"
    } else if (a == "grid-column-gap" || a == "column-gap") {
        if (typeof b["column-gap"] == "string" && b["column-gap"].indexOf("px") > 0) return b["column-gap"];
        a = "grid-column-gap"
    }
    if (b[a] == null) return "";
    return b[a]
};
pui.designer.d.Or = function (b, a, c) {
    if (a == "row-gap") b["grid-row-gap"] = c; else if (a == "column-gap") b["grid-column-gap"] = c; else b[a] = c
};
pui.designer.d.Iy = function (b) {
    for (var a = 1, c = 0; c < b.length; c++) {
        var d = b[c];
        if (d.tagName == "DIV" && d.children.length > 0) a = c + 1
    }
    return a
};
pui.designer.d.xw = function (b) {
    function a(e, f) {
        for (var h = pui.designer.d.qa.Gn(e), g = 0; g < h.length; g++) {
            var l = pui.designer.d.Xm(h[g]);
            f.push(l[0])
        }
    }

    this.Ag = [];
    this.zl = [];
    this.colWidths = [];
    this.Ck = [];
    b["grid-template-rows"] != "none" && a(b["grid-template-rows"], this.Ag);
    b["grid-template-columns"] != "none" && a(b["grid-template-columns"], this.colWidths);
    this.Xq = Number(pui.designer.d.rh(b, "grid-row-gap").replace("px", ""));
    this.dp = Number(pui.designer.d.rh(b, "grid-column-gap").replace("px", ""));
    if (isNaN(this.Xq)) this.Xq =
        0;
    if (isNaN(this.dp)) this.dp = 0;
    b = 0;
    var c;
    for (c = 0; c < this.Ag.length; c++) {
        this.Ag[c] = Number(this.Ag[c]);
        this.zl.push(this.Ag[c] + b);
        b += this.Ag[c] + this.Xq
    }
    for (c = b = 0; c < this.colWidths.length; c++) {
        this.colWidths[c] = Number(this.colWidths[c]);
        this.Ck.push(this.colWidths[c] + b);
        b += this.colWidths[c] + this.dp
    }
    var d = this;
    this.Oy = function (e, f) {
        return pui.designer.d.Kt(e, d.zl, f)
    };
    this.qy = function (e, f) {
        return pui.designer.d.Kt(e, d.Ck, f)
    }
};
pui.designer.d.cj = function () {
    function b(q, s) {
        for (var t = 0; t < q.cssRules.length; t++) {
            var u = q.cssRules[t];
            if (u.type == u.SUPPORTS_RULE) b(u, s); else u.type == u.MEDIA_RULE && s(u) && b(u, s)
        }
    }

    function a() {
        var q = [];
        if (g.nb == null || g.nb.sheet == null) return q;
        b(g.nb.sheet, function (s) {
            if (pui.designer.d.qh.matchMedia(s.conditionText).matches) {
                q.push(s);
                return true
            }
            return false
        });
        return q
    }

    function c(q) {
        function s(w, v) {
            for (var E = 0; E < w.cssRules.length; E++) {
                var y = w.cssRules[E];
                if (y.type == y.SUPPORTS_RULE) s(y, v); else if (y.type ==
                    y.MEDIA_RULE) {
                    var F = pui.designer.d.qh.matchMedia(y.conditionText);
                    if (F.matches) {
                        var D = v.Zg, B = v.media;
                        v.Zg = true;
                        v.media = F.media;
                        s(y, v);
                        v.Zg = D;
                        v.media = B
                    }
                } else if (y.type == y.STYLE_RULE) if (u == null || u.matches(y.selectorText)) t.push({
                    node: y,
                    Xp: v.Zg,
                    media: v.media
                })
            }
        }

        var t = [], u = g.vc;
        if (typeof q == "number" && q >= 0 && q <= g.pk) u = g.vc.childNodes[q];
        s(g.nb.sheet, {Zg: false, media: ""});
        return t
    }

    function d(q, s, t, u) {
        function w(F) {
            for (F = F.parentRule; F != null;) {
                if (F == k) return true;
                F = F.parentRule
            }
            return false
        }

        var v;
        if (s != null &&
            s >= 0) v = RegExp("\\." + pui.designer.d.qa.Zl + "\\s*>\\s*(div:nth-of-type\\(\\s*" + (s + 1) + "\\s*\\)|div:nth-child\\(\\s*" + (s + 1) + "\\s*\\))");
        var E = {Rd: null, ms: null};
        s = c(s);
        for (var y = 0; y < s.length; y++) if (!t || v == null || v.test(s[y].node.selectorText)) if (u !== true || w(s[y].node)) if (E.Rd == null || E.Rd.Xp == false || s[y].Xp) if (pui.designer.d.rh(s[y].node.style, q) != "") E.Rd = s[y]; else E.ms = s[y].node;
        if (E.Rd != null) E.Rd = E.Rd.node;
        return E
    }

    function e() {
        var q = pui.designer.d.i, s = "";
        if (q != null && q.maxWidth != null && q.maxWidth > 2) {
            if (q.minWidth >
                1) s += " and (min-width:" + q.minWidth + "px)";
            s += " and (max-width:" + q.maxWidth + "px)"
        }
        q = "@media screen" + s + "{}";
        try {
            var t = g.nb.sheet.insertRule(q, s == "" ? 0 : g.nb.sheet.cssRules.length)
        } catch (u) {
            console.log(q);
            throw u;
        }
        k = g.nb.sheet.cssRules[t]
    }

    function f() {
        var q = R.designer.$d(g.b), s = q.properties["layout items"];
        if (pui.f(s)) {
            var t = parseInt(s.designValue, 10);
            if (isNaN(t)) t = i;
            t += 1;
            s.designValue = t
        } else {
            s = parseInt(s, 10);
            if (isNaN(s)) s = i;
            s += 1
        }
        g.Ro(q, s)
    }

    function h() {
        var q = R.designer.$d(g.b), s = q.properties["layout items"];
        if (pui.f(s)) {
            var t = parseInt(s.designValue, 10);
            if (isNaN(t)) t = i;
            t -= 1;
            s.designValue = t
        } else {
            s = parseInt(s, 10);
            if (isNaN(s)) s = i;
            s -= 1
        }
        g.Ro(q, s)
    }

    pui.cj.call(this);
    var g = this, l = null, n = null, o = null, i = 2, r = false, k = null;
    this.Yp = function () {
        return r
    };
    this.Hy = function () {
        return g.vc
    };
    this.Mw = function () {
        if (l == null) {
            l = S.Fk("plus", pui.getLanguageText("runtimeText", "add x", [pui.getLanguageText("runtimeText", "section")]), g.b);
            l.style.right = "2px";
            l.style.bottom = "2px";
            l.onclick = f
        } else l.parentNode == null && g.b.appendChild(l);
        if (g.pk > 1) if (n == null) {
            n = S.Fk("minus", pui.getLanguageText("runtimeText", "delete x", [pui.getLanguageText("runtimeText", "section")]), g.b);
            n.style.right = "2px";
            n.style.bottom = "16px";
            n.onclick = h
        } else n.parentNode == null && g.b.appendChild(n);
        if (o == null) {
            o = document.createElement("div");
            o.setAttribute("title", "Maximize");
            o.style.position = "absolute";
            o.style.top = "2px";
            o.style.right = "2px";
            o.style.width = "16px";
            o.style.height = "16px";
            o.style.cursor = "pointer";
            o.style.backgroundImage = "url(/profoundui/proddata/images/icons/maximize.png)";
            o.onmousedown = pui.maximizeLayout;
            g.b.appendChild(o)
        }
    };
    this.fG = function (q) {
        if (q >= 0 && q < g.pk && g.vc != null) return g.vc.childNodes[q]
    };
    this.tJ = function (q, s) {
        function t(E) {
            var y = null;
            E = c(E);
            for (var F = 0; F < E.length; F++) if (y == null || y.Xp == false || E[F].Xp) if (E[F].node.style["grid-row-start"] != "" || E[F].node.style["grid-row-end"] != "" || E[F].node.style["grid-column-start"] != "" || E[F].node.style["grid-column-end"] != "") if (E[F].node.Mz != null) y = E[F].node;
            return y
        }

        r = false;
        for (var u = 0; u < g.vc.childNodes.length; u++) {
            var w =
                g.vc.childNodes[u];
            if (w.tagName == "DIV") {
                var v = w.getBoundingClientRect();
                if (q >= v.left && q <= v.right && s >= v.top && s <= v.bottom && w.className != "selected" && !r) {
                    w.className = "selected";
                    r = true;
                    w = t(u);
                    if (w != null) pui.designer.d.Fg = w.Mz
                } else w.className = ""
            }
        }
    };
    this.CG = function () {
        if (g.nb != null && g.nb.sheet != null) return g.nb.sheet.cssRules
    };
    this.Os = function (q, s, t) {
        function u(w) {
            for (var v = /and\s*\((min|max)-width:\s*(\d+)px\)/g, E, y = true; E = v.exec(w.conditionText);) if (E[1] == q && parseInt(E[2], 10) == s) {
                v = w.conditionText.replace(E[0],
                    "and (" + q + "-width: " + t + "px)");
                w.media.mediaText = v;
                y = false;
                break
            }
            return y
        }

        g.nb != null && g.nb.sheet != null && b(g.nb.sheet, u)
    };
    this.UI = function (q, s) {
        function t(u) {
            var w = q > 0 ? RegExp("and\\s*\\(min-width:\\s*" + q + "px\\s*\\)") : null,
                v = RegExp("and\\s*\\(max-width:\\s*" + s + "px\\s*\\)"), E = false;
            E = w != null ? w.test(u.conditionText) : true;
            w = v.test(u.conditionText);
            if (E && w) {
                if (u.parentRule != null) E = u.parentRule; else if (u.parentStyleSheet != null) E = u.parentStyleSheet; else return true;
                for (w = 0; w < E.cssRules.length; w++) if (E.cssRules[w] ==
                    u) {
                    E.deleteRule(w);
                    return false
                }
            }
            return true
        }

        g.nb != null && g.nb.sheet != null && b(g.nb.sheet, t)
    };
    this.Lm = function () {
        var q = a(),
            s = pui.designer.d.Zc.className != pui.designer.d.rw || pui.designer.d.i != null && pui.designer.d.i.maxWidth != pui.designer.d.Zc.clientWidth;
        k = null;
        for (var t = 0; q != null && t < q.length; t++) if (s || q[t].conditionText != "screen") k = q[t]
    };
    this.Rw = function (q, s) {
        for (var t, u, w = 0; w < q.length; w++) {
            var v = q[w];
            if (v.type == v.STYLE_RULE) {
                t = s.appendChild({text: v.selectorText, leaf: false, expandable: true, $h: v.type});
                t.loaded = true;
                v.Mz = t;
                if (v.Fl != null && v.Fl == "self") {
                    pui.designer.d.Fg = t;
                    delete v.Fl
                }
                if (v.style != null && v.style.length > 0) for (var E = 0; E < v.style.length; E++) {
                    var y = v.style[E];
                    u = pui.designer.d.rh(v.style, y);
                    u = t.appendChild({text: y + ":" + u + ";", leaf: true, $h: v.type});
                    if (v.Fl != null && v.Fl == y) {
                        pui.designer.d.Fg = u;
                        delete v.Fl
                    }
                }
            } else if (v.type == v.MEDIA_RULE || v.type == v.SUPPORTS_RULE) {
                t = "@media " + (v.conditionText || v.media.mediaText);
                if (v.type == v.SUPPORTS_RULE) t = "@supports " + v.conditionText;
                t = s.appendChild({
                    text: t, leaf: false,
                    expandable: true, $h: v.type
                });
                t.loaded = true;
                v.cssRules != null && v.cssRules.length > 0 && g.Rw(v.cssRules, t)
            } else if (v.type == v.IMPORT_RULE) {
                t = s.appendChild({text: v.cssText, leaf: true, $h: v.type});
                t.loaded = true
            } else if (v.cssText != null && v.cssText.length > 0) {
                t = s.appendChild({text: v.cssText, leaf: true, $h: v.type});
                t.loaded = true
            }
        }
    };
    this.Pt = function (q, s) {
        for (var t = 0; t < q.length; t++) {
            var u = q[t], w = null;
            if (u.childNodes != null) w = u.childNodes; else if (u.attributes != null && u.attributes.children != null) w = u.attributes.children;
            var v =
                true;
            if (u.leaf != null) v = u.leaf; else if (u.attributes != null && u.attributes.leaf != null) v = u.attributes.leaf;
            s.Sd += u.text + " ";
            if (!v) {
                s.Sd += "{ ";
                w != null && g.Pt(w, s);
                s.Sd += "} "
            }
        }
    };
    this.hs = function (q, s) {
        var t, u = "auto";
        switch (q) {
            case "grid-column-gap":
            case "grid-row-gap":
                u = "0px";
                break
        }
        t = u;
        k == null && e();
        u = d(q, s, true, true);
        if (u.Rd == null) {
            var w = d(q, s, false);
            if (w.Rd != null) t = pui.designer.d.rh(w.Rd.style, q);
            if (u.ms != null) {
                u.Rd = u.ms;
                pui.designer.d.Or(u.Rd.style, q, t)
            } else {
                t = s != null ? "#_id_ > ." + g.Zl + " > div:nth-of-type(" +
                    (s + 1) + "){" + q + ":" + t + ";}" : "#_id_ > ." + g.Zl + " {" + q + ":" + t + ";}";
                var v = /div:nth-of-type\((\d+)\)/;
                for (w = 0; w < k.cssRules.length; w++) {
                    var E = v.exec(k.cssRules[w].selectorText);
                    if (E && E[1]) {
                        E = parseInt(E[1], 10);
                        if (!isNaN(E) && E > s + 1) break
                    }
                }
                try {
                    w = k.insertRule(t, w);
                    u.Rd = k.cssRules[w]
                } catch (y) {
                    console.log(t);
                    throw y;
                }
            }
        }
        return u.Rd
    };
    this.Qw = function () {
        var q, s = {ta: false, lq: null}, t = pui.designer.d.qh.getComputedStyle(g.vc);
        q = c();
        var u = q.length == 0;
        if (u) {
            g.Lm();
            k == null && e();
            q = k.insertRule("#_id_ > ." + g.Zl + " {}", k.cssRules.length);
            q = k.cssRules[q]
        } else q = q[0].node;
        if (t.display != "grid") q.style.display = "grid";
        if (t["grid-template-columns"] == "") q.style["grid-template-columns"] = "repeat(4,1fr)"; else if (u) {
            var w = t["grid-template-columns"].split(" ");
            q.style["grid-template-columns"] = w.length < 2 ? "repeat(4,1fr)" : "repeat(" + w.length + ",1fr)"
        }
        if (pui.designer.d.rh(t, "grid-row-gap") == "" || u) pui.designer.d.Or(q.style, "grid-row-gap", "1px");
        if (pui.designer.d.rh(t, "grid-column-gap") == "" || u) pui.designer.d.Or(q.style, "grid-column-gap", "1px");
        if (u &&
            q.style.length > 0) {
            t = pui.designer.d.qh.getComputedStyle(g.vc);
            s.ta = true
        }
        s.lq = t;
        return s
    };
    this.qx = function (q, s) {
        if (q != null) {
            q = parseInt(q, 10);
            if (!(isNaN(q) || q < 1 || q > 99)) {
                g.Lm();
                var t = "grid-template-" + s, u = g.hs(t, null), w = pui.designer.d.rh(u.style, t), v = g.Gn(w);
                if (v.length < q) {
                    for (w = v[v.length - 1]; v.length < q;) v.push(w);
                    w = v.join(" ")
                } else if (v.length > q) if (q == 1) w = "auto"; else {
                    v.splice(q, v.length - q);
                    w = v.join(" ")
                }
                pui.designer.d.xk(u, t, w)
            }
        }
    };
    this.Yj = function (q, s, t) {
        g.Lm();
        q = "grid-template-" + q;
        var u = g.hs(q, null);
        if (u.style[q] != null) if (t) pui.designer.d.xk(u, q, s); else {
            t = g.Gn(u.style[q]).length;
            if (t < 1) t = 1;
            pui.designer.d.xk(u, q, "repeat(" + t + "," + s + ")")
        }
    };
    this.Ay = function (q) {
        q = "grid-template-" + q;
        var s = d(q, null, true, false);
        if (s.Rd != null) return g.Gn(s.Rd.style[q]).length;
        return 0
    };
    this.Ro = function (q, s) {
        g.im(q, "layout items", s, "Change Layout Items")
    };
    this.tE = function (q) {
        var s = R.designer.$d(g.b), t = s.properties["style rules"];
        if (pui.f(t)) t.designValue = q; else t = q;
        g.im(s, "style rules", t, "Set style rules")
    };
    this.im = function (q,
                        s, t, u) {
        var w = g.b.ff[s];
        q.designer.n.start(u);
        q.designer.n.add(q, w.name);
        uc(w, q.properties, q.dom, t, true, q, null);
        q.m[s] = true;
        q.ta = true;
        q.designer.X[q.designer.i.l] = true;
        q.designer.selection.clear();
        q.designer.selection.add(q);
        q.designer.k.refresh()
    }
};
pui.designer.d.cj.prototype = Object.create(pui.cj.prototype);
pui.designer.d.wC = function () {
    function b(l) {
        function n() {
            pui.designer.d.Ka.removeEventListener("mousemove", o);
            pui.designer.d.Ka.removeEventListener("mouseup", n);
            document.removeEventListener("mouseup", n);
            if (g) {
                pui.designer.d.ge();
                g = false
            }
            a.yl.om = true;
            a.yk.om = true
        }

        function o(q) {
            if (!k) {
                k = true;
                a.Cr.display(false);
                a.iq.display(false);
                a.yl.display(false);
                a.yk.display(false);
                a.yl.om = false;
                a.yk.om = false;
                a.Cr.Dk();
                a.iq.Dk();
                a.yl.Dk();
                a.yk.Dk()
            }
            var s = q.clientX - i, t = q.clientY - r;
            q = e + t + 10;
            var u = d + s + 10;
            t = e + h + t - 10;
            s = d + f + s - 10;
            a.Cr.Pj(0, e, 0, q);
            a.iq.Pj(d, 0, u, 0);
            a.yl.Pj(d + f, 0, s, 0);
            a.yk.Pj(0, e + h, 0, t);
            g = true;
            c.setAttribute("x", u);
            c.setAttribute("y", q);
            c.setAttribute("width", s - u);
            c.setAttribute("height", t - q)
        }

        var i = l.clientX, r = l.clientY, k = false;
        pui.designer.d.qa.Lm();
        pui.designer.d.Ka.addEventListener("mousemove", o);
        pui.designer.d.Ka.addEventListener("mouseup", n);
        document.addEventListener("mouseup", n);
        l.preventDefault()
    }

    this.iq = this.yl = this.yk = this.Cr = null;
    var a = this, c = null, d = 0, e = 0, f = 0, h = 0, g = false;
    this.Pf = function (l,
                        n, o, i) {
        var r = pui.designer.d.Ka.querySelector("svg");
        c = pui.designer.d.Ka.createElementNS(pui.Mo, "rect");
        c.setAttribute("class", "drag");
        c.setAttribute("x", l);
        c.setAttribute("y", n);
        c.setAttribute("width", o);
        c.setAttribute("height", i);
        r.appendChild(c);
        c.addEventListener("mousedown", b);
        d = l;
        e = n;
        h = i;
        f = o
    }
};
pui.designer.d.Ho = function (b) {
    function a(v) {
        r = v.clientX + pui.designer.d.Ka.body.scrollLeft;
        k = v.clientY + pui.designer.d.Ka.body.scrollTop;
        s = q = false;
        pui.designer.d.qa.Lm();
        pui.designer.d.Ka.addEventListener("mousemove", c);
        pui.designer.d.Ka.addEventListener("mouseup", d);
        document.addEventListener("mouseup", d);
        v.preventDefault()
    }

    function c(v) {
        if (!q) {
            h.TD();
            q = true;
            h.Dk()
        }
        h.Pj(r, k, v.clientX + pui.designer.d.Ka.body.scrollLeft, v.clientY + pui.designer.d.Ka.body.scrollTop);
        s = true
    }

    function d() {
        pui.designer.d.Ka.removeEventListener("mousemove",
            c);
        pui.designer.d.Ka.removeEventListener("mouseup", d);
        document.removeEventListener("mouseup", d);
        if (s) {
            pui.designer.d.ge();
            s = false
        }
        t = null
    }

    function e(v) {
        var E = pui.designer.d.qa.Qw();
        E = new pui.designer.d.xw(E.lq);
        if (v >= 0 && E != null) return h.Jw(E, v);
        return null
    }

    function f(v) {
        var E = 0;
        if (typeof w == "number") E = Math.floor(v / w); else if (typeof w == "object" && h.uf >= 0 && h.uf < w.length + 1) {
            E = 0;
            if (h.uf > 0) E = w[h.uf - 1];
            v = pui.designer.d.Kt(E + v, w);
            if (h.Lv) v += 1;
            E = v >= 0 ? v - h.uf : 0 - h.uf
        }
        return E
    }

    this.uf = -1;
    this.Af = 0;
    this.xm = this.Jg =
        this.label = null;
    this.Lv = false;
    this.om = true;
    this.Pj = null;
    this.Pd = b;
    this.Sc = this.Mc = this.em = null;
    var h = this, g = null, l = this.Pd != null && this.Pd.match(/grid-(column|row)-end/) != null,
        n = this.Pd != null && this.Pd.match(/grid-(column|row)-start/) != null,
        o = this.Pd != null && this.Pd.match(/grid-template-(rows|columns)/) != null,
        i = /minmax\(\s*(\S*)\s*,\s*(\S*)\s*\)/, r, k, q, s, t, u = 100, w = null;
    this.nB = function (v) {
        u = typeof v == "number" && v > 1 ? v : 100
    };
    this.Ll = function (v) {
        if (typeof v == "number") {
            if (v < 1) v = pui.designer.d.ow;
            w = v
        } else w =
            typeof v == "object" && v !== null && v.length > 0 ? v : null
    };
    this.Dk = function () {
        t = {Ms: false};
        if (h.Pd != null) {
            g = pui.designer.d.qa.hs(h.Pd, h.xm);
            h.em = pui.designer.d.rh(g.style, h.Pd);
            if (h.em != null) {
                t.Ms = true;
                t.oh = h.em;
                t.Dc = t.oh;
                if (h.Af > 0) {
                    for (t.Ui = pui.designer.d.qa.Gn(h.em); t.Ui.length < h.Af;) t.Ui.push("auto");
                    t.Dc = t.Ui[h.Af - 1];
                    t.la = pui.designer.d.Xm(t.Ui[h.Af - 1])
                } else t.la = pui.designer.d.Xm(h.em)
            }
        }
    };
    this.Iw = function () {
        var v;
        if (h.label != null) v = h.label; else if (h.Pd != null) {
            v = h.Pd;
            if (h.Af > 0) v += " " + h.Af
        } else v = "";
        return v
    };
    this.Lw = function (v) {
        var E, y, F, D;
        if (!(t == null || !t.Ms)) {
            if (h.Af > 0) {
                if (v != 0 && t.la[0] == "auto" && o && !isNaN(h.Jg)) {
                    t.la[0] = Math.round(h.Jg);
                    t.la[1] = "px"
                }
                if (t.la[1] == "px") {
                    t.Dc = Math.round(t.la[0] + v);
                    if (t.Dc < 0) t.Dc = 0;
                    t.Dc += "px"
                } else if (t.la[1] == "%") {
                    t.Dc = pui.round(t.la[0] + Math.floor(v * 100 / u), 2);
                    if (t.Dc < 0) t.Dc = 0;
                    t.Dc += "%"
                } else if (w != null) {
                    E = f(v);
                    if (typeof t.la[0] == "number" && t.la[1] == "fr") {
                        t.Dc = t.la[0] + E;
                        if (t.Dc < 0) t.Dc = 0;
                        t.Dc += "fr"
                    } else if (typeof t.la[0] == "string" && !isNaN(h.Jg) && t.la[0].match(i) != null) {
                        E = t.la[0].match(i);
                        y = pui.designer.d.Xm(E[1]);
                        F = pui.designer.d.Xm(E[2]);
                        D = Math.round(100 * h.Jg / u);
                        if (y[0] == h.Jg && y[1] == "px") {
                            v = Math.round(y[0] + v);
                            if (v < 0) v = 0;
                            t.Dc = "minmax(" + v + "px," + E[2] + ")"
                        } else if (y[1] == "%" && y[0] - 1 <= D && D <= y[0] + 1) {
                            v = pui.round(y[0] + Math.floor(v * 100 / u), 2);
                            if (v < 0) v = 0;
                            t.Dc = "minmax(" + v + "%," + E[2] + ")"
                        } else if (F[1] == "px") {
                            v = Math.round(F[0] + v);
                            if (v < 0) v = 0;
                            if (y[1] == "px" && v <= y[0]) {
                                E[1] = v + "px";
                                v = y[0]
                            }
                            t.Dc = "minmax(" + E[1] + "," + v + "px)"
                        } else if (F[1] == "%") {
                            v = pui.round(F[0] + Math.floor(v * 100 / u), 2);
                            if (v < 0) v = 0;
                            if (y[1] == "%" &&
                                v <= y[0]) {
                                E[1] = v + "%";
                                v = y[0]
                            }
                            t.Dc = "minmax(" + E[1] + "," + v + "%)"
                        } else if (F[0] == "auto" && h.Jg > 0 && v < 0) {
                            v = Math.round(h.Jg + v);
                            if (v < 0) v = 0;
                            if (y[1] == "px" && v <= y[0]) {
                                E[1] = v + "px";
                                v = y[0]
                            }
                            t.Dc = "minmax(" + E[1] + "," + v + "px)"
                        }
                    }
                }
                t.Ui[h.Af - 1] = t.Dc;
                t.oh = t.Ui.join(" ")
            } else {
                if (t.la[1] == "px") t.oh = t.la[0] + v + "px"; else if (w != null) {
                    E = f(v);
                    if (E != 0 && t.la[0] == "auto") if (l) {
                        t.la[0] = 1;
                        t.la[1] = "span"
                    } else if (n && h.uf >= 0) {
                        t.la[0] = h.uf + 1;
                        t.la[1] = ""
                    }
                    if (t.la[1] == "span") {
                        if (h.om) {
                            E = t.la[0] + E;
                            if (E < 1) E = 1;
                            t.oh = "span " + E
                        }
                    } else if (typeof t.la[0] == "number") t.oh =
                        t.la[0] + E
                }
                t.Dc = t.oh
            }
            pui.designer.d.xk(g, h.Pd, t.oh);
            h.Sc.textContent = h.Iw() + ": " + t.Dc
        }
    };
    this.TD = function () {
        for (var v = pui.designer.d.Ka.querySelector("svg"), E = 0; E < v.childNodes.length; E++) {
            var y = v.childNodes[E], F = y.getAttribute("class");
            y.style.display = y != h.Mc && y != h.Sc && F != null && F.indexOf("drag") >= 0 ? "none" : ""
        }
    };
    this.Kw = function (v) {
        var E = pui.designer.d.Ka.querySelector("svg");
        h.Mc = pui.designer.d.Ka.createElementNS(pui.Mo, "line");
        E.appendChild(h.Mc);
        h.Sc = pui.designer.d.Ka.createElementNS(pui.Mo, "text");
        h.Sc.appendChild(pui.designer.d.Ka.createTextNode(h.Iw()));
        E.appendChild(h.Sc);
        if (h.Pd != null) {
            h.Mc.setAttribute("class", "drag " + v);
            h.Sc.setAttribute("class", "drag");
            h.Mc.addEventListener("mousedown", a)
        }
    };
    this.display = function (v) {
        v = v ? "" : "none";
        if (h.Mc != null) h.Mc.style.display = v;
        if (h.Sc != null) h.Sc.style.display = v
    };
    this.sk = function (v) {
        function E(F) {
            t.Ui[h.Af - 1] = F;
            t.oh = t.Ui.join(" ");
            pui.designer.d.xk(g, h.Pd, t.oh);
            pui.designer.d.ge()
        }

        function y(F) {
            pui.designer.d.xk(g, h.Pd, F);
            pui.designer.d.ge()
        }

        h.Mc.addEventListener("contextmenu",
            function (F) {
                pui.designer.d.Qg != null && pui.designer.d.Qg.destroy();
                h.Dk();
                if (!(t == null || !t.Ms)) {
                    var D = [];
                    if (v == "rowcolsize") {
                        var B = e(h.Af - 1);
                        if (B == null) B = 100;
                        var I = Math.round(100 * B / u);
                        B = Math.round(B);
                        D.push({
                            text: "auto", group: v, handler: function () {
                                E("auto")
                            }, checked: t.la[0] == "auto"
                        });
                        D.push({
                            text: B + "px", group: v, handler: function () {
                                E(B + "px")
                            }, checked: t.la[1] == "px"
                        });
                        t.la[1] == "fr" ? D.push({text: t.la[0] + "fr", group: v, checked: true}) : D.push({
                            text: "1fr",
                            group: v,
                            handler: function () {
                                E("1fr")
                            },
                            checked: false
                        });
                        D.push({
                            text: I +
                                "%", group: v, handler: function () {
                                E(I + "%")
                            }, checked: t.la[1] == "%"
                        });
                        typeof t.la[0] == "string" && t.la[0].indexOf("minmax") >= 0 ? D.push({
                            text: t.la[0],
                            group: v,
                            checked: true
                        }) : D.push({
                            text: "minmax(" + B + "px,auto)", group: v, handler: function () {
                                E("minmax(" + B + "px,auto)")
                            }, checked: false
                        })
                    } else if (v == "start") {
                        D.push({
                            text: "auto", group: v, handler: function () {
                                y("")
                            }, checked: t.la[0] == "auto"
                        });
                        D.push({
                            text: "1 (" + pui.designer.d.vD + ")", group: v, handler: function () {
                                y(1)
                            }, checked: t.la[0] == 1
                        });
                        !isNaN(t.la[0]) && t.la[1] == "" && D.push({
                            text: t.la[0],
                            group: v, checked: true
                        })
                    } else if (v == "end") {
                        D.push({
                            text: "auto", group: v, handler: function () {
                                y("")
                            }, checked: t.la[0] == "auto"
                        });
                        D.push({
                            text: "-1 (" + pui.designer.d.uD + ")", group: v, handler: function () {
                                y(-1)
                            }, checked: t.la[0] == -1
                        });
                        D.push({
                            text: "-2 (" + pui.designer.d.tD + ")", group: v, handler: function () {
                                y(-2)
                            }, checked: t.la[0] == -2
                        });
                        t.la[1] == "span" ? D.push({
                            text: "span " + t.la[0],
                            group: v,
                            checked: true
                        }) : D.push({
                            text: "span 1", group: v, handler: function () {
                                y("span 1")
                            }, checked: false
                        });
                        !isNaN(t.la[0]) && t.la[1] == "" && t.la[0] !=
                        -1 && t.la[0] != -2 && D.push({text: t.la[0], group: v, checked: true})
                    }
                    pui.designer.d.Qg = new Ext.menu.Menu({autoDestroy: true, items: D});
                    D = pui.Xe(Tb("puirespprevcont"));
                    D[0] += F.clientX;
                    D[1] += F.clientY;
                    pui.designer.d.Qg.showAt(D);
                    F.preventDefault()
                }
            })
    }
};
pui.designer.d.Yl = function (b) {
    pui.designer.d.Ho.call(this, b);
    var a = this, c = 15;
    this.Pf = function (d, e, f) {
        a.Kw("horz");
        a.Mc.setAttribute("x1", d);
        a.Mc.setAttribute("y1", f);
        a.Mc.setAttribute("x2", e);
        a.Mc.setAttribute("y2", f);
        if (pui.designer.d.Ka.body.scrollHeight < f + c) c = -1 * c;
        a.Sc.setAttribute("x", d + 50);
        a.Sc.setAttribute("y", f + c);
        a.nB(pui.designer.d.qa.Hy().offsetHeight)
    };
    this.Pj = function (d, e, f, h) {
        if (h < 0) h = 0;
        a.Mc.setAttribute("y1", h);
        a.Mc.setAttribute("y2", h);
        d = h - e;
        a.Sc != null && a.Sc.setAttribute("y", h + c);
        a.Lw(d)
    };
    this.Jw = function (d, e) {
        return d.Ag.length > e ? d.Ag[e] : null
    }
};
pui.designer.d.Yl.prototype = Object.create(pui.designer.d.Ho.prototype);
pui.designer.d.dm = function (b) {
    pui.designer.d.Ho.call(this, b);
    var a = this, c = 5, d = 0;
    this.Pf = function (e, f, h) {
        a.Kw("vert");
        a.Mc.setAttribute("x1", e);
        a.Mc.setAttribute("y1", f);
        a.Mc.setAttribute("x2", e);
        a.Mc.setAttribute("y2", h);
        if (pui.designer.d.Ka.body.scrollWidth < e + c) {
            h = pui.designer.d.qh.getComputedStyle(a.Sc)["font-size"];
            h = isNaN(parseInt(h, 10)) ? 10 : parseInt(h, 10);
            c = -1 * c - h
        }
        d = f + 50;
        a.Sc.setAttribute("x", e + c);
        a.Sc.setAttribute("y", d);
        a.Sc.setAttribute("transform", "rotate(90 " + (e + c) + " " + (f + 50) + ")");
        a.nB(pui.designer.d.qa.Hy().offsetWidth)
    };
    this.Pj = function (e, f, h) {
        if (h < 0) h = 0;
        a.Mc.setAttribute("x1", h);
        a.Mc.setAttribute("x2", h);
        e = h - e;
        if (a.Sc != null) {
            a.Sc.setAttribute("x", h + c);
            a.Sc.setAttribute("transform", "rotate(90 " + (h + c) + " " + d + ")")
        }
        a.Lw(e)
    };
    this.Jw = function (e, f) {
        return e.colWidths.length > f ? e.colWidths[f] : null
    }
};
pui.designer.d.dm.prototype = Object.create(pui.designer.d.Ho.prototype);
pui.designer.ik = function () {
    function b(g, l) {
        var n, o;
        n = g;
        if (l.url == null && l.$e == null) n = n.replace(/''/g, "'"); else {
            o = n;
            n = "pui.display = " + n
        }
        pui.display = null;
        o = {Fj: false, data: o};
        var i = {Fj: true, data: n};
        try {
            eval(n)
        } catch (r) {
            return o
        }
        if (!pui.display || typeof pui.display != "object") return o;
        if (pui.display !== null && typeof pui.display === "object" && pui.display.success == false) {
            o.success = false;
            o.msg = pui.display.msg;
            return o
        }
        if (typeof pui.display === "object" && pui.display.success === true && typeof pui.display.appJob === "object" &&
            pui.display.layers != null) return i;
        if (typeof pui.display == "object" && (!pui.display.formats || typeof pui.display.formats != "object" || typeof pui.display.formats.length !== "number")) return o;
        return i
    }

    function a(g, l) {
        function n(q) {
            q = b(typeof q == "string" ? q : q.jc(), g);
            screenMask.hide();
            l(q)
        }

        var o = g.library, i = g.file, r = g.member, k = g.url;
        if (k != null || g.$e != null) {
            k = cc("PUI0001109.pgm");
            o = {};
            o.mode = "read";
            o.path = g.url;
            if (pui.isCloud) o.workspace_id = pui.cloud.ws.id
        } else {
            k = cc("PUI0001102.pgm");
            o = {
                library: o.toUpperCase(),
                file: i.toUpperCase(), member: r.toUpperCase()
            }
        }
        screenMask.msg = pui.getLanguageText("runtimeMsg", "loading");
        screenMask.show();
        g.$e != null ? setTimeout(function () {
            n(g.$e)
        }, 1) : (new pui.Ajax({
            url: k,
            method: "post",
            params: o,
            suppressAlert: true,
            onsuccess: n,
            onfail: function () {
                screenMask.hide();
                S.alert("File not found.");
                typeof g.sd == "function" && g.sd()
            }
        })).send()
    }

    function c(g) {
        var l = g.library, n = g.file, o = g.member;
        if (typeof pui.display == "object" && pui.display.success == false && pui.display.msg != null) {
            screenMask.hide();
            S.alert(pui.display.msg);
            typeof g.sd == "function" && g.sd()
        } else if (typeof pui.display != "object") {
            screenMask.hide();
            S.alert("Unable to open. Response is invalid.");
            typeof g.sd == "function" && g.sd()
        } else {
            if (typeof pui.display === "object" && pui.display.success === true && typeof pui.display.appJob === "object" && pui.display.layers != null) {
                for (var i = [], r = 0; r < pui.display.layers.length; r++) for (var k = pui.display.layers[r].formats, q = 0; q < k.length; q++) i.push(k[q].metaData);
                pui.display = {text: "", keywords: [], formats: i}
            }
            var s = pui.display.text;
            if (s ==
                null) s = "";
            var t = pui.display.comments;
            if (t == null) t = [];
            var u = pui.display.formats;
            if (u == null || typeof u != "object" || typeof u.length != "number") {
                screenMask.hide();
                S.alert("Unable to open. Response does not contain a list of record formats.");
                typeof g.sd == "function" && g.sd()
            } else if (u.length < 1) {
                screenMask.hide();
                S.alert("Unable to open. No record formats returned.");
                typeof g.sd == "function" && g.sd()
            } else if (u[0] == null || u[0].screen == null || typeof u[0].screen != "object" || u[0].items == null) {
                screenMask.hide();
                S.alert("Unable to open. Invalid response.");
                typeof g.sd == "function" && g.sd()
            } else if (u[0].content != null) {
                screenMask.hide();
                S.alert("This is not a Rich Display File.");
                typeof g.sd == "function" && g.sd()
            } else {
                Ext.getCmp("RecFormatsTabPanel").setActiveTab(0);
                MOBILE_LICENSE && rd.Uf(pui.display["canvas width"], pui.display["canvas height"]);
                pui.designer.Ea = pui.display["long name aliases"] == true;
                if (pui.nodedesigner) pui.designer.Ea = true;
                pui.ka = pui.display.keywords;
                S.ak();
                if (pui.ka == null) pui.ka = [];
                i = pui.display.dds;
                if (i == null) i = [];
                var w = S.si();
                if (w) pui.designer.C.split(i);
                else pui.designer.C.formats = {};
                h.JA(u, function () {
                    h.nn(u);
                    w && setTimeout(function () {
                        rd.gm()
                    }, 10);
                    if (!g.zr) {
                        pui.designer.currentDisplay.library = l;
                        pui.designer.currentDisplay.file = n;
                        pui.designer.currentDisplay.member = o;
                        pui.designer.currentDisplay.text = s;
                        pui.designer.currentDisplay.comments = t;
                        pui.designer.currentDisplay.ifsFile = g.ifsFile;
                        pui.designer.currentDisplay.Eb = g.Eb;
                        pui.designer.currentDisplay.wf = null;
                        pui.designer.currentDisplay.cf = null;
                        pui.designer.currentDisplay.lj = false
                    }
                    g.onsuccess != null && g.onsuccess();
                    g.zr || rd.Ce();
                    pui.ide.Qb();
                    g.zr || pui.designer.Bl();
                    screenMask.hide();
                    pui.ide.refreshRibbon()
                })
            }
        }
    }

    function d(g, l) {
        var n = document.createElement("span");
        n.innerHTML = g;
        n.style.padding = "1px";
        n.style.margin = "2px";
        n.style.cursor = "pointer";
        n.style.border = "1px solid #cccccc";
        n.style.display = "inline-block";
        n.onmouseover = function () {
            n.style.backgroundColor = "#ccccff";
            n.style.border = "1px dotted #666666"
        };
        n.onmouseout = function () {
            n.style.backgroundColor = "";
            n.style.border = "1px solid #cccccc"
        };
        if (l == null || l == false) h.h.appendChild(document.createTextNode(" "));
        h.h.appendChild(n);
        return n
    }

    function e() {
        function g(D, B, I) {
            for (var z = h.designer.i.l, H = false, J = 0; J < pui.J.Fi.length; J++) if (pui.J.Fi[J] == B.toUpperCase() && z == J) {
                H = true;
                break
            }
            for (J = 0; J < D.length; J++) if (D[J].screen.toUpperCase() == B.toUpperCase()) {
                if (!H) return {Zg: true, oJ: true, ov: D[J].screen}
            } else {
                var K = D[J].qi, L = I.length;
                if (K.length < L) L = K.length;
                for (var N = true, O = 0; O < L; O++) {
                    var V = I[O], X = K[O];
                    if (V.id != X.id || V.value != X.value) {
                        N = false;
                        break
                    }
                }
                if (N) for (O = 0; O < pui.J.Fi.length; O++) if (pui.J.Fi[O] == D[J].screen.toUpperCase() &&
                    z == O) {
                    N = false;
                    break
                }
                if (N) return {Zg: true, fH: true, ov: D[J].screen}
            }
            return {Zg: false}
        }

        if (h.designer == null) pui.alert("You are not in Design Mode."); else if (h.designer.X[h.designer.i.l]) {
            var l = h.designer.Ga[h.designer.i.l]["screen name"];
            if (l == null || l == "") {
                h.designer.selection.clear();
                h.designer.k.refresh();
                pui.alert("You must specify a screen name.");
                h.designer.k.TF();
                h.designer.k.he("screen name", pc(h.designer.i));
                h.designer.Xd = false
            } else {
                var n = !h.designer.i.oc, o = l.substr(0, 1);
                o = o.toUpperCase();
                if (o < "A" ||
                    o > "Z") {
                    pui.alert("The screen name must start with an alpha character.");
                    h.designer.Xd = false
                } else {
                    for (o = 0; o < 10; o++) {
                        var i = "/:*?<>|\\'\"".substr(o, 1);
                        if (l.indexOf(i) != -1) {
                            pui.alert("The screen name cannot contain the following character: " + i);
                            h.designer.Xd = false;
                            return
                        }
                    }
                    i = false;
                    for (o = 0; o < h.designer.items.length; o++) {
                        var r = h.designer.items[o];
                        if (r.properties["screen identifier"] == "true") if (n && r.l == null || !n && r.l == h.designer.i.l) {
                            i = true;
                            break
                        }
                    }
                    if (i) {
                        i = h.designer.rG();
                        o = g(screensList.pv, l, i.qi);
                        o.Zg || (o =
                            g(screensList.fw, l, i.qi));
                        if (o.Zg) {
                            o.oJ && pui.alert('A screen named "' + o.ov + '" already exists.');
                            o.fH && pui.alert('The identifiers you selected are in conflict with identifers from the screen "' + o.ov + '".');
                            h.designer.Xd = false
                        } else {
                            var k = true, q = false, s = null;
                            r = [];
                            var t = {}, u = false;
                            for (o = 0; o < h.designer.items.length; o++) {
                                if (h.designer.items[o].dom.id == null || h.designer.items[o].dom.id == "") {
                                    k = false;
                                    break
                                }
                                for (var w = 0; w < r.length; w++) if (r[w] == h.designer.items[o].dom.id) {
                                    q = true;
                                    s = r[w];
                                    u = true;
                                    break
                                }
                                if (u == true) break;
                                r.push(h.designer.items[o].dom.id);
                                if (typeof h.designer.items[o].properties["label for"] == "string") t[h.designer.items[o].properties.id] = h.designer.items[o].properties["label for"]
                            }
                            if (k == false) {
                                pui.alert("One or more fields on this screen do not have an id. Please specify an id for each field.");
                                h.designer.Xd = false
                            } else if (q == true) {
                                pui.alert('There is a duplicate field id used on this screen.  The id is "' + s + '".\n\nPlease specify a unique id for each field.');
                                h.designer.Xd = false
                            } else {
                                for (var v in t) {
                                    o =
                                        r.indexOf(t[v]);
                                    if (o == -1) {
                                        l = h.designer.items;
                                        for (n = 0; n < l.length; n++) if (l[n].properties.id == v) {
                                            h.designer.selection.clear();
                                            h.designer.selection.add(l[n]);
                                            h.designer.k.refresh();
                                            h.designer.k.he("label for", oc());
                                            break
                                        }
                                        pui.alert("Invalid 'label for' property in the " + v + " element");
                                        h.designer.Xd = false;
                                        return
                                    }
                                }
                                h.designer.mask("Saving. Please wait...");
                                v = cc("PUI0002101.PGM");
                                r = pui.yM;
                                var E, y;
                                if (typeof screensList.pv != "undefined" && typeof screensList.fw != "undefined") {
                                    E = screensList.pv;
                                    y = screensList.fw
                                } else {
                                    E =
                                        screensList;
                                    y = []
                                }
                                var F;
                                if (h.designer.i.oc == false) {
                                    F = E.length;
                                    for (o = 0; o < E.length; o++) if (E[o].screen == h.designer.i.name) {
                                        F = o;
                                        break
                                    }
                                    if (F == E.length) {
                                        t = pui.J.Fi[0];
                                        t = t.toUpperCase();
                                        if (t != null && t != "" && t != "[UNNAMED SCREEN]") for (o = 0; o < E.length; o++) if (E[o].screen.toUpperCase() == t) {
                                            E.splice(o, 1);
                                            F -= 1;
                                            break
                                        }
                                    }
                                } else if (h.designer.i.oc == true) {
                                    F = y.length;
                                    for (o = 0; o < y.length; o++) if (y[o].screen == h.designer.i.name) {
                                        F = o;
                                        break
                                    }
                                }
                                if (n) E[F] = i; else y[F] = i;
                                F = "{";
                                F += '\n  "screens": [';
                                F += f(E, "screen");
                                F += "\n  ],";
                                F += '\n  "windows": [';
                                F += f(y, "window");
                                F += "\n  ]";
                                F += "\n}";
                                o = h.designer.bh(h.designer.i);
                                n = {name: "path", value: "/profoundui/userdata/genie skins/" + r};
                                l = {name: "screenFile", value: o, fileName: l + ".scn"};
                                F = {name: "listFile", value: F, fileName: "screens.lst"};
                                o = new pui.$l;
                                o.fm([n, l, F]);
                                o.send(v, function (D) {
                                    var B;
                                    if (D.Vc() != 200) B = D.Uk();
                                    if (!B) {
                                        D = eval("(" + D.jc() + ")");
                                        D.success || (B = D.errorId + "\n\n" + D.errorText + "\n\n" + D.errorText2)
                                    }
                                    if (B) {
                                        h.designer.unmask();
                                        pui.alert(B);
                                        h.designer.Xd = false
                                    } else {
                                        pui.J.pJ = true;
                                        h.designer.X[h.designer.i.l] =
                                            false;
                                        h.designer.unmask();
                                        if (h.designer.Xd) h.If.onclick(); else {
                                            pui.alert("Screen design saved to server.");
                                            screensList = {};
                                            screensList.pv = E;
                                            screensList.fw = y;
                                            pui.J.Fi = [];
                                            for (B = 0; B < Va.length; B++) pui.J.Fi.push(Va[B].name.toUpperCase())
                                        }
                                    }
                                })
                            }
                        }
                    } else {
                        pui.alert("You must mark at least one field as a screen identifier.");
                        h.designer.Xd = false
                    }
                }
            }
        } else {
            pui.alert("You have not made any changes.");
            h.designer.Xd = false
        }
    }

    function f(g) {
        for (var l = "", n, o = 0; o < g.length; o++) {
            l += '\n    {\n      "screen": "' + g[o].screen + '",';
            if (typeof g[o].modified != "undefined") l += '\n      "modified": "' + g[o].modified + '",';
            l += '\n      "identifiers": [';
            for (var i = g[o].qi, r = 0; r < i.length; r++) {
                var k = i[r].value;
                if (k == null) k = "";
                k = k.replace(/\\/g, "\\\\");
                k = k.replace(/"/g, '\\"');
                k = k.replace(/\r/g, "\\r");
                k = k.replace(/\n/g, "\\n");
                k = k.replace(/\t/g, "\\t");
                n = i[r].id;
                if (n.indexOf("_W") != -1) {
                    var q = n.indexOf("_W");
                    n = n.substr(0, q + 2)
                }
                l += '\n        { "id": "' + n + '", "value": "' + k + '" }';
                if (r != i.length - 1) l += ","
            }
            l += "\n      ]";
            l += "\n    }";
            if (o != g.length -
                1) l += ","
        }
        return l
    }

    this.h = document.createElement("div");
    this.rM = this.qM = this.Ed = this.designer = this.bM = this.IA = this.nv = this.Vi = this.If = null;
    this.Uc = [];
    this.Of = false;
    var h = this;
    this.Zy = function () {
        if (Q == "genie") {
            h.designer.mask("Loading Screens. Please wait...");
            pui.PL(function () {
                h.designer.unmask();
                e()
            })
        }
    };
    (function () {
        gc(window, "storage", function (n) {
            if (n.key == "pui-designer-clipboard" && n.newValue != "") {
                h.Uc = JSON.parse(n.newValue);
                Q == "dspf" && pui.ide.refreshRibbon()
            }
            if (Q == "dspf" && n.key == "pui-formats-clipboard" &&
                n.newValue != "") {
                rd.CJ(JSON.parse(n.newValue));
                Ext.getCmp("_Paste_Record_Format").setDisabled(false)
            }
        });
        if (Q == "dspf" && pui.nc()) {
            var g = localStorage.getItem("pui-designer-clipboard"), l = localStorage.getItem("pui-formats-clipboard");
            if (g) h.Uc = JSON.parse(g);
            l && Ext.getCmp("_Paste_Record_Format").setDisabled(false)
        }
        h.h.style.position = "absolute";
        h.h.style.top = Kd.get("toolbar_top", "20px");
        h.h.style.left = Kd.get("toolbar_left", "150px");
        h.h.style.width = "325px";
        if (Q == "genie") h.h.style.width = "375px";
        h.h.style.height =
            "50px";
        h.h.style.backgroundColor = "white";
        h.h.style.border = "2px solid #336699";
        h.h.style.fontFamily = "Arial";
        h.h.style.fontSize = "12px";
        h.h.style.padding = "0px";
        h.h.style.zIndex = S.aL;
        h.Ed = document.createElement("div");
        h.Ed.style.cursor = "move";
        h.Ed.style.backgroundColor = "#6699cc";
        h.Ed.style.padding = "3px";
        h.Ed.style.fontSize = "14px";
        h.Ed.style.fontWeight = "bold";
        h.Ed.style.color = "#ffffff";
        h.Ed.style.overflow = "hidden";
        h.Ed.innerHTML = "Design Toolbar";
        pui.rd({
            wc: h.Ed, move: h.h, opacity: 85, Hj: -450, Bo: function () {
                Kd.set("toolbar_top",
                    h.h.style.top);
                Kd.set("toolbar_left", h.h.style.left);
                Kd.save()
            }, lt: function () {
                h.designer && h.designer.cz()
            }
        });
        h.h.appendChild(h.Ed);
        g = document.createElement("div");
        g.style.height = "2px";
        g.style.fontSize = "0px";
        h.h.appendChild(g);
        h.If = d("Design Mode is Off", true);
        h.If.onclick = function () {
            if (h.designer == null) {
                if (Q == "genie") {
                    if (typeof ace == "undefined" || ace == null) pui.loadJS("/ace/ace.js");
                    pui.J.Fi = [];
                    for (var n = 0; n < Va.length; n++) pui.J.Fi.push(Va[n].name.toUpperCase())
                }
                var o;
                if (Q == "genie") o = pui.cG;
                h.designer =
                    new pui.designer.jk(o);
                Q == "genie" && h.designer.k.show();
                if (Q == "genie") pui.Xi(pui.J.ue = true);
                if (Q == "dspf") {
                    n = document.createElement("div");
                    document.getElementById(Ha).appendChild(n);
                    Ca = Ha + "0";
                    n.id = Ca;
                    h.designer.b = n
                } else {
                    pui.J.config.qL && doAutoSizeFont();
                    h.designer.b = document.getElementById(Ca)
                }
                h.designer.init();
                Xa = {};
                Q == "genie" && loadScreens(true, h.designer);
                n = 1;
                for (o = document.getElementById("window" + n); o != null;) {
                    o.style.display = "none";
                    o.onmousedown = null;
                    o.style.cursor = "auto";
                    n++;
                    o = document.getElementById("window" +
                        n)
                }
                h.designer.k.refresh();
                h.If.innerHTML = "Design Mode is On";
                h.If.style.color = "#009900";
                h.If.style.fontWeight = "bold";
                Q == "genie" && pui.J.config.HE == true && h.designer.ay()
            } else {
                if (h.designer.X[h.designer.i.l]) if (!confirm("Exit design view without saving changes?")) return;
                document.body.oncontextmenu = null;
                document.body.onselectstart = null;
                if (typeof document.body.style.MozUserSelect != "undefined") document.body.style.MozUserSelect = "none";
                h.designer.k.hide();
                h.designer.Do.hide();
                pui.cG = h.designer.k;
                h.designer.destroy();
                h.designer = null;
                h.Ed.innerHTML = "Design Toolbar";
                h.If.innerHTML = "Design Mode is Off";
                h.If.style.color = "";
                h.If.style.fontWeight = "";
                n = document.getElementById(Ca);
                n.className = n.className.replace(" design", "");
                if (pui.J.pJ) {
                    pui.Yf();
                    n = DOCUMENT_URI;
                    if (pui.psid != null && pui.psid != "") n += "/" + pui.psid;
                    jc({
                        url: n,
                        method: "post",
                        sendAsBinary: false,
                        params: {refresh: "1"},
                        saveResponse: true,
                        handler: function (i) {
                            i.b = pui.yI.b;
                            pui.PA(i)
                        }
                    })
                } else pui.PA(pui.yI)
            }
        };
        h.Vi = d("Snap to Grid is Off");
        h.Vi.onclick = function () {
            if (h.designer ==
                null) pui.alert("You are not in Design Mode."); else if (h.designer.selection.fc) {
                h.designer.selection.fc = false;
                h.Vi.innerHTML = "Snap to Grid is Off";
                h.Vi.style.color = "";
                h.Vi.style.fontWeight = ""
            } else {
                h.designer.selection.fc = true;
                h.Vi.innerHTML = "Snap to Grid is On";
                h.Vi.style.color = "#009900";
                h.Vi.style.fontWeight = "bold"
            }
        };
        if (Q == "genie") {
            h.IA = d("Refresh");
            h.IA.onclick = function () {
                pui.refresh()
            }
        }
        h.nv = d("Save Screen");
        h.nv.onclick = h.Zy;
        document.body.appendChild(h.h)
    })();
    this.cv = function (g) {
        if (g == null) g = h.designer.i.l;
        var l = Va[g].name;
        h.Ed.innerHTML = "";
        h.Ed.appendChild(document.createTextNode("Design Toolbar - "));
        if (Va.length > 1 && R.designer != null) {
            var n = document.createElement("select");
            for (l = 0; l < Va.length; l++) {
                n.options[l] = new Option(Va[l].name, Va[l].l);
                if (Va[l].l == g) n.options[l].selected = true
            }
            n.style.fontFamily = "arial";
            n.style.fontSize = "11px";
            n.style.borderStyle = "none";
            n.onmousedown = function (o) {
                if (!o) o = window.event;
                if (window.event) window.event.cancelBubble = true;
                if (o.preventDefault) o.cancelBubble = true
            };
            n.onchange =
                function () {
                    h.designer.qB(n.options[n.selectedIndex].value)
                };
            h.Ed.appendChild(n);
            h.h.style.height = "51px";
            if (pui.is_old_ie) h.h.style.height = "54px"
        } else {
            h.Ed.appendChild(document.createTextNode(l));
            h.h.style.height = "50px"
        }
    };
    this.hide = function () {
        h.h.style.visibility = "hidden";
        h.h.style.display = "none"
    };
    this.show = function () {
        h.h.style.visibility = "";
        h.h.style.display = ""
    };
    this.addElement = function (g) {
        var l = "Add Element", n, o = null;
        if (typeof g == "object") {
            o = g;
            n = pui.widgets[o.widget];
            if (n == null) {
                pui.alert("Widget name is invalid.");
                return
            }
            l = "Add " + (o.text || o.name)
        } else n = pui.widgets.KG(g);
        var i = n.name;
        h.designer.n.Nc(l);
        var r = n.newId;
        if (o != null && o.newId != null) r = o.newId;
        l = n.newValue;
        if (o != null && o.newValue != null) l = o.newValue;
        var k = document.createElement("div");
        k.style.position = "absolute";
        k.innerHTML = l;
        for (var q = 1; document.getElementById(r + q) != null;) q++;
        k.id = r + q;
        r = h.designer.i.oc == true && h.designer.i.Zi != null ? h.designer.i.Zi : h.designer.b;
        if (h.designer.se != null) r = h.designer.se;
        if (h.designer.nd != null) r = h.designer.nd;
        r.appendChild(k);
        if (o != null && o.x != null && o.y != null) {
            q = o.x;
            r = o.y;
            if (h.designer.se != null) {
                var s = h.designer.se.parentNode;
                r -= parseInt(h.designer.se.style.top);
                r -= parseInt(s.style.top);
                q -= parseInt(h.designer.se.style.left);
                q -= parseInt(s.style.left);
                if (s.parentNode.getAttribute("container") == "true") {
                    s = pui.layout.ec(s.parentNode);
                    q -= s.x;
                    r -= s.y
                }
            }
            if (h.designer.nd != null) {
                r -= h.designer.Xx;
                q -= h.designer.Wx
            }
            if (h.designer.i.oc == true && h.designer.i.Zi != null) {
                q -= parseInt(h.designer.i.Zi.style.left);
                r -= parseInt(h.designer.i.Zi.style.top)
            }
            k.style.left =
                q + "px";
            k.style.top = r + "px"
        } else {
            q = r = 0;
            s = false;
            for (r = 0; r <= 3 * pui.Ob; r += pui.Ob) {
                for (q = 0; q <= 35 * pui.ac; q += pui.ac * 3) {
                    k.style.top = r + "px";
                    k.style.left = q + "px";
                    if (s = !h.designer.Cj(k)) break
                }
                if (s) break
            }
            if (!s) {
                q = r = 0;
                k.style.top = r + "px";
                k.style.left = q + "px"
            }
        }
        var t;
        if (i == "styled button" || i == "panel" || i == "css panel" || i == "css button" || i == "layout" || i == "icon") t = h.designer.addItem(k, false, false); else {
            t = h.designer.addItem(k);
            if (Q == "genie") {
                if (k.style.borderLeftStyle == "dotted") k.style.borderLeftColor = "#15428b";
                if (k.style.borderRightStyle ==
                    "dotted") k.style.borderRightColor = "#15428b";
                if (k.style.borderTopStyle == "dotted") k.style.borderTopColor = "#15428b";
                if (k.style.borderBottomStyle == "dotted") k.style.borderBottomColor = "#15428b"
            }
        }
        if (h.designer.i.oc) {
            t.l = h.designer.i.l;
            t.properties["parent window"] = h.designer.i.name;
            t.m["parent window"] = true;
            h.designer.i.fields.push(t)
        }
        t.properties.newitem = "true";
        t.m.newitem = true;
        t.properties.value = l;
        t.m.value = true;
        t.properties.left = q + "px";
        t.m.left = true;
        t.properties.top = r + "px";
        t.m.top = true;
        if (g == "List Box") {
            t.properties.width =
                "150px";
            t.m.width = true;
            t.properties["select box height"] = "5";
            t.m["select box height"] = true
        }
        t.properties["field type"] = i;
        t.m["field type"] = true;
        if (i == "styled button" || i == "panel" || i == "css panel" || i == "css button" || i == "layout") t.dom.style.borderStyle = "none";
        if (o != null && o.defaults != null) {
            if (!o.ly) for (var u in n.defaults) t.properties[u] = n.defaults[u];
            for (u in o.defaults) t.properties[u] = o.defaults[u]
        }
        var w = rc();
        h.designer.k.Cd && !h.designer.k.Cd.isHidden() ? uc(w["field type"], t.properties, t.dom, i, true, t, null) :
            uc(w["field type"], t.properties, t.dom, i, true, t, h.designer.selection.e[0]);
        var v = [];
        (function (E) {
            for (var y in E) {
                var F = E[y];
                if (F != null) {
                    if (pui.f(F)) {
                        var D = t.bb();
                        D = D != null ? D.D : h.designer.D;
                        t.properties[y] = {};
                        for (var B in F) t.properties[y][B] = F[B];
                        var I = F.fieldName;
                        if (o.So) {
                            I = D.Tm();
                            t.properties[y].fieldName = I;
                            if (y == "value" || y == "html") t.properties[y].designValue = "[" + I + "]"
                        }
                        I = {fieldName: I, dataType: F.dataType, dataLength: F.dataLength, c: t, property: y};
                        if (F.refField) I.refField = F.refField;
                        if (F.longName) {
                            I.fieldName =
                                F.fieldName = t.properties[y].fieldName = D.Tk(F.longName);
                            I.longName = F.longName;
                            if (Q == "dspf") pui.designer.Ea = true
                        }
                        I.fg = true;
                        if (pui.ic(v, I.fieldName) == -1) if (F = D.xt(I.fieldName)) if (F.dataType != I.dataType || F.dataLength != I.dataLength || F.decPos != I.decPos) v.push(F.fieldName);
                        D.Tc(I, h.designer)
                    } else if (pui.Ia(F)) {
                        t.properties[y] = {};
                        for (B in F) t.properties[y][B] = F[B]
                    } else t.properties[y] = F;
                    t.m[y] = true;
                    if (y != "field type") (F = k.ff == null ? pui.Ye(w, y) : pui.Ye(k.ff, y)) && uc(F, t.properties, t.dom, t.properties[y], true,
                        t, h.designer.selection.e[0])
                }
            }
        })(t.properties);
        t.properties["field type"] == "layout" && typeof t.dom.sizeMe == "function" && t.dom.sizeMe();
        t.ta = true;
        h.designer.X[h.designer.i.l] = true;
        h.designer.selection.clear();
        h.designer.selection.add(t);
        if (o != null) {
            g = t.dom.offsetWidth;
            i = t.dom.offsetHeight;
            h.designer.selection.Si();
            h.designer.selection.moveBy(t, -parseInt(g / 2), -parseInt(i / 2));
            h.designer.Ff()
        }
        if (n.name == "grid") {
            h.designer.kb.push(t);
            if (Q == "dspf") {
                rd.refresh();
                pui.ide.He()
            }
        }
        n.name == "layout" && h.designer.Nf.push(t);
        if (o != null && o.text == "Dynamic Output Field") {
            n = t.bb();
            n = n != null ? n.D : h.designer.D;
            g = n.Tm();
            t.properties.value = {
                fieldName: g,
                dataType: "char",
                dataLength: "10",
                trimLeading: "false",
                trimTrailing: "true",
                formatting: "Text",
                textTransform: "none",
                designValue: "[" + g + "]"
            };
            if (pui.viewdesigner || pui.nodedesigner) {
                t.properties.value.dataType = "varchar";
                t.properties.value.dataLength = "25"
            }
            n.Tc({
                fieldName: g,
                dataType: t.properties.value.dataType,
                dataLength: t.properties.value.dataLength,
                c: t,
                property: "value"
            });
            t.dom.innerHTML =
                "[" + g + "]";
            t.Ib()
        }
        h.designer.Aa.style.display = "none";
        h.designer.se = null;
        h.designer.nd = null;
        h.designer.k.refresh();
        if (v.length > 0) {
            n = "The following field definitions were replaced:<br />";
            n += v.join("<br />");
            Ext.MessageBox.show({
                title: "Field Definition Replaced",
                msg: n,
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.OK
            })
        }
    };
    this.Zq = function (g) {
        if (Q == "dspf") {
            var l = {};
            for (var n in g) l[n] = g[n];
            n = S.si();
            if (pui.designer.currentDisplay.ifsFile != null) {
                g = pui.designer.currentDisplay.ifsFile;
                var o = g.split(pui.dirSeparator);
                o = o[o.length - 1];
                var i = pui.designer.currentDisplay.text;
                l.ifsFile = g;
                l.$e = rd.Qm(i, n);
                l.fileName = o;
                l.text = i
            } else if (pui.designer.currentDisplay.Eb != null) {
                pui.Jf("text/plain", pui.designer.currentDisplay.Eb, rd.Qm(pui.designer.currentDisplay.text, n));
                g.onsuccess != null && g.onsuccess();
                return
            } else {
                l.library = pui.designer.currentDisplay.library;
                l.file = pui.designer.currentDisplay.file;
                l.member = pui.designer.currentDisplay.member;
                l.text = pui.designer.currentDisplay.text;
                l.comments = pui.designer.currentDisplay.comments
            }
            l.replace =
                true;
            var r = Ext.getCmp("centerPanel").getActiveTab();
            r.lastModified !== undefined ? pui.ide.pd(r.Vb, function (k) {
                var q;
                if (k.success) {
                    k = k.data;
                    if (k.mtime) q = k.mtime; else if (k.changed) q = k.changed;
                    q > r.lastModified ? pui.ide.FB(r, q, l) : h.save(l, r)
                } else h.save(l, r)
            }) : h.save(l, r)
        }
    };
    this.save = function (g, l) {
        if (Q == "dspf") {
            var n = document.title;
            screenMask.msg = "Saving...";
            document.title = "Saving...";
            if (g.compile == "Y") {
                screenMask.msg = "Compiling...";
                document.title = "Compiling..."
            }
            screenMask.show();
            if (g.ifsFile != null) {
                var o =
                    [];
                o.push({name: "path", value: g.ifsFile});
                g.replace == true && o.push({name: "replace", value: "Y"});
                pui.isCloud && o.push({name: "workspace_id", value: pui.cloud.ws.id});
                o.push({name: "json", value: g.$e, fileName: g.fileName});
                var i = new pui.$l;
                i.fm(o);
                o = cc("PUI0001109.pgm");
                i.send(o, function (q) {
                    var s, t = {};
                    if (q.Vc() != 200) s = q.Uk();
                    if (!s) {
                        t = eval("(" + q.jc() + ")");
                        t.success || (s = t.errorText)
                    }
                    if (s) {
                        screenMask.hide();
                        document.title = n;
                        if (t.errorId == "FILE EXISTS") {
                            t.msg = s;
                            pui.ide.K.Yq(t, g)
                        } else Ext.MessageBox.show({
                            title: "Error",
                            msg: s, buttons: Ext.MessageBox.OK, icon: Ext.MessageBox.ERROR
                        })
                    } else {
                        screenMask.hide();
                        document.title = n;
                        if (g.ifsFile) {
                            q = g.ifsFile.split(pui.dirSeparator);
                            q.pop();
                            q = q.join(pui.dirSeparator);
                            q = Ext.getCmp("fileTree").getNodeById(q);
                            typeof q === "object" && typeof q.reload === "function" && q.reload()
                        }
                        l && l.Vb && pui.ide.pd(l.Vb, function (u) {
                            if (u.success) {
                                u = u.data;
                                if (u.mtime) l.lastModified = u.mtime; else if (u.changed) l.lastModified = u.changed
                            }
                        });
                        g.onsuccess != null && g.onsuccess()
                    }
                })
            } else {
                var r = rd.wj(g);
                if (typeof r == "object" &&
                    r.msg != null) {
                    document.title = n;
                    screenMask.hide();
                    if (r.In != null) {
                        var k = new Ext.Window({
                            title: pui.getLanguageText("runtimeText", "warning"),
                            width: 500,
                            minWidth: 380,
                            minHeight: 175,
                            modal: true,
                            bodyStyle: "overflow-y:auto; white-space:pre-wrap; padding:5px;",
                            buttons: [{
                                text: "Ignore", handler: function () {
                                    if (pui.designer.Ym == null) pui.designer.Ym = {};
                                    pui.designer.Ym[r.In] = true;
                                    h.save(g);
                                    k.close()
                                }
                            }, {
                                text: "Ignore All", handler: function () {
                                    pui.designer.hz = true;
                                    h.save(g);
                                    k.close()
                                }
                            }, {
                                text: pui.getLanguageText("runtimeText",
                                    "cancel"), handler: function () {
                                    k.close()
                                }
                            }],
                            html: r.msg + (r.formatName != null ? "\n\nFormat Name: " + r.formatName : "") + "\n\nClick 'Ignore' or 'Ignore All' to save anyway."
                        });
                        k.show()
                    } else pui.alert(r.msg + (r.formatName != null ? "\nFormat Name: " + r.formatName : ""))
                } else {
                    if (g.NH == true) {
                        r += "&cnvid=" + g.cF;
                        r += pui.cnv.Ra.Gy(pui.designer.Rs)
                    }
                    if (g.QH == true) {
                        r += "&mergeid=" + g.SH;
                        r += pui.cnv.Ra.Gy(pui.designer.Rs)
                    }
                    if (g.replace == true) r += "&replace=Y";
                    jc({
                        url: cc("PUI0001101.pgm"), method: "post", sendAsBinary: false, postData: r, async: true,
                        handler: function (q, s) {
                            screenMask.hide();
                            document.title = n;
                            var t = "";
                            if (q == null) {
                                t = "Response is invalid.";
                                if (s != null) t += " " + s.description + ".";
                                t != "" && S.alert(t)
                            } else if (q.success) {
                                rd.Ce();
                                l && l.Vb && pui.ide.pd(l.Vb, function (v) {
                                    if (v.success) {
                                        v = v.data;
                                        if (v.mtime) l.lastModified = v.mtime; else if (v.changed) l.lastModified = v.changed
                                    }
                                });
                                if (g.compile == "Y") t = "Display file " + g.cf + " / " + g.wf + " created successfully.";
                                g.onsuccess != null && g.onsuccess();
                                pui.designer.Ym = null;
                                pui.designer.hz = false;
                                if (t != "") {
                                    var u = new pui.designer.Rr;
                                    u.b = h.designer.b;
                                    if (pui.designer.fa != null) u.b = u.b.parentNode.parentNode;
                                    u.oq = t;
                                    u.ld = pui.flatlook ? "#cacfd4" : "#d2e1f6";
                                    u.qA = 35;
                                    t = u.init();
                                    t.style.width = "100%";
                                    var w = h.designer.b.parentNode.parentNode.scrollLeft - 10;
                                    t.style.top = h.designer.b.parentNode.parentNode.scrollTop + "px";
                                    t.style.left = w + "px";
                                    t.style.textAlign = "center";
                                    t.style.color = "#333333";
                                    if (pui.flatlook) {
                                        t.style.height = "18px";
                                        t.style.borderBottom = "1px solid #5c6c75";
                                        t.style.fontFamily = "Segoe UI, tahoma, arial, verdana, sans-serif";
                                        t.style.fontSize =
                                            "15px"
                                    } else {
                                        t.style.height = "15px";
                                        t.style.borderBottom = "1px solid #99bbe8";
                                        t.style.fontFamily = "Arial";
                                        t.style.fontSize = "13px"
                                    }
                                    u.animate()
                                }
                            } else {
                                pui.ide.K.Yq(q, g);
                                g.onfail != null && g.onfail(q.msg)
                            }
                        }, onfail: function () {
                            pui.alert("Save operation failed. Check job/server logs for more details.");
                            screenMask.hide();
                            document.title = n;
                            g.onfail != null && g.onfail("Save operation failed. Check job/server logs for more details.")
                        }
                    })
                }
            }
        }
    };
    this.open = function (g) {
        if (g.zr || g.sH) return a(g, function () {
            c(g)
        });
        c(g)
    };
    this.Fj =
        function (g, l) {
            return b(g, l)
        };
    this.uj = function (g, l) {
        return a(g, l)
    };
    this.$H = function () {
        pui.designer.nl.wx();
        rd.clear();
        rd.add();
        rd.refresh();
        h.designer.k.refresh();
        pui.designer.currentDisplay.library = null;
        pui.designer.currentDisplay.file = null;
        pui.designer.currentDisplay.member = null;
        pui.designer.currentDisplay.text = null;
        pui.designer.currentDisplay.comments = null;
        pui.designer.currentDisplay.wf = null;
        pui.designer.currentDisplay.cf = null;
        pui.designer.currentDisplay.ifsFile = null;
        pui.designer.currentDisplay.Eb =
            null;
        pui.designer.currentDisplay.lj = false;
        pui.ka = pui.designer["initial keywords"];
        S.ak();
        pui.designer.Ea = false;
        if (pui.designer["long field names"] === true) pui.designer.Ea = true;
        if (pui.nodedesigner) pui.designer.Ea = true
    };
    this.nn = function (g) {
        pui.Yi = true;
        h.Of = true;
        pui.designer.nl.wx();
        rd.clear();
        for (var l = 0; l < g.length; l++) rd.Jz(g[l]);
        rd.select(0);
        h.designer.k.refresh();
        pui.Yi = false;
        h.Of = false
    };
    this.JA = function (g, l) {
        function n(y) {
            if (typeof y != "string") return "";
            return y = Zb(y.toUpperCase())
        }

        var o = 0, i = {};
        try {
            for (var r =
                0; r < g.length; r++) for (var k = 0; k < g[r].items.length; k++) for (var q = "", s = 1; g[r].items[k]["message id" + q] != null;) {
                if (!pui.f(g[r].items[k]["message id prefix" + q]) && !pui.f(g[r].items[k]["message id" + q]) && !pui.f(g[r].items[k]["message file" + q]) && !pui.f(g[r].items[k]["message library" + q]) && !pui.f(g[r].items[k]["message condition" + q])) if (pui.f(g[r].items[k].value)) {
                    var t = n(g[r].items[k]["message library" + q]), u = n(g[r].items[k]["message file" + q]),
                        w = n(g[r].items[k]["message id prefix" + q]), v = n(g[r].items[k]["message id" +
                        q]);
                    if (t == "") t = "*LIBL";
                    o++;
                    i["msgPrefix" + o] = w;
                    i["msgId" + o] = v;
                    i["msgFile" + o] = u;
                    i["msgLibrary" + o] = t;
                    break
                }
                s += 1;
                q = " " + s
            }
        } catch (E) {
            pui.alert("Error refreshing messages:" + E.message);
            l();
            return
        }
        o < 1 ? l() : jc({
            url: cc("PUI0001118.PGM", null, false), params: i, method: "post", async: true, handler: function (y) {
                if (y == null || !y.success) y != null && pui.alert(y.step + ": " + y.error); else try {
                    for (var F = 0; F < g.length; F++) for (var D = 0; D < g[F].items.length; D++) for (var B = "", I = 1; g[F].items[D]["message id" + B] != null;) {
                        if (!pui.f(g[F].items[D]["message id prefix" +
                        B]) && !pui.f(g[F].items[D]["message id" + B]) && !pui.f(g[F].items[D]["message file" + B]) && !pui.f(g[F].items[D]["message library" + B]) && !pui.f(g[F].items[D]["message condition" + B])) if (pui.f(g[F].items[D].value)) {
                            var z = n(g[F].items[D]["message library" + B]), H = n(g[F].items[D]["message file" + B]),
                                J = n(g[F].items[D]["message id prefix" + B]), K = n(g[F].items[D]["message id" + B]);
                            if (z == "") z = "*LIBL";
                            var L = z + "/" + H + "/" + J + K;
                            if (y.messages != null && y.messages[L] != null && y.messages[L].text != null) g[F].items[D].value.designValue =
                                y.messages[L].text
                        }
                        I += 1;
                        B = " " + I
                    }
                } catch (N) {
                    pui.alert("Error occurred refreshing messages: " + N.message)
                }
                l()
            }
        })
    };
    h.destroy = function () {
        h.h.parentNode.removeChild(h.h);
        h.h = null
    }
};
pui.designer.am = function () {
    function b() {
        var e = "";
        if (Ja == "ON") e = "https://" + HTTP_HOST;
        e += pui.flatlook ? "/profoundui/proddata/images/FlatIcons/" : "/profoundui/proddata/images/icons/";
        for (var f = 0; f < a.Hd.length; f++) {
            var h = d.insertRow(f);
            h.style.cursor = "pointer";
            h.style.color = "#333333";
            h.style.padding = "3px";
            h.onmouseover = function (n) {
                n = vb(n).parentNode;
                n.style.backgroundColor = pui.flatlook ? "#555555" : "#316ac5";
                n.style.color = "#ffffff"
            };
            h.onmouseout = function (n) {
                n = vb(n).parentNode;
                n.style.backgroundColor = "";
                n.style.color =
                    "#333333"
            };
            h.PH = a.Hd[f];
            h.onclick = function (n) {
                if (!n) n = window.event;
                a.handler(vb(n).parentNode.PH, n);
                a != null && a.hide()
            };
            var g = h.insertCell(0);
            g.style.width = "20px";
            var l = a.Jj[f];
            if (!l) {
                l = a.Hd[f].toLowerCase();
                l = l.replace(" ", "_").replace(" ", "_")
            }
            if (l.indexOf(".") < 0) l += ".png";
            g.style.backgroundImage = "url('" + e + l + "')";
            g.style.backgroundPosition = "center";
            g.style.backgroundRepeat = "no-repeat";
            if (!pui.flatlook && (l == "center_horizontally.png" || l == "center_vertically.png")) g.style.backgroundSize = "cover";
            g.style.padding =
                "3px";
            h = h.insertCell(1);
            h.innerHTML = a.Hd[f];
            h.style.fontFamily = "Arial";
            h.style.fontSize = "12px";
            h.style.fontWeight = "bold";
            h.style.padding = "3px";
            h.style.whiteSpace = "normal"
        }
    }

    var a = this, c, d;
    this.Hd = [];
    this.Jj = [];
    this.Xc = this.clickEvent = this.handler = this.toolbar = this.Qf = null;
    this.init = function () {
        S.W(document, "mousedown", function (e) {
            if (a != null) {
                for (e = S.getTarget(e); e != null;) {
                    if (e == c) return;
                    e = e.parentNode
                }
                a.hide()
            }
        });
        c = document.createElement("div");
        c.style.position = "absolute";
        c.style.border = pui.flatlook ?
            "1px solid #777777" : "1px solid #cccccc";
        c.style.backgroundColor = pui.flatlook ? "#eeeeee" : "#C7D8FF";
        c.style.zIndex = S.bL;
        c.style.filter = "alpha(opacity=93)";
        c.style.opacity = 0.93;
        c.onselectstart = za(false);
        if (typeof c.style.MozUserSelect != "undefined") c.style.MozUserSelect = "none";
        d = document.createElement("table");
        d.border = 0;
        d.cellPadding = 3;
        d.cellSpacing = 0;
        d.style.width = "175px";
        if (a.Qf === "user") d.style.width = "135px";
        if (a.Qf === "thumbnail") d.style.width = "155px";
        b();
        a.hide();
        c.appendChild(d);
        document.body.appendChild(c)
    };
    this.Yu = function () {
        for (; d.rows.length > 0;) d.deleteRow(d.rows.length - 1);
        b()
    };
    this.show = function () {
        if (Q == "genie" && pui.is_old_ie && pui.ie_mode == 9) document.body.style.overflowX = "hidden";
        var e = 0, f = 0;
        if (a.toolbar != null) {
            e = a.toolbar.h.offsetLeft + 119;
            f = a.toolbar.h.offsetTop + 47;
            if (a.toolbar.h.offsetTop > a.Hd.length * 22 - 45) f = f - a.Hd.length * 22 + 1
        }
        if (a.clickEvent != null) {
            if (a.clickEvent.pageX) e = a.clickEvent.pageX; else if (a.clickEvent.clientX) e = a.clickEvent.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft :
                document.body.scrollLeft);
            if (a.clickEvent.pageY) f = a.clickEvent.pageY; else if (a.clickEvent.clientY) f = a.clickEvent.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);
            var h = document.body.offsetWidth - 185;
            if (e > h) e = h
        }
        c.style.left = e + "px";
        if (this.Qf == "context") if (a.Hd.length > 4) {
            e = a.Hd.length * 22;
            h = 600;
            if (document.body && document.body.offsetHeight) h = document.body.offsetHeight;
            if (document.compatMode == "CSS1Compat" && document.documentElement && document.documentElement.offsetHeight) h =
                document.documentElement.offsetHeight;
            if (window.innerHeight) h = window.innerHeight;
            if (f + e >= h) {
                e = f - e + 3;
                if (e > 0) f = e
            }
        }
        c.style.top = f + "px";
        c.style.visibility = "";
        c.style.display = "";
        if (a.Qf === "user") {
            c.style.top = "23px";
            c.style.left = "";
            c.style.right = "2px"
        }
        if (a.Qf === "thumbnail") {
            c.style.top = "60px";
            c.style.left = "";
            c.style.right = "10px"
        }
    };
    this.hide = function () {
        c.style.visibility = "hidden";
        c.style.display = "none";
        if (a.Xc != null) {
            a.Xc();
            a.Xc = null
        }
        if (Q == "genie" && pui.is_old_ie && pui.ie_mode == 9 && R != null && R.designer != null &&
            R.designer.k != null && R.designer.k.jd != null && R.designer.k.jd.isHidden()) document.body.style.overflowX = ""
    };
    this.isHidden = function () {
        return c.style.visibility == "hidden"
    };
    this.destroy = function () {
        if (c != null) {
            c.parentNode.removeChild(c);
            d = c = null;
            a.Hd = null;
            a.Jj = null;
            a.Qf = null;
            a.toolbar = null;
            a.handler = null;
            a = a.clickEvent = null
        }
    }
};
pui.designer.hD = function () {
    this.Sv = null;
    var b = {}, a = this;
    this.set = function (c, d) {
        b[c] = d
    };
    this.get = function (c, d) {
        var e = b[c];
        if (e == null) e = d;
        return e
    };
    this.save = function () {
        localStorage.setItem(a.Sv, JSON.stringify(b))
    };
    this.load = function () {
        try {
            b = JSON.parse(localStorage[a.Sv])
        } catch (c) {
            b = {}
        }
        if (typeof b !== "object") b = {}
    }
};
var Kd = new pui.designer.hD;
Kd.Sv = "pui-designer";
Kd.load();
pui.designer.Rr = function () {
    this.oq = "";
    this.ld = "#009900";
    this.color = "#ffffff";
    this.b = document.body;
    this.interval = 50;
    this.iA = 20;
    this.qA = 10;
    var b, a = this, c = 0, d = false;
    this.init = function () {
        b = document.createElement(b);
        b.innerHTML = a.oq;
        b.style.color = a.color;
        b.style.backgroundColor = a.ld;
        b.style.fontFamily = "Arial";
        b.style.fontSize = "12px";
        b.style.paddingLeft = "5px";
        b.style.paddingRight = "5px";
        b.style.paddingTop = "2px";
        b.style.paddingBottom = "2px";
        b.style.position = "absolute";
        b.style.zIndex = 20;
        b.style.left = "10px";
        var e = a.b.offsetHeight - 30;
        if (pui.is_firefox && a.b.tagName == "FIELDSET") e -= 25;
        b.style.top = e + "px";
        a.b.appendChild(b);
        return b
    };
    this.animate = function () {
        if (!(b == null || typeof b == "undefined")) {
            if (d) c -= a.iA; else c += a.iA;
            b.style.filter = "alpha(opacity=" + c + ")";
            b.style.opacity = c / 100;
            if (d) if (c > 0) setTimeout(a.animate, a.interval); else {
                try {
                    a.b.removeChild(b)
                } catch (e) {
                }
                b = null
            } else if (c >= 100) {
                d = true;
                setTimeout(a.animate, a.interval * a.qA)
            } else setTimeout(a.animate, a.interval)
        }
    }
};
pui.designer.OD = function () {
    function b(g, l, n) {
        if (g.dom != null) {
            if (g.dom.parentNode == null) g.dom = Tb(g.dom.id);
            if (g.dom != null) if (g.dom.parentNode != null) {
                var o;
                if (g.dom.ff == null) {
                    if (h == null) h = rc();
                    o = pui.Ye(h, l)
                } else o = pui.Ye(g.dom.ff, l);
                uc(o, g.properties, g.dom, n, true, g, null);
                pui.f(n) && g.designer.D.Tc({
                    fieldName: n.fieldName,
                    dataType: n.dataType,
                    dataLength: n.dataLength,
                    decPos: n.decPos,
                    refField: n.refField,
                    keywords: n.keywords,
                    c: g,
                    property: l,
                    fg: true,
                    longName: n.longName
                })
            }
        }
    }

    this.bf = false;
    var a = [], c = -1, d = 0, e = "",
        f = this, h = null;
    this.start = function (g) {
        e = g;
        d++
    };
    this.add = function (g, l) {
        if (l === "id") f.clear(); else {
            var n = f.Vk(), o = {};
            o.type = "item property";
            o.c = g;
            o.id = g.properties.id;
            o.lb = l;
            o.Ii = g.properties[l];
            o.Uu = g.m[l];
            o.GH = g.ta;
            o.ao = g.designer.X[g.designer.i.l];
            o.group = d;
            o.text = e;
            a.splice(c + 1, a.length - c - 1);
            a.push(o);
            c = a.length - 1;
            Q == "dspf" && !f.bf && n != f.Vk() && setTimeout(function () {
                pui.ide.refreshRibbon()
            }, 0)
        }
    };
    this.Sw = function (g, l) {
        if (l !== "screen name") {
            var n = f.Vk(), o = {};
            o.type = "screen property";
            o.designer = g;
            o.lb =
                l;
            o.Ii = g.Ga[g.i.l][l];
            o.Uu = g.Nd[g.i.l][l];
            o.ao = g.X[g.i.l];
            o.group = d;
            o.text = e;
            a.splice(c + 1, a.length - c - 1);
            a.push(o);
            c = a.length - 1;
            Q == "dspf" && !f.bf && n != f.Vk() && setTimeout(function () {
                pui.ide.refreshRibbon()
            }, 0)
        }
    };
    this.Nc = function (g, l) {
        if (Q != "dspf") f.clear(); else {
            typeof g === "string" && f.start(g);
            var n = null;
            if (typeof g === "object") n = g;
            if (typeof l === "object") n = l;
            if (n == null) n = R.designer;
            var o = {};
            o.type = "snapshot";
            o.designer = n;
            o.gK = n.bh(n.i, false);
            o.ao = n.X[n.i.l];
            o.group = d;
            o.text = e;
            a.splice(c + 1, a.length - c - 1);
            a.push(o);
            c = a.length - 1
        }
    };
    this.FA = function (g) {
        g.OE();
        for (var l = 0; l < a.length; l++) {
            var n = a[l];
            if (typeof n.id === "string") {
                var o = g.eu[n.id];
                if (o != null) n.c = o
            }
        }
    };
    this.zK = function () {
        var g = a[c], l = g.designer, n = l.kb;
        if (g.Iq == null) g.Iq = l.bh(l.i, false);
        g.Nn = l.X[l.i.l];
        if (Q === "dspf" && n) var o = n.map(function (i) {
            return [i.dom.id, i.dom.grid.D]
        });
        l.load(g.gK);
        l.X[l.i.l] = g.ao;
        f.FA(l);
        c -= 1;
        if (c >= 0) g = a[c];
        l.selection.clear();
        l.k.refresh();
        if (Q == "dspf") {
            pui.ide.refreshRibbon();
            pui.ide.zg();
            pui.ide.He();
            rd.refresh();
            pui.sj.load();
            rd.Rf();
            o && l.kb.forEach(function (i) {
                for (var r = 0; r < o.length; r++) if (i.dom.id === o[r][0]) i.dom.grid.D.C = o[r][1].C
            })
        }
    };
    this.Iq = function () {
        var g = a[c + 1], l = g.designer, n = l.kb;
        if (Q === "dspf" && n) var o = n.map(function (i) {
            return [i.dom.id, i.dom.grid.D]
        });
        l.load(g.Iq);
        l.X[l.i.l] = g.Nn;
        f.FA(l);
        c++;
        if (c < a.length - 1) g = a[c + 1];
        l.selection.clear();
        l.k.refresh();
        if (Q == "dspf") {
            pui.ide.refreshRibbon();
            pui.ide.zg();
            pui.ide.He();
            rd.refresh();
            pui.sj.load();
            rd.Rf();
            o && l.kb.forEach(function (i) {
                for (var r = 0; r < o.length; r++) if (i.dom.id ===
                    o[r][0]) i.dom.grid.D.C = o[r][1].C
            })
        }
    };
    this.dC = function (g, l, n) {
        if (Q == "dspf" && typeof n === "object") {
            var o = n, i = {};
            i.fieldName = o.fieldName;
            i.dataType = o.dataType;
            i.dataLength = o.dataLength;
            i.decPos = o.decPos;
            i.refField = o.refField;
            i.keywords = o.keywords;
            i.property = l;
            i.longName = o.longName;
            i.c = "Screen";
            g.D.Tc(i, g)
        }
        if (Q == "dspf" && l == "record format name") {
            if (n == null) n = "[Unnamed Screen]";
            g.i.name = n;
            rd.refresh()
        }
        Q == "dspf" && l == "description" && rd.refresh();
        Q == "dspf" && l == "external css" && pui.sj.load();
        Q == "dspf" && l == "design overlay formats" &&
        rd.Rf()
    };
    this.yK = function () {
        var g = a[c], l = [], n = g.designer, o = g.lb, i = g.Ii;
        g.Mn = n.Ga[n.i.l][o];
        g.av = n.Nd[n.i.l][o];
        g.Nn = n.X[n.i.l];
        for (var r = n.D, k = false, q = 0; q < l.length; q++) if (l[q] == r) {
            k = true;
            break
        }
        k || l.push(r);
        n.Ga[n.i.l][o] = i;
        n.Nd[n.i.l][o] = g.Uu;
        n.X[n.i.l] = g.ao;
        f.dC(n, o, i);
        c -= 1;
        n.selection.clear();
        n.k.refresh();
        for (q = 0; q < l.length; q++) l[q].uh();
        Q == "dspf" && pui.ide.refreshRibbon()
    };
    this.LI = function () {
        for (var g = a[c + 1], l = [], n = g.designer, o = g.lb, i = n.D, r = false, k = 0; k < l.length; k++) if (l[k] == i) {
            r = true;
            break
        }
        r ||
        l.push(i);
        n.Ga[n.i.l][o] = g.Mn;
        n.Nd[n.i.l][o] = g.av;
        n.X[n.i.l] = g.Nn;
        f.dC(n, o, g.Mn);
        c++;
        n.selection.clear();
        n.k.refresh();
        for (k = 0; k < l.length; k++) l[k].uh();
        Q == "dspf" && pui.ide.refreshRibbon()
    };
    this.n = function () {
        if (f.Zo()) {
            var g = a[c];
            if (g.type === "snapshot") f.zK(); else if (g.type === "screen property") f.yK(); else {
                for (var l = g.group, n = g.c, o = true, i = []; c >= 0 && g.group == l;) {
                    if (n != g.c) o = false;
                    g.Mn = g.c.properties[g.lb];
                    g.av = g.c.m[g.lb];
                    g.KI = g.c.ta;
                    g.Nn = g.c.designer.X[g.c.designer.i.l];
                    var r;
                    r = g.c.bb();
                    if (Q == "dspf" &&
                        r == null && Q == "dspf" && pui.hn(g.lb)) r = g.c.dom.grid;
                    r = r == null ? g.c.designer.D : r.D;
                    for (var k = false, q = 0; q < i.length; q++) if (i[q] == r) {
                        k = true;
                        break
                    }
                    k || i.push(r);
                    b(g.c, g.lb, g.Ii);
                    g.c.properties[g.lb] = g.Ii;
                    g.c.m[g.lb] = g.Uu;
                    g.c.ta = g.GH;
                    g.c.designer.X[g.c.designer.i.l] = g.ao;
                    c -= 1;
                    if (c >= 0) g = a[c]
                }
                l = g.designer;
                if (l == null) l = g.c.designer;
                l.selection.clear();
                o && n.designer.selection.add(n);
                l.k.refresh();
                for (q = 0; q < i.length; q++) i[q].uh();
                Q == "dspf" && pui.ide.refreshRibbon()
            }
        }
    };
    this.Hq = function () {
        if (f.Yo()) {
            var g = a[c + 1];
            if (g.type ===
                "snapshot") f.Iq(); else if (g.type === "screen property") f.LI(); else {
                for (var l = g.group, n = g.c, o = true, i = []; c < a.length - 1 && g.group == l;) {
                    if (n != g.c) o = false;
                    var r;
                    r = g.c.bb();
                    if (r == null && Q == "dspf" && pui.hn(g.lb)) r = g.c.dom.grid;
                    r = r == null ? g.c.designer.D : r.D;
                    for (var k = false, q = 0; q < i.length; q++) if (i[q] == r) {
                        k = true;
                        break
                    }
                    k || i.push(r);
                    b(g.c, g.lb, g.Mn);
                    g.c.properties[g.lb] = g.Mn;
                    g.c.m[g.lb] = g.av;
                    g.c.ta = g.KI;
                    g.c.designer.X[g.c.designer.i.l] = g.Nn;
                    c++;
                    if (c < a.length - 1) g = a[c + 1]
                }
                l = g.designer;
                if (l == null) l = g.c.designer;
                l.selection.clear();
                o && l.selection.add(n);
                l.k.refresh();
                for (q = 0; q < i.length; q++) i[q].uh();
                Q == "dspf" && pui.ide.refreshRibbon()
            }
        }
    };
    this.clear = function () {
        a = [];
        c = -1;
        d = 0;
        e = "";
        Q == "dspf" && pui.ide.refreshRibbon()
    };
    this.Zo = function () {
        if (a.length <= 0) return false;
        if (c < 0) return false;
        return true
    };
    this.Yo = function () {
        if (a.length <= 0) return false;
        if (c >= a.length - 1) return false;
        return true
    };
    this.Vk = function () {
        if (!f.Zo()) return null;
        return a[c].text
    };
    this.My = function () {
        if (!f.Yo()) return null;
        return a[c + 1].text
    };
    this.iv = function () {
        if (!(c <
            0)) for (var g = a[c], l = g.group; c >= 0 && g.group == l;) {
            a.splice(c, 1);
            c -= 1;
            if (c >= 0) g = a[c]
        }
    }
};
pui.designer.Wr = function () {
    this.Yg = false;
    this.C = {fields: {}, jh: {}, subfiles: {}};
    var b = {}, a = this;
    this.clear = function () {
        b = {}
    };
    this.Tc = function (c, d) {
        if (!a.Yg) {
            if (pui.hn(c.property)) {
                var e = c.c.dom.grid;
                if (e == null) {
                    setTimeout(function () {
                        c.c.dom.grid.D.Tc(c, d)
                    }, 0);
                    return ""
                } else return e.D.Tc(c, d)
            }
            if (c.c.bb != null) {
                e = c.c.bb();
                if (e != null) return e.D.Tc(c, d)
            }
        }
        var f = c.fieldName;
        if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive") f = S.Sb(f);
        var h = c.refField;
        if (h != null & !pui.viewdesigner && !pui.nodedesigner &&
            pui.pjsDefaultMode !== "case-sensitive") h = S.Sb(h);
        var g = [];
        if (c.keywords != null) g = S.hp(c.keywords);
        e = b[f];
        if (e == null) {
            e = {};
            e.fieldName = f;
            e.Q = [];
            var l = {};
            l.c = c.c;
            l.property = c.property;
            e.Q.push(l);
            b[f] = e
        } else {
            f = false;
            if (e.Q.length == 1) if (e.Q[0].c == c.c && e.Q[0].property == c.property) f = true;
            if (!f) {
                l = "";
                if (e.keywords == null) e.keywords = [];
                if (e.keywords.join("\n") != g.join("\n")) l = "Field keywords do not match";
                if (e.refField != h) l = "Reference field information does not match";
                if (e.decPos != c.decPos) l = "Decimal positions do not match";
                if (e.dataLength != c.dataLength) l = "Field length does not match";
                if (e.dataType != c.dataType) l = "Field type does not match";
                if (l != "" && c.fg == true) {
                    for (f = 0; f < e.Q.length; f++) {
                        var n = e.Q[f].c;
                        l = e.Q[f].property;
                        l = typeof n == "string" ? d.Ga[d.i.l][l] : n.properties[l];
                        l.dataType = c.dataType;
                        l.dataLength = c.dataLength;
                        l.decPos = c.decPos;
                        l.refField = h;
                        l.keywords = S.hp(g)
                    }
                    l = ""
                }
                if (l != "") {
                    l += " previous definition";
                    if (pui.ja) l += " in the same record format.\n"; else {
                        l += " used in:\n";
                        for (f = h = 0; f < e.Q.length; f++) {
                            n = e.Q[f].c;
                            if (!(n ==
                                c.c && e.Q[f].property == c.property)) {
                                h++;
                                if (h > 10) {
                                    l += "  And more...";
                                    break
                                }
                                l += typeof n == "string" ? "  " + n : "  " + n.properties.id;
                                l += " - " + e.Q[f].property + " property\n"
                            }
                        }
                    }
                    l += "\nPrevious field definition is " + e.dataType.substr(0, 1).toUpperCase() + e.dataType.substr(1);
                    h = false;
                    if (e.dataType == "char" || e.dataType == "varchar" || e.dataType == "graphic" || e.dataType == "zoned" || e.dataType == "floating") {
                        h = true;
                        l += " (" + e.dataLength
                    }
                    if (e.dataType == "zoned" || e.dataType == "floating") l += "," + e.decPos;
                    if (h) l += ")";
                    if (e.dataType == "reference") {
                        l +=
                            " (";
                        l += e.refField != null && e.refField != "" ? e.refField : "no reference field specified";
                        l += ")"
                    }
                    if (e.keywords != null && e.keywords.length > 0) {
                        l += " with " + e.keywords.length + " keyword";
                        if (e.keywords.length > 1) l += "s"
                    }
                    l += ".";
                    l += "  Override with new definition?";
                    return l
                }
            }
        }
        e.dataType = c.dataType;
        e.dataLength = c.dataLength;
        e.decPos = c.decPos;
        e.refField = h;
        e.keywords = S.hp(g);
        e.longName = c.longName;
        h = false;
        for (f = 0; f < e.Q.length; f++) if (e.Q[f].c == c.c && e.Q[f].property == c.property) {
            h = true;
            break
        }
        l = {};
        if (h) l = e.Q[f];
        l.c = c.c;
        l.property =
            c.property;
        h || e.Q.push(l);
        pui.ide.zg();
        return ""
    };
    this.vh = function (c) {
        if (!a.Yg && c.c.bb != null) {
            var d = c.c.bb();
            if (d != null) {
                d.D.vh(c);
                return
            }
        }
        if (!a.Yg && pui.hn(c.property)) {
            d = c.c.dom.grid;
            d.D.vh(c)
        } else {
            d = c.fieldName;
            if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive") d = S.Sb(d);
            var e = b[d];
            if (e != null) {
                for (Nd = 0; Nd < e.Q.length; Nd++) if (e.Q[Nd].c == c.c && e.Q[Nd].property == c.property) {
                    e.Q.splice(Nd, 1);
                    break
                }
                e.Q.length <= 0 && delete b[d];
                pui.ide.zg()
            }
        }
    };
    this.Tj = function (c, d) {
        var e = false;
        if (!a.Yg && c.bb != null) {
            var f =
                c.bb();
            if (f != null) {
                f.D.Tj(c);
                return
            }
        }
        if (!a.Yg && c.properties["field type"] == "grid") {
            f = c.dom.grid;
            f.D.Tj(c)
        }
        for (var h in b) {
            f = b[h];
            for (Nd = f.Q.length - 1; Nd >= 0; Nd -= 1) if (f.Q[Nd].c == c) {
                d != null && d.Tc({
                    fieldName: h,
                    dataType: f.dataType,
                    dataLength: f.dataLength,
                    decPos: f.decPos,
                    refField: f.refField,
                    keywords: f.keywords,
                    c: c,
                    property: f.Q[Nd].property,
                    fg: true,
                    longName: f.longName
                }, c.designer);
                f.Q.splice(Nd, 1);
                e = true
            }
            if (f.Q.length <= 0) {
                delete b[h];
                e = true
            }
        }
        e && pui.ide.zg()
    };
    this.uh = function () {
        var c = false;
        for (var d in b) {
            var e =
                b[d];
            for (g = e.Q.length - 1; g >= 0; g -= 1) {
                var f = e.Q[g].c;
                if (typeof f == "string" && f == "Screen") {
                    f = R.designer;
                    if (f.D != a) f = null;
                    f = f.Ga[f.i.l][e.Q[g].property]
                } else f = f.properties[e.Q[g].property];
                var h;
                h = f != null && f.fieldName != null ? f.fieldName : "?";
                if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive" && h != null) h = S.Sb(h);
                if (f == null || !pui.f(f) || h != d) {
                    e.Q.splice(g, 1);
                    c = true
                }
            }
            if (e.Q.length <= 0) {
                delete b[d];
                c = true
            }
        }
        if (!a.Yg && R.designer.D == a) {
            d = R.designer.kb;
            for (var g = 0; g < d.length; g++) d[g].dom.grid.D.uh()
        }
        c && pui.ide.zg()
    };
    this.Tm = function () {
        var c = "Field";
        if (pui.viewdesigner || pui.nodedesigner) c = "field";
        for (var d, e = 1; e < 9999; e++) {
            d = "000" + String(e);
            if (pui.viewdesigner) d = String(e);
            d = d.substr(d.length - 4, 4);
            var f = d = c + d;
            if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive") f = S.Sb(d);
            if (b[f] == null) break
        }
        return d
    };
    this.Tk = function (c) {
        var d;
        for (d in b) if (b[d].longName != null && b[d].longName.toUpperCase() == c.toUpperCase()) return d;
        c = S.Sb(c);
        if (c.length > 6) c = c.substr(0, 6);
        for (var e = 1; e < 9999; e++) {
            d = "000" + String(e);
            d = d.substr(d.length -
                4, 4);
            d = c + d;
            if (b[d] == null) break
        }
        return d
    };
    this.Dp = function () {
        return b
    };
    this.xt = function (c) {
        if (!pui.viewdesigner && pui.designer.Ea && c.length > 10 && pui.pjsDefaultMode !== "case-sensitive") for (var d in b) {
            if (b[d].longName == c) return b[d]
        } else {
            if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive") c = S.Sb(c);
            for (d in b) if (d == c) return b[d]
        }
        return null
    };
    this.dG = function (c) {
        var d = {};
        d.choices = [];
        d.values = [];
        d.Zh = [];
        var e = [];
        for (var f in b) {
            var h = b[f].longName;
            if (h == null || !pui.designer.Ea) h = f;
            e.push({EB: f, kq: h})
        }
        for (var g =
            0; g < pui.sl.length; g++) {
            f = pui.sl[g].field;
            h = pui.sl[g].longName;
            if (h == null || !pui.designer.Ea) h = f;
            e.push({EB: f, kq: h})
        }
        e.sort(function (i, r) {
            return i.kq < r.kq ? -1 : 1
        });
        h = {};
        for (g = 0; g < e.length; g++) {
            f = e[g].EB;
            var l = b[f];
            if (l == null) l = {fieldName: f, longName: e[g].kq, dataType: "reference", Q: []};
            h["_" + f] = l
        }
        for (f in h) {
            e = h[f];
            f = f.substr(1);
            if (pui.ic(c, e.dataType) != -1) {
                g = e.dataType;
                l = false;
                if (e.dataType == "char" || e.dataType == "varchar" || e.dataType == "graphic" || e.dataType == "zoned" || e.dataType == "floating") {
                    l = true;
                    g += " (" +
                        e.dataLength
                }
                if (e.dataType == "zoned" || e.dataType == "floating") g += "," + e.decPos;
                if (l) g += ")";
                if (e.dataType == "reference") if (e.refField != null && e.refField != "") g += "(" + e.refField + ")";
                if (e.Q.length > 0) {
                    var n = e.Q[0].c;
                    l = e.Q[0].property;
                    var o;
                    if (typeof n == "string") {
                        n = R.designer;
                        if (n != null) o = n.Ga[n.i.l][l]
                    } else o = n.properties[l];
                    if (o != null) f = o.fieldName
                }
                if (e.longName != null && pui.designer.Ea) f = e.longName;
                d.choices.push(f);
                d.values.push(f);
                d.Zh.push({field: f, type: g})
            }
        }
        return d
    };
    this.wj = function (c) {
        var d = {}, e = "", f =
            0, h = S.si(), g = [];
        for (var l in b) g.push(l);
        g.sort(function (v, E) {
            var y = b[v], F = b[E], D = y.dataType == "reference", B = F.dataType == "reference";
            if (D == false && B == true) return -1;
            if (D == true && B == false) return 1;
            if (D == true && B == true) {
                y = y.refField;
                F = F.refField;
                if (y == null) y = "";
                if (F == null) F = "";
                y = y.split(" ")[0];
                F = F.split(" ")[0];
                if (y == E) return 1;
                if (F == v) return -1
            }
            return v < E ? -1 : 1
        });
        for (var n = {}, o = 0; o < g.length; o++) {
            l = g[o];
            n["_" + l] = b[l]
        }
        g = rc();
        for (l in n) {
            l = l.substr(1);
            var i = b[l];
            if (i.dataType == "expression") {
                var r = l.split(" OR ");
                for (i = 0; i < r.length; i++) for (var k = r[i].split(" AND "), q = 0; q < k.length; q++) {
                    var s = k[q];
                    if (s.substr(0, 1) == "N") s = s.substr(1);
                    if (s.length < 2) s = "0" + s;
                    if (s.length < 2) s = "0" + s;
                    if (s.length > 2) s = s.substr(0, 2);
                    if (h && a.C.jh[s] == null && !a.Rp(s)) {
                        o = "Numeric indicator *IN" + s + " must be defined in the Green-Screen portion of the DDS.";
                        if (pui.cnv.pn) pui.cnv.Ra.add(o, 10); else return {msg: o, In: s}
                    } else if (!h) {
                        s = "*IN" + s;
                        if (d[s] == null) {
                            f++;
                            if (e != "") e += "&";
                            e += "fld" + c + "," + f + "=" + encodeURIComponent(s);
                            d[s] = true
                        }
                    }
                }
            } else {
                r = s = false;
                if (l.substr(0, 3) == "*IN") if (d[l] == null) {
                    d[l] = true;
                    for (o = 0; o < i.Q.length; o++) {
                        k = i.Q[o].property;
                        if (k == "page down response" || k == "page up response" || k == "response" || k == "changed" || k == "subfile changed" || k == "is blank" || k == "dup key response" || k == "valid command key" || k == "back button" || k == "selection field" || k.substr(0, 14) == "error response" || k.substr(0, 7) == "set off" || k.substr(0, 11) == "input field") {
                            r = true;
                            break
                        }
                    }
                } else s = true;
                if (!s && i.Q.length > 0) {
                    s = true;
                    for (o = 0; o < i.Q.length; o++) {
                        q = i.Q[o].c;
                        if (typeof q != "object") {
                            s =
                                false;
                            break
                        }
                        var t = q.properties["field type"];
                        if (t == "grid") {
                            s = false;
                            break
                        }
                        k = i.Q[o].property;
                        var u = g[k];
                        if (u == null) {
                            s = false;
                            break
                        }
                        u = u.controls;
                        if (u == null) {
                            s = false;
                            break
                        }
                        for (var w = 0; w < u.length; w++) if (u[w] == t || u[w] == "tab panel" && t == "layout" && q.properties.template == "tab panel" || t == "layout" && q.properties.template == "fieldset" && k == "border color") {
                            s = false;
                            break
                        }
                        if (!s) break
                    }
                }
                if (!s) if (h && l.substr(0, 3) == "*IN") {
                    s = l.substr(3);
                    if (a.C.jh[s] == null && !a.Rp(s)) {
                        o = "Numeric indicator *IN" + s + " must be defined in the Green-Screen portion of the DDS.";
                        if (pui.cnv.pn) pui.cnv.Ra.add(o, 10); else return {msg: o, In: s}
                    }
                    if (r === true && a.C.jh[s] === false && !a.Rp(s)) {
                        o = "Numeric indicator *IN" + s + " cannot be used as a response indicator because it is not defined as a response indicator in the Green-Screen portion of the DDS.";
                        if (pui.cnv.pn) pui.cnv.Ra.add(o, 10); else return {msg: o, In: s}
                    }
                    s = true
                }
                k = a.C.fields[l];
                h || (k = null);
                if (!s && k != null) {
                    s = true;
                    if (!pui.designer.C.uH(k, i) && !a.Rp(l)) {
                        q = {};
                        if (i.refField) q = S.Ou(i.refField);
                        o = "The Rich Display definition of field " + l + " does not match the Green-Screen DDS definition.\n\n";
                        o += "Rich Display JSON Field:";
                        o += "\n  Name: " + i.fieldName;
                        o += "\n  Type: " + i.dataType;
                        o += q.fq ? "\n  Length: " + q.fq : "\n  Length: " + (i.dataLength || "");
                        if (q.xg) {
                            q.xg = q.xg.split("'");
                            q.xg = q.xg.join("");
                            o += "\n  Override Type: " + q.xg
                        } else o += "\n  Override Type: ";
                        o += q.mp ? "\n  Decimals: " + q.mp : "\n  Decimals: " + (i.decPos || "");
                        o += q.ref ? "\n  Reference: " + Zb(q.ref) : "\n  Reference: ";
                        o += "\n\n";
                        o += "Green-Screen DDS Field:";
                        o += "\n  Name: " + k.name;
                        o += k.en ? "\n  DDS Data Type: reference" : "\n  DDS Data Type: " + k.dataType;
                        o += k.gq ? "\n  Length: " + k.gq + k.dataLength : "\n  Length: " + (k.dataLength || "");
                        o += k.en && k.dataType ? "\n  Override Type: " + k.dataType : "\n  Override Type: ";
                        o += k.np ? "\n  Decimals: +" + k.np + k.decPos : "\n  Decimals: " + (k.decPos || "");
                        o += k.Jq ? "\n  Reference: " + k.Jq : "\n  Reference: ";
                        if (pui.cnv.pn) pui.cnv.Ra.add(o, 10); else return {msg: o, In: l}
                    }
                }
                if (!s) {
                    f++;
                    if (e != "") e += "&";
                    e += "fld" + c + "," + f + "=" + encodeURIComponent(l);
                    o = i.dataLength;
                    s = "A";
                    switch (i.dataType) {
                        case "char":
                            break;
                        case "graphic":
                            s = "G";
                            break;
                        case "zoned":
                            s =
                                "S";
                            break;
                        case "indicator":
                            o = "1";
                            break;
                        case "floating":
                            s = "F";
                            break;
                        case "date":
                            s = "L";
                            break;
                        case "time":
                            s = "T";
                            break;
                        case "timestamp":
                            s = "Z";
                            break;
                        case "reference":
                            s = "R";
                            break
                    }
                    e += "&typ" + c + "," + f + "=" + encodeURIComponent(s);
                    if (i.dataType == "reference" && i.refField != null && i.refField != "" && i.refField.toLowerCase() != "undefined") {
                        o = S.Ou(i.refField);
                        s = o.ref;
                        k = o.fq;
                        q = o.mp;
                        t = "";
                        if (o.xg) {
                            t = o.xg.split("'");
                            t = t.join("")
                        }
                        if (s != "") e += "&reffld" + c + "," + f + "=" + encodeURIComponent(s);
                        if (t != "") e += "&ovrtyp" + c + "," + f + "=" + encodeURIComponent(t);
                        if (k != "") e += "&len" + c + "," + f + "=" + encodeURIComponent(k);
                        if (q != "") e += "&dec" + c + "," + f + "=" + encodeURIComponent(q)
                    } else {
                        if (o != null && o != "undefined") e += "&len" + c + "," + f + "=" + encodeURIComponent(o);
                        if (i.decPos != null && i.decPos != "undefined") e += "&dec" + c + "," + f + "=" + encodeURIComponent(i.decPos)
                    }
                    s = S.hp(i.keywords);
                    pui.designer.Ea && i.longName != null && s.push("ALIAS(" + S.Sb(i.longName) + ")");
                    i = false;
                    if (s != null) for (o = 0; o < s.length; o++) {
                        k = s[o];
                        if (k.toUpperCase() === "OUTPUT") i = true; else e += "&keyword" + c + "," + f + "," + (o + 1) + "=" + encodeURIComponent(k)
                    }
                    if (i) e +=
                        "&output" + c + "," + f + "=Y";
                    if (r) e += "&resp" + c + "," + f + "=Y"
                }
            }
        }
        return e
    };
    this.destroy = function () {
        a = b = null
    };
    this.Rp = function (c) {
        return pui.designer.hz === true || pui.designer.Ym != null && pui.designer.Ym[c] === true
    }
};
var S = {};
S.ZK = 600;
S.UK = 701;
S.kw = 700;
S.iw = 750;
S.IM = 775;
S.aL = 800;
S.XK = 900;
S.$K = 10100;
S.jw = 10100;
S.pC = 10100;
S.PK = 10110;
S.VK = 10120;
S.TK = 10120;
S.YK = 10120;
S.SK = 10130;
S.RK = 10140;
S.QK = 10150;
S.WK = 10160;
S.bL = 10170;
S.W = function (b, a, c) {
    if (b != null) window.addEventListener ? b.addEventListener(a, c, false) : b.attachEvent("on" + a, c)
};
S.wd = function (b, a, c) {
    window.removeEventListener ? b.removeEventListener(a, c, false) : b.detachEvent("on" + a, c)
};
S.ua = function (b) {
    if (!b) b = window.event;
    if (window.event) {
        window.event.cancelBubble = true;
        window.event.returnValue = false
    }
    if (b.preventDefault) {
        b.cancelBubble = true;
        b.preventDefault()
    }
};
S.getX = function (b) {
    var a = 0;
    if (window.event != null) {
        if (window.event.clientX != null) a += window.event.clientX;
        if (document.documentElement != null && document.documentElement.scrollLeft != null) a += document.documentElement.scrollLeft;
        if (document.body != null && document.body.scrollLeft != null) a += document.body.scrollLeft
    } else if (b != null) {
        if (b.clientX != null) a += b.clientX;
        if (b.scrollX != null) a += b.scrollX
    }
    return a
};
S.getY = function (b) {
    var a = 0;
    if (window.event != null) {
        if (window.event.clientY != null) a += window.event.clientY;
        if (document.documentElement != null && document.documentElement.scrollTop != null) a += document.documentElement.scrollTop;
        if (document.body != null && document.body.scrollTop != null) a += document.body.scrollTop
    } else if (b != null) {
        if (b.clientY != null) a += b.clientY;
        if (b.scrollY != null) a += b.scrollY
    }
    return a
};
S.getTarget = function (b) {
    var a;
    if (!b) b = window.event;
    if (b.target) a = b.target; else if (b.srcElement) a = b.srcElement;
    if (a.nodeType == 3) a = a.parentNode;
    return a
};
S.MH = function (b, a) {
    if (a == null) a = true;
    var c = "{" + (a ? " " : ""), d = 0;
    for (var e in b) {
        var f = b[e], h;
        if (!(typeof f == "object" && f.constructor != Array)) {
            d++;
            if (typeof f == "object" && f.constructor == Array) {
                h = "[";
                for (var g = 0; g < f.length; g++) {
                    var l = f[g];
                    if (typeof l == "number") l = String(l); else {
                        l = l.replace(/\\/g, "\\\\");
                        l = l.replace(/"/g, '\\"');
                        l = '"' + l + '"'
                    }
                    if (g != 0) h += ",";
                    h += l
                }
                h += "]"
            } else {
                h = String(f);
                h = h.replace(/\\/g, "\\\\");
                h = h.replace(/"/g, '\\"');
                h = '"' + h + '"'
            }
            if (d > 1) c += "," + (a ? " " : "");
            c += '"' + e + '":' + (a ? " " : "") + h
        }
    }
    c += (a ? " " :
        "") + "}";
    return c
};
S.wa = function (b, a) {
    if (b == null || b == "" || b == "[Unnamed Screen]" || b == "[Unnamed Format]") return "cannot be blank.";
    var c = b.substr(0, 1), d = b.substr(b.length - 1, 1);
    if (c === '"' && d === '"' && a != "field" && a != "format") {
        if (b.length < 3) return "cannot be blank.";
        for (c = 1; c < b.length - 1; c++) {
            d = b.substr(c, 1);
            if (d === "*" || d === "?" || d === "'" || d === '"' || d === "/") return "contains invalid characters."
        }
    } else {
        if (typeof pui["valid LOMFF name 1st chars"] != "object" || pui["valid LOMFF name 1st chars"].length < 1) pui["valid LOMFF name 1st chars"] = ["#",
            "@", "$"];
        if (typeof pui["valid LOM name next chars"] != "object" || pui["valid LOM name next chars"].length < 1) pui["valid LOM name next chars"] = ["#", "@", "$", "_", "."];
        if (typeof pui["valid FF name next chars"] != "object" || pui["valid FF name next chars"].length < 1) pui["valid FF name next chars"] = ["#", "@", "$", "_"];
        if ((c < "A" || c > "Z") && (c < "a" || c > "z") && pui.ic(pui["valid LOMFF name 1st chars"], c) == -1) return "must start with an alpha character or " + pui["valid LOMFF name 1st chars"].join(", ");
        for (c = 1; c < b.length; c++) {
            d =
                b.substr(c, 1);
            if ((d < "A" || d > "Z") && (d < "a" || d > "z") && (d < "0" || d > "9") && ((a == "library" || a == "object" || a == "member") && pui.ic(pui["valid LOM name next chars"], d) == -1 || (a == "field" || a == "format") && pui.ic(pui["valid FF name next chars"], d) == -1)) return "contains invalid characters.\n" + d
        }
    }
    if (b.length > 10) {
        c = true;
        if (pui.viewdesigner || pui.nodedesigner) if (a == "field" || a == "format") c = false;
        if (pui.designer.Ea) if (a == "field" && b.length <= 30) c = false;
        if (c) return "is too long."
    }
    return ""
};
S.bw = function (b, a) {
    if (a == null) a = "library";
    var c = false;
    if (a == "*LIBL") {
        a = "library";
        c = true
    }
    var d = b.split("/");
    if (d.length > 2) return "has too many parts.";
    if (d.length == 1) return S.wa(d[0], "object");
    if (d.length == 2) return S.wa(d[0], "library") != "" && (d[0] != "*LIBL" || !c) ? "contains an invalid qualified " + a + " name." : S.wa(d[1], "object");
    return "is invalid."
};
S.alert = function (b) {
    pui.alert(b)
};
S.vA = function (b) {
    (new Image).src = b
};
S.tI = function (b, a, c) {
    for (var d = 0; d < a.length; d++) {
        var e = b + a[d];
        if (c != null) e += c;
        S.vA(e)
    }
};
S.hp = function (b) {
    for (var a = [], c = 0; c < b.length; c++) a.push(b[c]);
    return a
};
S.si = function () {
    if (pui.viewdesigner) return false;
    if (pui.nodedesigner) return false;
    if (pui.ja) return false;
    if (Q != "dspf") return false;
    if (pui.ka == null) return false;
    for (var b = 0; b < pui.ka.length; b++) if (pui.ka[b] == "ALLINONE") return true;
    return false
};
S.Nt = function (b) {
    for (var a = [], c = "", d = 0; d < pui.ka.length; d++) {
        var e = pui.ka[d], f = e.split("(");
        e = f[0];
        if (e == "REF" && f.length >= 2) {
            b = f[1].split(")")[0];
            b = Zb(b.toUpperCase());
            d = b.split(" ");
            if (d.length > 1) {
                b = d[0];
                for (e = 1; e < d.length; e++) if (d[e].length > 0) {
                    c = d[e];
                    break
                }
            }
            break
        }
    }
    a.push(b);
    c.length > 0 && a.push(c);
    return a
};
S.ak = function () {
    pui.sl = [];
    if (pui.ka != null) {
        var b = "";
        b = S.Nt("");
        var a = b[0], c = b.length == 2 ? b[1] : "";
        if (a != "") {
            a = a.split("/");
            if (a.length == 2) {
                b = a[0];
                a = a[1]
            } else {
                a = a[0];
                b = ""
            }
            if (a != "") {
                var d;
                if (Q == "genie") d = cc("PUI0009101.PGM");
                if (Q == "dspf") d = cc("PUI0009101.PGM", null, true);
                var e = new pui.Ajax(d);
                e.async = true;
                e.method = "post";
                e.postData = "file=" + encodeURIComponent(a);
                e.postData += "&library=" + encodeURIComponent(b);
                if (Q == "genie") e.postData += "&AUTH=" + GENIE_AUTH;
                e.postData += "&context=" + Q;
                if (c.length > 0) e.postData +=
                    "&rcdfmt=" + c;
                e.suppressAlert = true;
                e.onready = function () {
                    var f, h;
                    if (e.Vc() != 200) h = "HTTP " + e.Vc() + " - " + e.xj() + "."; else {
                        try {
                            f = eval("(" + e.jc() + ")")
                        } catch (g) {
                            h = "The server response is missing or invalid."
                        }
                        if (h == null && f.success != true) h = f.errorText
                    }
                    if (h != null) console.log("Unable to retrieve field listing:\n" + h); else pui.sl = f.fields
                };
                pui.xd != true && e.send()
            }
        }
    }
};
S.Fk = function (b, a, c) {
    var d = document.createElement("div");
    d.style.position = "absolute";
    d.style.width = "16px";
    d.style.height = "18px";
    d.style.fontSize = "0px";
    d.style.overflow = "hidden";
    d.style.backgroundImage = "url('" + pui.normalizeURL("/profoundui/proddata/images/icons/") + b + ".gif')";
    d.style.backgroundRepeat = "no-repeat";
    d.style.cursor = "pointer";
    d.title = a;
    d.style.color = "white";
    d.style.padding = "0px";
    d.onmousedown = function (e) {
        S.ua(e)
    };
    c.appendChild(d);
    return d
};
S.Ou = function (b) {
    var a = "", c = "", d = "", e = "", f = "", h = "";
    a = ["M", "A", "X", "W", "N", "D", "I", "Y", "S", "F", "L", "T", "Z"];
    b = b.split(" ");
    pui.ka != null && S.Nt("");
    for (var g = 0; g < b.length; g++) {
        var l = b[g], n = l.substr(0, 1);
        if (l.indexOf("'") != -1) {
            if ((n = l.split("'").join("")) && pui.ic(a, n) != -1) if (e == "") e = l
        } else if (n >= "0" && n <= "9" || n == "-" || n == "+") if (d == "" && e == "D") d = l; else if (c == "") c = l; else {
            if (d == "") d = l
        } else if (h == "") h = l; else if (f == "") f = l
    }
    a = h + " " + f;
    return {ref: a, fq: c, mp: d, xg: e, file: f, field: h}
};
S.Sb = function (b) {
    var a = pui["LOMFF chars to not uppercase"];
    if (typeof a != "object" || a == null || a.length < 1) return b.toUpperCase();
    for (var c = "", d = 0; d < b.length; d++) {
        var e = b.charAt(d);
        c += pui.ic(a, e) >= 0 ? e : String(e).toUpperCase()
    }
    return c
};
S.hK = function (b) {
    var a = {
        integer: "zoned",
        "int": "zoned",
        smallint: "zoned",
        tinyint: "zoned",
        mediumint: "zoned",
        bigint: "zoned",
        decimal: "zoned",
        numeric: "zoned",
        "float": "floating",
        "double": "floating",
        date: "date",
        time: "time",
        timestamp: "timestamp",
        timestmp: "timestamp"
    }[b] || "char";
    if (pui.viewdesigner || pui.nodedesigner) if (b === "varchar") a = "varchar";
    return a
};
S.Ct = function (b) {
    var a = b.type;
    if (a == "timestmp") a = "timestamp"; else if (a == "varg") a = "vargraphic";
    var c = a;
    if (a != "date" && a != "time" && a != "timestamp") {
        a = b.length;
        if (a != null && a > 0) {
            c += "(" + a;
            b = b.decimals;
            if (b != null && b != 0) c += "," + b;
            c += ")"
        }
    }
    return c
};
S.zp = function (b) {
    var a = {}, c = b.name;
    if (pui.pjsDefaultMode === "compatibility") c = c.toLowerCase();
    if (b.sysName) {
        a.fieldName = b.sysName;
        a.longName = c
    } else {
        a.fieldName = c;
        if (c.length > 10) a.longName = c
    }
    a.designValue = "[" + c + "]";
    c = S.hK(b.type);
    a.refField = (b.sysName || b.name) + " " + (b.sysTable || b.table);
    a.dataType = "reference";
    if (c == "char" || c == "varchar") {
        a.trimLeading = "false";
        a.trimTrailing = "true";
        a.blankFill = "false";
        a.rjZeroFill = "false";
        a.formatting = "Text";
        a.textTransform = "none"
    } else if (c == "zoned" || c == "floating") {
        a.numSep =
            "false";
        a.zeroBalance = "false";
        a.numBlankFill = "false";
        a.zeroFill = "false";
        a.noExtraSpaces = "false";
        a.curSym = "";
        a.formatting = "Number";
        a.negNum = "-999.00";
        a.units = ""
    } else if (c == "date") {
        a.formatting = "Date";
        a.dateFormat = "";
        a.locale = "en_US"
    } else if (c == "time") {
        a.formatting = "Time";
        a.timeFormat = "";
        a.locale = "en_US"
    } else if (c == "timestamp") {
        a.formatting = "Time Stamp";
        a.timeStampFormat = "m/d/y g:i A";
        a.locale = "en_US"
    }
    return a
};
var rd;
pui.Zx = function (b, a) {
    if (a == null) a = {};
    Va.push({name: "[Unnamed Screen]", oc: false, l: 0});
    pui.designer.currentDisplay = b.currentDisplay = {};
    R = b.toolbar = new pui.designer.ik;
    rd = b.vd = new pui.designer.UC;
    rd.toolbar = R;
    R.If.onclick();
    rd.add(R.designer, b);
    var c = a.library, d = a.file, e = a.member, f = a.objlib, h = a.savelib, g = a.convert, l = a.mode, n = a.ifsfile,
        o = a.retain;
    o = o == "Y" || o == "1" || o == "true" ? true : false;
    var i = a.appgen;
    if (c != null && d != null && e != null) {
        c = c.toUpperCase();
        d = d.toUpperCase();
        e = e.toUpperCase();
        if (g == "true") {
            screenMask.msg = "Converting...";
            screenMask.show();
            jc({
                url: cc("PUI0001107.pgm"),
                method: "post",
                params: {library: c, file: d, member: e, dds: o ? "Y" : "N"},
                handler: function (s, t) {
                    if (s == null) {
                        var u = "Server response is invalid.";
                        if (t != null && t.description != null) u += " " + t.description + "."; else if (t != null && t.message != null) u += " " + t.message + ".";
                        screenMask.hide();
                        pui.alert(u)
                    } else if (s.success != true && s.success != "true") {
                        screenMask.hide();
                        pui.alert(s.msg)
                    } else {
                        u = a.theme;
                        if (u == null) u = "Hybrid";
                        pui.cnv.themes.setTheme(u);
                        pui.cnv.greenScreenDisplay = s;
                        pui.cnv.mh =
                            e;
                        pui.cnv.Tn = o;
                        pui.cnv.Xs();
                        o && pui.cnv.Ja.dj("ALLINONE");
                        Ext.getCmp("RecFormatsTabPanel").setActiveTab(0);
                        R.nn(pui.cnv.Ja.Om());
                        rd.zs();
                        pui.cnv.Ud.qs();
                        pui.ka = pui.cnv.Ja.Jt();
                        S.ak();
                        pui.designer.Ea = false;
                        if (pui.cnv.Ea) pui.designer.Ea = true;
                        pui.designer.currentDisplay.library = null;
                        pui.designer.currentDisplay.file = null;
                        pui.designer.currentDisplay.member = null;
                        pui.designer.currentDisplay.text = null;
                        pui.designer.currentDisplay.comments = null;
                        pui.designer.currentDisplay.ifsFile = null;
                        pui.designer.currentDisplay.Eb =
                            null;
                        pui.designer.currentDisplay.wf = null;
                        pui.designer.currentDisplay.cf = f;
                        pui.designer.currentDisplay.lj = true;
                        pui.designer.currentDisplay.gp = e;
                        pui.designer.currentDisplay.Zs = s.text;
                        pui.designer.C.formats = {};
                        if (o) if (s.dds != null && s.dds.length > 0) {
                            pui.designer.C.split(s.dds);
                            setTimeout(function () {
                                rd.gm()
                            }, 10)
                        }
                        b.C = {
                            formats: pui.designer.C.formats,
                            comments: pui.designer.C.comments,
                            global: pui.designer.C.global
                        };
                        b.ka = pui.ka;
                        rd.Ce();
                        pui.ide.Qb();
                        screenMask.hide();
                        pui.ide.K.yx();
                        Kd.set("cnvlibrary", c);
                        Kd.save();
                        if (h != null) pui.designer.currentDisplay.library = h.toUpperCase()
                    }
                }
            })
        } else {
            var r = {
                library: c, file: d, member: e, onsuccess: function () {
                    b.ka = pui.ka;
                    b.C = {
                        formats: pui.designer.C.formats,
                        comments: pui.designer.C.comments,
                        global: pui.designer.C.global
                    };
                    Kd.set("file", d);
                    Kd.set("library", c);
                    Kd.save();
                    if (f != null) pui.designer.currentDisplay.cf = f
                }
            };
            R.uj(r, function () {
                R.open(r)
            })
        }
    } else if (n != null) {
        r = {
            url: n, ifsFile: n, onsuccess: function () {
                Kd.set("ifsPath", n);
                Kd.save()
            }
        };
        R.uj(r, function () {
            R.open(r)
        })
    } else {
        R.$H();
        if (g == "true") {
            var k =
                a.theme;
            if (k != null) {
                Kd.set("cnvtheme", k);
                Kd.save()
            }
            setTimeout(function () {
                pui.ide.K.Bx()
            }, 1E3)
        }
        g == "mass" && setTimeout(function () {
            var s = a.theme;
            if (s == null) s = "Hybrid";
            pui.cnv.themes.setTheme(s);
            pui.cnv.wu(o)
        }, 1);
        l == "merge" && setTimeout(function () {
            pui.cnv.Oz()
        }, 1);
        pui.xd == true && pui.iM();
        if (i == "1" || i == "Y" || i == "true") {
            var q = window.parent.appgen.replaceDSPF !== false;
            g = window.parent.appgen.richDisplay;
            g != null && R.open({
                $e: g,
                library: a.appgenlibrary,
                file: a.appgenfile,
                member: a.appgenmember,
                sH: true,
                onsuccess: function () {
                    R.save({
                        library: a.appgenlibrary,
                        file: a.appgenfile,
                        member: a.appgenmember,
                        text: a.appgentext,
                        comments: "",
                        replace: q,
                        wf: a.appgenmember,
                        cf: a.appgenlibrary,
                        compile: "Y",
                        onsuccess: function () {
                            window.parent.appgen.onRichDisplayCompile({success: true})
                        },
                        onfail: function (s) {
                            window.parent.appgen.onRichDisplayCompile({success: false, message: s})
                        }
                    })
                }
            })
        }
    }
    R.hide();
    S.tI("/profoundui/proddata/images/icons/editbar/", ["B", "B-sel", "I", "I-sel", "left-align", "left-align-sel", "center", "center-sel", "right-align", "right-align-sel", "font-up", "font-down", "clear",
        "color", "left-border", "right-border", "separator"], ".png");
    pui.closeMessage = "Unsaved changes to the display file will be lost.";
    pui.xd != true && pui.us()
};
pui.Gf = function (b, a, c, d) {
    c.style.top = parseInt(b.style.height) + 7 + "px";
    b.style.height = parseInt(b.style.height) + 7 + "px";
    if (pui.flatlook) {
        a.style.backgroundColor = "#6BADF6";
        a.style.color = "#31373d";
        a.style.paddingTop = "4px";
        a.style.height = "25px";
        a.style.fontSize = "13px";
        a.style.fontWeight = "normal";
        b.style.border = "2px solid #4598F4";
        c.style.backgroundColor = "#F8F9F9"
    } else {
        b.style.borderRadius = "5px";
        b.style.boxShadow = "6px 6px 12px rgba(50, 66, 64, 0.67)";
        a.style.backgroundImage = "url(/profoundui/proddata/images/header-gradient.png)";
        a.style.color = "#15428B";
        a.style.paddingTop = "4px";
        a.style.height = "25px";
        a.style.fontSize = "11px";
        b.style.border = "3px solid #b0cbef";
        c.style.backgroundColor = "#dfe8f6"
    }
    c.style.top = "27px";
    b = document.createElement("div");
    var e = document.createElement("div");
    b.style.position = "absolute";
    b.style.top = "3px";
    b.style.right = "10px";
    b.style.width = "15px";
    b.style.height = "15px";
    b.style.cursor = "pointer";
    if (pui.flatlook) {
        b.onmousedown = function () {
            e.style.backgroundImage = "url(/profoundui/proddata/images/buttons/close/x5_click.png)"
        };
        b.onmouseup = function () {
            e.style.backgroundImage = "url(/profoundui/proddata/images/buttons/close/x5.png)"
        }
    } else {
        b.onmouseover = function () {
            e.style.backgroundImage = "url(/profoundui/proddata/images/buttons/close/x1_hover.png)"
        };
        b.onmouseout = function () {
            e.style.backgroundImage = "url(/profoundui/proddata/images/buttons/close/x1.png)"
        }
    }
    b.onclick = function () {
        d()
    };
    e.style.backgroundImage = pui.flatlook ? "url(/profoundui/proddata/images/buttons/close/x5.png)" : "url(/profoundui/proddata/images/buttons/close/x1.png)";
    e.style.backgroundRepeat = "no-repeat";
    e.style.position = "absolute";
    e.style.top = "0px";
    e.style.left = "0px";
    e.style.width = "16px";
    e.style.height = "16px";
    a.innerHTML = "";
    b.appendChild(e);
    c = document.createElement("span");
    a.appendChild(c);
    a.appendChild(b);
    return c
};
pui.Ns = function (b) {
    b || (b = Kd.get("theme", pui.isCloud ? "dark" : "light"));
    switch (b) {
        case "dark":
            window.monaco && monaco.editor.setTheme("vs-dark");
            break;
        default:
            window.monaco && monaco.editor.setTheme("vs");
            break
    }
    Kd.set("theme", b);
    Kd.save()
};
pui.pE = function () {
    var b = Ext.Window.prototype.setActive, a = null;
    setTimeout(pui.Ns, 250);
    Ext.override(Ext.Window, {
        cls: "blue-window-active", shadow: false, setActive: function (c) {
            b.call(this, c);
            if (c) {
                a && a != this && a.el && a.removeClass("active-window");
                a = this;
                a.el && a.addClass("active-window")
            }
        }
    })
};
pui.designer.recentFiles = [];
pui.designer.$u = "pui-recent-files";
if (pui.ja) pui.designer.$u += "-universal";
pui.designer.Bl = function (b, a) {
    function c(o) {
        if (!o) return false;
        if (o.constructor === Object) {
            if (Object.keys(o).length === 0) return false;
            for (var i in o) if (o[i]) return true
        }
        return false
    }

    if (!pui.isCloud) {
        var d, e, f, h, g;
        g = false;
        if (b == null) {
            d = pui.designer.currentDisplay.library;
            e = pui.designer.currentDisplay.file;
            f = pui.designer.currentDisplay.member;
            h = pui.designer.currentDisplay.ifsFile;
            g = c(pui.designer.currentDisplay)
        }
        if (h == null && b == null) {
            if (d == null || d == "") return;
            if (e == null || e == "") return;
            if (f == null || f == "") return
        }
        for (var l =
            0; l < pui.designer.recentFiles.length; l++) {
            var n = pui.designer.recentFiles[l];
            n.library == d && n.file == e && n.member == f && n.ifsfile == h && n.textfile == b && pui.designer.recentFiles.splice(l, 1);
            n.textfile && n.textdir && n.textdir + n.textfile === a + b && pui.designer.recentFiles.splice(l, 1)
        }
        pui.designer.recentFiles.push({library: d, file: e, member: f, ifsfile: h, textfile: b, textdir: a, isRDF: g});
        pui.designer.recentFiles.length > 20 && pui.designer.recentFiles.splice(0, 1);
        pui.designer.nJ()
    }
};
pui.designer.nJ = function () {
    localStorage.setItem(pui.designer.$u, JSON.stringify(pui.designer.recentFiles))
};
pui.designer.LH = function () {
    try {
        pui.designer.recentFiles = JSON.parse(localStorage[pui.designer.$u])
    } catch (b) {
        pui.designer.recentFiles = []
    }
    if (!Array.isArray(pui.designer.recentFiles)) pui.designer.recentFiles = []
};
pui.designer.MD = function () {
    var b = [], a = {};
    this.IL = function () {
        return b
    };
    this.oy = function (c) {
        for (var d = [], e = 0; e < b.length; e++) {
            var f = b[e];
            f.category == c && d.push(f)
        }
        return d
    };
    this.ny = function () {
        var c = [];
        for (var d in a) c.push(d);
        return c
    };
    this.add = function (c) {
        if (c.cls == null) c.cls = "widget-node";
        if (c.leaf == null) c.leaf = true;
        if (c.category != null) {
            a[c.category] = true;
            b.push(c);
            return c
        }
    };
    this.remove = function (c) {
        if (c.text != null) if (c.category != null) for (var d = 0; d < b.length; d++) {
            var e = b[d];
            if (c.text == e.text && c.category ==
                e.category) {
                b.splice(d, 1);
                return e
            }
        }
    };
    this.$D = function (c) {
        a[c] = true
    }
};
pui.toolbox = new pui.designer.MD;
pui.toolbox.add({
    category: "Common",
    widget: "output field",
    text: "Label",
    newId: "Label",
    icon: "/profoundui/proddata/images/icons/output_field.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 152,
    proxyHTML: '<div style="border: 1px dotted #15428B; font-size: 14px; font-family: Trebuchet MS; width: 150px;" class="label">Label:</div>',
    leaf: true,
    defaults: {value: "Label:", width: "150px", "css class": "label"}
});
if (Q == "dspf") pui.toolbox.add({
    category: "Common",
    widget: "output field",
    text: "Dynamic Output Field",
    icon: "/profoundui/proddata/images/icons/dynamic_output_field.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: pui.viewdesigner ? 40 : 70,
    proxyHTML: function () {
        if (R != null) {
            var b = R.designer.D.Tm(), a = document.createElement("div");
            a.style.border = "1px dotted #15428B";
            a.style.fontFamily = "Trebuchet MS";
            a.style.fontSize = "14px";
            a.innerHTML = "[" + b + "]";
            return a
        }
    },
    leaf: true,
    defaults: {
        value: pui.viewdesigner ? "[field1]" :
            "[Field0001]", "css class": "outputField"
    }
});
pui.toolbox.add({
    category: "Common",
    widget: "textbox",
    text: "Textbox",
    icon: "/profoundui/proddata/images/icons/textbox.png",
    cls: "widget-node",
    proxyHeight: 18,
    proxyWidth: 164,
    proxyHTML: '<input type="text" class="input" style="cursor: default;" />',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Common",
    widget: "select box",
    text: "Dropdown Box",
    newId: "Dropdown",
    icon: "/profoundui/proddata/images/icons/dropdown_box.png",
    cls: "widget-node",
    proxyHeight: 22,
    proxyWidth: 76,
    proxyHTML: "<select><option>Option 1</option><option>Option 2</option></select>",
    leaf: true,
    defaults: {choices: "Option 1,Option 2"}
});
pui.toolbox.add({
    category: "Common",
    widget: "button",
    text: "Button",
    icon: "/profoundui/proddata/images/icons/button.png",
    cls: "widget-node",
    proxyHeight: 23,
    proxyWidth: 100,
    proxyHTML: '<input type="button" class="button" value="Click Here" style="width: 100px">',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Common",
    widget: "checkbox",
    text: "Checkbox",
    icon: "/profoundui/proddata/images/icons/checkbox.png",
    cls: "widget-node",
    proxyHeight: 13,
    proxyWidth: 13,
    proxyHTML: '<input type="checkbox" checked>&nbsp;&nbsp;<span style="font-size: 14px; font-family: Trebuchet MS">Checkbox</span>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Common",
    widget: "radio button",
    text: "Radio Button",
    icon: "/profoundui/proddata/images/icons/radio_button.png",
    cls: "widget-node",
    proxyHeight: 13,
    proxyWidth: 13,
    proxyHTML: '<input type="radio">&nbsp;&nbsp;<span style="font-size: 14px; font-family: Trebuchet MS">Radio Button</span>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Common",
    widget: "combo box",
    text: "Combo Box",
    newId: "Combo",
    icon: "/profoundui/proddata/images/combo/icon.png",
    cls: "widget-node",
    proxyHeight: 22,
    proxyWidth: 82,
    proxyHTML: '<div style="overflow' + (pui.is_old_ie && pui.is_quirksmode ? "-y" : "") + ": hidden; border: 1px solid #7F9DB9; width: 80px; background-color: #ffffff; height: " + (pui.is_quirksmode && pui.is_old_ie ? "23" : "20") + 'px;" class="input"><img src="/profoundui/proddata/images/combo/down_arrow.gif" style="margin-left: 63px; top: 0px; right: 0px; width: 18px; height: 20px;"></div>',
    leaf: true,
    defaults: {"font family": "Trebuchet MS"}
});
pui.toolbox.add({
    category: "Common",
    widget: "date field",
    text: "Date Field",
    icon: "/profoundui/proddata/images/icons/date_field.png",
    cls: "widget-node",
    proxyHeight: 18,
    proxyWidth: 102,
    proxyHTML: '<input class="input" style="width: 100px; cursor: default;" type="text"> <img style="border-style: none; position: relative; top: 3px;" src="/profoundui/proddata/images/cal.gif"/>',
    leaf: true,
    defaults: {width: "100px"}
});
pui.toolbox.add({
    category: "Common",
    widget: "hyperlink",
    text: "Hyperlink",
    icon: "/profoundui/proddata/images/icons/hyperlink.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 65,
    proxyHTML: '<a style="background-color: #ffffff; border-style: none; color: #0066CC; font-size: 14px; text-decoration: underline; font-family: Trebuchet MS" href="javascript:void(0)">Click Here</a>',
    leaf: true,
    defaults: {"css class": "link"}
});
pui.toolbox.add({
    category: "Common",
    widget: "image",
    text: "Image",
    icon: "/profoundui/proddata/images/icons/image.png",
    cls: "widget-node",
    proxyHeight: 70,
    proxyWidth: 90,
    proxyHTML: '<img src="/profoundui/proddata/images/image.png" style="height: 70px; width: 90px;">',
    leaf: true,
    defaults: {"image source": "/profoundui/proddata/images/image.png"}
});
pui.toolbox.add({
    category: "Common",
    widget: "icon",
    text: "Icon",
    icon: "/profoundui/proddata/images/icons/face_icon.svg",
    cls: "widget-node",
    proxyHeight: 32,
    proxyWidth: 32,
    proxyHTML: '<i class="pui-material-icons" style="font-size:32px;">face</i>',
    leaf: true,
    defaults: {icon: "material:face"}
});
pui.toolbox.add({
    category: "Common",
    widget: "grid",
    text: Q == "dspf" && !pui.viewdesigner && !pui.nodedesigner ? "Subfile Grid" : "Grid",
    icon: "/profoundui/proddata/images/grids/crystal/icon.png",
    cls: "widget-node",
    proxyHeight: 182,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/crystal/proxy.png" style="height: 182px; width: 451px;">',
    leaf: true,
    defaults: {"header height": "26", "css class": "crystal-grid"}
});
if (Q == "dspf") {
    pui.toolbox.add({
        category: "Common",
        widget: "layout",
        text: "CSS Panel Layout",
        icon: "/profoundui/proddata/images/buttons/mobile/csspanel.png",
        cls: "widget-node",
        proxyHeight: 300,
        proxyWidth: 200,
        proxyHTML: pui.layout.template.getProxy,
        leaf: true,
        defaults: {
            template: "css panel",
            "header text": "Panel Header",
            "header theme": "B - Blue",
            "body theme": "C - Gray",
            height: "300px",
            width: "200px",
            "z index": "8"
        }
    });
    pui.toolbox.add({
        category: "Common",
        widget: "layout",
        text: "Tab Panel Layout",
        icon: "/profoundui/proddata/images/tabs/glass/icon.png",
        cls: "widget-node",
        proxyHeight: 202,
        proxyWidth: 302,
        proxyHTML: '<img src="/profoundui/proddata/images/tabs/glass/proxy.png" style="height: 202px; width: 302px;">',
        leaf: true,
        defaults: {template: "tab panel", height: "200px", width: "300px", "css class": "Glass"}
    })
} else {
    pui.toolbox.add({
        category: "Common",
        widget: "panel",
        text: "Simple Panel",
        icon: "/profoundui/proddata/images/panels/Simple/icon.png",
        cls: "widget-node",
        proxyHeight: 100,
        proxyWidth: 200,
        proxyHTML: function (b) {
            return pui.widgets.getPanelProxy(b)
        },
        leaf: true,
        defaults: {"panel style": "Simple"}
    });
    pui.toolbox.add({
        category: "Common",
        widget: "tab panel",
        text: "Tab Panel",
        icon: "/profoundui/proddata/images/tabs/glass/icon.png",
        cls: "widget-node",
        proxyHeight: 202,
        proxyWidth: 302,
        proxyHTML: '<img src="/profoundui/proddata/images/tabs/glass/proxy.png" style="height: 202px; width: 302px;">',
        leaf: true,
        defaults: {"tab panel style": "Glass"}
    })
}
pui.toolbox.add({
    category: "Common",
    widget: "output field",
    text: "Heading",
    newId: "Heading",
    icon: "/profoundui/proddata/images/icons/heading.png",
    cls: "widget-node",
    proxyHeight: 28,
    proxyWidth: 79,
    proxyHTML: '<div style="border: 1px dotted #15428B; font-family: Trebuchet MS;" class="heading">Heading</div>',
    leaf: true,
    defaults: {value: "Heading", "css class": "heading"}
});
pui.toolbox.add({
    category: "Common",
    widget: "html container",
    text: "Wrapping Text",
    icon: "/profoundui/proddata/images/icons/output_field.png",
    cls: "widget-node",
    proxyHeight: 77,
    proxyWidth: 342,
    proxyHTML: '<div style="border: 1px dotted #15428B; position: white-space: normal; height: 75px; width: 340px; font-size: 14px; font-family: Trebuchet MS;">Lorem ipsum dolor sit amet, consectetur adipisicing <br/>elit, sed do eiusmod tempor incididunt ut labore et <br/>dolore magna aliqua.</div>',
    leaf: true,
    defaults: {
        html: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
        height: "75px", width: "340px"
    }
});
pui.toolbox.add({
    category: "Common",
    widget: "text area",
    text: "Text Area",
    icon: "/profoundui/proddata/images/icons/text_area.png",
    cls: "widget-node",
    proxyHeight: 38,
    proxyWidth: 183,
    proxyHTML: '<textarea style="cursor: default;"></textarea>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Gradient Buttons",
    widget: "button",
    text: "Default",
    icon: "/profoundui/proddata/images/icons/button.png",
    cls: "widget-node",
    proxyHeight: 23,
    proxyWidth: 100,
    proxyHTML: '<input type="button" class="button" value="Click Here" style="width: 100px">',
    leaf: true,
    defaults: {}
});
for (var Od in pui.widgets.buttonStyles) {
    var Pd = pui.widgets.buttonStyles[Od], Qd = 100;
    if (Pd.width != null) Qd = Pd.width;
    var Rd = pui.toolbox.add({
        category: "Gradient Buttons",
        widget: "styled button",
        text: Od,
        newId: "Button",
        icon: "/profoundui/proddata/images/buttons/" + Od + "/icon.png",
        cls: "widget-node",
        proxyHeight: 23,
        proxyWidth: Qd,
        proxyHTML: function (b) {
            return pui.widgets.getStyledButtonProxy(b)
        },
        leaf: true,
        defaults: {"button style": Od}
    });
    if (Rd != null && Rd.defaults != null) {
        if (Pd.textColor != null) Rd.defaults.color = Pd.textColor;
        if (Pd.width != null) Rd.defaults.width = Pd.width + "px"
    }
    Od = Pd = Rd = null
}
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "View",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/view.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#4193d0; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/view.png"/> View</button>',
    leaf: true,
    defaults: {
        color: "#4193d0", value: "View", "image source": "/profoundui/proddata/images/icons/view.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "Change",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/change.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#c8904e; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/change.png"/> Change</button>',
    leaf: true,
    defaults: {
        color: "#c8904e", value: "Change", "image source": "/profoundui/proddata/images/icons/change.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "Add",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/add.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#70b859; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/add.png"/> Add</button>',
    leaf: true,
    defaults: {
        color: "#70b859", value: "Add", "image source": "/profoundui/proddata/images/icons/add.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "Delete",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/delete.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#a21111; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/delete.png"/> Delete</button>',
    leaf: true,
    defaults: {
        color: "#a21111", value: "Delete", "image source": "/profoundui/proddata/images/icons/delete.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "Accept",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/accept.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#0ca81d; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/accept.png"/> Accept</button>',
    leaf: true,
    defaults: {
        color: "#0ca81d", "image source": "/profoundui/proddata/images/icons/accept.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "Cancel",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/cancel.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#b11919; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/cancel.png"/> Cancel</button>',
    leaf: true,
    defaults: {
        color: "#b11919", value: "Cancel", "image source": "/profoundui/proddata/images/icons/cancel.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "Email",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/email.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-family: Tahoma; font-weight: bold; color:#333333; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/email.png"/> Email</button>',
    leaf: true,
    defaults: {
        color: "#333333", value: "Email", "image source": "/profoundui/proddata/images/icons/email.png",
        "font family": "Tahoma", "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "Next",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/next.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#4193d0; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/next.png"/> Next</button>',
    leaf: true,
    defaults: {
        color: "#4193d0", value: "Next", "image source": "/profoundui/proddata/images/icons/next.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "Previous",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/previous.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#4193d0; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/previous.png"/> Previous</button>',
    leaf: true,
    defaults: {
        color: "#4193d0", value: "Previous", "image source": "/profoundui/proddata/images/icons/previous.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "First",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/first.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#4193d0; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/first.png"/> First</button>',
    leaf: true,
    defaults: {
        color: "#4193d0", value: "First", "image source": "/profoundui/proddata/images/icons/first.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "Graphic Buttons",
    widget: "graphic button",
    text: "Last",
    newId: "Button",
    icon: "/profoundui/proddata/images/icons/last.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<button type="button" style="font-weight: bold; color:#4193d0; width:100px;"><img style="vertical-align: middle; padding-bottom: 2px;" src="/profoundui/proddata/images/icons/last.png"/> Last</button>',
    leaf: true,
    defaults: {
        color: "#4193d0", value: "Last", "image source": "/profoundui/proddata/images/icons/last.png",
        "font weight": "bold", width: !pui.is_quirksmode ? "100px" : null
    }
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Black Mini",
    icon: "/profoundui/proddata/images/buttons/mobile/amini.png",
    proxyHeight: 32,
    proxyWidth: 90,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {"small button": "true", theme: "A - Black", width: "90px"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Blue Mini",
    icon: "/profoundui/proddata/images/buttons/mobile/bmini.png",
    proxyHeight: 32,
    proxyWidth: 90,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {"small button": "true", theme: "B - Blue", width: "90px"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Gray Mini",
    icon: "/profoundui/proddata/images/buttons/mobile/cmini.png",
    proxyHeight: 32,
    proxyWidth: 90,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {"small button": "true", theme: "C - Gray", width: "90px"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Light Gray Mini",
    icon: "/profoundui/proddata/images/buttons/mobile/dmini.png",
    proxyHeight: 32,
    proxyWidth: 90,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {"small button": "true", theme: "D - Light Gray", width: "90px"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Yellow Mini",
    icon: "/profoundui/proddata/images/buttons/mobile/emini.png",
    proxyHeight: 32,
    proxyWidth: 90,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {"small button": "true", theme: "E - Yellow", width: "90px"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Green Mini",
    icon: "/profoundui/proddata/images/buttons/mobile/fmini.png",
    proxyHeight: 32,
    proxyWidth: 90,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {"small button": "true", theme: "F - Green", width: "90px"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Red Mini",
    icon: "/profoundui/proddata/images/buttons/mobile/gmini.png",
    proxyHeight: 32,
    proxyWidth: 90,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {"small button": "true", theme: "G - Red", width: "90px"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Black",
    icon: "/profoundui/proddata/images/buttons/mobile/a.png",
    proxyHeight: 42,
    proxyWidth: 160,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {theme: "A - Black"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Blue",
    icon: "/profoundui/proddata/images/buttons/mobile/b.png",
    proxyHeight: 42,
    proxyWidth: 160,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {theme: "B - Blue"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Gray",
    icon: "/profoundui/proddata/images/buttons/mobile/c.png",
    proxyHeight: 42,
    proxyWidth: 160,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {theme: "C - Gray"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Light Gray",
    icon: "/profoundui/proddata/images/buttons/mobile/d.png",
    proxyHeight: 42,
    proxyWidth: 160,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {theme: "D - Light Gray"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Yellow",
    icon: "/profoundui/proddata/images/buttons/mobile/e.png",
    proxyHeight: 42,
    proxyWidth: 160,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {theme: "E - Yellow"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Green",
    icon: "/profoundui/proddata/images/buttons/mobile/f.png",
    proxyHeight: 42,
    proxyWidth: 160,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {theme: "F - Green"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Red",
    icon: "/profoundui/proddata/images/buttons/mobile/g.png",
    proxyHeight: 42,
    proxyWidth: 160,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {theme: "G - Red"}
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Accept",
    icon: "/profoundui/proddata/images/buttons/mobile/accept.png",
    proxyHeight: 32,
    proxyWidth: 90,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {
        value: "Accept",
        "small button": "true",
        theme: "F - Green",
        "icon position": "left",
        icon: "check",
        width: "90px"
    }
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Cancel",
    icon: "/profoundui/proddata/images/buttons/mobile/cancel.png",
    proxyHeight: 32,
    proxyWidth: 90,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {
        value: "Cancel",
        "small button": "true",
        theme: "G - Red",
        "icon position": "left",
        icon: "delete",
        width: "90px"
    }
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Back",
    icon: "/profoundui/proddata/images/buttons/mobile/back.png",
    proxyHeight: 32,
    proxyWidth: 75,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {
        value: "Back",
        "small button": "true",
        theme: "B - Blue",
        "icon position": "left",
        icon: "back",
        width: "75px"
    }
});
pui.toolbox.add({
    category: "CSS Buttons",
    widget: "css button",
    text: "Next",
    icon: "/profoundui/proddata/images/buttons/mobile/next.png",
    proxyHeight: 32,
    proxyWidth: 75,
    proxyHTML: function (b) {
        return pui.widgets.ed(b)
    },
    defaults: {
        value: "Next",
        "small button": "true",
        theme: "B - Blue",
        "icon position": "right",
        icon: "forward",
        width: "75px"
    }
});
pui.toolbox.add({
    category: "Hyperlinks",
    widget: "hyperlink",
    text: "Standard",
    icon: "/profoundui/proddata/images/icons/hyperlink.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 65,
    proxyHTML: '<a style="background-color: #ffffff; border-style: none; color: #0066CC; font-size: 14px; text-decoration: underline; font-family: Trebuchet MS" href="javascript:void(0)">Click Here</a>',
    leaf: true,
    defaults: {"css class": "link"}
});
pui.toolbox.add({
    category: "Hyperlinks",
    widget: "hyperlink",
    text: "Click to Call",
    icon: "/profoundui/proddata/images/icons/hyperlink.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 115,
    proxyHTML: '<a style="background-color: #ffffff; border-style: none; color: #0066CC; font-size: 14px; text-decoration: underline; font-family: Trebuchet MS" href="javascript:void(0)">Dial (555) 555-5555</a>',
    leaf: true,
    defaults: {value: "Dial (555) 555-5555", "css class": "link", "hyperlink reference": "tel:5555555555"}
});
pui.toolbox.add({
    category: "Hyperlinks",
    widget: "hyperlink",
    text: "Underline on Hover",
    icon: "/profoundui/proddata/images/icons/underlined_hyperlink.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 65,
    proxyHTML: '<a style="background-color: #ffffff; border-style: none; color: #0066CC; font-size: 14px; text-decoration: underline; font-family: Trebuchet MS" href="javascript:void(0)">Click Here</a>',
    leaf: true,
    defaults: {"css class": "link4"}
});
pui.toolbox.add({
    category: "Hyperlinks",
    widget: "hyperlink",
    text: "Bold on Hover",
    icon: "/profoundui/proddata/images/icons/bold_hyperlink.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 65,
    proxyHTML: '<a style="font-weight: bold; background-color: #ffffff; border-style: none; color: blue; font-size: 14px; text-decoration: none; font-family: Arial" href="javascript:void(0)">Click Here</a>',
    leaf: true,
    defaults: {"css class": "link6"}
});
pui.toolbox.add({
    category: "Hyperlinks",
    widget: "hyperlink",
    text: "Solid Border on Hover",
    icon: "/profoundui/proddata/images/icons/border_hyperlink.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 65,
    proxyHTML: '<a style="font-family: Verdana; color: #009999; background-color: #ffffff; border: 1px solid #cccccc; font-size: 14px; text-decoration: underline; href="javascript:void(0)">Click Here</a>',
    leaf: true,
    defaults: {"css class": "link1"}
});
pui.toolbox.add({
    category: "Hyperlinks",
    widget: "hyperlink",
    text: "Dashed Border on Hover",
    icon: "/profoundui/proddata/images/icons/dotted_border_hyperlink.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 65,
    proxyHTML: '<a style="font-weight: bold; background-color: #ffffff; border-left-style: none; border-right-style: none; border-top: 1px dashed #4866d5; border-bottom: 1px dashed #4866d5; color: #0066CC; font-size: 14px; text-decoration: none; font-family: Trebuchet MS" href="javascript:void(0)">Click Here</a>',
    leaf: true,
    defaults: {"css class": "link5"}
});
pui.toolbox.add({
    category: "Hyperlinks",
    widget: "hyperlink",
    text: "Highlight on Hover 1",
    icon: "/profoundui/proddata/images/icons/highlight_hyperlink1.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 65,
    proxyHTML: '<a style="font-family: Arial; text-decoration: none; border: 1px solid #999999; font-weight: bold; font-size: 15px; color: white; background-color: #5588BB;" href="javascript:void(0)">Click Here</a>',
    leaf: true,
    defaults: {"css class": "link2"}
});
pui.toolbox.add({
    category: "Hyperlinks",
    widget: "hyperlink",
    text: "Highlight on Hover 2",
    icon: "/profoundui/proddata/images/icons/highlight_hyperlink2.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 65,
    proxyHTML: '<a style="text-decoration: none; border-bottom: 1px dotted #c1b6b6; color: #333333; border: 2px solid #c23c00; background-color: #ffd7b2; font-size: 14px; font-family: Trebuchet MS" href="javascript:void(0)">Click Here</a>',
    leaf: true,
    defaults: {"css class": "link3"}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "textbox",
    text: "Textbox",
    icon: "/profoundui/proddata/images/icons/textbox.png",
    cls: "widget-node",
    proxyHeight: 18,
    proxyWidth: 164,
    proxyHTML: '<input type="text" class="input" style="cursor: default;" />',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "date field",
    text: "Date Field",
    icon: "/profoundui/proddata/images/icons/date_field.png",
    cls: "widget-node",
    proxyHeight: 18,
    proxyWidth: 102,
    proxyHTML: '<input class="input" style="width: 100px; cursor: default;" type="text"> <img style="border-style: none; position: relative; top: 3px;" src="/profoundui/proddata/images/cal.gif"/>',
    leaf: true,
    defaults: {width: "100px"}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "checkbox",
    text: "Checkbox",
    icon: "/profoundui/proddata/images/icons/checkbox.png",
    cls: "widget-node",
    proxyHeight: 13,
    proxyWidth: 13,
    proxyHTML: '<input type="checkbox" checked>&nbsp;&nbsp;<span style="font-size: 14px; font-family: Trebuchet MS">Checkbox</span>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "checkbox",
    text: "Checkbox (no label)",
    icon: "/profoundui/proddata/images/icons/checkbox.png",
    cls: "widget-node",
    proxyHeight: 13,
    proxyWidth: 13,
    proxyHTML: '<input type="checkbox" checked>',
    leaf: true,
    defaults: {label: ""}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "radio button",
    text: "Radio Button",
    icon: "/profoundui/proddata/images/icons/radio_button.png",
    cls: "widget-node",
    proxyHeight: 13,
    proxyWidth: 13,
    proxyHTML: '<input type="radio">&nbsp;&nbsp;<span style="font-size: 14px; font-family: Trebuchet MS">Radio Button</span>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "radio button",
    text: "Radio Button (no label)",
    icon: "/profoundui/proddata/images/icons/radio_button.png",
    cls: "widget-node",
    proxyHeight: 13,
    proxyWidth: 13,
    proxyHTML: '<input type="radio">',
    leaf: true,
    defaults: {label: ""}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "select box",
    text: "Dropdown Box",
    newId: "Dropdown",
    icon: "/profoundui/proddata/images/icons/dropdown_box.png",
    cls: "widget-node",
    proxyHeight: 22,
    proxyWidth: 81,
    proxyHTML: "<select><option>Option 1</option><option>Option 2</option></select>",
    leaf: true,
    defaults: {choices: "Option 1,Option 2"}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "select box",
    text: "List Box",
    newId: "ListBox",
    icon: "/profoundui/proddata/images/icons/list_box.png",
    cls: "widget-node",
    proxyHeight: 86,
    proxyWidth: 150,
    proxyHTML: '<select size="5" style="width:150px"><option value="" selected> </option></select>',
    leaf: true,
    defaults: {"select box height": "5", width: "150px"}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "combo box",
    text: "Combo Box",
    newId: "Combo",
    icon: "/profoundui/proddata/images/combo/icon.png",
    cls: "widget-node",
    proxyHeight: 22,
    proxyWidth: 82,
    proxyHTML: '<div style="overflow' + (pui.is_old_ie && pui.is_quirksmode ? "-y" : "") + ": hidden; border: 1px solid #7F9DB9; width: 80px; background-color: #ffffff; height: " + (pui.is_quirksmode && pui.is_old_ie ? "23" : "20") + 'px;" class="input"><img src="/profoundui/proddata/images/combo/down_arrow.gif" style="margin-left: 63px; top: 0px; right: 0px; width: 18px; height: 20px;"></div>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "on off switch",
    text: "On/Off Switch",
    icon: "/profoundui/proddata/images/onoff/icon.png",
    cls: "widget-node",
    proxyHeight: 27,
    proxyWidth: 100,
    proxyHTML: '<img src="/profoundui/proddata/images/onoff/proxy.png" style="height: 27px; width: 100px;">',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "password field",
    text: "Password Field",
    icon: "/profoundui/proddata/images/icons/password_field.png",
    cls: "widget-node",
    proxyHeight: 18,
    proxyWidth: 146,
    proxyHTML: '<input type="password" class="input" />',
    leaf: true,
    defaults: {"css class": "input"}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "text area",
    text: "Text Area",
    icon: "/profoundui/proddata/images/icons/text_area.png",
    cls: "widget-node",
    proxyHeight: 38,
    proxyWidth: 183,
    proxyHTML: '<textarea style="cursor: default;"></textarea>',
    leaf: true,
    defaults: {}
});
pui.Ov = 78;
pui.vr = 4;
if (Q == "genie") {
    pui.Ov = pui.is_quirksmode ? 55 : 62;
    pui.vr = 1;
    pui.is_firefox || (pui.vr += 1)
}
pui.RB = pui.vr + 8;
pui.is_firefox || (pui.RB += 1);
pui.toolbox.add({
    category: "Input Controls",
    widget: "spinner",
    text: "Spinner",
    icon: "/profoundui/proddata/images/icons/spinner.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 74,
    proxyHTML: '<input class="input" class="input" style="width: 70px; cursor: default;" readonly type="text" /><img class="input" style="border-style: none; position: absolute; background-color: transparent; left: ' + pui.Ov + "px; top: " + pui.vr + 'px;" src="/profoundui/proddata/images/up.gif"/><img class="input" style="border-style: none; position: absolute; background-color: transparent; left: ' +
        pui.Ov + "px; top: " + pui.RB + 'px;" src="/profoundui/proddata/images/down.gif"/>',
    leaf: true,
    defaults: {width: "70px"}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "slider",
    text: "Slider",
    icon: "/profoundui/proddata/images/icons/slider.png",
    cls: "widget-node",
    proxyHeight: 20,
    proxyWidth: 150,
    proxyHTML: '<div style="position: relative; border: 1px dotted #15428B; height: 20px; width: 150px;"><div style="background-color: #D7D7D7; position: absolute; font-size: 0px; border-width: 1px; border-style: solid; border-color: #898989 #898989 #B7B7B7; left: 10px; top: 6px; height: 5px; width: 126px;"></div><div style="border: 1px solid #94C9FF; background-color: #D7F0FF; position: absolute; font-size: 0px; height: 15px; width: 10px; top: 1px; left: 5px;"></div></div>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "file upload",
    text: "File Upload",
    icon: "/profoundui/proddata/images/icons/page_white_get.png",
    cls: "widget-node",
    proxyHeight: 150,
    proxyWidth: 400,
    proxyHTML: '<img src="/profoundui/proddata/images/fileupload.png" style="height: 150px; width: 400px;">',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Input Controls",
    widget: "file upload dnd",
    text: "File Upload (drag/drop)",
    icon: "/profoundui/proddata/images/icons/page_white_get.png",
    cls: "widget-node",
    proxyHeight: 252,
    proxyWidth: 300,
    proxyHTML: '<img src="/profoundui/proddata/images/fileuploadDND.png" style="height: 252px; width: 300px;">',
    leaf: true,
    defaults: {}
});
Q == "dspf" && MOBILE_LICENSE && pui.toolbox.add({
    category: "Input Controls",
    widget: "signature pad",
    text: "Signature Pad",
    icon: "/profoundui/proddata/images/icons/signature.png",
    cls: "widget-node",
    proxyHeight: 150,
    proxyWidth: 450,
    proxyHTML: '<div style="border: 1px solid #000000; background-color: #ffffcc; height: 150px; width: 450px;">',
    leaf: true,
    defaults: {
        height: "150px",
        width: "450px",
        "background color": "#ffffcc",
        "border top style": "solid",
        "border top width": "1px",
        "border top color": "#000000",
        "border left style": "solid",
        "border left width": "1px",
        "border left color": "#000000",
        "border right style": "solid",
        "border right width": "1px",
        "border right color": "#000000",
        "border bottom style": "solid",
        "border bottom width": "1px",
        "border bottom color": "#000000",
        color: "#333333"
    }
});
for (var Nd = 0; Nd < pui.widgets.pm.length - 1; Nd++) {
    var Sd = pui.widgets.pm[Nd];
    pui.toolbox.add({
        category: "Charts",
        widget: "chart",
        text: pui.widgets.YE[Nd],
        icon: "/profoundui/proddata/images/charts/" + Sd + "_icon.png",
        cls: "widget-node",
        proxyHeight: 200,
        proxyWidth: 300,
        proxyHTML: '<img src="/profoundui/proddata/images/charts/' + Sd + '.jpg" style="height: 202px; width: 302px;">',
        leaf: true,
        defaults: {"chart type": Sd}
    });
    Sd = null
}
pui.toolbox.add({
    category: "Charts",
    widget: "chart",
    text: "Map",
    icon: "/profoundui/proddata/images/charts/Map_icon.png",
    cls: "widget-node",
    proxyHeight: 200,
    proxyWidth: 300,
    proxyHTML: '<img src="/profoundui/proddata/images/charts/Map.jpg" style="height: 202px; width: 302px;">',
    leaf: true,
    defaults: {"map type": "world"}
});
pui.toolbox.add({
    category: "Menus",
    widget: "menu",
    text: "Classic",
    icon: "/profoundui/proddata/images/menus/classic/icon.png",
    cls: "widget-node",
    proxyHeight: 202,
    proxyWidth: 202,
    proxyHTML: '<img src="/profoundui/proddata/images/menus/classic/proxy.png" style="height: 202px; width: 202px;">',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Menus",
    widget: "menu",
    text: "Glass",
    icon: "/profoundui/proddata/images/menus/glass/icon.png",
    cls: "widget-node",
    proxyHeight: 202,
    proxyWidth: 202,
    proxyHTML: '<img src="/profoundui/proddata/images/menus/glass/proxy.png" style="height: 202px; width: 202px;">',
    leaf: true,
    defaults: {
        "font family": "Arial",
        "font variant": "small-caps",
        "text align": "center",
        "background color": "#c9dff3",
        "hover background color": "#ffffff",
        "hover text color": "#0000ff"
    }
});
pui.toolbox.add({
    category: "Menus",
    widget: "menu",
    text: "Ruby",
    icon: "/profoundui/proddata/images/menus/ruby/icon.png",
    cls: "widget-node",
    proxyHeight: 202,
    proxyWidth: 202,
    proxyHTML: '<img src="/profoundui/proddata/images/menus/ruby/proxy.png" style="height: 202px; width: 202px;">',
    leaf: true,
    defaults: {
        color: "#cc3333",
        "font family": "Tahoma",
        "font size": "12px",
        "hover background color": "#BB2222",
        "hover text color": "#000000",
        "menu option padding": "5px",
        "menu option indent": "25px",
        "option hover image": "/profoundui/proddata/images/menus/ruby/white_arrow.png",
        "background repeat": "no-repeat"
    }
});
pui.toolbox.add({
    category: "Menus",
    widget: "menu",
    text: "Harvest",
    icon: "/profoundui/proddata/images/menus/harvest/icon.png",
    cls: "widget-node",
    proxyHeight: 202,
    proxyWidth: 202,
    proxyHTML: '<img src="/profoundui/proddata/images/menus/harvest/proxy.png" style="height: 202px; width: 202px;">',
    leaf: true,
    defaults: {
        color: "#660000",
        "font family": "Times New Roman",
        "font size": "14px",
        "font weight": "bold",
        "menu option indent": "9px",
        "background color": "#ffffff",
        "hover background color": "#ffffff",
        animate: "false",
        "option hover image": "/profoundui/proddata/images/menus/harvest/menu_image4.png"
    }
});
pui.toolbox.add({
    category: "Menus",
    widget: "menu",
    text: "Smoke",
    icon: "/profoundui/proddata/images/menus/smoke/icon.png",
    cls: "widget-node",
    proxyHeight: 202,
    proxyWidth: 202,
    proxyHTML: '<img src="/profoundui/proddata/images/menus/smoke/proxy.png" style="height: 202px; width: 202px;">',
    leaf: true,
    defaults: {
        color: "#000099",
        "font family": "Verdana",
        "font size": "14px",
        "font variant": "small-caps",
        "hover background color": "#7479a0",
        "background color": "#828282",
        "menu option padding": "4px",
        "menu option indent": "22px",
        "option hover image": "/profoundui/proddata/images/menus/smoke/arrow.png",
        "background repeat": "no-repeat"
    }
});
pui.toolbox.add({
    category: "Menus",
    widget: "menu",
    text: "Simple",
    icon: "/profoundui/proddata/images/menus/simple/icon.png",
    cls: "widget-node",
    proxyHeight: 202,
    proxyWidth: 202,
    proxyHTML: '<img src="/profoundui/proddata/images/menus/simple/proxy.png" style="height: 202px; width: 202px;">',
    leaf: true,
    defaults: {
        color: "#004eae",
        "font family": "Arial",
        "font size": "12px",
        "hover background color": "#004eae",
        "hover text color": "#FFFFFF",
        "background color": "#bad3e9",
        "menu option indent": "22px",
        "option hover image": "/profoundui/proddata/images/menus/simple/dash.png",
        "background repeat": "no-repeat"
    }
});
pui.toolbox.add({
    category: "Menus",
    widget: "menu",
    text: "Evergreen",
    icon: "/profoundui/proddata/images/menus/evergreen/icon.png",
    cls: "widget-node",
    proxyHeight: 202,
    proxyWidth: 202,
    proxyHTML: '<img src="/profoundui/proddata/images/menus/evergreen/proxy.png" style="height: 202px; width: 202px;">',
    leaf: true,
    defaults: {
        color: "#003333",
        "font family": "Georgia",
        "font size": "12px",
        "font weight": "bold",
        "hover text color": "#006600",
        "hover background color": "#edeef0",
        animate: "false",
        "background color": "#edeef0",
        "menu option indent": "22px",
        "menu option padding": "5px",
        "option hover image": "/profoundui/proddata/images/menus/evergreen/checkmark.png",
        "background repeat": "no-repeat"
    }
});
pui.toolbox.add({
    category: "Menus",
    widget: "menu",
    text: "Contemporary",
    icon: "/profoundui/proddata/images/menus/contemporary/icon.png",
    cls: "widget-node",
    proxyHeight: 185,
    proxyWidth: 202,
    proxyHTML: '<img src="/profoundui/proddata/images/menus/contemporary/proxy.png" style="height: 185px; width: 202px;">',
    leaf: true,
    defaults: {
        color: "#003399",
        "font family": "Sans-Serif",
        "font style": "normal",
        "font variant": "normal",
        choices: "Option 1,Option 2,Option 3,Option 4,Option 5,Option 6,Option 7",
        height: "183px",
        "font weight": "bold",
        "text align": "center",
        "hover text color": "#FFFFFF",
        "option image": "/profoundui/proddata/images/menus/contemporary/menu_image.png"
    }
});
pui.toolbox.add({
    category: "Menus",
    widget: "menu",
    text: "Pulldown",
    icon: "/profoundui/proddata/images/menus/pulldown/icon.png",
    cls: "widget-node",
    proxyHeight: 29,
    proxyWidth: 287,
    proxyHTML: '<img src="/profoundui/proddata/images/menus/pulldown/proxy.png" style="height: 29px; width: 287px;">',
    leaf: true,
    defaults: {
        color: "#004eae",
        "font family": "Sans-Serif",
        "font size": "12px",
        orientation: "horizontal",
        choices: "Menu 1,-Option 1,-Option 2,-Option 3,--Suboption 1,--Suboption 2,--Suboption 3,Menu 2,-Option 1,-Option 2,-Option 3,Menu 3,-Option 1,-Option 2,-Option 3",
        "choice values": "1,1/1,1/2,1/3,1/3/1,1/3/2,1/3/3,2,2/1,2/2,2/3,3,3/1,3/2,3/3",
        "hover background color": "#004eae",
        "hover text color": "#ffffff",
        animate: "false",
        "border color": "#eeeeee",
        "background color": "#bad3e9",
        height: "27px",
        width: "285px"
    }
});
if (Q == "dspf") {
    pui.toolbox.add({
        category: "Layouts",
        widget: "layout",
        text: "Simple Container Layout",
        icon: "/profoundui/proddata/images/icons/simple_container_layout.png",
        cls: "widget-node",
        proxyHeight: 100,
        proxyWidth: 100,
        proxyHTML: pui.layout.template.getProxy,
        leaf: true,
        defaults: {template: "simple container", height: "100px", width: "100px"}
    });
    pui.toolbox.add({
        category: "Layouts",
        widget: "layout",
        text: "Table Layout",
        icon: "/profoundui/proddata/images/icons/table_layout.png",
        cls: "widget-node",
        proxyHeight: 165,
        proxyWidth: 165,
        proxyHTML: pui.layout.template.getProxy,
        leaf: true,
        defaults: {template: "table", rows: "2", columns: "2", height: "165px", width: "165px"}
    });
    MOBILE_LICENSE && pui.toolbox.add({
        category: "Layouts",
        widget: "layout",
        text: "Mobile Device Layout",
        icon: "/profoundui/proddata/images/icons/mobile_device_layout.png",
        cls: "widget-node",
        proxyHeight: 480,
        proxyWidth: 320,
        proxyHTML: pui.layout.template.getProxy,
        leaf: true,
        defaults: {template: "mobile device", height: "480px", width: "320px", "css class": "mobile-device-layout"}
    });
    pui.toolbox.add({
        category: "Layouts",
        widget: "layout",
        text: "CSS Panel Layout",
        icon: "/profoundui/proddata/images/buttons/mobile/csspanel.png",
        cls: "widget-node",
        proxyHeight: 300,
        proxyWidth: 200,
        proxyHTML: pui.layout.template.getProxy,
        leaf: true,
        defaults: {
            template: "css panel",
            "header text": "Panel Header",
            "header theme": "B - Blue",
            "body theme": "C - Gray",
            height: "300px",
            width: "200px",
            "z index": "8"
        }
    });
    pui.toolbox.add({
        category: "Layouts",
        widget: "layout",
        text: "Accordion Layout",
        icon: "/profoundui/proddata/images/buttons/mobile/csstabpanel.png",
        cls: "widget-node",
        proxyHeight: 300,
        proxyWidth: 200,
        proxyHTML: pui.layout.template.getProxy,
        leaf: true,
        defaults: {
            template: "accordion",
            "header theme": "B - Blue",
            "body theme": "C - Gray",
            "allow collapse": "true",
            height: "300px",
            width: "200px",
            "z index": "8"
        }
    });
    pui.toolbox.add({
        category: "Layouts",
        widget: "layout",
        text: "Responsive Layout",
        icon: "/profoundui/proddata/images/icons/responsive_layout.png",
        cls: "widget-node",
        proxyHeight: 300,
        proxyWidth: 200,
        proxyHTML: pui.layout.template.getProxy,
        leaf: true,
        defaults: {
            template: "responsive layout",
            height: "400px",
            width: "310px",
            "layout items": "5",
            "style rules": "@media screen { #_id_ > .puiresp { display:grid; grid-template-rows:auto; grid-template-columns:repeat(4, 1fr); grid-column-gap:3px; grid-row-gap:3px;}}",
            "use viewport": "true"
        }
    });
    pui.toolbox.add({
        category: "Layouts",
        widget: "layout",
        text: "Tab Panel Layout",
        icon: "/profoundui/proddata/images/tabs/glass/icon.png",
        cls: "widget-node",
        proxyHeight: 202,
        proxyWidth: 302,
        proxyHTML: '<img src="/profoundui/proddata/images/tabs/glass/proxy.png" style="height: 202px; width: 302px;">',
        leaf: true,
        defaults: {template: "tab panel", height: "200px", width: "300px", "css class": "Glass"}
    });
    MOBILE_LICENSE && pui.toolbox.add({
        category: "Layouts",
        widget: "layout",
        text: "Mobile Scroller Layout",
        icon: "/profoundui/proddata/images/icons/scroller.png",
        cls: "widget-node",
        proxyHeight: 300,
        proxyWidth: 150,
        proxyHTML: '<div style="overflow: hidden; border: 2px dashed #666666; width: 147px; height: 297px;"></div>',
        leaf: true,
        defaults: {template: "simple container", height: "300px", width: "150px", "css class": "scroller"}
    });
    pui.toolbox.add({
        category: "Layouts",
        widget: "layout",
        text: "Field Set Layout",
        icon: "/profoundui/proddata/images/icons/field_set_panel.png",
        proxyWidth: 300,
        proxyHeight: 200,
        proxyHTML: '<fieldset style="width:300px; height:200px;"><legend>Field Set</legend>&nbsp;</fieldset>',
        defaults: {template: "fieldset", width: "300px", height: "200px", legend: "Field Set"}
    })
}
for (var Td in pui.widgets.tabStyles) if (Td != "CSS") {
    Rd = pui.toolbox.add({
        category: "Tab Panels",
        widget: "tab panel",
        text: Td,
        icon: "/profoundui/proddata/images/tabs/" + Td.toLowerCase() + "/icon.png",
        cls: "widget-node",
        proxyHeight: 202,
        proxyWidth: 302,
        proxyHTML: '<img src="/profoundui/proddata/images/tabs/' + Td.toLowerCase() + '/proxy.png" style="height: 202px; width: 302px;">',
        leaf: true,
        defaults: {"tab panel style": Td}
    });
    if (Rd != null && Rd.defaults != null) {
        if (Td == "Angle") Rd.defaults.color = "#ffffff";
        if (Td == "Delicate") {
            Rd.defaults.color =
                "#666666";
            Rd.defaults["font weight"] = "bold"
        }
        if (Td == "Block") Rd.defaults.color = "#ffffff"
    }
    Td = Rd = null
}
pui.toolbox.add({
    category: "Panels",
    widget: "css panel",
    text: "CSS Panel Blue",
    icon: "/profoundui/proddata/images/buttons/mobile/csspanel.png",
    proxyHeight: 300,
    proxyWidth: 200,
    proxyHTML: function (b) {
        return pui.widgets.Mm(b)
    },
    defaults: {"header theme": "B - Blue", "body theme": "C - Gray"}
});
pui.toolbox.add({
    category: "Panels",
    widget: "css panel",
    text: "CSS Panel Black",
    icon: "/profoundui/proddata/images/buttons/mobile/csspanelblack.png",
    proxyHeight: 300,
    proxyWidth: 200,
    proxyHTML: function (b) {
        return pui.widgets.Mm(b)
    },
    defaults: {"header theme": "A - Black", "body theme": "C - Gray"}
});
pui.toolbox.add({
    category: "Panels",
    widget: "css panel",
    text: "CSS Panel Red",
    icon: "/profoundui/proddata/images/buttons/mobile/csspanelred.png",
    proxyHeight: 300,
    proxyWidth: 200,
    proxyHTML: function (b) {
        return pui.widgets.Mm(b)
    },
    defaults: {"header theme": "G - Red", "body theme": "C - Gray"}
});
pui.toolbox.add({
    category: "Panels",
    widget: "css panel",
    text: "CSS Panel Green",
    icon: "/profoundui/proddata/images/buttons/mobile/csspanelgreen.png",
    proxyHeight: 300,
    proxyWidth: 200,
    proxyHTML: function (b) {
        return pui.widgets.Mm(b)
    },
    defaults: {"header theme": "F - Green", "body theme": "C - Gray"}
});
pui.toolbox.add({
    category: "Panels",
    widget: "css panel",
    text: "CSS Panel Gray",
    icon: "/profoundui/proddata/images/buttons/mobile/csspanelgray.png",
    proxyHeight: 300,
    proxyWidth: 200,
    proxyHTML: function (b) {
        return pui.widgets.Mm(b)
    },
    defaults: {"header theme": "C - Gray", "body theme": "C - Gray"}
});
pui.toolbox.add({
    category: "Panels",
    widget: "field set panel",
    text: "Field Set",
    icon: "/profoundui/proddata/images/icons/field_set_panel.png",
    cls: "widget-node",
    proxyHeight: 204,
    proxyWidth: 304,
    proxyHTML: '<fieldset style="font-family: Trebuchet MS; font-size: 14px; height: 200px; width: 300px;"><legend>Field Set</legend></fieldset>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Panels",
    widget: "ajax container",
    text: "AJAX Container",
    icon: "/profoundui/proddata/images/icons/ajax_container.png",
    cls: "widget-node",
    proxyHeight: 102,
    proxyWidth: 202,
    proxyHTML: '<div style="font-family: Trebuchet MS; font-size: 14px; border: 1px dotted #15428B; height: 100px; width: 200px;">AJAX content will appear here.</div>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Panels",
    widget: "html container",
    text: "HTML Container",
    icon: "/profoundui/proddata/images/icons/html_container.png",
    cls: "widget-node",
    proxyHeight: 102,
    proxyWidth: 202,
    proxyHTML: '<div style="font-family: Trebuchet MS; font-size: 14px; border: 1px dotted #15428B; height: 100px; width: 200px;"><i>HTML Content</i></div>',
    leaf: true,
    defaults: {}
});
pui.toolbox.add({
    category: "Panels",
    widget: "iframe",
    text: "IFrame",
    icon: "/profoundui/proddata/images/icons/iframe.png",
    cls: "widget-node",
    proxyHeight: 302,
    proxyWidth: 402,
    proxyHTML: '<div style="font-family: Trebuchet MS; font-size: 14px; border: 1px dotted #15428B; height: 300px; width: 400px; background-color: #ffffff;">IFrame content will appear here.</div>',
    leaf: true,
    defaults: {}
});
for (var Ud in pui.widgets.panelStyles) {
    Pd = pui.widgets.panelStyles[Ud];
    Rd = pui.toolbox.add({
        category: Pd.dialog ? "Dialogs" : "Panels",
        widget: "panel",
        text: Ud + (Pd.dialog ? "" : " Panel"),
        newId: Pd.dialog ? "Dialog" : "Panel",
        icon: "/profoundui/proddata/images/panels/" + Ud + "/icon.png",
        cls: "widget-node",
        proxyHeight: Pd.height != null ? Pd.height : pui.widgets.Dm,
        proxyWidth: Pd.width != null ? Pd.width : pui.widgets.Em,
        proxyHTML: function (b) {
            return pui.widgets.getPanelProxy(b)
        },
        leaf: true,
        defaults: {"panel style": Ud}
    });
    if (Rd != null && Rd.defaults !=
        null) {
        if (Pd.textColor != null) Rd.defaults.color = Pd.textColor;
        if (Pd.width != null) Rd.defaults.width = Pd.width + "px";
        if (Pd.height != null) Rd.defaults.height = Pd.height + "px";
        if (Pd.textAlign != null) Rd.defaults["text align"] = Pd.textAlign;
        if (Pd.fontSize != null) Rd.defaults["font size"] = Pd.fontSize;
        if (Pd.dialog == true) Rd.defaults.value = "Dialog Title";
        if (Pd.noTitle == true) Rd.defaults.value = ""
    }
    Ud = Pd = Rd = null
}
pui.toolbox.add({
    category: "Dialogs",
    widget: "image",
    text: "Close Button 1",
    newId: "Button",
    icon: "/profoundui/proddata/images/buttons/close/x1.png",
    cls: "widget-node",
    proxyHeight: 16,
    proxyWidth: 16,
    proxyHTML: '<img src="/profoundui/proddata/images/buttons/close/x1.png">',
    leaf: true,
    defaults: {
        "image source": "/profoundui/proddata/images/buttons/close/x1.png",
        "hover image source": "/profoundui/proddata/images/buttons/close/x1_hover.png",
        cursor: "pointer",
        "bypass validation": "true"
    }
});
pui.toolbox.add({
    category: "Dialogs",
    widget: "image",
    text: "Close Button 2",
    newId: "Button",
    icon: "/profoundui/proddata/images/buttons/close/x2.png",
    cls: "widget-node",
    proxyHeight: 16,
    proxyWidth: 16,
    proxyHTML: '<img src="/profoundui/proddata/images/buttons/close/x2.png">',
    leaf: true,
    defaults: {
        "image source": "/profoundui/proddata/images/buttons/close/x2.png",
        "hover image source": "/profoundui/proddata/images/buttons/close/x2_hover.png",
        "click image source": "/profoundui/proddata/images/buttons/close/x2_click.png",
        cursor: "pointer",
        "bypass validation": "true"
    }
});
pui.toolbox.add({
    category: "Dialogs",
    widget: "image",
    text: "Close Button 3",
    newId: "Button",
    icon: "/profoundui/proddata/images/buttons/close/x3.png",
    cls: "widget-node",
    proxyHeight: 16,
    proxyWidth: 16,
    proxyHTML: '<img src="/profoundui/proddata/images/buttons/close/x3.png">',
    leaf: true,
    defaults: {
        "image source": "/profoundui/proddata/images/buttons/close/x3.png",
        "hover image source": "/profoundui/proddata/images/buttons/close/x3_hover.png",
        cursor: "pointer",
        "bypass validation": "true"
    }
});
pui.toolbox.add({
    category: "Dialogs",
    widget: "image",
    text: "Close Button 4",
    newId: "Button",
    icon: "/profoundui/proddata/images/buttons/close/x4.png",
    cls: "widget-node",
    proxyHeight: 16,
    proxyWidth: 16,
    proxyHTML: '<img src="/profoundui/proddata/images/buttons/close/x4.png">',
    leaf: true,
    defaults: {
        "image source": "/profoundui/proddata/images/buttons/close/x4.png",
        "hover image source": "/profoundui/proddata/images/buttons/close/x4_hover.png",
        cursor: "pointer",
        "bypass validation": "true"
    }
});
pui.toolbox.add({
    category: "Dialogs",
    widget: "image",
    text: "Close Button 5",
    newId: "Button",
    icon: "/profoundui/proddata/images/buttons/close/x5.png",
    cls: "widget-node",
    proxyHeight: 16,
    proxyWidth: 16,
    proxyHTML: '<img src="/profoundui/proddata/images/buttons/close/x5.png">',
    leaf: true,
    defaults: {
        "image source": "/profoundui/proddata/images/buttons/close/x5.png",
        "click image source": "/profoundui/proddata/images/buttons/close/x5_click.png",
        cursor: "pointer",
        "bypass validation": "true"
    }
});
pui.toolbox.add({
    category: "Lines",
    widget: "output field",
    text: "Solid Vertical Line",
    newId: "Line",
    icon: "/profoundui/proddata/images/lines/solid-vertical.png",
    cls: "widget-node",
    proxyHeight: 150,
    proxyWidth: 12,
    proxyHTML: '<div style="border-left: 2px solid #000000; width: 10px; height: 150px;"></div>',
    leaf: true,
    defaults: {
        value: "",
        width: "10px",
        height: "150px",
        "border bottom style": "none",
        "border top style": "none",
        "border right style": "none",
        "border left style": "solid",
        "border left width": "2px",
        "border left color": "#000000"
    }
});
pui.toolbox.add({
    category: "Lines",
    widget: "output field",
    text: "Dotted Vertical Line",
    newId: "Line",
    icon: "/profoundui/proddata/images/lines/dotted-vertical.png",
    cls: "widget-node",
    proxyHeight: 150,
    proxyWidth: 12,
    proxyHTML: '<div style="border-left: 2px dotted #000000; width: 10px; height: 150px;"></div>',
    leaf: true,
    defaults: {
        value: "",
        width: "10px",
        height: "150px",
        "border bottom style": "none",
        "border top style": "none",
        "border right style": "none",
        "border left style": "dotted",
        "border left width": "2px",
        "border left color": "#000000"
    }
});
pui.toolbox.add({
    category: "Lines",
    widget: "output field",
    text: "Dashed Vertical Line",
    newId: "Line",
    icon: "/profoundui/proddata/images/lines/dashed-vertical.png",
    cls: "widget-node",
    proxyHeight: 150,
    proxyWidth: 12,
    proxyHTML: '<div style="border-left: 2px dashed #000000; width: 10px; height: 150px;"></div>',
    leaf: true,
    defaults: {
        value: "",
        width: "10px",
        height: "150px",
        "border bottom style": "none",
        "border top style": "none",
        "border right style": "none",
        "border left style": "dashed",
        "border left width": "2px",
        "border left color": "#000000"
    }
});
pui.toolbox.add({
    category: "Lines",
    widget: "output field",
    text: "Solid Horizontal Line",
    newId: "Line",
    icon: "/profoundui/proddata/images/lines/solid-horizontal.png",
    cls: "widget-node",
    proxyHeight: 10,
    proxyWidth: 152,
    proxyHTML: '<div style="border-top: 2px solid #000000; width: 150px; height: 10px;"></div>',
    leaf: true,
    defaults: {
        value: "",
        width: "150px",
        height: "10px",
        "border bottom style": "none",
        "border left style": "none",
        "border right style": "none",
        "border top style": "solid",
        "border top width": "2px",
        "border top color": "#000000"
    }
});
pui.toolbox.add({
    category: "Lines",
    widget: "output field",
    text: "Dotted Horizontal Line",
    newId: "Line",
    icon: "/profoundui/proddata/images/lines/dotted-horizontal.png",
    cls: "widget-node",
    proxyHeight: 10,
    proxyWidth: 152,
    proxyHTML: '<div style="border-top: 2px dotted #000000; width: 150px; height: 10px;"></div>',
    leaf: true,
    defaults: {
        value: "",
        width: "150px",
        height: "10px",
        "border bottom style": "none",
        "border left style": "none",
        "border right style": "none",
        "border top style": "dotted",
        "border top width": "2px",
        "border top color": "#000000"
    }
});
pui.toolbox.add({
    category: "Lines",
    widget: "output field",
    text: "Dashed Horizontal Line",
    newId: "Line",
    icon: "/profoundui/proddata/images/lines/dashed-horizontal.png",
    cls: "widget-node",
    proxyHeight: 10,
    proxyWidth: 152,
    proxyHTML: '<div style="border-top: 2px dashed #000000; width: 150px; height: 10px;"></div>',
    leaf: true,
    defaults: {
        value: "",
        width: "150px",
        height: "10px",
        "border bottom style": "none",
        "border left style": "none",
        "border right style": "none",
        "border top style": "dashed",
        "border top width": "2px",
        "border top color": "#000000"
    }
});
pui.Ze = "Grids";
if (Q == "dspf" && !pui.viewdesigner && !pui.nodedesigner) pui.Ze = "Subfile Grids";
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Simple",
    icon: "/profoundui/proddata/images/grids/simple/icon.png",
    cls: "widget-node",
    proxyHeight: 186,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/simple/proxy.png" style="height: 189px; width: 453px;">',
    leaf: true,
    defaults: {"css class": "simple-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Crystal",
    icon: "/profoundui/proddata/images/grids/crystal/icon.png",
    cls: "widget-node",
    proxyHeight: 182,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/crystal/proxy.png" style="height: 189px; width: 453px;">',
    leaf: true,
    defaults: {"header height": "26", "css class": "crystal-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Contemporary",
    icon: "/profoundui/proddata/images/grids/contemporary/icon.png",
    cls: "widget-node",
    proxyHeight: 186,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/contemporary/proxy.png" style="height: 189px; width: 453px;">',
    leaf: true,
    defaults: {"css class": "contemporary-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Ice Blue",
    icon: "/profoundui/proddata/images/grids/ice blue/icon.png",
    cls: "widget-node",
    proxyHeight: 186,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/ice blue/proxy.png" style="height: 189px; width: 453px;">',
    leaf: true,
    defaults: {"css class": "ice-blue-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Evergreen",
    icon: "/profoundui/proddata/images/grids/evergreen/icon.png",
    cls: "widget-node",
    proxyHeight: 180,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/evergreen/proxy.png" style="height: 189px; width: 453px;">',
    leaf: true,
    defaults: {"header height": "24", "css class": "evergreen-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Midnight",
    icon: "/profoundui/proddata/images/grids/midnight/icon.png",
    cls: "widget-node",
    proxyHeight: 132,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/midnight/proxy.png" style="height: 135px; width: 453px;">',
    leaf: true,
    defaults: {"header height": "24", "row height": "18", "border color": "#aaaaaa", "css class": "midnight-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Silver",
    icon: "/profoundui/proddata/images/grids/silver/icon.png",
    cls: "widget-node",
    proxyHeight: 182,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/silver/proxy.png" style="height: 189px; width: 453px;">',
    leaf: true,
    defaults: {"header height": "26", "css class": "silver-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Sapphire",
    icon: "/profoundui/proddata/images/grids/sapphire/icon.png",
    cls: "widget-node",
    proxyHeight: 180,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/sapphire/proxy.png" style="height: 189px; width: 453px;">',
    leaf: true,
    defaults: {"header height": "24", "css class": "sapphire-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Coral",
    icon: "/profoundui/proddata/images/grids/coral/icon.png",
    cls: "widget-node",
    proxyHeight: 180,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/coral/proxy.png" style="height: 189px; width: 453px;">',
    leaf: true,
    defaults: {"header height": "24", "css class": "coral-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Polished",
    icon: "/profoundui/proddata/images/grids/polished/icon.png",
    cls: "widget-node",
    proxyHeight: 124,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/polished/proxy.png" style="height: 135px; width: 453px;">',
    leaf: true,
    defaults: {"header height": "22", "row height": "17", "css class": "polished-grid"}
});
pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Hybrid",
    icon: "/profoundui/proddata/images/grids/hybrid/icon.png",
    cls: "widget-node",
    proxyHeight: 183,
    proxyWidth: 451,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/hybrid/proxy.png" style="height: 183px; width: 451px;">',
    leaf: true,
    defaults: {"header height": "26", "css class": "hybrid-grid"}
});
Q == "dspf" && MOBILE_LICENSE && pui.toolbox.add({
    category: pui.Ze,
    widget: "grid",
    text: "Mobile",
    icon: "/profoundui/proddata/images/grids/mobile/icon.png",
    cls: "widget-node",
    proxyHeight: 283,
    proxyWidth: 253,
    proxyHTML: '<img src="/profoundui/proddata/images/grids/mobile/proxy.png" style="height: 283px; width: 253px;">',
    leaf: true,
    defaults: {
        "css class": "mobile-grid",
        "number of columns": "1",
        "border color": "#dddddd",
        "header height": "40",
        "row height": "40",
        "has header": "false",
        "column widths": "250",
        "column headings": "Heading",
        "expand to layout": "true"
    }
});
pui.designer.C = {};
pui.designer.C.formats = {};
pui.designer.C.global = {};
pui.designer.C.comments = [];
pui.designer.C.split = function (b) {
    pui.designer.C.comments = [];
    pui.designer.C.formats = {};
    for (var a = "*GLOBAL", c = false, d = 0, e = false, f = 0; f < b.length; f++) {
        var h = b[f];
        if (Zb(h) == "") h = "     A*";
        var g = b[f + 1];
        if (g == null) g = "";
        var l = b[f + 2];
        if (l == null) l = "";
        var n = h.substr(6, 1) == "*";
        if (n && !c) pui.designer.C.comments.push(h); else c = true;
        var o = h.substr(16, 1);
        if (!n && o == "R") {
            a = $b(h.substr(18, 10));
            if (a == "" || a.substr(0, 7) == "QSFLCTL") a = null;
            if (Zb(h.substr(44)) != "") h = "     A                                      " + $b(h.substr(44));
            else continue
        }
        if (h.substr(5, 4) != "A*%%") {
            if (Zb(h.substr(16)) == "") {
                if (g.substr(18, 6) == "QPUI00") continue;
                if (Zb(g.substr(16)) == "" && l.substr(18, 6) == "QPUI00") continue
            }
            if (h.substr(18, 6) != "QPUI00") {
                g = false;
                h += " ";
                if (!n) for (n = 44; n < h.length; n++) if (e) {
                    if (h.substr(n, 1) == "'") e = false
                } else if (h.substr(n, 1) == "'") e = true; else if (h.substr(n, 1) == "(") d++; else if (h.substr(n, 1) == ")") d--; else if (d == 0) if (h.substr(n, 4) == "SFL ") {
                    h = h.substr(0, n) + h.substr(n + 4);
                    h = $b(h);
                    if (h == "     A") g = true;
                    break
                }
                if (!g) {
                    h = $b(h);
                    if (a != null) {
                        if (pui.designer.C.formats[a] ==
                            null) pui.designer.C.formats[a] = [];
                        pui.designer.C.formats[a].push(h)
                    }
                }
            }
        }
    }
};
pui.designer.C.os = function (b, a) {
    function c(u, w) {
        u = Number(u);
        if (!isNaN(u)) if (!(u < 1 || u > 99)) {
            if (u < 10) u = "0" + String(u);
            if (w == null) w = false;
            if (g[u] === true) w = true;
            g[u] = w
        }
    }

    function d(u) {
        if (u == null) return false;
        if (u.substr(6, 1) == "*") return true;
        if (Zb(u.substr(16, 28)) == "") return true;
        return false
    }

    function e(u) {
        u = Zb(u);
        var w = u.substr(0, 1);
        if (w < "A" || w > "Z") return "";
        var v = u.indexOf("("), E = u.lastIndexOf(")");
        if (v == -1 || E == -1) return u;
        w = u.substr(0, v);
        E = u.substr(v + 1, E - v - 1);
        E = E.split(" ");
        if (w == "SFLCTL") l[E[0]] = true;
        u = E[0].substr(0, 2);
        v = E[1];
        if (v == null) v = "";
        v = v.substr(0, 2);
        E = E[2];
        if (E == null) E = "";
        E = E.substr(0, 2);
        switch (w) {
            case "BLANKS":
            case "CHANGE":
            case "CLEAR":
            case "DUP":
            case "HELP":
            case "HLPRTN":
            case "HOME":
            case "PAGEDOWN":
            case "PAGEUP":
            case "ROLLDOWN":
            case "ROLLUP":
            case "PRINT":
            case "SETOF":
            case "SETOFF":
            case "VLDCMDKEY":
                c(u, true);
                break;
            case "ERRMSG":
            case "SFLMSG":
            case "MNUCNL":
                c(v, true);
                break;
            case "ERRMSGID":
            case "SFLMSGID":
                c(E, true);
                break;
            default:
                v = w.substr(0, 2);
                if (v == "CA" || v == "CF") c(u, true);
                break
        }
        return w
    }

    b = b.toUpperCase();
    var f = pui.designer.C.formats[b], h = {}, g = {}, l = {};
    if (f == null) f = [];
    for (var n = 0; n < f.length; n++) {
        var o = f[n], i = {};
        if (o.substr(6, 1) != "*") {
            c(o.substr(8, 2));
            c(o.substr(11, 2));
            c(o.substr(14, 2));
            var r = Zb(o.substr(44)), k = r.substr(r.length - 1, 1), q = " ";
            if (k == "+" || k == "-") {
                r = r.substr(0, r.length - 1);
                if (k == "-") q = ""
            }
            for (var s = n + 1; s < f.length; s++) {
                k = f[s];
                if (k.substr(6, 1) != "*") {
                    if (!d(k)) break;
                    r += q + $b(k.substr(44));
                    q = " ";
                    k = r.substr(r.length - 1, 1);
                    if (k == "+" || k == "-") {
                        r = r.substr(0, r.length - 1);
                        if (k == "-") q = ""
                    }
                }
            }
            r =
                pui.designer.C.Rj(r);
            for (s = 0; s < r.length; s++) {
                q = r[s];
                if (e(q) == "REFFLD") {
                    q = q.split("(")[1];
                    if (q == null) q = "";
                    q = q.split(")")[0];
                    i.Jq = q
                }
            }
            if (o.substr(16, 1) == " ") {
                i.name = $b(o.substr(18, 10));
                if (i.name != "") {
                    i.en = o.substr(28, 1) == "R";
                    i.dataLength = null;
                    s = Zb(o.substr(29, 5));
                    if (!isNaN(Number(s))) {
                        i.dataLength = Math.abs(Number(s));
                        if (i.en) if (s = s.match(/^([\+-]+)/)) i.gq = s[1]
                    }
                    i.dataType = o.substr(34, 1);
                    i.decPos = null;
                    s = Zb(o.substr(35, 2));
                    if (s != "" && !isNaN(Number(s))) {
                        i.decPos = Math.abs(Number(s));
                        if (i.en) if (s = s.match(/^([\+-]+)/)) i.np =
                            s[1]
                    }
                    i.CK = o.substr(37, 1);
                    i.isHidden = i.CK == "H";
                    i.row = Number(o.substr(38, 3));
                    if (isNaN(i.row)) i.row = null;
                    i.column = Number(o.substr(41, 3));
                    if (isNaN(i.column)) i.column = null;
                    i.Wt = false;
                    if (Zb(o.substr(44)) != "") i.Wt = true; else for (s = n + 1; s < f.length; s++) {
                        k = f[s];
                        if (k.substr(6, 1) != "*") {
                            if (!d(k)) break;
                            if (Zb(k.substr(44)) != "") {
                                i.Wt = true;
                                break
                            }
                        }
                    }
                    a:{
                        if (i.isHidden && !i.Wt && i.dataType != "Y") if (a.xt(i.name) != null) {
                            o = false;
                            break a
                        }
                        h[i.name] = i;
                        o = true
                    }
                    if (!o) {
                        f.splice(n, 1);
                        for (o = f[n]; d(o);) if (i.isHidden && o.substr(6, 1) != "*" &&
                            Zb(o.substr(7, 9)) != "") break; else {
                            f.splice(n, 1);
                            o = f[n]
                        }
                        n -= 1
                    }
                }
            }
        }
    }
    if (b != "*GLOBAL") {
        f = pui.designer.C.global.C.jh;
        for (var t in f) c(t, f[t])
    }
    a.C = {fields: h, jh: g, subfiles: l}
};
pui.designer.C.Rj = function (b) {
    for (var a = false, c = 0; c < b.length; c++) {
        var d = b.substr(c, 1);
        if (d == "'") a = !a;
        if (a && d == " ") b = b.substr(0, c) + "_" + b.substr(c + 1)
    }
    a = b.length;
    for (b = b.replace(/  /g, " "); b.length != a;) {
        a = b.length;
        b = b.replace(/  /g, " ")
    }
    var e = [];
    e.push("");
    a = false;
    var f = 0;
    for (c = 0; c < b.length; c++) {
        d = b.substr(c, 1);
        if (d == "'") a = !a;
        if (!a) {
            if (d == "(") f += 1;
            if (d == ")") f -= 1;
            if (f < 0) f = 0;
            if (d == " " && f == 0) {
                e.push("");
                continue
            }
        }
        e[e.length - 1] += d
    }
    return e
};
pui.designer.C.wj = function (b, a) {
    var c = "", d = pui.designer.C.formats[a];
    if (d == null) return c;
    if (!S.si()) return c;
    for (var e = 0; e < d.length; e++) c += "&dds" + b + "," + (e + 1) + "=" + encodeURIComponent(d[e]);
    return c
};
pui.designer.C.uH = function (b, a) {
    if (a.fieldName != b.name) return false;
    var c = [" ", "A", "D", "E", "I", "J", "M", "N", "O", "W", "X"], d = [" ", "D", "E", "I", "J", "N", "O", "S", "Y"],
        e = b.dataLength;
    if (e == null || e == 0 || e == "") if (a.Q != null) for (var f = 0; f < a.Q.length; f++) {
        var h = a.Q[f].property;
        if (h == "subfile message key") e = 4;
        if (h == "subfile program message queue") e = 10;
        if (h == "subfile control program message queue") e = 10;
        if (h == "cursor record number") {
            e = 5;
            b.decPos = 0
        }
    }
    switch (a.dataType) {
        case "char":
            if (pui.ic(c, b.dataType) == -1) return false;
            if (Number(a.dataLength) != e) return false;
            if (b.decPos != null) return false;
            break;
        case "zoned":
            if (pui.ic(d, b.dataType) == -1) return false;
            if (Number(a.dataLength) != e) return false;
            if (Number(a.decPos) != b.decPos) return false;
            break;
        case "indicator":
            if (a.fieldName.substr(0, 3) != "*IN") {
                if (pui.ic(c, b.dataType) == -1) return false;
                if (e != 1) return false;
                return true
            }
            return false;
        case "expression":
            return false;
        case "floating":
            if (b.dataType != "F") return false;
            if (Number(a.dataLength) != e) return false;
            if (Number(a.decPos) != b.decPos) return false;
            break;
        case "date":
            if (b.dataType != "L") return false;
            break;
        case "time":
            if (b.dataType != "T") return false;
            break;
        case "timestamp":
            if (b.dataType != "Z") return false;
            break;
        case "graphic":
            if (b.dataType != "G") return false;
            if (Number(a.dataLength) != e) return false;
            break;
        case "reference":
            if (!b.en) return false;
            c = "";
            if (b.Jq) c = Zb(b.Jq);
            if (e != null && e != 0) {
                c += " ";
                if (b.gq) c += b.gq;
                c += e
            }
            if (b.dataType != null) {
                b.dataType = Zb(b.dataType);
                if (b.dataType) c += " '" + b.dataType + "'"
            }
            if (b.decPos != null) {
                c += " ";
                if (b.np) c += b.np;
                c += b.decPos
            }
            if (Zb(a.refField) !=
                Zb(c)) return false;
            break;
        default:
            return false
    }
    return true
};
pui.designer.C.uG = function (b) {
    var a = null;
    b = pui.designer.C.formats[b];
    if (b == null) b = [];
    for (var c = 0; c < b.length; c++) {
        var d = b[c];
        if (d.substr(6, 1) != "*") {
            d = Number(d.substr(38, 3));
            if (!(isNaN(d) || d <= 0)) if (a == null || a > d) a = d
        }
    }
    return a
};
pui.designer.C.Aq = function (b) {
    function a(h) {
        var g = h.substr(0, 1), l = h.substr(1, 1);
        if (g >= "0" && g <= "9" && l >= "0" && l <= "9") {
            h = Number(h);
            if (!isNaN(h)) if (h >= 1 && h <= 99) return true
        }
        return false
    }

    function c(h) {
        var g = h.substr(0, 1);
        h = h.substr(1, 2);
        if (g === " " || g === "N") if (a(h)) return true;
        return false
    }

    b = b;
    if (a(b.substr(0, 2))) b = " " + b;
    for (var d = "", e = 0; e < 3 && c(b);) {
        d += b.substr(0, 3);
        b = b.substr(3);
        e += 1
    }
    if (d.substr(0, 1) === " ") d = d.substr(1);
    if (d.length > 0 && b.substr(0, 1) === " ") b = b.substr(1);
    e = b.split("(");
    var f = e[0];
    e.splice(0,
        1);
    return {jh: d, keyword: b, Hb: f, aM: "(" + e.join("(")}
};
pui.designer.UC = function () {
    function b(k, q) {
        var s = k.properties, t = k.dom.grid.Fp(), u = "", w = 0, v = d(s["display subfile"], "SFLDSP", "true");
        if (v != "") {
            u += v;
            w++
        }
        v = d(s["display control record"], "SFLDSPCTL", "true");
        if (v != "") {
            u += v;
            w++
        }
        v = d(s["initialize subfile"], "SFLINZ", "false");
        if (v != "") {
            u += v;
            w++
        }
        v = d(s["subfile records not active"], "SFLRNA", "false");
        if (v != "") {
            u += v;
            w++
        }
        v = d(s["delete subfile"], "SFLDLT", "false");
        if (v != "") {
            u += v;
            w++
        }
        v = d(s["clear subfile"], "SFLCLR", "false");
        if (v != "") {
            u += v;
            w++
        }
        v = d(null, "SFLPAG", String(t),
            true);
        if (v != "") {
            u += v;
            w++
        }
        v = d(s["subfile size"], "SFLSIZ", String(t + 1), true);
        if (v != "") {
            u += v;
            w++
        }
        var E = s["subfile control program message queue"];
        if (pui.f(E)) {
            v = {};
            v.Hb = "SFLPGMQ";
            v.fieldName = E.fieldName;
            v.type = "F";
            v = e(v);
            u += v;
            w++
        }
        u = f(String(w), 5) + u;
        t = "";
        w = 0;
        v = d(s["subfile next changed"], "SFLNXTCHG", "false");
        if (v != "") {
            t += v;
            w++
        }
        E = s["subfile message key"];
        if (pui.f(E)) {
            v = {};
            v.Hb = "SFLMSGKEY";
            v.fieldName = E.fieldName;
            v.type = "F";
            v = e(v);
            t += v;
            w++
        }
        E = s["subfile program message queue"];
        if (pui.f(E)) {
            v = {};
            v.Hb = "SFLPGMQ";
            v.fieldName = E.fieldName;
            v.type = "F";
            v = e(v);
            t += v;
            w++
        }
        w = {xb: w, meta: t};
        t = k.dom.grid;
        for (v = 0; v < q.items.length; v++) {
            E = q.items[v];
            E.bb() == t && c(E, w)
        }
        t = w.meta;
        w = w.xb;
        t = f(String(w), 5) + t;
        u += t;
        return u = S.Sb(f(s["record format name"], 10)) + u
    }

    function a(k, q) {
        var s = "", t = k.Ga[k.i.l], u = d(t.overlay, "OVERLAY", "false");
        if (u != "") {
            s += u;
            q.xb++
        }
        u = d(t["show as window"], "WINDOW", "false");
        if (u != "") {
            s += u;
            q.xb++
        } else if (t["window reference"] != null && t["window reference"] != "") {
            u = {};
            u.Hb = "WINDOW";
            u.params = [];
            u.params.push(t["window reference"]);
            s += e(u);
            q.xb++
        }
        u = d(t["remove windows"], "RMVWDW", "false");
        if (u != "") {
            s += u;
            q.xb++
        }
        u = d(t.assume, "ASSUME", "false");
        if (u != "") {
            s += u;
            q.xb++
        }
        u = d(t["initialize record"], "INZRCD", "false");
        if (u != "") {
            s += u;
            q.xb++
        }
        u = d(t["return data"], "RTNDTA", "false");
        if (u != "") {
            s += u;
            q.xb++
        }
        u = d(t["put override"], "PUTOVR", "false");
        if (u != "") {
            s += u;
            q.xb++
        }
        u = d(t["override data"], "OVRDTA", "false");
        if (u != "") {
            s += u;
            q.xb++
        }
        u = d(t["override attribute"], "OVRATR", "false");
        if (u != "") {
            s += u;
            q.xb++
        }
        u = d(t["put retain"], "PUTRETAIN", "false");
        if (u != "") {
            s +=
                u;
            q.xb++
        }
        u = t["overlay range"];
        if (u != null && u != "") {
            u = u.split("-");
            if (u.length == 2) {
                var w = Number(u[0]), v = Number(u[1]);
                if (!isNaN(w) && w > 0 && !isNaN(v) && v > 0 && v >= w) {
                    u = {};
                    u.Hb = "ROWS";
                    u.params = [];
                    u.params.push(String(w));
                    u.params.push(String(v));
                    s += e(u);
                    q.xb++
                }
            }
        }
        w = t["clear line"];
        if (w != null && w != "") {
            u = {};
            u.Hb = "CLRL";
            u.params = [];
            u.params.push(w);
            s += e(u);
            q.xb++
        }
        u = false;
        for (w = 1; !u;) {
            v = "";
            if (w > 1) v = " " + String(w);
            u = true;
            var E = t["error message" + v];
            if (E != null && E != "") {
                u = {};
                u.Hb = "SFLMSG";
                if (t["error enhanced mode" + v] ==
                    "1") u.Hb = "SFLEMSG";
                u.params = [];
                u.params.push(E);
                E = t["error response" + v];
                E != null && pui.f(E) && u.params.push(S.Sb(E.fieldName));
                u.lf = t["error condition" + v];
                s += e(u);
                q.xb++;
                u = false
            }
            E = t["error message id" + v];
            if (E != null && E != "") {
                var y = t["error message file" + v], F = t["error message library" + v], D = t["replacement data" + v];
                pui.f(D) || (D = "");
                u = {};
                u.Hb = "SFLMSGID";
                if (t["error enhanced mode" + v] == "1") u.Hb = "SFLEMSGID";
                u.params = [];
                u.params.push(E);
                u.params.push(y);
                u.params.push(F);
                u.params.push(D);
                E = t["error response" + v];
                E != null && pui.f(E) && u.params.push(S.Sb(E.fieldName));
                u.lf = t["error condition" + v];
                s += e(u);
                q.xb++;
                u = false
            }
            w++
        }
        u = false;
        for (w = 1; !u;) {
            v = "";
            if (w > 1) v = " " + String(w);
            u = true;
            E = t["erase format" + v];
            if (E != null && E != "") {
                u = {};
                u.Hb = "ERASE";
                u.params = [];
                u.params.push(E);
                u.lf = t["erase condition" + v];
                s += e(u);
                q.xb++;
                u = false
            }
            w++
        }
        q.meta += s
    }

    function c(k, q) {
        for (var s = "", t = k.properties, u = false, w = 1; !u;) {
            var v = "";
            if (w > 1) v = " " + String(w);
            u = true;
            var E = t["error message" + v];
            if (E != null && E != "") {
                u = {};
                u.Hb = "ERRMSG";
                if (t["error enhanced mode" +
                v] == "1") u.Hb = "EMSG";
                u.params = [];
                u.params.push(t.id);
                u.params.push(E);
                E = t["error response" + v];
                E != null && pui.f(E) && u.params.push(S.Sb(E.fieldName));
                u.lf = t["error condition" + v];
                s += e(u);
                q.xb++;
                u = false
            }
            E = t["error message id" + v];
            if (E != null && E != "") {
                var y = t["error message file" + v], F = t["error message library" + v], D = t["replacement data" + v];
                pui.f(D) || (D = "");
                u = {};
                u.Hb = "ERRMSGID";
                if (t["error enhanced mode" + v] == "1") u.Hb = "EMSGID";
                u.params = [];
                u.params.push(t.id);
                u.params.push(E);
                u.params.push(y);
                u.params.push(F);
                u.params.push(D);
                E = t["error response" + v];
                E != null && pui.f(E) && u.params.push(S.Sb(E.fieldName));
                u.lf = t["error condition" + v];
                s += e(u);
                q.xb++;
                u = false
            }
            w++
        }
        w = t.value;
        if (pui.f(w)) {
            E = S.Sb(w.fieldName);
            if (t["input only"] == "true") {
                u = {};
                u.Hb = "INPUTONLY";
                u.type = "F";
                u.fieldName = E;
                s += e(u);
                q.xb++
            }
            y = t["override data"];
            if (pui.f(y) || y == "true") {
                u = {};
                u.Hb = "OVRDTA";
                u.type = "F";
                u.fieldName = E;
                if (pui.f(y)) u.lf = y;
                s += e(u);
                q.xb++
            }
            y = t["override attribute"];
            if (pui.f(y) || y == "true") {
                u = {};
                u.Hb = "OVRATR";
                u.type = "F";
                u.fieldName = E;
                if (pui.f(y)) u.lf = y;
                s +=
                    e(u);
                q.xb++
            }
            y = t["put retain"];
            if (pui.f(y) || y == "true") {
                u = {};
                u.Hb = "PUTRETAIN";
                u.type = "F";
                u.fieldName = E;
                if (pui.f(y)) u.lf = y;
                s += e(u);
                q.xb++
            }
            y = t["default value"];
            if (y != null && y != "") {
                u = false;
                if (w.dataType == "char" || w.dataType == "graphic") {
                    if (y.length > w.dataLength) y = y.substr(0, w.dataLength);
                    if (w.dataType == "graphic") y = pui.formatting.by(y, parseInt(w.dataLength, 10));
                    u = true
                }
                if (w.dataType == "indicator" || w.dataType == "expression") if (y == "1") u = true;
                if (w.dataType == "zoned" || w.dataType == "floating" || w.dataType == "date" || w.dataType ==
                    "time" || w.dataType == "timestamp") {
                    w.value = y;
                    w.revert = true;
                    if (typeof pui.Oe.format(w) != "object") u = true;
                    delete w.value;
                    delete w.revert
                }
                if (w.dataType == "reference") u = true;
                if (u) {
                    u = {};
                    u.Hb = "DFT";
                    u.type = "F";
                    u.fieldName = E;
                    u.params = [];
                    u.params.push(y);
                    u.lf = t["default value condition" + v];
                    s += e(u);
                    q.xb++
                }
            }
            u = false;
            for (w = 1; !u;) {
                v = "";
                if (w > 1) v = " " + String(w);
                u = true;
                y = t["clear message" + v];
                if (y == "1") {
                    u = {};
                    u.Hb = "MSGID";
                    u.type = "F";
                    u.fieldName = E;
                    u.params = [];
                    u.params.push("1");
                    u.lf = t["message condition" + v];
                    s += e(u);
                    q.xb++;
                    u = false
                }
                if (y == "0") {
                    u = {};
                    u.Hb = "MSGID";
                    u.type = "F";
                    u.fieldName = E;
                    u.params = [];
                    u.params.push("0");
                    u.params.push(t["message id prefix" + v]);
                    u.params.push(t["message id" + v]);
                    u.params.push(t["message file" + v]);
                    u.params.push(t["message library" + v]);
                    u.lf = t["message condition" + v];
                    s += e(u);
                    q.xb++;
                    u = false
                }
                w++
            }
        }
        q.meta += s
    }

    function d(k, q, s, t) {
        q = {Hb: q, params: []};
        if (t == null) t = false;
        if (k == null || k == "") k = s;
        t && q.params.push(k);
        if (k == "true" || t) return e(q);
        if (k == "true" || t) {
            meta += " ";
            return meta
        }
        if (pui.f(k)) {
            q.lf = k;
            return e(q)
        }
        return ""
    }

    function e(k) {
        var q = k.type, s = k.fieldName, t = k.params;
        if (t == null) t = [];
        var u = k.lf, w = k.Hb;
        k = "R";
        if (q == "F") k = "F" + f(s, 10);
        k += f(w, 10);
        k += f(String(t.length), 5);
        for (q = 0; q < t.length; q++) {
            s = t[q];
            if (s == null) s = "";
            if (pui.f(s)) {
                k += "F";
                k += S.Sb(f(s.fieldName, 10))
            } else {
                s = s.replace(/'/g, "''");
                k += "C";
                k = k;
                w = String;
                for (var v = s, E = Vc(v), y = v.search("''"); y != -1;) {
                    E -= 1;
                    v = v.substr(y + 2);
                    y = v.search("''")
                }
                k = k + f(w(E), 5);
                k += s
            }
        }
        if (u != null && pui.f(u)) {
            s = u;
            if (s.dataType == "expression") {
                k += "E";
                t = s.fieldName.split(" or ");
                k += f(String(t.length),
                    5);
                for (q = 0; q < t.length; q++) {
                    u = t[q].split(" and ");
                    k += f(String(u.length * 3), 5);
                    for (s = 0; s < u.length; s++) {
                        w = u[s];
                        if (w.substr(0, 1) != "N") w = " " + w;
                        k += f(w, 3)
                    }
                }
            } else {
                k += "F";
                k += S.Sb(f(s.fieldName, 10))
            }
        } else k += " ";
        return k
    }

    function f(k, q) {
        if (k == null) k = "";
        if (typeof k != "string") k = "";
        for (; k.length < q;) k += " ";
        return k
    }

    this.zA = this.toolbar = null;
    var h = [], g = -1, l = -1, n = this, o = null, i = null, r = null;
    this.gm = function () {
        pui.designer.C.os("*GLOBAL", pui.designer.C.global);
        for (var k, q = 0; q < h.length; q++) {
            for (var s = h[q], t = 0; t < s.kb.length; t++) {
                var u =
                    s.kb[t];
                k = u.properties["record format name"];
                k == null || k == "" || pui.designer.C.os(k, u.dom.grid.D)
            }
            k = s.i.name;
            k == null || k == "" || pui.designer.C.os(k, s.D)
        }
    };
    this.add = function (k, q) {
        if (k == null) {
            var s = n.zA;
            if (g >= 0) s = h[g].k;
            k = pui.ja ? new pui.designer.cL(s) : new pui.designer.jk(s);
            s = document.createElement("div");
            s.Du = pui.designer.fa ? pui.designer.fa : document.getElementById(Ha);
            s.Du.appendChild(s);
            for (var t = 1; document.getElementById(Ha + t) != null;) t++;
            Ca = Ha + t;
            s.id = Ca;
            k.b = s;
            k.init()
        }
        n.zA = k.k;
        h.push(k);
        pui.ja || k.Uf(i,
            r, q);
        n.select(h.length - 1);
        return k
    };
    this.Uf = function (k, q) {
        if (!pui.ja) {
            i = k;
            r = q;
            for (var s = 0; s < h.length; s++) h[s].Uf(k, q);
            if (k == null || q == null) pui.designer.fa = null;
            pui.ide.ht();
            pui.ide.refreshRibbon();
            pui.ide.dB()
        }
    };
    this.lJ = function () {
        n.Uf(r, i)
    };
    this.$g = function () {
        return {width: i, height: r}
    };
    this.copy = function () {
        var k = h[g];
        o = eval("(" + k.bh(k.i, false) + ")");
        if (pui.nc()) {
            localStorage.setItem("pui-formats-clipboard", "");
            localStorage.setItem("pui-formats-clipboard", JSON.stringify(o))
        }
    };
    this.nA = function () {
        if (pui.nc()) {
            var k =
                localStorage.getItem("pui-formats-clipboard");
            if (k) o = JSON.parse(k); else return false
        } else if (o == null) return false;
        n.toolbar.Pu = true;
        n.Jz(o);
        n.select(h.length - 1);
        n.toolbar.Pu = false;
        return true
    };
    this.CJ = function (k) {
        o = k
    };
    this.remove = function (k) {
        var q = h[g];
        if (n.Zp()) {
            q.n.Nc("Remove Grid", q);
            q.yf()
        } else if (k != true && h.length <= 1) pui.alert((pui.nodedesigner ? "Screen" : "Record format") + " cannot be removed.  The file must have at least one " + (pui.nodedesigner ? "screen" : "record format") + "."); else {
            if (g >= 0) {
                q.destroy();
                h.splice(g, 1)
            }
            h.length == 0 ? n.select(-1) : n.select(0)
        }
    };
    this.clear = function () {
        for (; h.length > 0;) n.remove(true)
    };
    this.destroy = function () {
        for (var k = 0; k < h.length; k++) h[k].destroy();
        h = []
    };
    this.Jz = function (k) {
        if (pui.ja) n.add().load(k); else {
            var q = n.add();
            pui.Pn({metaData: k, designMode: true, designer: q})
        }
    };
    this.Rf = function () {
        R.designer.NA();
        var k = R.designer.Ga[R.designer.i.l], q = k["design overlay formats"];
        if (q != null && q != "") {
            q = q.split(",");
            for (var s = 0; s < q.length; s++) {
                var t = q[s];
                if (k["record format name"] != null) if (pui.Wb(k["record format name"]) ==
                    pui.Wb(t)) continue;
                n.lI(t)
            }
        }
    };
    this.lI = function (k) {
        for (var q = 0; q < h.length; q++) {
            var s = h[q];
            if (pui.Wb(s.i.name) == pui.Wb(k)) {
                s.NA();
                s.selection.clear();
                var t = document.createElement("div");
                t.innerHTML = s.b.innerHTML;
                for (s = t.firstChild; s != null;) {
                    if (s.style != null && s.style.visibility != "hidden" && s.style.display != "none") {
                        s.style.opacity = 0.35;
                        s.style.filter = "alpha(opacity=35)";
                        s.style.cursor = "default"
                    }
                    s = s.nextSibling
                }
                t.xH = true;
                s = h[g].b;
                s.firstChild != null ? s.insertBefore(t, s.firstChild) : s.appendChild(t)
            }
        }
    };
    this.Cu =
        function () {
            if (n.Zp()) {
                if (l > 0) {
                    var k = h[g].kb, q = k[l];
                    k[l] = k[l - 1];
                    k[l - 1] = q;
                    n.refresh()
                }
                return true
            } else if (g > 0) {
                q = h[g];
                h[g] = h[g - 1];
                h[g - 1] = q;
                g -= 1;
                n.refresh();
                return true
            }
            return false
        };
    this.Au = function () {
        if (n.Zp()) {
            var k = h[g].kb;
            if (l < k.length - 1) {
                var q = k[l];
                k[l] = k[l + 1];
                k[l + 1] = q;
                n.refresh();
                return true
            }
        } else if (g < h.length - 1) {
            q = h[g];
            h[g] = h[g + 1];
            h[g + 1] = q;
            g += 1;
            n.refresh();
            return true
        }
        return false
    };
    this.aF = function (k) {
        var q = [];
        k.eachChild(function (s) {
            q.push(s)
        });
        for (k = 0; k < q.length; k++) q[k].remove()
    };
    this.FG =
        function () {
            var k = null;
            if (g >= 0 && g < h.length) k = h[g].b.id;
            return k
        };
    this.refresh = function () {
        var k = Ext.getCmp("recordFormatTree").getRootNode();
        n.aF(k);
        l = -1;
        for (var q, s, t = null, u = 0; u < h.length; u++) {
            for (var w = h[u], v = w.selection, E = [], y = u == g, F = 0; F < w.kb.length; F++) {
                s = w.kb[F];
                var D = false;
                if (y) {
                    var B = v.e;
                    for (q = 0; q < B.length; q++) {
                        var I = B[q].c;
                        if (I == s || I.dom.parentNode.parentNode == s.dom) {
                            D = true;
                            l = F;
                            break
                        }
                    }
                }
                if (D) y = false;
                q = s.properties["record format name"];
                s = s.properties.description;
                if (q == null || q == "") q = pui.nodedesigner ?
                    "[Unnamed Grid]" : "[Unnamed Subfile]";
                if (s != null && s != "") q += " - " + s;
                q = {
                    text: q,
                    leaf: true,
                    cls: "subfile",
                    icon: pui.flatlook ? "/profoundui/proddata/images/FlatIcons/16x16/grid.png" : "/profoundui/proddata/images/icons/grid.png",
                    listeners: {
                        click: function (z) {
                            n.select(z.yp, z.Vy)
                        }
                    }
                };
                if (D) q.isSelected = true;
                E.push(q)
            }
            q = w.i.name;
            if (q == null || q == "") {
                q = "[Unnamed Screen]";
                if (pui.ja) q = "[Unnamed Format]"
            }
            s = w.Ga[w.i.l].description;
            if (s != null && s != "") q += " - " + s;
            w = new Ext.tree.TreeNode(pui.UNIVERSAL ? {
                text: q,
                leaf: E.length ==
                    0,
                cls: "record-format",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/leaf.svg",
                listeners: {
                    click: function (z) {
                        n.select(z.yp)
                    }
                }
            } : {
                text: q,
                leaf: E.length == 0,
                cls: "record-format",
                icon: "/profoundui/proddata/images/FlatIcons/16x16/leaf.svg",
                listeners: {
                    click: function (z) {
                        n.select(z.yp)
                    }
                }
            });
            k.appendChild(w);
            w.yp = u;
            for (q = 0; q < E.length; q++) {
                v = new Ext.tree.TreeNode(E[q]);
                w.appendChild(v);
                if (E[q].isSelected) t = v;
                v.yp = u;
                v.Vy = q
            }
            E.length > 0 && w.expand(false, false);
            if (y) t = w
        }
        t != null && t.select();
        pui.ide.Qb();
        k = Ext.getCmp("_Copy_Record_Format");
        k != null && k.setDisabled(l >= 0)
    };
    this.ki = function () {
        var k = h[g];
        if (k == null) return null;
        k = k.i.name;
        if (!pui.ja) {
            var q = Ext.getCmp("centerPanel").getActiveTab();
            if (q && q.Xa) k = "Code View"
        }
        return k
    };
    this.We = function (k) {
        k = pui.Wb(k);
        for (var q = 0; q < h.length; q++) if (k == pui.Wb(h[q].i.name)) return h[q];
        return null
    };
    this.select = function (k, q) {
        if (g >= 0 && g < h.length && g != k) if (h[g].active) {
            h[g].selection.clear();
            h[g].b.parentNode.removeChild(h[g].b);
            h[g].active = false
        }
        g = k;
        if (k >= 0) {
            n.toolbar.designer = h[k];
            if (!pui.ja) {
                pui.sj.load();
                n.Rf()
            }
            Ca = h[k].b.id;
            if (!h[k].active) {
                h[k].b.Du = pui.designer.fa != null ? pui.designer.fa : document.getElementById(Ha);
                h[k].b.Du.appendChild(h[k].b);
                h[k].active = true;
                h[k].Uf(i, r);
                pui.ide.ht()
            }
            h[k].k.designer = h[k];
            h[k].selection.clear();
            if (q != null) {
                var s = h[k].kb[q];
                if (s.dom.style.visibility == "hidden") {
                    var t = s.properties["parent tab panel"], u = s.properties["parent tab"];
                    if (t != null && t != "") {
                        t = Tb(t);
                        if (t != null) {
                            t = t.tabPanel;
                            t.selectedTab = u;
                            t.H()
                        }
                    }
                }
                h[k].selection.add(s)
            }
            h[k].k.refresh();
            pui.ide.refreshRibbon()
        }
        n.refresh();
        pui.ja || pui.ide.dB()
    };
    this.Zp = function () {
        return l >= 0
    };
    this.zs = function () {
        for (var k = 0; k < h.length; k++) h[k].Wa(true)
    };
    this.wj = function (k) {
        function q() {
            for (var J = 1, K = "QSFLCTL001"; u[K] != null;) {
                J++;
                K = "QSFLCTL00";
                if (J >= 10) K = "QSFLCTL0";
                if (J >= 100) K = "QSFLCTL";
                K = K + J
            }
            u[K] = true;
            return K
        }

        function s(J, K) {
            function L() {
                if (O > 1) for (; N[O - 1].substr(0, 1) == "'";) {
                    N[O - 1] = N[O - 1].substr(1);
                    N[O - 2] += "'"
                }
            }

            for (var N = [], O = 0; J.length > K;) {
                for (var V = K; V > 0 && J.substr(V - 1, 1) == " ";) V--;
                if (V == 0) V = K;
                N.push(J.substr(0, V));
                O++;
                L();
                J = J.substr(V)
            }
            if (J.length >
                0) {
                N.push(J);
                O++;
                L()
            }
            return N
        }

        var t = S.si(), u = n.It(), w = "library=" + encodeURIComponent(S.Sb(k.library));
        w += "&file=" + encodeURIComponent(S.Sb(k.file));
        w += "&member=" + encodeURIComponent(S.Sb(k.member));
        w += "&text=" + encodeURIComponent(k.text.replace(/'/g, "''"));
        if (k.comments != null) for (var v = 0; v < k.comments.length; v++) w += "&cmt" + (v + 1) + "=" + encodeURIComponent(k.comments[v]);
        if (k.compile == "Y") {
            w += "&compile=Y";
            w += "&obj=" + encodeURIComponent(S.Sb(k.wf));
            w += "&objlib=" + encodeURIComponent(S.Sb(k.cf))
        } else w += "&compile=N";
        var E = 1;
        for (v = 0; v < pui.ka.length; v++) {
            k = pui.ka[v].match(/^A([NAO0-9 ]+):(.+)$/);
            if (k != null && k.length == 3) {
                var y = encodeURIComponent(k[2]), F = [], D = [], B = k[1].split("O");
                for (k = 0; k < B.length; k++) for (var I = B[k].split("A"), z = 0; z < I.length; z++) {
                    var H = pui.designer.C.Aq(I[z]);
                    if (H.jh != "") {
                        F.push(z == 0 && k > 0 ? "O" : " ");
                        D.push(I[z])
                    } else console.log("Failed to parse indicator expression in keyword,", pui.ka[v])
                }
                for (k = 0; k < D.length; k++) {
                    w += "&keyword" + E + "=" + (k == D.length - 1 ? y : "*PUIBLANK");
                    w += "&keywordIndic" + E + "=" + encodeURIComponent(D[k]);
                    w += "&keywordPos7," + E + "=" + F[k];
                    E++
                }
            } else {
                H = pui.designer.C.Aq(pui.ka[v]);
                w += "&keyword" + E + "=" + encodeURIComponent(H.keyword);
                if (H.jh != "") w += "&keywordIndic" + E + "=" + encodeURIComponent(H.jh);
                E++
            }
        }
        if (Q == "dspf" && !pui.ja && MOBILE_LICENSE) {
            v = n.$g();
            if (v.width != null && v.height != null) {
                w += "&canvasWidth=" + v.width;
                w += "&canvasHeight=" + v.height
            }
        }
        if (pui.designer.Ea) w += "&longNameAliases=Y";
        E = 1;
        for (v = D = 0; v < h.length; v++) {
            y = h[v];
            F = y.i.name;
            F = String(F);
            F = S.Sb(F);
            if (!pui.ja) {
                B = y.kb;
                for (k = 0; k < B.length; k++) {
                    I = B[k];
                    if (t && k < B.length -
                        1 && y.D.C.subfiles[S.Sb(String(I.properties["record format name"]))]) {
                        B.push(B[k]);
                        B.splice(k, 1);
                        I = B[k]
                    }
                    z = I.dom.grid.D.wj(E);
                    if (typeof z == "object" && z.msg != null) {
                        z.formatName = F;
                        return z
                    }
                    H = I.properties["record format name"];
                    H = String(H);
                    H = S.Sb(H);
                    I = "SFL";
                    I = I + F;
                    w += "&fmt" + E + "=" + encodeURIComponent(H);
                    w += pui.designer.C.wj(E, H);
                    w += "&data" + E + ",1=QPUI" + encodeURIComponent(I);
                    if (y.D.C.subfiles[H] != true || !t) w += "&sflctl" + E + "=" + encodeURIComponent(q());
                    w += "&isSFL" + E + "=Y";
                    if (z != "") w += "&" + z;
                    E++
                }
            }
            B = y.D.wj(E);
            if (typeof B ==
                "object" && B.msg != null) {
                B.formatName = F;
                return B
            }
            if (!pui.ja) {
                I = I = "REC";
                if (y.kb.length > 0) {
                    I = I = "CTL";
                    I += f(String(y.kb.length), 5);
                    for (k = 0; k < y.kb.length; k++) I += b(y.kb[k], y)
                }
                D = {xb: 0, meta: ""};
                a(y, D);
                for (k = 0; k < y.items.length; k++) {
                    z = y.items[k];
                    z.de() || c(z, D)
                }
                I += f(String(D.xb), 5) + D.meta;
                w += pui.designer.C.wj(E, F);
                I = s(I, 2500);
                for (k = 0; k < I.length; k++) w += "&data" + E + "," + (k + 1) + "=QPUI" + encodeURIComponent(I[k]);
                D = I.length;
                k = y.Ga[y.i.l]["overlay range"];
                if (t && k != null && typeof k == "string") {
                    k = k.split("-");
                    if (k.length >= 1) {
                        k =
                            k[0];
                        I = pui.designer.C.uG(F);
                        if (I != null) k = I;
                        w += "&overlaystart" + E + "=" + k
                    }
                }
            }
            w += "&fmt" + E + "=" + encodeURIComponent(F);
            k = y.bh(h[v].i, false);
            k = k.replace(/'/g, "''");
            I = s(k, 2500);
            for (k = 0; k < I.length; k++) w += "&data" + E + "," + (k + D + 1) + "=" + encodeURIComponent(I[k]);
            if (B != "") {
                w += "&";
                w += B
            }
            E++
        }
        return w
    };
    this.Qm = function (k, q) {
        function s(F) {
            return F.replace(/[\"]/g, '\\"').replace(/[\\]/g, "\\\\").replace(/[\x00-\x09\x0B-\x1F\x7F-\x9F]/g, " ")
        }

        for (var t = '{ "text": "' + s(k) + '", "formats": [', u = 0; u < h.length; u++) {
            var w = h[u];
            if (u !=
                0) t += ",";
            t += w.bh(w.i, true)
        }
        t += "]";
        if (!pui.viewdesigner) {
            t += ', "keywords": [';
            for (u = 0; u < pui.ka.length; u++) {
                if (u != 0) t += ",";
                t += '"' + s(pui.ka[u]) + '"'
            }
            t += "]"
        }
        if (q) {
            t += ', "dds": [\n';
            w = false;
            var v = pui.designer.C.formats;
            if (v["*GLOBAL"] != null) for (u = 0; u < v["*GLOBAL"].length; u++) {
                var E = v["*GLOBAL"][u];
                if (w) t += ",\n";
                t += '"' + s(E) + '"';
                w = true
            }
            for (var y in v) if (y != "*GLOBAL") {
                u = "     A          R " + y;
                if (w) t += ",\n";
                t += '"' + s(u) + '"';
                w = true;
                for (u = 0; u < v[y].length; u++) {
                    E = v[y][u];
                    if (w) t += ",\n";
                    t += '"' + s(E) + '"';
                    w = true
                }
            }
            t +=
                "]"
        }
        if (Q == "dspf" && !pui.ja && MOBILE_LICENSE) {
            y = n.$g();
            if (y.width != null && y.height != null) {
                t += ', "canvas width": ' + y.width;
                t += ', "canvas height": ' + y.height
            }
        }
        if (pui.designer.Ea) t += ', "long name aliases": true';
        t += " }";
        return t
    };
    this.It = function (k, q) {
        for (var s = {}, t = false, u = 0; u < h.length; u++) {
            var w = h[u], v = w.i.name;
            v = String(v);
            v = pui.Wb(v);
            if (s[v]) t = true;
            s[v] = true;
            if (!q) {
                w = w.kb;
                for (v = 0; v < w.length; v++) {
                    var E = w[v].properties["record format name"];
                    E = String(E);
                    E = pui.Wb(E);
                    if (s[E]) t = true;
                    s[E] = true
                }
            }
        }
        return k ? t :
            s
    };
    this.Ce = function () {
        for (var k = 0; k < h.length; k++) h[k].dirty = false
    };
    this.qb = function () {
        for (var k = 0; k < h.length; k++) h[k].dirty = true
    };
    this.isDirty = function () {
        for (var k = 0; k < h.length; k++) {
            var q = h[k];
            if (q.dirty) return true;
            if (k > 0) if (q.Ga[q.i.l]["record format name"] == null) return true
        }
        return false
    };
    this.validate = function () {
        for (var k, q = 0; q < h.length; q++) {
            var s = h[q];
            k = s.i.name;
            k = S.wa(k, "format");
            if (k != "") {
                k = (pui.nodedesigner ? "Screen" : "Record format") + " name " + k;
                n.select(q);
                pui.alert(k);
                s.k.he("record format name",
                    pc());
                return false
            }
            for (var t = s.kb, u = 0; u < t.length; u++) {
                var w = t[u];
                k = w.properties["record format name"];
                k = S.wa(k, "format");
                if (k != "") {
                    k = (pui.nodedesigner ? "Grid name " : "Subfile record format name ") + k;
                    n.select(q, u);
                    pui.alert(k);
                    s.k.he("record format name", w.dom.grid.mi());
                    return false
                }
                var v = w.properties["subfile message key"], E = w.properties["subfile program message queue"],
                    y = w.properties["subfile control program message queue"];
                k = "";
                if (pui.f(v)) if (v.dataLength != "4") k = "The field for subfile message key must have a length of 4.";
                if (pui.f(E)) if (E.dataLength != "10" && E.dataLength != "276") k = "The field for subfile program message queue must have a length of 10 or 276.";
                if (pui.f(y)) if (y.dataLength != "10" && y.dataLength != "276") k = "The field for subfile control program message queue must have a length of 10 or 276.";
                if (pui.f(v) && !pui.f(E) || !pui.f(v) && pui.f(E)) k = "Both subfile message key and subfile program message queue must be specified.";
                if (k != "") {
                    n.select(q, u);
                    pui.alert(k);
                    return false
                }
                v = w.properties["subfile size"];
                k = "";
                if (v != null &&
                    v != "") if (pui.f(v)) {
                    if (v.dataType != "zoned" || v.dataLength != "5" || v.decPos != "0") k = "Subfile size field must be a Zoned Decimal (5,0)."
                } else {
                    v = Number(v);
                    E = w.dom.grid.Fp();
                    if (isNaN(v)) k = "Subfile size must be a number."; else if (v != parseInt(v)) k = "Subfile size must be an integer."; else if (v > 9999) k = "Subfile size cannot be greater than 9999."; else if (v < E) k = "Subfile size must be greater than or equal to the number of grid rows."
                }
                if (k != "") {
                    n.select(q, u);
                    pui.alert(k);
                    s.k.he("subfile size", w.dom.grid.mi());
                    return false
                }
                k =
                    w.properties["return mode"];
                if (k != null && pui.f(k) && k.dataType == "char" && k.dataLength != "1") {
                    k = "Subfile return mode field cannot exceed a length of 1.";
                    n.select(q, u);
                    pui.alert(k);
                    s.k.he("return mode", w.dom.grid.mi());
                    return false
                }
            }
            if (!pui.ja) {
                k = s.items;
                t = [];
                u = {};
                for (w = 0; w < k.length; w++) {
                    t.push(k[w].properties.id);
                    if (typeof k[w].properties["label for"] == "string") u[k[w].properties.id] = k[w].properties["label for"]
                }
                for (var F in u) {
                    w = t.indexOf(u[F]);
                    if (w == -1) {
                        t = s.items;
                        for (w = 0; w < t.length; w++) if (t[w].properties.id ==
                            F) {
                            n.select(q);
                            s.selection.clear();
                            s.selection.add(t[w]);
                            s.k.refresh();
                            s.k.he("label for", oc());
                            break
                        }
                        pui.alert("Invalid 'label for' property in the " + F + " element on the '" + S.Sb(s.i.name) + "' record format");
                        return false
                    }
                }
            }
        }
        if (n.It(true)) {
            pui.alert("Record format names must be unique.");
            return false
        }
        return true
    }
};
pui.designer.TC = function () {
    function b(g) {
        var l = f.insertRow(f.rows.length);
        l.formatName = g;
        var n = l.insertCell(0), o = rd.ki();
        if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive") o = o.toUpperCase();
        if (pui.nodedesigner && pui.pjsDefaultMode !== "case-sensitive") o = o.toLowerCase();
        o = o != g;
        var i = document.createElement("span");
        i.style.fontWeight = "bold";
        i.innerHTML = "Preview Format: ";
        if (pui.nodedesigner) i.innerHTML = "Preview Screen: ";
        if (o) {
            i.innerHTML = "Overlay Format: ";
            if (pui.nodedesigner) i.innerHTML = "Overlay Screen: ";
            var r = document.createElement("input");
            r.type = "checkbox";
            r.onclick = function (k) {
                k = vb(k);
                var q = k.parentNode.parentNode;
                if (k.checked) a(q); else {
                    k = f.rows[q.rowIndex + 1];
                    for (q = []; k != null && k.formatName == null;) {
                        q.push(k);
                        if (k.rowIndex == -1) break;
                        k = f.rows[k.rowIndex + 1]
                    }
                    for (var s = 0; s < q.length; s++) {
                        k = q[s];
                        k.parentNode.removeChild(k)
                    }
                }
            };
            n.appendChild(r);
            n.appendChild(document.createTextNode(" "))
        }
        n.appendChild(i);
        n.appendChild(document.createTextNode(g));
        n.style.backgroundColor = "#eeeeee";
        n.style.paddingLeft = "5px";
        n.style.height = "25px";
        n.style.borderBottom = "1px solid #cccccc";
        n.style.borderLeft = "1px solid #cccccc";
        n.style.borderRight = "1px solid #cccccc";
        n.colSpan = 2;
        if (!o) {
            n.style.borderTop = "1px solid #cccccc";
            a(l)
        }
    }

    function a(g) {
        var l = g.formatName, n = f.rows[g.rowIndex + 1];
        if (g.rowIndex == -1) n = null;
        l = rd.We(l);
        g = l.D.Dp();
        var o;
        o = c(g, n, null, o);
        l = l.kb;
        for (var i = 0; i < l.length; i++) {
            var r = l[i];
            g = r.dom.grid.D.Dp();
            o = c(g, n, r, o)
        }
        if (o != null) {
            n = o.cells[1];
            o.cells[0].style.borderBottom = "1px solid #cccccc";
            n.style.borderBottom =
                "1px solid #cccccc"
        }
    }

    function c(g, l, n, o) {
        var i = {};
        for (var r in g) {
            if (r.substr(0, 3) == "*IN") {
                if (i[r] == true) continue;
                i[r] = true
            }
            var k = g[r];
            if (k.dataType == "expression") {
                k = r.split(" OR ");
                for (var q = 0; q < k.length; q++) for (var s = k[q].split(" AND "), t = 0; t < s.length; t++) {
                    var u = s[t];
                    if (u.substr(0, 1) == "N") u = u.substr(1);
                    u = "*IN" + u;
                    if (i[u] != true) {
                        i[u] = true;
                        o = d({fieldName: u, dataType: "indicator"}, l, n)
                    }
                }
            } else o = d(k, l, n)
        }
        return o
    }

    function d(g, l, n) {
        var o;
        if (l == null) o = f.insertRow(f.rows.length); else {
            o = document.createElement("tr");
            l.parentNode.insertBefore(o, l)
        }
        l = o.insertCell(0);
        l.style.paddingLeft = "10px";
        l.style.height = "25px";
        l.style.borderLeft = "1px solid #cccccc";
        l.style.width = "250px";
        var i = "", r = "";
        if (n != null) {
            i = n.dom.c.properties["record format name"];
            if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive") i = i.toUpperCase();
            i += ".";
            r = i
        }
        i += pui.designer.Ea && g.longName != null ? g.longName : g.fieldName;
        n = h[i];
        i += ":";
        if (pui.nodedesigner && pui.pjsDefaultMode !== "case-sensitive") i = i.toLowerCase();
        l.appendChild(document.createTextNode(i));
        l.fieldName = r + g.fieldName;
        l = o.insertCell(1);
        l.style.borderRight = "1px solid #cccccc";
        i = document.createElement("input");
        if (g.dataType == "indicator") {
            i.type = "checkbox";
            if (n == "1") i.checked = true
        } else if (n != null) i.value = n;
        if (g.dataType == "char" || g.dataType == "varchar" || g.dataType == "graphic" || g.dataType == "zoned" || g.dataType == "floating") {
            r = Number(g.dataLength);
            if (!isNaN(r)) {
                if (g.dataType == "zoned" || g.dataType == "floating") {
                    r += 2;
                    S.W(i, "keydown", Pb)
                }
                if (n == null && g.dataType == "zoned") {
                    i.value = "0";
                    g = Number(g.decPos);
                    if (!isNaN(g) && g > 0) for (i.value = ".0"; i.value.length <= g;) i.value += "0"
                }
                i.maxLength = r;
                if (r > 30) r = 30;
                i.size = r
            }
        }
        l.appendChild(i);
        return o
    }

    var e = document.createElement("div"), f = document.createElement("table"), h = {};
    f.cellSpacing = 0;
    f.cellPadding = 2;
    f.width = "97%";
    f.style.fontFamily = "Arial";
    f.style.fontSize = "12px";
    f.style.emptyCells = "show";
    this.show = function (g) {
        for (; f.rows.length > 0;) f.deleteRow(f.rows.length - 1);
        var l = rd.ki();
        if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive") l = l.toUpperCase();
        if (pui.nodedesigner &&
            pui.pjsDefaultMode !== "case-sensitive") l = l.toLowerCase();
        b(l);
        var n = rd.It(false, true);
        for (var o in n) {
            if (!pui.viewdesigner && pui.pjsDefaultMode !== "case-sensitive") o = o.toUpperCase();
            if (pui.nodedesigner && pui.pjsDefaultMode !== "case-sensitive") o = o.toLowerCase();
            o != l && b(o)
        }
        f.parentNode != null && f.parentNode.removeChild(f);
        e.innerHTML = "";
        e.appendChild(f);
        e.parentNode != null && e.parentNode.removeChild(e);
        g.appendChild(e)
    };
    this.aG = function () {
        pui.ml = {};
        for (var g = 1; g <= f.rows.length; g++) {
            var l;
            l = g == f.rows.length ?
                f.rows[0] : f.rows[g];
            if (l.formatName != null) {
                var n = l.cells[0].firstChild;
                if (!(n != null && n.type == "checkbox" && !n.checked)) {
                    var o = l;
                    pui.ml[o.formatName] = {data: {}, subfiles: {}};
                    l = pui.ml[o.formatName].data;
                    n = pui.ml[o.formatName].subfiles;
                    var i = f.rows[o.rowIndex + 1];
                    if (o.rowIndex == -1) i = null;
                    for (; i != null && i.formatName == null;) {
                        var r = i.cells[0].fieldName, k = i.cells[1].firstChild;
                        o = k.value;
                        if (k.type == "checkbox") o = k.checked ? "1" : "0";
                        h[r] = o;
                        var q = r.split(".");
                        if (q.length == 2) {
                            k = q[0];
                            r = q[1];
                            if (n[k] == null) {
                                n[k] = {
                                    ref: {},
                                    "field names": [], data: []
                                };
                                for (q = 1; q <= 20; q++) n[k].data.push([])
                            }
                            n[k]["field names"].push(r);
                            r = n[k].data;
                            for (k = 0; k < r.length; k++) r[k].push(o)
                        } else l[r] = o;
                        if (i.rowIndex == -1) break;
                        i = f.rows[i.rowIndex + 1]
                    }
                }
            }
        }
    };
    this.wx = function () {
        h = {}
    }
};
pui.designer.nl = new pui.designer.TC;
pui.generatePreview = function () {
    var b = [], a = pui.designer.currentDisplay.member;
    if (a == null) a = pui.designer.currentDisplay.gp;
    if (a == null) a = "FILE";
    var c = pui.designer.currentDisplay.library;
    if (c == null) c = "LIBRARY";
    for (formatName in pui.ml) {
        var d = rd.We(formatName);
        if (d != null) {
            d = d.bh(d.i);
            d = eval("(" + d + ")");
            format = {
                name: formatName,
                file: a,
                library: c,
                fileId: 1,
                ref: {},
                data: pui.ml[formatName].data,
                subfiles: pui.ml[formatName].subfiles,
                metaData: d
            };
            b.push(format)
        }
    }
    if (b.length.length > 0) b[b.length - 1].active = true;
    return {
        success: true,
        psid: "99999",
        appJob: {
            auth: "",
            user: "",
            sysTime: 0,
            decimalFormat: " ",
            curSym: "$",
            dateSeparator: "/",
            timeSeparator: ":",
            dateFormat: "*MDY",
            sysName: ""
        },
        layers: [{formats: b}]
    }
};
pui.cnv.Xs = function () {
    pui.cnv.Ra.clear();
    pui.cnv.Yd.clear();
    pui.cnv.Ja.clear(pui.cnv.greenScreenDisplay.text);
    pui.cnv.info = {};
    pui.cnv.info.formats = {};
    pui.cnv.info.ds = null;
    pui.cnv.Kf = null;
    pui.cnv.Ea = false;
    pui.cnv.Ra.YD(pui.cnv.greenScreenDisplay.alerts, 20);
    pui.cnv.Ys(pui.cnv.greenScreenDisplay.keywords, "file");
    var b = pui.cnv.greenScreenDisplay.formats;
    for (var a in b) pui.cnv.iF(a, b[a]);
    pui.cnv.Yd.Ja();
    pui.cnv.TJ(b);
    pui.cnv.FJ();
    pui.cnv.UH();
    pui.cnv.zI()
};
pui.cnv.iF = function (b, a) {
    pui.cnv.info.formats[b] = {};
    pui.cnv.Ja.dE(b);
    pui.cnv.Ys(a.keywords, "format");
    var c = pui.cnv.getScreenWidth(b);
    if (!pui.cnv.info.formats[b].ti) {
        var d = pui.cnv.themes.ba("items");
        if (pui.cnv.info.formats[b].Va != null) d = pui.cnv.themes.ba("windows").items;
        if (d != null) for (var e = 0; e < d.length; e++) {
            var f = d[e], h = {};
            if (c == 132 && (f.alt_width != null || f.alt_height != null)) for (var g in f) if (g.substr(0, 4) == "alt_") h[g.substr(4)] = f[g]; else h[g] = f[g]; else for (g in f) if (g.substr(0, 4) != "alt_") h[g] = f[g];
            h.id = pui.cnv.mh + "_" + b + "_" + h.id;
            pui.cnv.Ja.addItem(h)
        }
    }
    pui.cnv.info.ds != null && pui.cnv.Ja.jE("*IN" + pui.cnv.info.ds);
    c = a.fields;
    if (c != null) for (e = 0; e < c.length; e++) {
        d = c[e];
        d.formatName = b;
        d.memberName = pui.cnv.mh;
        pui.cnv.hF(d)
    }
    e = pui.cnv.themes.ba("add enhancements");
    if (e != null && typeof e == "function") {
        c = pui.cnv.info.formats[b];
        e(pui.cnv.Ja.ji(), c.ti, c.Va != null, pui.cnv.mh, a)
    }
};
pui.cnv.hF = function (b) {
    if (b.alt_cond != null) if (pui.cnv.ZB(b.alt_cond, b.formatName)) {
        if (b.alt_row != null) b.row = b.alt_row;
        if (b.alt_col != null) b.col = b.alt_col
    }
    var a = b.row, c = b.col, d = pui.cnv.info.formats[b.formatName];
    if (a != null && c != null) {
        var e = a, f = c + pui.cnv.my(b) - 1, h = pui.cnv.getScreenWidth(b.formatName);
        if (f > h) {
            for (; f > h;) {
                f -= h;
                e += 1
            }
            f = h
        }
        if (d.Eg == null) d.Eg = a;
        if (d.ag == null) d.ag = e;
        if (d.al == null) d.al = c;
        if (d.Uj == null) d.Uj = f;
        if (a < d.Eg) d.Eg = a;
        if (e > d.ag) d.ag = e;
        if (c < d.al) d.al = c;
        if (f > d.Uj) d.Uj = f
    }
    a = pui.cnv.SG(b);
    c =
        pui.cnv.QG(b);
    e = pui.cnv.themes.ba("remove option labels");
    f = pui.cnv.themes.ba("remove fkey labels");
    if ((a = e && a || f && c) && b.cond != null) {
        b["const"] = " ";
        a = false
    }
    if (!a) {
        a = pui.cnv.Ja.addField(b);
        pui.cnv.Ys(b.keywords, "field", b);
        c = pui.cnv.themes.ba("process field");
        c != null && typeof c == "function" && c(b, a, d.ti, d.Va != null)
    }
};
pui.cnv.SG = function (b) {
    if (b.cond != null && pui.cnv.themes.ba("include conditioned options") != true) return false;
    var a = b["const"];
    if (a == null || a == "") return false;
    b = pui.cnv.info.formats[b.formatName];
    if (b.lk == null) return false;
    var c = a.split("=");
    if (c.length > 2) return pui.cnv.RG(a, b);
    if (c.length != 2) return false;
    a = c[1];
    if (pui.cnv.themes.ba("allow alpha options") != true) {
        c = Number(c[0]);
        if (isNaN(c) || c <= 0 || c > 99 || a == "") return false
    } else {
        c = c[0];
        if (c.length > 1 && c.charAt(0).toUpperCase() == "F") return false
    }
    if (b.options ==
        null) b.options = [];
    b.options.push({option: c, text: a});
    return true
};
pui.cnv.RG = function (b, a) {
    function c(l) {
        var n = l.split("=");
        if (n.length != 2) return false;
        l = n[1];
        if (pui.cnv.themes.ba("allow alpha options") != true) {
            n = Number(n[0]);
            if (isNaN(n) || n <= 0 || n > 99 || l == "") return false
        } else {
            n = n[0];
            if (n.length > 1 && n.charAt(0).toUpperCase() == "F") return false
        }
        d.push({option: n, text: l});
        return true
    }

    var d = [], e = b.split("  ");
    if (e.length < 2) e = b.split("  ");
    if (e.length < 2) return false;
    for (var f = true, h = 0; h < e.length; h++) {
        var g = e[h];
        g = Zb(g);
        c(g) || (f = false)
    }
    if (f) {
        if (a.options == null) a.options = [];
        for (h = 0; h < d.length; h++) a.options.push(d[h])
    }
    return f
};
pui.cnv.QG = function (b) {
    function a(g) {
        var l = g.split("=");
        if (l.length != 2) {
            l = g.split("-");
            if (l.length != 2) return false
        }
        g = Zb(l[0]);
        l = Zb(l[1]);
        if (g.length < 2) return false;
        if (l == "") return false;
        var n = pui.cnv.themes.ba("fkey suffix char");
        if (n != null && n == g.substr(g.length - 1, 1)) {
            g = g.substr(0, g.length - 1);
            if (g.length < 2) return false
        }
        if (g == "PRINT" || g == "Print") g = "PRINT"; else {
            var o = g.substr(g.length - 2, 1);
            n = g.substr(g.length - 1, 1);
            if (n < "0" || n > "9") return false;
            n = g.substr(0, g.length - 1);
            if (o == "0" || o == "1" || o == "2") n = g.substr(0,
                g.length - 2);
            o = {F: true, Cmd: true, CMD: true};
            if (pui.cnv.themes.ba("valid fkey prefixes") != null) {
                o = {};
                for (var i = pui.cnv.themes.ba("valid fkey prefixes"), r = 0; r < i.length; r++) o[i[r]] = true
            }
            if (o[n] != true) return false;
            g = Number(g.substr(n.length));
            if (isNaN(g)) return false;
            if (g < 1 || g > 24) return false
        }
        if (pui.cnv.themes.ba("use fkey labels") == false) return true;
        if (d.Kf == null) d.Kf = {};
        d.Kf[String(g)] = l;
        if (b.cond != null) {
            if (d.tj == null) d.tj = {};
            if (d.tj[String(g)] == null) d.tj[String(g)] = b.cond; else d.tj[String(g)] += " or " +
                b.cond
        }
        if (pui.cnv.Kf == null) pui.cnv.Kf = {};
        pui.cnv.Kf[String(g)] = l;
        return true
    }

    var c = b["const"];
    if (c == null || c == "") return false;
    c = c.replace(/[ ]+([^ ]+)(=|-)/g, "  $1$2");
    var d = pui.cnv.info.formats[b.formatName];
    if (c.split("=").length > 2 || c.split("-").length > 2) {
        var e = c.split("  ");
        if (e.length < 2) e = c.split("  ");
        if (e.length < 2) return false;
        c = false;
        for (var f = 0; f < e.length; f++) {
            var h = e[f];
            h = Zb(h);
            if (a(h)) c = true
        }
        return c
    } else return a(c)
};
pui.cnv.my = function (b) {
    var a = b.length;
    if (b["const"] != null) a = b["const"].length;
    if (a == null) a = 0;
    var c = b.keywords, d = null, e = null;
    if (c != null) for (var f = 0; f < c.length; f++) {
        var h = c[f];
        if (h.name == "EDTCDE") d = h.parms[0];
        if (h.name == "EDTWRD") e = h.parms[0]
    }
    if (d != null) if (d == "Y") a += a >= 5 ? 2 : 1; else {
        if (d >= "A" && d <= "D") a += 3;
        d >= "J" && d <= "M" && a++;
        d >= "N" && d <= "Q" && a++;
        if (d == "1" || d == "A" || d == "J" || d == "N" || d == "2" || d == "B" || d == "K" || d == "O") {
            c = b.length;
            if (c == null) c = 0;
            if (b.decimals != null) c -= b.decimals;
            if (isNaN(c) || c < 1) c = 1;
            a += parseInt((c -
                1) / 3)
        }
    }
    b.decimals != null && b.decimals != 0 && a++;
    if (e != null) {
        if (e.substr(0, 1) == "'") e = e.substr(1);
        if (e.substr(e.length - 1, 1) == "'") e = e.substr(0, e.length - 1);
        if (b.decimals == null || b.decimals == 0) if (e.substr(e.length - 1, 1) == ".") e = e.substr(0, e.length - 1);
        a = e.length;
        if (e.substr(0, 1) == "0") a -= 1
    }
    return a
};
pui.cnv.jF = function (b) {
    var a = {};
    a.fieldName = b.name;
    a.designValue = "[" + b.name + "]";
    var c, d, e = pui.cnv.themes.ba("default locale");
    if (e == null) e = "en_US";
    switch (b["data type"]) {
        case "":
        case " ":
            d = c = null;
            break;
        case "A":
            c = "char";
            d = "Text";
            break;
        case "D":
            c = null;
            d = "Number";
            break;
        case "E":
            d = c = null;
            break;
        case "F":
            c = "floating";
            d = "Number";
            break;
        case "G":
            c = "graphic";
            d = "Text";
            break;
        case "I":
            d = c = null;
            break;
        case "J":
            d = c = null;
            break;
        case "L":
            c = "date";
            d = "Date";
            break;
        case "M":
            c = "char";
            d = "Number";
            break;
        case "N":
            c = null;
            d =
                "Number";
            break;
        case "O":
            d = c = null;
            break;
        case "S":
            c = "zoned";
            d = "Number";
            break;
        case "T":
            c = "time";
            d = "Time";
            break;
        case "W":
            c = "char";
            d = "Text";
            break;
        case "X":
            c = "char";
            d = "Text";
            break;
        case "Y":
            c = "zoned";
            d = "Number";
            a.noExtraSpaces = "true";
            break;
        case "Z":
            c = "timestamp";
            d = "Time Stamp";
            break;
        case "R":
            c = "reference";
            d = "Text";
            a.refField = "";
            var f = b.ovrlen, h = b.ovrdtype, g = b.ovrdec;
            if (!isNaN(Number(f)) && Number(f) > 0) {
                f = String(Number(f));
                if (b.ovrlen.substr(0, 1) == "+") f = "+" + f
            }
            if (!isNaN(Number(g)) && Number(g) > 0) {
                g = String(Number(g));
                if (b.ovrdec.substr(0, 1) == "+") g = "+" + g
            }
            if (g == "00") g = "0";
            if (!f && g) if (b.length) f = b.length;
            if (h) if (h == "D" || h == "F" || h == "M" || h == "S" || h == "Y") {
                d = "Number";
                if (h == "Y") a.noExtraSpaces = "true"
            } else if (h == "A" || h == "W" || h == "X") d = "Text"; else if (h == "L") d = "Date"; else if (h == "T") d = "Time"; else if (h == "Z") d = "Time Stamp";
            if (b.decimals != null || g) d = "Number";
            if (f) a.refField += " " + f;
            if (h) a.refField += " '" + h + "'";
            if (g) a.refField += " " + g;
            a.refField = Zb(a.refField);
            break
    }
    if (c == null) c = b.decimals == null ? "char" : "zoned";
    if (d == null) d = c == "zoned" ?
        "Number" : "Text";
    a.dataType = c;
    a.formatting = d;
    switch (d) {
        case "Text":
            a.trimLeading = "false";
            a.trimTrailing = "true";
            if (b["field type"] == "O" || b["field type"] == "M" || b.ovrdtype == "M") a.trimTrailing = "false";
            a.textTransform = b["field type"] == "B" || b["field type"] == "I" || b.ovrdtype == "I" ? pui.cnv.info.uu == true || pui.cnv.info.formats[b.formatName].uu == true ? "none" : "uppercase" : "none";
            break;
        case "Number":
            a.numSep = "false";
            a.zeroBalance = "true";
            a.zeroFill = "true";
            if (b["field type"] == "I" || b.ovrdtype == "I" || b["field type"] == "B" ||
                c == "char") {
                a.zeroBalance = "false";
                a.zeroFill = "false"
            }
            a.curSym = "";
            a.units = "";
            a.negNum = "-999.00";
            break;
        case "Date":
            a.dateFormat = "";
            a.locale = e;
            break;
        case "Time":
            a.timeFormat = "";
            a.locale = e;
            break;
        case "Time Stamp":
            a.timeStampFormat = "Y-m-d-H.i.s.uu";
            a.locale = e;
            break
    }
    if (b["data type"] != "R") {
        if (b.length != null && b.length > 0) a.dataLength = String(b.length);
        if (b.decimals != null) a.decPos = String(b.decimals)
    }
    return a
};
pui.cnv.Ys = function (b, a, c) {
    if (b != null) for (var d = 0; d < b.length; d++) {
        var e = b[d];
        if (pui.cnv.Tn && a == "file") {
            e.oa = "file";
            pui.cnv.Ja.dj(e)
        }
        if (e.dspsizcond != null) {
            var f = pui.cnv.Ja.ji();
            if (f == null) continue;
            var h = f.screen["record format name"];
            if (!pui.cnv.ZB(e.dspsizcond, h)) continue
        }
        var g = pui.cnv.r[e.name];
        if (g == null) pui.cnv.Ra.add("Keyword not handled.", 10, e); else {
            var l = e.parms;
            if (l == null) l = [""];
            var n = l[0], o = e.cond;
            f = pui.cnv.Ja.ji();
            var i = pui.cnv.Ja.iG();
            if (f != null) h = f.screen["record format name"];
            l = g({
                name: e.name,
                parms: l,
                u: n,
                line: e.line,
                Yt: e.helpSection,
                cond: o,
                CL: e.dspsizcond,
                ref: e.ref,
                format: f,
                formatName: h,
                item: i,
                oa: a,
                field: c
            });
            if (l === null) pui.cnv.Ra.add("Keyword not applicable in browser environment.", 0, e); else if (l === false) pui.cnv.Ra.add("Keyword not fully handled.", 10, e); else {
                if (typeof l == "object" && l.length != null) for (g = 0; g < l.length; g++) {
                    var r = false, k = l[g];
                    n = null;
                    if (a == "format") n = f.screen;
                    if (a == "field") n = i;
                    if (n != null) {
                        var q = false;
                        if (k.N == "css class") for (var s = 1; n[k.N] != null;) {
                            s++;
                            k.N = "css class " + s
                        } else if (k.N ===
                            "set focus" && n["field type"] === "output field") {
                            q = true;
                            pui.cnv.Ra.add('"set focus" not supported on output fields.', 0, e)
                        }
                        if (n[k.N] != null) {
                            var t = false, u = false;
                            if (o == null && n[k.N] == k.on) t = true;
                            if (o == null) u = true;
                            s = n[k.N];
                            if (k.N == "read only" && s == "true") r = true;
                            if (!r) if (o != null && pui.f(s) && s.dataType == "expression" && s.formatting == "Indicator") {
                                var w = false, v = {on: k.on, M: k.M, N: k.N};
                                if (s.fieldName == o) w = true; else if ("N" + s.fieldName == o || s.fieldName == "N" + o) {
                                    w = true;
                                    v.on = k.M;
                                    v.M = k.on
                                }
                                if (w) {
                                    if (s.indFormat == v.on + " / " +
                                        v.M) t = true;
                                    if (s.customTrue == v.on && s.customFalse == v.M) t = true
                                }
                            }
                            if (t || u || r) pui.cnv.Ra.add("Property specified more than once.", 0, e); else {
                                t = true;
                                if (o != null && pui.f(s)) if (s.indFormat == k.on + " / " + k.M || s.customTrue == k.on && s.customFalse == k.M) {
                                    o = s.fieldName + " OR " + o;
                                    t = false
                                } else if (s.indFormat == k.M + " / " + k.on || s.customTrue == k.M && s.customFalse == k.on) if ((s.fieldName.length == 2 || s.fieldName.length == 3) && (o.length == 2 || o.length == 3)) {
                                    if (o.length == 2) o = "N" + o; else if (o.length == 3) o = o.substr(1);
                                    o = s.fieldName + " AND " + o;
                                    s = k.on;
                                    k.on = k.M;
                                    k.M = s;
                                    t = false
                                }
                                t && pui.cnv.Ra.add("Property specified more than once (with conflicting values).", 10, e)
                            }
                        }
                        if (!r && !q) if (o == null) n[k.N] = k.on; else {
                            r = {
                                fieldName: o,
                                dataType: "expression",
                                formatting: "Indicator",
                                indFormat: "Custom Values"
                            };
                            if (k.on == "true" && k.M == "false" || k.on == "1" && k.M == "0" || k.on == "visible" && k.M == "hidden") r.indFormat = k.on + " / " + k.M; else {
                                r.customTrue = k.on;
                                r.customFalse = k.M
                            }
                            n[k.N] = r
                        }
                    }
                }
                if (typeof l == "object" && l.rk == true) {
                    n = null;
                    if (a == "format") n = f.screen;
                    if (a == "field") n = i;
                    if (n != null &&
                        pui.f(n.value)) {
                        if (n.value.keywords == null) n.value.keywords = [];
                        f = e.name;
                        l = e.parms;
                        if (l != null) {
                            f += "(";
                            for (g = 0; g < l.length; g++) {
                                if (g > 0) f += " ";
                                f += l[g]
                            }
                            f += ")"
                        }
                        n.value.keywords.push(f)
                    }
                }
            }
        }
    }
};
pui.cnv.LD = function () {
    var b = {}, a;
    this.add = function (c) {
        b[c.name] = c
    };
    this.setTheme = function (c) {
        a = c
    };
    this.ba = function (c, d) {
        var e = a;
        if (e == null) e = "Standard";
        var f = b[e];
        if (f == null) f = b.Standard;
        f = f[c];
        if (f == null && e != "Standard" && d != false) f = b.Standard[c];
        return f
    };
    this.Qt = function () {
        var c = [];
        for (var d in b) c.push([d]);
        return c
    }
};
pui.cnv.themes = new pui.cnv.LD;
pui.cnv.PC = function () {
    var b, a = 0, c = pui.cnv.themes.ba, d = {}, e = this;
    this.clear = function (f) {
        b = {formats: [], keywords: []};
        if (f != null) b.text = f;
        a = 0;
        d = {}
    };
    this.dj = function (f) {
        if (typeof f == "string") {
            b.keywords.push(f);
            return true
        }
        if (f.oa != "file") return false;
        var h = f.name;
        if (f.parms != null && f.parms.length > 0 && !(f.parms.length == 1 && f.parms[0] == "")) {
            h += "(";
            for (var g = 0; g < f.parms.length; g++) {
                var l = f.parms[g];
                if (g != 0) h += " ";
                h += l
            }
            h += ")"
        }
        g = f.cond;
        f = "";
        if (g != null && g != "" && g.split(" or ").length <= 1) {
            l = g.split(" and ");
            if (l.length <=
                3) for (g = 0; g < l.length; g++) {
                var n = l[g];
                if (!(n.length < 2)) if (!(n.length > 3)) if (!(n.length == 3 && n.substr(0, 1) != "N")) {
                    if (n.length == 2 && g != 0) n = " " + n;
                    f += n
                }
            }
        }
        if (f != "") f += " ";
        b.keywords.push(f + h);
        return true
    };
    this.dE = function (f) {
        f = {"record format name": f};
        var h = c("onload");
        if (h != null) f.onload = h;
        b.formats.push({screen: f, items: []})
    };
    this.OI = function (f) {
        for (var h = b.formats, g = 0; g < h.length; g++) if (h[g].screen["record format name"] == f) {
            h.splice(g, 1);
            return
        }
    };
    this.We = function (f) {
        for (var h = b.formats, g = 0; g < h.length; g++) {
            var l =
                h[g];
            if (l.screen["record format name"] == f) return l
        }
        return null
    };
    this.ji = function () {
        var f = b.formats;
        return f[f.length - 1]
    };
    this.iG = function () {
        var f = e.ji();
        if (f == null) return null;
        f = f.items;
        return f[f.length - 1]
    };
    this.addItem = function (f) {
        e.ji().items.push(f)
    };
    this.TI = function () {
        e.ji().items.pop()
    };
    this.addField = function (f) {
        var h = pui.cnv.getScreenWidth(f.formatName), g = c("left offset");
        if (h == 132 && c("alt left offset") != null) g = c("alt left offset");
        var l = pui.cnv.info.formats[f.formatName], n = l.Va;
        if (n == null &&
            l.ti && pui.cnv.EH(f.formatName)) {
            n = {};
            l.Va = n
        }
        var o, i;
        if (n == null) {
            o = c("top offset");
            i = g
        } else {
            g = pui.cnv.themes.ba("windows");
            o = g["top offset"];
            i = g["left offset"]
        }
        g = {};
        var r = c("column width");
        if (h == 132 && c("alt column width") != null) r = c("alt column width");
        var k = c("row height");
        if (h == 132 && c("alt row height") != null) k = c("alt row height");
        var q = f.name;
        if (q != null && q != "") {
            if (d[q] == true) q = f.formatName + "_" + f.name;
            d[q] = true
        }
        if (q == null || q == "") {
            a++;
            q = "constant" + a
        }
        g.id = q;
        g["field type"] = "output field";
        var s = c("input css class");
        if (h == 132 && c("alt input css class") != null) s = c("alt input css class");
        q = c("constant css class");
        if (h == 132 && c("alt constant css class") != null) q = c("alt constant css class");
        var t = c("output field css class");
        if (h == 132 && c("alt output field css class") != null) t = c("alt output field css class");
        if (f["field type"] == "B" || f["field type"] == "I") {
            g["field type"] = "textbox";
            g["css class"] = s;
            if (g["css class"] == null) g["css class"] = "input";
            h = c("input css class 2");
            if (h != null) g["css class 2"] = h;
            if (c("allow field exit") ==
                true) g["allow field exit"] = "true";
            if (pui.cnv.info.uk == true || pui.cnv.info.formats[f.formatName].uk == true) g["allow blanks"] = "true";
            if (pui.cnv.info.wa == true || pui.cnv.info.formats[f.formatName].wa == true) g["validate name"] = "true";
            if (pui.cnv.info.gj == true || pui.cnv.info.formats[f.formatName].gj == true) g["auto advance"] = "true";
            if (pui.cnv.info.Su == true || pui.cnv.info.formats[f.formatName].Su == true) g["prevent auto tab"] = "true";
            if (pui.cnv.info.focusClass != null) g["focus class"] = pui.cnv.info.focusClass;
            if (pui.cnv.info.formats[f.formatName].focusClass !=
                null) g["focus class"] = pui.cnv.info.formats[f.formatName].focusClass;
            if (f["field type"] == "I") g["input only"] = "true"
        }
        if (f["field type"] == "H" || f["field type"] == "P") g.visibility = "hidden";
        if (f["const"] != null) {
            g.value = f["const"];
            g["css class"] = q;
            if (g["css class"] == null) g["css class"] = "constant"
        } else if (f.name != null) {
            g.value = pui.cnv.jF(f);
            if (g.value.textTransform == "uppercase") g["text transform"] = "uppercase";
            if (f["field type"] == "O" || f["field type"] == "M") {
                g["css class"] = t;
                if (g["css class"] == null) g["css class"] =
                    "outputField"
            }
            if (f["data type"] == "I") g["read only"] = "true"
        }
        h = f.cond;
        if (h != null) {
            if (g.visibility == "hidden") {
                q = h.match(/n?\d+/gi);
                for (t = 0; t < q.length; t++) {
                    newCond = q[t];
                    h += " or " + (newCond.length >= 3 ? newCond.substring(1) : "N" + newCond)
                }
            }
            g.visibility = {
                fieldName: h,
                dataType: "expression",
                formatting: "Indicator",
                indFormat: "visible / hidden"
            }
        }
        if (f.col == null) g.left = "0px"; else {
            g.left = r * f.col + i + "px";
            g["cursor column"] = String(f.col)
        }
        h = f.row;
        if (h == null) g.top = "-30px"; else {
            if (l != null && l.Lo != null && l.Lo > 1) h += l.Lo - 1;
            g.top =
                k * h + o + "px";
            g["cursor row"] = String(h)
        }
        if (f["field type"] == "M") {
            g.left = r + i + "px";
            l = pui.cnv.Ot(f.GL) + 1;
            if (n != null && n.lC != null) l = n.lC;
            g.top = k * l + o + "px"
        }
        if (h == 1 && n == null) {
            n = c("top line color");
            if (n != null) g.color = n;
            n = c("top line class");
            if (n != null) if (g["css class"] == null) g["css class"] = n; else if (g["css class 2"] == null) g["css class 2"] = n; else if (g["css class 3"] == null) g["css class 3"] = n
        }
        n = r * pui.cnv.my(f);
        if (n > 0) {
            if (f["field type"] == "B" || f["field type"] == "I") {
                n += c("extra textbox width");
                g.width = n + "px"
            } else if (pui.f(g.value)) {
                o =
                    false;
                if (g.value.dataType == "zoned") o = true;
                if (g.value.dataType == "reference") if (f.decimals != null || f.ovrdec != null) o = true;
                if (o) {
                    g.width = n + "px";
                    g["text align"] = "right"
                }
            }
            if (g.width == null) {
                o = c("always set width");
                if (o != null && (o == "true" || o == true)) g.width = n + "px"
            }
        }
        n = c("default font family", false);
        if (n != null) g["font family"] = n;
        n = c("default font size");
        if (n != null) g["font size"] = n;
        n = pui.cnv.getScreenWidth(f.formatName);
        if (g["field type"] == "output field" && f.col + f.length > n + 1) {
            g["field type"] = "html container";
            if (g.value !=
                null) {
                g.html = g.value;
                delete g.value
            }
            g.width = (n - f.col + 1) * r + "px";
            g["white space"] = "normal"
        }
        if (g["field type"] == "textbox" && f.col + f.length > n + 1) {
            g["field type"] = "text area";
            g.width = (n - f.col + 1) * r + "px";
            g.height = (parseInt(f.length / n) + 1) * k + "px"
        }
        e.addItem(g);
        return g
    };
    this.cE = function (f, h, g) {
        var l = f.format.screen["record format name"], n = pui.cnv.info.formats[l], o = c("show fkey name as tool tip");
        if (o != true) o = false;
        if (f.name == "PAGEDOWN" || f.name == "ROLLUP" || f.name == "PAGEUP" || f.name == "ROLLDOWN") {
            var i = null;
            if (n !=
                null) i = n.lk;
            if (i != null && i != "") if (pui.cnv.info.formats[i].Jo == null) {
                pui.cnv.info.formats[i][f.name] = f;
                return false
            }
        }
        var r = n.Va, k = {};
        k.id = "btn" + f.name;
        i = c("button type");
        if (r != null && c("windows")["button type"] != null) i = c("windows")["button type"];
        if (i == null) i = "button";
        if (i == "hyperlink") k.id = "link" + f.name;
        k["field type"] = i;
        if (i == "styled button") k["button style"] = c("button style");
        if (i == "css button") {
            i = c("button theme");
            if (i != null) k.theme = i;
            k["small button"] = "true";
            i = c("button straight edge");
            if (i != null) k["straight edge"] =
                i
        }
        i = c("button text align");
        if (i != null) k["text align"] = i;
        if (f.name.substr(0, 2) == "CA") k["bypass validation"] = "true";
        if (f.name == "HELP" || f.name == "HLPRTN") {
            if (pui.cnv.info.wk != null) {
                k["shortcut key"] = pui.cnv.info.wk;
                if (o) k["tool tip"] = pui.cnv.info.wk
            } else {
                k["shortcut key"] = "Alt-F1";
                if (o) k["tool tip"] = "Alt-F1"
            }
            if (f.u == null || f.u == "") k.onclick = "pui.showHelp()"; else k["bypass validation"] = "true"
        }
        i = f.cond;
        l = pui.cnv.info.formats[l];
        if (i != null) k.visibility = {
            fieldName: i, dataType: "expression", formatting: "Indicator",
            indFormat: "visible / hidden"
        }; else if (l.zB == f.name || l.DB == f.name) if (f.CB != true && f.yB != true) k.visibility = "hidden";
        l = f.name;
        i = null;
        var q;
        if (l.substr(0, 2) == "CF" || l.substr(0, 2) == "CA") {
            i = Number(l.substr(2));
            if (!isNaN(i)) {
                l = "F" + i;
                q = String(i)
            }
            i = l
        }
        if (l == "HLPRTN") l = "Help";
        if (l == "PAGEDOWN" || l == "ROLLUP") {
            l = c("page down text");
            i = "PageDown"
        }
        if (l == "PAGEUP" || l == "ROLLDOWN") {
            l = c("page up text");
            i = "PageUp"
        }
        if (l == "CLEAR") i = "Pause/Break";
        if (l == "PRINT") {
            i = "PrtScn";
            q = "PRINT"
        }
        if (l == "Submit") {
            if (c("submit button text") !=
                null) l = c("submit button text");
            i = "Enter"
        }
        var s = null;
        if (f.parms != null) s = pui.cnv.Zf(f.parms[1]);
        if (q != null && n != null && n.Kf != null && n.Kf[q] != null) s = n.Kf[q];
        if (s == null && pui.cnv.Kf != null) s = pui.cnv.Kf[q];
        if (c("use fkey label indicators") && k.visibility == null && q != null && n != null && n.tj != null && n.tj[q] != null) k.visibility = {
            fieldName: n.tj[q],
            dataType: "expression",
            formatting: "Indicator",
            indFormat: "visible / hidden"
        };
        n = c("show fkey name");
        q = c("show fkey text");
        if (s == null || s == "") {
            q = false;
            l.substr(0, 1) == "F" && pui.cnv.Ra.add("Text not found for function key.",
                0, f)
        }
        if (!n && !q) n = true;
        var t = "";
        if (n) t = l;
        if (q) if (t == "") t = s; else t += "=" + s;
        k.value = t;
        if (i != null) {
            k["shortcut key"] = i;
            if (o) k["tool tip"] = i
        }
        o = f.u;
        if (o != null && o != "" && o != "*PGM") k.response = {
            fieldName: "*IN" + o,
            dataType: "indicator",
            formatting: "Indicator",
            indFormat: "1 / 0"
        };
        if (f.yB == true || f.CB == true) {
            i = pui.cnv.info.formats[f.formatName].lk;
            k.onclick = 'getObj("' + i + '").grid.toggle(this)'
        }
        k.left = h + "px";
        k.top = g + "px";
        h = r == null ? c("button width") : c("windows")["button width"];
        if (h != null) k.width = h + "px";
        h = c("button height",
            false);
        if (h != null) k.height = h + "px";
        h = c("button css class");
        if (r != null && c("windows")["button css class"] != null) h = c("windows")["button css class"];
        if (h != null) k["css class"] = h;
        h = c("button tab index");
        if (r != null && c("windows")["button tab index"] != null) h = c("windows")["button tab index"];
        if (h != null) k["tab index"] = h;
        r = c("auto arrange");
        if (r == null) r = "true";
        k["auto arrange"] = String(r);
        r = pui.cnv.themes.ba("process fkey");
        r != null && typeof r == "function" && r(f, k, f.format, pui.cnv.mh);
        f.format.items.push(k);
        return true
    };
    this.jE = function (f) {
        var h = e.ji().screen;
        pui.f(h["valid command key"]) || (h["valid command key"] = pui.cnv.Bi(f))
    };
    this.bE = function (f, h) {
        var g = e.ji().screen;
        if (g[f] == null) g[f] = "";
        g[f] += " " + h;
        g[f] = Zb(g[f])
    };
    this.Om = function () {
        return b.formats
    };
    this.Jt = function () {
        for (var f = [], h = 0; h < b.keywords.length; h++) f.push(b.keywords[h]);
        return f
    };
    this.getText = function () {
        var f = b.text;
        if (f == null) f = "";
        return f
    }
};
pui.cnv.Ja = new pui.cnv.PC;
pui.cnv.PD = function () {
    var b = [];
    this.clear = function () {
        b = []
    };
    this.add = function (a, c, d) {
        b.push({text: a, severity: c, af: d})
    };
    this.YD = function (a, c) {
        if (a != null) for (var d = {}, e = 0; e < a.length; e++) {
            var f = a[e];
            if (d[f] != true) {
                b.push({text: f, severity: c});
                d[f] = true
            }
        }
    };
    this.oG = function (a) {
        for (var c = [], d = 0, e = 0, f = 0; f < b.length; f++) {
            var h = b[f];
            if (h.severity == 0) d++; else e++;
            if (!(h.severity < a)) {
                var g = "";
                if (h.af != null && h.af.name != null) {
                    g = h.af.name;
                    var l = h.af.parms;
                    if (l != null && !(l.length == 1 && l[0] == "")) {
                        g += "(";
                        for (var n = 0; n <
                        l.length; n++) {
                            if (n > 0) g += " ";
                            g += l[n]
                        }
                        g += ")"
                    }
                }
                c.push({
                    text: h.text,
                    severity: h.severity,
                    keyword: g != null ? g : "",
                    line: h.af != null ? h.af.line : ""
                })
            }
        }
        return {VH: d, HK: e, list: c}
    };
    this.Gy = function (a) {
        for (var c = "", d = 0, e = 0; e < b.length; e++) {
            var f = b[e];
            if (!(f.severity < a)) {
                d++;
                c += "&cnvsev" + d + "=" + f.severity;
                c += "&cnvmsg" + d + "=" + f.text;
                if (f.af != null && f.af.name != null) {
                    c += "&cnvkeyword" + d + "=" + f.af.name;
                    var h = f.af.parms;
                    if (h != null) c += "&cnvkeyparms" + d + "=" + h.join(" ")
                }
                if (f.af != null && f.af.line != null) c += "&cnvline" + d + "=" + f.af.line
            }
        }
        return c
    }
};
pui.cnv.Ra = new pui.cnv.PD;
pui.cnv.CC = function () {
    var b = {}, a = {}, c = pui.cnv.themes.ba, d = this;
    this.clear = function () {
        b = {};
        a = {}
    };
    this.add = function (e) {
        var f = b;
        if (e.oa == "format") {
            f = e.format.screen["record format name"];
            if (a[f] == null) a[f] = {};
            f = a[f]
        } else e.u != null && e.u != "" && e.u != "*PGM" && pui.cnv.Ja.dj("SFLDEFINE(" + e.u + ")");
        if (f[e.name] == null) f[e.name] = e
    };
    this.Ja = function () {
        for (var e = pui.cnv.Ja.Om(), f = 0; f < e.length; f++) {
            var h = e[f].screen["record format name"];
            if (a[h] == null) if (pui.cnv.info.formats[h].ti != true) a[h] = {}
        }
        for (var g in b) {
            var l =
                b[g];
            for (h in a) d.add({
                name: l.name,
                parms: l.parms,
                u: l.u,
                line: l.line,
                cond: l.cond,
                format: pui.cnv.Ja.We(h),
                oa: "format"
            })
        }
        for (h in a) {
            var n = pui.cnv.getScreenWidth(h), o = c("column width");
            e = c("button width");
            var i = c("button height");
            if (i == null) i = 23;
            var r = c("horizontal button spacing"), k = c("vertical button spacing"), q = c("buttons per row"),
                s = c("button left offset");
            if (n == 132 && c("alt button left offset") != null) s = c("alt button left offset");
            if (n == 132 && c("alt column width") != null) o = c("alt column width");
            var t =
                c("row height");
            if (n == 132 && c("alt row height") != null) t = c("alt row height");
            var u, w = pui.cnv.info.formats[h].Va;
            if (w != null) {
                u = c("windows");
                if (u["button left offset"] != null) {
                    s = u["button left offset"];
                    if (n == 132 && u["alt button left offset"] != null) s = u["alt button left offset"]
                }
            }
            if (s == null) s = o * 2;
            n = 1;
            o = s;
            var v = pui.cnv.Ot(h);
            if (c("buttons start at the top")) v = 2;
            v++;
            v = v * t + c("top offset");
            if (c("button top") != null) v = c("button top");
            if (w != null) {
                e = u["button width"];
                r = u["horizontal button spacing"];
                k = u["vertical button spacing"];
                q = u["buttons per row"];
                if (w.height == null && w.tl != null) w.height = pui.cnv.info.formats[w.tl].Va.height;
                if (w.width == null && w.tl != null) w.width = pui.cnv.info.formats[w.tl].Va.width;
                v = w.height + u["button offset"];
                if (q == "auto") {
                    q = parseInt((w.width - s) / (e + r));
                    if (q < 1) q = 1
                }
            }
            t = [];
            f = c("add submit button");
            if (w != null && c("windows")["add submit button"] != null) f = c("windows")["add submit button"];
            if (f) {
                l = {name: "Submit", format: pui.cnv.Ja.We(h), oa: "format"};
                t.push(l)
            }
            f = a[h];
            for (g in f) t.push(f[g]);
            f = c("fkey sort");
            if (f == null) f =
                function (E, y) {
                    var F = E.name, D = y.name;
                    if (F == "Submit") return -1;
                    if (D == "Submit") return 1;
                    if (F.substr(0, 2) == "CA") F = "CF" + F.substr(2);
                    if (D.substr(0, 2) == "CA") D = "CF" + D.substr(2);
                    return F < D ? -1 : 1
                };
            t.sort(f);
            for (f = 0; f < t.length; f++) {
                l = t[f];
                if (pui.cnv.Ja.cE(l, o, v)) {
                    n++;
                    o += e + r;
                    if (n > q) {
                        n = 1;
                        o = s;
                        v += i + k;
                        if (w != null) {
                            l = w.panel;
                            if (l == null && w.tl != null) l = pui.cnv.info.formats[w.tl].Va.panel;
                            if (l != null && f != t.length - 1) l.height = parseInt(l.height) + i + k + "px"
                        }
                    }
                }
            }
        }
    }
};
pui.cnv.Yd = new pui.cnv.CC;
for (var Vd = 1; Vd <= 24; Vd++) {
    var Wd = String(Vd);
    if (Vd < 10) Wd = "0" + Wd;
    var Yd = "CA" + Wd;
    pui.cnv.r["CF" + Wd] = function (b) {
        pui.cnv.Yd.add(b);
        return true
    };
    pui.cnv.r[Yd] = function (b) {
        pui.cnv.Yd.add(b);
        return true
    }
}
pui.cnv.r.PAGEDOWN = function (b) {
    pui.cnv.Yd.add(b);
    return true
};
pui.cnv.r.PAGEUP = function (b) {
    pui.cnv.Yd.add(b);
    return true
};
pui.cnv.r.ROLLUP = function (b) {
    pui.cnv.Yd.add(b);
    return true
};
pui.cnv.r.ROLLDOWN = function (b) {
    pui.cnv.Yd.add(b);
    return true
};
pui.cnv.r.HELP = function (b) {
    var a = true, c = pui.cnv.greenScreenDisplay.keywords;
    if (b.oa == "file") if (pui.cnv.kg(c, "HLPRTN")) a = false;
    if (b.oa == "format") {
        if (pui.cnv.kg(c, "HLPRTN")) a = false;
        c = pui.cnv.greenScreenDisplay.formats[b.formatName].keywords;
        if (pui.cnv.kg(c, "HLPRTN")) a = false
    }
    if (pui.cnv.themes.ba("help button") === false) a = false;
    a && pui.cnv.Yd.add(b);
    return true
};
pui.cnv.r.HLPRTN = function (b) {
    if (pui.cnv.themes.ba("help button") === false) return true;
    pui.cnv.Yd.add(b);
    if (b.cond) return false;
    return true
};
pui.cnv.r.CLEAR = function (b) {
    pui.cnv.Yd.add(b);
    return true
};
pui.cnv.r.HOME = function (b) {
    pui.cnv.Yd.add(b);
    return true
};
pui.cnv.r.PRINT = function (b) {
    var a = b.u;
    if (a == null) a = "";
    if (a.length == 2) {
        var c = a.substr(0, 1);
        a = a.substr(1, 1);
        if (c < "0" || c > "9" || a < "0" || a > "9") return null
    } else if (a != "*PGM") return null;
    pui.cnv.Yd.add(b);
    return true
};
pui.cnv.TJ = function (b) {
    for (var a in b) {
        var c = pui.cnv.info.formats[a].Eg, d = pui.cnv.info.formats[a].ag, e = pui.cnv.info.formats[a].ti,
            f = pui.cnv.info.formats[a].lk, h = pui.cnv.lx(a);
        if (c == null) c = pui.cnv.Ot(a);
        if (d == null) d = 1;
        if (!e) {
            if (f != null && f != "" && h != null && !isNaN(h) && h > 0) {
                e = pui.cnv.info.formats[f];
                if (e != null) {
                    d = e.Eg;
                    if (d < c) c = d;
                    f = e.ag;
                    e = e.yw;
                    if (e != null) f = d = e;
                    d = d + h * (f - d + 1) - 1
                }
            }
            if (d >= c) {
                h = pui.cnv.info.formats[a].Lo;
                if (h != null && h > 1) {
                    c += h - 1;
                    d += h - 1
                }
                c = c + "-" + d;
                pui.cnv.Ja.We(a).screen["overlay range"] = c
            }
        }
    }
};
pui.cnv.FJ = function () {
    var b = pui.cnv.info.Fo;
    if (b != null) for (var a in b) {
        var c = b[a];
        pui.cnv.Ja.We(a).screen["design overlay formats"] = c.join(",");
        for (var d = 0; d < c.length; d++) {
            var e = c[d];
            c[d] = a;
            pui.cnv.Ja.We(e).screen["design overlay formats"] = c.join(",");
            c[d] = e
        }
    }
};
pui.cnv.IJ = function () {
    if (pui.cnv.info.jy != null) for (var b = pui.cnv.Ja.Om(), a = 0; a < b.length; a++) {
        for (var c = b[a].screen, d = false, e = 1, f = ""; !d;) {
            if (e > 1) f = " " + String(e);
            if (c["help title" + f] == null) d = true;
            e++
        }
        d = e - 1;
        c["help title" + f] = pui.cnv.info.jy;
        c["help titles"] = d + " help title";
        if (d > 1) c["help titles"] += "s"
    }
};
pui.cnv.zI = function () {
    pui.cnv.IJ();
    if (pui.cnv.info.Vg != null) for (var b in pui.cnv.info.formats) {
        if (pui.cnv.info.formats[b].help == null) pui.cnv.info.formats[b].help = [];
        var a = false;
        if (pui.cnv.info.Vg.ce != null) {
            var c = pui.cnv.info.Vg.ce[0];
            if (c != null) if (c["help panel group"] != null) {
                a = true;
                pui.cnv.info.Vg.Lp = "*NONE"
            }
        }
        a ? pui.cnv.info.formats[b].help.splice(0, 0, pui.cnv.info.Vg) : pui.cnv.info.formats[b].help.push(pui.cnv.info.Vg)
    }
    for (b in pui.cnv.info.formats) {
        a = pui.cnv.info.formats[b].help;
        if (a != null) {
            c = 0;
            var d =
                pui.cnv.Ja.We(b);
            if (d != null) {
                var e = d.screen;
                for (d = 0; d < a.length; d++) {
                    var f = a[d];
                    if (f.ce != null) for (var h = 0; h < f.ce.length; h++) {
                        var g = f.ce[h];
                        c++;
                        var l = "";
                        if (c > 1) l = " " + c;
                        for (var n in g) e[n + l] = g[n];
                        helpArea = f.Lp;
                        if (helpArea == null) helpArea = "";
                        if (typeof helpArea == "object") {
                            helpArea = pui.cnv.info.formats[b].Xt[helpArea.ZG];
                            if (helpArea == null) helpArea = ""
                        }
                        e["help area" + l] = helpArea
                    }
                }
            }
            if (c > 0) {
                e["help panels"] = c + " help panel";
                if (c > 1) e["help panels"] += "s"
            }
        }
    }
};
pui.cnv.UH = function () {
    for (var b in pui.cnv.info.formats) if (pui.cnv.info.formats[b].ti) {
        var a = null;
        for (var c in pui.cnv.info.formats) if (b == pui.cnv.info.formats[c].lk) {
            a = c;
            break
        }
        a != null && pui.cnv.TH(b, a)
    }
};
pui.cnv.TH = function (b, a) {
    var c = pui.cnv.Ja.We(b), d = pui.cnv.Ja.We(a), e = pui.cnv.themes.ba, f = pui.cnv.info.formats[a].Va,
        h = pui.cnv.getScreenWidth(a), g = e("left offset");
    if (h == 132 && e("alt left offset") != null) g = e("alt left offset");
    var l, n;
    if (f == null) {
        l = e("top offset");
        n = g
    } else {
        g = pui.cnv.themes.ba("windows");
        l = g["top offset"];
        n = g["left offset"]
    }
    g = {id: b, "field type": "grid", value: "", "number of columns": "1"};
    for (var o in c.screen) g[o] = c.screen[o];
    for (var i = ["display subfile", "display control record", "clear subfile",
        "subfile size", "initialize subfile", "subfile records not active", "delete subfile", "subfle next changed", "expanded", "collapsed", "position at top", "place cursor"], r = d.screen, k = 0; k < i.length; k++) {
        var q = i[k];
        if (r[q] != null) {
            g[q] = r[q];
            delete r[q]
        }
    }
    i = e("grid").properties;
    for (o in i) {
        g[o] = i[o];
        if (o == "parent tab panel") g[o] = pui.cnv.mh + "_" + a + "_" + g[o]
    }
    i = pui.cnv.info.formats[b].PAGEDOWN;
    if (i == null) i = pui.cnv.info.formats[b].ROLLUP;
    r = pui.cnv.info.formats[b].PAGEUP;
    if (r == null) r = pui.cnv.info.formats[b].ROLLDOWN;
    if (pui.cnv.info.formats[b].Jo !=
        null) r = i = null;
    var s = pui.cnv.info.formats[a].YC;
    if (s != null) g["subfile end"] = s.cond != null ? {
        fieldName: s.cond,
        dataType: "expression",
        formatting: "Indicator",
        indFormat: "true / false"
    } : "true";
    if (i != null) {
        s = i.u;
        s = s == null || s == "" ? "PUI_PgDown" : "*IN" + s;
        g["page down response"] = {fieldName: s, dataType: "indicator", formatting: "Indicator", indFormat: "1 / 0"};
        if (i.cond != null) g["page down condition"] = {
            fieldName: i.cond,
            dataType: "expression",
            formatting: "Indicator",
            indFormat: "true / false"
        }
    }
    if (r != null) {
        s = r.u;
        s = s == null || s ==
        "" ? "PUI_PgUp" : "*IN" + s;
        g["page up response"] = {fieldName: s, dataType: "indicator", formatting: "Indicator", indFormat: "1 / 0"};
        if (r.cond != null) g["page up condition"] = {
            fieldName: r.cond,
            dataType: "expression",
            formatting: "Indicator",
            indFormat: "true / false"
        }
    }
    i = pui.cnv.info.formats[b].Eg;
    r = pui.cnv.info.formats[b].ag;
    o = pui.cnv.info.formats[b].al;
    q = pui.cnv.info.formats[b].Uj;
    s = e("row height");
    if (h == 132 && e("alt row height") != null) s = e("alt row height");
    var t = Number(g["row height"]), u = e("column width"), w = e("grid")["header rows"],
        v = s * (i - 1) + l + "px", E = s * (i - 2) + l + "px";
    if (h == 132 && e("alt column width") != null) u = e("alt column width");
    s = e("row height");
    if (h == 132 && e("alt row height") != null) s = e("alt row height");
    if (g["page up response"] == null) if (g["page down response"] == null) {
        if (i == r) {
            if (e("grid").sortable != false) g["sortable columns"] = "true";
            if (e("grid").find != false) g["find option"] = "true";
            if (e("grid").filter != false) g["filter option"] = "true";
            if (e("grid")["csv export"] == true) {
                g["csv export"] = "true";
                if (e("grid")["export with headings"] ==
                    true) g["export with headings"] = "true"
            }
            if (e("grid")["xlsx export"] == true) {
                g["xlsx export"] = "true";
                if (e("grid")["export with headings"] == true) g["export with headings"] = "true"
            }
        }
    } else {
        g["show paging controls"] = "true";
        g["show page number"] = "true";
        g.scrollbar = "none"
    } else {
        g["show paging controls"] = "true";
        g.scrollbar = "none"
    }
    if (typeof w == "function") {
        h = pui.cnv.info.formats[b];
        h = w(d, c, {topMostRow: h.Eg, bottomMostRow: h.ag, leftMostCol: h.al, rightMostCol: h.Uj});
        w = Number(h.rows);
        var y = Number(h.leftmost)
    }
    if (w == "auto") {
        var F =
            w = false, D = false, B = false, I = y = 99999, z = 99999;
        for (k = 0; k < d.items.length; k++) {
            h = d.items[k];
            if (h["field type"] == "output field") {
                var H = false, J = h.value;
                if (J != null && !pui.f(J) && !pui.Ia(J)) {
                    J = J.split("=");
                    if (J.length > 1) {
                        var K = Number(J[0]);
                        if (!isNaN(K) && K >= 1 && K <= 99) H = true; else if (e("allow alpha options") == true) {
                            if (J[0].length == 1) H = true;
                            if (J[0].length > 1 && J[0].charAt(0).toUpperCase() != "F") H = true
                        }
                    }
                }
                if (!H) {
                    if (h.top == v) {
                        w = true;
                        if (parseInt(h.left) < I) I = parseInt(h.left)
                    }
                    if (h.top == E) {
                        F = true;
                        if (parseInt(h.left) < z) z = parseInt(h.left)
                    }
                }
            }
            if (h["field type"] ==
                "textbox") {
                if (h.top == v) D = true;
                if (h.top == E) B = true
            }
        }
        if (D) w = false;
        if (B) F = false;
        if (w && F) {
            w = 2;
            y = I < z ? I : z
        } else if (w) {
            w = 1;
            y = I
        } else w = 0
    }
    var L;
    I = d.items;
    if (w == 0) {
        var N;
        h = e("grid").getHeaderFormat;
        if (h != null && typeof h == "function") N = h(a);
        if (N != null) {
            L = pui.cnv.Ja.We(N);
            if (L != null) {
                I = L.items;
                for (k = 0; k < I.length; k++) {
                    h = I[k];
                    if (h["field type"] == "output field" && h.visibility != "hidden") if (parseInt(h.left) < y) y = parseInt(h.left)
                }
            }
            h = pui.cnv.info.formats[N];
            if (h != null && h.ag != null && h.Eg != null) {
                w = h.ag - h.Eg + 1;
                if (w < 0) w = 0;
                if (w >
                    2) w = 2
            }
        }
    }
    N = t + s * (w - 1);
    if (w >= 2 && t > s) N -= 4;
    if (w <= 0) N = 0;
    h = pui.cnv.lx(a);
    g["number of rows"] = String(h + (w > 0 ? 1 : 0));
    if (w <= 0) g["has header"] = "false";
    g["header height"] = N;
    z = pui.cnv.info.formats[b].yw;
    if (z != null) {
        i = z;
        o = 1;
        q = pui.cnv.getScreenWidth(a);
        g["has header"] = "false";
        N = 0;
        c.items = [];
        g["sortable columns"] != null && delete g["sortable columns"];
        g["find option"] != null && delete g["find option"];
        g["filter option"] != null && delete g["filter option"];
        g["csv export"] != null && delete g["csv export"];
        g["xlsx export"] != null &&
        delete g["xlsx export"];
        g["export with headings"] != null && delete g["export with headings"];
        if (e("grid")["message subfile class"] != null) g["css class"] = e("grid")["message subfile class"];
        k = pui.cnv.info.formats[b].Jo;
        D = pui.cnv.info.formats[b].zw;
        h = pui.cnv.info.formats[a].Jo;
        B = pui.cnv.info.formats[a].zw;
        F = pui.cnv.info.formats[b].aD;
        if (k != null) g["subfile program message queue"] = {
            fieldName: k,
            dataLength: String(D),
            trimLeading: "false",
            trimTrailing: "true",
            dataType: "char",
            formatting: "Text",
            textTransform: "none"
        };
        if (h != null) {
            g["subfile control program message queue"] = {
                fieldName: h,
                dataLength: String(B),
                trimLeading: "false",
                trimTrailing: "true",
                dataType: "char",
                formatting: "Text",
                textTransform: "none"
            };
            for (k = 0; k < d.items.length; k++) {
                D = d.items[k];
                if (pui.f(D.value) && D.value.fieldName == h) {
                    d.items.splice(k, 1);
                    break
                }
            }
        }
        if (F != null) g["subfile message key"] = {
            fieldName: F,
            dataLength: "4",
            trimLeading: "false",
            trimTrailing: "true",
            dataType: "char",
            formatting: "Text",
            textTransform: "none"
        }
    }
    h = 0;
    k = null;
    F = pui.cnv.info.formats[b].ag - pui.cnv.info.formats[b].Eg +
        1;
    if (F > 1) {
        g["row height"] = String(Number(g["row height"]) * F);
        if (g.expanded != null || g.collapsed != null) {
            g["fold multiple"] = String(F);
            F = pui.cnv.info.formats[a].DB;
            D = pui.cnv.info.formats[a].zB;
            if (F != null) D = F;
            if (D != null && (D.substr(0, 2) == "CF" || D.substr(0, 2) == "CA")) {
                D = D.substr(2);
                if (D.substr(0, 1) == "0") D = D.substr(1);
                D = "F" + D;
                h = 20;
                if (e("grid")["single row zoom"] == true) g["single row zoom"] = "true";
                k = {
                    id: b + "_expander",
                    "field type": "image",
                    "image source": "/profoundui/proddata/images/icons/collapseall.gif",
                    "shortcut key": D,
                    cursor: "pointer",
                    "tool tip": "Collapse All",
                    onclick: 'getObj("' + b + '").grid.toggle(this)'
                };
                F = e("grid")["expander z index"];
                if (F != null) k["z index"] = F
            }
        }
    }
    F = s * i - N + l;
    D = u * o + n - e("grid")["left offset"];
    if (y < D) D = y;
    D -= h;
    g.top = F + "px";
    g.left = D + "px";
    y = u * (q - o + 1) + e("grid")["extra width"];
    n = (pui.cnv.info.formats[a].Uj + 1) * u + n - parseInt(g.left);
    o = y;
    if (n > y) o = n;
    o += h;
    g["column widths"] = String(o);
    d.items.push(g);
    if (k != null && e("grid")["expander icon"] != false) {
        k.top = parseInt(g.top) + 5 + "px";
        if (g["has header"] == "false") k.top = parseInt(k.top) -
            s - 4 + "px";
        k.left = parseInt(g.left) + 1 + "px";
        d.items.push(k)
    }
    for (k = 0; k < c.items.length; k++) {
        h = c.items[k];
        h.grid = b;
        h.column = "0";
        h.top = parseInt(h.top) - parseInt(g.top) - N + e("grid")["top offset"] + "px";
        h.left = parseInt(h.left) - parseInt(g.left) + "px";
        d.items.push(h)
    }
    if (i == r && z == null) if (!pui.cnv.TG(b)) {
        pui.cnv.lF(g, c.items);
        pui.cnv.RH({grid: g, uF: d, WG: w, XG: v, YG: E})
    }
    if (e("grid")["set heading font"] && w > 0) for (k = 0; k < I.length; k++) {
        h = I[k];
        if (h["field type"] == "output field") if (L != null || h.top == v || h.top == E && w >= 2) {
            n = e("grid")["header field class"];
            if (n != null) for (y = 1; y < 20; y++) {
                o = "css class";
                if (y > 1) o += " " + y;
                if (h[o] == null) {
                    h[o] = n;
                    break
                }
            } else {
                n = e("grid").properties;
                h["font family"] = n["font family"];
                if (n["header font family"] != null) h["font familiy"] = n["header font family"];
                h["font size"] = n["header font size"];
                h.color = n["header font color"];
                h["font weight"] = "bold"
            }
        }
    }
    L = pui.cnv.info.formats[a].options;
    h = null;
    if (L != null && L.length > 0) for (k = 0; k < c.items.length; k++) if (h == null || parseInt(h.column) > parseInt(c.items[k].column) || parseInt(h.column) == parseInt(c.items[k].column) &&
        parseInt(h.top) > parseInt(c.items[k].top) || parseInt(h.column) == parseInt(c.items[k].column) && parseInt(h.top) == parseInt(c.items[k].top) && parseInt(h.left) > parseInt(c.items[k].left)) if (c.items[k].visibility != "hidden") h = c.items[k];
    if ((e("grid")["show options as dropdown"] == true || e("grid")["show options as combo"] == true || e("grid")["show options as context menu"]) && L != null && L.length > 0 && h != null && h.column == "0" && h["field type"] == "textbox" && pui.f(h.value) && (h.value.dataType == "char" || h.value.dataType == "zoned") &&
        (h.value.dataLength == "1" || h.value.dataLength == "2")) {
        L.sort(function (V, X) {
            return isNaN(V.option) || isNaN(X.option) ? V.option < X.option ? -1 : 1 : V.option - X.option
        });
        if (e("grid")["show options as dropdown"] == true) h["field type"] = "select box";
        if (e("grid")["show options as combo"] == true) h["field type"] = "combo box";
        n = parseInt(h.top);
        if (!isNaN(n) && n >= 3) {
            n -= 3;
            h.top = n + "px"
        }
        n = ["mandatory entry", "mandatory fill", "valid values", "comparison operator", "comparison value", "range low", "range high", "allow blanks"];
        for (k =
                 0; k < n.length; k++) {
            q = n[k];
            h[q] != null && delete h[q]
        }
        n = [];
        y = [];
        if (e("grid")["show options as context menu"] != true) {
            n.push("");
            y.push("")
        }
        o = 1;
        for (k = 0; k < L.length; k++) {
            q = L[k];
            n.push(q.text);
            y.push(q.option);
            if (q.text.length > o) o = q.text.length
        }
        if (e("grid")["show options as combo"] == true) o = Number(h.value.dataLength);
        delete h["text transform"];
        if (e("grid")["show options as context menu"] != true) {
            h.choices = n.join(",");
            h["choice values"] = y.join(",");
            n = "btn";
            y = e("button type");
            if (f != null && e("windows")["button type"] !=
                null) y = e("windows")["button type"];
            if (y == null) y = "button";
            if (y == "hyperlink") n = "link";
            if (e("grid")["show options as combo"] == true) h.onselect = 'pui.click("' + n + 'Submit")'; else h.onchange = 'pui.click("' + n + 'Submit")';
            e = parseInt(h.width);
            u = o * u + 22;
            h.width = u + "px";
            e = u - e;
            if (e > 0) {
                u = g["column widths"].split(",");
                n = Number(u[0]);
                u[0] = String(n + e);
                g["column widths"] = u.join(",");
                if (g["column headings"] != null) {
                    y = g["column headings"].split(",");
                    if (y[0] == "Opt" || y[0] == "OPT") {
                        y[0] = "Option";
                        g["column headings"] = y.join(",")
                    }
                }
                if (u.length ==
                    1) {
                    for (k = 0; k < d.items.length; k++) {
                        n = d.items[k];
                        if (n.top == v || n.top == E && w >= 2) if (n["field type"] != "grid") {
                            u = parseInt(n.left);
                            n.left = u + e + "px"
                        }
                    }
                    for (k = 0; k < c.items.length; k++) {
                        v = c.items[k];
                        if (v != h) {
                            u = parseInt(v.left);
                            v.left = u + e + "px"
                        }
                    }
                } else {
                    c = parseInt(g.left) + n * 0.75;
                    for (k = 0; k < d.items.length; k++) {
                        n = d.items[k];
                        if (n.top == v || n.top == E && w >= 2) {
                            u = parseInt(n.left);
                            if (u > c) n.left = u + e + "px"
                        }
                    }
                }
            }
        } else {
            c = {};
            v = e("grid")["context menu animate"];
            E = e("grid")["context menu css class"];
            u = e("grid")["context menu option indent"];
            w = e("grid")["context menu hover image"];
            e = e("grid")["default double click"];
            c.id = b + "ContextMenu";
            c["field type"] = "menu";
            c.left = "450px";
            c.top = "0px";
            c.animate = v != null && v != "" ? v : "false";
            c["menu option indent"] = u != null && u != "" ? u : "10px";
            if (w != null && w != "") c["option hover image"] = w;
            c["css class"] = E != null && E != "" ? E : "";
            for (v = 0; v < n.length; v++) n[v] = n[v].trim();
            for (v = 0; v < y.length; v++) if (typeof y[v] === "string") y[v] = y[v].trim();
            c.choices = n.join(",");
            c["choice values"] = y.join(",");
            c.onoptionclick = 'var rowClicked = this.pui.properties["user defined data"];\npui.set("' +
                h.id + '." + rowClicked, value);\npui.click();';
            c.visibility = "hidden";
            d.items.push(c);
            g.onrowclick = 'applyProperty("' + c.id + '","user defined data",row);';
            if (e == true) g.onrowdblclick = 'pui.set("' + h.id + '." + row, "' + y[0] + '");\npui.click();';
            g["context menu id"] = c.id;
            u = g["column widths"].split(",");
            if (u.length > 1) {
                g.left = parseInt(g.left) + parseInt(u[0]) + "px";
                u[0] = "0";
                g["column widths"] = u.join(",")
            }
            h.visibility = "hidden"
        }
    }
    c = 0;
    v = null;
    for (k = 0; k < d.items.length; k++) {
        h = d.items[k];
        E = parseInt(h.top);
        e = (E - l) / s;
        if (h["field type"] !=
            "grid" && h.grid == null && e > r && h["css class"] != "stationary" && h["css class 2"] != "stationary" && h["auto arrange"] != "true") {
            e = (e - i) * (t - s);
            if (g["show paging controls"] == "true" || g["show paging controls"] == true) e += pui.Qj;
            E += e;
            h.top = parseInt(E) + "px";
            if (e > c) c = e
        }
        if (f != null && (h["field type"] == "panel" || h["field type"] == "css panel")) v = h
    }
    if (v != null) {
        if (c == 0 && (g["show paging controls"] == "true" || g["show paging controls"] == true)) c = pui.Qj;
        f = parseInt(v.height);
        f += parseInt(c);
        v.height = f + "px";
        if (c != 0) for (k = 0; k < d.items.length; k++) {
            h =
                d.items[k];
            if (h["auto arrange"] == "true") {
                E = parseInt(h.top);
                E += c;
                h.top = E + "px"
            }
        }
    }
    f = pui.cnv.info.formats[a].XC;
    if (f != null && f != "") g["cursor record number"] = pui.cnv.sg(f, 5, 0);
    f = pui.cnv.info.formats[a].$C;
    if (f != null && f != "") g["return mode"] = pui.cnv.vf(f, 1);
    f = pui.cnv.info.formats[a].cD;
    if (f != null) g["subfile record number"] = f;
    f = pui.cnv.info.formats[a].dD;
    if (f != null) g["subfile return rrn"] = f;
    pui.cnv.Ja.OI(b);
    g = pui.cnv.themes.ba("grid enhancements");
    if (g != null && typeof g == "function") {
        for (f = 0; f < d.items.length; f++) {
            h =
                d.items[f];
            if (h["field type"] == "grid") {
                var O = h;
                break
            }
        }
        g(d, O, L, pui.cnv.mh)
    }
};
pui.cnv.TG = function (b) {
    var a = [];
    b = pui.cnv.greenScreenDisplay.formats[b].fields;
    for (var c = 0; c < b.length; c++) {
        var d = b[c], e = d.col;
        d = d.length;
        if (e != null && d != null) for (var f = e; f < e + d; f++) {
            if (a[f] == true) return true;
            a[f] = true
        }
    }
    return false
};
pui.cnv.RH = function (b) {
    var a = b.grid, c = b.uF, d = b.WG, e = b.XG, f = b.YG, h = pui.cnv.themes.ba;
    if (!(!h("grid")["merge headings"] || d <= 0)) {
        b = a["column widths"].split(",");
        for (var g = [], l = [], n = 0, o = 0; o < b.length; o++) {
            g.push(n);
            n += parseInt(b[o]);
            l.push(n)
        }
        n = [];
        for (o = 0; o < d; o++) {
            n.push([]);
            for (var i = 0; i < b.length; i++) n[o].push([])
        }
        o = pui.cnv.getScreenWidth(c.screen["record format name"]);
        var r = h("column width");
        if (o == 132 && h("alt column width") != null) colWidth = h("alt column width");
        h = false;
        for (o = 0; o < c.items.length; o++) {
            var k =
                c.items[o];
            if (k["field type"] == "output field" && !pui.f(k.value) && typeof k.value == "string" && k.value.substr(0, 3) != "js:" || k["field type"] == "output field" && pui.Ia(k.value)) {
                if (pui.Ia(k.value)) h = true; else if (h) return;
                var q = -1;
                if (k.top == e && d == 1) q = 0;
                if (k.top == e && d == 2) q = 1;
                if (k.top == f && d == 2) q = 0;
                if (q != -1) {
                    i = parseInt(k.left) - parseInt(a.left);
                    var s = (pui.Ia(k.value) ? k.value.designValue.substr(1, k.value.designValue.length - 2) : k.value).length * r;
                    s = i + s / 2;
                    var t = -1;
                    for (i = 0; i < g.length; i++) if (s >= g[i] && s <= l[i]) {
                        t = i;
                        break
                    }
                    t !=
                    -1 && n[q][t].push(k)
                }
            }
        }
        e = [];
        f = [];
        for (o = 0; o < b.length; o++) {
            g = "";
            for (q = r = l = 0; q < d; q++) {
                s = n[q][o];
                for (i = 0; i < s.length; i++) {
                    r++;
                    k = s[i];
                    if (h) {
                        l = k.value.translations[0];
                        g = k.value.designValue
                    } else g = k.value
                }
            }
            if (r == 1) for (q = 0; q < d; q++) {
                s = n[q][o];
                for (i = 0; i < s.length; i++) {
                    k = s[i];
                    k.EF = true
                }
            } else {
                l = 0;
                g = ""
            }
            h && f.push(l);
            e.push(g)
        }
        a["column headings"] = h ? {translations: f, designValue: JSON.stringify(e)} : e.join(",");
        for (o = c.items.length - 1; o >= 0; o -= 1) c.items[o].EF == true && c.items.splice(o, 1)
    }
};
pui.cnv.lF = function (b, a) {
    a.sort(function (i, r) {
        return parseInt(i.left) - parseInt(r.left)
    });
    var c = pui.cnv.themes.ba("grid")["left offset"], d = parseInt(b["column widths"]), e = 0, f = [], h = 0, g;
    b["number of columns"] = String(Number(b["number of columns"]) - 1);
    for (var l = 0; l < a.length; l++) {
        var n = a[l];
        if (n.visibility == "hidden") {
            n.column = "0";
            var o = parseInt(n.width);
            if (isNaN(o) || o <= 0) o = 50;
            o -= 5;
            n.left = -o + "px"
        } else {
            b["number of columns"] = String(Number(b["number of columns"]) + 1);
            if (h > 0) {
                o = parseInt(n.left) - e - c;
                f.push(o);
                d -= o;
                e += o;
                if (g != null && g["field type"] == "textbox") if (parseInt(g.width) + parseInt(g.left) > o) g.left = parseInt(g.left) - 4 + "px"
            }
            n.left = parseInt(n.left) - e + "px";
            n.column = String(h);
            h++;
            g = n
        }
    }
    if (g != null && g["field type"] == "textbox") {
        c = parseInt(g.width);
        e = c + parseInt(g.left) + 20 - d;
        if (e > 0) {
            c -= e;
            if (c < 5) c = 5;
            g.width = c + "px"
        }
    }
    f.push(d);
    b["column widths"] = f.join(",")
};
pui.cnv.Ud = {};
pui.cnv.Ud.qs = function () {
    for (var b in pui.cnv.info.formats) pui.cnv.Ud.uE(b)
};
pui.cnv.Ud.uE = function (b) {
    var a = pui.cnv.info.formats[b].Ud;
    if (a != null) {
        for (var c = rd.We(b), d = c.items, e = pui.cnv.Ud.By(a); e != null;) {
            var f = a[e], h = c.Fy(e), g = c.Fy(f);
            if (h == null) {
                pui.cnv.Ra.add("Cannot find cursor progression field " + e + " in format " + b + ".", 20);
                return
            }
            if (g == null) {
                pui.cnv.Ra.add("Cannot find cursor progression field " + f + " in format " + b + ".", 20);
                return
            }
            d.splice(h + 1, 0, d[g]);
            g > h && g++;
            d.splice(g, 1);
            delete a[e];
            e = pui.cnv.Ud.By(a)
        }
        pui.cnv.Ud.getCount(a) > 0 && pui.cnv.Ra.add("Circular cursor progression in format " +
            b + ".", 10)
    }
};
pui.cnv.Ud.By = function (b) {
    for (fromField in b) if (b[b[fromField]] == null) return fromField;
    return null
};
pui.cnv.Ud.getCount = function (b) {
    var a = 0;
    for (fromField in b) a++;
    return a
};
pui.cnv.sg = function (b, a, c) {
    a = String(a);
    c = String(c);
    return {
        fieldName: b,
        dataLength: a,
        decPos: c,
        numSep: "false",
        zeroBalance: "false",
        zeroFill: "false",
        curSym: "",
        dataType: "zoned",
        formatting: "Number",
        units: "",
        negNum: "-999.00"
    }
};
pui.cnv.vf = function (b, a) {
    a = String(a);
    return {
        fieldName: b,
        dataLength: a,
        dataType: "char",
        formatting: "Text",
        trimLeading: "false",
        trimTrailing: "true",
        textTransform: "none"
    }
};
pui.cnv.Bi = function (b) {
    if (typeof b != "string") {
        if (typeof b == "number" && b < 10) b = "0" + b;
        b = "*IN" + b
    }
    return {fieldName: b, dataType: "indicator", formatting: "Indicator", indFormat: "1 / 0"}
};
pui.cnv.Zf = function (b) {
    function a(e) {
        if (e.substr(0, 1) == "'") e = e.substr(1);
        if (e.length > 0 && e.substr(e.length - 1, 1) == "'") e = e.substr(0, e.length - 1);
        return e
    }

    if (b == null) return null;
    if (typeof b == "string") return a(b); else {
        for (var c = [], d = 0; d < b.length; d++) c.push(a(b[d]));
        return c
    }
};
pui.cnv.lx = function (b) {
    if (pui.cnv.info.formats[b] == null) return 0;
    var a = pui.cnv.info.formats[b].lk;
    if (a == null) return 0;
    var c = pui.cnv.getScreenWidth(b), d = pui.cnv.info.formats[a].al;
    a = pui.cnv.info.formats[a].Uj - d;
    if (a < 0) a = 0;
    var e = pui.cnv.info.formats[b].bD;
    b = pui.cnv.info.formats[b].ZC;
    var f = 0;
    if (b != null) for (d = d; d < c;) {
        d + a <= c && f++;
        d += a + b
    }
    if (f < 1) f = 1;
    if (f > 1) e = e % f == 0 ? e / f : parseInt(e / f) + 1;
    return e
};
pui.cnv.Vm = function (b, a) {
    if (b.substr(0, 1) == "&") b = b.substr(1);
    var c = pui.cnv.greenScreenDisplay.formats[a].fields;
    if (c == null) return null;
    for (var d = 0; d < c.length; d++) {
        var e = c[d];
        if (e.name == b && e["field type"] == "P") if (e["data type"] == "A" || (e["data type"] == "R" || e["data type"] == " " || e["data type"] == null) && e.length != null && e.decimals == null) return pui.cnv.vf(b, e.length); else if (e.length != null && e.decimals != null) return pui.cnv.sg(b, e.length, e.decimals)
    }
    return null
};
pui.cnv.EH = function (b) {
    var a = pui.cnv.greenScreenDisplay.formats;
    for (var c in a) {
        ctl = a[c];
        var d = ctl.keywords;
        if (d != null) {
            for (var e = false, f = false, h = 0; h < d.length; h++) {
                var g = d[h];
                if (g.name == "WINDOW") e = true;
                if (g.name == "SFLCTL" && g.parms != null && g.parms[0] == b) f = true
            }
            if (f) return e
        }
    }
    return false
};
pui.cnv.gy = function (b) {
    for (var a = [], c = [], d = false, e = 0; e < b.parms.length; e++) a.push(b.parms[e]);
    b.parms = [];
    for (e = 0; e < a.length; e++) {
        b.u = a[e];
        var f = pui.cnv.r[b.name](b);
        if (f == false) d = true;
        if (f != null && typeof f == "object" && f.length != null && f.length > 0) for (var h = 0; h < f.length; h++) c.push(f[h])
    }
    b.parms = a;
    b.u = a[0];
    return d ? false : c.length == 0 ? true : c
};
pui.cnv.kg = function (b, a) {
    if (b == null) return false;
    for (var c = 0; c < b.length; c++) if (b[c].name == a) return true;
    return false
};
pui.cnv.kL = function (b, a, c) {
    for (var d = 1, e = a, f = false; !f;) {
        if (b[e] == c) f = true;
        if (b[e] == null) {
            b[e] = c;
            f = true
        }
        d++;
        e = a + " " + d
    }
};
pui.cnv.getScreenWidth = function (b) {
    var a;
    b = pui.cnv.info.formats[b];
    if (b != null) a = b.Vr;
    b = 80;
    if (pui.cnv.info.uc != null) b = a != null && pui.cnv.info.uc.Ah != null && pui.cnv.info.uc.Ah.cond == a ? pui.cnv.info.uc.Ah.cols : pui.cnv.info.uc.xf.cols;
    return b
};
pui.cnv.Ot = function (b) {
    var a;
    b = pui.cnv.info.formats[b];
    if (b != null) a = b.Vr;
    b = 24;
    if (pui.cnv.info.uc != null) b = a != null && pui.cnv.info.uc.Ah != null && pui.cnv.info.uc.Ah.cond == a ? pui.cnv.info.uc.Ah.rows : pui.cnv.info.uc.xf.rows;
    return b
};
pui.cnv.ZB = function (b, a) {
    var c, d = pui.cnv.info.formats[a];
    if (d != null) c = d.Vr;
    if (c != null) return c == b ? true : false;
    c = false;
    if (pui.cnv.info.uc != null) if (pui.cnv.info.uc.xf != null && pui.cnv.info.uc.xf.cond == b) c = true;
    return c ? true : false
};
pui.cnv.wu = function (b) {
    if (pui.cnv.Rv != true) {
        gc(document, "keydown", function (a) {
            a = a || window.event;
            if (a.keyCode == 32) pui.cnv.wr = true
        });
        pui.cnv.Rv = true
    }
    screenMask.msg = "Converting...";
    screenMask.show();
    jc({
        url: cc("PUI0001107.pgm"),
        method: "post",
        params: {mode: "MASS", dds: b ? "Y" : "N"},
        handler: function (a, c) {
            if (a == null) {
                var d = "Server response is invalid.";
                if (c != null && c.description != null) d += " " + c.description + "."; else if (c != null && c.message != null) d += " " + c.message + ".";
                screenMask.hide();
                pui.alert(d)
            } else if (a.success !=
                true && a.success != "true") {
                screenMask.hide();
                pui.alert(a.msg)
            } else {
                var e = a.target;
                pui.cnv.greenScreenDisplay = a;
                pui.cnv.mh = e.member;
                pui.cnv.Tn = b;
                pui.cnv.Xs();
                b && pui.cnv.Ja.dj("ALLINONE");
                Ext.getCmp("RecFormatsTabPanel").setActiveTab(0);
                d = pui.cnv.Ja.Om();
                if (d == null || d.length < 1) {
                    screenMask.hide();
                    d = "Member " + pui.cnv.mh + " has no record formats defined!";
                    pui.cnv.Ra.add(d, 40);
                    pui.alert(d);
                    pui.cnv.wr != true && setTimeout(function () {
                        pui.cnv.wu(b)
                    }, 100)
                } else {
                    R.nn(d);
                    rd.zs();
                    pui.cnv.Ud.qs();
                    pui.ka = pui.cnv.Ja.Jt();
                    pui.designer.Ea = false;
                    if (pui.cnv.Ea) pui.designer.Ea = true;
                    pui.designer.currentDisplay.library = e.library;
                    pui.designer.currentDisplay.file = e.file;
                    pui.designer.currentDisplay.member = e.member;
                    pui.designer.currentDisplay.text = a.text;
                    pui.designer.currentDisplay.comments = null;
                    pui.designer.currentDisplay.ifsFile = null;
                    pui.designer.currentDisplay.Eb = null;
                    pui.designer.currentDisplay.wf = null;
                    pui.designer.currentDisplay.cf = null;
                    pui.designer.currentDisplay.lj = true;
                    pui.designer.currentDisplay.gp = e.member;
                    pui.designer.currentDisplay.Zs =
                        a.text;
                    pui.designer.C.formats = {};
                    if (b) if (a.dds != null && a.dds.length > 0) {
                        pui.designer.C.split(a.dds);
                        setTimeout(function () {
                            rd.gm()
                        }, 10)
                    }
                    rd.Ce();
                    pui.ide.Qb();
                    setTimeout(function () {
                        screenMask.hide();
                        R.save({
                            library: pui.designer.currentDisplay.library,
                            file: pui.designer.currentDisplay.file,
                            member: pui.designer.currentDisplay.member,
                            text: pui.designer.currentDisplay.text,
                            comments: pui.designer.currentDisplay.comments,
                            NH: true,
                            replace: true,
                            cF: e.id,
                            onsuccess: function () {
                                pui.cnv.wr != true && pui.cnv.wu(b)
                            }
                        })
                    }, 20)
                }
            }
        }
    })
};
pui.cnv.Oz = function () {
    if (pui.cnv.Rv != true) {
        gc(document, "keydown", function (b) {
            b = b || window.event;
            if (b.keyCode == 32) pui.cnv.wr = true
        });
        pui.cnv.Rv = true
    }
    screenMask.msg = "Mass Merging...";
    screenMask.show();
    dc({
        url: cc("PUI0001102.pgm"), method: "post", params: {mode: "merge"}, handler: function (b) {
            pui.cnv.Ra.clear();
            b = b.replace(/''/g, "'");
            pui.display = null;
            try {
                eval(b)
            } catch (a) {
                screenMask.hide();
                if (a && (a.description || a.message)) {
                    b = a.description;
                    if (!b) b = a.message;
                    S.alert("Unable to open. Response is invalid. " + b + ".")
                } else S.alert("Unable to open. Response is invalid.");
                return
            }
            if (pui.display == null) {
                screenMask.hide();
                S.alert("Unable to open. Response is null.")
            } else if (typeof pui.display == "object" && pui.display.success == false && pui.display.msg != null) {
                screenMask.hide();
                S.alert(pui.display.msg)
            } else if (typeof pui.display != "object") {
                screenMask.hide();
                S.alert("Unable to open. Response is invalid.")
            } else {
                b = pui.display.text;
                if (b == null) b = "";
                var c = pui.display.origcomments;
                if (c == null) c = [];
                var d = pui.display.formats;
                if (d == null || typeof d != "object" || typeof d.length != "number") {
                    screenMask.hide();
                    S.alert("Unable to open. Response does not contain a list of record formats.")
                } else if (d.length < 1) {
                    screenMask.hide();
                    S.alert("Unable to open. No record formats returned.")
                } else if (d[0] == null || d[0].screen == null || typeof d[0].screen != "object" || d[0].items == null) {
                    screenMask.hide();
                    S.alert("Unable to open. Invalid response.")
                } else if (d[0].content != null) {
                    screenMask.hide();
                    S.alert("This is not a Rich Display File.")
                } else {
                    Ext.getCmp("RecFormatsTabPanel").setActiveTab(0);
                    rd.Uf(pui.display["canvas width"], pui.display["canvas height"]);
                    pui.designer.Ea = pui.display["long name aliases"] == true;
                    pui.ka = pui.display.origkeywords;
                    if (pui.ka == null) pui.ka = [];
                    S.si() || pui.ka.push("ALLINONE");
                    var e = pui.display.origdds;
                    if (e == null) e = [];
                    pui.designer.C.split(e);
                    R.nn(d);
                    d = pui.display.savefile;
                    e = pui.display.savemem;
                    var f = pui.display.mergeid;
                    pui.designer.currentDisplay.library = pui.display.savelib;
                    pui.designer.currentDisplay.file = d;
                    pui.designer.currentDisplay.member = e;
                    pui.designer.currentDisplay.text = b;
                    pui.designer.currentDisplay.comments = c;
                    pui.designer.currentDisplay.ifsFile =
                        null;
                    pui.designer.currentDisplay.Eb = null;
                    pui.designer.currentDisplay.wf = null;
                    pui.designer.currentDisplay.cf = null;
                    pui.designer.currentDisplay.lj = true;
                    rd.Ce();
                    pui.ide.Qb();
                    screenMask.hide();
                    setTimeout(function () {
                        rd.gm();
                        setTimeout(function () {
                            screenMask.hide();
                            pui.cnv.pn = true;
                            R.save({
                                library: pui.designer.currentDisplay.library,
                                file: pui.designer.currentDisplay.file,
                                member: pui.designer.currentDisplay.member,
                                text: pui.designer.currentDisplay.text,
                                comments: pui.designer.currentDisplay.comments,
                                QH: true,
                                replace: true,
                                SH: f,
                                onsuccess: function () {
                                    pui.cnv.wr != true && pui.cnv.Oz()
                                }
                            });
                            pui.cnv.pn = false
                        }, 20)
                    }, 10)
                }
            }
        }
    })
};
pui.cnv.r.ALIAS = function (b) {
    var a = pui.cnv.themes.ba("use aliases");
    if (a == null) a = true;
    if (a == true && b.u != "" && pui.f(b.item.value)) {
        pui.cnv.Ea = true;
        a = b.field.name.toUpperCase();
        b.item.value.longName = b.u;
        b.item.value.designValue = "[" + b.u + "]";
        if (b.format.screen && typeof b.format.screen == "object") for (var c in b.format.screen) {
            var d = b.format.screen[c];
            if (d != null && pui.f(d) && d.fieldName.toUpperCase() == a) {
                d.longName = b.u;
                d.designValue = "[" + b.u + "]"
            }
        }
        return true
    }
    return {rk: true}
};
pui.cnv.r.ALTHELP = function (b) {
    Vd = 1;
    if (b.u != null && typeof b.u == "string" && b.u.length >= 4) Vd = parseInt(b.u.substr(2));
    if (isNaN(Vd)) Vd = 1;
    if (Vd < 1 || Vd > 24) Vd = 1;
    pui.cnv.info.wk = "F" + Vd;
    return true
};
pui.cnv.r.BLANKS = function (b) {
    b.item["is blank"] = pui.cnv.Bi("*IN" + b.u);
    if (pui.cnv.info.formats[b.formatName].Yr == true || pui.cnv.info.formats[b.formatName].Io == true) pui.cnv.Ra.add("BLANKS used with OVRATR or PUTRETAIN.", 10, b); else for (var a = b.field.keywords, c = 0; c < a.length; c++) if (a[c].name == "OVRATR" || a[c].name == "PUTRETAIN") pui.cnv.Ra.add("BLANKS used with OVRATR or PUTRETAIN.", 10, b);
    return true
};
pui.cnv.r.CCSID = function () {
    return {rk: true}
};
pui.cnv.r.CHANGE = function (b) {
    var a = "changed", c = null;
    if (b.oa == "field") c = b.item;
    if (b.oa == "format") {
        c = pui.cnv.info.formats[b.formatName];
        if (c != null && c.ti) a = "subfile changed";
        c = b.format.screen
    }
    if (c == null) return false;
    b = b.u;
    b = "*IN" + b;
    c[a] = pui.cnv.Bi(b);
    return true
};
pui.cnv.r.CHECK = pui.cnv.r.AUTO = function (b) {
    if (b.ref == true && pui.cnv.kg(b.field.keywords, "DLTCHK")) return true;
    if (b.parms.length > 1) return pui.cnv.gy(b);
    if (b.u == "ER" || b.u == "ME") b.cond != null && pui.cnv.info.formats[b.formatName].Io == true && pui.cnv.Ra.add("Conditional CHECK(" + b.u + ") used with OVRATR.", 10, b);
    if (b.u == "ME") return [{N: "mandatory entry", on: "true", M: "false"}];
    if (b.u == "MF") return [{N: "mandatory fill", on: "true", M: "false"}];
    if (b.u == "LC") {
        if (b.cond != null) return false;
        b.item.value != null && b.item.value.textTransform !=
        null && delete b.item.value.textTransform;
        b.item["text transform"] != null && delete b.item["text transform"];
        return true
    }
    if (b.u == "RB" || b.u == "RAB") {
        var a = b.item.value;
        if (pui.f(a)) {
            if (a.formatting == "Text") a.blankFill = "true";
            if (a.formatting == "Number") a.numBlankFill = "true"
        }
        return [{N: "text align", on: "right", M: "left"}]
    }
    if (b.u == "RZ" || b.u == "RAZ") {
        if (b.cond != null) return false;
        b.item["text align"] = "right";
        a = b.item.value;
        if (a == null) return false;
        if (!pui.f(a)) return false;
        if (a.formatting == "Number") {
            a.zeroFill = "true";
            if (b.field["field type"] == "I") a.zeroFill = "false"
        }
        if (a.formatting == "Text") a.rjZeroFill = "true";
        return true
    }
    if (b.u == "RL") return [{N: "css class", on: "RTL", M: ""}];
    if (b.u == "ER" || b.u == "RA") {
        if (b.oa == "file") return pui.cnv.info.gj = true;
        if (b.oa == "format") return pui.cnv.info.formats[b.formatName].gj = true;
        if (b.oa == "field") return [{N: "auto advance", on: "true", M: "false"}]
    }
    if (b.u == "FE") return [{N: "prevent auto tab", on: "true", M: "false"}];
    if (b.u == "AB") {
        if (b.oa == "file") return pui.cnv.info.uk = true;
        if (b.oa == "format") return pui.cnv.info.formats[b.formatName].uk =
            true;
        if (b.oa == "field") return [{N: "allow blanks", on: "true", M: "false"}]
    }
    if (b.u == "VN") {
        if (b.oa == "file") return pui.cnv.info.wa = true;
        if (b.oa == "format") return pui.cnv.info.formats[b.formatName].wa = true;
        if (b.oa == "field") return [{N: "validate name", on: "true", M: "false"}]
    }
    return false
};
pui.cnv.r.CHGINPDFT = function (b) {
    if (b.parms == null || b.parms.length == 0 || b.u == null || b.u == "") {
        if (b.oa == "file") pui.cnv.info.Ql = false;
        if (b.oa == "format") pui.cnv.info.formats[b.formatName].Ql = false;
        return true
    }
    for (var a = null, c = 0; c < b.parms.length; c++) {
        var d = b.parms[c];
        if (d == "UL") {
            if (b.oa == "file") pui.cnv.info.Ql = true;
            if (b.oa == "format") pui.cnv.info.formats[b.formatName].Ql = true;
            if (a == null) a = true
        } else if (d == "FE") {
            if (b.oa == "file") pui.cnv.info.Su = true;
            if (b.oa == "format") pui.cnv.info.formats[b.formatName].Su = true;
            if (b.oa == "field") b.item["prevent auto tab"] = "true";
            if (a == null) a = true
        } else if (d != "CS") if (d == "LC") {
            if (b.oa == "file") pui.cnv.info.uu = true;
            if (b.oa == "format") pui.cnv.info.formats[b.formatName].uu = true;
            if (b.oa == "field") {
                b.item.value != null && b.item.value.textTransform != null && delete b.item.value.textTransform;
                b.item["text transform"] != null && delete b.item["text transform"]
            }
            if (a == null) a = true
        } else a = false
    }
    return a
};
pui.cnv.r.CHKMSGID = function (b) {
    if (b.ref == true && pui.cnv.kg(b.field.keywords, "DLTCHK")) return true;
    return false
};
pui.cnv.r.CLRL = function (b) {
    return [{N: "clear line", on: b.u, M: ""}]
};
pui.cnv.r.CNTFLD = function (b) {
    var a = Number(b.u);
    if (isNaN(a) || a <= 0) return false;
    var c = Math.ceil(b.field.length / a), d = pui.cnv.themes.ba, e = pui.cnv.getScreenWidth(b.formatName),
        f = d("column width");
    if (e == 132 && d("alt column width") != null) f = d("alt column width");
    var h = d("row height");
    if (e == 132 && d("alt row height") != null) h = d("alt row height");
    b.item["field type"] = "text area";
    b.item.width = a * f + "px";
    b.item.height = c * h + "px";
    return true
};
pui.cnv.r.COLOR = function (b) {
    return [{N: "css class", on: pui.cnv.themes.ba("css class prefix") + b.u, M: ""}]
};
pui.cnv.r.COMP = pui.cnv.r.CMP = function (b) {
    if (b.ref == true && pui.cnv.kg(b.field.keywords, "DLTCHK")) return true;
    if (b.parms == null || b.parms.length != 2) return false;
    var a = b.parms[0];
    b = pui.cnv.Zf(b.parms[1]);
    a = {
        EQ: "Equal",
        NE: "Not Equal",
        GT: "Greater Than",
        GE: "Greater Than or Equal",
        NL: "Greater Than or Equal",
        LT: "Less Than",
        LE: "Less Than or Equal",
        NG: "Less Than or Equal"
    }[a];
    if (a == null) return false;
    return [{N: "comparison operator", on: a, M: ""}, {N: "comparison value", on: b, M: ""}]
};
pui.cnv.r.CSRLOC = function (b) {
    var a = b.parms[1], c = b.format.screen;
    c["set cursor row"] = pui.cnv.sg(b.parms[0], 3, 0);
    c["set cursor column"] = pui.cnv.sg(a, 3, 0);
    if (b.cond != null && b.cond != "") c["set cursor condition"] = {
        fieldName: b.cond,
        dataType: "expression",
        formatting: "Indicator",
        indFormat: "true / false"
    };
    return true
};
pui.cnv.r.DATE = function (b) {
    var a = pui.cnv.getScreenWidth(b.formatName), c = pui.cnv.themes.ba("output field css class");
    if (a == 132 && pui.cnv.themes.ba("alt output field css class") != null) c = pui.cnv.themes.ba("alt output field css class");
    a = "js: currentDate()";
    if (b.parms[0] == "*YY" || b.parms[1] == "*YY") a = "js: currentDate(null, true)";
    b = [{N: "value", on: a, M: ""}];
    c = c;
    c != null && b.push({N: "css class", on: c, M: ""});
    return b
};
pui.cnv.r.TIME = function (b) {
    var a = pui.cnv.getScreenWidth(b.formatName);
    b = pui.cnv.themes.ba("output field css class");
    if (a == 132 && pui.cnv.themes.ba("alt output field css class") != null) b = pui.cnv.themes.ba("alt output field css class");
    a = [{N: "value", on: "js: currentTime()", M: ""}];
    b = b;
    b != null && a.push({N: "css class", on: b, M: ""});
    return a
};
pui.cnv.r.USER = function (b) {
    var a = pui.cnv.getScreenWidth(b.formatName);
    b = pui.cnv.themes.ba("output field css class");
    if (a == 132 && pui.cnv.themes.ba("alt output field css class") != null) b = pui.cnv.themes.ba("alt output field css class");
    a = [{N: "value", on: "js: currentUser()", M: ""}];
    b = b;
    b != null && a.push({N: "css class", on: b, M: ""});
    return a
};
pui.cnv.r.SYSNAME = function (b) {
    var a = pui.cnv.getScreenWidth(b.formatName);
    b = pui.cnv.themes.ba("output field css class");
    if (a == 132 && pui.cnv.themes.ba("alt output field css class") != null) b = pui.cnv.themes.ba("alt output field css class");
    a = [{N: "value", on: "js: getSystemName()", M: ""}];
    b = b;
    b != null && a.push({N: "css class", on: b, M: ""});
    return a
};
pui.cnv.r.DATFMT = function () {
    return {rk: true}
};
pui.cnv.r.DATSEP = function () {
    return {rk: true}
};
pui.cnv.r.TIMFMT = function () {
    return {rk: true}
};
pui.cnv.r.TIMSEP = function () {
    return {rk: true}
};
pui.cnv.r.DFT = pui.cnv.r.DFTVAL = function (b) {
    var a = b.item;
    value = b.u;
    if (value.substr(0, 1) == "'" && value.substr(value.length - 1, 1) == "'") value = value.substr(1, value.length - 2);
    a["default value"] = value;
    if (b.cond != null && b.cond != "") a["default value condition"] = {
        fieldName: b.cond,
        dataType: "expression",
        formatting: "Indicator",
        indFormat: "true / false"
    };
    return true
};
pui.cnv.r.DLTCHK = za(true);
pui.cnv.r.DLTEDT = za(true);
pui.cnv.r.DSPATR = function (b) {
    var a = pui.cnv.themes.ba("css class prefix");
    if (b.parms.length > 1) return pui.cnv.gy(b);
    if (b.cond != null && pui.cnv.info.formats[b.formatName].Io == true) pui.cnv.info.formats[b.formatName].vw != null && pui.cnv.Ra.add("Conditional DSPATR used with OVRATR.", 10, b); else b.cond != null && pui.cnv.info.formats[b.formatName].Yr == true && pui.cnv.Ra.add("Conditional DSPATR used with PUTRETAIN.", 10, b);
    b.u == "RI" && b.item != null && b.item.color != null && b.item["cursor row"] == "1" && pui.cnv.themes.ba("top line color") !=
    null && delete b.item.color;
    switch (b.u) {
        case "BL":
        case "HI":
        case "RI":
        case "UL":
        case "CS":
        case "SP":
            return [{N: "css class", on: a + b.u, M: ""}]
    }
    if (b.u == "PC") return [{N: "set focus", on: "true", M: "false"}];
    if (b.u == "MDT") return [{N: "set as modified", on: "true", M: "false"}];
    if (b.u == "ND") if (b.item["field type"] == "textbox" && b.cond == null) {
        b.item["field type"] = "password field";
        return true
    } else return b.item.visibility != null && b.cond != null ? [{
        N: "css class",
        on: a + "ND",
        M: ""
    }] : [{N: "visibility", on: "hidden", M: "visible"}];
    if (b.u ==
        "PR") {
        a = a + "PR";
        var c = true;
        if (pui.cnv.info.Ql == false) c = false;
        if (pui.cnv.info.formats[b.formatName].Ql == true) c = true;
        if (pui.cnv.info.formats[b.formatName].Ql == false) c = false;
        for (var d = 0; d < b.field.keywords.length; d++) {
            var e = b.field.keywords[d];
            if (e.name == "CHGINPDFT") if (e.parms == null || e.parms.length == 0) c = false; else for (var f = 0; f < e.parms.length; f++) if (b.parms[d] == "UL") c = true;
            if (e.name == "DSPATR") if (e.parms != null) for (f = 0; f < e.parms.length; f++) if (e.parms[f] == "UL") {
                c = false;
                break
            }
        }
        if (c) a += "-UL";
        return [{
            N: "read only",
            on: "true", M: "false"
        }, {N: "css class", on: a, M: ""}]
    }
    if (b.u != null && b.u.length > 1 && b.u.substr(0, 1) == "&") {
        a = b.u.substr(1);
        b.item["display attribute field"] = pui.cnv.vf(a, 1);
        if (pui.cnv.info.formats[b.formatName].Io == true) pui.cnv.info.formats[b.formatName].vw != null && pui.cnv.Ra.add("Variable DSPATR used with OVRATR.", 10, b); else pui.cnv.info.formats[b.formatName].Yr == true && pui.cnv.Ra.add("Variable DSPATR used with PUTRETAIN.", 10, b);
        return true
    }
    return false
};
pui.cnv.r.DSPMOD = function (b) {
    if (b.cond != null) return false;
    pui.cnv.info.formats[b.formatName].Vr = b.parms[0];
    return true
};
pui.cnv.r.DSPSIZ = function (b) {
    var a = b.parms;
    if (a.length == 1 && a[0] == "*DS4") {
        pui.cnv.info.uc = {xf: {rows: 27, cols: 132, cond: "*DS4"}};
        return true
    }
    if (a.length == 2) {
        if (a[0] == "*DS3" && a[1] == "*DS4") {
            pui.cnv.info.uc = {xf: {rows: 24, cols: 80, cond: "*DS3"}, Ah: {rows: 27, cols: 132, cond: "*DS4"}};
            return true
        }
        if (a[0] == "*DS4" && a[1] == "*DS3") {
            pui.cnv.info.uc = {xf: {rows: 27, cols: 132, cond: "*DS4"}, Ah: {rows: 24, cols: 80, cond: "*DS3"}};
            return true
        }
        if (Number(a[0]) == 27) {
            pui.cnv.info.uc = {xf: {rows: 27, cols: 132, cond: "*DS4"}};
            return true
        }
        pui.cnv.info.uc =
            {xf: {rows: 24, cols: 80, cond: "*DS3"}};
        return true
    }
    if (a.length == 3) {
        b = Number(a[0]);
        if (isNaN(b)) b = 24;
        var c = Number(a[1]);
        if (isNaN(c)) c = 80;
        var d = a[2];
        pui.cnv.info.uc = {xf: {rows: b, cols: c, cond: d}};
        return true
    }
    if (a.length == 4) {
        b = Number(a[0]);
        if (isNaN(b)) b = 24;
        c = Number(a[1]);
        if (isNaN(c)) c = 80;
        d = "*DS3";
        if (b == 27) d = "*DS4";
        var e = Number(a[2]);
        if (isNaN(e)) e = 24;
        var f = Number(a[2]);
        if (isNaN(f)) f = 80;
        a = "*DS3";
        if (e == 27) a = "*DS4";
        pui.cnv.info.uc = {xf: {rows: b, cols: c, cond: d}, Ah: {rows: e, cols: f, cond: a}};
        return true
    }
    if (a.length > 4) {
        b =
            Number(a[0]);
        if (isNaN(b)) b = 24;
        c = Number(a[1]);
        if (isNaN(c)) c = 80;
        d = a[2];
        e = Number(a[3]);
        if (isNaN(e)) e = 24;
        f = Number(a[4]);
        if (isNaN(f)) f = 80;
        a = a[5];
        if (a == null) {
            a = "*DS3";
            if (e == 27) a = "*DS4"
        }
        pui.cnv.info.uc = {xf: {rows: b, cols: c, cond: d}, Ah: {rows: e, cols: f, cond: a}};
        return true
    }
    pui.cnv.info.uc = {xf: {rows: 24, cols: 80, cond: "*DS3"}};
    return true
};
pui.cnv.r.DUP = function (b) {
    var a = b.u;
    if (a != null && a != "") {
        a = "*IN" + a;
        b.item["dup key response"] = pui.cnv.Bi(a)
    }
    return [{N: "allow dup key", on: "true", M: "false"}]
};
pui.cnv.r.EDTCDE = function (b) {
    if (b.ref == true && pui.cnv.kg(b.field.keywords, "DLTEDT")) return true;
    var a = b.item.value;
    if (!pui.f(a)) {
        if (a == "js: currentDate()") {
            if (b.u != "Y") b.item.value = 'js: currentDate("' + b.u + '")';
            return true
        }
        if (a == "js: currentDate(null, true)") {
            if (b.u != "Y") b.item.value = 'js: currentDate("' + b.u + '", true)';
            return true
        }
        return false
    }
    if (a.formatting != "Number") if (a.dataType == "reference") {
        a.formatting = "Number";
        a.textTransform != null && delete a.textTransform;
        a.trimLeading != null && delete a.trimLeading;
        a.trimTrailing != null && delete a.trimTrailing;
        a.numSep = "false";
        a.zeroBalance = "false";
        a.zeroFill = "false";
        a.curSym = "";
        a.units = "";
        a.negNum = "-999.00"
    } else return false;
    var c = Number(a.dataLength);
    if (isNaN(c) || c <= 0) if (a.dataType == "reference") {
        if (b.field != null) c = b.field.length;
        if (c == null || typeof c != "number" || isNaN(c) || c <= 0) return false
    } else return false;
    var d = b.u;
    if (d == null) return false;
    var e = "";
    if (b.parms.length >= 2) e = b.parms[1];
    a.zeroFill = "false";
    if (d >= "1" && d <= "4") a.negNum = "999.00";
    if (d >= "A" && d <= "D") a.negNum =
        "999.00 CR";
    if (d >= "J" && d <= "M") a.negNum = "999.00-";
    if (d >= "N" && d <= "Q") a.negNum = "-999.00";
    if (d == "1" || d == "A" || d == "J" || d == "N" || d == "2" || d == "B" || d == "K" || d == "O") a.numSep = "true";
    a.zeroBalance = d == "1" || d == "A" || d == "J" || d == "N" || d == "3" || d == "C" || d == "L" || d == "P" || b.field["field type"] == "I" ? "true" : "false";
    if (d == "Z") a.negNum = "999.00";
    if (d == "W" || d == "Y") {
        if (d == "Y" && c == 5) {
            a.edtWrd = "'0 /  / '";
            return true
        }
        if (d == "Y" && c == 7) {
            a.edtWrd = "' 0 /  /  '";
            return true
        }
        for (var f = b.field.keywords, h = false, g = 0; g < f.length; g++) if (f[g].name ==
            "EDTMSK") {
            h = true;
            break
        }
        if (d == "Y" && h) {
            a.edtWrd = "' 0/  /  '";
            return true
        }
        f = pui.cnv.themes.ba("default locale");
        delete a.numSep;
        delete a.zeroBalance;
        delete a.zeroFill;
        delete a.curSym;
        delete a.units;
        delete a.negNum;
        a.formatting = "Date";
        if (d == "W") if (c == 6) a.dateFormat = "Y/m"; else if (c == 8) a.dateFormat = "Y/m/d"; else return false;
        if (d == "Y") if (c == 4) {
            a.formatting = "Custom";
            a.customFunction = "";
            a.customPattern = "y/m"
        } else if (c == 6 && f == "en_US") a.dateFormat = "m/d/y"; else if (c == 6 && f != "en_US") a.dateFormat = "d/m/y"; else if (c ==
            8 && f == "en_US") a.dateFormat = "m/d/Y"; else if (c == 8 && f != "en_US") a.dateFormat = "d/m/Y"; else return false;
        a.locale = f
    }
    if (a.formatting == "Number") a.curSym = e;
    d >= "5" && d <= "9" && pui.cnv.Ra.add("User-defined edit code cannot be converted.", 10, b);
    d >= "1" && d <= "9" || d >= "A" && d <= "D" || d >= "J" && d <= "Q" || d >= "X" && d <= "Z" || pui.cnv.Ra.add("Invalid edit code.", 10, b);
    return true
};
pui.cnv.r.EDTMSK = function (b) {
    var a = b.item.value;
    if (!pui.f(a)) return false;
    if (a.formatting != "Number") if (a.dataType == "reference") {
        a.formatting = "Number";
        a.textTransform != null && delete a.textTransform;
        a.trimLeading != null && delete a.trimLeading;
        a.trimTrailing != null && delete a.trimTrailing;
        a.numSep = "false";
        a.zeroBalance = "false";
        a.zeroFill = "false";
        a.curSym = "";
        a.units = "";
        a.negNum = "-999.00"
    } else return false;
    a.edtMsk = b.u;
    return true
};
pui.cnv.r.EDTWRD = function (b) {
    if (b.ref == true && pui.cnv.kg(b.field.keywords, "DLTEDT")) return true;
    var a = b.item.value;
    if (!pui.f(a)) {
        a = b.field.keywords;
        for (var c = false, d = false, e = 0; e < a.length; e++) {
            if (a[e].name == "TIME") {
                c = true;
                break
            }
            if (a[e].name == "DATE") {
                d = true;
                break
            }
        }
        if (c) {
            if (b.u == "  :  :  ") return true;
            if (b.u == "'  :  :  '") return true;
            if (b.u == "0 :  :  ") return true;
            if (b.u == "'0 :  :  '") return true
        }
        if (d) {
            if (b.u == "  /  /  ") return true;
            if (b.u == "'  /  /  '") return true;
            if (b.u == "  /  /    ") return true;
            if (b.u ==
                "'  /  /    '") return true
        }
        return false
    }
    if (a.formatting != "Number") if (a.dataType == "reference") {
        a.formatting = "Number";
        a.textTransform != null && delete a.textTransform;
        a.trimLeading != null && delete a.trimLeading;
        a.trimTrailing != null && delete a.trimTrailing;
        a.numSep = "false";
        a.zeroBalance = "false";
        a.zeroFill = "false";
        a.curSym = "";
        a.units = "";
        a.negNum = "-999.00"
    } else return false;
    a.edtWrd = b.u;
    return true
};
pui.cnv.r.ENTFLDATR = function (b) {
    for (var a = "", c = 0; c < b.parms.length; c++) {
        var d = b.parms[c];
        if (d != "*CURSOR") if (d != "*NOCURSOR") {
            d = Zb(d);
            if (d != "") {
                if (d.length < 3) return false;
                if (d.substr(0, 1) != "(") return false;
                if (d.substr(d.length - 1, 1) != ")") return false;
                d = d.substr(1, d.length - 2);
                d = Zb(d);
                d = d.split(" ");
                if (d.length < 2) return false;
                if (d[0] != "*COLOR" && d[0] != "*DSPATR") return false;
                for (var e = 1; e < d.length; e++) a += " " + d[e]
            }
        }
    }
    a = Zb(a);
    if (a == "") a = "HI";
    if (b.oa == "file") pui.cnv.info.focusClass = a;
    if (b.oa == "format") {
        if (b.cond !=
            null) return false;
        pui.cnv.info.formats[b.formatName].focusClass = a
    }
    if (b.oa == "field") return [{N: "focus class", on: a, M: ""}];
    return true
};
pui.cnv.r.ERASE = function (b) {
    for (var a = b.format.screen, c = 1, d = ""; a["erase format" + d] != null;) {
        c++;
        d = " " + String(c)
    }
    for (var e = b.parms, f = 0; f < e.length; f++) {
        var h = Zb(e[f]);
        if (h != "") {
            a["erase format" + d] = h;
            if (b.cond != null && b.cond != "") a["erase condition" + d] = {
                fieldName: b.cond,
                dataType: "expression",
                formatting: "Indicator",
                indFormat: "1 / 0"
            };
            c++;
            d = " " + String(c)
        }
    }
    b = c - 1;
    a["erase formats"] = b + " format";
    if (b > 1) a["erase formats"] += "s";
    return true
};
pui.cnv.r.ERRMSG = pui.cnv.r.SFLMSG = function (b) {
    var a = b.item;
    if (b.name == "SFLMSG") a = b.format.screen;
    for (var c = false, d = 1, e = ""; !c;) {
        if (d > 1) e = " " + String(d);
        if (a["error message" + e] == null && a["error message id" + e] == null) c = true;
        d++
    }
    c = d - 1;
    d = b.parms[0];
    if (d.length >= 2 && d.substr(0, 1) == "'" && d.substr(d.length - 1, 1) == "'") d = d.substr(1, d.length - 2);
    var f = b.parms[1];
    if (f != null) {
        f = Number(f);
        if (isNaN(f)) f = ""
    } else f = "";
    if (f != "") f = pui.cnv.Bi(f);
    a["error message" + e] = d;
    a["error response" + e] = f;
    if (b.cond != null && b.cond != "") a["error condition" +
    e] = {fieldName: b.cond, dataType: "expression", formatting: "Indicator", indFormat: "1 / 0"};
    a["error enhanced mode" + e] = b.name == "SFLMSG" ? "1" : "0";
    a["error messages"] = c + " message";
    if (c > 1) a["error messages"] += "s";
    return true
};
pui.cnv.r.ERRMSGID = pui.cnv.r.SFLMSGID = function (b) {
    var a = b.item;
    if (b.name == "SFLMSGID") a = b.format.screen;
    for (var c = false, d = 1, e = ""; !c;) {
        if (d > 1) e = " " + String(d);
        if (a["error message" + e] == null && a["error message id" + e] == null) c = true;
        d++
    }
    c = d - 1;
    d = b.parms[0];
    var f = b.parms[1], h = "", g = f.split("/");
    if (g.length == 2) {
        f = g[1];
        h = g[0]
    }
    g = b.parms[2];
    var l = b.parms[3];
    if (g != null) {
        g = Number(g);
        if (isNaN(g)) {
            g = "";
            if (l == null) l = b.parms[2]
        }
    } else g = "";
    if (g != "") g = pui.cnv.Bi(g);
    if (l == null) l = "";
    if (l.substr(0, 1) != "&") l = "";
    if (l != "") l = pui.cnv.Vm(l,
        b.formatName);
    if (d.substr(0, 1) == "&") d = pui.cnv.vf(d.substr(1), 10);
    if (f.substr(0, 1) == "&") f = pui.cnv.vf(f.substr(1), 10);
    if (h != "" && h.substr(0, 1) == "&") h = pui.cnv.vf(h.substr(1), 10);
    a["error message id" + e] = d;
    a["error message file" + e] = f;
    a["error message library" + e] = h;
    a["replacement data" + e] = l;
    a["error response" + e] = g;
    a["error enhanced mode" + e] = b.name == "SFLMSGID" ? "1" : "0";
    if (b.cond != null && b.cond != "") a["error condition" + e] = {
        fieldName: b.cond,
        dataType: "expression",
        formatting: "Indicator",
        indFormat: "1 / 0"
    };
    a["error messages"] =
        c + " message";
    if (c > 1) a["error messages"] += "s";
    return true
};
pui.cnv.r.FLDCSRPRG = function (b) {
    var a = pui.cnv.info.formats[b.formatName];
    if (a.Ud == null) a.Ud = {};
    a.Ud[b.item.value.fieldName] = b.u;
    return true
};
pui.cnv.r.HLPARA = function (b) {
    var a = b.Yt;
    if (a == null) {
        if (pui.cnv.info.Re == null) pui.cnv.info.Re = 1;
        a = pui.cnv.info.Re
    }
    pui.cnv.info.Re = a;
    if (pui.cnv.info.formats[b.formatName].help == null) pui.cnv.info.formats[b.formatName].help = [];
    var c = pui.cnv.info.formats[b.formatName].help.length - 1;
    if (c < 0 || pui.cnv.info.formats[b.formatName].help[c].bo != a) {
        pui.cnv.info.formats[b.formatName].help.push({bo: a});
        c++
    }
    helpObject = pui.cnv.info.formats[b.formatName].help[c];
    if (b.parms[0] == "*RCD") helpObject.Lp = ""; else if (b.parms[0] ==
        "*FLD") {
        helpObject.Lp = b.parms[1];
        if (b.parms[2] != null) return false
    } else helpObject.Lp = b.parms[0] == "*CNST" ? {ZG: b.parms[1]} : b.parms.join(" ");
    return true
};
pui.cnv.r.HLPID = function (b) {
    if (pui.cnv.info.formats[b.formatName].Xt == null) pui.cnv.info.formats[b.formatName].Xt = {};
    pui.cnv.info.formats[b.formatName].Xt[b.u] = b.item.id;
    return true
};
pui.cnv.r.HLPPNLGRP = function (b) {
    var a = pui.cnv.Zf(b.parms[0]), c = pui.cnv.Zf(b.parms[1]), d;
    if (b.oa == "file") {
        pui.cnv.info.Vg = {};
        d = pui.cnv.info.Vg
    } else {
        d = b.Yt;
        if (d == null) {
            if (pui.cnv.info.Re == null) pui.cnv.info.Re = 0;
            pui.cnv.info.Re++;
            d = pui.cnv.info.Re
        }
        pui.cnv.info.Re = d;
        if (pui.cnv.info.formats[b.formatName].help == null) pui.cnv.info.formats[b.formatName].help = [];
        var e = pui.cnv.info.formats[b.formatName].help.length - 1;
        if (e < 0 || pui.cnv.info.formats[b.formatName].help[e].bo != d) {
            pui.cnv.info.formats[b.formatName].help.push({bo: d});
            e++
        }
        d = pui.cnv.info.formats[b.formatName].help[e]
    }
    if (d.ce == null) d.ce = [];
    d.ce.push({"help panel group": c, "help module": a});
    if (b.cond != null && b.cond != "") {
        e = d.ce.length - 1;
        d.ce[e]["help panel condition"] = {
            fieldName: b.cond,
            dataType: "expression",
            formatting: "Indicator",
            indFormat: "1 / 0"
        }
    }
    return true
};
pui.cnv.r.HLPRCD = function (b) {
    var a = pui.cnv.Zf(b.parms[0]), c = pui.cnv.Zf(b.parms[1]), d;
    if (b.oa == "file") {
        pui.cnv.info.Vg = {};
        d = pui.cnv.info.Vg
    } else {
        d = b.Yt;
        if (d == null) {
            if (pui.cnv.info.Re == null) pui.cnv.info.Re = 0;
            pui.cnv.info.Re++;
            d = pui.cnv.info.Re
        }
        pui.cnv.info.Re = d;
        if (pui.cnv.info.formats[b.formatName].help == null) pui.cnv.info.formats[b.formatName].help = [];
        var e = pui.cnv.info.formats[b.formatName].help.length - 1;
        if (e < 0 || pui.cnv.info.formats[b.formatName].help[e].bo != d) {
            pui.cnv.info.formats[b.formatName].help.push({bo: d});
            e++
        }
        d = pui.cnv.info.formats[b.formatName].help[e]
    }
    if (d.ce == null) d.ce = [];
    d.ce.push({"help record": a});
    e = d.ce.length - 1;
    if (c != null) d.ce[e]["help display file"] = c;
    if (b.cond != null && b.cond != "") d.ce[e]["help panel condition"] = {
        fieldName: b.cond,
        dataType: "expression",
        formatting: "Indicator",
        indFormat: "1 / 0"
    };
    return true
};
pui.cnv.r.HLPTITLE = function (b) {
    var a = pui.cnv.Zf(b.u);
    if (b.oa == "file") {
        pui.cnv.info.jy = a;
        return true
    }
    for (var c = b.format.screen, d = false, e = 1, f = ""; !d;) {
        if (e > 1) f = " " + String(e);
        if (c["help title" + f] == null) d = true;
        e++
    }
    d = e - 1;
    c["help title" + f] = a;
    if (b.cond != null && b.cond != "") c["help title condition" + f] = {
        fieldName: b.cond,
        dataType: "expression",
        formatting: "Indicator",
        indFormat: "1 / 0"
    };
    c["help titles"] = d + " help title";
    if (d > 1) c["help titles"] += "s";
    return true
};
pui.cnv.r.INZRCD = function () {
    return [{N: "initialize record", on: "true", M: "false"}]
};
pui.cnv.r.LOWER = function (b) {
    if (b.cond != null) return false;
    b.item.value != null && b.item.value.textTransform != null && delete b.item.value.textTransform;
    b.item["text transform"] != null && delete b.item["text transform"];
    return true
};
pui.cnv.r.MAPVAL = function (b) {
    for (var a = 0, c = 0; c < b.parms.length; c++) {
        var d = b.parms[c];
        d = Zb(d);
        if (d.length < 3) return false;
        if (d.substr(0, 1) != "(") return false;
        if (d.substr(d.length - 1, 1) != ")") return false;
        d = d.substr(1, d.length - 2);
        d = Zb(d);
        d = d.split(" ");
        if (d.length != 2) return false;
        if (d[1].toUpperCase() != "*BLANK" && d[1].toUpperCase() != "*BLANKS" && d[1] != "''") return false;
        d = Zb(d[0]);
        if (d.length < 3) return false;
        if (d.substr(0, 1) != "'") return false;
        if (d.substr(d.length - 1, 1) != "'") return false;
        d = d.substr(1, d.length -
            2);
        d = $b(d);
        a++;
        var e = "";
        if (a > 1) e = " " + a;
        b.item["blank value" + e] = d
    }
    return true
};
pui.cnv.r.MSGCON = function (b) {
    for (var a = b.item, c = false, d = 1, e = ""; !c;) {
        if (d > 1) e = " " + String(d);
        if (a["clear message" + e] == null) c = true;
        d++
    }
    c = d - 1;
    d = pui.cnv.info.YH;
    if (d == null) d = 0;
    d++;
    pui.cnv.info.YH = d;
    var f = Number(b.parms[0]);
    if (isNaN(f)) f = 132;
    a.value = pui.cnv.vf("MSGCON" + d, f);
    a.value.designValue = "[MSGCON" + d + "]";
    a["clear message" + e] = "0";
    a["message id" + e] = b.parms[1];
    d = b.parms[2];
    f = "";
    var h = d.split("/");
    if (h.length == 2) {
        d = h[1];
        f = h[0]
    }
    a["message file" + e] = d;
    a["message library" + e] = f;
    if (b.cond != null && b.cond != "") a["message condition" +
    e] = {fieldName: b.cond, dataType: "expression", formatting: "Indicator", indFormat: "1 / 0"};
    a.messages = c + " message";
    if (c > 1) a.messages += "s";
    return true
};
pui.cnv.r.MSGID = function (b) {
    for (var a = b.item, c = false, d = 1, e = ""; !c;) {
        if (d > 1) e = " " + String(d);
        if (a["clear message" + e] == null) c = true;
        d++
    }
    c = d - 1;
    d = false;
    if (b.parms.length == 1 && b.parms[0] == "*NONE") {
        a["clear message" + e] = "1";
        d = true
    }
    var f = null, h = null, g = null, l = "";
    if (b.parms.length == 2) {
        a["clear message" + e] = "0";
        h = b.parms[0];
        g = b.parms[1];
        d = true
    }
    if (b.parms.length == 3) {
        a["clear message" + e] = "0";
        f = b.parms[0];
        h = b.parms[1];
        g = b.parms[2];
        d = true
    }
    if (g != null) {
        var n = g.split("/");
        if (n.length == 2) {
            g = n[1];
            l = n[0]
        }
    }
    if (h != null && h.substr(0,
        1) == "&") h = pui.cnv.vf(h.substr(1), f != null ? 4 : 7);
    if (g != null && g.substr(0, 1) == "&") g = pui.cnv.vf(g.substr(1), 10);
    if (l != null && l != "" && l.substr(0, 1) == "&") l = pui.cnv.vf(l.substr(1), 10);
    if (d) {
        if (f == null) f = "";
        if (h == null) h = "";
        if (g == null) g = "";
        a["message id prefix" + e] = f;
        a["message id" + e] = h;
        a["message file" + e] = g;
        a["message library" + e] = l;
        if (b.cond != null && b.cond != "") a["message condition" + e] = {
            fieldName: b.cond,
            dataType: "expression",
            formatting: "Indicator",
            indFormat: "1 / 0"
        };
        a.messages = c + " message";
        if (c > 1) a.messages += "s";
        return true
    } else return false
};
pui.cnv.r.OVERLAY = function () {
    return [{N: "overlay", on: "true", M: "false"}]
};
pui.cnv.r.OVRATR = function (b) {
    if (b.oa == "format") {
        pui.cnv.info.formats[b.formatName].Io = true;
        pui.cnv.info.formats[b.formatName].vw = b.cond
    } else for (var a = b.field.keywords, c = 0; c < a.length; c++) {
        a[c].name == "DSPATR" && a[c].cond != null && pui.cnv.Ra.add("Conditional DSPATR used with OVRATR.", 10, b);
        a[c].name == "CHECK" && a[c].parms[0] == "ME" && a[c].cond != null && pui.cnv.Ra.add("Conditional CHECK(ME) used with OVRATR.", 10, b);
        a[c].name == "CHECK" && a[c].parms[0] == "ER" && a[c].cond != null && pui.cnv.Ra.add("Conditional CHECK(ER) used with OVRATR.",
            10, b);
        a[c].name == "DSPATR" && a[c].parms[0] != null && a[c].parms[0].substr(0, 1) == "&" && pui.cnv.Ra.add("Variable DSPATR used with OVRATR.", 10, b)
    }
    return [{N: "override attribute", on: "true", M: "false"}]
};
pui.cnv.r.OVRDTA = function () {
    return [{N: "override data", on: "true", M: "false"}]
};
pui.cnv.r.PROTECT = function () {
    return [{N: "protect", on: "true", M: "false"}]
};
pui.cnv.r.PUTOVR = function () {
    return [{N: "put override", on: "true", M: "false"}]
};
pui.cnv.r.PUTRETAIN = function (b) {
    if (b.oa == "format") pui.cnv.info.formats[b.formatName].Yr = true; else for (var a = b.field.keywords, c = 0; c < a.length; c++) {
        a[c].name == "DSPATR" && a[c].cond != null && pui.cnv.Ra.add("Conditional DSPATR used with PUTRETAIN.", 10, b);
        a[c].name == "DSPATR" && a[c].parms[0] != null && a[c].parms[0].substr(0, 1) == "&" && pui.cnv.Ra.add("Variable DSPATR used with PUTRETAIN.", 10, b)
    }
    return [{N: "put retain", on: "true", M: "false"}]
};
pui.cnv.r.RANGE = function (b) {
    if (b.ref == true && pui.cnv.kg(b.field.keywords, "DLTCHK")) return true;
    if (b.parms == null || b.parms.length != 2) return false;
    var a = pui.cnv.Zf(b.parms[0]);
    b = pui.cnv.Zf(b.parms[1]);
    return [{N: "range low", on: a, M: ""}, {N: "range high", on: b, M: ""}]
};
pui.cnv.r.REFFLD = function (b) {
    var a = b.parms.join(" ");
    if (pui.f(b.item.value)) {
        if (b.item.value.refField != null && b.item.value.refField != "") a += " " + b.item.value.refField;
        b.item.value.refField = a;
        return true
    } else if (pui.f(b.item.html)) {
        if (b.item.html.refField != null && b.item.html.refField != "") a += " " + b.item.html.refField;
        b.item.html.refField = a;
        return true
    } else return false
};
pui.cnv.r.RTNCSRLOC = function (b) {
    var a = true, c = b.parms[0], d = b.parms[1], e = b.parms[2];
    if (c == "*RECNAME") {
        c = b.parms[1];
        d = b.parms[2];
        e = b.parms[3]
    }
    var f = null, h = null;
    if (c == "*WINDOW" || c == "*MOUSE") {
        d = c = null;
        f = b.parms[1];
        h = b.parms[2];
        e = null;
        if (b.parms[3] != null) a = false
    }
    b = b.format.screen;
    if (c != null) {
        if (c.substr(0, 1) != "&") return false;
        c = c.substr(1);
        b["return cursor record"] = pui.cnv.vf(c, 10)
    }
    if (d != null) {
        if (d.substr(0, 1) != "&") return false;
        d = d.substr(1);
        b["return cursor field"] = pui.cnv.vf(d, 10)
    }
    if (e != null) {
        if (e.substr(0,
            1) != "&") return false;
        e = e.substr(1);
        b["return cursor position"] = pui.cnv.sg(e, 4, 0)
    }
    if (f != null) {
        if (f.substr(0, 1) != "&") return false;
        f = f.substr(1);
        b["return cursor row"] = pui.cnv.sg(f, 3, 0)
    }
    if (h != null) {
        if (h.substr(0, 1) != "&") return false;
        h = h.substr(1);
        b["return cursor column"] = pui.cnv.sg(h, 3, 0)
    }
    return a
};
pui.cnv.r.RTNDTA = function () {
    return [{N: "return data", on: "true", M: "false"}]
};
pui.cnv.r.SETOF = pui.cnv.r.SETOFF = function (b) {
    var a = b.format.screen;
    b = b.u;
    b = "*IN" + b;
    for (var c = false, d = 1, e = ""; !c;) {
        if (d > 1) e = " " + String(d);
        if (a["set off" + e] == null) c = true;
        d++
    }
    a["set off" + e] = pui.cnv.Bi(b);
    return true
};
pui.cnv.r.SLNO = function (b) {
    b.format.screen["starting line"] = b.u;
    var a = Number(b.u);
    if (isNaN(a) || a < 1 || a > 27) return false;
    pui.cnv.info.formats[b.formatName].Lo = a;
    return true
};
pui.cnv.r.TEXT = function (b) {
    return [{N: "description", on: pui.cnv.Zf(b.u), M: ""}]
};
pui.cnv.r.VALUES = function (b) {
    if (b.ref == true && pui.cnv.kg(b.field.keywords, "DLTCHK")) return true;
    return [{N: "valid values", on: pui.cnv.Zf(b.parms).join(","), M: ""}]
};
pui.cnv.r.VLDCMDKEY = function (b) {
    if (b.oa == "file") {
        pui.cnv.info.ds = b.u;
        return true
    }
    if (b.oa == "format") {
        b.format.screen["valid command key"] = pui.cnv.Bi("*IN" + b.u);
        return true
    }
    return false
};
pui.cnv.r.INDARA = function (b) {
    if (pui.cnv.Tn) return true;
    return pui.cnv.Ja.dj(b)
};
pui.cnv.r.REF = function (b) {
    if (pui.cnv.Tn) return true;
    return pui.cnv.Ja.dj(b)
};
pui.cnv.r.SNGCHCFLD = pui.cnv.r.MLTCHCFLD = pui.cnv.r.PSHBTNFLD = function (b) {
    function a() {
        var L = I * (4 + B + n);
        if (b.name == "PSHBTNFLD") {
            var N = c("button width") + I * (2 + n);
            if (N > L) L = N
        }
        if (g != null) {
            F++;
            v += L;
            if (F > g) {
                F = 1;
                v = y;
                w += z
            }
        } else {
            D++;
            w += z;
            if (D > l) {
                D = 1;
                w = E;
                v += L
            }
        }
    }

    var c = pui.cnv.themes.ba, d = [], e = b.item.value, f = c("show fkey name as tool tip");
    if (f != true) f = false;
    for (var h = false, g = null, l = null, n = 0, o = 0; o < b.parms.length; o++) {
        var i = b.parms[o];
        if (i == "*AUTOENT") h = true;
        if (i.substr(0, 1) == "(" && i.substr(i.length - 1, 1) == ")") {
            i = i.substr(1,
                i.length - 2);
            i = i.split(" ");
            if (i.length == 2) {
                if (i[0] == "*NUMCOL") g = parseInt(i[1]);
                if (i[0] == "*NUMROW") l = parseInt(i[1]);
                if (i[0] == "*GUTTER") n = parseInt(i[1])
            }
        }
    }
    if (g == null && l == null) if (b.name == "PSHBTNFLD") l = 1; else g = 1;
    var r = b.field.keywords, k = [], q = [], s = [], t = {};
    for (o = 0; o < r.length; o++) {
        var u = r[o];
        if (u.name == "CHOICE" || u.name == "PSHBTNCHC") k.push(u);
        u.name == "CHCAVAIL" && q.push(u);
        u.name == "CHCUNAVAIL" && s.push(u);
        if (u.name == "CHCCTL") t[u.parms[0]] = u.parms[1].substr(1)
    }
    pui.cnv.Ja.TI();
    if (b.name == "MLTCHCFLD" || b.name ==
        "PSHBTNFLD") pui.cnv.Ja.addItem({
        id: e.fieldName,
        "field type": "textbox",
        value: e,
        left: "0px",
        top: "-30px",
        visibility: "hidden"
    });
    var w = parseInt(b.item.top), v = parseInt(b.item.left), E = w, y = v, F = 1, D = 1, B = 0;
    r = 0;
    o = pui.cnv.getScreenWidth(b.formatName);
    var I = c("column width");
    if (o == 132 && c("alt column width") != null) I = c("alt column width");
    var z = c("row height");
    if (o == 132 && c("alt row height") != null) z = c("alt row height");
    for (o = 0; o < k.length; o++) {
        u = k[o];
        var H = u.parms[0];
        i = u.parms[1];
        if (i.length >= 2 && i.substr(0, 1) == "'" &&
            i.substr(i.length - 1, 1) == "'") {
            i = i.substr(1, i.length - 2);
            i = i.replace(">", "")
        }
        B = r;
        r = i.length;
        i = Zb(i);
        if (i.substr(0, 1) == "&") {
            r = "[" + i.substr(1) + "]";
            i = pui.cnv.Vm(i, b.formatName);
            i.designValue = r;
            r = Number(i.dataLength)
        }
        s = false;
        var J = null;
        if (b.name == "PSHBTNFLD") {
            if (u.parms[2] == "*SPACEB") s = true;
            if (u.parms[3] == "*SPACEB") s = true;
            if (u.parms[2] != null && u.parms[2] != "*SPACEB") J = u.parms[2]
        } else if (u.parms[2] == "*SPACEB") s = true;
        if (o > 0) {
            a();
            s && a()
        }
        s = {};
        s.id = b.item.id + "_choice" + H;
        d.push(s);
        if (b.name == "SNGCHCFLD") {
            s["field type"] =
                "radio button";
            s.value = H;
            s["radio button group"] = e;
            s.label = i
        }
        if (b.name == "MLTCHCFLD") {
            s["field type"] = "checkbox";
            if (t[H] != null) s.value = pui.cnv.sg(t[H], 1, 0);
            s["checked value"] = "1";
            s["unchecked value"] = "0";
            s.label = i
        }
        if (b.name == "PSHBTNFLD") {
            s["field type"] = c("button type");
            if (s["field type"] == null) fieldType = "button";
            if (s["field type"] == "styled button") s["button style"] = c("button style");
            var K = c("button text align");
            if (K != null) s["text align"] = K;
            s.value = i;
            if (t[H] != null) s.response = pui.cnv.sg(t[H], 1, 0);
            H =
                null;
            if (J != null) {
                if (J.substr(0, 2) == "CF" || J.substr(0, 2) == "CA") {
                    i = Number(J.substr(2));
                    isNaN(i) || (H = "F" + i)
                }
                if (J.substr(0, 2) == "CA" || J == "HELP") s["bypass validation"] = "true";
                if (J == "HELP") if (pui.cnv.info.wk != null) {
                    s["shortcut key"] = pui.cnv.info.wk;
                    if (f) s["tool tip"] = pui.cnv.info.wk
                } else {
                    s["shortcut key"] = "Alt-F1";
                    if (f) s["tool tip"] = "Alt-F1"
                }
                if (J == "PAGEDOWN" || J == "ROLLUP") H = "PageDown";
                if (J == "PAGEUP" || J == "ROLLDOWN") H = "PageUp";
                if (J == "CLEAR") H = "Pause/Break";
                if (J == "PRINT") H = "PrtScn";
                if (J == "Submit") H = "Enter"
            }
            if (H !=
                null) {
                s["shortcut key"] = H;
                if (f) s["tool tip"] = H
            }
            s.width = c("button width") + "px";
            J = c("button height");
            if (J == null) J = 23;
            s.height = J + "px";
            s.onclick = 'pui.setPSHBTNFLD("' + e.fieldName + '", this);'
        }
        s.left = v + "px";
        s.top = w + "px";
        if (u.cond != null) s.visibility = {
            fieldName: u.cond,
            dataType: "expression",
            formatting: "Indicator",
            indFormat: "visible / hidden"
        };
        for (J = u = 0; J < q.length; J++) {
            i = q[J].parms[0];
            H = q[J].cond;
            if (i.substr(0, 1) == "(" && i.substr(i.length - 1, 1) == ")") {
                i = i.substr(1, i.length - 2);
                i = i.split(" ");
                for (p = 1; p < i.length; p++) {
                    K =
                        i[p];
                    prop = "css class";
                    if (u > 0) prop += " " + u;
                    u++;
                    s[prop] = H == null ? K : {
                        fieldName: H,
                        dataType: "expression",
                        formatting: "Indicator",
                        indFormat: "Custom Values",
                        customTrue: K,
                        customFalse: ""
                    }
                }
            }
        }
        if (h) s.onclick = 'pui.click("btnSubmit")';
        pui.cnv.Ja.addItem(s)
    }
    if (b.name == "MLTCHCFLD") {
        f = "";
        for (o = 0; o < d.length; o++) {
            if (f != "") f += ", ";
            f += '"' + d[o].id + '"'
        }
        if (f != "") {
            f = 'pui.setMLTCHCFLD("' + e.fieldName + '", [' + f + "]);";
            pui.cnv.Ja.bE("onsubmit", f)
        }
    }
};
pui.cnv.r.CHOICE = pui.cnv.r.PSHBTNCHC = pui.cnv.r.CHCAVAIL = pui.cnv.r.CHCCTL = za(true);
pui.cnv.r.OPENPRT = za(null);
pui.cnv.r.BLINK = za(null);
pui.cnv.r.ALARM = za(null);
pui.cnv.r.MSGALARM = za(null);
pui.cnv.r.ALWGPH = za(null);
pui.cnv.r.LOCK = za(null);
pui.cnv.r.INDTXT = za(null);
pui.cnv.r.ERRSFL = za(null);
pui.cnv.r.USRRSTDSP = za(null);
pui.cnv.r.KEEP = za(null);
pui.cnv.r.MSGLOC = za(null);
pui.cnv.r.CSRINPONLY = za(null);
pui.cnv.r.HTML = za(null);
pui.cnv.r.FRCDTA = za(null);
pui.cnv.r.HLPFULL = za(null);
pui.cnv.r.LOGINP = za(null);
pui.cnv.r.LOGOUT = za(null);
pui.cnv.r.CHCUNAVAIL = za(null);
pui.cnv.r.WRDWRAP = za(null);
pui.cnv.r.RETLCKSTS = za(null);
pui.cnv.r.SFL = function (b) {
    return pui.cnv.info.formats[b.formatName].ti = true
};
pui.cnv.r.SFLCTL = function (b) {
    pui.cnv.info.formats[b.formatName].lk = b.u;
    return true
};
pui.cnv.r.SFLPAG = function (b) {
    pui.cnv.info.formats[b.formatName].bD = Number(b.u);
    return true
};
pui.cnv.r.SFLDSP = function () {
    return [{N: "display subfile", on: "true", M: "false"}]
};
pui.cnv.r.SFLDSPCTL = function () {
    return [{N: "display control record", on: "true", M: "false"}]
};
pui.cnv.r.SFLCLR = function () {
    return [{N: "clear subfile", on: "true", M: "false"}]
};
pui.cnv.r.SFLINZ = function () {
    return [{N: "initialize subfile", on: "true", M: "false"}]
};
pui.cnv.r.SFLRNA = function () {
    return [{N: "subfile records not active", on: "true", M: "false"}]
};
pui.cnv.r.SFLDLT = function () {
    return [{N: "delete subfile", on: "true", M: "false"}]
};
pui.cnv.r.SFLNXTCHG = function () {
    return [{N: "subfile next changed", on: "true", M: "false"}]
};
pui.cnv.r.SFLSIZ = function (b) {
    if (b.u == null) return false;
    var a = Number(b.u);
    if (isNaN(a)) {
        a = b.u;
        if (a.substr(0, 1) == "&") {
            a = a.substr(1);
            b.format.screen["subfile size"] = pui.cnv.sg(a, 5, 0);
            return true
        }
    } else return [{N: "subfile size", on: String(a), M: ""}];
    return false
};
pui.cnv.r.SFLCSRRRN = function (b) {
    var a = b.u;
    if (typeof a != "string") return false;
    if (a.substr(0, 1) != "&") return false;
    a = a.substr(1);
    pui.cnv.info.formats[b.formatName].XC = a;
    return true
};
pui.cnv.r.SFLEND = function (b) {
    pui.cnv.info.formats[b.formatName].YC = b;
    return true
};
pui.cnv.r.SFLRCDNBR = function (b) {
    var a = b.item.value;
    if (!pui.f(a)) return false;
    pui.cnv.info.formats[b.formatName].cD = a;
    if (b.parms[0] == "*TOP" || b.parms[1] == "*TOP") b.format.screen["position at top"] = "true";
    if (b.parms[0] == "CURSOR" || b.parms[1] == "CURSOR") b.format.screen["place cursor"] = "true";
    return true
};
pui.cnv.r.SFLSCROLL = function (b) {
    var a = b.item.value;
    if (!pui.f(a)) return false;
    pui.cnv.info.formats[b.formatName].dD = a;
    return true
};
pui.cnv.r.SFLMSGRCD = function (b) {
    var a = Number(b.u);
    if (isNaN(a) || a <= 0) return false;
    pui.cnv.info.formats[b.formatName].yw = a;
    return true
};
pui.cnv.r.SFLPGMQ = function (b) {
    var a = b.u;
    if (a == null || a == "") a = "10";
    a = Number(a);
    if (a != 10 && a != 276) a = 10;
    var c = pui.cnv.info.formats[b.formatName];
    c.Jo = b.item.value.fieldName;
    c.zw = a;
    return true
};
pui.cnv.r.SFLMSGKEY = function (b) {
    pui.cnv.info.formats[b.formatName].aD = b.item.value.fieldName;
    return true
};
pui.cnv.r.SFLLIN = function (b) {
    pui.cnv.info.formats[b.formatName].ZC = Number(b.u);
    return false
};
pui.cnv.r.SFLCSRPRG = function (b) {
    b.format.screen["cursor progression"] = "top to bottom";
    return true
};
pui.cnv.r.SFLMODE = function (b) {
    var a = b.u;
    if (typeof a != "string") return false;
    if (a.substr(0, 1) != "&") return false;
    a = a.substr(1);
    pui.cnv.info.formats[b.formatName].$C = a;
    return true
};
pui.cnv.r.SFLFOLD = function (b) {
    if (b.u != null) {
        pui.cnv.info.formats[b.formatName].DB = b.u;
        pui.cnv.themes.ba("grid")["fold button"] == true && pui.cnv.Yd.add({
            name: b.u,
            oa: "format",
            format: b.format,
            formatName: b.formatName,
            CB: true
        })
    }
    return [{N: "expanded", on: "true", M: "false"}]
};
pui.cnv.r.SFLDROP = function (b) {
    if (b.u != null) {
        pui.cnv.info.formats[b.formatName].zB = b.u;
        pui.cnv.themes.ba("grid")["fold button"] == true && pui.cnv.Yd.add({
            name: b.u,
            oa: "format",
            format: b.format,
            formatName: b.formatName,
            yB: true
        })
    }
    return [{N: "collapsed", on: "true", M: "false"}]
};
pui.cnv.r.WINDOW = function (b) {
    var a = b.format.screen;
    if (b.parms.length == 1) {
        a["window reference"] = b.u;
        pui.cnv.info.formats[b.formatName].Va = {};
        pui.cnv.info.formats[b.formatName].Va.tl = b.u;
        if (pui.cnv.info.Fo == null) pui.cnv.info.Fo = {};
        if (pui.cnv.info.Fo[b.u] == null) pui.cnv.info.Fo[b.u] = [];
        pui.cnv.info.Fo[b.u].push(b.formatName);
        return true
    }
    a["show as window"] = "true";
    var c = null, d = null, e, f;
    if (b.parms[0] == "*DFT") {
        e = Number(b.parms[1]);
        f = Number(b.parms[2]);
        a["center window"] = "true"
    } else {
        c = b.parms[0];
        d = b.parms[1];
        e = Number(b.parms[2]);
        f = Number(b.parms[3]);
        if (c != null) a["window top"] = c.substr(0, 1) == "&" ? pui.cnv.Vm(c, b.formatName) : c;
        if (d != null) a["window left"] = d.substr(0, 1) == "&" ? pui.cnv.Vm(d, b.formatName) : d
    }
    c = pui.cnv.themes.ba("windows");
    if (c["mask screen"] == false) a["mask screen"] = "false";
    a = pui.cnv.getScreenWidth(b.formatName);
    d = pui.cnv.themes.ba("column width");
    if (a == 132 && pui.cnv.themes.ba("alt column width") != null) d = pui.cnv.themes.ba("alt column width");
    var h = pui.cnv.themes.ba("row height");
    if (a == 132 && pui.cnv.themes.ba("alt row height") !=
        null) h = pui.cnv.themes.ba("alt row height");
    a = pui.cnv.info.formats[b.formatName].LK;
    if (a == null) a = "";
    h = h * e + c["top offset"] + c["bottom offset"];
    f = d * (f + 2) + c["left offset"] + c["right offset"];
    d = {};
    d.height = h;
    d.width = f;
    d.lC = e;
    d.panel = {
        id: b.formatName,
        "field type": "panel",
        "panel style": c["panel style"],
        value: a,
        color: c["title color"],
        "font size": c["title font size"],
        "text align": c["title text align"],
        left: "5px",
        top: "5px",
        height: h + "px",
        width: f + "px",
        "z index": "8",
        "locked in place": "true"
    };
    if (c["panel type"] ==
        "css panel") {
        d.panel["field type"] = "css panel";
        delete d.panel["panel style"];
        d.panel["header theme"] = "B - Blue";
        if (c["header theme"] != null) d.panel["header theme"] = c["header theme"];
        d.panel["body theme"] = "C - Gray";
        if (c["body theme"] != null) d.panel["body theme"] = c["body theme"];
        if (c["has header"] != null) d.panel["has header"] = c["has header"];
        if (c["header height"] != null) d.panel["header height"] = c["header height"];
        if (c["straight edge"] != null) d.panel["straight edge"] = c["straight edge"]
    }
    if (c["css class"]) d.panel["css class"] =
        c["css class"];
    b.format.items.push(d.panel);
    pui.cnv.info.formats[b.formatName].Va = d;
    return true
};
pui.cnv.r.WDWTITLE = function (b) {
    for (var a = null, c = 0; c < b.parms.length; c++) {
        var d = b.parms[c];
        if (d.length >= 3 && d.substr(0, 1) == "(" && d.substr(d.length - 2, 2) == ");") d = d.substr(0, d.length - 1);
        if (d.substr(0, 1) == "(" && d.substr(d.length - 1, 1) == ")") {
            d = d.substr(1, d.length - 2);
            if (d.substr(0, 6) == "*TEXT ") {
                d = Zb(d.substr(6));
                if (d.length >= 2 && d.substr(0, 1) == "'" && d.substr(d.length - 1, 1) == "'") d = d.substr(1, d.length - 2); else {
                    var e = d.indexOf(")");
                    if (e >= 0) d = d.substr(0, e)
                }
                if (d != "") a = d
            }
        }
    }
    if (a == null) {
        pui.cnv.Ra.add("Window title not specified.",
            10, b);
        return false
    }
    if (a.substr(0, 1) == "&") {
        a = pui.cnv.Vm(a, b.formatName);
        if (a == null) {
            pui.cnv.Ra.add("Window title field not declared.", 10, b);
            return false
        }
        a.designValue = "[" + a.fieldName + "]"
    }
    b = pui.cnv.info.formats[b.formatName];
    b.LK = a;
    if (b.Va != null) b.Va.panel.value = a;
    return true
};
pui.cnv.r.WDWBORDER = za(null);
pui.cnv.r.RMVWDW = function () {
    return [{N: "remove window", on: "true", M: "false"}]
};
pui.cnv.r.ASSUME = function () {
    return [{N: "assume", on: "true", M: "false"}]
};
